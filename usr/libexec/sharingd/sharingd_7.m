uint64_t sub_10064F67C(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char v43;
  unint64_t v44;
  BOOL v45;
  uint64_t v46;
  unint64_t *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;

  v64 = type metadata accessor for SFNWInterfaceType();
  v56 = *(void *)(v64 - 8);
  v8 = __chkstk_darwin(v64);
  v63 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v54 = (char *)&v47 - v10;
  v11 = type metadata accessor for UUID();
  v55 = *(void *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v62 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v53 = (char *)&v47 - v14;
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  sub_10000A844(&qword_10096AC08);
  result = static _DictionaryStorage.allocate(capacity:)();
  v16 = result;
  v47 = a1;
  v48 = a2;
  if (a2 < 1) {
    v17 = 0;
  }
  else {
    v17 = *a1;
  }
  v18 = 0;
  v51 = v55 + 16;
  v52 = result;
  v49 = a4;
  v50 = v56 + 16;
  v60 = v56 + 32;
  v61 = v55 + 32;
  v19 = result + 64;
  v20 = v62;
  while (1)
  {
    v59 = a3;
    if (v17)
    {
      v57 = (v17 - 1) & v17;
      v58 = v18;
      v21 = __clz(__rbit64(v17)) | (v18 << 6);
    }
    else
    {
      v22 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_40;
      }
      if (v22 >= v48) {
        return v16;
      }
      v23 = v47[v22];
      v24 = v18 + 1;
      if (!v23)
      {
        v24 = v18 + 2;
        if (v18 + 2 >= v48) {
          return v16;
        }
        v23 = v47[v24];
        if (!v23)
        {
          v24 = v18 + 3;
          if (v18 + 3 >= v48) {
            return v16;
          }
          v23 = v47[v24];
          if (!v23)
          {
            v25 = v18 + 4;
            if (v18 + 4 >= v48) {
              return v16;
            }
            v23 = v47[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_41;
                }
                if (v24 >= v48) {
                  return v16;
                }
                v23 = v47[v24];
                ++v25;
                if (v23) {
                  goto LABEL_24;
                }
              }
            }
            v24 = v18 + 4;
          }
        }
      }
LABEL_24:
      v57 = (v23 - 1) & v23;
      v58 = v24;
      v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    v26 = v55;
    v27 = *(void *)(v55 + 72);
    v28 = v53;
    (*(void (**)(char *, unint64_t, uint64_t))(v55 + 16))(v53, a4[6] + v27 * v21, v11);
    v29 = a4[7];
    v30 = v56;
    v31 = *(void *)(v56 + 72);
    v32 = v29 + v31 * v21;
    v33 = v11;
    v34 = v54;
    v35 = v64;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v54, v32, v64);
    v36 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    v36(v20, v28, v33);
    v37 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v38 = v34;
    v11 = v33;
    v37(v63, v38, v35);
    v16 = v52;
    sub_100655CC8(&qword_10096C4C8, (void (*)(uint64_t))&type metadata accessor for UUID);
    result = dispatch thunk of Hashable._rawHashValue(seed:)();
    v39 = -1 << *(unsigned char *)(v16 + 32);
    v40 = result & ~v39;
    v41 = v40 >> 6;
    if (((-1 << v40) & ~*(void *)(v19 + 8 * (v40 >> 6))) != 0)
    {
      v42 = __clz(__rbit64((-1 << v40) & ~*(void *)(v19 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v43 = 0;
      v44 = (unint64_t)(63 - v39) >> 6;
      do
      {
        if (++v41 == v44 && (v43 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v45 = v41 == v44;
        if (v41 == v44) {
          v41 = 0;
        }
        v43 |= v45;
        v46 = *(void *)(v19 + 8 * v41);
      }
      while (v46 == -1);
      v42 = __clz(__rbit64(~v46)) + (v41 << 6);
    }
    *(void *)(v19 + ((v42 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v42;
    v36((char *)(*(void *)(v16 + 48) + v42 * v27), v62, v11);
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v37)(*(void *)(v16 + 56) + v42 * v31, v63, v64);
    ++*(void *)(v16 + 16);
    a3 = v59 - 1;
    if (__OFSUB__(v59, 1)) {
      break;
    }
    a4 = v49;
    v17 = v57;
    v18 = v58;
    if (v59 == 1) {
      return v16;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10064FB74(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v48 = type metadata accessor for UUID();
  uint64_t v43 = *(void *)(v48 - 8);
  uint64_t v8 = __chkstk_darwin(v48);
  v47 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v42 = (char *)&v37 - v10;
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  sub_10000A844(&qword_10096AB68);
  uint64_t result = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v12 = result;
  v38 = a1;
  uint64_t v39 = a2;
  if (a2 < 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = *a1;
  }
  uint64_t v14 = 0;
  v40 = a4;
  uint64_t v41 = v43 + 16;
  uint64_t v46 = v43 + 32;
  uint64_t v15 = result + 64;
  uint64_t v16 = v48;
  while (1)
  {
    if (v13)
    {
      uint64_t v44 = (v13 - 1) & v13;
      uint64_t v45 = v14;
      unint64_t v17 = __clz(__rbit64(v13)) | (v14 << 6);
    }
    else
    {
      uint64_t v18 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_40;
      }
      if (v18 >= v39) {
        return v12;
      }
      unint64_t v19 = v38[v18];
      uint64_t v20 = v14 + 1;
      if (!v19)
      {
        uint64_t v20 = v14 + 2;
        if (v14 + 2 >= v39) {
          return v12;
        }
        unint64_t v19 = v38[v20];
        if (!v19)
        {
          uint64_t v20 = v14 + 3;
          if (v14 + 3 >= v39) {
            return v12;
          }
          unint64_t v19 = v38[v20];
          if (!v19)
          {
            uint64_t v21 = v14 + 4;
            if (v14 + 4 >= v39) {
              return v12;
            }
            unint64_t v19 = v38[v21];
            if (!v19)
            {
              while (1)
              {
                uint64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_41;
                }
                if (v20 >= v39) {
                  return v12;
                }
                unint64_t v19 = v38[v20];
                ++v21;
                if (v19) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v20 = v14 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v44 = (v19 - 1) & v19;
      uint64_t v45 = v20;
      unint64_t v17 = __clz(__rbit64(v19)) + (v20 << 6);
    }
    v22 = v42;
    uint64_t v23 = v43;
    uint64_t v24 = *(void *)(v43 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v42, a4[6] + v24 * v17, v16);
    v25 = *(void **)(a4[7] + 8 * v17);
    v26 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v26(v47, v22, v16);
    sub_100655CC8(&qword_10096C4C8, (void (*)(uint64_t))&type metadata accessor for UUID);
    id v27 = v25;
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v28 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v31 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v34 = v30 == v33;
        if (v30 == v33) {
          unint64_t v30 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v15 + 8 * v30);
      }
      while (v35 == -1);
      unint64_t v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(void *)(v15 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v12 + 48) + v31 * v24, v47, v48);
    *(void *)(*(void *)(v12 + 56) + 8 * v31) = v27;
    ++*(void *)(v12 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v40;
    unint64_t v13 = v44;
    uint64_t v14 = v45;
    if (!a3) {
      return v12;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10064FF4C(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a2;
  uint64_t v4 = sub_10000A844(&qword_100974EA0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v29 - v8;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v30 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)v29 - v15;
  uint64_t result = __chkstk_darwin(v14);
  uint64_t v45 = (char *)v29 - v18;
  uint64_t v46 = _swiftEmptyArrayStorage;
  uint64_t v34 = *(void *)(a1 + 16);
  if (v34)
  {
    v29[1] = v2;
    unint64_t v19 = 0;
    uint64_t v39 = v11 + 48;
    uint64_t v40 = v11 + 16;
    v42 = (void (**)(char *, char *, uint64_t))(v11 + 32);
    uint64_t v20 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v44 = v11 + 56;
    v29[0] = (v11 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    char v32 = v9;
    uint64_t v33 = a1;
    uint64_t v31 = v11;
    while (v19 < *(void *)(a1 + 16))
    {
      unint64_t v35 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      unint64_t v36 = v19;
      uint64_t v38 = *(void *)(v11 + 72);
      uint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
      v21(v9, a1 + v35 + v38 * v19, v10);
      uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v43(v9, 0, 1, v10);
      v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      if (v22(v9, 1, v10) == 1) {
        goto LABEL_23;
      }
      uint64_t v41 = *v42;
      v41(v45, v9, v10);
      uint64_t v23 = *(void *)(v37 + 16);
      if (v23)
      {
        unint64_t v24 = v37 + v35;
        swift_bridgeObjectRetain();
        while (1)
        {
          v21(v7, v24, v10);
          v43(v7, 0, 1, v10);
          if (v22(v7, 1, v10) == 1) {
            break;
          }
          v41(v16, v7, v10);
          sub_100655CC8((unint64_t *)&unk_10096D460, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v25 = dispatch thunk of static Equatable.== infix(_:_:)();
          (*v20)(v16, v10);
          if (v25)
          {
            swift_bridgeObjectRelease();
            v41(v30, v45, v10);
            v26 = v46;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1002558AC(0, v26[2] + 1, 1);
              v26 = v46;
            }
            unint64_t v28 = v26[2];
            unint64_t v27 = v26[3];
            if (v28 >= v27 >> 1)
            {
              sub_1002558AC(v27 > 1, v28 + 1, 1);
              v26 = v46;
            }
            v26[2] = v28 + 1;
            uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v41)((char *)v26 + v35 + v28 * v38, v30, v10);
            uint64_t v46 = v26;
            goto LABEL_6;
          }
          v24 += v38;
          if (!--v23) {
            goto LABEL_4;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_4:
        v43(v7, 1, 1, v10);
      }
      swift_bridgeObjectRelease();
      uint64_t result = ((uint64_t (*)(char *, uint64_t))*v20)(v45, v10);
LABEL_6:
      unint64_t v19 = v36 + 1;
      a1 = v33;
      uint64_t v11 = v31;
      uint64_t v9 = v32;
      if (v36 + 1 == v34)
      {
        v43(v32, 1, 1, v10);
        goto LABEL_23;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_23:
    swift_bridgeObjectRelease();
    sub_10000A7E8((uint64_t)v9, &qword_100974EA0);
    return (uint64_t)v46;
  }
  return result;
}

uint64_t sub_100650454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v3;
  aBlock[4] = a2;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = a3;
  uint64_t v15 = _Block_copy(aBlock);
  uint64_t v16 = v3;
  static DispatchQoS.unspecified.getter();
  v18[1] = _swiftEmptyArrayStorage;
  sub_100655CC8((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_100650704()
{
  uint64_t v0 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000B47C(v3, (uint64_t)qword_10097C7F0);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "remoteAlertHandleDidDeactivate", v6, 2u);
    swift_slowDealloc();
  }

  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  sub_100628DD4((uint64_t)v2, 0);
  return sub_10000A7E8((uint64_t)v2, &qword_100974EA0);
}

uint64_t sub_1006509C4()
{
  [self interfaceWithProtocol:&OBJC_PROTOCOL___SFB332UIProtocol];
  sub_10000A844(&qword_10096B2E8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10076E7A0;
  uint64_t v1 = sub_10000B740(0, &qword_10097D400);
  *(void *)(v0 + 56) = sub_10000A844(&qword_10097D408);
  *(void *)(v0 + 32) = v1;
  id v2 = objc_allocWithZone((Class)NSSet);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 initWithArray:isa];

  uint64_t result = static Set._forceBridgeFromObjectiveC(_:result:)();
  __break(1u);
  return result;
}

uint64_t sub_100650B50(void *a1)
{
  id v1 = [a1 sd_connectionBundleID];
  if (v1)
  {
    id v2 = v1;
    unint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;

    if (v3 == 0xD00000000000001CLL && v5 == 0x80000001007B69C0)
    {
      char v6 = 1;
      unint64_t v3 = 0xD00000000000001CLL;
    }
    else if (_stringCompareWithSmolCheck(_:_:expecting:)())
    {
      char v6 = 1;
    }
    else if (v3 == 0xD000000000000023 && v5 == 0x80000001007BD980)
    {
      char v6 = 1;
      unint64_t v3 = 0xD000000000000023;
    }
    else
    {
      char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  else
  {
    char v6 = 0;
    unint64_t v3 = 0;
    unint64_t v5 = 0;
  }
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000B47C(v7, (uint64_t)qword_10097C7F0);
  swift_bridgeObjectRetain();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 67109378;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 8) = 2080;
    unint64_t v11 = v5;
    if (!v5)
    {
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD000000000000015;
      unint64_t v11 = 0x80000001007B7770;
    }
    swift_bridgeObjectRetain();
    sub_100254634(v3, v11, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "XPC: shouldAcceptNewConnection: %{BOOL}d. (%s)", (uint8_t *)v10, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v6 & 1;
}

void sub_100650E48(void *a1)
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097C7F0);
  id v3 = a1;
  unint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    char v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)char v6 = 138412290;
    id v8 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v7 = v3;

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "didConnect: %@", v6, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_100622BA0();
}

void sub_100650FF4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v64 = v5;
  uint64_t v6 = __chkstk_darwin(v4);
  id v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  unint64_t v11 = (char *)&v56 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v56 - v12;
  uint64_t v63 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v14 = *(void *)((char *)v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  swift_retain();
  id v15 = [a1 identifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v16 = (uint64_t *)(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingDisconnect);
  swift_beginAccess();
  uint64_t v17 = *v16;
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v18 = &qword_10096A000;
  if (*(void *)(v17 + 16) && (unint64_t v19 = sub_100583A00((uint64_t)v13), (v20 & 1) != 0))
  {
    v61 = v2;
    id v21 = *(id *)(*(void *)(v17 + 56) + 8 * v19);
    swift_bridgeObjectRelease();
    v62 = *(void (**)(char *, uint64_t))(v5 + 8);
    v62(v13, v4);

    uint64_t v18 = &qword_10096A000;
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_10000B47C(v22, (uint64_t)qword_10097C7F0);
    uint64_t v23 = a1;
    unint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      v60 = a1;
      v26 = (uint8_t *)swift_slowAlloc();
      v57 = (void *)swift_slowAlloc();
      v58 = v26;
      *(_DWORD *)v26 = 138412290;
      v66 = v23;
      unint64_t v27 = v23;
      uint64_t v59 = v4;
      unint64_t v28 = v27;
      a1 = v60;
      uint64_t v18 = &qword_10096A000;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v57 = v23;

      uint64_t v4 = v59;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "didDisconnectPeripheral - removing from needingDisconnect: %@", v58, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      unint64_t v24 = v23;
    }

    uint64_t v2 = v61;
    swift_retain();
    id v31 = [v23 identifier];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    swift_beginAccess();
    char v32 = (void *)sub_1002AA3D4((uint64_t)v11);
    uint64_t v33 = v62;
    v62(v11, v4);
    unint64_t v30 = v33;
    swift_endAccess();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v29 = *(void (**)(char *, uint64_t))(v5 + 8);
    v29(v13, v4);
    unint64_t v30 = v29;
  }
  id v34 = [a1 identifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v35 = (char *)v2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_peripheralsIConnectedTo;
  swift_beginAccess();
  uint64_t v36 = *(void *)v35;
  if (!*(void *)(*(void *)v35 + 16)) {
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  unint64_t v37 = sub_100583A00((uint64_t)v8);
  if ((v38 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    v30(v8, v4);
    goto LABEL_20;
  }
  uint64_t v63 = (uint64_t)v11;
  id v39 = *(id *)(*(void *)(v36 + 56) + 8 * v37);
  swift_bridgeObjectRelease();
  v64 += 8;
  v30(v8, v4);

  if (v18[22] != -1) {
    swift_once();
  }
  v62 = v30;
  uint64_t v40 = type metadata accessor for Logger();
  sub_10000B47C(v40, (uint64_t)qword_10097C7F0);
  uint64_t v41 = a1;
  v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v59 = v4;
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    v61 = (void *)swift_slowAlloc();
    v60 = a1;
    *(_DWORD *)uint64_t v44 = 138412290;
    v65 = v41;
    uint64_t v45 = v41;
    uint64_t v4 = v59;
    a1 = v60;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v61 = v41;

    _os_log_impl((void *)&_mh_execute_header, v42, v43, "didDisconnectPeripheral - removing from peripheralsIConnectedTo: %@", v44, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    v42 = v41;
  }

  id v46 = [v41 identifier];
  uint64_t v47 = v63;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  swift_beginAccess();
  uint64_t v48 = (void *)sub_1002AA3D4(v47);
  v62((char *)v47, v4);
  swift_endAccess();

  uint64_t v18 = &qword_10096A000;
LABEL_20:
  if (v18[22] != -1) {
    swift_once();
  }
  uint64_t v49 = type metadata accessor for Logger();
  sub_10000B47C(v49, (uint64_t)qword_10097C7F0);
  v50 = a1;
  v51 = Logger.logObject.getter();
  os_log_type_t v52 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = (uint8_t *)swift_slowAlloc();
    v54 = (void *)swift_slowAlloc();
    *(_DWORD *)v53 = 138412290;
    v65 = v50;
    v55 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v54 = v50;

    _os_log_impl((void *)&_mh_execute_header, v51, v52, "didDisconnectPeripheral: %@", v53, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    v51 = v50;
  }

  sub_100622BA0();
}

uint64_t sub_10065180C(void *a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v46 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000A844(&qword_10096C4F0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A844(&qword_100974EA0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v47 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v43 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v43 - v17;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_10000B47C(v19, (uint64_t)qword_10097C7F0);
  id v20 = a1;
  id v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v48 = v13;
  uint64_t v49 = v16;
  if (v23)
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v45 = v3;
    os_log_type_t v25 = (uint8_t *)v24;
    uint64_t v26 = swift_slowAlloc();
    v50 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v2;
    unint64_t v27 = (void *)v26;
    os_log_type_t v43 = v25;
    uint64_t v44 = v5;
    *(_DWORD *)os_log_type_t v25 = 138412290;
    id v52 = v20;
    id v28 = v20;
    uint64_t v5 = v44;
    uint64_t v16 = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v27 = v20;

    _os_log_impl((void *)&_mh_execute_header, v21, v22, "didFailToConnect: %@", v43, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    uint64_t v2 = (uint64_t)v50;
    swift_slowDealloc();
    uint64_t v3 = v45;
    swift_slowDealloc();
  }
  else
  {
  }
  id v29 = [v20 identifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v30 = 1;
  v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v50(v18, 0, 1, v2);
  id v31 = *(void **)(*(void *)(v51 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  if (v31)
  {
    id v32 = [v31 identifier];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v30 = 0;
  }
  v50(v16, v30, 1, v2);
  uint64_t v33 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_10024A330((uint64_t)v18, (uint64_t)v7, &qword_100974EA0);
  sub_10024A330((uint64_t)v16, v33, &qword_100974EA0);
  id v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v34((uint64_t)v7, 1, v2) == 1)
  {
    sub_10000A7E8((uint64_t)v16, &qword_100974EA0);
    sub_10000A7E8((uint64_t)v18, &qword_100974EA0);
    if (v34(v33, 1, v2) == 1)
    {
      sub_10000A7E8((uint64_t)v7, &qword_100974EA0);
LABEL_15:
      uint64_t v42 = (uint64_t)v47;
      v50(v47, 1, 1, v2);
      sub_100628DD4(v42, 0);
      uint64_t v36 = &qword_100974EA0;
      uint64_t v37 = v42;
      return sub_10000A7E8(v37, v36);
    }
  }
  else
  {
    uint64_t v35 = (uint64_t)v48;
    sub_10024A330((uint64_t)v7, (uint64_t)v48, &qword_100974EA0);
    if (v34(v33, 1, v2) != 1)
    {
      char v38 = v46;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v46, v33, v2);
      sub_100655CC8((unint64_t *)&unk_10096D460, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v39 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v40 = *(void (**)(char *, uint64_t))(v3 + 8);
      v40(v38, v2);
      sub_10000A7E8((uint64_t)v49, &qword_100974EA0);
      sub_10000A7E8((uint64_t)v18, &qword_100974EA0);
      v40((char *)v35, v2);
      uint64_t result = sub_10000A7E8((uint64_t)v7, &qword_100974EA0);
      if ((v39 & 1) == 0) {
        return result;
      }
      goto LABEL_15;
    }
    sub_10000A7E8((uint64_t)v49, &qword_100974EA0);
    sub_10000A7E8((uint64_t)v18, &qword_100974EA0);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v35, v2);
  }
  uint64_t v36 = &qword_10096C4F0;
  uint64_t v37 = (uint64_t)v7;
  return sub_10000A7E8(v37, v36);
}

void sub_100651E50(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Data.Iterator();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v9 = &unk_100994000;
  if (!*(void *)(*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                  + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral))
  {
    uint64_t v10 = sub_10061EC34();
    if (v11)
    {
      id v23 = a1;
      uint64_t v12 = *(void *)(v1 + v8);
      uint64_t v13 = (uint64_t *)(v12 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_b332BTAddr);
      unint64_t v14 = *(void *)(v12 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_b332BTAddr + 8);
      if (v14 >> 60 == 15)
      {
LABEL_11:
        swift_retain();
        NSString v16 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v17 = [v23 retrievePeripheralWithAddress:v16];

        uint64_t v18 = *(NSObject **)(v12 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
        *(void *)(v12 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral) = v17;
        swift_release();
      }
      else
      {
        v22[1] = v10;
        uint64_t v15 = *v13;
        switch(v14 >> 62)
        {
          case 1uLL:
          case 2uLL:
            sub_10025ADCC(*v13, v14);
            sub_10025ADCC(v15, v14);
            sub_10025ADCC(v15, v14);
            break;
          default:
            break;
        }
        Data.Iterator.init(_:at:)();
        sub_100250CB0(v15, v14);
        sub_100655CC8((unint64_t *)&unk_10096B460, (void (*)(uint64_t))&type metadata accessor for Data.Iterator);
        while (1)
        {
          dispatch thunk of IteratorProtocol.next()();
          if (v25) {
            break;
          }
          if (v24)
          {
            (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
            sub_100250CB0(v15, v14);
            uint64_t v12 = *(void *)(v1 + v8);
            uint64_t v9 = &unk_100994000;
            goto LABEL_11;
          }
        }
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        sub_100250CB0(v15, v14);
        swift_bridgeObjectRelease();
        if (qword_10096A0B0 != -1) {
          swift_once();
        }
        uint64_t v19 = type metadata accessor for Logger();
        sub_10000B47C(v19, (uint64_t)qword_10097C7F0);
        uint64_t v18 = Logger.logObject.getter();
        os_log_type_t v20 = static os_log_type_t.fault.getter();
        uint64_t v9 = (void *)&unk_100994000;
        if (os_log_type_enabled(v18, v20))
        {
          id v21 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v21 = 0;
          _os_log_impl((void *)&_mh_execute_header, v18, v20, "allNullAddr! Pencil sent all-0 BT addr.", v21, 2u);
          swift_slowDealloc();
        }
      }

      if (*(void *)(*(void *)(v2 + v8) + v9[348])) {
        sub_100622BA0();
      }
    }
  }
}

void sub_1006521E0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v73 = a3;
  id v69 = a1;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  v68 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A844(&qword_10096C4F0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000A844(&qword_100974EA0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v70 = (uint64_t)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  id v17 = (char *)&v66 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v66 - v18;
  v71 = a2;
  id v20 = [a2 identifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  id v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v22 = 1;
  v21(v19, 0, 1, v6);
  v74 = v4;
  uint64_t v72 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  id v23 = *(void **)(*(void *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState]
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  if (v23)
  {
    id v24 = [v23 identifier];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v22 = 0;
  }
  v21(v17, v22, 1, v6);
  uint64_t v25 = (uint64_t)&v11[*(int *)(v9 + 48)];
  uint64_t v26 = &qword_100974EA0;
  sub_10024A330((uint64_t)v19, (uint64_t)v11, &qword_100974EA0);
  sub_10024A330((uint64_t)v17, v25, &qword_100974EA0);
  unint64_t v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v27((uint64_t)v11, 1, v6) == 1)
  {
    sub_10000A7E8((uint64_t)v17, &qword_100974EA0);
    sub_10000A7E8((uint64_t)v19, &qword_100974EA0);
    if (v27(v25, 1, v6) == 1)
    {
      int v28 = -1;
    }
    else
    {
      uint64_t v26 = &qword_10096C4F0;
      int v28 = 0;
    }
  }
  else
  {
    uint64_t v29 = v70;
    sub_10024A330((uint64_t)v11, v70, &qword_100974EA0);
    if (v27(v25, 1, v6) == 1)
    {
      sub_10000A7E8((uint64_t)v17, &qword_100974EA0);
      sub_10000A7E8((uint64_t)v19, &qword_100974EA0);
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v29, v6);
      int v28 = 0;
      uint64_t v26 = &qword_10096C4F0;
    }
    else
    {
      uint64_t v30 = v68;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v68, v25, v6);
      sub_100655CC8((unint64_t *)&unk_10096D460, (void (*)(uint64_t))&type metadata accessor for UUID);
      int v31 = dispatch thunk of static Equatable.== infix(_:_:)();
      id v32 = *(void (**)(char *, uint64_t))(v7 + 8);
      v32(v30, v6);
      uint64_t v26 = &qword_100974EA0;
      uint64_t v33 = (uint64_t)v17;
      int v28 = v31;
      sub_10000A7E8(v33, &qword_100974EA0);
      sub_10000A7E8((uint64_t)v19, &qword_100974EA0);
      v32((char *)v29, v6);
    }
  }
  id v34 = v71;
  sub_10000A7E8((uint64_t)v11, v26);
  self;
  uint64_t v35 = swift_dynamicCastObjCClass();
  if (v35)
  {
    uint64_t v36 = (void *)v35;
    char v37 = sub_10064EDA8();
    char v38 = v74;
    if (v37)
    {
      NSString v39 = String._bridgeToObjectiveC()();
      unsigned int v40 = [v36 hasTag:v39];

      LODWORD(v71) = v40 ^ 1;
    }
    else
    {
      LODWORD(v71) = 0;
    }
  }
  else
  {
    LODWORD(v71) = 0;
    char v38 = v74;
  }
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v41 = type metadata accessor for Logger();
  uint64_t v42 = sub_10000B47C(v41, (uint64_t)qword_10097C7F0);
  id v43 = v34;
  uint64_t v44 = v38;
  id v45 = v43;
  id v46 = v44;
  uint64_t v47 = Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v47, v48))
  {
    v68 = (char *)v42;
    LODWORD(v70) = v28;
    uint64_t v49 = swift_slowAlloc();
    v50 = (void *)swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    uint64_t v77 = v67;
    *(_DWORD *)uint64_t v49 = 138413314;
    uint64_t v75 = (uint64_t)v45;
    id v51 = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v66 = v50;
    void *v50 = v45;

    *(_WORD *)(v49 + 12) = 2048;
    uint64_t v75 = v73;
    char v38 = v74;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v52 = *(void *)&v38[v72];
    *(_WORD *)(v49 + 22) = 2080;
    int v53 = *(unsigned __int8 *)(v52 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_isPaired);
    if (v53 == 2)
    {
      uint64_t v75 = 0;
      unint64_t v76 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v54 = 0x80000001007C5500;
      uint64_t v55 = 0xD000000000000013;
    }
    else
    {
      if (v53) {
        uint64_t v55 = 1702195828;
      }
      else {
        uint64_t v55 = 0x65736C6166;
      }
      if (v53) {
        unint64_t v54 = 0xE400000000000000;
      }
      else {
        unint64_t v54 = 0xE500000000000000;
      }
    }
    uint64_t v75 = sub_100254634(v55, v54, &v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 32) = 1024;
    char v60 = v70;
    LODWORD(v75) = v70 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v49 + 38) = 1024;
    LODWORD(v75) = v71;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "peerDidRequestPairing!!!! %@, type: %ld, paired? %s, isStoredPeripheral? %{BOOL}d, isTagged? %{BOOL}d", (uint8_t *)v49, 0x2Cu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (v60) {
      goto LABEL_32;
    }
  }
  else
  {

    if (v28)
    {
LABEL_32:
      uint64_t v61 = v72;
      uint64_t v62 = *(void *)&v38[v72];
      uint64_t v63 = *(void **)(v62 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_peerRequestingPairing);
      *(void *)(v62 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_peerRequestingPairing) = v45;
      id v64 = v45;

      uint64_t v65 = *(void *)&v38[v61] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_peerPairingType;
      *(void *)uint64_t v65 = v73;
      *(unsigned char *)(v65 + 8) = 0;
      sub_100622BA0();
      return;
    }
  }
  if (v71)
  {
    uint64_t v56 = Logger.logObject.getter();
    os_log_type_t v57 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v58 = 0;
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "peerDidRequestPairing - is a B332 but not the one we're currently trying to pair to. Rejecting.", v58, 2u);
      swift_slowDealloc();
    }

    sub_10024592C((uint64_t)_swiftEmptyArrayStorage);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v69 respondToPairingRequest:v45 type:v73 accept:0 data:isa];
  }
}

void sub_100652AC4(void *a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v40 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A844(&qword_10096C4F0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A844(&qword_100974EA0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v42 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  id v17 = (char *)&v39 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v39 - v18;
  uint64_t v44 = a1;
  id v20 = [a1 identifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v21 = 1;
  id v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  uint64_t v46 = v4 + 56;
  v45(v19, 0, 1, v3);
  uint64_t v43 = v1;
  uint64_t v41 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v22 = *(void **)(*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  if (v22)
  {
    id v23 = [v22 identifier];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v21 = 0;
  }
  v45(v17, v21, 1, v3);
  uint64_t v24 = (uint64_t)&v8[*(int *)(v6 + 48)];
  uint64_t v25 = &qword_100974EA0;
  sub_10024A330((uint64_t)v19, (uint64_t)v8, &qword_100974EA0);
  sub_10024A330((uint64_t)v17, v24, &qword_100974EA0);
  uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v26((uint64_t)v8, 1, v3) == 1)
  {
    sub_10000A7E8((uint64_t)v17, &qword_100974EA0);
    sub_10000A7E8((uint64_t)v19, &qword_100974EA0);
    if (v26(v24, 1, v3) == 1)
    {
      char v27 = -1;
    }
    else
    {
      uint64_t v25 = &qword_10096C4F0;
      char v27 = 0;
    }
  }
  else
  {
    sub_10024A330((uint64_t)v8, (uint64_t)v14, &qword_100974EA0);
    if (v26(v24, 1, v3) == 1)
    {
      sub_10000A7E8((uint64_t)v17, &qword_100974EA0);
      sub_10000A7E8((uint64_t)v19, &qword_100974EA0);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v14, v3);
      char v27 = 0;
      uint64_t v25 = &qword_10096C4F0;
    }
    else
    {
      int v28 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v40, v24, v3);
      sub_100655CC8((unint64_t *)&unk_10096D460, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v27 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v29 = *(void (**)(char *, uint64_t))(v4 + 8);
      v29(v28, v3);
      uint64_t v25 = &qword_100974EA0;
      sub_10000A7E8((uint64_t)v17, &qword_100974EA0);
      sub_10000A7E8((uint64_t)v19, &qword_100974EA0);
      v29(v14, v3);
    }
  }
  sub_10000A7E8((uint64_t)v8, v25);
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  sub_10000B47C(v30, (uint64_t)qword_10097C7F0);
  int v31 = v44;
  id v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v32, v33))
  {

    if ((v27 & 1) == 0) {
      return;
    }
    goto LABEL_16;
  }
  uint64_t v34 = swift_slowAlloc();
  uint64_t v44 = (void *)swift_slowAlloc();
  *(_DWORD *)uint64_t v34 = 138412546;
  os_log_type_t v48 = v31;
  uint64_t v35 = v3;
  char v36 = v27;
  char v37 = v31;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *uint64_t v44 = v31;

  LOBYTE(v37) = v36;
  uint64_t v3 = v35;
  *(_WORD *)(v34 + 12) = 1024;
  int v47 = v37 & 1;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  _os_log_impl((void *)&_mh_execute_header, v32, v33, "peerDidFailToCompletePairing: %@, isStoredPeripheral: %{BOOL}d", (uint8_t *)v34, 0x12u);
  sub_10000A844(&qword_10096B850);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  if (v37)
  {
LABEL_16:
    *(unsigned char *)(*(void *)(v43 + v41)
             + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didPairingSucceed) = 0;
    swift_retain();
    sub_10061D5B8();
    swift_release();
    uint64_t v38 = (uint64_t)v42;
    v45(v42, 1, 1, v3);
    sub_100628DD4(v38, 0);
    sub_10000A7E8(v38, &qword_100974EA0);
  }
}

uint64_t sub_100653130(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v1;
  aBlock[4] = sub_100655130;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008E2FE8;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = a1;
  uint64_t v14 = v1;
  static DispatchQoS.unspecified.getter();
  v16[1] = _swiftEmptyArrayStorage;
  sub_100655CC8((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_1006533F8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v25 = a6;
  unint64_t v26 = a7;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v27 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v31 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for DispatchQoS();
  uint64_t v28 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  id v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = *(void *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q];
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = a1;
  v18[3] = a2;
  v18[4] = a3;
  v18[5] = a4;
  uint64_t v20 = v25;
  unint64_t v19 = v26;
  v18[6] = a5;
  v18[7] = v20;
  v18[8] = v19;
  v18[9] = v7;
  v18[10] = ObjectType;
  aBlock[4] = sub_100654F80;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008E2F70;
  uint64_t v21 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  sub_10025ADCC(a3, a4);
  swift_bridgeObjectRetain();
  sub_10025ADCC(v20, v19);
  uint64_t v22 = v7;
  static DispatchQoS.unspecified.getter();
  id v32 = _swiftEmptyArrayStorage;
  sub_100655CC8((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  uint64_t v23 = v27;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v23);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v30);
  return swift_release();
}

uint64_t sub_100653724(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(void *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q];
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = v4;
  v16[3] = a1;
  v16[4] = a2;
  v16[5] = a3;
  v16[6] = a4;
  aBlock[4] = sub_100654DB0;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008E2DB8;
  id v17 = _Block_copy(aBlock);
  uint64_t v18 = v4;
  swift_bridgeObjectRetain();
  sub_10025ADCC(a3, a4);
  static DispatchQoS.unspecified.getter();
  uint64_t v22 = _swiftEmptyArrayStorage;
  sub_100655CC8((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v21);
  return swift_release();
}

uint64_t sub_100653A10(int a1, char a2, int a3, char a4)
{
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(void *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q);
  uint64_t v16 = swift_allocObject();
  *(_DWORD *)(v16 + 16) = a3;
  *(_DWORD *)(v16 + 20) = a1;
  *(unsigned char *)(v16 + 24) = a4;
  *(unsigned char *)(v16 + 25) = a2;
  aBlock[4] = sub_100654D58;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008E2D68;
  id v17 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter();
  uint64_t v21 = _swiftEmptyArrayStorage;
  sub_100655CC8((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v20);
  return swift_release();
}

uint64_t sub_100653CE4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v1;
  aBlock[4] = sub_100654D40;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008E2D18;
  uint64_t v12 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  uint64_t v13 = v1;
  static DispatchQoS.unspecified.getter();
  v15[1] = _swiftEmptyArrayStorage;
  sub_100655CC8((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_100653FB0(int a1, uint64_t a2, unint64_t a3)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q];
  uint64_t v15 = swift_allocObject();
  *(_DWORD *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  *(void *)(v15 + 32) = a3;
  *(void *)(v15 + 40) = v3;
  aBlock[4] = sub_100654CF0;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008E2CC8;
  uint64_t v16 = _Block_copy(aBlock);
  sub_10025ADCC(a2, a3);
  id v17 = v3;
  static DispatchQoS.unspecified.getter();
  v19[1] = _swiftEmptyArrayStorage;
  sub_100655CC8((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_100654290()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1006542C8(void *a1)
{
  sub_10064D064(a1, *(void *)(v1 + 16));
}

uint64_t sub_1006542D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1006542E0()
{
  return swift_release();
}

void sub_1006542E8(NSObject *a1, uint64_t a2)
{
  sub_10064DBF4(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1006542F0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100654328()
{
}

unint64_t sub_100654330()
{
  unint64_t result = qword_10097D278;
  if (!qword_10097D278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097D278);
  }
  return result;
}

unint64_t sub_100654384()
{
  unint64_t result = qword_10097D280;
  if (!qword_10097D280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097D280);
  }
  return result;
}

uint64_t sub_1006543D8()
{
  return sub_1005E7A0C(40);
}

uint64_t sub_1006543E0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10000A6F0;
  return sub_10063C194(a1, v4, v5, v6);
}

uint64_t sub_100654494()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1006544DC()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_10000A6F0;
  *(_OWORD *)(v2 + 40) = v3;
  return _swift_task_switch(sub_10063864C, 0, 0);
}

uint64_t sub_100654588(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_10000A6F0;
  return sub_10063A47C(a1, a2, v6);
}

uint64_t sub_100654638()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 9) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

void sub_10065479C(int a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Date() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + v5);
  char v9 = *(unsigned char *)(v1 + v5 + 8);
  uint64_t v10 = v1 + ((v5 + *(unsigned __int8 *)(v6 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  sub_10063B8A4(a1, v7, v1 + v4, v8, v9, v10);
}

uint64_t sub_10065488C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100654958()
{
  return sub_1006551F4(sub_10063C000);
}

uint64_t sub_100654970()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

void sub_1006549A8()
{
  sub_10063BF80(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1006549B4()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100654A9C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10000A6F0;
  return sub_10063ADD4(a1, v6, v7, v8, v9);
}

uint64_t sub_100654BC0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100654BF8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_10000A6F4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10097D3A8 + dword_10097D3A8);
  return v6(a1, v4);
}

uint64_t sub_100654CB0()
{
  sub_100250CC4(*(void *)(v0 + 24), *(void *)(v0 + 32));

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100654CF0()
{
  sub_10064BE9C(*(_DWORD *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100654D00()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100654D40()
{
  sub_10064B5D4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100654D48()
{
  return _swift_deallocObject(v0, 26, 7);
}

void sub_100654D58()
{
}

uint64_t sub_100654D68()
{
  swift_bridgeObjectRelease();
  sub_100250CC4(*(void *)(v0 + 40), *(void *)(v0 + 48));

  return _swift_deallocObject(v0, 56, 7);
}

void sub_100654DB0()
{
  sub_10064A4F8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_100654DC0()
{
  return sub_100260F50(48);
}

uint64_t sub_100654DC8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10000A6F4;
  return sub_10064AEC8(a1, v4, v5, v7, v6);
}

uint64_t sub_100654E88()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100654EC0()
{
  sub_10062CBE8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100654EC8()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100654F00()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_100654F10(void *a1)
{
  return sub_10063F0E0(a1, *(void *)(v1 + 16));
}

uint64_t sub_100654F18()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100654F28()
{
  swift_bridgeObjectRelease();
  sub_100250CC4(*(void *)(v0 + 32), *(void *)(v0 + 40));
  swift_bridgeObjectRelease();
  sub_100250CC4(*(void *)(v0 + 56), *(void *)(v0 + 64));

  return _swift_deallocObject(v0, 88, 7);
}

void sub_100654F80()
{
  sub_100648B3C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(char **)(v0 + 72));
}

void sub_100654FB8()
{
  uint64_t v4 = 0;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2020000000;
  uint64_t v0 = (void (*)(uint64_t))off_100992710;
  uint64_t v7 = off_100992710;
  if (!off_100992710)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100655D10;
    v3[3] = &unk_1008CA038;
    v3[4] = &v4;
    sub_100655D10(v3);
    uint64_t v0 = (void (*)(uint64_t))v5[3];
  }
  _Block_object_dispose(&v4, 8);
  if (v0)
  {
    v0(257);
  }
  else
  {
    uint64_t v1 = +[NSAssertionHandler currentHandler];
    uint64_t v2 = +[NSString stringWithUTF8String:"io_service_t _IOAccessoryManagerGetServiceWithPrimaryPort(SInt32)"];
    [v1 handleFailureInFunction:v2 file:@"Daemon-iOS-Bridging-Header.h" lineNumber:100 description:@"%s", dlerror()];

    __break(1u);
  }
}

void sub_1006550D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1006550F0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100655130()
{
  sub_100648240(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100655138(uint64_t a1)
{
  return sub_100647820(a1, *(void *)(v1 + 16)) & 1;
}

void sub_100655158()
{
}

void sub_100655160()
{
  sub_100644C74(*(void *)(v0 + 16));
}

uint64_t sub_100655168()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1006551B0()
{
  return sub_10064472C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

void sub_1006551BC()
{
  sub_1006442CC(*(void *)(v0 + 16));
}

uint64_t sub_1006551C4()
{
  return sub_1006558A8((uint64_t (*)(void))&type metadata accessor for UUID);
}

uint64_t sub_1006551DC()
{
  return sub_1006551F4(sub_10062BD60);
}

uint64_t sub_1006551F4(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3, v4);
}

id sub_10065526C()
{
  return sub_10062B708(*(void **)(v0 + 16));
}

void sub_100655274(uint64_t a1)
{
  sub_10062B35C(a1, *(void **)(v1 + 16));
}

void sub_10065527C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
     + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
  if ((*(unsigned char *)(v1 + 8) & 1) == 0)
  {
    unint64_t v2 = *(void *)v1;
    BOOL v3 = v2 > 4;
    uint64_t v4 = (1 << v2) & 0x1A;
    if (!v3 && v4 != 0) {
      sub_100622BA0();
    }
  }
}

const char *sub_1006552E0(int a1)
{
  unint64_t result = "Unknown";
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = "D22ish";
      break;
    case 2:
      unint64_t result = "SEish";
      break;
    case 3:
      unint64_t result = "J3XXish";
      break;
    case 4:
      unint64_t result = "N112ish";
      break;
    case 5:
      unint64_t result = "B520ish";
      break;
    case 6:
      unint64_t result = "B620ish";
      break;
    case 7:
      unint64_t result = "J255ish";
      break;
    default:
      unint64_t result = "?";
      break;
  }
  return result;
}

uint64_t sub_1006553A8(uint64_t a1)
{
  return sub_100621008(a1, *(char **)(v1 + 16), (uint64_t)&unk_1008E3E58, (uint64_t)sub_100655CC0, (uint64_t)&unk_1008E3E70);
}

uint64_t sub_1006553E8(uint64_t a1)
{
  return sub_100621008(a1, *(char **)(v1 + 16), (uint64_t)&unk_1008E3E08, (uint64_t)sub_100655CB8, (uint64_t)&unk_1008E3E20);
}

uint64_t sub_100655428(uint64_t a1)
{
  return sub_100621008(a1, *(char **)(v1 + 16), (uint64_t)&unk_1008E3DB8, (uint64_t)sub_100655CB0, (uint64_t)&unk_1008E3DD0);
}

uint64_t sub_100655468(uint64_t a1)
{
  return sub_10062153C(a1, *(void *)(v1 + 16), (uint64_t)sub_10062151C, (uint64_t)&unk_1008E3D80);
}

uint64_t sub_1006554A0(uint64_t a1)
{
  return sub_10062153C(a1, *(void *)(v1 + 16), (uint64_t)sub_1006217C8, (uint64_t)&unk_1008E3D58);
}

uint64_t sub_1006554D8(uint64_t a1)
{
  return sub_10062153C(a1, *(void *)(v1 + 16), (uint64_t)sub_1006217DC, (uint64_t)&unk_1008E3D30);
}

uint64_t sub_100655510(uint64_t a1)
{
  return sub_10062153C(a1, *(void *)(v1 + 16), (uint64_t)sub_1006217F0, (uint64_t)&unk_1008E3D08);
}

uint64_t sub_100655548(uint64_t a1)
{
  return sub_10062153C(a1, *(void *)(v1 + 16), (uint64_t)sub_100621804, (uint64_t)&unk_1008E3CE0);
}

uint64_t sub_100655580(uint64_t a1)
{
  return sub_10062153C(a1, *(void *)(v1 + 16), (uint64_t)sub_100621954, (uint64_t)&unk_1008E3CB8);
}

uint64_t sub_1006555B8(uint64_t a1)
{
  return sub_100621008(a1, *(char **)(v1 + 16), (uint64_t)&unk_1008E3C78, (uint64_t)sub_100655CA8, (uint64_t)&unk_1008E3C90);
}

uint64_t sub_1006555F8(uint64_t a1)
{
  return sub_10062153C(a1, *(void *)(v1 + 16), (uint64_t)sub_100621BC0, (uint64_t)&unk_1008E3C40);
}

uint64_t sub_100655630(uint64_t a1)
{
  return sub_10062153C(a1, *(void *)(v1 + 16), (uint64_t)sub_100621BD0, (uint64_t)&unk_1008E3C18);
}

uint64_t sub_100655668(uint64_t a1)
{
  return sub_100621D14(a1, *(char **)(v1 + 16));
}

uint64_t sub_100655670(uint64_t a1)
{
  return sub_100621008(a1, *(char **)(v1 + 16), (uint64_t)&unk_1008E3A98, (uint64_t)sub_10065586C, (uint64_t)&unk_1008E3AB0);
}

void sub_1006556B0()
{
  sub_1006252C4(*(unsigned char **)(v0 + 16));
}

uint64_t sub_1006556B8(void *a1)
{
  return sub_100626128(a1, *(void **)(v1 + 16));
}

void sub_1006556C0(void *a1)
{
  sub_100626600(a1, *(void *)(v1 + 16));
}

uint64_t sub_1006556C8(void *a1)
{
  return sub_100627A54(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_1006556D0(void *a1)
{
  sub_100627CA0(a1, *(void *)(v1 + 16));
}

void sub_1006556D8()
{
  sub_100627EC0(*(void *)(v0 + 16), "systemLockStateChanged");
}

void sub_1006556FC()
{
}

void sub_100655704()
{
}

void sub_10065570C()
{
  sub_1006289F0(*(unsigned char **)(v0 + 16));
}

uint64_t sub_100655714()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10065574C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_10065575C()
{
  return sub_100260F50(56);
}

uint64_t sub_100655764(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_1006269E4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10065582C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100655864()
{
  sub_100626588(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_10065586C()
{
  sub_100627EC0(*(void *)(v0 + 16), "kStatusSystemUIChanged");
}

uint64_t sub_100655890()
{
  return sub_1006558A8((uint64_t (*)(void))&type metadata accessor for Notification);
}

uint64_t sub_1006558A8(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 24) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v6, v7);
}

void sub_10065597C()
{
  uint64_t v1 = *(void *)(type metadata accessor for Notification() - 8);
  sub_1006220A0(v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_1006559E0()
{
  return sub_1005E7A0C(56);
}

uint64_t sub_1006559E8(uint64_t a1)
{
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  double v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_10064405C(v8, a1, v4, v5, v6, v7);
}

uint64_t sub_100655ABC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_100643CB4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100655B88()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100655BD0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_100643974(a1, v4, v5, v6, v7, v8);
}

id sub_100655C98()
{
  return [*(id *)(v0 + 16) releaseHUDTransaction];
}

id sub_100655CA8()
{
  return sub_100621AC8(*(void **)(v0 + 16));
}

uint64_t sub_100655CB0()
{
  return sub_1006213F0(*(void *)(v0 + 16));
}

void sub_100655CB8()
{
  sub_1006212BC(*(void *)(v0 + 16));
}

uint64_t sub_100655CC0()
{
  return sub_100620EBC(*(void *)(v0 + 16));
}

uint64_t sub_100655CC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_100655D10(void *a1)
{
  v5[0] = 0;
  uint64_t v8 = 0;
  uint64_t v9 = &v8;
  uint64_t v10 = 0x2020000000;
  uint64_t v2 = (void *)qword_100992718;
  uint64_t v11 = qword_100992718;
  if (!qword_100992718)
  {
    v5[1] = _NSConcreteStackBlock;
    v5[2] = (void *)3221225472;
    v5[3] = sub_100655F00;
    v5[4] = &unk_1008E3EB8;
    uint64_t v6 = &v8;
    uint64_t v7 = v5;
    long long v12 = *(_OWORD *)off_1008E3E98;
    uint64_t v13 = 0;
    v9[3] = _sl_dlopen();
    qword_100992718 = *(void *)(v6[1] + 24);
    uint64_t v2 = (void *)v9[3];
  }
  _Block_object_dispose(&v8, 8);
  if (!v2)
  {
    a1 = +[NSAssertionHandler currentHandler];
    uint64_t v2 = +[NSString stringWithUTF8String:"void *libIOAccessoryManagerLibrary(void)"];
    [a1 handleFailureInFunction:v2 file:@"Daemon-iOS-Bridging-Header.h" lineNumber:99 description:@"%s" v5[0]];

    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = v5[0];
  if (v5[0]) {
LABEL_7:
  }
    free(v3);
  uint64_t result = dlsym(v2, "IOAccessoryManagerGetServiceWithPrimaryPort");
  *(void *)(*(void *)(a1[4] + 8) + 24) = result;
  off_100992710 = *(_UNKNOWN **)(*(void *)(a1[4] + 8) + 24);
  return result;
}

void sub_100655EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100655F00(uint64_t a1)
{
  uint64_t result = _sl_dlopen();
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_100992718 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_1006562A8(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v3 = static AirDropActor.shared;
  return _swift_task_switch(sub_100656390, v3, 0);
}

uint64_t sub_100656390()
{
  sub_10025AE8C(v0[5], v0[10]);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v1 = v0[9];
    uint64_t v2 = v0[8];
    uint64_t v3 = v0[5];
    sub_100657218(v0[10], type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_10025AE8C(v3, v2);
    swift_beginAccess();
    sub_100595DA4(v1, v2);
    swift_endAccess();
  }
  else
  {
    uint64_t v1 = v0[10];
  }
  sub_100657218(v1, type metadata accessor for SDAirDropDiscoveredEndpoint);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1006564CC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097D4F0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097D4F0);
  if (qword_100969C68 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994588);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100656594(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for NWEndpoint();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropDiscoveredNearFieldDevice_allEndpoints) = &_swiftEmptySetSingleton;
  uint64_t v30 = a1;
  uint64_t v15 = UUID.uuidString.getter();
  uint64_t v17 = v16;
  *(void *)(v2 + 16) = v15;
  *(void *)(v2 + 24) = v16;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  sub_10065ECDC((uint64_t)v10, v15, v17, (uint64_t)v14);
  sub_10000A7E8((uint64_t)v10, &qword_100974EA0);
  uint64_t v18 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 16);
  uint64_t v29 = v11;
  v18(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropDiscoveredNearFieldDevice_connectableUUID, v14, v11);
  uint64_t v28 = v14;
  uint64_t *v7 = nw_endpoint_create_application_service();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for NWEndpoint.opaque(_:), v4);
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v5 + 32))(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropDiscoveredNearFieldDevice_displayEndpoint, v7, v4);
  if (qword_10096A0D0 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_10000B47C(v19, (uint64_t)qword_10097D4F0);
  swift_retain_n();
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v23 = *(void *)(v2 + 16);
    unint64_t v24 = *(void *)(v2 + 24);
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_100254634(v23, v24, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Creating NearFieldDevice %s", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  uint64_t v26 = v29;
  v25(v30, v29);
  v25((uint64_t)v28, v26);
  return v2;
}

unint64_t sub_1006569E0()
{
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v2;
  v3._object = v1;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 0xD000000000000010;
}

uint64_t sub_100656A80()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropDiscoveredNearFieldDevice_connectableUUID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropDiscoveredNearFieldDevice_displayEndpoint;
  uint64_t v4 = type metadata accessor for NWEndpoint();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100656B7C()
{
  return type metadata accessor for SDAirDropDiscoveredNearFieldDevice();
}

uint64_t type metadata accessor for SDAirDropDiscoveredNearFieldDevice()
{
  uint64_t result = qword_10097D538;
  if (!qword_10097D538) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100656BD0()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for NWEndpoint();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_100656CB4()
{
  return sub_1006569E0();
}

uint64_t sub_100656CD8@<X0>(uint64_t a1@<X8>)
{
  return sub_1003DC000(&OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropDiscoveredNearFieldDevice_displayEndpoint, (uint64_t (*)(void))&type metadata accessor for NWEndpoint, a1);
}

uint64_t sub_100656CF8(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  sub_10000A844(&qword_10096D8B8);
  v2[7] = swift_task_alloc();
  v2[8] = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v2[9] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v3 = static AirDropActor.shared;
  return _swift_task_switch(sub_100656DF4, v3, 0);
}

uint64_t sub_100656DF4()
{
  sub_10025AE8C(v0[5], v0[9]);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v1 = v0[7];
    uint64_t v2 = v0[5];
    sub_100657218(v0[9], type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    swift_beginAccess();
    sub_1005A29BC(v2, v1);
    swift_endAccess();
    sub_10000A7E8(v1, &qword_10096D8B8);
  }
  else
  {
    sub_100657218(v0[9], type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100656F1C@<X0>(uint64_t a1@<X8>)
{
  return sub_1003DC000(&OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropDiscoveredNearFieldDevice_connectableUUID, (uint64_t (*)(void))&type metadata accessor for UUID, a1);
}

uint64_t sub_100656F3C()
{
  *(void *)(v1 + 40) = v0;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v2 = static AirDropActor.shared;
  return _swift_task_switch(sub_100656FD8, v2, 0);
}

uint64_t sub_100656FD8()
{
  swift_beginAccess();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v1 = swift_bridgeObjectRetain();
  return v3(v1);
}

uint64_t sub_100657068(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_10000A6F4;
  return sub_1006562A8(a1);
}

uint64_t sub_100657100(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_10000A6F0;
  return sub_100656CF8(a1);
}

unint64_t sub_100657198(uint64_t a1)
{
  unint64_t result = sub_1006571C0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1006571C0()
{
  unint64_t result = qword_10097D5F0;
  if (!qword_10097D5F0)
  {
    type metadata accessor for SDAirDropDiscoveredNearFieldDevice();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10097D5F0);
  }
  return result;
}

uint64_t sub_100657218(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for SDAirDropClassroomRunnerFactory()
{
  return self;
}

uint64_t sub_10065729C(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  uint64_t v3 = type metadata accessor for SFAirDropSend.Transfer.State();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_100975040);
  v2[11] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10097C360);
  v2[12] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Date();
  v2[13] = v4;
  v2[14] = *(void *)(v4 - 8);
  v2[15] = swift_task_alloc();
  type metadata accessor for SFAirDrop.TransferIdentifier();
  v2[16] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SFAirDropSend.Transfer.Metrics();
  v2[17] = v5;
  v2[18] = *(void *)(v5 - 8);
  v2[19] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for CancellationError();
  v2[20] = v6;
  v2[21] = *(void *)(v6 - 8);
  v2[22] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SFAirDropSend.Failure();
  v2[23] = v7;
  v2[24] = *(void *)(v7 - 8);
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SFAirDropSend.Transfer();
  v2[27] = v8;
  v2[28] = *(void *)(v8 - 8);
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  v2[32] = static AirDropActor.shared;
  uint64_t v9 = (void *)swift_task_alloc();
  v2[33] = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100657664;
  return sub_100550068(0, 0xF000000000000000);
}

uint64_t sub_100657664(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 256);
  *(void *)(v3 + 272) = a1;
  *(void *)(v3 + 280) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v5 = sub_100657CFC;
  }
  else {
    uint64_t v5 = sub_100657790;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_100657790()
{
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[7];
  uint64_t v3 = swift_task_alloc();
  v0[36] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[37] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10065786C;
  uint64_t v5 = v0[34];
  uint64_t v6 = v0[31];
  uint64_t v7 = v0[27];
  return static SFSecurityScopedURL.withAccess<A>(to:body:)(v6, v5, &unk_10097D730, v3, v7);
}

uint64_t sub_10065786C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 256);
    uint64_t v4 = sub_1006581DC;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 256);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v4 = sub_1006579A0;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1006579A0()
{
  (*(void (**)(void, void, void))(v0[28] + 32))(v0[6], v0[31], v0[27]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100657AB4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 256);
  swift_task_dealloc();
  return _swift_task_switch(sub_100657BC4, v1, 0);
}

uint64_t sub_100657BC4()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[40];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[23];
  uint64_t v5 = v0[18];
  uint64_t v4 = v0[19];
  uint64_t v6 = v0[17];
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100657CFC()
{
  uint64_t v1 = v0[35];
  v0[5] = v1;
  v0[39] = v1;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = v0[21];
    uint64_t v2 = v0[22];
    uint64_t v4 = v0[20];
    (*(void (**)(void, void, void))(v0[24] + 104))(v0[26], enum case for SFAirDropSend.Failure.cancelled(_:), v0[23]);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRetain();
    SFAirDropSend.Failure.init(_:)();
  }
  uint64_t v6 = v0[29];
  uint64_t v5 = v0[30];
  uint64_t v7 = v0[27];
  uint64_t v8 = v0[28];
  uint64_t v31 = v0[25];
  uint64_t v25 = v0[23];
  uint64_t v26 = v0[26];
  uint64_t v23 = v0[19];
  uint64_t v24 = v0[24];
  uint64_t v35 = v0[18];
  uint64_t v36 = v0[17];
  uint64_t v9 = v0[12];
  uint64_t v29 = v0[13];
  uint64_t v27 = v0[11];
  uint64_t v28 = v0[14];
  uint64_t v32 = v0[7];
  uint64_t v33 = v0[10];
  uint64_t v38 = v0[6];
  uint64_t v10 = v32 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  uint64_t v34 = v0[9];
  uint64_t v37 = v0[8];
  swift_beginAccess();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v11(v5, v10, v7);
  SFAirDropSend.Transfer.id.getter();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v12(v5, v7);
  v11(v6, v10, v7);
  SFAirDropSend.Transfer.startDate.getter();
  v12(v6, v7);
  SFAirDropSend.Transfer.Metrics.init(id:startDate:)();
  uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  v30(v9, v26, v25);
  uint64_t v13 = enum case for SFAirDropSend.Transfer.Metrics.TransferResult.failure(_:);
  uint64_t v14 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 104))(v9, v13, v14);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
  SFAirDropSend.Transfer.Metrics.result.setter();
  static Date.now.getter();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v27, 0, 1, v29);
  SFAirDropSend.Transfer.Metrics.endDate.setter();
  (*(void (**)(uint64_t, void, uint64_t))(v24 + 104))(v31, enum case for SFAirDropSend.Failure.receiverDeclined(_:), v25);
  LOBYTE(v13) = static SFAirDropSend.Failure.== infix(_:_:)();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  v0[40] = v16;
  v0[41] = (v24 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v16(v31, v25);
  uint64_t v17 = *(void *)(v32 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager + 8);
  uint64_t ObjectType = swift_getObjectType();
  if (v13) {
    uint64_t v19 = 5;
  }
  else {
    uint64_t v19 = 4;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v19, ObjectType, v17);
  uint64_t v20 = v33 + *(int *)(sub_10000A844(&qword_10096EFF8) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v33, v23, v36);
  v30(v20, v26, v25);
  (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))(v33, enum case for SFAirDropSend.Transfer.State.transferFailed(_:), v37);
  sub_100321A40(v33, v38);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v37);
  os_log_type_t v21 = (void *)swift_task_alloc();
  v0[42] = v21;
  *os_log_type_t v21 = v0;
  v21[1] = sub_100657AB4;
  return sub_100320760();
}

uint64_t sub_1006581DC()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = v0[38];
  v0[5] = v1;
  v0[39] = v1;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = v0[21];
    uint64_t v2 = v0[22];
    uint64_t v4 = v0[20];
    (*(void (**)(void, void, void))(v0[24] + 104))(v0[26], enum case for SFAirDropSend.Failure.cancelled(_:), v0[23]);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRetain();
    SFAirDropSend.Failure.init(_:)();
  }
  uint64_t v6 = v0[29];
  uint64_t v5 = v0[30];
  uint64_t v7 = v0[27];
  uint64_t v8 = v0[28];
  uint64_t v31 = v0[25];
  uint64_t v25 = v0[23];
  uint64_t v26 = v0[26];
  uint64_t v23 = v0[19];
  uint64_t v24 = v0[24];
  uint64_t v35 = v0[18];
  uint64_t v36 = v0[17];
  uint64_t v9 = v0[12];
  uint64_t v29 = v0[13];
  uint64_t v27 = v0[11];
  uint64_t v28 = v0[14];
  uint64_t v32 = v0[7];
  uint64_t v33 = v0[10];
  uint64_t v38 = v0[6];
  uint64_t v10 = v32 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  uint64_t v34 = v0[9];
  uint64_t v37 = v0[8];
  swift_beginAccess();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v11(v5, v10, v7);
  SFAirDropSend.Transfer.id.getter();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v12(v5, v7);
  v11(v6, v10, v7);
  SFAirDropSend.Transfer.startDate.getter();
  v12(v6, v7);
  SFAirDropSend.Transfer.Metrics.init(id:startDate:)();
  uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  v30(v9, v26, v25);
  uint64_t v13 = enum case for SFAirDropSend.Transfer.Metrics.TransferResult.failure(_:);
  uint64_t v14 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 104))(v9, v13, v14);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
  SFAirDropSend.Transfer.Metrics.result.setter();
  static Date.now.getter();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v27, 0, 1, v29);
  SFAirDropSend.Transfer.Metrics.endDate.setter();
  (*(void (**)(uint64_t, void, uint64_t))(v24 + 104))(v31, enum case for SFAirDropSend.Failure.receiverDeclined(_:), v25);
  LOBYTE(v13) = static SFAirDropSend.Failure.== infix(_:_:)();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  v0[40] = v16;
  v0[41] = (v24 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v16(v31, v25);
  uint64_t v17 = *(void *)(v32 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager + 8);
  uint64_t ObjectType = swift_getObjectType();
  if (v13) {
    uint64_t v19 = 5;
  }
  else {
    uint64_t v19 = 4;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v19, ObjectType, v17);
  uint64_t v20 = v33 + *(int *)(sub_10000A844(&qword_10096EFF8) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v33, v23, v36);
  v30(v20, v26, v25);
  (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))(v33, enum case for SFAirDropSend.Transfer.State.transferFailed(_:), v37);
  sub_100321A40(v33, v38);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v37);
  os_log_type_t v21 = (void *)swift_task_alloc();
  v0[42] = v21;
  *os_log_type_t v21 = v0;
  v21[1] = sub_100657AB4;
  return sub_100320760();
}

uint64_t sub_1006586D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_10000A6F4;
  return sub_100658788(a1, a2, a4);
}

uint64_t sub_100658788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[13] = a3;
  v4[14] = v3;
  v4[11] = a1;
  v4[12] = a2;
  sub_10000A844((uint64_t *)&unk_100975040);
  v4[15] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10097C360);
  v4[16] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Date();
  v4[17] = v5;
  v4[18] = *(void *)(v5 - 8);
  v4[19] = swift_task_alloc();
  type metadata accessor for SFAirDrop.TransferIdentifier();
  v4[20] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFAirDropSend.Transfer.Metrics();
  v4[21] = v6;
  v4[22] = *(void *)(v6 - 8);
  v4[23] = swift_task_alloc();
  v4[24] = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  v4[25] = swift_task_alloc();
  type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  v4[26] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for UUID();
  v4[27] = v7;
  v4[28] = *(void *)(v7 - 8);
  v4[29] = swift_task_alloc();
  type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  v4[30] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SFAirDropSend.Transfer.State();
  v4[31] = v8;
  v4[32] = *(void *)(v8 - 8);
  v4[33] = swift_task_alloc();
  v4[34] = swift_task_alloc();
  sub_10000A844(&qword_100970D30);
  v4[35] = swift_task_alloc();
  uint64_t v9 = sub_10000A844(&qword_100970D38);
  v4[36] = v9;
  v4[37] = *(void *)(v9 - 8);
  v4[38] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SFAirDrop.ButtonConfiguration();
  v4[39] = v10;
  v4[40] = *(void *)(v10 - 8);
  v4[41] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for SFAirDropSend.Transfer();
  v4[42] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v4[43] = v12;
  v4[44] = *(void *)(v12 + 64);
  v4[45] = swift_task_alloc();
  v4[46] = swift_task_alloc();
  v4[47] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for SFAirDrop.DeclineAction();
  v4[48] = v13;
  v4[49] = *(void *)(v13 - 8);
  v4[50] = swift_task_alloc();
  uint64_t v14 = type metadata accessor for SFAirDrop.Progress();
  v4[51] = v14;
  v4[52] = *(void *)(v14 - 8);
  v4[53] = swift_task_alloc();
  v4[54] = swift_task_alloc();
  uint64_t v15 = sub_10000A844(&qword_10096CC58);
  v4[55] = v15;
  v4[56] = *(void *)(v15 - 8);
  v4[57] = swift_task_alloc();
  uint64_t v16 = type metadata accessor for SFAirDropSend.Request();
  v4[58] = v16;
  v4[59] = *(void *)(v16 - 8);
  v4[60] = swift_task_alloc();
  v4[61] = _s14descr1008C9AB9V10AskRequestVMa();
  v4[62] = swift_task_alloc();
  sub_10000A844(&qword_10096D8B8);
  v4[63] = swift_task_alloc();
  uint64_t v17 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v4[64] = v17;
  v4[65] = *(void *)(v17 - 8);
  v4[66] = swift_task_alloc();
  v4[67] = swift_task_alloc();
  v4[68] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v18 = static AirDropActor.shared;
  v4[69] = static AirDropActor.shared;
  return _swift_task_switch(sub_100658E88, v18, 0);
}

uint64_t sub_100658E88()
{
  uint64_t v1 = v0[65];
  uint64_t v3 = v0[63];
  uint64_t v2 = v0[64];
  swift_retain();
  CurrentValueSubject.value.getter();
  swift_release();
  sub_1002E5BCC(v0[8], v3);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    sub_10000A7E8(v0[63], &qword_10096D8B8);
LABEL_10:
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Missing classroom endpoint or sendable urls", v18, 2u);
      swift_slowDealloc();
    }

    uint64_t v19 = type metadata accessor for SFAirDropSend.Failure();
    sub_10065D87C(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, enum case for SFAirDropSend.Failure.badRequest(_:), v19);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
  uint64_t v4 = v0[68];
  uint64_t v5 = v0[67];
  sub_1002D331C(v0[63], v4, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_10025AE8C(v4, v5);
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    uint64_t v15 = v0[67];
    sub_10065D81C(v0[68], type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_10065D81C(v15, type metadata accessor for SDAirDropDiscoveredEndpoint);
    goto LABEL_10;
  }
  uint64_t v6 = v0[12];
  uint64_t v7 = *(void **)v0[67];
  v0[70] = v7;
  if (!*(void *)(v6 + 16))
  {
    sub_10065D81C(v0[68], type metadata accessor for SDAirDropDiscoveredEndpoint);

    goto LABEL_10;
  }
  uint64_t v8 = v0[13];
  *(void *)(v0[14] + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_urls) = v6;
  swift_bridgeObjectRelease();
  type metadata accessor for SDAirDropContentHandlerUtilities();
  v0[71] = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest;
  swift_bridgeObjectRetain();
  uint64_t v9 = SFAirDropSend.Request.requestSource.getter();
  uint64_t v11 = v10;
  v0[72] = v10;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[73] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_100659394;
  uint64_t v13 = v0[68];
  return sub_1003A0F94(v8, v9, v11, v13);
}

uint64_t sub_100659394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  uint64_t v6 = (void *)*v4;
  v6[74] = a1;
  v6[75] = a2;
  v6[76] = a3;
  v6[77] = v3;
  swift_task_dealloc();
  uint64_t v7 = v5[69];
  swift_bridgeObjectRelease();
  if (v3) {
    uint64_t v8 = sub_10065ADA8;
  }
  else {
    uint64_t v8 = sub_1006594F0;
  }
  return _swift_task_switch(v8, v7, 0);
}

uint64_t sub_1006594F0()
{
  if (v0[74])
  {
    uint64_t v1 = (void *)v0[76];
    sub_1003957B0(v0[74]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v1 = _swiftEmptyArrayStorage;
  }
  uint64_t v3 = v0[59];
  uint64_t v2 = v0[60];
  uint64_t v4 = v0[58];
  uint64_t v5 = v0[14];
  uint64_t v18 = v0[13];
  uint64_t v6 = v5 + v0[71];
  swift_beginAccess();
  sub_1003D4BCC((unint64_t)v1);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v4);
  uint64_t v7 = sub_100313BE0();
  uint64_t v9 = v8;
  id v10 = *(id *)(v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_deviceStatus);
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)swift_task_alloc();
  v0[78] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1006596B4;
  uint64_t v12 = v0[75];
  uint64_t v13 = v0[74];
  uint64_t v14 = v0[62];
  uint64_t v15 = v0[60];
  return sub_1005CDB90(v14, v15, v7, v9, (uint64_t)v10, v18, v13, v12);
}

uint64_t sub_1006596B4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 632) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 552);
  if (v0) {
    uint64_t v4 = sub_10065AFB0;
  }
  else {
    uint64_t v4 = sub_1006597E0;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1006597E0()
{
  uint64_t v1 = *(void **)(v0 + 560);
  uint64_t v2 = *(void *)(v0 + 112);
  type metadata accessor for URL();
  id v3 = v1;
  v4.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  if (*(void *)(v2
                 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_bundleIdentifier
                 + 8))
    NSString v5 = String._bridgeToObjectiveC()();
  else {
    NSString v5 = 0;
  }
  uint64_t v6 = *(void *)(v0 + 496) + *(int *)(*(void *)(v0 + 488) + 56);
  unint64_t v7 = *(void *)(v6 + 8);
  if (v7 >> 60 == 15)
  {
    Class isa = 0;
  }
  else
  {
    uint64_t v9 = *(void *)v6;
    sub_10025ADCC(*(void *)v6, *(void *)(v6 + 8));
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100250CB0(v9, v7);
  }
  id v10 = *(void **)(v0 + 560);
  id v11 = [v10 operationToSendItems:v4.super.isa fromBundleIdentifier:v5 description:0 previewImageData:isa];
  *(void *)(v0 + 640) = v11;

  if (v11)
  {
    uint64_t v12 = *(void *)(v0 + 432);
    uint64_t v13 = *(void *)(v0 + 408);
    uint64_t v14 = *(void *)(v0 + 416);
    uint64_t v15 = *(void *)(v0 + 344);
    uint64_t v46 = *(void *)(v0 + 368);
    uint64_t v42 = *(void *)(v0 + 336);
    uint64_t v43 = *(char **)(v0 + 376);
    uint64_t v16 = *(void *)(v0 + 320);
    uint64_t v44 = *(void **)(v0 + 328);
    uint64_t v45 = *(void *)(v0 + 312);
    uint64_t v17 = *(void **)(v0 + 112);
    (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for SFAirDrop.Progress.notStarted(_:), v13);
    *(void *)(swift_allocObject() + 16) = v17;
    uint64_t v18 = v17;
    sub_10000A844((uint64_t *)&unk_10096C8B0);
    withProgressTask<A, B>(_:initialProgress:operation:)();
    swift_release();
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    *(void *)(v0 + 648) = v19;
    *(void *)(v0 + 656) = (v14 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v19(v12, v13);
    [v11 addTarget:v18 selector:"operationStartedWithOperation:" forOperationEvents:1];
    [v11 addTarget:v18 selector:"operationMadeProgressWithOperation:" forOperationEvents:8];
    [v11 addTarget:v18 selector:"operationEndedWithOperation:" forOperationEvents:6];
    [*(id *)&v18[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendOperationQueue] addOperation:v11];
    uint64_t v20 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
    *(void *)(v0 + 664) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
    os_log_type_t v21 = &v18[v20];
    swift_beginAccess();
    uint64_t v22 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 16);
    *(void *)(v0 + 672) = v22;
    *(void *)(v0 + 680) = (v15 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v22((uint64_t)v43, v21, v42);
    *uint64_t v44 = 0x662E657261757173;
    v44[1] = 0xEB000000006C6C69;
    (*(void (**)(void *, void, uint64_t))(v16 + 104))(v44, enum case for SFAirDrop.ButtonConfiguration.symbol(_:), v45);
    uint64_t v23 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v22(v46, v43, v42);
    unint64_t v24 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v23;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 32))(v25 + v24, v46, v42);
    SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)();
    uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    *(void *)(v0 + 688) = v26;
    *(void *)(v0 + 696) = (v15 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v26((uint64_t)v43, v42);
    SFProgressTask.makeAsyncIterator()();
    *(_DWORD *)(v0 + 736) = enum case for SFAirDropSend.Transfer.State.transferring(_:);
    uint64_t v27 = static AirDropActor.shared;
    uint64_t v28 = sub_10065D87C((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v29 = (void *)swift_task_alloc();
    *(void *)(v0 + 704) = v29;
    *uint64_t v29 = v0;
    v29[1] = sub_10065A030;
    uint64_t v30 = *(void *)(v0 + 280);
    uint64_t v31 = *(void *)(v0 + 288);
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v30, v27, v28, v31, v0 + 72);
  }
  else
  {
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Failed to start catalyst send", v34, 2u);
      swift_slowDealloc();
    }
    uint64_t v35 = *(void **)(v0 + 560);
    uint64_t v36 = *(void *)(v0 + 544);
    uint64_t v37 = *(void *)(v0 + 496);

    uint64_t v38 = type metadata accessor for SFAirDropSend.Failure();
    sub_10065D87C(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v38 - 8) + 104))(v39, enum case for SFAirDropSend.Failure.badRequest(_:), v38);
    swift_willThrow();

    sub_10065D81C(v37, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
    sub_10065D81C(v36, type metadata accessor for SDAirDropDiscoveredEndpoint);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unsigned int v40 = *(uint64_t (**)(void))(v0 + 8);
    return v40();
  }
}

uint64_t sub_10065A030()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 552);
  if (v0) {
    NSArray v4 = sub_10065B1B8;
  }
  else {
    NSArray v4 = sub_10065A144;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10065A144()
{
  uint64_t v1 = *(void *)(v0 + 408);
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 280);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 296) + 8))(*(void *)(v0 + 304), *(void *)(v0 + 288));
    NSArray v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 712) = v4;
    *NSArray v4 = v0;
    v4[1] = sub_10065A5FC;
    uint64_t v5 = *(void *)(v0 + 440);
    return SFProgressTask.finalValue.getter(v0 + 80, v5);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 544);
    uint64_t v7 = *(void *)(v0 + 528);
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(*(void *)(v0 + 424), v3, v1);
    sub_10025AE8C(v6, v7);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = *(uint64_t **)(v0 + 208);
        sub_1002D331C(*(void *)(v0 + 528), (uint64_t)v8, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
        uint64_t v39 = v8[1];
        uint64_t v40 = *v8;
        swift_bridgeObjectRetain();
        uint64_t v14 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
        goto LABEL_9;
      case 2u:
        uint64_t v8 = *(uint64_t **)(v0 + 200);
        sub_1002D331C(*(void *)(v0 + 528), (uint64_t)v8, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
        uint64_t v15 = UUID.uuidString.getter();
        uint64_t v39 = v16;
        uint64_t v40 = v15;
        uint64_t v14 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint;
        goto LABEL_9;
      case 3u:
        uint64_t v17 = **(void ***)(v0 + 528);
        id v18 = [v17 identifier];
        if (!v18)
        {
          __break(1u);
          JUMPOUT(0x10065A5ECLL);
        }
        uint64_t v19 = v18;
        uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v39 = v21;
        uint64_t v40 = v20;

        goto LABEL_12;
      default:
        uint64_t v9 = *(void *)(v0 + 232);
        uint64_t v8 = *(uint64_t **)(v0 + 240);
        uint64_t v11 = *(void *)(v0 + 216);
        uint64_t v10 = *(void *)(v0 + 224);
        sub_1002D331C(*(void *)(v0 + 528), (uint64_t)v8, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        sub_10031430C();
        uint64_t v12 = UUID.uuidString.getter();
        uint64_t v39 = v13;
        uint64_t v40 = v12;
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
        uint64_t v14 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
LABEL_9:
        sub_10065D81C((uint64_t)v8, v14);
LABEL_12:
        unsigned int v44 = *(_DWORD *)(v0 + 736);
        uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v0 + 688);
        uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
        uint64_t v23 = *(void *)(v0 + 416);
        uint64_t v22 = *(void *)(v0 + 424);
        uint64_t v24 = *(void *)(v0 + 408);
        uint64_t v25 = *(void *)(v0 + 392);
        uint64_t v41 = *(void *)(v0 + 384);
        uint64_t v42 = *(void *)(v0 + 400);
        uint64_t v45 = *(void *)(v0 + 336);
        uint64_t v26 = *(uint64_t **)(v0 + 272);
        uint64_t v28 = *(void *)(v0 + 248);
        uint64_t v27 = *(void *)(v0 + 256);
        uint64_t v43 = *(void *)(v0 + 360);
        uint64_t v29 = (int *)sub_10000A844((uint64_t *)&unk_10097C3A0);
        uint64_t v30 = (char *)v26 + v29[12];
        uint64_t v31 = (uint64_t *)((char *)v26 + v29[16]);
        uint64_t v32 = (char *)v26 + v29[20];
        uint64_t *v26 = v40;
        v26[1] = v39;
        (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v30, v22, v24);
        *uint64_t v31 = 0;
        v31[1] = 0;
        (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v32, v42, v41);
        (*(void (**)(uint64_t *, void, uint64_t))(v27 + 104))(v26, v44, v28);
        sub_100321A40((uint64_t)v26, v43);
        (*(void (**)(uint64_t *, uint64_t))(v27 + 8))(v26, v28);
        v46(v43, v45);
        v47(v22, v24);
        uint64_t v33 = static AirDropActor.shared;
        uint64_t v34 = sub_10065D87C((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
        uint64_t v35 = (void *)swift_task_alloc();
        *(void *)(v0 + 704) = v35;
        *uint64_t v35 = v0;
        v35[1] = sub_10065A030;
        uint64_t v36 = *(void *)(v0 + 280);
        uint64_t v37 = *(void *)(v0 + 288);
        uint64_t result = __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v36, v33, v34, v37, v0 + 72);
        break;
    }
  }
  return result;
}

uint64_t sub_10065A5FC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 720) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 552);
    NSArray v4 = sub_10065B450;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 552);
    swift_bridgeObjectRelease();
    NSArray v4 = sub_10065A724;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10065A724()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[86];
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[84];
  uint64_t v4 = v0[46];
  uint64_t v3 = v0[47];
  uint64_t v5 = v0[42];
  uint64_t v19 = v0[33];
  uint64_t v22 = v0[32];
  uint64_t v23 = v0[31];
  uint64_t v20 = v0[21];
  uint64_t v13 = v0[23];
  uint64_t v17 = v0[17];
  uint64_t v18 = v0[22];
  uint64_t v14 = v0[16];
  uint64_t v15 = v0[15];
  uint64_t v16 = v0[18];
  uint64_t v6 = v0[14] + v0[83];
  uint64_t v21 = v0[11];
  v2(v3, v6, v5);
  SFAirDropSend.Transfer.id.getter();
  v1(v3, v5);
  v2(v4, v6, v5);
  SFAirDropSend.Transfer.startDate.getter();
  v1(v4, v5);
  SFAirDropSend.Transfer.Metrics.init(id:startDate:)();
  uint64_t v7 = enum case for SFAirDropSend.Transfer.Metrics.TransferResult.success(_:);
  uint64_t v8 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 104))(v14, v7, v8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v14, 0, 1, v8);
  SFAirDropSend.Transfer.Metrics.result.setter();
  static Date.now.getter();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v15, 0, 1, v17);
  SFAirDropSend.Transfer.Metrics.endDate.setter();
  uint64_t v10 = (void *)(v19 + *(int *)(sub_10000A844((uint64_t *)&unk_100974570) + 48));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v19, v13, v20);
  *uint64_t v10 = 0;
  v10[1] = 0;
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))(v19, enum case for SFAirDropSend.Transfer.State.completedSuccessfully(_:), v23);
  sub_100321A40(v19, v21);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v19, v23);
  uint64_t v11 = (void *)swift_task_alloc();
  v0[91] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_10065AA08;
  return sub_100320760();
}

uint64_t sub_10065AA08()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 552);
  swift_task_dealloc();
  return _swift_task_switch(sub_10065AB18, v1, 0);
}

uint64_t sub_10065AB18()
{
  uint64_t v1 = *(void **)(v0 + 560);
  uint64_t v2 = *(void *)(v0 + 544);
  uint64_t v3 = *(void *)(v0 + 448);
  uint64_t v13 = *(void *)(v0 + 456);
  uint64_t v14 = *(void *)(v0 + 496);
  uint64_t v12 = *(void *)(v0 + 440);
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 400);
  uint64_t v6 = *(void *)(v0 + 384);
  uint64_t v8 = *(void *)(v0 + 176);
  uint64_t v7 = *(void *)(v0 + 184);
  uint64_t v9 = *(void *)(v0 + 168);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v13, v12);
  sub_10065D81C(v14, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_10065D81C(v2, type metadata accessor for SDAirDropDiscoveredEndpoint);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_10065ADA8()
{
  uint64_t v1 = *(void *)(v0 + 544);

  sub_10065D81C(v1, type metadata accessor for SDAirDropDiscoveredEndpoint);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10065AFB0()
{
  uint64_t v1 = *(void *)(v0 + 544);

  sub_10065D81C(v1, type metadata accessor for SDAirDropDiscoveredEndpoint);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10065B1B8()
{
  uint64_t v1 = *(void **)(v0 + 560);
  uint64_t v13 = *(void *)(v0 + 496);
  uint64_t v14 = *(void *)(v0 + 544);
  uint64_t v2 = *(void *)(v0 + 448);
  uint64_t v12 = *(void *)(v0 + 456);
  uint64_t v3 = *(void *)(v0 + 440);
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 400);
  uint64_t v6 = *(void *)(v0 + 384);
  uint64_t v7 = *(void *)(v0 + 296);
  uint64_t v8 = *(void *)(v0 + 304);
  uint64_t v9 = *(void *)(v0 + 288);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v3);
  sub_10065D81C(v13, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_10065D81C(v14, type metadata accessor for SDAirDropDiscoveredEndpoint);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_10065B450()
{
  uint64_t v1 = *(void **)(v0 + 560);
  uint64_t v2 = *(void *)(v0 + 544);
  uint64_t v3 = *(void *)(v0 + 496);
  uint64_t v5 = *(void *)(v0 + 448);
  uint64_t v4 = *(void *)(v0 + 456);
  uint64_t v6 = *(void *)(v0 + 440);
  uint64_t v8 = *(void *)(v0 + 392);
  uint64_t v7 = *(void *)(v0 + 400);
  uint64_t v9 = *(void *)(v0 + 384);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_10065D81C(v3, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_10065D81C(v2, type metadata accessor for SDAirDropDiscoveredEndpoint);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_10065B6C0(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  sub_10000A844(&qword_10096CCA0);
  v2[7] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v3 = static AirDropActor.shared;
  return _swift_task_switch(sub_10065B78C, v3, 0);
}

uint64_t sub_10065B78C()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  uint64_t v4 = sub_10000A844(&qword_10096BBA8);
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v3, v4);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v1, 0, 1, v4);
  uint64_t v6 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation;
  swift_beginAccess();
  sub_10065D8C4(v1, v6);
  swift_endAccess();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10065B8BC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000A844(&qword_10096BBA8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SFAirDrop.Progress();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = a1;
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Classroom send progress", v14, 2u);
    a1 = v19;
    swift_slowDealloc();
  }

  id v15 = [a1 totalUnitCount];
  id v16 = [a1 completedUnitCount];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = v15;
  v11[16] = 0;
  *((void *)v11 + 3) = v16;
  *((void *)v11 + 4) = 0;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for SFAirDrop.Progress.transferring(_:), v8);
  uint64_t v17 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation;
  swift_beginAccess();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v17, 1, v4))
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return swift_endAccess();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v17, v4);
    swift_endAccess();
    SFProgressContinuation.yield(_:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void sub_10065BBD0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000A844(&qword_10096BBA8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_urls);
  if (!v8)
  {
LABEL_4:
    id v19 = [a1 error];
    sub_10065BE74(v19);
    uint64_t v11 = v19;

    return;
  }
  swift_bridgeObjectRetain();
  id v9 = [a1 error];
  if (v9)
  {
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();

    goto LABEL_4;
  }
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Classroom send succeeded", v14, 2u);
    swift_slowDealloc();
  }

  uint64_t v15 = *(void *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(2, ObjectType, v15);
  uint64_t v17 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation;
  swift_beginAccess();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v17, 1, v4))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v17, v4);
    uint64_t v20 = v8;
    SFProgressContinuation.finish(with:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  swift_bridgeObjectRelease();
}

void sub_10065BE74(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000A844(&qword_10096BBA8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Classroom send failed", v10, 2u);
    swift_slowDealloc();
  }

  if (a1
    && (v30[1] = a1,
        swift_errorRetain(),
        sub_10000A844(&qword_10096BAF0),
        sub_1005C9DAC(),
        (swift_dynamicCast() & 1) != 0))
  {
    id v11 = v30[0];
    id v12 = [v30[0] code];
    if (v12 == (id)18)
    {
      uint64_t v21 = *(void *)(v2
                      + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager
                      + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(5, ObjectType, v21);
      uint64_t v23 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation;
      swift_beginAccess();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v23, 1, v4))
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v23, v4);
        uint64_t v24 = type metadata accessor for SFAirDropSend.Failure();
        sub_10065D87C(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
        swift_allocError();
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, enum case for SFAirDropSend.Failure.receiverDeclined(_:), v24);
        goto LABEL_13;
      }
    }
    else if (v12 == (id)404)
    {
      uint64_t v13 = *(void *)(v2
                      + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager
                      + 8);
      uint64_t v14 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(4, v14, v13);
      uint64_t v15 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation;
      swift_beginAccess();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v15, 1, v4))
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v15, v4);
        type metadata accessor for CancellationError();
        sub_10065D87C(&qword_10096CCB8, (void (*)(uint64_t))&type metadata accessor for CancellationError);
        swift_allocError();
        CancellationError.init()();
LABEL_13:
        SFProgressContinuation.fail(with:)();

        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v26 = *(void *)(v2
                      + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager
                      + 8);
      uint64_t v27 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(4, v27, v26);
      uint64_t v28 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation;
      swift_beginAccess();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v28, 1, v4))
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v28, v4);
        id v29 = v11;
        SFProgressContinuation.fail(with:)();

        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        return;
      }
    }
  }
  else
  {
    uint64_t v16 = *(void *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager + 8);
    uint64_t v17 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(4, v17, v16);
    uint64_t v18 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation;
    swift_beginAccess();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v18, 1, v4))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v18, v4);
      uint64_t v19 = type metadata accessor for SFAirDropSend.Failure();
      sub_10065D87C(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, enum case for SFAirDropSend.Failure.badResponse(_:), v19);
      SFProgressContinuation.fail(with:)();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_14:
      swift_errorRelease();
    }
  }
}

uint64_t sub_10065C518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_10065C538, 0, 0);
}

uint64_t sub_10065C538()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v0 = static AirDropActor.shared;
  return _swift_task_switch(sub_10065C5D0, v0, 0);
}

uint64_t sub_10065C5D0()
{
  sub_10065B8BC(*(void **)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10065C650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_10065C670, 0, 0);
}

uint64_t sub_10065C670()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v0 = static AirDropActor.shared;
  return _swift_task_switch(sub_10065C708, v0, 0);
}

uint64_t sub_10065C708()
{
  sub_10065BBD0(*(void **)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10065C788(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  id v12 = (void *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = a1;
  v12[5] = a3;
  id v13 = a3;
  id v14 = a1;
  id v15 = v13;
  sub_10028CFA8((uint64_t)v10, a5, (uint64_t)v12);

  return swift_release();
}

uint64_t sub_10065C8AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  uint64_t v38 = v4;
  __chkstk_darwin(v3);
  uint64_t v36 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SFAirDropSend.Transfer();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v15 = (void *)Strong;
    uint64_t v16 = v6;
    id v17 = objc_retain(*(id *)(Strong
                            + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendOperationQueue));

    [v17 cancelAllOperations];
    uint64_t v6 = v16;
  }
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v19 = (void *)result;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, result + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log, v10);

    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    int v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v35 = v10;
      uint64_t v23 = swift_slowAlloc();
      int v33 = v22;
      uint64_t v24 = (uint8_t *)v23;
      uint64_t v34 = swift_slowAlloc();
      uint64_t v40 = v34;
      uint64_t v31 = v6;
      uint64_t v32 = v24;
      *(_DWORD *)uint64_t v24 = 136315138;
      v30[1] = v24 + 4;
      uint64_t v25 = v36;
      SFAirDropSend.Transfer.id.getter();
      sub_10065D87C(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
      uint64_t v26 = v37;
      uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v29 = v28;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v25, v26);
      uint64_t v39 = sub_100254634(v27, v29, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v31);
      _os_log_impl((void *)&_mh_execute_header, v20, (os_log_type_t)v33, "Transfer %s was cancelled.", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v35);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
  }
  return result;
}

uint64_t sub_10065CD14()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendOperationQueue));
  sub_10000A7E8(v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation, &qword_10096CCA0);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10065CDF8()
{
  return _s15ClassroomRunnerCMa_0();
}

uint64_t _s15ClassroomRunnerCMa_0()
{
  uint64_t result = qword_10097D6E8;
  if (!qword_10097D6E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10065CE4C()
{
  sub_10065CF00();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10065CF00()
{
  if (!qword_10097D6F8)
  {
    sub_100247840(&qword_10096BBA8);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, &qword_10097D6F8);
    }
  }
}

uint64_t sub_10065CF60()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_10000A6F4;
  *(_OWORD *)(v2 + 16) = v3;
  return _swift_task_switch(sub_10065C670, 0, 0);
}

uint64_t sub_10065D010()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_10000A6F0;
  *(_OWORD *)(v2 + 16) = v3;
  return _swift_task_switch(sub_10065C538, 0, 0);
}

id sub_10065D0BC(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12)
{
  uint64_t v53 = a7;
  uint64_t v54 = a8;
  uint64_t v44 = a6;
  uint64_t v45 = a5;
  uint64_t v43 = a4;
  uint64_t v49 = a1;
  v50 = a2;
  uint64_t v51 = a10;
  uint64_t v52 = a9;
  uint64_t v48 = a11;
  uint64_t v46 = a12;
  uint64_t v47 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v42 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for SFAirDropSend.Transfer();
  uint64_t v39 = *(void *)(v16 - 8);
  uint64_t v17 = v39;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for SFAirDropSend.Request();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v40 = v20;
  uint64_t v41 = v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = &v12[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendContinuation];
  uint64_t v25 = sub_10000A844(&qword_10096BBA8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
  *(void *)&v12[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_urls] = 0;
  id v26 = objc_allocWithZone((Class)NSOperationQueue);
  uint64_t v27 = v12;
  id v28 = [v26 init];
  *(void *)&v27[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_sendOperationQueue] = v28;
  [v28 setQualityOfService:25];
  unint64_t v29 = &v27[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine15ClassroomRunner_bundleIdentifier];
  uint64_t v30 = v45;
  *(void *)unint64_t v29 = v43;
  *((void *)v29 + 1) = v30;

  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, a3, v20);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v32 = v44;
  uint64_t v33 = v16;
  v31(v19, v44, v16);
  uint64_t v34 = (uint64_t)v42;
  uint64_t v36 = v46;
  uint64_t v35 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v42, v46, v47);
  id v37 = sub_100323F2C(v49, v50, (uint64_t)v23, (uint64_t)v19, v53, v54, v52, v51, v48, v34);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v36, v35);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v32, v33);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(a3, v40);
  return v37;
}

uint64_t sub_10065D44C()
{
  uint64_t v1 = v0;
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Starting classroom send", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(1, ObjectType, v5);
}

uint64_t sub_10065D52C(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_10000A6F0;
  return sub_1006586D0(a1, a2, v7, v6);
}

uint64_t sub_10065D5E0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10065D618(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000A6F4;
  return sub_10065B6C0(a1, v4);
}

uint64_t sub_10065D6B4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10065D6EC()
{
  uint64_t v1 = type metadata accessor for SFAirDropSend.Transfer();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10065D7B8()
{
  uint64_t v1 = *(void *)(type metadata accessor for SFAirDropSend.Transfer() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_10065C8AC(v2, v3);
}

uint64_t sub_10065D81C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10065D87C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10065D8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_10096CCA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10065D92C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for NWInterface.InterfaceSubtype();
  uint64_t v89 = *(void *)(v2 - 8);
  uint64_t v90 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NWInterface.InterfaceType();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A844((uint64_t *)&unk_10097D778);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for NWPath();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  NWConnection.currentPath.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    uint64_t v87 = v13;
    uint64_t v88 = a1;
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    uint64_t v86 = v12;
    v23(v15, v11, v12);
    uint64_t v24 = *(void (**)(char *, void, uint64_t))(v6 + 104);
    v24(v8, enum case for NWInterface.InterfaceType.cellular(_:), v5);
    uint64_t v25 = v15;
    char v26 = NWPath.usesInterfaceType(_:)();
    uint64_t v27 = *(void (**)(char *, uint64_t))(v6 + 8);
    v27(v8, v5);
    if (v26)
    {
      id v28 = v15;
      if (qword_10096A0D8 != -1) {
        swift_once();
      }
      uint64_t v29 = type metadata accessor for Logger();
      sub_10000B47C(v29, (uint64_t)qword_10097D750);
      uint64_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.debug.getter();
      BOOL v32 = os_log_type_enabled(v30, v31);
      uint64_t v34 = v87;
      uint64_t v33 = v88;
      if (v32)
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v35 = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "Current path is using a cellular interface type", v35, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v86);
      uint64_t v36 = (unsigned int *)&enum case for SFNWInterfaceType.cellular(_:);
      goto LABEL_49;
    }
    v24(v8, enum case for NWInterface.InterfaceType.wiredEthernet(_:), v5);
    char v37 = NWPath.usesInterfaceType(_:)();
    v27(v8, v5);
    if (v37)
    {
      uint64_t v38 = v15;
      char v39 = NWPath.isDirect.getter();
      uint64_t v40 = v87;
      uint64_t v33 = v88;
      if (v39)
      {
        if (qword_10096A0D8 != -1) {
          swift_once();
        }
        uint64_t v41 = type metadata accessor for Logger();
        sub_10000B47C(v41, (uint64_t)qword_10097D750);
        uint64_t v42 = Logger.logObject.getter();
        os_log_type_t v43 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v42, v43))
        {
          uint64_t v44 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v44 = 0;
          _os_log_impl((void *)&_mh_execute_header, v42, v43, "Current path is using a direct wired interface type", v44, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v86);
        uint64_t v36 = (unsigned int *)&enum case for SFNWInterfaceType.directWired(_:);
      }
      else
      {
        if (qword_10096A0D8 != -1) {
          swift_once();
        }
        uint64_t v58 = type metadata accessor for Logger();
        sub_10000B47C(v58, (uint64_t)qword_10097D750);
        uint64_t v59 = Logger.logObject.getter();
        os_log_type_t v60 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v59, v60))
        {
          uint64_t v61 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v61 = 0;
          _os_log_impl((void *)&_mh_execute_header, v59, v60, "Current path is using a wired interface type", v61, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v86);
        uint64_t v36 = (unsigned int *)&enum case for SFNWInterfaceType.wired(_:);
      }
      goto LABEL_49;
    }
    v24(v8, enum case for NWInterface.InterfaceType.wifi(_:), v5);
    char v45 = NWPath.usesInterfaceType(_:)();
    v27(v8, v5);
    if (v45)
    {
      uint64_t v47 = v89;
      uint64_t v46 = v90;
      uint64_t v48 = *(void (**)(char *, void, uint64_t))(v89 + 104);
      v48(v4, enum case for NWInterface.InterfaceSubtype.wifiAWDL(_:), v90);
      char v49 = NWPath.usesInterfaceSubtype(_:)();
      v50 = *(void (**)(char *, uint64_t))(v47 + 8);
      v50(v4, v46);
      if (v49)
      {
        uint64_t v51 = v25;
        if (qword_10096A0D8 != -1) {
          swift_once();
        }
        uint64_t v52 = type metadata accessor for Logger();
        sub_10000B47C(v52, (uint64_t)qword_10097D750);
        uint64_t v53 = Logger.logObject.getter();
        os_log_type_t v54 = static os_log_type_t.debug.getter();
        BOOL v55 = os_log_type_enabled(v53, v54);
        uint64_t v56 = v87;
        uint64_t v33 = v88;
        if (v55)
        {
          os_log_type_t v57 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v57 = 0;
          _os_log_impl((void *)&_mh_execute_header, v53, v54, "Current path is using an AWDL interface subtype", v57, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v56 + 8))(v51, v86);
        uint64_t v36 = (unsigned int *)&enum case for SFNWInterfaceType.awdl(_:);
        goto LABEL_49;
      }
      v48(v4, enum case for NWInterface.InterfaceSubtype.wifiInfrastructure(_:), v46);
      char v70 = NWPath.usesInterfaceSubtype(_:)();
      v50(v4, v46);
      if (v70)
      {
        v71 = v25;
        char v72 = NWPath.isDirect.getter();
        uint64_t v73 = v87;
        uint64_t v33 = v88;
        if (v72)
        {
          if (qword_10096A0D8 != -1) {
            swift_once();
          }
          uint64_t v74 = type metadata accessor for Logger();
          sub_10000B47C(v74, (uint64_t)qword_10097D750);
          uint64_t v75 = Logger.logObject.getter();
          os_log_type_t v76 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v75, v76))
          {
            uint64_t v77 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v77 = 0;
            _os_log_impl((void *)&_mh_execute_header, v75, v76, "Current path is using a local WiFi interface subtype", v77, 2u);
            swift_slowDealloc();
          }

          (*(void (**)(char *, uint64_t))(v73 + 8))(v71, v86);
          uint64_t v36 = (unsigned int *)&enum case for SFNWInterfaceType.localWiFi(_:);
        }
        else
        {
          if (qword_10096A0D8 != -1) {
            swift_once();
          }
          uint64_t v81 = type metadata accessor for Logger();
          sub_10000B47C(v81, (uint64_t)qword_10097D750);
          v82 = Logger.logObject.getter();
          os_log_type_t v83 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v82, v83))
          {
            v84 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v84 = 0;
            _os_log_impl((void *)&_mh_execute_header, v82, v83, "Current path is using a WiFi interface subtype", v84, 2u);
            swift_slowDealloc();
          }

          (*(void (**)(char *, uint64_t))(v73 + 8))(v71, v86);
          uint64_t v36 = (unsigned int *)&enum case for SFNWInterfaceType.wifi(_:);
        }
        goto LABEL_49;
      }
      uint64_t v62 = v25;
      uint64_t v67 = v87;
      uint64_t v33 = v88;
      if (qword_10096A0D8 != -1) {
        swift_once();
      }
      uint64_t v78 = type metadata accessor for Logger();
      sub_10000B47C(v78, (uint64_t)qword_10097D750);
      id v64 = Logger.logObject.getter();
      os_log_type_t v65 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v64, v65)) {
        goto LABEL_48;
      }
      v68 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v68 = 0;
      id v69 = "Current path is using an unknown WiFi interface subtype";
    }
    else
    {
      uint64_t v62 = v15;
      if (qword_10096A0D8 != -1) {
        swift_once();
      }
      uint64_t v63 = type metadata accessor for Logger();
      sub_10000B47C(v63, (uint64_t)qword_10097D750);
      id v64 = Logger.logObject.getter();
      os_log_type_t v65 = static os_log_type_t.error.getter();
      BOOL v66 = os_log_type_enabled(v64, v65);
      uint64_t v67 = v87;
      uint64_t v33 = v88;
      if (!v66) {
        goto LABEL_48;
      }
      v68 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v68 = 0;
      id v69 = "Current path is using an unknown interface subtype";
    }
    _os_log_impl((void *)&_mh_execute_header, v64, v65, v69, v68, 2u);
    swift_slowDealloc();
LABEL_48:

    (*(void (**)(char *, uint64_t))(v67 + 8))(v62, v86);
    uint64_t v36 = (unsigned int *)&enum case for SFNWInterfaceType.other(_:);
LABEL_49:
    uint64_t v79 = *v36;
    uint64_t v80 = type metadata accessor for SFNWInterfaceType();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 104))(v33, v79, v80);
  }
  sub_10000A7E8((uint64_t)v11, (uint64_t *)&unk_10097D778);
  if (qword_10096A0D8 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_10000B47C(v16, (uint64_t)qword_10097D750);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Connection does not have a current path", v19, 2u);
    swift_slowDealloc();
  }

  uint64_t v20 = enum case for SFNWInterfaceType.other(_:);
  uint64_t v21 = type metadata accessor for SFNWInterfaceType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(a1, v20, v21);
}

uint64_t sub_10065E4D0()
{
  uint64_t v0 = (void *)swift_slowAlloc();
  *uint64_t v0 = 0;
  v0[1] = 0;
  sub_100313F6C();
  nw_endpoint_set_agent_identifier();
  swift_unknownObjectRelease();

  return swift_slowDealloc();
}

void sub_10065E534(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  if (a2 && a4 && a6)
  {
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease();
    v25[0] = 0x70706F7264726961;
    v25[1] = 0xEB000000003A6F72;
    v12._countAndFlagsBits = a3;
    v12._object = a4;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 58;
    v13._object = (void *)0xE100000000000000;
    String.append(_:)(v13);
    v14._countAndFlagsBits = a5;
    v14._object = a6;
    String.append(_:)(v14);
    v15._countAndFlagsBits = 58;
    v15._object = (void *)0xE100000000000000;
    String.append(_:)(v15);
    v16._countAndFlagsBits = a1;
    v16._object = a2;
    String.append(_:)(v16);
    if (qword_10096A0D8 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_10000B47C(v17, (uint64_t)qword_10097D750);
    swift_bridgeObjectRetain_n();
    os_log_type_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      v25[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      swift_bridgeObjectRetain();
      sub_100254634(0x70706F7264726961, 0xEB000000003A6F72, v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Setting Internet fallback endpoint with alias: %s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    String.utf8CString.getter();
    swift_bridgeObjectRelease();
    nw_endpoint_create_application_service_with_alias();
    swift_release();
    NWConnection.nw.getter();
    nw_connection_set_internet_fallback_endpoint();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_10096A0D8 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_10000B47C(v21, (uint64_t)qword_10097D750);
    oslog = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v22, "Cannot set Internet fallback endpoint", v23, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_10065E8D0(NSObject *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v32 = a6;
  uint64_t v33 = a7;
  uint64_t v31 = a5;
  uint64_t v13 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v13);
  Swift::String v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v16);
  os_log_type_t v18 = (id *)((char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10025AE8C(v8, (uint64_t)v18);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v19 = sub_1006677F0(a1, a2, 1, a4, v31, v32, v33);
      uint64_t v20 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
      goto LABEL_4;
    case 2u:
      sub_100668D14((uint64_t)v18, (uint64_t)v15);
      uint64_t v19 = sub_10066721C(a3 & 1, *(void *)&v15[*(int *)(v13 + 24)]);
      uint64_t v21 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint;
      uint64_t v22 = (uint64_t)v15;
      goto LABEL_6;
    case 3u:

      if (qword_10096A0D8 != -1) {
        swift_once();
      }
      uint64_t v23 = type metadata accessor for Logger();
      sub_10000B47C(v23, (uint64_t)qword_10097D750);
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.error.getter();
      uint64_t v19 = v25;
      if (os_log_type_enabled(v24, v25))
      {
        char v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v26 = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v19, "Classroom not applicable for SDNWParameters", v26, 2u);
        swift_slowDealloc();
      }

      uint64_t v27 = type metadata accessor for SFAirDropSend.Failure();
      sub_100668C48(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v27 - 8) + 104))(v28, enum case for SFAirDropSend.Failure.badRequest(_:), v27);
      swift_willThrow();
      return v19;
    default:
      uint64_t v19 = sub_10066721C(a3 & 1, 0);
      uint64_t v20 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
LABEL_4:
      uint64_t v21 = v20;
      uint64_t v22 = (uint64_t)v18;
LABEL_6:
      sub_1004EE87C(v22, v21);
      return v19;
  }
}

const char *SFAirDrop.quicServiceType.unsafeMutableAddressor()
{
  return "_asquic._udp";
}

const char *SFAirDrop.domain.unsafeMutableAddressor()
{
  return "local";
}

SecTrustRef sub_10065EC34()
{
  uint64_t v0 = NWConnection.nw.getter();
  uint64_t v1 = nw_protocol_copy_tls_definition();
  uint64_t v2 = nw_connection_copy_protocol_metadata(v0, v1);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (!v2) {
    return 0;
  }
  nw_tls_copy_sec_protocol_metadata(v2);
  uint64_t v3 = sec_protocol_metadata_copy_sec_trust();
  swift_unknownObjectRelease();
  if (!v3)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  SecTrustRef v4 = sec_trust_copy_ref(v3);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_10065ECDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v51 = a4;
  uint64_t v45 = sub_10000A844(&qword_100974AD8);
  __chkstk_darwin(v45);
  os_log_type_t v43 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for SHA256();
  uint64_t v44 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v48 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SHA256Digest();
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v47 = v9;
  __chkstk_darwin(v9);
  v50 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for String.Encoding();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52[3] = a2;
  v52[4] = a3;
  sub_10043661C(a1, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    swift_bridgeObjectRetain();
    sub_10000A7E8((uint64_t)v17, &qword_100974EA0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
    swift_bridgeObjectRetain();
    v22._countAndFlagsBits = UUID.uuidString.getter();
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
  static String.Encoding.utf8.getter();
  uint64_t v23 = String.data(using:allowLossyConversion:)();
  unint64_t v25 = v24;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v25 >> 60 != 15)
  {
    sub_100668C48((unint64_t *)&unk_100974C20, (void (*)(uint64_t))&type metadata accessor for SHA256);
    uint64_t v32 = v48;
    uint64_t v31 = v49;
    dispatch thunk of HashFunction.init()();
    uint64_t v33 = v50;
    switch(v25 >> 62)
    {
      case 1uLL:
        if (v23 >> 32 < (int)v23) {
          goto LABEL_24;
        }
        sub_10025ADCC(v23, v25);
        sub_1006661F0((int)v23, v23 >> 32);
        break;
      case 2uLL:
        uint64_t v34 = *(void *)(v23 + 16);
        uint64_t v35 = *(void *)(v23 + 24);
        sub_100278C78(v23, v25);
        swift_retain();
        swift_retain();
        sub_1006661F0(v34, v35);
        swift_release();
        swift_release();
        break;
      case 3uLL:
        memset(v52, 0, 14);
        goto LABEL_16;
      default:
        v52[0] = v23;
        LOWORD(v52[1]) = v25;
        BYTE2(v52[1]) = BYTE2(v25);
        BYTE3(v52[1]) = BYTE3(v25);
        BYTE4(v52[1]) = BYTE4(v25);
        BYTE5(v52[1]) = BYTE5(v25);
LABEL_16:
        dispatch thunk of HashFunction.update(bufferPointer:)();
        break;
    }
    sub_100250CB0(v23, v25);
    uint64_t v36 = v43;
    dispatch thunk of HashFunction.finalize()();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v31);
    uint64_t v38 = v46;
    uint64_t v37 = v47;
    (*(void (**)(void *, char *, uint64_t))(v46 + 16))(v36, v33, v47);
    *(void *)((char *)v36 + *(int *)(v45 + 36)) = 16;
    uint64_t v39 = sub_100666378(v36);
    sub_10000A7E8((uint64_t)v36, &qword_100974AD8);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v39 = (uint64_t)sub_1002AD45C(v39);
    }
    unint64_t v40 = *(void *)(v39 + 16);
    if (v40 < 7)
    {
      __break(1u);
    }
    else
    {
      *(unsigned char *)(v39 + 38) = *(unsigned char *)(v39 + 38) & 0xF | 0x50;
      if (v40 >= 9)
      {
        *(unsigned char *)(v39 + 40) = *(unsigned char *)(v39 + 40) & 0x3F | 0x80;
        id v41 = [objc_allocWithZone((Class)NSUUID) initWithUUIDBytes:v39 + 32];
        swift_bridgeObjectRelease();
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        sub_100250CB0(v23, v25);
        return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v33, v37);
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
  }
  if (qword_10096A0D8 != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  sub_10000B47C(v26, (uint64_t)qword_10097D750);
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Failed to create combined UUID string", v29, 2u);
    swift_slowDealloc();
  }

  return UUID.init()();
}

uint64_t sub_10065F49C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v29 - v11;
  NWEndpoint.endpointUUID()();
  uint64_t v13 = UUID.uuidString.getter();
  uint64_t v15 = v14;
  uint64_t v16 = v10;
  uint64_t v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v16, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  sub_10065ECDC((uint64_t)v5, v13, v15, (uint64_t)v12);
  swift_bridgeObjectRelease();
  sub_10000A7E8((uint64_t)v5, &qword_100974EA0);
  uint64_t application_service = nw_endpoint_create_application_service();
  if (!NWEndpoint.nw.getter())
  {
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t device_id = nw_endpoint_get_device_id();
  swift_unknownObjectRelease();
  if (device_id) {
    nw_endpoint_set_device_id();
  }
  if (!NWEndpoint.nw.getter()) {
    goto LABEL_18;
  }
  uint64_t device_name = nw_endpoint_get_device_name();
  swift_unknownObjectRelease();
  if (device_name) {
    nw_endpoint_set_device_name();
  }
  if (!NWEndpoint.nw.getter()) {
    goto LABEL_19;
  }
  uint64_t device_model = nw_endpoint_get_device_model();
  swift_unknownObjectRelease();
  if (device_model) {
    nw_endpoint_set_device_model();
  }
  if (!NWEndpoint.nw.getter()) {
    goto LABEL_20;
  }
  uint64_t contact_id = nw_endpoint_get_contact_id();
  swift_unknownObjectRelease();
  if (contact_id) {
    nw_endpoint_set_contact_id();
  }
  uint64_t v23 = NWEndpoint.nw.getter();
  if (!v23) {
LABEL_21:
  }
    __break(1u);
  nw_txt_record_t v24 = nw_endpoint_copy_txt_record(v23);
  swift_unknownObjectRelease();
  if (v24)
  {
    nw_endpoint_set_txt_record();
    swift_unknownObjectRelease();
  }
  unint64_t v25 = v29;
  *uint64_t v29 = application_service;
  uint64_t v26 = enum case for NWEndpoint.opaque(_:);
  uint64_t v27 = type metadata accessor for NWEndpoint();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v25, v26, v27);
  return ((uint64_t (*)(char *, uint64_t))v17)(v12, v6);
}

uint64_t sub_10065F820@<X0>(uint64_t a1@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v2 = type metadata accessor for SFAirDrop.DeviceRelationship();
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  __chkstk_darwin(v2);
  uint64_t v45 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for SFAirDrop.TXTRecord();
  uint64_t v54 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v51 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NWEndpoint();
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  __chkstk_darwin(v5);
  BOOL v55 = (uint64_t *)((char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v40 = *(void *)(v7 - 8);
  uint64_t v41 = v7;
  __chkstk_darwin(v7);
  uint64_t v39 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SFAirDropReceive.AskRequest();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000A844(&qword_100974EA0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = type metadata accessor for UUID();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  Swift::String v22 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  SFAirDropReceive.AskRequest.senderID.getter();
  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v49 = v1;
  uint64_t v42 = v9;
  v23(v12, v1, v9);
  int v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19);
  uint64_t v48 = v19;
  uint64_t v46 = v20;
  if (v24 == 1)
  {
    unint64_t v25 = v39;
    SFAirDropReceive.AskRequest.id.getter();
    uint64_t v26 = SFAirDrop.TransferIdentifier.stringValue.getter();
    uint64_t v28 = v27;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v25, v41);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v16, 1, 1, v19);
    sub_10065ECDC((uint64_t)v16, v26, v28, (uint64_t)v22);
    swift_bridgeObjectRelease();
    sub_10000A7E8((uint64_t)v16, &qword_100974EA0);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v42);
    sub_10000A7E8((uint64_t)v18, &qword_100974EA0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v42);
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
  }
  uint64_t application_service = nw_endpoint_create_application_service();
  uint64_t v30 = v55;
  uint64_t *v55 = application_service;
  uint64_t v32 = v52;
  uint64_t v31 = v53;
  (*(void (**)(uint64_t *, void, uint64_t))(v52 + 104))(v30, enum case for NWEndpoint.opaque(_:), v53);
  uint64_t v33 = NWEndpoint.nw.getter();
  uint64_t v34 = v51;
  if (v33)
  {
    if (SFAirDropReceive.AskRequest.senderIsMe.getter())
    {
      (*(void (**)(char *, void, uint64_t))(v43 + 104))(v45, enum case for SFAirDrop.DeviceRelationship.sameAccount(_:), v44);
      SFAirDrop.TXTRecord.init(deviceRelationship:)();
      SFAirDrop.TXTRecord.addToEndpoint(_:)();
      SFAirDropReceive.AskRequest.senderComputerName.getter();
      String.utf8CString.getter();
      swift_bridgeObjectRelease();
      nw_endpoint_set_device_name();
      swift_release();
      SFAirDropReceive.AskRequest.senderModelName.getter();
      String.utf8CString.getter();
      swift_bridgeObjectRelease();
      nw_endpoint_set_device_model();
    }
    else
    {
      SFAirDropReceive.AskRequest.contactIdentifier.getter();
      if (v35)
      {
        (*(void (**)(char *, void, uint64_t))(v43 + 104))(v45, enum case for SFAirDrop.DeviceRelationship.contact(_:), v44);
        SFAirDrop.TXTRecord.init(deviceRelationship:)();
        SFAirDrop.TXTRecord.addToEndpoint(_:)();
        String.utf8CString.getter();
        swift_bridgeObjectRelease();
        nw_endpoint_set_contact_id();
      }
      else
      {
        (*(void (**)(char *, void, uint64_t))(v43 + 104))(v45, enum case for SFAirDrop.DeviceRelationship.stranger(_:), v44);
        SFAirDrop.TXTRecord.init(deviceRelationship:)();
        SFAirDrop.TXTRecord.addToEndpoint(_:)();
        SFAirDropReceive.AskRequest.senderComputerName.getter();
        String.utf8CString.getter();
        swift_bridgeObjectRelease();
        nw_endpoint_set_device_name();
      }
      uint64_t v30 = v55;
    }
    uint64_t v36 = v48;
    uint64_t v37 = v46;
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v34, v47);
    swift_release();
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v32 + 32))(v50, v30, v31);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v22, v36);
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

BOOL sub_10065FFCC()
{
  uint64_t v1 = type metadata accessor for NWEndpoint();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (NWEndpoint.nw.getter())
  {
    uint64_t contact_id = nw_endpoint_get_contact_id();
    uint64_t device_model = nw_endpoint_get_device_model();
    uint64_t device_name = nw_endpoint_get_device_name();
    if (contact_id)
    {
      String.init(cString:)();
      uint64_t contact_id = v8;
    }
    if (device_model)
    {
      String.init(cString:)();
      uint64_t device_model = v9;
    }
    if (device_name)
    {
      String.init(cString:)();
      uint64_t device_name = v10;
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return contact_id || (device_model | device_name) != 0;
  }
  else
  {
    if (qword_10096A0D8 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000B47C(v12, (uint64_t)qword_10097D750);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v16 = NWEndpoint.debugDescription.getter();
      uint64_t v18 = sub_100254634(v16, v17, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Could not convert endpoint %s to nwEndpoint!", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }

    return 0;
  }
}

uint64_t sub_1006602C0(uint64_t a1, uint64_t a2, uint64_t a3, void *aBlock)
{
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t (*)(char), uint64_t))(a1 + 32);
  uint64_t v7 = _Block_copy(aBlock);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v6(a2, a3, sub_1004B29B4, v8);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

const char *SFAirDrop.serviceType.unsafeMutableAddressor()
{
  return "_airdrop._tcp.";
}

uint64_t sub_100660398()
{
  uint64_t v0 = type metadata accessor for NWTXTRecord();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for NWBrowser.Result.Metadata();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A844(&qword_10097D8A0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for NWTXTRecord.Entry();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  BOOL v55 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v56 = (char *)&v53 - v15;
  NWBrowser.Result.metadata.getter();
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v16 == enum case for NWBrowser.Result.Metadata.bonjour(_:))
  {
    uint64_t v54 = v12;
    uint64_t v17 = v11;
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v3, v7, v0);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NWTXTRecord.getEntry(for:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    uint64_t v18 = v54;
  }
  else
  {
    int v19 = v16;
    int v20 = enum case for NWBrowser.Result.Metadata.none(_:);
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    uint64_t v18 = v12;
    uint64_t v17 = v11;
    v21(v10, 1, 1, v11);
    if (v19 != v20) {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  uint64_t v22 = v17;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 1, v17) == 1)
  {
    sub_10000A7E8((uint64_t)v10, &qword_10097D8A0);
    return 0;
  }
  uint64_t v23 = v56;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v56, v10, v17);
  int v24 = v55;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v55, v23, v22);
  int v25 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v24, v22);
  if (v25 != enum case for NWTXTRecord.Entry.string(_:))
  {
    int v35 = v25;
    int v36 = enum case for NWTXTRecord.Entry.data(_:);
    uint64_t v37 = *(void (**)(char *, uint64_t))(v18 + 8);
    v37(v23, v22);
    if (v35 == v36)
    {
      (*(void (**)(char *, uint64_t))(v18 + 96))(v24, v22);
      sub_100250CC4(*(void *)v24, *((void *)v24 + 1));
    }
    else
    {
      v37(v24, v22);
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v18 + 96))(v24, v22);
  uint64_t result = *(void *)v24;
  unint64_t v27 = *((void *)v24 + 1);
  uint64_t v28 = HIBYTE(v27) & 0xF;
  uint64_t v29 = *(void *)v24 & 0xFFFFFFFFFFFFLL;
  if ((v27 & 0x2000000000000000) != 0) {
    uint64_t v30 = HIBYTE(v27) & 0xF;
  }
  else {
    uint64_t v30 = *(void *)v24 & 0xFFFFFFFFFFFFLL;
  }
  if (!v30)
  {
    swift_bridgeObjectRelease();
LABEL_69:
    (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v22);
    return 0;
  }
  if ((v27 & 0x1000000000000000) != 0)
  {
    unint64_t v32 = sub_10031B7C4(result, *((void *)v24 + 1), 10);
    char v34 = v52;
    goto LABEL_47;
  }
  if ((v27 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v31 = (unsigned __int8 *)((v27 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v31 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    unint64_t v32 = (unint64_t)sub_10031B69C(v31, v29, 10);
    char v34 = v33 & 1;
LABEL_47:
    swift_bridgeObjectRelease();
    if ((v34 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v22);
      return v32;
    }
    goto LABEL_69;
  }
  v57[0] = *(void *)v24;
  v57[1] = v27 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v28)
    {
      if (v28 != 1 && (BYTE1(result) - 48) <= 9u)
      {
        unint64_t v32 = (BYTE1(result) - 48);
        if (v28 == 2) {
          goto LABEL_46;
        }
        if ((BYTE2(result) - 48) <= 9u)
        {
          unint64_t v32 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
          uint64_t v41 = v28 - 3;
          if (v41)
          {
            uint64_t v42 = (unsigned __int8 *)v57 + 3;
            while (1)
            {
              unsigned int v43 = *v42 - 48;
              if (v43 > 9) {
                goto LABEL_43;
              }
              if (!is_mul_ok(v32, 0xAuLL)) {
                goto LABEL_43;
              }
              BOOL v39 = __CFADD__(10 * v32, v43);
              unint64_t v32 = 10 * v32 + v43;
              if (v39) {
                goto LABEL_43;
              }
              char v34 = 0;
              ++v42;
              if (!--v41) {
                goto LABEL_47;
              }
            }
          }
          goto LABEL_46;
        }
      }
      goto LABEL_43;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v28 && (result - 48) <= 9u)
      {
        unint64_t v32 = (result - 48);
        if (v28 == 1) {
          goto LABEL_46;
        }
        if ((BYTE1(result) - 48) <= 9u)
        {
          unint64_t v32 = 10 * (result - 48) + (BYTE1(result) - 48);
          uint64_t v44 = v28 - 2;
          if (v44)
          {
            uint64_t v45 = (unsigned __int8 *)v57 + 2;
            while (1)
            {
              unsigned int v46 = *v45 - 48;
              if (v46 > 9) {
                goto LABEL_43;
              }
              if (!is_mul_ok(v32, 0xAuLL)) {
                goto LABEL_43;
              }
              BOOL v39 = __CFADD__(10 * v32, v46);
              unint64_t v32 = 10 * v32 + v46;
              if (v39) {
                goto LABEL_43;
              }
              char v34 = 0;
              ++v45;
              if (!--v44) {
                goto LABEL_47;
              }
            }
          }
          goto LABEL_46;
        }
      }
LABEL_43:
      unint64_t v32 = 0;
LABEL_44:
      char v34 = 1;
      goto LABEL_47;
    }
    if (v28)
    {
      if (v28 != 1)
      {
        unsigned __int8 v38 = BYTE1(result) - 48;
        if ((BYTE1(result) - 48) <= 9u)
        {
          unint64_t v32 = 0;
          BOOL v39 = v38 == 0;
          unint64_t v40 = -(uint64_t)v38;
          if (!v39) {
            goto LABEL_44;
          }
          if (v28 == 2)
          {
            char v34 = 0;
            unint64_t v32 = v40;
            goto LABEL_47;
          }
          unsigned __int8 v47 = BYTE2(result) - 48;
          if ((BYTE2(result) - 48) <= 9u && is_mul_ok(v40, 0xAuLL))
          {
            unint64_t v48 = 10 * v40;
            unint64_t v32 = v48 - v47;
            if (v48 >= v47)
            {
              uint64_t v49 = v28 - 3;
              if (v49)
              {
                uint64_t v50 = (unsigned __int8 *)v57 + 3;
                while (1)
                {
                  unsigned int v51 = *v50 - 48;
                  if (v51 > 9) {
                    goto LABEL_43;
                  }
                  if (!is_mul_ok(v32, 0xAuLL)) {
                    goto LABEL_43;
                  }
                  BOOL v39 = 10 * v32 >= v51;
                  unint64_t v32 = 10 * v32 - v51;
                  if (!v39) {
                    goto LABEL_43;
                  }
                  char v34 = 0;
                  ++v50;
                  if (!--v49) {
                    goto LABEL_47;
                  }
                }
              }
LABEL_46:
              char v34 = 0;
              goto LABEL_47;
            }
          }
        }
      }
      goto LABEL_43;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

BOOL sub_100660B04()
{
  uint64_t v0 = type metadata accessor for NWInterface();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000A844(&qword_10097D7A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = NWBrowser.Result.interfaces.getter();
  uint64_t v8 = *(void *)(v7 + 16);
  v18[1] = v7;
  if (v8)
  {
    uint64_t v10 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    uint64_t v9 = v1 + 16;
    int v24 = v10;
    unint64_t v11 = v7 + ((*(unsigned __int8 *)(v9 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 64));
    uint64_t v19 = *(void *)(v9 + 56);
    int v20 = (void (**)(char *, char *, uint64_t))(v9 + 16);
    uint64_t v21 = (void (**)(char *, uint64_t))(v9 - 8);
    uint64_t v22 = (uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 32);
    swift_bridgeObjectRetain();
    uint64_t v23 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 40);
    v18[0] = (v9 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      v24(v6, v11, v0);
      uint64_t v12 = *v23;
      (*v23)(v6, 0, 1, v0);
      int v13 = (*v22)(v6, 1, v0);
      BOOL v14 = v13 != 1;
      if (v13 == 1) {
        break;
      }
      (*v20)(v3, v6, v0);
      if (NWInterface.name.getter() == 0x306C647761 && v15 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        (*v21)(v3, v0);
        BOOL v14 = 1;
        break;
      }
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      (*v21)(v3, v0);
      if (v16) {
        break;
      }
      v11 += v19;
      if (!--v8) {
        goto LABEL_10;
      }
    }
  }
  else
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
    swift_bridgeObjectRetain();
LABEL_10:
    v12(v6, 1, 1, v0);
    BOOL v14 = 0;
  }
  swift_bridgeObjectRelease_n();
  return v14;
}

uint64_t sub_100660DD4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097D750);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097D750);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void *SFAirDrop.port.unsafeMutableAddressor()
{
  return &static SFAirDrop.port;
}

uint64_t static SFAirDrop.port.getter()
{
  return 8770;
}

const char *SFAirDrop.localIdentity.unsafeMutableAddressor()
{
  return "airdrop";
}

uint64_t static SFAirDrop.localIdentity.getter()
{
  return 0x706F7264726961;
}

uint64_t static SFAirDrop.domain.getter()
{
  return 0x6C61636F6CLL;
}

uint64_t static SFAirDrop.serviceType.getter()
{
  return 0x706F72647269615FLL;
}

uint64_t static SFAirDrop.quicServiceType.getter()
{
  return 0x2E6369757173615FLL;
}

void *SFAirDrop.dataUsageBundleID.unsafeMutableAddressor()
{
  return &static SFAirDrop.dataUsageBundleID;
}

unint64_t static SFAirDrop.dataUsageBundleID.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_100660F54@<X0>(uint64_t a1@<X8>)
{
  if (nw_interface_create_with_name())
  {
    swift_unknownObjectRelease();
    if (nw_interface_create_with_name()) {
      goto LABEL_13;
    }
    __break(1u);
  }
  if (IsAppleInternalBuild() && nw_interface_create_with_name())
  {
    swift_unknownObjectRelease();
    if (nw_interface_create_with_name()) {
      goto LABEL_13;
    }
    __break(1u);
  }
  if (qword_10096A0D8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097D750);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to initialize nw_interface, defaulting to loopback", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t result = nw_interface_create_with_name();
  if (!result)
  {
    __break(1u);
    return result;
  }
LABEL_13:
  NWInterface.init(_:)();
  uint64_t v7 = type metadata accessor for NWInterface();
  uint64_t v8 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(a1, 0, 1, v7);
}

uint64_t sub_1006610F0(uint64_t a1, int a2, void *aBlock)
{
  uint64_t v3 = *(void (**)(uint64_t, uint64_t (*)(), uint64_t))(a1 + 32);
  os_log_type_t v4 = _Block_copy(aBlock);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  swift_retain();
  uint64_t v6 = swift_unknownObjectRetain();
  v3(v6, sub_100448C78, v5);
  swift_release();
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_1006611A0(NSObject *a1, unsigned char *a2, void (*a3)(NSObject *, uint64_t))
{
  uint64_t result = nw_protocol_options_is_quic(a1);
  if (result && (*a2 & 1) == 0)
  {
    uint64_t v7 = nw_quic_copy_sec_protocol_options(a1);
    sub_100394300();
    uint64_t v8 = (void *)static NSUserDefaults.airdrop.getter();
    char v9 = SFAirDropUserDefaults.finalALPN.getter();

    if (v9) {
      sec_protocol_options_clear_tls_application_protocols();
    }
    sec_protocol_options_add_tls_application_protocol(v7, "h3");
    type metadata accessor for SFAirDropUserDefaults();
    uint64_t v10 = (void *)static SFAirDropUserDefaults.shared.getter();
    uint32_t v11 = SFAirDropUserDefaults.quicIdleTimeout.getter();

    nw_quic_set_idle_timeout(a1, v11);
    a3(a1, 1);
    uint64_t result = swift_unknownObjectRelease();
    *a2 = 1;
  }
  return result;
}

BOOL sub_10066127C(char *a1, char *a2)
{
  return dword_10077F8A8[*a1] == dword_10077F8A8[*a2];
}

Swift::Int sub_1006612A0()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(dword_10077F8A8[v1]);
  return Hasher._finalize()();
}

void sub_1006612F0()
{
  Hasher._combine(_:)(dword_10077F8A8[*v0]);
}

Swift::Int sub_100661328()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(dword_10077F8A8[v1]);
  return Hasher._finalize()();
}

uint64_t sub_100661374@<X0>(int *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1006689E0(*a1);
  *a2 = result;
  return result;
}

void sub_1006613A0(_DWORD *a1@<X8>)
{
  *a1 = dword_10077F8A8[*v1];
}

uint64_t sub_1006613B8()
{
  *(void *)(v1 + 48) = v0;
  return _swift_task_switch(sub_1006613D8, 0, 0);
}

uint64_t sub_1006613D8()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = swift_task_alloc();
  v0[7] = v2;
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 8;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[8] = v3;
  uint64_t v4 = sub_10000A844(&qword_10097D8B8);
  void *v3 = v0;
  v3[1] = sub_1006614E0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000014, 0x80000001007C5F80, sub_100669404, v2, v4);
}

uint64_t sub_1006614E0()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100661790;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1006615FC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1006615FC()
{
  unint64_t v1 = v0[3];
  if (v1 >> 60 == 15)
  {
    uint64_t v2 = type metadata accessor for SFAirDropSend.Failure();
    sub_100668C48(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 104))(v3, enum case for SFAirDropSend.Failure.badResponse(_:), v2);
    swift_willThrow();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = v0[2];
    Data.withUnsafeBytes<A, B>(_:)();
    sub_100250CB0(v6, v1);
    uint64_t v7 = v0[5];
    uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
    return v8(v7);
  }
}

uint64_t sub_100661790()
{
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006617F4(uint64_t a1, uint64_t a2)
{
  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  return _swift_task_switch(sub_100661818, 0, 0);
}

uint64_t sub_100661818()
{
  if (qword_10096A0D8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 152) = sub_10000B47C(v1, (uint64_t)qword_10097D750);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void *)(v0 + 128);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134217984;
    *(void *)(v0 + 120) = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Starting data stream, expecting %ld", v5, 0xCu);
    swift_slowDealloc();
  }

  *(_OWORD *)(v0 + 88) = xmmword_10077D4C0;
  uint64_t v6 = *(void *)(v0 + 144);
  if (*(void *)(v0 + 128) >= *(void *)(v0 + 136)) {
    uint64_t v7 = *(void *)(v0 + 136);
  }
  else {
    uint64_t v7 = *(void *)(v0 + 128);
  }
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 160) = v8;
  *(void *)(v8 + 16) = v6;
  *(void *)(v8 + 24) = v7;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v9;
  uint64_t v10 = sub_10000A844(&qword_10097D8B8);
  *uint64_t v9 = v0;
  v9[1] = sub_100661A2C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 64, 0, 0, 0xD000000000000014, 0x80000001007C5F80, sub_100668B68, v8, v10);
}

uint64_t sub_100661A2C()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1006620F8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100661B48;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100661B48()
{
  uint64_t v41 = v0;
  uint64_t v1 = v0[8];
  unint64_t v2 = v0[9];
  if (v2 >> 60 != 15)
  {
    sub_100278C78(v0[8], v0[9]);
    sub_100278C78(v1, v2);
    sub_10025ADCC(v1, v2);
    os_log_type_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136315138;
      sub_10025ADCC(v1, v2);
      uint64_t v6 = Data.description.getter();
      unint64_t v8 = v7;
      sub_100250CB0(v1, v2);
      *(void *)(v5 + 4) = sub_100254634(v6, v8, &v40);
      swift_bridgeObjectRelease();
      sub_100250CB0(v1, v2);
      sub_100250CB0(v1, v2);
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Received %s bytes", (uint8_t *)v5, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100250CB0(v1, v2);
      sub_100250CB0(v1, v2);
    }

    Data.append(_:)();
    uint64_t v9 = v0[11];
    unint64_t v10 = v0[12];
    unint64_t v11 = v10 >> 62;
    switch(v10 >> 62)
    {
      case 1uLL:
        sub_100250CB0(v1, v2);
        sub_100250CB0(v1, v2);
        if (__OFSUB__(HIDWORD(v9), v9)) {
          goto LABEL_32;
        }
        uint64_t v12 = HIDWORD(v9) - (int)v9;
LABEL_10:
        uint64_t v15 = v0[16];
        if (v12 >= v15) {
          break;
        }
        if (v11)
        {
          if (v11 == 1)
          {
            LODWORD(v16) = HIDWORD(v9) - v9;
            if (__OFSUB__(HIDWORD(v9), v9))
            {
LABEL_34:
              __break(1u);
              goto LABEL_35;
            }
            uint64_t v16 = (int)v16;
          }
          else
          {
            uint64_t v31 = *(void *)(v9 + 16);
            uint64_t v30 = *(void *)(v9 + 24);
            BOOL v32 = __OFSUB__(v30, v31);
            uint64_t v16 = v30 - v31;
            if (v32)
            {
LABEL_35:
              __break(1u);
              JUMPOUT(0x1006620E8);
            }
          }
        }
        else
        {
          uint64_t v16 = BYTE6(v10);
        }
LABEL_24:
        BOOL v32 = __OFSUB__(v15, v16);
        uint64_t v33 = v15 - v16;
        if (!v32)
        {
          uint64_t v34 = v0[18];
          if (v33 >= v0[17]) {
            uint64_t v35 = v0[17];
          }
          else {
            uint64_t v35 = v33;
          }
          uint64_t v36 = swift_task_alloc();
          v0[20] = v36;
          *(void *)(v36 + 16) = v34;
          *(void *)(v36 + 24) = v35;
          uint64_t v37 = (void *)swift_task_alloc();
          v0[21] = v37;
          uint64_t v38 = sub_10000A844(&qword_10097D8B8);
          *uint64_t v37 = v0;
          v37[1] = sub_100661A2C;
          return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 8, 0, 0, 0xD000000000000014, 0x80000001007C5F80, sub_100668B68, v36, v38);
        }
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      case 2uLL:
        uint64_t v14 = *(void *)(v9 + 16);
        uint64_t v13 = *(void *)(v9 + 24);
        sub_100250CB0(v1, v2);
        sub_100250CB0(v1, v2);
        uint64_t v12 = v13 - v14;
        if (!__OFSUB__(v13, v14)) {
          goto LABEL_10;
        }
        goto LABEL_33;
      case 3uLL:
        uint64_t v17 = v0[16];
        sub_100250CB0(v1, v2);
        sub_100250CB0(v1, v2);
        if (v17 < 1) {
          break;
        }
        uint64_t v16 = 0;
        uint64_t v15 = v0[16];
        goto LABEL_24;
      default:
        sub_100250CB0(v1, v2);
        sub_100250CB0(v1, v2);
        uint64_t v12 = BYTE6(v10);
        goto LABEL_10;
    }
  }
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v39 = v0[16];
    uint64_t v20 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136315394;
    swift_beginAccess();
    uint64_t v21 = v0[11];
    unint64_t v22 = v0[12];
    sub_10025ADCC(v21, v22);
    uint64_t v23 = Data.description.getter();
    unint64_t v25 = v24;
    sub_100250CC4(v21, v22);
    v0[13] = sub_100254634(v23, v25, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2048;
    v0[14] = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Received %s bytes of total %ld", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t v26 = v0[11];
  uint64_t v27 = v0[12];
  uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v28(v26, v27);
}

uint64_t sub_1006620F8()
{
  uint64_t v15 = v0;
  swift_errorRelease();
  swift_task_dealloc();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v13 = v0[16];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    swift_beginAccess();
    uint64_t v4 = v0[11];
    unint64_t v5 = v0[12];
    sub_10025ADCC(v4, v5);
    uint64_t v6 = Data.description.getter();
    unint64_t v8 = v7;
    sub_100250CC4(v4, v5);
    v0[13] = sub_100254634(v6, v8, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2048;
    v0[14] = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Received %s bytes of total %ld", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t v9 = v0[11];
  uint64_t v10 = v0[12];
  unint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v11(v9, v10);
}

void sub_100662304(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = sub_10000A844(&qword_10097D8C0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = NWConnection.nw.getter();
  if ((a3 & 0x8000000000000000) != 0 || HIDWORD(a3))
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t v9 = v8;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
    unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v11 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
    aBlock[4] = sub_100668B7C;
    aBlock[5] = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10066269C;
    aBlock[3] = &unk_1008E43E0;
    uint64_t v12 = _Block_copy(aBlock);
    swift_release();
    nw_connection_receive(v9, a3, a3, v12);
    swift_unknownObjectRelease();
    _Block_release(v12);
  }
}

uint64_t sub_10066255C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    uint64_t v4 = swift_unknownObjectRetain();
    CFErrorRef v5 = nw_error_copy_cf_error(v4);
    type metadata accessor for CFError(0);
    sub_100668C48(&qword_10097D770, type metadata accessor for CFError);
    swift_allocError();
    *uint64_t v6 = v5;
    sub_10000A844(&qword_10097D8C0);
    CheckedContinuation.resume(throwing:)();
    return swift_unknownObjectRelease();
  }
  else
  {
    if (a1)
    {
      id v8 = a1;
      swift_dynamicCast();
    }
    sub_10000A844(&qword_10097D8C0);
    return CheckedContinuation.resume(returning:)();
  }
}

void sub_10066269C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  id v10 = a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v9(a2, a3, a4, a5);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
}

uint64_t sub_10066274C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  return _swift_task_switch(sub_1006627E0, 0, 0);
}

uint64_t sub_1006627E0()
{
  unint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = 0;
  switch(v1 >> 62)
  {
    case 1uLL:
      int v3 = *(_DWORD *)(v0 + 40);
      int v4 = *(_DWORD *)(v0 + 44);
      BOOL v5 = __OFSUB__(v4, v3);
      LODWORD(v2) = v4 - v3;
      if (v5)
      {
        __break(1u);
LABEL_10:
        __break(1u);
      }
      uint64_t v2 = (int)v2;
LABEL_6:
      uint64_t v8 = *(void *)(v0 + 64);
      *(void *)(v0 + 32) = v2;
      uint64_t v9 = sub_10057C4D4(v0 + 32, v0 + 40);
      uint64_t v11 = v10;
      *(void *)(v0 + 72) = v9;
      *(void *)(v0 + 80) = v10;
      uint64_t v12 = swift_task_alloc();
      *(void *)(v0 + 88) = v12;
      *(void *)(v12 + 16) = v9;
      *(void *)(v12 + 24) = v11;
      *(unsigned char *)(v12 + 32) = 0;
      *(void *)(v12 + 40) = v8;
      uint64_t v13 = (void *)swift_task_alloc();
      *(void *)(v0 + 96) = v13;
      *uint64_t v13 = v0;
      v13[1] = sub_10066299C;
      return withCheckedThrowingContinuation<A>(isolation:function:_:)(v13, 0, 0, 0xD000000000000016, 0x80000001007C5FA0, sub_100668C90, v12, (char *)&type metadata for () + 8);
    case 2uLL:
      uint64_t v6 = *(void *)(*(void *)(v0 + 40) + 16);
      uint64_t v7 = *(void *)(*(void *)(v0 + 40) + 24);
      BOOL v5 = __OFSUB__(v7, v6);
      uint64_t v2 = v7 - v6;
      if (!v5) {
        goto LABEL_6;
      }
      goto LABEL_10;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v2 = BYTE6(v1);
      goto LABEL_6;
  }
}

uint64_t sub_10066299C()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1006630F0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100662AEC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100662AEC()
{
  uint64_t v39 = v1;
  unint64_t v3 = *(void *)(v1 + 48);
  switch(v3 >> 62)
  {
    case 1uLL:
      int v5 = *(_DWORD *)(v1 + 40);
      int v6 = *(_DWORD *)(v1 + 44);
      BOOL v7 = __OFSUB__(v6, v5);
      LODWORD(v4) = v6 - v5;
      if (!v7)
      {
        uint64_t v4 = (int)v4;
        goto LABEL_6;
      }
      __break(1u);
      goto LABEL_30;
    case 2uLL:
      uint64_t v8 = *(void *)(*(void *)(v1 + 40) + 16);
      uint64_t v9 = *(void *)(*(void *)(v1 + 40) + 24);
      BOOL v7 = __OFSUB__(v9, v8);
      uint64_t v4 = v9 - v8;
      if (!v7) {
        goto LABEL_6;
      }
LABEL_30:
      __break(1u);
      goto LABEL_31;
    case 3uLL:
      goto LABEL_17;
    default:
      uint64_t v4 = BYTE6(v3);
LABEL_6:
      if (v4 < 1) {
        goto LABEL_17;
      }
      uint64_t v10 = *(void *)(v1 + 40);
      *(void *)(v1 + 112) = swift_slowAlloc();
      id v11 = objc_allocWithZone((Class)NSInputStream);
      sub_10025ADCC(v10, v3);
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      id v13 = [v11 initWithData:isa];
      *(void *)(v1 + 120) = v13;
      sub_100250CC4(v10, v3);

      [v13 open];
      uint64_t v2 = &selRef_forceAWDLDeviceRefresh_;
      if ([v13 hasBytesAvailable]
        && (int64_t v14 = (int64_t)[*(id *)(v1 + 120) read:*(void *)(v1 + 112) maxLength:*(void *)(v1 + 56)], v14 >= 1))
      {
        unint64_t v15 = v14;
        uint64_t v16 = *(const void **)(v1 + 112);
        if ((unint64_t)v14 <= 0xE)
        {
          *(void *)(v1 + 22) = 0;
          *(void *)(v1 + 16) = 0;
          *(unsigned char *)(v1 + 30) = v14;
          memcpy((void *)(v1 + 16), v16, v14);
          unint64_t v3 = *(void *)(v1 + 16);
          unint64_t v0 = *(unsigned int *)(v1 + 24) | ((unint64_t)*(unsigned __int8 *)(v1 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(v1 + 29) << 40) | ((unint64_t)*(unsigned __int8 *)(v1 + 30) << 48);
        }
        else
        {
          type metadata accessor for __DataStorage();
          swift_allocObject();
          uint64_t v17 = __DataStorage.init(bytes:length:)();
          uint64_t v18 = v17;
          if (v15 >= 0x7FFFFFFF)
          {
            type metadata accessor for Data.RangeReference();
            unint64_t v3 = swift_allocObject();
            *(void *)(v3 + 16) = 0;
            *(void *)(v3 + 24) = v15;
            unint64_t v0 = v18 | 0x8000000000000000;
          }
          else
          {
            unint64_t v3 = v15 << 32;
            unint64_t v0 = v17 | 0x4000000000000000;
          }
        }
        *(void *)(v1 + 128) = v3;
        *(void *)(v1 + 136) = v0;
        if (qword_10096A0D8 != -1) {
LABEL_31:
        }
          swift_once();
        uint64_t v26 = type metadata accessor for Logger();
        sub_10000B47C(v26, (uint64_t)qword_10097D750);
        sub_10025ADCC(v3, v0);
        sub_10025ADCC(v3, v0);
        uint64_t v27 = Logger.logObject.getter();
        os_log_type_t v28 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v27, v28))
        {
          uint64_t v29 = swift_slowAlloc();
          uint64_t v38 = swift_slowAlloc();
          *(_DWORD *)uint64_t v29 = 136315138;
          sub_10025ADCC(v3, v0);
          uint64_t v30 = Data.description.getter();
          unint64_t v32 = v31;
          sub_100250CC4(v3, v0);
          *(void *)(v29 + 4) = sub_100254634(v30, v32, &v38);
          swift_bridgeObjectRelease();
          sub_100250CC4(v3, v0);
          sub_100250CC4(v3, v0);
          _os_log_impl((void *)&_mh_execute_header, v27, v28, "Sending data chunk %s", (uint8_t *)v29, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_100250CC4(v3, v0);
          sub_100250CC4(v3, v0);
        }

        uint64_t v33 = *(void **)(v1 + 120);
        uint64_t v34 = *(void *)(v1 + 64);
        sub_10025ADCC(v3, v0);
        char v35 = [v33 v2[256]] ^ 1;
        uint64_t v36 = swift_task_alloc();
        *(void *)(v1 + 144) = v36;
        *(void *)(v36 + 16) = v3;
        *(void *)(v36 + 24) = v0;
        *(unsigned char *)(v36 + 32) = v35;
        *(void *)(v36 + 40) = v34;
        uint64_t v37 = (void *)swift_task_alloc();
        *(void *)(v1 + 152) = v37;
        *uint64_t v37 = v1;
        v37[1] = sub_100663188;
        return withCheckedThrowingContinuation<A>(isolation:function:_:)(v37, 0, 0, 0xD000000000000016, 0x80000001007C5FA0, sub_100669398, v36, (char *)&type metadata for () + 8);
      }
      else
      {
        if (qword_10096A0D8 != -1) {
          swift_once();
        }
        uint64_t v19 = type metadata accessor for Logger();
        sub_10000B47C(v19, (uint64_t)qword_10097D750);
        uint64_t v20 = Logger.logObject.getter();
        os_log_type_t v21 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v20, v21))
        {
          unint64_t v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v22 = 0;
          _os_log_impl((void *)&_mh_execute_header, v20, v21, "Finished sending stream", v22, 2u);
          swift_slowDealloc();
        }
        uint64_t v23 = *(void **)(v1 + 120);

        [v23 close];
        swift_slowDealloc();

LABEL_17:
        sub_100250CC4(*(void *)(v1 + 72), *(void *)(v1 + 80));
        unint64_t v24 = *(uint64_t (**)(void))(v1 + 8);
        return v24();
      }
  }
}

uint64_t sub_1006630F0()
{
  swift_task_dealloc();
  sub_100250CC4(v0[9], v0[10]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100663188()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10066380C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1006632D8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1006632D8()
{
  uint64_t v31 = v0;
  uint64_t v1 = *(void *)(v0 + 128);
  unint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void **)(v0 + 120);
  sub_100250CC4(v1, v2);
  sub_100250CC4(v1, v2);
  if ([v3 hasBytesAvailable]
    && (int64_t v4 = (int64_t)[*(id *)(v0 + 120) read:*(void *)(v0 + 112) maxLength:*(void *)(v0 + 56)], v4 >= 1))
  {
    unint64_t v5 = v4;
    int v6 = *(const void **)(v0 + 112);
    if ((unint64_t)v4 <= 0xE)
    {
      *(void *)(v0 + 22) = 0;
      *(void *)(v0 + 16) = 0;
      *(unsigned char *)(v0 + 30) = v4;
      memcpy((void *)(v0 + 16), v6, v4);
      uint64_t v9 = *(void *)(v0 + 16);
      unint64_t v10 = *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 29) << 40) | ((unint64_t)*(unsigned __int8 *)(v0 + 30) << 48);
    }
    else
    {
      type metadata accessor for __DataStorage();
      swift_allocObject();
      uint64_t v7 = __DataStorage.init(bytes:length:)();
      uint64_t v8 = v7;
      if (v5 >= 0x7FFFFFFF)
      {
        type metadata accessor for Data.RangeReference();
        uint64_t v9 = swift_allocObject();
        *(void *)(v9 + 16) = 0;
        *(void *)(v9 + 24) = v5;
        unint64_t v10 = v8 | 0x8000000000000000;
      }
      else
      {
        uint64_t v9 = v5 << 32;
        unint64_t v10 = v7 | 0x4000000000000000;
      }
    }
    *(void *)(v0 + 128) = v9;
    *(void *)(v0 + 136) = v10;
    if (qword_10096A0D8 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_10000B47C(v18, (uint64_t)qword_10097D750);
    sub_10025ADCC(v9, v10);
    sub_10025ADCC(v9, v10);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      sub_10025ADCC(v9, v10);
      uint64_t v22 = Data.description.getter();
      unint64_t v24 = v23;
      sub_100250CC4(v9, v10);
      *(void *)(v21 + 4) = sub_100254634(v22, v24, &v30);
      swift_bridgeObjectRelease();
      sub_100250CC4(v9, v10);
      sub_100250CC4(v9, v10);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Sending data chunk %s", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100250CC4(v9, v10);
      sub_100250CC4(v9, v10);
    }

    unint64_t v25 = *(void **)(v0 + 120);
    uint64_t v26 = *(void *)(v0 + 64);
    sub_10025ADCC(v9, v10);
    char v27 = [v25 hasBytesAvailable] ^ 1;
    uint64_t v28 = swift_task_alloc();
    *(void *)(v0 + 144) = v28;
    *(void *)(v28 + 16) = v9;
    *(void *)(v28 + 24) = v10;
    *(unsigned char *)(v28 + 32) = v27;
    *(void *)(v28 + 40) = v26;
    uint64_t v29 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v29;
    *uint64_t v29 = v0;
    v29[1] = sub_100663188;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v29, 0, 0, 0xD000000000000016, 0x80000001007C5FA0, sub_100669398, v28, (char *)&type metadata for () + 8);
  }
  else
  {
    if (qword_10096A0D8 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000B47C(v11, (uint64_t)qword_10097D750);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v12, v13))
    {
      int64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Finished sending stream", v14, 2u);
      swift_slowDealloc();
    }
    unint64_t v15 = *(void **)(v0 + 120);

    [v15 close];
    swift_slowDealloc();

    sub_100250CC4(*(void *)(v0 + 72), *(void *)(v0 + 80));
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
}

uint64_t sub_10066380C()
{
  unint64_t v1 = v0[17];
  uint64_t v3 = (void *)v0[15];
  uint64_t v2 = v0[16];
  swift_task_dealloc();
  sub_100250CC4(v2, v1);
  sub_100250CC4(v2, v1);

  sub_100250CC4(v0[9], v0[10]);
  int64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_1006638CC(uint64_t a1, uint64_t a2, unint64_t a3, int a4, uint64_t a5)
{
  LODWORD(v6) = a4;
  uint64_t v10 = sub_10000A844((uint64_t *)&unk_10096BA90);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v30 = v12;
  uint64_t v31 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A0D8 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10000B47C(v13, (uint64_t)qword_10097D750);
  sub_100278C78(a2, a3);
  sub_100278C78(a2, a3);
  int64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  unint64_t v16 = a3 >> 60;
  if (os_log_type_enabled(v14, v15))
  {
    v26[1] = a5;
    uint64_t v28 = v10;
    int v29 = v6;
    uint64_t v17 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v27 = a1;
    v26[0] = a3 >> 60;
    if (a3 >> 60 == 15)
    {
      unint64_t v6 = 0x80000001007C5FC0;
      unint64_t v18 = 0xD000000000000015;
    }
    else
    {
      unint64_t v18 = Data.description.getter();
      unint64_t v6 = v19;
    }
    uint64_t v32 = sub_100254634(v18, v6, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100250CB0(a2, a3);
    sub_100250CB0(a2, a3);
    *(_WORD *)(v17 + 12) = 1024;
    LOBYTE(v6) = v29;
    LODWORD(v32) = v29 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Calling send %s - done: %{BOOL}d", (uint8_t *)v17, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a1 = v27;
    uint64_t v10 = v28;
    unint64_t v16 = v26[0];
  }
  else
  {
    sub_100250CB0(a2, a3);
    sub_100250CB0(a2, a3);
  }
  os_log_type_t v20 = NWConnection.nw.getter();
  if (v16 <= 0xE) {
    uint64_t v21 = sub_100663CD4(a2, a3);
  }
  else {
    uint64_t v21 = 0;
  }
  uint64_t v22 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v31, a1, v10);
  unint64_t v23 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v24 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v24 + v23, v22, v10);
  aBlock[4] = (uint64_t)sub_10066440C;
  aBlock[5] = v24;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10053C7A8;
  aBlock[3] = (uint64_t)&unk_1008E4430;
  unint64_t v25 = _Block_copy(aBlock);
  swift_release();
  nw_connection_send(v20, v21, _nw_content_context_default_message, v6 & 1, v25);
  _Block_release(v25);
  swift_unknownObjectRelease();
}

uint64_t sub_100663CD4(uint64_t a1, unint64_t a2)
{
  v20[0] = type metadata accessor for DispatchData();
  uint64_t v4 = *(void *)(v20[0] - 8);
  __chkstk_darwin(v20[0]);
  unint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchData.Deallocator();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (void *)((char *)v20 - v12);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  uint64_t v24 = LongHash.storage.getter;
  uint64_t v25 = v14;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v22 = sub_100296520;
  unint64_t v23 = &unk_1008E4098;
  os_log_type_t v15 = _Block_copy(&aBlock);
  *uint64_t v13 = 0;
  v13[1] = v15;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v13, enum case for DispatchData.Deallocator.custom(_:), v7);
  sub_10025ADCC(a1, a2);
  swift_release();
  uint64_t v26 = v13;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      swift_retain();
      sub_1006662D0((int)a1, a1 >> 32, sub_1006661A4);
      sub_100250CC4(a1, a2);
      break;
    case 2uLL:
      uint64_t v16 = *(void *)(a1 + 16);
      uint64_t v17 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      sub_1006662D0(v16, v17, sub_1006661A4);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      *(void *)((char *)&aBlock + 6) = 0;
      *(void *)&long long aBlock = 0;
      (*(void (**)(char *, void *, uint64_t))(v8 + 16))(v11, v13, v7);
      goto LABEL_7;
    default:
      *(void *)&long long aBlock = a1;
      WORD4(aBlock) = a2;
      BYTE10(aBlock) = BYTE2(a2);
      BYTE11(aBlock) = BYTE3(a2);
      BYTE12(aBlock) = BYTE4(a2);
      BYTE13(aBlock) = BYTE5(a2);
      (*(void (**)(char *, void *, uint64_t))(v8 + 16))(v11, v13, v7);
LABEL_7:
      DispatchData.init(bytesNoCopy:deallocator:)();
      break;
  }
  uint64_t v18 = DispatchData._bridgeToObjectiveC()();
  (*(void (**)(char *, void))(v4 + 8))(v6, v20[0]);
  (*(void (**)(void *, uint64_t))(v8 + 8))(v13, v7);
  return v18;
}

void sub_10066412C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, NSObject *a5, char a6)
{
  uint64_t v11 = sub_10000A844((uint64_t *)&unk_10096BA90);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = NWConnection.nw.getter();
  if (a4 >> 60 == 15) {
    os_log_type_t v15 = 0;
  }
  else {
    os_log_type_t v15 = sub_100663CD4(a3, a4);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + v16, (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  aBlock[4] = sub_10066440C;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10053C7A8;
  aBlock[3] = &unk_1008E4048;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  nw_connection_send(v14, v15, a5, a6 & 1, v18);
  _Block_release(v18);
  swift_unknownObjectRelease();
}

uint64_t sub_100664328(uint64_t a1)
{
  if (a1)
  {
    unint64_t v1 = swift_unknownObjectRetain();
    CFErrorRef v2 = nw_error_copy_cf_error(v1);
    type metadata accessor for CFError(0);
    sub_100668C48(&qword_10097D770, type metadata accessor for CFError);
    swift_allocError();
    CFErrorRef *v3 = v2;
    sub_10000A844((uint64_t *)&unk_10096BA90);
    CheckedContinuation.resume(throwing:)();
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_10000A844((uint64_t *)&unk_10096BA90);
    return CheckedContinuation.resume(returning:)();
  }
}

uint64_t sub_100664400()
{
  return sub_100395108((uint64_t *)&unk_10096BA90);
}

uint64_t sub_100664410(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100664420()
{
  return swift_release();
}

uint64_t sub_100664428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 72) = a4;
  *(void *)(v6 + 80) = v5;
  *(unsigned char *)(v6 + 136) = a5;
  *(void *)(v6 + 56) = a2;
  *(void *)(v6 + 64) = a3;
  *(void *)(v6 + 48) = a1;
  return _swift_task_switch(sub_100664454, 0, 0);
}

uint64_t sub_100664454()
{
  *(void *)(v0 + 40) = 0;
  unint64_t v1 = (void *)(v0 + 40);
  swift_beginAccess();
  unint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = 0;
  switch(v2 >> 62)
  {
    case 1uLL:
      int v4 = *(_DWORD *)(v0 + 56);
      int v5 = *(_DWORD *)(v0 + 60);
      BOOL v6 = __OFSUB__(v5, v4);
      int v7 = v5 - v4;
      if (v6) {
        goto LABEL_23;
      }
      uint64_t v3 = v7;
LABEL_6:
      uint64_t v10 = *(void *)(v0 + 72);
      *(void *)(v0 + 88) = v3;
      uint64_t v11 = v10;
      if (v3 <= v10)
      {
        uint64_t v11 = 0;
        switch(v2 >> 62)
        {
          case 1uLL:
            int v12 = *(_DWORD *)(v0 + 56);
            int v13 = *(_DWORD *)(v0 + 60);
            BOOL v6 = __OFSUB__(v13, v12);
            int v14 = v13 - v12;
            if (v6) {
              goto LABEL_25;
            }
            uint64_t v11 = v14;
            break;
          case 2uLL:
            uint64_t v15 = *(void *)(*(void *)(v0 + 56) + 16);
            uint64_t v16 = *(void *)(*(void *)(v0 + 56) + 24);
            uint64_t v11 = v16 - v15;
            if (!__OFSUB__(v16, v15)) {
              break;
            }
            goto LABEL_26;
          case 3uLL:
            break;
          default:
            uint64_t v11 = BYTE6(v2);
            break;
        }
      }
      if (qword_10096A0D8 != -1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for Logger();
      sub_10000B47C(v17, (uint64_t)qword_10097D750);
      uint64_t v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.debug.getter();
      if (!os_log_type_enabled(v18, v19)) {
        goto LABEL_17;
      }
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 134217984;
      if (__OFSUB__(v11, *v1)) {
        goto LABEL_22;
      }
      *(void *)(v20 + 4) = v11 - *v1;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Sending %ld bytes", (uint8_t *)v20, 0xCu);
      swift_slowDealloc();
LABEL_17:

      if (v11 < *v1)
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
        JUMPOUT(0x10066475CLL);
      }
      BOOL v21 = v3 <= v10;
      uint64_t v22 = *(void *)(v0 + 80);
      char v23 = *(unsigned char *)(v0 + 136);
      uint64_t v24 = *(void *)(v0 + 48);
      uint64_t v25 = Data._Representation.subscript.getter();
      uint64_t v27 = v26;
      *(void *)(v0 + 96) = v25;
      *(void *)(v0 + 104) = v26;
      uint64_t v28 = swift_task_alloc();
      *(void *)(v0 + 112) = v28;
      *(void *)(v28 + 16) = v22;
      *(void *)(v28 + 24) = v25;
      *(void *)(v28 + 32) = v27;
      *(void *)(v28 + 40) = v24;
      *(unsigned char *)(v28 + 48) = v21 & v23;
      int v29 = (void *)swift_task_alloc();
      *(void *)(v0 + 120) = v29;
      *int v29 = v0;
      v29[1] = sub_10066477C;
      return withCheckedThrowingContinuation<A>(isolation:function:_:)(v29, 0, 0, 0xD000000000000029, 0x80000001007BB130, sub_10039E4AC, v28, (char *)&type metadata for () + 8);
    case 2uLL:
      uint64_t v8 = *(void *)(*(void *)(v0 + 56) + 16);
      uint64_t v9 = *(void *)(*(void *)(v0 + 56) + 24);
      uint64_t v3 = v9 - v8;
      if (!__OFSUB__(v9, v8)) {
        goto LABEL_6;
      }
      goto LABEL_24;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v3 = BYTE6(v2);
      goto LABEL_6;
  }
}

uint64_t sub_10066477C()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v2 = sub_100664C28;
  }
  else
  {
    swift_task_dealloc();
    unint64_t v2 = sub_100664898;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100664898()
{
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 72);
  sub_100250CC4(*(void *)(v0 + 96), *(void *)(v0 + 104));
  if (v3 > v4)
  {
    uint64_t v5 = *(void *)(v0 + 72);
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t v7 = v6 + v5;
    if (!__OFADD__(v6, v5))
    {
      uint64_t v1 = (void *)(v0 + 40);
      *(void *)(v0 + 40) = v7;
      unint64_t v8 = *(void *)(v0 + 64);
      uint64_t v9 = 0;
      switch(v8 >> 62)
      {
        case 1uLL:
          int v12 = *(_DWORD *)(v0 + 56);
          int v13 = *(_DWORD *)(v0 + 60);
          BOOL v14 = __OFSUB__(v13, v12);
          LODWORD(v9) = v13 - v12;
          if (v14) {
            goto LABEL_35;
          }
          uint64_t v9 = (int)v9;
LABEL_11:
          uint64_t v2 = v9 - v7;
          if (__OFSUB__(v9, v7)) {
            goto LABEL_30;
          }
          *(void *)(v0 + 88) = v2;
          if (v2 <= v5)
          {
            uint64_t v4 = 0;
            switch(v8 >> 62)
            {
              case 1uLL:
                int v31 = *(_DWORD *)(v0 + 56);
                int v32 = *(_DWORD *)(v0 + 60);
                BOOL v14 = __OFSUB__(v32, v31);
                int v33 = v32 - v31;
                if (v14) {
                  goto LABEL_37;
                }
                uint64_t v4 = v33;
                goto LABEL_16;
              case 2uLL:
                uint64_t v34 = *(void *)(*(void *)(v0 + 56) + 16);
                uint64_t v35 = *(void *)(*(void *)(v0 + 56) + 24);
                uint64_t v4 = v35 - v34;
                if (!__OFSUB__(v35, v34)) {
                  goto LABEL_16;
                }
                __break(1u);
                goto LABEL_29;
              case 3uLL:
                goto LABEL_16;
              default:
                uint64_t v4 = BYTE6(v8);
                goto LABEL_16;
            }
          }
          uint64_t v4 = v7 + v5;
          if (__OFADD__(v7, v5)) {
            goto LABEL_33;
          }
LABEL_16:
          if (qword_10096A0D8 == -1) {
            goto LABEL_17;
          }
          goto LABEL_31;
        case 2uLL:
          uint64_t v15 = *(void *)(*(void *)(v0 + 56) + 16);
          uint64_t v16 = *(void *)(*(void *)(v0 + 56) + 24);
          BOOL v14 = __OFSUB__(v16, v15);
          uint64_t v9 = v16 - v15;
          if (!v14) {
            goto LABEL_11;
          }
          goto LABEL_36;
        case 3uLL:
          goto LABEL_11;
        default:
          uint64_t v9 = BYTE6(v8);
          goto LABEL_11;
      }
    }
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    swift_once();
LABEL_17:
    uint64_t v17 = type metadata accessor for Logger();
    sub_10000B47C(v17, (uint64_t)qword_10097D750);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 134217984;
      if (__OFSUB__(v4, *v1)) {
        goto LABEL_34;
      }
      *(void *)(v20 + 4) = v4 - *v1;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Sending %ld bytes", (uint8_t *)v20, 0xCu);
      swift_slowDealloc();
    }

    if (v4 >= *v1)
    {
      BOOL v21 = v2 <= v5;
      uint64_t v22 = *(void *)(v0 + 80);
      char v23 = *(unsigned char *)(v0 + 136);
      uint64_t v24 = *(void *)(v0 + 48);
      uint64_t v25 = Data._Representation.subscript.getter();
      uint64_t v27 = v26;
      *(void *)(v0 + 96) = v25;
      *(void *)(v0 + 104) = v26;
      char v28 = v21 & v23;
      uint64_t v29 = swift_task_alloc();
      *(void *)(v0 + 112) = v29;
      *(void *)(v29 + 16) = v22;
      *(void *)(v29 + 24) = v25;
      *(void *)(v29 + 32) = v27;
      *(void *)(v29 + 40) = v24;
      *(unsigned char *)(v29 + 48) = v28;
      uint64_t v30 = (void *)swift_task_alloc();
      *(void *)(v0 + 120) = v30;
      *uint64_t v30 = v0;
      v30[1] = sub_10066477C;
      return withCheckedThrowingContinuation<A>(isolation:function:_:)(v30, 0, 0, 0xD000000000000029, 0x80000001007BB130, sub_10039E4AC, v29, (char *)&type metadata for () + 8);
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    JUMPOUT(0x100664C08);
  }
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_100664C28()
{
  unint64_t v1 = v0[13];
  uint64_t v2 = v0[12];
  swift_task_dealloc();
  sub_100250CC4(v2, v1);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100664C9C(uint64_t a1, uint64_t a2)
{
  return sub_100665B90(a1, a2, &qword_10097D798, (uint64_t)&unk_1008E40D0, (uint64_t)sub_100666624, (uint64_t)&unk_1008E40E8);
}

uint64_t sub_100664CCC(void **a1, NSObject *a2, char a3, uint64_t a4)
{
  if (!a2)
  {
    uint64_t v9 = type metadata accessor for SFAirDropReceive.Failure();
    sub_100668C48(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    uint64_t v10 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v9 - 8) + 104))(v11, enum case for SFAirDropReceive.Failure.badRequest(_:), v9);
    long long aBlock = (void **)v10;
    sub_10000A844(&qword_10097D798);
    return CheckedContinuation.resume(throwing:)();
  }
  if (a4)
  {
    swift_unknownObjectRetain();
    uint64_t v5 = swift_unknownObjectRetain();
    CFErrorRef v6 = nw_error_copy_cf_error(v5);
    type metadata accessor for CFError(0);
    sub_100668C48(&qword_10097D770, type metadata accessor for CFError);
    uint64_t v7 = swift_allocError();
    *unint64_t v8 = v6;
    long long aBlock = (void **)v7;
    sub_10000A844(&qword_10097D798);
    CheckedContinuation.resume(throwing:)();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  uint64_t v15 = nw_protocol_copy_http_definition();
  nw_protocol_metadata_t v16 = nw_content_context_copy_protocol_metadata(a2, v15);
  swift_unknownObjectRelease();
  if (!v16)
  {
LABEL_17:
    uint64_t v25 = type metadata accessor for SFAirDropReceive.Failure();
    sub_100668C48(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    uint64_t v26 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v27, enum case for SFAirDropReceive.Failure.badRequest(_:), v25);
    long long aBlock = (void **)v26;
    sub_10000A844(&qword_10097D798);
    CheckedContinuation.resume(throwing:)();
    return swift_unknownObjectRelease();
  }
  if (!nw_http_metadata_copy_request())
  {
    swift_unknownObjectRelease();
    goto LABEL_17;
  }
  uint64_t v37 = 0;
  uint64_t v38 = 0;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = &v37;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_100666654;
  *(void *)(v18 + 24) = v17;
  uint64_t v35 = sub_100666680;
  uint64_t v36 = v18;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v32 = 1107296256;
  int v33 = sub_100665254;
  uint64_t v34 = &unk_1008E4160;
  os_log_type_t v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  nw_http_request_access_path();
  _Block_release(v19);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v19)
  {
    __break(1u);
  }
  else
  {
    uint64_t v20 = v38;
    if (v38)
    {
      BOOL v21 = v37;
      if (a1)
      {
        swift_bridgeObjectRetain();
        uint64_t v22 = a1;
        int v23 = swift_dynamicCast();
        if (v23) {
          a1 = aBlock;
        }
        else {
          a1 = 0;
        }
        if (v23) {
          unint64_t v24 = v32;
        }
        else {
          unint64_t v24 = 0xC000000000000000;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        unint64_t v24 = 0xC000000000000000;
      }
      long long aBlock = v21;
      uint64_t v32 = v20;
      int v33 = (uint64_t (*)(uint64_t, uint64_t))a1;
      uint64_t v34 = (void *)v24;
      uint64_t v35 = (uint64_t (*)())v16;
      LOBYTE(v36) = a3 & 1;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_10025ADCC((uint64_t)a1, v24);
      swift_unknownObjectRetain();
      sub_10000A844(&qword_10097D798);
      CheckedContinuation.resume(returning:)();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      sub_100250CC4((uint64_t)a1, v24);
    }
    else
    {
      uint64_t v28 = type metadata accessor for SFAirDropReceive.Failure();
      sub_100668C48(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
      uint64_t v29 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, enum case for SFAirDropReceive.Failure.badRequest(_:), v28);
      long long aBlock = (void **)v29;
      sub_10000A844(&qword_10097D798);
      CheckedContinuation.resume(throwing:)();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100665254(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 32))(a2);
}

void sub_100665280(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = sub_10000A844(&qword_10097D798);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = NWConnection.nw.getter();
  if ((a3 & 0x8000000000000000) != 0 || HIDWORD(a3))
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t v9 = v8;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
    unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v11 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
    aBlock[4] = sub_1006666B4;
    aBlock[5] = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10066269C;
    aBlock[3] = &unk_1008E41B0;
    int v12 = _Block_copy(aBlock);
    swift_release();
    nw_connection_receive(v9, 0, a3, v12);
    swift_unknownObjectRelease();
    _Block_release(v12);
  }
}

uint64_t sub_1006654D8(void **a1, NSObject *a2, char a3, uint64_t a4)
{
  if (!a2)
  {
    uint64_t v9 = type metadata accessor for SFAirDropReceive.Failure();
    sub_100668C48(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    uint64_t v10 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v9 - 8) + 104))(v11, enum case for SFAirDropReceive.Failure.badRequest(_:), v9);
    long long aBlock = (void **)v10;
    sub_10000A844(&qword_10097D798);
    return CheckedContinuation.resume(throwing:)();
  }
  if (a4)
  {
    swift_unknownObjectRetain();
    uint64_t v5 = swift_unknownObjectRetain();
    CFErrorRef v6 = nw_error_copy_cf_error(v5);
    type metadata accessor for CFError(0);
    sub_100668C48(&qword_10097D770, type metadata accessor for CFError);
    uint64_t v7 = swift_allocError();
    *uint64_t v8 = v6;
    long long aBlock = (void **)v7;
    sub_10000A844(&qword_10097D798);
    CheckedContinuation.resume(throwing:)();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  uint64_t v15 = nw_protocol_copy_http_definition();
  nw_protocol_metadata_t v16 = nw_content_context_copy_protocol_metadata(a2, v15);
  swift_unknownObjectRelease();
  if (!v16)
  {
LABEL_17:
    uint64_t v28 = type metadata accessor for SFAirDropReceive.Failure();
    sub_100668C48(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    uint64_t v29 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, enum case for SFAirDropReceive.Failure.badRequest(_:), v28);
    long long aBlock = (void **)v29;
    sub_10000A844(&qword_10097D798);
    CheckedContinuation.resume(throwing:)();
    return swift_unknownObjectRelease();
  }
  if (!nw_http_metadata_copy_request())
  {
    swift_unknownObjectRelease();
    goto LABEL_17;
  }
  uint64_t v40 = 0;
  uint64_t v41 = 0;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = &v40;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_100669394;
  *(void *)(v18 + 24) = v17;
  uint64_t v38 = sub_100669400;
  uint64_t v39 = v18;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256;
  uint64_t v36 = sub_100665254;
  uint64_t v37 = &unk_1008E4228;
  os_log_type_t v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  nw_http_request_access_path();
  _Block_release(v19);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v19)
  {
    __break(1u);
  }
  else
  {
    uint64_t v20 = v41;
    if (v41)
    {
      uint64_t v21 = v40;
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_100665AAC(v21, v20);
      uint64_t v24 = v23;
      unint64_t v25 = 0xC000000000000000;
      if (a1)
      {
        uint64_t v26 = a1;
        int v27 = swift_dynamicCast();
        if (v27) {
          a1 = aBlock;
        }
        else {
          a1 = 0;
        }
        if (v27) {
          unint64_t v25 = v35;
        }
      }
      long long aBlock = (void **)v22;
      uint64_t v35 = v24;
      uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t))a1;
      uint64_t v37 = (void *)v25;
      uint64_t v38 = (uint64_t (*)())v16;
      LOBYTE(v39) = a3 & 1;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_10025ADCC((uint64_t)a1, v25);
      swift_unknownObjectRetain();
      sub_10000A844(&qword_10097D798);
      CheckedContinuation.resume(returning:)();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      sub_100250CC4((uint64_t)a1, v25);
    }
    else
    {
      uint64_t v31 = type metadata accessor for SFAirDropReceive.Failure();
      sub_100668C48(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
      uint64_t v32 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, enum case for SFAirDropReceive.Failure.badRequest(_:), v31);
      long long aBlock = (void **)v32;
      sub_10000A844(&qword_10097D798);
      CheckedContinuation.resume(throwing:)();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100665A64(uint64_t result, uint64_t *a2)
{
  if (result)
  {
    *a2 = String.init(cString:)();
    a2[1] = v3;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100665AAC(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x1000000000000000) == 0 && ((a2 & 0x2000000000000000) != 0 || (a1 & 0x1000000000000000) != 0))
  {
    uint64_t v2 = String.init(cString:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    _StringGuts._slowWithCString<A>(_:)();
    swift_bridgeObjectRelease();
    return v4;
  }
  return v2;
}

uint64_t sub_100665B60(uint64_t a1, uint64_t a2)
{
  return sub_100665B90(a1, a2, &qword_10097D898, (uint64_t)&unk_1008E42D8, (uint64_t)sub_1006687C8, (uint64_t)&unk_1008E42F0);
}

uint64_t sub_100665B90(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = sub_10000A844(a3);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  int v12 = NWConnection.nw.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = a5;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10066269C;
  aBlock[3] = a6;
  uint64_t v15 = _Block_copy(aBlock);
  swift_release();
  nw_connection_receive_message(v12, v15);
  _Block_release(v15);
  return swift_unknownObjectRelease();
}

uint64_t sub_100665D34(void *a1, NSObject *a2, uint64_t a3, uint64_t a4)
{
  if (!a2)
  {
    uint64_t v8 = type metadata accessor for SFAirDropReceive.Failure();
    sub_100668C48(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v9, enum case for SFAirDropReceive.Failure.badRequest(_:), v8);
    sub_10000A844(&qword_10097D898);
    return CheckedContinuation.resume(throwing:)();
  }
  if (a4)
  {
    swift_unknownObjectRetain();
    uint64_t v5 = swift_unknownObjectRetain();
    CFErrorRef v6 = nw_error_copy_cf_error(v5);
    type metadata accessor for CFError(0);
    sub_100668C48(&qword_10097D770, type metadata accessor for CFError);
    swift_allocError();
    CFErrorRef *v7 = v6;
    sub_10000A844(&qword_10097D898);
    CheckedContinuation.resume(throwing:)();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRetain();
    int v12 = nw_protocol_copy_http_definition();
    nw_protocol_metadata_t v13 = nw_content_context_copy_protocol_metadata(a2, v12);
    swift_unknownObjectRelease();
    if (v13)
    {
      if (nw_http_metadata_copy_response())
      {
        int status_code = nw_http_response_get_status_code();
        sub_1006689E0(status_code);
        unint64_t v15 = 0xC000000000000000;
        if (a1)
        {
          id v16 = a1;
          int v17 = swift_dynamicCast();
          if (v17) {
            a1 = v20;
          }
          else {
            a1 = 0;
          }
          if (v17) {
            unint64_t v15 = v21;
          }
        }
        sub_10025ADCC((uint64_t)a1, v15);
        sub_10000A844(&qword_10097D898);
        CheckedContinuation.resume(returning:)();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        sub_100250CC4((uint64_t)a1, v15);
        return swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
    }
    uint64_t v18 = type metadata accessor for SFAirDropReceive.Failure();
    sub_100668C48(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v18 - 8) + 104))(v19, enum case for SFAirDropReceive.Failure.badRequest(_:), v18);
    sub_10000A844(&qword_10097D898);
    CheckedContinuation.resume(throwing:)();
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_100666080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for DispatchData.Deallocator();
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t))(v6 + 16))((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  return DispatchData.init(bytesNoCopy:deallocator:)();
}

uint64_t sub_10066616C()
{
  sub_100250CC4(*(void *)(v0 + 16), *(void *)(v0 + 24));

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006661A4(uint64_t a1, uint64_t a2)
{
  return sub_100666080(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1006661C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = String.init(cString:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1006661F0(uint64_t a1, uint64_t a2)
{
  uint64_t result = __DataStorage._bytes.getter();
  if (!result || (uint64_t result = __DataStorage._offset.getter(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      __DataStorage._length.getter();
      type metadata accessor for SHA256();
      sub_100668C48((unint64_t *)&unk_100974C20, (void (*)(uint64_t))&type metadata accessor for SHA256);
      return dispatch thunk of HashFunction.update(bufferPointer:)();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1006662D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t result = __DataStorage._bytes.getter();
  uint64_t v7 = result;
  if (result)
  {
    uint64_t result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v7 += a1 - result;
  }
  BOOL v8 = __OFSUB__(a2, a1);
  uint64_t v9 = a2 - a1;
  if (v8)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v10 = __DataStorage._length.getter();
  if (v10 >= v9) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = v10;
  }
  uint64_t v12 = v7 + v11;
  if (v7) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  return a3(v7, v13);
}

uint64_t sub_100666378(void *a1)
{
  uint64_t v3 = type metadata accessor for SHA256Digest();
  __chkstk_darwin(v3);
  (*(void (**)(char *, void *, uint64_t))(v5 + 16))((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  sub_100668C48((unint64_t *)&unk_10097D788, (void (*)(uint64_t))&type metadata accessor for SHA256Digest);
  dispatch thunk of Sequence.makeIterator()();
  uint64_t result = sub_10000A844(&qword_100974AD8);
  uint64_t v7 = *(void *)((char *)a1 + *(int *)(result + 36));
  uint64_t v8 = v29;
  if (!v7 || (unint64_t v9 = v30, v10 = *(void *)(v29 + 16), v30 == v10))
  {
    uint64_t result = swift_bridgeObjectRelease();
    size_t v1 = 0;
    a1 = &_swiftEmptyArrayStorage;
    goto LABEL_27;
  }
  if ((v30 & 0x8000000000000000) == 0)
  {
    if (v30 < *(void *)(v29 + 16))
    {
      size_t v1 = 0;
      a1 = &_swiftEmptyArrayStorage;
      uint64_t v11 = v7 - 1;
      uint64_t v12 = (char *)&_swiftEmptyArrayStorage + 32;
      uint64_t v13 = v10 - 1;
      uint64_t v28 = v13;
      while (1)
      {
        char v14 = *(unsigned char *)(v8 + v9 + 32);
        if (!v1)
        {
          unint64_t v15 = a1[3];
          if ((uint64_t)((v15 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_32;
          }
          int64_t v16 = v15 & 0xFFFFFFFFFFFFFFFELL;
          if (v16 <= 1) {
            uint64_t v17 = 1;
          }
          else {
            uint64_t v17 = v16;
          }
          sub_10000A844(&qword_10096B300);
          uint64_t v18 = (void *)swift_allocObject();
          size_t v19 = 2 * j__malloc_size(v18) - 64;
          void v18[2] = v17;
          v18[3] = v19;
          unint64_t v20 = (unint64_t)(v18 + 4);
          size_t v21 = a1[3] >> 1;
          if (a1[2])
          {
            if (v18 != a1 || v20 >= (unint64_t)a1 + v21 + 32) {
              memmove(v18 + 4, a1 + 4, v21);
            }
            a1[2] = 0;
          }
          uint64_t v12 = (unsigned char *)(v20 + v21);
          size_t v1 = (v19 >> 1) - v21;
          uint64_t result = swift_release();
          a1 = v18;
          uint64_t v13 = v28;
        }
        BOOL v23 = __OFSUB__(v1--, 1);
        if (v23) {
          break;
        }
        *uint64_t v12 = v14;
        if (!v11 || v13 == v9) {
          goto LABEL_26;
        }
        ++v9;
        ++v12;
        --v11;
        if (v9 >= *(void *)(v8 + 16)) {
          goto LABEL_25;
        }
      }
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    uint64_t result = swift_bridgeObjectRelease();
LABEL_27:
    unint64_t v24 = a1[3];
    if (v24 < 2) {
      return (uint64_t)a1;
    }
    unint64_t v25 = v24 >> 1;
    BOOL v23 = __OFSUB__(v25, v1);
    unint64_t v26 = v25 - v1;
    if (!v23)
    {
      a1[2] = v26;
      return (uint64_t)a1;
    }
    goto LABEL_33;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_100666618()
{
  return sub_100395108(&qword_10097D798);
}

uint64_t sub_100666624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100668B9C(a1, a2, a3, a4, &qword_10097D798, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100664CCC);
}

uint64_t sub_100666644()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100666654(uint64_t a1)
{
  return sub_100665A64(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_100666670()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100666680()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1006666A8()
{
  return sub_100395108(&qword_10097D798);
}

uint64_t sub_1006666B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100668B9C(a1, a2, a3, a4, &qword_10097D798, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1006654D8);
}

uint64_t sub_1006666D4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1006666E4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006666F4(uint64_t result, int64_t a2, uint64_t a3)
{
  uint64_t v5 = result;
  uint64_t v6 = 0;
  uint64_t v7 = 32;
  int64_t v8 = result;
  while (1)
  {
    BOOL v9 = v8 <= a2;
    if (a3 > 0) {
      BOOL v9 = v8 >= a2;
    }
    if (v9) {
      break;
    }
    BOOL v10 = __OFADD__(v8, a3);
    v8 += a3;
    if (v10) {
      int64_t v8 = (v8 >> 63) ^ 0x8000000000000000;
    }
    v7 += 8;
    BOOL v10 = __OFADD__(v6++, 1);
    if (v10)
    {
      __break(1u);
      break;
    }
  }
  if (v6 > 0)
  {
    sub_10000A844(&qword_10097D890);
    uint64_t v11 = (int64_t *)swift_allocObject();
    uint64_t result = j__malloc_size(v11);
    uint64_t v12 = result - 32;
    if (result < 32) {
      uint64_t v12 = result - 25;
    }
    uint64_t v13 = v12 >> 3;
    v11[2] = v6;
    v11[3] = 2 * v13;
    char v14 = v11 + 4;
    uint64_t v15 = v13 & 0x7FFFFFFFFFFFFFFFLL;
LABEL_15:
    v15 -= v6;
    while (1)
    {
      BOOL v16 = v5 <= a2;
      if (a3 > 0) {
        BOOL v16 = v5 >= a2;
      }
      if (v16) {
        break;
      }
      if (__OFADD__(v5, a3)) {
        int64_t v17 = ((v5 + a3) >> 63) ^ 0x8000000000000000;
      }
      else {
        int64_t v17 = v5 + a3;
      }
      *v14++ = v5;
      uint64_t v5 = v17;
      if (!--v6) {
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  uint64_t v11 = _swiftEmptyArrayStorage;
  char v14 = &_swiftEmptyArrayStorage[4];
  uint64_t v15 = _swiftEmptyArrayStorage[3] >> 1;
  if (v6) {
    goto LABEL_15;
  }
  int64_t v17 = result;
LABEL_23:
  BOOL v18 = v17 <= a2;
  if (a3 > 0) {
    BOOL v18 = v17 >= a2;
  }
  if (!v18)
  {
    uint64_t v19 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
    do
    {
      int64_t v20 = v17 + a3;
      if (__OFADD__(v17, a3))
      {
        int64_t v20 = v19;
        if (!v15) {
          goto LABEL_32;
        }
        int64_t v20 = v19;
      }
      else if (!v15)
      {
LABEL_32:
        unint64_t v21 = v11[3];
        if ((uint64_t)((v21 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_58;
        }
        int64_t v22 = v21 & 0xFFFFFFFFFFFFFFFELL;
        if (v22 <= 1) {
          uint64_t v23 = 1;
        }
        else {
          uint64_t v23 = v22;
        }
        sub_10000A844(&qword_10097D890);
        unint64_t v24 = (int64_t *)swift_allocObject();
        int64_t v25 = j__malloc_size(v24);
        uint64_t v26 = v25 - 32;
        if (v25 < 32) {
          uint64_t v26 = v25 - 25;
        }
        uint64_t v27 = v26 >> 3;
        v24[2] = v23;
        v24[3] = 2 * (v26 >> 3);
        unint64_t v28 = (unint64_t)(v24 + 4);
        unint64_t v29 = (unint64_t)v11[3] >> 1;
        if (v11[2])
        {
          if (v24 != v11 || v28 >= (unint64_t)&v11[v29 + 4]) {
            memmove(v24 + 4, v11 + 4, 8 * v29);
          }
          v11[2] = 0;
        }
        char v14 = (int64_t *)(v28 + 8 * v29);
        uint64_t v15 = (v27 & 0x7FFFFFFFFFFFFFFFLL) - v29;
        uint64_t result = swift_release();
        uint64_t v11 = v24;
        uint64_t v19 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
      }
      BOOL v10 = __OFSUB__(v15--, 1);
      if (v10) {
        goto LABEL_57;
      }
      *v14++ = v17;
      BOOL v31 = v20 <= a2;
      if (a3 > 0) {
        BOOL v31 = v20 >= a2;
      }
      int64_t v17 = v20;
    }
    while (!v31);
  }
  unint64_t v32 = v11[3];
  if (v32 < 2) {
    return (uint64_t)v11;
  }
  unint64_t v33 = v32 >> 1;
  BOOL v10 = __OFSUB__(v33, v15);
  unint64_t v34 = v33 - v15;
  if (!v10)
  {
    v11[2] = v34;
    return (uint64_t)v11;
  }
LABEL_59:
  __break(1u);
  return result;
}

uint64_t sub_100666978(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for String.Encoding();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1) {
    application_service_quic_using_identity = nw_parameters_create_application_service_quic_using_identity();
  }
  else {
    application_service_quic_using_identity = nw_parameters_create_application_service_quic();
  }
  uint64_t v7 = application_service_quic_using_identity;
  if (application_service_quic_using_identity)
  {
    nw_parameters_set_prohibit_constrained(application_service_quic_using_identity, 1);
    long long aBlock = (void **)0xD00000000000001BLL;
    unint64_t v25 = 0x80000001007C5D10;
    swift_unknownObjectRetain();
    static String.Encoding.utf8.getter();
    sub_10024A1FC();
    StringProtocol.cString(using:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_bridgeObjectRelease();
    nw_parameters_set_source_application_by_bundle_id();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    nw_parameters_set_include_peer_to_peer(v7, 1);
    swift_unknownObjectRetain();
    nw_parameters_set_attach_protocol_listener();
    nw_parameters_set_server_mode();
    swift_unknownObjectRelease();
    if (sub_1004EE5A0())
    {
      nw_parameters_set_local_only(v7, 0);
    }
    else
    {
      if (a1) {
        nw_parameters_set_required_interface_subtype();
      }
      nw_parameters_set_multipath_service(v7, nw_multipath_service_disabled);
    }
    type metadata accessor for SFAirDropUserDefaults();
    int64_t v8 = (void *)static SFAirDropUserDefaults.shared.getter();
    char v9 = SFAirDropUserDefaults.cellularUsageEnabled.getter();

    if ((v9 & 1) == 0)
    {
      nw_parameters_set_prohibit_expensive(v7, 1);
      xpc_object_t empty = xpc_array_create_empty();
      size_t v11 = XPC_ARRAY_APPEND.getter();
      xpc_array_set_uint64(empty, v11, 2uLL);
      nw_parameters_set_prohibited_interface_types();
      swift_unknownObjectRelease();
    }
    char v30 = 0;
    uint64_t v12 = nw_parameters_copy_default_protocol_stack(v7);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = &v30;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = sub_10066877C;
    *(void *)(v14 + 24) = v13;
    unint64_t v28 = sub_100442C70;
    uint64_t v29 = v14;
    long long aBlock = _NSConcreteStackBlock;
    unint64_t v25 = 1107296256;
    uint64_t v26 = sub_100440454;
    uint64_t v27 = &unk_1008E42A0;
    uint64_t v15 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    nw_protocol_stack_iterate_application_protocols(v12, v15);
    _Block_release(v15);
    LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v15)
    {
      __break(1u);
    }
    else
    {
      if (v30 == 1)
      {
        type metadata accessor for NWParameters();
        swift_unknownObjectRetain();
        uint64_t v16 = NWParameters.__allocating_init(_:)();
        NWParameters.preferNoProxies.setter();
        options = nw_http3_create_options();
        BOOL v18 = NWParameters.nw.getter();
        uint64_t v19 = nw_parameters_copy_default_protocol_stack(v18);
        swift_unknownObjectRelease();
        nw_protocol_stack_prepend_application_protocol(v19, options);
        swift_release();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return v16;
      }
      long long aBlock = 0;
      unint64_t v25 = 0xE000000000000000;
      _StringGuts.grow(_:)(75);
      v21._countAndFlagsBits = 0xD00000000000003ALL;
      v21._object = (void *)0x80000001007C5EC0;
      String.append(_:)(v21);
      uint64_t v23 = v12;
      sub_10000A844(&qword_10097D818);
      _print_unlocked<A, B>(_:_:)();
      v22._countAndFlagsBits = 0x74656D6172617020;
      v22._object = (void *)0xED0000203A737265;
      String.append(_:)(v22);
      uint64_t v23 = v7;
      sub_10000A844((uint64_t *)&unk_10097D880);
      _print_unlocked<A, B>(_:_:)();
    }
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100666E70()
{
  uint64_t v0 = NWConnection.nw.getter();
  nw_connection_copy_parameters(v0);
  swift_unknownObjectRelease();
  NWConnection.nw.getter();
  uint64_t v1 = nw_connection_create_with_connection();
  swift_unknownObjectRelease();
  if (!v1)
  {
    uint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    _StringGuts.grow(_:)(55);
    v13._countAndFlagsBits = 0xD000000000000035;
    v13._object = (void *)0x80000001007C5FE0;
    String.append(_:)(v13);
    v14._countAndFlagsBits = NWConnection.debugDescription.getter();
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
LABEL_11:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  swift_unknownObjectRetain();
  uint64_t v2 = NWConnection.__allocating_init(_:)();
  if (!v2)
  {
    _StringGuts.grow(_:)(38);
    swift_bridgeObjectRelease();
    uint64_t v16 = 0xD000000000000024;
    unint64_t v17 = 0x80000001007C6020;
    v15._countAndFlagsBits = NWConnection.debugDescription.getter();
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v3 = v2;
  if (qword_10096A0D8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_10097D750);
  swift_retain_n();
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v8 = NWConnection.debugDescription.getter();
    sub_100254634(v8, v9, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    uint64_t v10 = NWConnection.debugDescription.getter();
    sub_100254634(v10, v11, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Created connection %s from existing connection %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_unknownObjectRelease();
  }
  else
  {

    swift_unknownObjectRelease();
    swift_release_n();
    swift_release_n();
  }
  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_10066721C(char a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for String.Encoding();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    application_service_quic_using_identity = nw_parameters_create_application_service_quic_using_identity();
  }
  else {
    application_service_quic_using_identity = nw_parameters_create_application_service_quic();
  }
  unint64_t v9 = application_service_quic_using_identity;
  if (application_service_quic_using_identity)
  {
    nw_parameters_set_prohibit_constrained(application_service_quic_using_identity, 1);
    long long aBlock = (void **)0xD00000000000001BLL;
    unint64_t v33 = 0x80000001007C5D10;
    swift_unknownObjectRetain();
    static String.Encoding.utf8.getter();
    sub_10024A1FC();
    StringProtocol.cString(using:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease();
    nw_parameters_set_source_application_by_bundle_id();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    nw_parameters_set_include_peer_to_peer(v9, 1);
    if (sub_1004EE5A0())
    {
      if ((a1 & 1) == 0) {
        nw_parameters_set_local_only(v9, 0);
      }
    }
    else
    {
      nw_parameters_set_required_interface_subtype();
      nw_parameters_set_multipath_service(v9, nw_multipath_service_disabled);
    }
    type metadata accessor for SFAirDropUserDefaults();
    uint64_t v10 = (void *)static SFAirDropUserDefaults.shared.getter();
    char v11 = SFAirDropUserDefaults.cellularUsageEnabled.getter();

    if ((v11 & 1) == 0)
    {
      nw_parameters_set_prohibit_expensive(v9, 1);
      xpc_object_t empty = xpc_array_create_empty();
      size_t v13 = XPC_ARRAY_APPEND.getter();
      xpc_array_set_uint64(empty, v13, 2uLL);
      nw_parameters_set_prohibited_interface_types();
      swift_unknownObjectRelease();
    }
    xpc_object_t v14 = xpc_array_create_empty();
    size_t v15 = XPC_ARRAY_APPEND.getter();
    xpc_array_set_uint64(v14, v15, 0x3EAuLL);
    nw_parameters_set_preferred_interface_subtypes();
    char v38 = 0;
    uint64_t v16 = nw_parameters_copy_default_protocol_stack(v9);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = &v38;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_100668D88;
    *(void *)(v18 + 24) = v17;
    uint64_t v36 = sub_100669408;
    uint64_t v37 = v18;
    long long aBlock = _NSConcreteStackBlock;
    unint64_t v33 = 1107296256;
    unint64_t v34 = sub_100440454;
    uint64_t v35 = &unk_1008E44A8;
    uint64_t v19 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    nw_protocol_stack_iterate_application_protocols(v16, v19);
    _Block_release(v19);
    LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v19)
    {
      __break(1u);
    }
    else
    {
      if (v38 == 1)
      {
        xpc_object_t v20 = xpc_array_create(0, 0);
        size_t v21 = XPC_ARRAY_APPEND.getter();
        xpc_array_set_string(v20, v21, "com.apple.rapport.browse");
        xpc_object_t v22 = xpc_array_create(0, 0);
        size_t v23 = XPC_ARRAY_APPEND.getter();
        xpc_array_set_string(v22, v23, "RapportBrowseAgent");
        nw_parameters_set_preferred_netagent_classes();
        type metadata accessor for NWParameters();
        swift_unknownObjectRetain();
        uint64_t v24 = NWParameters.__allocating_init(_:)();
        NWParameters.preferNoProxies.setter();
        options = nw_http3_create_options();
        uint64_t v26 = NWParameters.nw.getter();
        uint64_t v27 = nw_parameters_copy_default_protocol_stack(v26);
        swift_unknownObjectRelease();
        nw_protocol_stack_prepend_application_protocol(v27, options);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        NWParameters.nw.getter();
        nw_parameters_set_server_mode();
        swift_unknownObjectRelease();
        NWParameters.nw.getter();
        AirDropID.getter();
        String.utf8CString.getter();
        swift_bridgeObjectRelease();
        nw_parameters_set_account_id();
        swift_release();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_release();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return v24;
      }
      long long aBlock = 0;
      unint64_t v33 = 0xE000000000000000;
      _StringGuts.grow(_:)(75);
      v29._countAndFlagsBits = 0xD00000000000003ALL;
      v29._object = (void *)0x80000001007C5EC0;
      String.append(_:)(v29);
      BOOL v31 = v16;
      sub_10000A844(&qword_10097D818);
      _print_unlocked<A, B>(_:_:)();
      v30._countAndFlagsBits = 0x74656D6172617020;
      v30._object = (void *)0xED0000203A737265;
      String.append(_:)(v30);
      BOOL v31 = v9;
      sub_10000A844((uint64_t *)&unk_10097D880);
      _print_unlocked<A, B>(_:_:)();
    }
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006677F0(NSObject *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  dispatch_queue_t v23 = a1;
  uint64_t v24 = a6;
  int v28 = a3;
  uint64_t v26 = a2;
  uint64_t v27 = type metadata accessor for NWInterface.InterfaceSubtype();
  uint64_t v25 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  char v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NWProtocolTCP.Options();
  swift_allocObject();
  NWProtocolTCP.Options.init()();
  dispatch thunk of NWProtocolTCP.Options.enableFastOpen.setter();
  type metadata accessor for NWProtocolTLS.Options();
  swift_allocObject();
  NWProtocolTLS.Options.init()();
  uint64_t v12 = dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter();
  sec_protocol_options_set_peer_authentication_required(v12, 0);
  swift_unknownObjectRelease();
  size_t v13 = dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter();
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v30 = 1107296256;
  BOOL v31 = sub_1006602C0;
  unint64_t v32 = &unk_1008E4318;
  xpc_object_t v14 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  size_t v15 = v23;
  sec_protocol_options_set_verify_block(v13, v14, v23);
  _Block_release(v14);
  swift_unknownObjectRelease();
  uint64_t v16 = dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter();
  uint64_t v33 = v24;
  uint64_t v34 = a7;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v30 = 1107296256;
  BOOL v31 = sub_1006610F0;
  unint64_t v32 = &unk_1008E4340;
  uint64_t v17 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  sec_protocol_options_set_challenge_block(v16, v17, v15);
  _Block_release(v17);
  swift_unknownObjectRelease();
  dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter();
  sec_protocol_options_set_nw_protocol_joining_context();
  swift_unknownObjectRelease();
  type metadata accessor for NWParameters();
  swift_retain();
  swift_retain();
  uint64_t v18 = NWParameters.__allocating_init(tls:tcp:)();
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v11, enum case for NWInterface.InterfaceSubtype.wifiAWDL(_:), v27);
  NWParameters.requiredInterfaceSubtype.setter();
  NWParameters.allowLocalEndpointReuse.setter();
  NWParameters.includePeerToPeer.setter();
  NWParameters.preferNoProxies.setter();
  options = nw_http_messaging_create_options();
  nw_http1_set_idle_timeout();
  xpc_object_t v20 = NWParameters.nw.getter();
  size_t v21 = nw_parameters_copy_default_protocol_stack(v20);
  swift_unknownObjectRelease();
  nw_protocol_stack_prepend_application_protocol(v21, options);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  NWParameters.nw.getter();
  nw_parameters_set_server_mode();
  swift_unknownObjectRelease();
  if (v28)
  {
    NWParameters.nw.getter();
    AirDropID.getter();
    String.utf8CString.getter();
    swift_bridgeObjectRelease();
    nw_parameters_set_account_id();
    swift_unknownObjectRelease();
    swift_release();
  }
  swift_release();
  swift_release();
  return v18;
}

void sub_100667B98(char a1)
{
  uint64_t v2 = type metadata accessor for String.Encoding();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35[0] = 0xD000000000000027;
  v35[1] = 0x80000001007C5F50;
  static String.Encoding.utf8.getter();
  sub_10024A1FC();
  uint64_t v6 = StringProtocol.cString(using:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  int out_token = -1;
  if (v6) {
    uint64_t v7 = (const char *)(v6 + 32);
  }
  else {
    uint64_t v7 = 0;
  }
  uint32_t v8 = notify_register_check(v7, &out_token);
  if (v8)
  {
    uint32_t v9 = v8;
    swift_bridgeObjectRelease();
    if (qword_10096A0D8 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000B47C(v10, (uint64_t)qword_10097D750);
    char v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      v35[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315394;
      uint64_t v33 = sub_100254634(0xD000000000000027, 0x80000001007C5F50, v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v13 + 12) = 1024;
      LODWORD(v33) = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Failed to registered check for notification %s with status %u", (uint8_t *)v13, 0x12u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return;
  }
  if (out_token == -1)
  {
    if (qword_10096A0D8 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10000B47C(v14, (uint64_t)qword_10097D750);
    size_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      v35[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      uint64_t v33 = sub_100254634(0xD000000000000027, 0x80000001007C5F50, v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Failed to registered check token for notification %s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  uint32_t v18 = notify_set_state(out_token, a1 & 1);
  if (v18)
  {
    uint32_t v19 = v18;
    swift_bridgeObjectRelease();
    if (qword_10096A0D8 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_10000B47C(v20, (uint64_t)qword_10097D750);
    size_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v21, v22)) {
      goto LABEL_27;
    }
    uint64_t v23 = swift_slowAlloc();
    v35[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v33 = sub_100254634(0xD000000000000027, 0x80000001007C5F50, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v23 + 12) = 1024;
    LODWORD(v33) = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Failed to set state for notification %s with status %u", (uint8_t *)v23, 0x12u);
    swift_arrayDestroy();
LABEL_26:
    swift_slowDealloc();
    swift_slowDealloc();
LABEL_27:

    notify_cancel(out_token);
    return;
  }
  uint32_t v24 = notify_post(v7);
  swift_bridgeObjectRelease();
  if (v24)
  {
    if (qword_10096A0D8 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_10000B47C(v25, (uint64_t)qword_10097D750);
    size_t v21 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v21, v26)) {
      goto LABEL_27;
    }
    uint64_t v27 = swift_slowAlloc();
    v35[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136315394;
    uint64_t v33 = sub_100254634(0xD000000000000027, 0x80000001007C5F50, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v27 + 12) = 1024;
    LODWORD(v33) = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v21, v26, "Failed to post notification %s with status %u", (uint8_t *)v27, 0x12u);
    swift_arrayDestroy();
    goto LABEL_26;
  }
  if (qword_10096A0D8 != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  sub_10000B47C(v28, (uint64_t)qword_10097D750);
  Swift::String v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    v35[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 136315394;
    uint64_t v33 = sub_100254634(0xD000000000000027, 0x80000001007C5F50, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 12) = 1024;
    LODWORD(v33) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Posted notification %s for cellular interface in use %{BOOL}d", (uint8_t *)v31, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
}

uint64_t sub_1006683A0(__SecIdentity *a1)
{
  if (a1)
  {
    sec_identity_t v1 = sec_identity_create(a1);
    if (v1) {
      return (uint64_t)v1;
    }
  }
  NSString v2 = String._bridgeToObjectiveC()();
  SelfSignedIdentity = (__SecIdentity *)_CFHTTPServerCreateSelfSignedIdentity();

  if (SelfSignedIdentity)
  {
    sec_identity_t v4 = sec_identity_create(SelfSignedIdentity);
    if (v4)
    {
      sec_identity_t v1 = v4;

      return (uint64_t)v1;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100668468(__SecIdentity *a1)
{
  uint64_t v2 = sub_10000A844(&qword_100974E98);
  __chkstk_darwin(v2 - 8);
  sec_identity_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000A844(&qword_10097D7A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NWProtocolTCP.Options();
  swift_allocObject();
  NWProtocolTCP.Options.init()();
  dispatch thunk of NWProtocolTCP.Options.enableFastOpen.setter();
  type metadata accessor for NWProtocolTLS.Options();
  swift_allocObject();
  NWProtocolTLS.Options.init()();
  uint32_t v8 = dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter();
  uint32_t v9 = sub_1006683A0(a1);
  sec_protocol_options_set_local_identity(v8, v9);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v10 = dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter();
  sec_protocol_options_set_peer_authentication_optional(v10, 1);
  swift_unknownObjectRelease();
  type metadata accessor for NWParameters();
  swift_retain();
  swift_retain();
  uint64_t v11 = NWParameters.__allocating_init(tls:tcp:)();
  NWParameters.allowLocalEndpointReuse.setter();
  sub_100660F54((uint64_t)v7);
  NWParameters.requiredInterface.setter();
  sub_10000A844((uint64_t *)&unk_10097D7A8);
  NWEndpoint.Host.init(stringLiteral:)();
  NWEndpoint.Port.init(integerLiteral:)();
  uint64_t v12 = enum case for NWEndpoint.hostPort(_:);
  uint64_t v13 = type metadata accessor for NWEndpoint();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 104))(v4, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v4, 0, 1, v13);
  NWParameters.requiredLocalEndpoint.setter();
  NWParameters.preferNoProxies.setter();
  NWParameters.nw.getter();
  nw_parameters_set_attach_protocol_listener();
  swift_unknownObjectRelease();
  NWParameters.nw.getter();
  nw_parameters_set_server_mode();
  swift_unknownObjectRelease();
  options = nw_http_messaging_create_options();
  nw_http1_set_idle_timeout();
  os_log_type_t v16 = NWParameters.nw.getter();
  uint64_t v17 = nw_parameters_copy_default_protocol_stack(v16);
  swift_unknownObjectRelease();
  nw_protocol_stack_prepend_application_protocol(v17, options);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v11;
}

uint64_t sub_10066876C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10066877C(NSObject *a1)
{
  return sub_1006611A0(a1, *(unsigned char **)(v1 + 16), (void (*)(NSObject *, uint64_t))&nw_quic_set_disable_spin_bit);
}

uint64_t sub_1006687AC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006687BC()
{
  return sub_100395108(&qword_10097D898);
}

uint64_t sub_1006687C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100668B9C(a1, a2, a3, a4, &qword_10097D898, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100665D34);
}

uint64_t sub_1006687E8()
{
  uint64_t v0 = sub_10000A844(&qword_10097D7A0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NWProtocolTCP.Options();
  swift_allocObject();
  NWProtocolTCP.Options.init()();
  dispatch thunk of NWProtocolTCP.Options.enableFastOpen.setter();
  type metadata accessor for NWProtocolTLS.Options();
  swift_allocObject();
  NWProtocolTLS.Options.init()();
  uint64_t v3 = dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter();
  NSString v4 = String._bridgeToObjectiveC()();
  SelfSignedIdentity = (__SecIdentity *)_CFHTTPServerCreateSelfSignedIdentity();

  if (SelfSignedIdentity)
  {
    sec_identity_t v6 = sec_identity_create(SelfSignedIdentity);
    if (v6)
    {
      uint64_t v7 = v6;

      sec_protocol_options_set_local_identity(v3, v7);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      uint32_t v8 = dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter();
      sec_protocol_options_set_peer_authentication_optional(v8, 1);
      swift_unknownObjectRelease();
      type metadata accessor for NWParameters();
      swift_retain();
      swift_retain();
      uint64_t v9 = NWParameters.__allocating_init(tls:tcp:)();
      NWParameters.allowLocalEndpointReuse.setter();
      sub_100660F54((uint64_t)v2);
      NWParameters.requiredInterface.setter();
      swift_release();
      swift_release();
      return v9;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1006689E0(int a1)
{
  if (a1 > 399)
  {
    switch(a1)
    {
      case 500:
        uint64_t result = 8;
        break;
      case 501:
        uint64_t result = 9;
        break;
      case 503:
        uint64_t result = 10;
        break;
      case 504:
        uint64_t result = 11;
        break;
      case 507:
        uint64_t result = 12;
        break;
      default:
        return 13;
    }
  }
  else
  {
    switch(a1)
    {
      case 100:
        return 0;
      case 200:
        return 1;
      case 204:
        return 2;
      default:
        return 13;
    }
  }
  return result;
}

uint64_t sub_100668B30()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100668B68(uint64_t a1)
{
  sub_100662304(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100668B70()
{
  return sub_100395108(&qword_10097D8C0);
}

uint64_t sub_100668B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100668B9C(a1, a2, a3, a4, &qword_10097D8C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10066255C);
}

uint64_t sub_100668B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = *(void *)(sub_10000A844(a5) - 8);
  uint64_t v12 = v6 + ((*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));

  return a6(a1, a2, a3, a4, v12);
}

uint64_t sub_100668C48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100668C90(uint64_t a1)
{
  sub_1006638CC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_100668CA0()
{
  return sub_100395108((uint64_t *)&unk_10096BA90);
}

uint64_t sub_100668CAC(uint64_t a1)
{
  return sub_100664328(a1);
}

uint64_t sub_100668D14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100668D78()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100668D88(NSObject *a1)
{
  return sub_1006611A0(a1, *(unsigned char **)(v1 + 16), (void (*)(NSObject *, uint64_t))&nw_quic_connection_set_disable_spin_bit);
}

uint64_t sub_100668DB8()
{
  return _swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for SDNWHTTPResponseError()
{
  return &type metadata for SDNWHTTPResponseError;
}

uint64_t destroy for SDNWHTTPResponse(uint64_t a1)
{
  return sub_100250CC4(*(void *)(a1 + 8), *(void *)(a1 + 16));
}

uint64_t _s16DaemoniOSLibrary16SDNWHTTPResponseVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_10025ADCC(v3, v4);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for SDNWHTTPResponse(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_10025ADCC(v3, v4);
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  sub_100250CC4(v5, v6);
  return a1;
}

uint64_t assignWithTake for SDNWHTTPResponse(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_100250CC4(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDNWHTTPResponse(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF4 && a1[24]) {
    return (*(_DWORD *)a1 + 244);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 0xD;
  int v5 = v3 - 13;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SDNWHTTPResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF3)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 244;
    if (a3 >= 0xF4) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF4) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 12;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDNWHTTPResponse()
{
  return &type metadata for SDNWHTTPResponse;
}

uint64_t destroy for SDNWHTTPMessage(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_100250CC4(*(void *)(a1 + 16), *(void *)(a1 + 24));

  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for SDNWHTTPMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_10025ADCC(v5, v6);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SDNWHTTPMessage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 24);
  sub_10025ADCC(v4, v5);
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  sub_100250CC4(v6, v7);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

__n128 initializeWithTake for SDNWHTTPMessage(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SDNWHTTPMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v6 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_100250CC4(v5, v6);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDNWHTTPMessage(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDNWHTTPMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDNWHTTPMessage()
{
  return &type metadata for SDNWHTTPMessage;
}

uint64_t getEnumTagSinglePayload for SDNWHTTPStatusCode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SDNWHTTPStatusCode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *__n128 result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100669304);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDNWHTTPStatusCode()
{
  return &type metadata for SDNWHTTPStatusCode;
}

unint64_t sub_100669340()
{
  unint64_t result = qword_10097D8E0;
  if (!qword_10097D8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097D8E0);
  }
  return result;
}

uint64_t sub_10066940C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10000A844(&qword_100978540);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SDAirDropServerConnection(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v13 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection;
  swift_beginAccess();
  sub_10024A330(v13, (uint64_t)v5, &qword_100978540);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_10000A7E8((uint64_t)v5, &qword_100978540);
    if (qword_10096A0E0 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10000B47C(v14, (uint64_t)qword_10097D8F0);
    size_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "UPLOAD connection is not active", v17, 2u);
      swift_slowDealloc();
    }

    uint64_t v18 = enum case for SFNWInterfaceType.other(_:);
    uint64_t v19 = type metadata accessor for SFNWInterfaceType();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(a1, v18, v19);
  }
  else
  {
    sub_100680208((uint64_t)v5, (uint64_t)v12, type metadata accessor for SDAirDropServerConnection);
    sub_1006801A0((uint64_t)v12, (uint64_t)v10, type metadata accessor for SDAirDropServerConnection);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      size_t v21 = &v10[*(int *)(sub_10000A844(&qword_100970300) + 48)];
      uint64_t v22 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
    }
    sub_10065D92C(a1);
    swift_release();
    return sub_1006802B8((uint64_t)v12, type metadata accessor for SDAirDropServerConnection);
  }
}

uint64_t sub_100669774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[22] = a3;
  v4[23] = v3;
  v4[20] = a1;
  v4[21] = a2;
  sub_10000A844(&qword_100978540);
  v4[24] = swift_task_alloc();
  v4[25] = type metadata accessor for SDAirDropMessage();
  v4[26] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SDAirDropServerConnection(0);
  v4[27] = v5;
  v4[28] = *(void *)(v5 - 8);
  v4[29] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v4[30] = static AirDropActor.shared;
  return _swift_task_switch(sub_1006698D4, v6, 0);
}

uint64_t sub_1006698D4()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 184) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_deviceStatus);
  if ([v1 screenStateSupportsAirDrop])
  {
    if (qword_10096A0E0 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000B47C(v2, (uint64_t)qword_10097D8F0);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Received DISCOVER request", v5, 2u);
      swift_slowDealloc();
    }
    uint64_t v6 = *(void *)(v0 + 232);
    uint64_t v7 = *(void *)(v0 + 176);

    sub_1006801A0(v7, v6, type metadata accessor for SDAirDropServerConnection);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      uint64_t v19 = *(void *)(v0 + 232);
      uint64_t v20 = v19 + *(int *)(sub_10000A844(&qword_100970300) + 48);
      uint64_t v21 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
    }
    uint64_t v22 = sub_10065EC34();
    *(void *)(v0 + 248) = v22;
    swift_release();
    if (!v22)
    {
      uint64_t v27 = (void *)swift_task_alloc();
      *(void *)(v0 + 368) = v27;
      *uint64_t v27 = v0;
      uint64_t v28 = sub_10066AF4C;
      goto LABEL_42;
    }
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "TLS SecTrust present, continue DISCOVER", v25, 2u);
      swift_slowDealloc();
    }
    unint64_t v26 = *(void *)(v0 + 168);

    if (v26 >> 60 == 15)
    {
      uint64_t v27 = (void *)swift_task_alloc();
      *(void *)(v0 + 352) = v27;
      *uint64_t v27 = v0;
      uint64_t v28 = sub_10066AD9C;
LABEL_42:
      v27[1] = v28;
      uint64_t v63 = *(void *)(v0 + 176);
      uint64_t v64 = *(void *)(v0 + 184);
      return sub_100676868(v64, v63);
    }
    sub_100278C78(*(void *)(v0 + 160), *(void *)(v0 + 168));
    Swift::String v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Sender record data present, continue DISCOVER", v31, 2u);
      swift_slowDealloc();
    }

    Class isa = Data._bridgeToObjectiveC()().super.isa;
    id v33 = sub_10005247C(isa, v22, 0);

    if (!v33)
    {
      uint64_t v27 = (void *)swift_task_alloc();
      *(void *)(v0 + 336) = v27;
      *uint64_t v27 = v0;
      uint64_t v28 = sub_10066ABE4;
      goto LABEL_42;
    }
    uint64_t v98 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v35 = v34;

    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      char v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Validated record data, continue DISCOVER", v38, 2u);
      swift_slowDealloc();
    }
    uint64_t v39 = *(void *)(v0 + 160);
    uint64_t v40 = *(void *)(v0 + 168);

    id v41 = sub_1004610EC();
    unint64_t v43 = v42;
    *(void *)(v0 + 256) = v41;
    *(void *)(v0 + 264) = v42;
    sub_100462B24(v39, v40, v22);
    LOBYTE(v39) = v44;
    char v45 = sub_100462878(v22);
    if (v39 & 1) == 0 || (v45)
    {
      id v54 = [v1 copyMyAppleIDSecIdentity];

      if (!v54 || (sub_10045F40C(v98, v35, v22) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v27 = (void *)swift_task_alloc();
        *(void *)(v0 + 320) = v27;
        *uint64_t v27 = v0;
        uint64_t v28 = sub_10066AA14;
        goto LABEL_42;
      }
      BOOL v55 = Logger.logObject.getter();
      os_log_type_t v56 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v55, v56))
      {
        os_log_type_t v57 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v57 = 0;
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "Sender trusted, finish DISCOVER", v57, 2u);
        swift_slowDealloc();
      }
      uint64_t v58 = *(void *)(v0 + 184);

      id v59 = [*(id *)(v58 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_nearbyAgent) idSelfIdentity];
      *(void *)(v0 + 272) = v59;
      id v60 = [self capabilitiesForCurrentDevice];
      id v61 = [v60 opaqueRepresentation];

      if (v61)
      {
        uint64_t v94 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v97 = v62;
      }
      else
      {
        uint64_t v94 = 0;
        unint64_t v97 = 0xF000000000000000;
      }
      id v65 = [v1 someComputerName];
      if (v65)
      {
        BOOL v66 = v65;
        uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v95 = v68;
        uint64_t v96 = v67;
      }
      else
      {
        uint64_t v95 = 0;
        uint64_t v96 = 0;
      }
      id v69 = [v1 modelName];
      if (v69)
      {
        char v70 = v69;
        uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v93 = v72;
      }
      else
      {
        uint64_t v71 = 0;
        uint64_t v93 = 0;
      }
      uint64_t v92 = v71;
      if (v59)
      {
        id v73 = [v59 deviceIRKData];
        if (v73)
        {
          uint64_t v74 = v73;
          uint64_t v90 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v91 = v75;
        }
        else
        {
          uint64_t v90 = 0;
          unint64_t v91 = 0xF000000000000000;
        }
        id v83 = [v59 edPKData];
        if (v83)
        {
          v84 = v83;
          uint64_t v79 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v81 = v85;
        }
        else
        {
          uint64_t v79 = 0;
          unint64_t v81 = 0xF000000000000000;
        }
        id v86 = [v59 idsDeviceID];
        if (v86)
        {
          uint64_t v87 = v86;
          uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v78 = v88;
        }
        else
        {
          uint64_t v77 = 0;
          uint64_t v78 = 0;
        }
        uint64_t v80 = v90;
        id v76 = [v59 featureFlags];
        unint64_t v82 = v91;
      }
      else
      {
        id v76 = 0;
        uint64_t v77 = 0;
        uint64_t v78 = 0;
        uint64_t v79 = 0;
        uint64_t v80 = 0;
        unint64_t v81 = 0xF000000000000000;
        unint64_t v82 = 0xF000000000000000;
      }
      *(void *)(v0 + 16) = v94;
      *(void *)(v0 + 24) = v97;
      *(void *)(v0 + 32) = v96;
      *(void *)(v0 + 40) = v95;
      *(void *)(v0 + 48) = v41;
      *(void *)(v0 + 56) = v43;
      *(void *)(v0 + 64) = v92;
      *(void *)(v0 + 72) = v93;
      *(void *)(v0 + 80) = v80;
      *(void *)(v0 + 88) = v82;
      *(void *)(v0 + 96) = v79;
      *(void *)(v0 + 104) = v81;
      *(void *)(v0 + 112) = v77;
      *(void *)(v0 + 120) = v78;
      *(void *)(v0 + 128) = v76;
      *(unsigned char *)(v0 + 136) = 0;
      *(void *)(v0 + 144) = v98;
      *(void *)(v0 + 152) = v35;
      uint64_t v89 = static AirDropActor.shared;
      *(void *)(v0 + 280) = static AirDropActor.shared;
      sub_100278C78((uint64_t)v41, v43);
      return _swift_task_switch(sub_10066A41C, v89, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      unsigned int v46 = Logger.logObject.getter();
      os_log_type_t v47 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v46, v47))
      {
        unint64_t v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v48 = 0;
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "Sender is blocked, finish DISCOVER", v48, 2u);
        swift_slowDealloc();
      }
      uint64_t v50 = *(void *)(v0 + 160);
      unint64_t v49 = *(void *)(v0 + 168);

      uint64_t v51 = type metadata accessor for SFAirDropReceive.Failure();
      sub_100680270(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v51 - 8) + 104))(v52, enum case for SFAirDropReceive.Failure.declined(_:), v51);
      swift_willThrow();
      sub_100250CB0((uint64_t)v41, v43);
      sub_100250CB0(v50, v49);

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v53 = *(uint64_t (**)(void))(v0 + 8);
      return v53();
    }
  }
  else
  {
    if (qword_10096A0E0 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000B47C(v8, (uint64_t)qword_10097D8F0);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Screen is off, rejecting DISCOVER", v11, 2u);
      swift_slowDealloc();
    }
    uint64_t v12 = *(void *)(v0 + 216);
    uint64_t v13 = *(void *)(v0 + 224);
    uint64_t v14 = *(void *)(v0 + 192);
    uint64_t v15 = *(void *)(v0 + 176);

    sub_1006801A0(v15, v14, type metadata accessor for SDAirDropServerConnection);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v14, 0, 1, v12);
    os_log_type_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 376) = v16;
    *os_log_type_t v16 = v0;
    v16[1] = sub_10066B09C;
    uint64_t v17 = *(void *)(v0 + 192);
    return sub_1006761B4(v17);
  }
}

uint64_t sub_10066A41C()
{
  memmove(*(void **)(v0 + 208), (const void *)(v0 + 16), 0x90uLL);
  swift_storeEnumTagMultiPayload();
  sub_10039C6B0((uint64_t *)(v0 + 16));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10066A4EC;
  uint64_t v2 = *(void *)(v0 + 208);
  return sub_1005DB860(v2);
}

uint64_t sub_10066A4EC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 296) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 280);
  sub_1006802B8(*(void *)(v2 + 208), (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  if (v0) {
    uint64_t v4 = sub_10066A878;
  }
  else {
    uint64_t v4 = sub_10066A648;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10066A648()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[38] = Strong;
  if (Strong)
  {
    uint64_t v2 = v0[23] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[39] = v3;
    void *v3 = v0;
    v3[1] = sub_10066A744;
    return sub_10034C504(v2, 0);
  }
  else
  {
    uint64_t v5 = v0[30];
    return _swift_task_switch(sub_10066A954, v5, 0);
  }
}

uint64_t sub_10066A744()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(v1 + 240);
  return _swift_task_switch(sub_10066A954, v2, 0);
}

uint64_t sub_10066A878()
{
  return _swift_task_switch(sub_10066A894, *(void *)(v0 + 240), 0);
}

uint64_t sub_10066A894()
{
  unint64_t v1 = v0[33];
  uint64_t v2 = (void *)v0[34];
  uint64_t v4 = (void *)v0[31];
  uint64_t v3 = v0[32];
  uint64_t v6 = v0[20];
  unint64_t v5 = v0[21];
  sub_10039C76C(v0 + 2);

  sub_100250CB0(v3, v1);
  sub_100250CB0(v6, v5);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10066A954()
{
  unint64_t v1 = v0[33];
  uint64_t v2 = (void *)v0[34];
  uint64_t v4 = (void *)v0[31];
  uint64_t v3 = v0[32];
  uint64_t v6 = v0[20];
  unint64_t v5 = v0[21];
  sub_10039C76C(v0 + 2);

  sub_100250CB0(v3, v1);
  sub_100250CB0(v6, v5);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10066AA14()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 328) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 240);
  if (v0) {
    uint64_t v4 = sub_10066B3BC;
  }
  else {
    uint64_t v4 = sub_10066AB40;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10066AB40()
{
  unint64_t v1 = (void *)v0[31];
  uint64_t v2 = v0[20];
  unint64_t v3 = v0[21];
  sub_100250CB0(v0[32], v0[33]);
  sub_100250CB0(v2, v3);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10066ABE4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 344) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 240);
  if (v0) {
    uint64_t v4 = sub_10066B328;
  }
  else {
    uint64_t v4 = sub_10066AD10;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10066AD10()
{
  unint64_t v1 = (void *)v0[31];
  sub_100250CB0(v0[20], v0[21]);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_10066AD9C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 360) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 240);
  if (v0) {
    uint64_t v4 = sub_10066B29C;
  }
  else {
    uint64_t v4 = sub_10066AEC8;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10066AEC8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10066AF4C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10066B09C()
{
  uint64_t v2 = (void *)*v1;
  v2[48] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[30];
    sub_10000A7E8(v2[24], &qword_100978540);
    return _swift_task_switch(sub_10066B218, v3, 0);
  }
  else
  {
    sub_10000A7E8(v2[24], &qword_100978540);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_10066B218()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10066B29C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10066B328()
{
  unint64_t v1 = (void *)v0[31];
  sub_100250CB0(v0[20], v0[21]);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_10066B3BC()
{
  unint64_t v1 = (void *)v0[31];
  uint64_t v2 = v0[20];
  unint64_t v3 = v0[21];
  sub_100250CB0(v0[32], v0[33]);
  sub_100250CB0(v2, v3);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10066B460(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  uint64_t v4 = type metadata accessor for SFPlatform();
  v3[11] = v4;
  v3[12] = *(void *)(v4 - 8);
  v3[13] = swift_task_alloc();
  sub_10000A844(&qword_100978540);
  v3[14] = swift_task_alloc();
  sub_10000A844(&qword_10096DF48);
  v3[15] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_10066B5BC, v5, 0);
}

uint64_t sub_10066B5BC()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  sub_1006801A0(v0[8], v2, (uint64_t (*)(void))_s12HelloRequestVMa);
  uint64_t v5 = _s12HelloRequestVMa();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 0, 1, v5);
  uint64_t v6 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_helloRequest;
  swift_beginAccess();
  sub_10026B410(v2, v6, &qword_10096DF48);
  swift_endAccess();
  sub_1006801A0(v3, v1, type metadata accessor for SDAirDropServerConnection);
  uint64_t v7 = type metadata accessor for SDAirDropServerConnection(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v1, 0, 1, v7);
  uint64_t v8 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_helloConnection;
  swift_beginAccess();
  sub_10026B410(v1, v8, &qword_100978540);
  swift_endAccess();
  if (qword_10096A0E0 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000B47C(v9, (uint64_t)qword_10097D8F0);
  os_log_type_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Received HELLO request", v12, 2u);
    swift_slowDealloc();
  }

  type metadata accessor for SFAirDropUserDefaults();
  uint64_t v13 = (void *)static SFAirDropUserDefaults.shared.getter();
  char v14 = SFAirDropUserDefaults.helloFeatureFlagsEnabled.getter();

  BOOL v19 = 0;
  if (v14)
  {
    uint64_t v16 = v0[12];
    uint64_t v15 = v0[13];
    uint64_t v17 = v0[11];
    static SFPlatform.macOS.getter();
    char v18 = static SFPlatform.isPlatform(_:)();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    if ((v18 & 1) == 0) {
      BOOL v19 = 1;
    }
  }
  uint64_t v20 = v0[8];
  unsigned int v21 = v19 | 4;
  uint64_t v22 = *(int *)(v5 + 24);
  uint64_t v23 = *(unsigned __int8 *)(v20 + v22);
  if (v23)
  {
    uint64_t v25 = v0[12];
    uint64_t v24 = v0[13];
    uint64_t v26 = v0[11];
    static SFPlatform.macOS.getter();
    char v27 = static SFPlatform.isPlatform(_:)();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    if ((v27 & 1) == 0) {
      unsigned int v21 = v19 | 6;
    }
    uint64_t v23 = *(unsigned __int8 *)(v20 + v22);
  }
  uint64_t v28 = (void *)swift_task_alloc();
  v0[16] = (uint64_t)v28;
  if (v23 == 2)
  {
    uint64_t v29 = v21;
    *uint64_t v28 = v0;
    os_log_type_t v30 = sub_100680334;
  }
  else
  {
    uint64_t v29 = v21 | (unint64_t)(v23 << 32);
    *uint64_t v28 = v0;
    os_log_type_t v30 = sub_10066B968;
  }
  v28[1] = v30;
  uint64_t v31 = v0[9];
  return sub_10067FCB8(v29, v31);
}

uint64_t sub_10066B968()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10066BAB8(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  uint64_t v4 = type metadata accessor for SFAirDropReceive.AskResponse();
  v3[14] = v4;
  v3[15] = *(void *)(v4 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SFAirDropReceive.AskRequest();
  v3[18] = v5;
  v3[19] = *(void *)(v5 - 8);
  v3[20] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFAirDrop.AskProgress();
  v3[21] = v6;
  v3[22] = *(void *)(v6 - 8);
  v3[23] = swift_task_alloc();
  uint64_t v7 = sub_10000A844(&qword_10097DA18);
  v3[24] = v7;
  v3[25] = *(void *)(v7 - 8);
  v3[26] = swift_task_alloc();
  sub_10000A844(&qword_100978548);
  v3[27] = swift_task_alloc();
  sub_10000A844(&qword_10096DFA8);
  v3[28] = swift_task_alloc();
  sub_10000A844(&qword_100978540);
  v3[29] = swift_task_alloc();
  sub_10000A844(&qword_10096DF58);
  v3[30] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v8 = static AirDropActor.shared;
  v3[31] = static AirDropActor.shared;
  return _swift_task_switch(sub_10066BDA0, v8, 0);
}

uint64_t sub_10066BDA0()
{
  uint64_t v1 = v0[29];
  uint64_t v2 = v0[30];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[13];
  sub_1006801A0(v0[11], v2, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  uint64_t v5 = _s14descr1008C9AB9V10AskRequestVMa();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 0, 1, v5);
  uint64_t v6 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askRequest;
  swift_beginAccess();
  sub_10026B410(v2, v6, &qword_10096DF58);
  swift_endAccess();
  sub_1006801A0(v3, v1, type metadata accessor for SDAirDropServerConnection);
  uint64_t v7 = type metadata accessor for SDAirDropServerConnection(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v1, 0, 1, v7);
  uint64_t v8 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askConnection;
  swift_beginAccess();
  sub_10026B410(v1, v8, &qword_100978540);
  swift_endAccess();
  if (qword_10096A0E0 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  v0[32] = v9;
  sub_10000B47C(v9, (uint64_t)qword_10097D8F0);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Received ASK request", v12, 2u);
    swift_slowDealloc();
  }

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[33] = Strong;
  if (Strong)
  {
    uint64_t v14 = v0[28];
    sub_10024A330(v0[11] + *(int *)(v5 + 20), v14, &qword_10096DFA8);
    uint64_t v15 = type metadata accessor for SFAirDrop.TransferType();
    uint64_t v16 = *(void *)(v15 - 8);
    int v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
    uint64_t v18 = v0[28];
    if (v17 == 1)
    {
      sub_10000A7E8(v0[28], &qword_10096DFA8);
    }
    else
    {
      SFAirDrop.TransferType.exchangeType.getter();
      uint64_t v30 = v29;
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v15);
      if (v30)
      {
        uint64_t v31 = v0[27];
        uint64_t v32 = v0[13];
        swift_bridgeObjectRelease();
        _s14descr1008C9A51V15ExchangeRequestVMa(0);
        SFProgressContinuation.init(_:initialProgress:file:line:)();
        uint64_t v33 = sub_10000A844(&qword_100978558);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v31, 0, 1, v33);
        uint64_t v34 = v32 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeContinuation;
        swift_beginAccess();
        sub_10026B410(v31, v34, &qword_100978548);
        swift_endAccess();
      }
    }
    uint64_t v36 = v0[25];
    uint64_t v35 = v0[26];
    uint64_t v38 = v0[23];
    uint64_t v37 = v0[24];
    uint64_t v39 = v0[21];
    uint64_t v40 = v0[22];
    uint64_t v41 = v0[13];
    uint64_t v42 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askContinuation;
    v0[34] = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askContinuation;
    unint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
    v0[35] = (uint64_t)v43;
    v0[36] = (v36 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v43(v35, v41 + v42, v37);
    (*(void (**)(uint64_t, void, uint64_t))(v40 + 104))(v38, enum case for SFAirDrop.AskProgress.waitingForAskResponse(_:), v39);
    SFProgressContinuation.yield(_:)();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
    char v44 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v0[37] = (uint64_t)v44;
    v0[38] = (v36 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v44(v35, v37);
    uint64_t v45 = v41 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_id;
    uint64_t v46 = *(void *)(v41 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_deviceStatus);
    uint64_t v47 = *(void *)(v41 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_endpointService);
    unint64_t v48 = (void *)swift_task_alloc();
    v0[39] = (uint64_t)v48;
    *unint64_t v48 = v0;
    v48[1] = sub_10066C418;
    uint64_t v49 = v0[20];
    uint64_t v50 = v0[12];
    return sub_1005D380C(v49, v45, v46, v50, v47);
  }
  else
  {
    BOOL v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v19, v20))
    {
      unsigned int v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Nil delegate when handling askRequest", v21, 2u);
      swift_slowDealloc();
    }
    uint64_t v23 = v0[15];
    uint64_t v22 = v0[16];
    uint64_t v24 = v0[14];

    (*(void (**)(uint64_t, void, uint64_t))(v23 + 104))(v22, enum case for SFAirDropReceive.AskResponse.error(_:), v24);
    uint64_t v25 = (void *)swift_task_alloc();
    v0[45] = (uint64_t)v25;
    void *v25 = v0;
    v25[1] = sub_10066CBA8;
    uint64_t v26 = v0[16];
    uint64_t v27 = v0[12];
    return sub_1006770B8(v26, v27);
  }
}

uint64_t sub_10066C418()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = static AirDropActor.shared;
  *(void *)(v1 + 320) = static AirDropActor.shared;
  return _swift_task_switch(sub_10066C520, v2, 0);
}

uint64_t sub_10066C520()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[41] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[42] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10066C6F4;
    uint64_t v3 = v0[20];
    uint64_t v4 = v0[17];
    uint64_t v5 = v0[13];
    return sub_100547854(v4, v5, v3);
  }
  else
  {
    if (qword_100969C38 != -1) {
      swift_once();
    }
    sub_10000B47C(v0[32], (uint64_t)qword_1009700E0);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Missing delegate for start receive", v9, 2u);
      swift_slowDealloc();
    }
    uint64_t v10 = v0[17];
    uint64_t v11 = v0[14];
    uint64_t v12 = v0[15];

    (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v10, enum case for SFAirDropReceive.AskResponse.error(_:), v11);
    uint64_t v13 = v0[31];
    return _swift_task_switch(sub_10066C86C, v13, 0);
  }
}

uint64_t sub_10066C6F4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 320);
  swift_task_dealloc();
  return _swift_task_switch(sub_10066C804, v1, 0);
}

uint64_t sub_10066C804()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(void *)(v0 + 248);
  return _swift_task_switch(sub_10066C86C, v1, 0);
}

uint64_t sub_10066C86C()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 192);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 280))(v2, *(void *)(v0 + 104) + *(void *)(v0 + 272), v3);
  SFProgressContinuation.finish(with:)();
  v1(v2, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10066C958;
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 96);
  return sub_1006770B8(v5, v6);
}

uint64_t sub_10066C958()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 352) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 248);
  if (v0) {
    uint64_t v4 = sub_10066CE94;
  }
  else {
    uint64_t v4 = sub_10066CA84;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10066CA84()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[15];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  (*(void (**)(void, void))(v1 + 8))(v0[20], v0[18]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10066CBA8()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 120);
  uint64_t v3 = *(void **)v1;
  v3[46] = v0;
  swift_task_dealloc();
  uint64_t v4 = (void (**)(void, void))(v2 + 8);
  if (v0)
  {
    uint64_t v5 = v3[31];
    (*v4)(v3[16], v3[14]);
    return _swift_task_switch(sub_10066CDBC, v5, 0);
  }
  else
  {
    (*v4)(v3[16], v3[14]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v3[1];
    return v6();
  }
}

uint64_t sub_10066CDBC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10066CE94()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v4 = v0[17];
  uint64_t v3 = v0[18];
  uint64_t v5 = v0[14];
  uint64_t v6 = v0[15];
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10066CFB0(uint64_t a1, uint64_t a2)
{
  v3[26] = a2;
  v3[27] = v2;
  v3[25] = a1;
  sub_10000A844(&qword_10097A348);
  v3[28] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropReceive.Failure();
  v3[29] = v4;
  v3[30] = *(void *)(v4 - 8);
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_100975040);
  v3[33] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SDAirDropServerConnection(0);
  v3[34] = v5;
  v3[35] = *(void *)(v5 - 8);
  v3[36] = swift_task_alloc();
  v3[37] = swift_task_alloc();
  sub_10000A844(&qword_100978540);
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  v3[40] = swift_task_alloc();
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  sub_10000A844(&qword_10096DF68);
  v3[43] = swift_task_alloc();
  sub_10000A844(&qword_10096DF58);
  v3[44] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFAirDrop.AskProgress();
  v3[45] = v6;
  v3[46] = *(void *)(v6 - 8);
  v3[47] = swift_task_alloc();
  sub_10000A844(&qword_10097DA60);
  v3[48] = swift_task_alloc();
  uint64_t v7 = sub_10000A844(&qword_10097DA68);
  v3[49] = v7;
  v3[50] = *(void *)(v7 - 8);
  v3[51] = swift_task_alloc();
  uint64_t v8 = sub_10000A844(&qword_10097DA18);
  v3[52] = v8;
  v3[53] = *(void *)(v8 - 8);
  v3[54] = swift_task_alloc();
  uint64_t v9 = sub_10000A844(&qword_10097DA70);
  v3[55] = v9;
  v3[56] = *(void *)(v9 - 8);
  v3[57] = swift_task_alloc();
  sub_10000A844(&qword_10096DF48);
  v3[58] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v10 = static AirDropActor.shared;
  v3[59] = static AirDropActor.shared;
  return _swift_task_switch(sub_10066D42C, v10, 0);
}

uint64_t sub_10066D42C()
{
  uint64_t v96 = v0;
  if (qword_10096A0E0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 480) = sub_10000B47C(v1, (uint64_t)qword_10097D8F0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Received UPLOAD request", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 464);
  uint64_t v6 = *(void *)(v0 + 216);

  uint64_t v7 = v6 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_helloRequest;
  swift_beginAccess();
  sub_10024A330(v7, v5, &qword_10096DF48);
  uint64_t v8 = _s12HelloRequestVMa();
  LODWORD(v7) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8);
  sub_10000A7E8(v5, &qword_10096DF48);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  if (v7 == 1)
  {
    if (v11)
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "No HELLO request present", v12, 2u);
      swift_slowDealloc();
    }
    uint64_t v13 = *(void *)(v0 + 352);
    uint64_t v14 = *(void *)(v0 + 216);

    uint64_t v15 = v14 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askRequest;
    swift_beginAccess();
    sub_10024A330(v15, v13, &qword_10096DF58);
    uint64_t v16 = _s14descr1008C9AB9V10AskRequestVMa();
    LODWORD(v15) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v13, 1, v16);
    sub_10000A7E8(v13, &qword_10096DF58);
    if (v15 == 1)
    {
      int v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v17, v18))
      {
        BOOL v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)BOOL v19 = 0;
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "No ASK request before UPLOAD", v19, 2u);
        swift_slowDealloc();
      }
      uint64_t v20 = *(void *)(v0 + 232);
      uint64_t v21 = *(void *)(v0 + 240);

      sub_100680270(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v22, enum case for SFAirDropReceive.Failure.badRequest(_:), v20);
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
      return v23();
    }
    else
    {
      uint64_t v38 = *(void *)(v0 + 336);
      uint64_t v39 = *(void *)(v0 + 344);
      uint64_t v40 = *(void *)(v0 + 280);
      uint64_t v91 = *(void *)(v0 + 272);
      uint64_t v42 = *(void *)(v0 + 208);
      uint64_t v41 = *(char **)(v0 + 216);
      uint64_t v43 = *(void *)(v0 + 200);
      sub_1006801A0(v43, v39, (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
      char v44 = (int *)_s14descr1008C92C9V13UploadRequestVMa();
      (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v44 - 1) + 56))(v39, 0, 1, v44);
      uint64_t v45 = (uint64_t)&v41[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadRequest];
      swift_beginAccess();
      sub_10026B410(v39, v45, &qword_10096DF68);
      swift_endAccess();
      uint64_t v46 = &v41[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_totalBytes];
      *(void *)uint64_t v46 = *(void *)(v43 + v44[5]);
      v46[8] = 0;
      sub_1006801A0(v42, v38, type metadata accessor for SDAirDropServerConnection);
      uint64_t v47 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56);
      *(void *)(v0 + 496) = v47;
      *(void *)(v0 + 504) = (v40 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      v47(v38, 0, 1, v91);
      uint64_t v48 = (uint64_t)&v41[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection];
      swift_beginAccess();
      sub_10026B410(v38, v48, &qword_100978540);
      swift_endAccess();
      uint64_t v49 = v44[10];
      uint64_t v50 = (uint64_t *)(v43 + v44[9]);
      uint64_t v51 = *v50;
      uint64_t v52 = (void *)v50[1];
      uint64_t v53 = *(void *)(v43 + v49);
      id v54 = *(void **)(v43 + v49 + 8);
      swift_bridgeObjectRetain_n();
      BOOL v55 = v41;
      swift_bridgeObjectRetain_n();
      os_log_type_t v56 = v55;
      os_log_type_t v57 = Logger.logObject.getter();
      os_log_type_t v58 = static os_log_type_t.default.getter();
      BOOL v59 = os_log_type_enabled(v57, v58);
      id v60 = *(char **)(v0 + 216);
      if (v59)
      {
        os_log_type_t v89 = v58;
        log = v57;
        uint64_t v92 = v54;
        uint64_t v61 = swift_slowAlloc();
        uint64_t v93 = swift_slowAlloc();
        *(_DWORD *)uint64_t v61 = 136315650;
        uint64_t v62 = v51;
        uint64_t v63 = v52;
        uint64_t v64 = *(void *)&v60[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID];
        unint64_t v65 = *(void *)&v60[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID + 8];
        swift_bridgeObjectRetain();
        *(void *)(v0 + 168) = sub_100254634(v64, v65, &v93);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v52 = v63;
        uint64_t v51 = v62;
        swift_bridgeObjectRelease();

        *(_WORD *)(v61 + 12) = 2080;
        uint64_t v66 = v62;
        unint64_t v67 = (unint64_t)v52;
        if (!v52)
        {
          uint64_t v66 = 0xD000000000000015;
          uint64_t v94 = 0;
          unint64_t v95 = 0xE000000000000000;
          _StringGuts.grow(_:)(17);
          swift_bridgeObjectRelease();
          unint64_t v67 = 0x80000001007B7770;
        }
        swift_bridgeObjectRetain();
        *(void *)(v0 + 176) = sub_100254634(v66, v67, &v93);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v61 + 22) = 2080;
        id v54 = v92;
        uint64_t v68 = v53;
        unint64_t v69 = (unint64_t)v92;
        if (!v92)
        {
          uint64_t v68 = 0xD000000000000015;
          uint64_t v94 = 0;
          unint64_t v95 = 0xE000000000000000;
          _StringGuts.grow(_:)(17);
          swift_bridgeObjectRelease();
          unint64_t v69 = 0x80000001007B7770;
        }
        swift_bridgeObjectRetain();
        *(void *)(v0 + 184) = sub_100254634(v68, v69, &v93);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        os_log_type_t v57 = log;
        _os_log_impl((void *)&_mh_execute_header, log, v89, "Receiver extracted IDS session ID %s, pseudonym: %s, push token: %s from upload request", (uint8_t *)v61, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }

      uint64_t v70 = *(void *)(v0 + 328);
      uint64_t v71 = *(void *)(v0 + 272);
      uint64_t v72 = *(void *)(v0 + 280);
      uint64_t v73 = *(void *)(v0 + 216) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askConnection;
      swift_beginAccess();
      sub_10024A330(v73, v70, &qword_100978540);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71) == 1)
      {
        sub_10000A7E8(*(void *)(v0 + 328), &qword_100978540);
        uint64_t v74 = Logger.logObject.getter();
        os_log_type_t v75 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v74, v75))
        {
          id v76 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v76 = 0;
          _os_log_impl((void *)&_mh_execute_header, v74, v75, "ASK connection no longer exists to set Internet fallback endpoint", v76, 2u);
          swift_slowDealloc();
        }
      }
      else
      {
        uint64_t v77 = *(void *)(v0 + 288);
        uint64_t v78 = *(void *)(v0 + 296);
        sub_100680208(*(void *)(v0 + 328), v78, type metadata accessor for SDAirDropServerConnection);
        sub_1006801A0(v78, v77, type metadata accessor for SDAirDropServerConnection);
        if (swift_getEnumCaseMultiPayload() > 1)
        {
          uint64_t v79 = *(void *)(v0 + 288);
          uint64_t v80 = v79 + *(int *)(sub_10000A844(&qword_100970300) + 48);
          uint64_t v81 = type metadata accessor for UUID();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v80, v81);
        }
        uint64_t v82 = *(void *)(v0 + 296);
        sub_10065E534(*(void *)(*(void *)(v0 + 216) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID), *(void **)(*(void *)(v0 + 216) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID + 8), v51, v52, v53, v54);
        swift_release();
        sub_1006802B8(v82, type metadata accessor for SDAirDropServerConnection);
      }
      uint64_t v83 = *(void *)(v0 + 264);
      uint64_t v84 = *(void *)(v0 + 216);
      static Date.now.getter();
      uint64_t v85 = type metadata accessor for Date();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v83, 0, 1, v85);
      uint64_t v86 = v84 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferStart;
      swift_beginAccess();
      sub_10026B410(v83, v86, (uint64_t *)&unk_100975040);
      swift_endAccess();
      uint64_t v87 = (void *)swift_task_alloc();
      *(void *)(v0 + 512) = v87;
      *uint64_t v87 = v0;
      v87[1] = sub_10066ED50;
      uint64_t v88 = *(void *)(v0 + 200);
      return sub_1006788F8(v88);
    }
  }
  else
  {
    if (v11)
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "HELLO request present", v25, 2u);
      swift_slowDealloc();
    }
    uint64_t v27 = *(void *)(v0 + 424);
    uint64_t v26 = *(void *)(v0 + 432);
    uint64_t v29 = *(void *)(v0 + 408);
    uint64_t v28 = *(void *)(v0 + 416);
    uint64_t v30 = *(void *)(v0 + 392);
    uint64_t v31 = *(void *)(v0 + 400);
    uint64_t v32 = *(void *)(v0 + 216);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v26, v32 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askContinuation, v28);
    SFProgressContinuation.task.getter();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    SFProgressTask.makeAsyncIterator()();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
    *(_DWORD *)(v0 + 584) = enum case for SFAirDrop.AskProgress.notStarted(_:);
    uint64_t v33 = static AirDropActor.shared;
    uint64_t v34 = sub_100680270((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v35 = (void *)swift_task_alloc();
    *(void *)(v0 + 488) = v35;
    *uint64_t v35 = v0;
    v35[1] = sub_10066E1CC;
    uint64_t v36 = *(void *)(v0 + 440);
    uint64_t v37 = *(void *)(v0 + 384);
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v37, v33, v34, v36, v0 + 192);
  }
}

uint64_t sub_10066E1CC()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 472);
  if (v0) {
    uint64_t v4 = sub_10066EF9C;
  }
  else {
    uint64_t v4 = sub_10066E2E0;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10066E2E0()
{
  uint64_t v78 = v0;
  uint64_t v1 = *(void *)(v0 + 384);
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v3 = *(void *)(v0 + 368);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1) {
    goto LABEL_16;
  }
  int v4 = *(_DWORD *)(v0 + 584);
  uint64_t v5 = *(void *)(v0 + 376);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == v4)
  {
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Waiting for ASK before UPLOAD", v9, 2u);
      swift_slowDealloc();
    }

    uint64_t v10 = static AirDropActor.shared;
    uint64_t v11 = sub_100680270((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 488) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_10066E1CC;
    uint64_t v13 = *(void *)(v0 + 440);
    uint64_t v14 = *(void *)(v0 + 384);
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v14, v10, v11, v13, v0 + 192);
  }
  if (v6 == enum case for SFAirDrop.AskProgress.waitingForAskResponse(_:))
  {
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      int v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v17 = 0;
      os_log_type_t v18 = "Received ASK request, proceeding pipelined with UPLOAD";
LABEL_14:
      _os_log_impl((void *)&_mh_execute_header, v15, v16, v18, v17, 2u);
      swift_slowDealloc();
      goto LABEL_15;
    }
    goto LABEL_15;
  }
  if (v6 == enum case for SFAirDrop.AskProgress.askResponseReceived(_:))
  {
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      int v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v17 = 0;
      os_log_type_t v18 = "ASK response sent, proceeding with UPLOAD";
      goto LABEL_14;
    }
LABEL_15:

LABEL_16:
    (*(void (**)(void, void))(*(void *)(v0 + 448) + 8))(*(void *)(v0 + 456), *(void *)(v0 + 440));
    uint64_t v19 = *(void *)(v0 + 336);
    uint64_t v20 = *(void *)(v0 + 344);
    uint64_t v21 = *(void *)(v0 + 280);
    uint64_t v73 = *(void *)(v0 + 272);
    uint64_t v23 = *(void *)(v0 + 208);
    uint64_t v22 = *(char **)(v0 + 216);
    uint64_t v24 = *(void *)(v0 + 200);
    sub_1006801A0(v24, v20, (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
    uint64_t v25 = (int *)_s14descr1008C92C9V13UploadRequestVMa();
    (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v25 - 1) + 56))(v20, 0, 1, v25);
    uint64_t v26 = (uint64_t)&v22[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadRequest];
    swift_beginAccess();
    sub_10026B410(v20, v26, &qword_10096DF68);
    swift_endAccess();
    uint64_t v27 = &v22[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_totalBytes];
    *(void *)uint64_t v27 = *(void *)(v24 + v25[5]);
    v27[8] = 0;
    sub_1006801A0(v23, v19, type metadata accessor for SDAirDropServerConnection);
    uint64_t v28 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56);
    *(void *)(v0 + 496) = v28;
    *(void *)(v0 + 504) = (v21 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v28(v19, 0, 1, v73);
    uint64_t v29 = (uint64_t)&v22[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection];
    swift_beginAccess();
    sub_10026B410(v19, v29, &qword_100978540);
    swift_endAccess();
    uint64_t v30 = v25[10];
    uint64_t v31 = (uint64_t *)(v24 + v25[9]);
    uint64_t v32 = *v31;
    uint64_t v33 = (void *)v31[1];
    uint64_t v34 = *(void *)(v24 + v30);
    uint64_t v35 = *(void **)(v24 + v30 + 8);
    swift_bridgeObjectRetain_n();
    uint64_t v36 = v22;
    swift_bridgeObjectRetain_n();
    uint64_t v37 = v36;
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.default.getter();
    BOOL v40 = os_log_type_enabled(v38, v39);
    uint64_t v41 = *(char **)(v0 + 216);
    if (v40)
    {
      os_log_type_t v71 = v39;
      log = v38;
      uint64_t v74 = v35;
      uint64_t v42 = swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136315650;
      uint64_t v43 = v32;
      char v44 = v33;
      uint64_t v45 = *(void *)&v41[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID];
      unint64_t v46 = *(void *)&v41[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID + 8];
      swift_bridgeObjectRetain();
      *(void *)(v0 + 168) = sub_100254634(v45, v46, &v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v33 = v44;
      uint64_t v32 = v43;
      swift_bridgeObjectRelease();

      *(_WORD *)(v42 + 12) = 2080;
      uint64_t v47 = v43;
      unint64_t v48 = (unint64_t)v33;
      if (!v33)
      {
        uint64_t v47 = 0xD000000000000015;
        uint64_t v76 = 0;
        unint64_t v77 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        unint64_t v48 = 0x80000001007B7770;
      }
      swift_bridgeObjectRetain();
      *(void *)(v0 + 176) = sub_100254634(v47, v48, &v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v42 + 22) = 2080;
      uint64_t v35 = v74;
      uint64_t v49 = v34;
      unint64_t v50 = (unint64_t)v74;
      if (!v74)
      {
        uint64_t v49 = 0xD000000000000015;
        uint64_t v76 = 0;
        unint64_t v77 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        unint64_t v50 = 0x80000001007B7770;
      }
      swift_bridgeObjectRetain();
      *(void *)(v0 + 184) = sub_100254634(v49, v50, &v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v38 = log;
      _os_log_impl((void *)&_mh_execute_header, log, v71, "Receiver extracted IDS session ID %s, pseudonym: %s, push token: %s from upload request", (uint8_t *)v42, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    uint64_t v51 = *(void *)(v0 + 328);
    uint64_t v52 = *(void *)(v0 + 272);
    uint64_t v53 = *(void *)(v0 + 280);
    uint64_t v54 = *(void *)(v0 + 216) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askConnection;
    swift_beginAccess();
    sub_10024A330(v54, v51, &qword_100978540);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52) == 1)
    {
      sub_10000A7E8(*(void *)(v0 + 328), &qword_100978540);
      BOOL v55 = Logger.logObject.getter();
      os_log_type_t v56 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v55, v56))
      {
        os_log_type_t v57 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v57 = 0;
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "ASK connection no longer exists to set Internet fallback endpoint", v57, 2u);
        swift_slowDealloc();
      }
    }
    else
    {
      uint64_t v58 = *(void *)(v0 + 288);
      uint64_t v59 = *(void *)(v0 + 296);
      sub_100680208(*(void *)(v0 + 328), v59, type metadata accessor for SDAirDropServerConnection);
      sub_1006801A0(v59, v58, type metadata accessor for SDAirDropServerConnection);
      if (swift_getEnumCaseMultiPayload() > 1)
      {
        uint64_t v60 = *(void *)(v0 + 288);
        uint64_t v61 = v60 + *(int *)(sub_10000A844(&qword_100970300) + 48);
        uint64_t v62 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v61, v62);
      }
      uint64_t v63 = *(void *)(v0 + 296);
      sub_10065E534(*(void *)(*(void *)(v0 + 216) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID), *(void **)(*(void *)(v0 + 216) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID + 8), v32, v33, v34, v35);
      swift_release();
      sub_1006802B8(v63, type metadata accessor for SDAirDropServerConnection);
    }
    uint64_t v64 = *(void *)(v0 + 264);
    uint64_t v65 = *(void *)(v0 + 216);
    static Date.now.getter();
    uint64_t v66 = type metadata accessor for Date();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v64, 0, 1, v66);
    uint64_t v67 = v65 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferStart;
    swift_beginAccess();
    sub_10026B410(v64, v67, (uint64_t *)&unk_100975040);
    swift_endAccess();
    uint64_t v68 = (void *)swift_task_alloc();
    *(void *)(v0 + 512) = v68;
    void *v68 = v0;
    v68[1] = sub_10066ED50;
    uint64_t v69 = *(void *)(v0 + 200);
    return sub_1006788F8(v69);
  }
  return _diagnoseUnexpectedEnumCase<A>(type:)();
}

uint64_t sub_10066ED50()
{
  uint64_t v2 = (void *)*v1;
  v2[65] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[59];
    return _swift_task_switch(sub_10066F11C, v3, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_10066EF9C()
{
  (*(void (**)(void, void))(v0[56] + 8))(v0[57], v0[55]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10066F11C()
{
  v0[20] = v0[65];
  uint64_t v1 = v0[30];
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  int v2 = swift_dynamicCast();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  if (v2)
  {
    uint64_t v4 = v0[31];
    uint64_t v5 = v0[32];
    uint64_t v6 = v0[29];
    uint64_t v7 = v0[30];
    uint64_t v8 = v0[28];
    v3(v8, 0, 1, v6);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v5, v8, v6);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v0[66] = v9;
    v0[67] = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v9(v4, v5, v6);
    LODWORD(v8) = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 88))(v4, v6);
    int v10 = enum case for SFAirDropReceive.Failure.insufficientStorage(_:);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v0[68] = v11;
    v0[69] = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v11(v4, v6);
    uint64_t v12 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[62];
    uint64_t v13 = v0[34];
    uint64_t v14 = v0[26];
    if (v8 == v10)
    {
      uint64_t v15 = v0[40];
      sub_1006801A0(v14, v15, type metadata accessor for SDAirDropServerConnection);
      v12(v15, 0, 1, v13);
      os_log_type_t v16 = (void *)swift_task_alloc();
      v0[70] = v16;
      *os_log_type_t v16 = v0;
      v16[1] = sub_10066F48C;
      uint64_t v17 = v0[40];
      return sub_10067994C(v17);
    }
    uint64_t v26 = v0[39];
    sub_1006801A0(v14, v26, type metadata accessor for SDAirDropServerConnection);
    v12(v26, 0, 1, v13);
    uint64_t v27 = (void *)swift_task_alloc();
    v0[71] = v27;
    *uint64_t v27 = v0;
    v27[1] = sub_10066F5F8;
    uint64_t v25 = v0[39];
  }
  else
  {
    uint64_t v19 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[62];
    uint64_t v20 = v0[38];
    uint64_t v21 = v0[34];
    uint64_t v22 = v0[28];
    uint64_t v23 = v0[26];
    v3(v22, 1, 1, v0[29]);
    sub_10000A7E8(v22, &qword_10097A348);
    sub_1006801A0(v23, v20, type metadata accessor for SDAirDropServerConnection);
    v19(v20, 0, 1, v21);
    uint64_t v24 = (void *)swift_task_alloc();
    v0[72] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_10066F764;
    uint64_t v25 = v0[38];
  }
  return sub_10067917C(v25);
}

uint64_t sub_10066F48C()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 472);
  uint64_t v4 = *(void *)(v2 + 320);
  if (v0) {
    swift_errorRelease();
  }
  sub_10000A7E8(v4, &qword_100978540);
  return _swift_task_switch(sub_10068031C, v3, 0);
}

uint64_t sub_10066F5F8()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 472);
  uint64_t v4 = *(void *)(v2 + 312);
  if (v0)
  {
    swift_errorRelease();
    sub_10000A7E8(v4, &qword_100978540);
    uint64_t v5 = sub_10066FA40;
  }
  else
  {
    sub_10000A7E8(v4, &qword_100978540);
    uint64_t v5 = sub_10068031C;
  }
  return _swift_task_switch(v5, v3, 0);
}

uint64_t sub_10066F764()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 472);
  uint64_t v4 = *(void *)(v2 + 304);
  if (v0)
  {
    swift_errorRelease();
    sub_10000A7E8(v4, &qword_100978540);
    uint64_t v5 = sub_100680320;
  }
  else
  {
    sub_10000A7E8(v4, &qword_100978540);
    uint64_t v5 = sub_10066F8D0;
  }
  return _swift_task_switch(v5, v3, 0);
}

uint64_t sub_10066F8D0()
{
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10066FA40()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[68];
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[66];
  uint64_t v3 = v0[32];
  uint64_t v4 = v0[29];
  sub_100680270(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
  swift_allocError();
  v2(v5, v3, v4);
  swift_willThrow();
  swift_errorRelease();
  v1(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_10066FC38(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  uint64_t v4 = sub_10000A844(&qword_100978558);
  v3[14] = v4;
  v3[15] = *(void *)(v4 - 8);
  v3[16] = swift_task_alloc();
  sub_10000A844(&qword_100978540);
  v3[17] = swift_task_alloc();
  sub_10000A844(&qword_100978508);
  v3[18] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_10066FD98, v5, 0);
}

uint64_t sub_10066FD98()
{
  if (qword_10096A0E0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097D8F0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Received EXCHANGE request", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[17];
  uint64_t v6 = v0[18];
  uint64_t v7 = v0[15];
  uint64_t v21 = v0[14];
  uint64_t v9 = v0[12];
  uint64_t v8 = v0[13];
  uint64_t v10 = v0[11];

  sub_1006801A0(v10, v6, _s14descr1008C9A51V15ExchangeRequestVMa);
  uint64_t v11 = _s14descr1008C9A51V15ExchangeRequestVMa(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 0, 1, v11);
  uint64_t v12 = v8 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeRequest;
  swift_beginAccess();
  sub_10026B410(v6, v12, &qword_100978508);
  swift_endAccess();
  sub_1006801A0(v9, v5, type metadata accessor for SDAirDropServerConnection);
  uint64_t v13 = type metadata accessor for SDAirDropServerConnection(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 0, 1, v13);
  uint64_t v14 = v8 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeConnection;
  swift_beginAccess();
  sub_10026B410(v5, v14, &qword_100978540);
  swift_endAccess();
  uint64_t v15 = v8 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeContinuation;
  swift_beginAccess();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v15, 1, v21))
  {
    uint64_t v17 = v0[15];
    uint64_t v16 = v0[16];
    uint64_t v18 = v0[14];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v16, v15, v18);
    SFProgressContinuation.finish(with:)();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_1006700D0(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v3 + 120) = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 136) = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v3 + 152) = *(_OWORD *)(a1 + 32);
  *(void *)(v3 + 104) = a2;
  *(void *)(v3 + 112) = v2;
  *(_OWORD *)(v3 + 168) = v5;
  *(_OWORD *)(v3 + 184) = *(_OWORD *)(a1 + 64);
  *(void *)(v3 + 200) = *(void *)(a1 + 80);
  *(void *)(v3 + 208) = type metadata accessor for SDAirDropMessage();
  *(void *)(v3 + 216) = swift_task_alloc();
  sub_10000A844(&qword_100978540);
  *(void *)(v3 + 224) = swift_task_alloc();
  *(void *)(v3 + 232) = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  *(void *)(v3 + 240) = static AirDropActor.shared;
  return _swift_task_switch(sub_100670208, v6, 0);
}

uint64_t sub_100670208()
{
  if (qword_10096A0E0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097D8F0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    long long v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Received IDENTITY-SHARE request", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 232);
  uint64_t v6 = *(void *)(v0 + 200);
  uint64_t v7 = *(void *)(v0 + 104);
  long long v17 = *(_OWORD *)(v0 + 120);
  long long v18 = *(_OWORD *)(v0 + 184);
  long long v15 = *(_OWORD *)(v0 + 152);
  long long v16 = *(_OWORD *)(v0 + 136);
  long long v14 = *(_OWORD *)(v0 + 168);

  *(_OWORD *)(v0 + 16) = v17;
  *(_OWORD *)(v0 + 32) = v16;
  *(_OWORD *)(v0 + 48) = v15;
  *(_OWORD *)(v0 + 64) = v14;
  *(_OWORD *)(v0 + 80) = v18;
  *(void *)(v0 + 96) = v6;
  sub_1006801A0(v7, v5, type metadata accessor for SDAirDropServerConnection);
  uint64_t v8 = type metadata accessor for SDAirDropServerConnection(0);
  *(void *)(v0 + 248) = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56);
  *(void *)(v0 + 256) = v10;
  *(void *)(v0 + 264) = (v9 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v10(v5, 0, 1, v8);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_100670438;
  uint64_t v12 = *(void *)(v0 + 232);
  return sub_100674154(v0 + 16, 0, 0xF000000000000000, 0, 0, v12);
}

uint64_t sub_100670438()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 232);
  *(void *)(*v1 + 280) = v0;
  swift_task_dealloc();
  sub_10000A7E8(v3, &qword_100978540);
  if (v0)
  {
    uint64_t v4 = *(void *)(v2 + 240);
    uint64_t v5 = sub_100670CEC;
  }
  else
  {
    uint64_t v4 = static AirDropActor.shared;
    *(void *)(v2 + 288) = static AirDropActor.shared;
    uint64_t v5 = sub_100670588;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_100670588()
{
  *(_OWORD *)*(void *)(v0 + 216) = xmmword_10077D4C0;
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100670638;
  uint64_t v2 = *(void *)(v0 + 216);
  return sub_1005DB860(v2);
}

uint64_t sub_100670638()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 216);
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc();
  sub_1006802B8(v3, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  uint64_t v4 = *(void *)(v2 + 288);
  if (v0) {
    uint64_t v5 = sub_100670A18;
  }
  else {
    uint64_t v5 = sub_100670794;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_100670794()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[39] = Strong;
  if (Strong)
  {
    uint64_t v2 = v0[14] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[40] = v3;
    void *v3 = v0;
    v3[1] = sub_1006708A8;
    return sub_10034C504(v2, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_1006708A8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100670A18()
{
  return _swift_task_switch(sub_100670A34, *(void *)(v0 + 240), 0);
}

uint64_t sub_100670A34()
{
  v0[41] = v0[38];
  uint64_t v1 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[32];
  uint64_t v2 = v0[31];
  uint64_t v3 = v0[28];
  sub_1006801A0(v0[13], v3, type metadata accessor for SDAirDropServerConnection);
  v1(v3, 0, 1, v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[42] = (uint64_t)v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100670B1C;
  uint64_t v5 = v0[28];
  return sub_1006761B4(v5);
}

uint64_t sub_100670B1C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 224);
  *(void *)(*v1 + 344) = v0;
  swift_task_dealloc();
  sub_10000A7E8(v3, &qword_100978540);
  uint64_t v4 = *(void *)(v2 + 240);
  if (v0) {
    uint64_t v5 = sub_100670DD4;
  }
  else {
    uint64_t v5 = sub_100670C6C;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_100670C6C()
{
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100670CEC()
{
  v0[41] = v0[35];
  uint64_t v1 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[32];
  uint64_t v2 = v0[31];
  uint64_t v3 = v0[28];
  sub_1006801A0(v0[13], v3, type metadata accessor for SDAirDropServerConnection);
  v1(v3, 0, 1, v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[42] = (uint64_t)v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100670B1C;
  uint64_t v5 = v0[28];
  return sub_1006761B4(v5);
}

uint64_t sub_100670DD4()
{
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100670E60(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  void v3[5] = a1;
  v3[8] = type metadata accessor for SDAirDropMessage();
  v3[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SDAirDropServerConnection(0);
  v3[10] = v4;
  v3[11] = *(void *)(v4 - 8);
  v3[12] = swift_task_alloc();
  sub_10000A844(&qword_100978540);
  v3[13] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  v3[14] = static AirDropActor.shared;
  return _swift_task_switch(sub_100670FC0, v5, 0);
}

uint64_t sub_100670FC0()
{
  if (qword_10096A0E0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097D8F0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Received ERROR request", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[10];
  uint64_t v7 = v0[11];
  uint64_t v8 = v0[6];
  uint64_t v9 = v0[7];

  sub_1006801A0(v8, v5, type metadata accessor for SDAirDropServerConnection);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  uint64_t v10 = v9 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_errorConnection;
  swift_beginAccess();
  sub_10026B410(v5, v10, &qword_100978540);
  swift_endAccess();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
  {
    uint64_t v11 = v0[5];
    uint64_t v12 = v11 + *(int *)(_s14descr1008C9841V12ErrorRequestVMa() + 20);
    uint64_t v13 = type metadata accessor for CodableError();
    sub_100680270(&qword_10096E0A0, (void (*)(uint64_t))&type metadata accessor for CodableError);
    uint64_t v14 = swift_allocError();
    v0[17] = v14;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v15, v12, v13);
    long long v16 = (void *)swift_task_alloc();
    v0[18] = v16;
    *long long v16 = v0;
    v16[1] = sub_100671604;
    return sub_100672230(v14);
  }
  else
  {
    long long v18 = (_OWORD *)v0[9];
    sub_1006801A0(v10, v0[12], type metadata accessor for SDAirDropServerConnection);
    *long long v18 = xmmword_10077D4C0;
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = (void *)swift_task_alloc();
    v0[15] = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_100671330;
    uint64_t v20 = v0[9];
    return sub_1005DB860(v20);
  }
}

uint64_t sub_100671330()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 96);
  uint64_t v4 = *(void *)(*v1 + 72);
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  sub_1006802B8(v4, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  sub_1006802B8(v3, type metadata accessor for SDAirDropServerConnection);
  uint64_t v5 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v6 = sub_100671774;
  }
  else {
    uint64_t v6 = sub_1006714C4;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1006714C4()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v1 + *(int *)(_s14descr1008C9841V12ErrorRequestVMa() + 20);
  uint64_t v3 = type metadata accessor for CodableError();
  sub_100680270(&qword_10096E0A0, (void (*)(uint64_t))&type metadata accessor for CodableError);
  uint64_t v4 = swift_allocError();
  v0[17] = v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(v5, v2, v3);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[18] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100671604;
  return sub_100672230(v4);
}

uint64_t sub_100671604()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100671774()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006717EC(uint64_t a1)
{
  uint64_t v2 = sub_10000A844(&qword_100978558);
  uint64_t v79 = *(void *)(v2 - 8);
  uint64_t v80 = v2;
  __chkstk_darwin(v2);
  uint64_t v67 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000A844(&qword_10096BBA8);
  uint64_t v72 = *(void *)(v4 - 8);
  uint64_t v73 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_10000A844(&qword_10097DA18);
  uint64_t v7 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v76 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A844(&qword_10097DAA0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for NWError();
  uint64_t v78 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v68 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v69 = (char *)&v64 - v15;
  uint64_t v16 = sub_10000A844(&qword_100978650);
  uint64_t v74 = *(void *)(v16 - 8);
  uint64_t v75 = v16;
  __chkstk_darwin(v16);
  os_log_type_t v71 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A0E0 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_10000B47C(v18, (uint64_t)qword_10097D8F0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.error.getter();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v70 = v7;
  if (v21)
  {
    uint64_t v65 = v12;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v66 = v6;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 138412290;
    swift_errorRetain();
    uint64_t v25 = a1;
    uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v82 = v26;
    uint64_t v12 = v65;
    uint64_t v7 = v70;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v24 = v26;
    a1 = v25;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Receive handler error %@", v23, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v6 = v66;
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v27 = v74;
  uint64_t v28 = v75;
  uint64_t v29 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v71, v81 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_handlerContinuation, v75);
  SFProgressContinuation.fail(with:)();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v28);
  uint64_t v82 = a1;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  char v30 = swift_dynamicCast();
  uint64_t v31 = v78;
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v78 + 56);
  if (v30)
  {
    v32(v11, 0, 1, v12);
    uint64_t v33 = v69;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v69, v11, v12);
    uint64_t v34 = v68;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v68, v33, v12);
    if ((*(unsigned int (**)(char *, uint64_t))(v31 + 88))(v34, v12) == enum case for NWError.posix(_:))
    {
      uint64_t v35 = *(void (**)(char *, uint64_t))(v31 + 96);
      uint64_t v36 = v12;
      v35(v34, v12);
      int v37 = POSIXErrorCode.rawValue.getter();
      if (v37 == POSIXErrorCode.rawValue.getter()
        || (int v38 = POSIXErrorCode.rawValue.getter(), v38 == POSIXErrorCode.rawValue.getter())
        || (int v39 = POSIXErrorCode.rawValue.getter(), v39 == POSIXErrorCode.rawValue.getter())
        || (int v40 = POSIXErrorCode.rawValue.getter(), v40 == POSIXErrorCode.rawValue.getter()))
      {
        type metadata accessor for CancellationError();
        sub_100680270(&qword_10096CCB8, (void (*)(uint64_t))&type metadata accessor for CancellationError);
        swift_allocError();
        CancellationError.init()();
      }
      else
      {
        swift_errorRetain();
      }
      uint64_t v41 = v70;
      uint64_t v42 = v81;
      char v44 = v76;
      uint64_t v43 = v77;
      (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v76, v81 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askContinuation, v77);
      swift_errorRetain();
      SFProgressContinuation.cancel(_:)();
      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v44, v43);
      uint64_t v46 = v72;
      uint64_t v45 = v73;
      (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v6, v42 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferContinuation, v73);
      swift_errorRetain();
      SFProgressContinuation.cancel(_:)();
      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v6, v45);
      uint64_t v47 = v42 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeContinuation;
      swift_beginAccess();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v47, 1, v80))
      {
        (*(void (**)(char *, uint64_t))(v78 + 8))(v69, v36);
        swift_endAccess();
        return swift_errorRelease();
      }
      else
      {
        uint64_t v60 = v79;
        uint64_t v61 = v67;
        uint64_t v62 = v47;
        uint64_t v63 = v80;
        (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v67, v62, v80);
        swift_endAccess();
        swift_errorRetain();
        SFProgressContinuation.cancel(_:)();
        swift_errorRelease();
        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v63);
        return (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v69, v36);
      }
    }
    uint64_t v49 = *(void (**)(char *, uint64_t))(v31 + 8);
    v49(v33, v12);
    v49(v34, v12);
    uint64_t v7 = v70;
  }
  else
  {
    v32(v11, 1, 1, v12);
    sub_10000A7E8((uint64_t)v11, &qword_10097DAA0);
  }
  uint64_t v50 = v81;
  uint64_t v52 = v76;
  uint64_t v51 = v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v76, v81 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askContinuation, v77);
  SFProgressContinuation.cancel(_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v52, v51);
  uint64_t v54 = v72;
  uint64_t v53 = v73;
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v6, v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferContinuation, v73);
  SFProgressContinuation.cancel(_:)();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v6, v53);
  uint64_t v55 = v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeContinuation;
  swift_beginAccess();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v55, 1, v80);
  if (!result)
  {
    uint64_t v56 = v79;
    os_log_type_t v57 = v67;
    uint64_t v58 = v55;
    uint64_t v59 = v80;
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v67, v58, v80);
    SFProgressContinuation.cancel(_:)();
    return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v57, v59);
  }
  return result;
}

uint64_t sub_100672230(uint64_t a1)
{
  v2[22] = a1;
  v2[23] = v1;
  uint64_t v3 = sub_10000A844(&qword_100978650);
  v2[24] = v3;
  v2[25] = *(void *)(v3 - 8);
  v2[26] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SDAirDropServerConnection(0);
  v2[27] = v4;
  v2[28] = *(void *)(v4 - 8);
  v2[29] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  v2[30] = static AirDropActor.shared;
  return _swift_task_switch(sub_1006723B8, v5, 0);
}

uint64_t sub_1006723B8()
{
  if (qword_10096A0E0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097D8F0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = *(void *)(v0 + 176);
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    if (v5)
    {
      swift_errorRetain();
      uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 168) = v5;
    }
    else
    {
      *(void *)(v0 + 160) = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v7 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Receive handler stop - error: %@", v6, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v8 = *(void *)(v0 + 216);
  uint64_t v9 = *(void *)(v0 + 224);
  uint64_t v10 = *(void *)(v0 + 184);
  if (*(void *)(v0 + 176))
  {
    swift_errorRetain();
    sub_1006717EC(v1);
    uint64_t v11 = v10 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askConnection;
    swift_beginAccess();
    uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v12(v11, 1, v8))
    {
      uint64_t v13 = *(void *)(v0 + 232);
      sub_1006801A0(v11, v13, type metadata accessor for SDAirDropServerConnection);
      sub_1005DB2F4(1);
      sub_1006802B8(v13, type metadata accessor for SDAirDropServerConnection);
    }
    uint64_t v14 = *(void *)(v0 + 216);
    uint64_t v15 = *(void *)(v0 + 184) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection;
    swift_beginAccess();
    if (!v12(v15, 1, v14))
    {
      uint64_t v16 = *(void *)(v0 + 232);
      sub_1006801A0(v15, v16, type metadata accessor for SDAirDropServerConnection);
      sub_1005DB2F4(1);
      sub_1006802B8(v16, type metadata accessor for SDAirDropServerConnection);
    }
    uint64_t v17 = *(void *)(v0 + 216);
    uint64_t v18 = *(void *)(v0 + 184) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeConnection;
    swift_beginAccess();
    if (v12(v18, 1, v17))
    {
      swift_errorRelease();
    }
    else
    {
      uint64_t v31 = *(void *)(v0 + 232);
      sub_1006801A0(v18, v31, type metadata accessor for SDAirDropServerConnection);
      sub_1005DB2F4(1);
      swift_errorRelease();
      sub_1006802B8(v31, type metadata accessor for SDAirDropServerConnection);
    }
  }
  else
  {
    uint64_t v19 = v10 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askConnection;
    swift_beginAccess();
    os_log_type_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v20(v19, 1, v8))
    {
      uint64_t v21 = *(void *)(v0 + 232);
      sub_1006801A0(v19, v21, type metadata accessor for SDAirDropServerConnection);
      sub_1005DB2F4(1);
      sub_1006802B8(v21, type metadata accessor for SDAirDropServerConnection);
    }
    uint64_t v22 = *(void *)(v0 + 216);
    uint64_t v23 = *(void *)(v0 + 184) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection;
    swift_beginAccess();
    if (!v20(v23, 1, v22))
    {
      uint64_t v24 = *(void *)(v0 + 232);
      sub_1006801A0(v23, v24, type metadata accessor for SDAirDropServerConnection);
      sub_1005DB2F4(0);
      sub_1006802B8(v24, type metadata accessor for SDAirDropServerConnection);
    }
    uint64_t v25 = *(void *)(v0 + 216);
    uint64_t v26 = *(void *)(v0 + 184) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeConnection;
    swift_beginAccess();
    if (!v20(v26, 1, v25))
    {
      uint64_t v27 = *(void *)(v0 + 232);
      sub_1006801A0(v26, v27, type metadata accessor for SDAirDropServerConnection);
      sub_1005DB2F4(0);
      sub_1006802B8(v27, type metadata accessor for SDAirDropServerConnection);
    }
    uint64_t v29 = *(void *)(v0 + 200);
    uint64_t v28 = *(void *)(v0 + 208);
    uint64_t v30 = *(void *)(v0 + 192);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v28, *(void *)(v0 + 184) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_handlerContinuation, v30);
    *(unsigned char *)(v0 + 272) = 1;
    SFProgressContinuation.finish(with:)();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
  }
  uint64_t v32 = *(void *)(v0 + 184);
  uint64_t v33 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveCompressionAdapter;
  *(void *)(v0 + 248) = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveCompressionAdapter;
  uint64_t v34 = *(void *)(v32 + v33);
  *(void *)(v0 + 256) = v34;
  if (v34)
  {
    swift_retain();
    uint64_t v35 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v35;
    *uint64_t v35 = v0;
    v35[1] = sub_100672AB0;
    return sub_100263D98();
  }
  else
  {
    *(void *)(v32 + v33) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    int v37 = *(uint64_t (**)(void))(v0 + 8);
    return v37();
  }
}

uint64_t sub_100672AB0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 240);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100672C10, v1, 0);
}

uint64_t sub_100672C10()
{
  *(void *)(v0[23] + v0[31]) = 0;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100672CC8(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  sub_10000A844(&qword_100978540);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CodableError();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropReceive.Failure();
  v2[15] = v4;
  v2[16] = *(void *)(v4 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  v2[19] = static AirDropActor.shared;
  return _swift_task_switch(sub_100672E70, v5, 0);
}

uint64_t sub_100672E70()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[16];
  swift_errorRetain();
  SFAirDropReceive.Failure.init(_:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v1, v3);
  uint64_t v6 = v0[16];
  uint64_t v7 = v0[17];
  uint64_t v8 = v0[15];
  if (v5 != enum case for SFAirDropReceive.Failure.unexpected(_:))
  {
    (*(void (**)(void, uint64_t))(v6 + 8))(v0[17], v8);
    goto LABEL_9;
  }
  uint64_t v10 = v0[13];
  uint64_t v9 = v0[14];
  uint64_t v11 = v0[12];
  (*(void (**)(void, uint64_t))(v6 + 96))(v0[17], v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v9, v7, v11);
  uint64_t v12 = CodableError.domain.getter();
  uint64_t v14 = v13;
  if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
LABEL_9:
      uint64_t v18 = v0[10];
      uint64_t v19 = v0[9] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askConnection;
      swift_beginAccess();
      sub_10024A330(v19, v18, &qword_100978540);
      os_log_type_t v20 = (void *)swift_task_alloc();
      v0[21] = v20;
      *os_log_type_t v20 = v0;
      v20[1] = sub_100673374;
      uint64_t v21 = v0[10];
      return sub_1006761B4(v21);
    }
  }
  uint64_t v23 = v0[11];
  uint64_t v24 = v0[9] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askConnection;
  swift_beginAccess();
  sub_10024A330(v24, v23, &qword_100978540);
  uint64_t v25 = (void *)swift_task_alloc();
  v0[20] = v25;
  void *v25 = v0;
  v25[1] = sub_10067313C;
  uint64_t v26 = v0[11];
  return sub_10067ABCC(v26);
}

uint64_t sub_10067313C()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  uint64_t v4 = *(void *)(v2 + 88);
  if (v0)
  {
    swift_errorRelease();
    sub_10000A7E8(v4, &qword_100978540);
    int v5 = sub_100680324;
  }
  else
  {
    sub_10000A7E8(v4, &qword_100978540);
    int v5 = sub_1006732A8;
  }
  return _swift_task_switch(v5, v3, 0);
}

uint64_t sub_1006732A8()
{
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  (*(void (**)(void, void))(v0[16] + 8))(v0[18], v0[15]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100673374()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  uint64_t v4 = *(void *)(v2 + 80);
  if (v0)
  {
    swift_errorRelease();
    sub_10000A7E8(v4, &qword_100978540);
    int v5 = sub_100680328;
  }
  else
  {
    sub_10000A7E8(v4, &qword_100978540);
    int v5 = sub_1006734E0;
  }
  return _swift_task_switch(v5, v3, 0);
}

uint64_t sub_1006734E0()
{
  (*(void (**)(void, void))(v0[16] + 8))(v0[18], v0[15]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100673594(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = type metadata accessor for SDAirDropMessage();
  v2[8] = swift_task_alloc();
  sub_10000A844(&qword_100978540);
  v2[9] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for SDAirDropServerConnection(0);
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  v2[13] = static AirDropActor.shared;
  return _swift_task_switch(sub_1006736F0, v4, 0);
}

uint64_t sub_1006736F0()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[6] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeConnection;
  swift_beginAccess();
  sub_10024A330(v4, v3, &qword_100978540);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000A7E8(v0[9], &qword_100978540);
    if (qword_10096A0E0 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000B47C(v5, (uint64_t)qword_10097D8F0);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "No exchange connection for exchange response!", v8, 2u);
      swift_slowDealloc();
    }

    uint64_t v9 = type metadata accessor for SFAirDropReceive.Failure();
    sub_100680270(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v9 - 8) + 104))(v10, enum case for SFAirDropReceive.Failure.badRequest(_:), v9);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
  else
  {
    uint64_t v13 = v0[8];
    uint64_t v14 = v0[5];
    sub_100680208(v0[9], v0[12], type metadata accessor for SDAirDropServerConnection);
    sub_1006801A0(v14, v13, _s14descr1008C9A51V16ExchangeResponseVMa);
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = (void *)swift_task_alloc();
    v0[14] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_100673A0C;
    uint64_t v16 = v0[8];
    return sub_1005DB860(v16);
  }
}

uint64_t sub_100673A0C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  sub_1006802B8(*(void *)(v2 + 64), (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  if (v0) {
    uint64_t v4 = sub_100673FF4;
  }
  else {
    uint64_t v4 = sub_100673B68;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100673B68()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[16] = Strong;
  if (Strong)
  {
    uint64_t v2 = v0[6] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[17] = v3;
    void *v3 = v0;
    v3[1] = sub_100673D68;
    return sub_10034C504(v2, 0);
  }
  else
  {
    if (qword_10096A0E0 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000B47C(v5, (uint64_t)qword_10097D8F0);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Cancelling EXCHANGE connection", v8, 2u);
      swift_slowDealloc();
    }
    uint64_t v9 = v0[12];

    sub_1005DB2F4(0);
    sub_1006802B8(v9, type metadata accessor for SDAirDropServerConnection);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_100673D68()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104);
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_100673E94, v1, 0);
}

uint64_t sub_100673E94()
{
  if (qword_10096A0E0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097D8F0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Cancelling EXCHANGE connection", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 96);

  sub_1005DB2F4(0);
  sub_1006802B8(v5, type metadata accessor for SDAirDropServerConnection);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100673FF4()
{
  if (qword_10096A0E0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097D8F0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Cancelling EXCHANGE connection", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 96);

  sub_1005DB2F4(0);
  sub_1006802B8(v5, type metadata accessor for SDAirDropServerConnection);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100674154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v7 + 232) = a6;
  *(void *)(v7 + 240) = v6;
  *(void *)(v7 + 216) = a4;
  *(void *)(v7 + 224) = a5;
  *(void *)(v7 + 200) = a2;
  *(void *)(v7 + 208) = a3;
  *(void *)(v7 + 192) = a1;
  sub_1006800DC(a1, v7 + 104);
  long long v8 = *(_OWORD *)(v7 + 128);
  *(_OWORD *)(v7 + 248) = *(_OWORD *)(v7 + 112);
  long long v9 = *(_OWORD *)(v7 + 144);
  *(_OWORD *)(v7 + 264) = v8;
  *(_OWORD *)(v7 + 280) = v9;
  uint64_t v10 = *(void *)(v7 + 176);
  *(void *)(v7 + 296) = *(void *)(v7 + 160);
  *(void *)(v7 + 304) = v10;
  sub_10000A844(&qword_100978540);
  *(void *)(v7 + 312) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for SDAirDropServerConnection(0);
  *(void *)(v7 + 320) = v11;
  *(void *)(v7 + 328) = *(void *)(v11 - 8);
  *(void *)(v7 + 336) = swift_task_alloc();
  *(void *)(v7 + 344) = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v12 = static AirDropActor.shared;
  *(void *)(v7 + 352) = static AirDropActor.shared;
  return _swift_task_switch(sub_1006742C8, v12, 0);
}

uint64_t sub_1006742C8()
{
  sub_1006800DC(*(void *)(v0 + 192), v0 + 16);
  uint64_t v1 = *(void *)(v0 + 88);
  *(void *)(v0 + 360) = v1;
  if (!v1) {
    goto LABEL_4;
  }
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v3 = *(void *)(v0 + 328);
  uint64_t v4 = *(void *)(v0 + 312);
  uint64_t v5 = *(void *)(v0 + 232);
  uint64_t v7 = *(void *)(v0 + 16);
  unint64_t v6 = *(void *)(v0 + 24);
  long long v8 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 384) = v8;
  *(_OWORD *)(v0 + 400) = *(_OWORD *)(v0 + 64);
  uint64_t v9 = *(void *)(v0 + 96);
  *(void *)(v0 + 416) = *(void *)(v0 + 80);
  *(void *)(v0 + 424) = v9;
  sub_10024A330(v5, v4, &qword_100978540);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    sub_10000A7E8(*(void *)(v0 + 312), &qword_100978540);
LABEL_4:
    uint64_t v10 = type metadata accessor for SFAirDropReceive.Failure();
    sub_100680270(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v10 - 8) + 104))(v11, enum case for SFAirDropReceive.Failure.badRequest(_:), v10);
    swift_willThrow();
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  uint64_t v14 = *(void *)(v0 + 224);
  sub_100680208(*(void *)(v0 + 312), *(void *)(v0 + 344), type metadata accessor for SDAirDropServerConnection);
  if (v14)
  {
    sub_100680144(*(void **)(v0 + 192), (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_1003944E4);
    if (v6)
    {
      uint64_t v16 = *(void *)(v0 + 216);
      uint64_t v15 = *(void *)(v0 + 224);
      if ((v6 & 0x2000000000000000) != 0) {
        uint64_t v17 = HIBYTE(v6) & 0xF;
      }
      else {
        uint64_t v17 = v7 & 0xFFFFFFFFFFFFLL;
      }
      swift_bridgeObjectRetain();
      if (v17)
      {
        *(void *)(v0 + 600) = v15;
        *(void *)(v0 + 592) = v6;
        *(void *)(v0 + 584) = v6;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v15)
        {
          int v39 = (char *)&dword_100970708 + dword_100970708;
          uint64_t v18 = (void *)swift_task_alloc();
          *(void *)(v0 + 608) = v18;
          *uint64_t v18 = v0;
          v18[1] = sub_100675DF8;
          __asm { BR              X8; sub_1003628E0 }
        }
        swift_bridgeObjectRelease();
        if (qword_10096A0E0 != -1) {
          swift_once();
        }
        uint64_t v34 = type metadata accessor for Logger();
        sub_10000B47C(v34, (uint64_t)qword_10097D8F0);
        uint64_t v27 = Logger.logObject.getter();
        os_log_type_t v28 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v27, v28)) {
          goto LABEL_36;
        }
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        uint64_t v30 = "Missing appleID/contactID for IDENTITY-SHARE";
LABEL_35:
        _os_log_impl((void *)&_mh_execute_header, v27, v28, v30, v29, 2u);
        swift_slowDealloc();
LABEL_36:
        uint64_t v35 = *(void *)(v0 + 344);
        uint64_t v36 = *(void **)(v0 + 192);

        uint64_t v37 = type metadata accessor for SFAirDropReceive.Failure();
        sub_100680270(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
        swift_allocError();
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v37 - 8) + 104))(v38, enum case for SFAirDropReceive.Failure.badRequest(_:), v37);
        swift_willThrow();
        sub_100680144(v36, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100394590);
        sub_1006802B8(v35, type metadata accessor for SDAirDropServerConnection);
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v15 = *(void *)(v0 + 224);
      swift_bridgeObjectRetain();
      uint64_t v16 = *(void *)(v0 + 216);
    }
    *(void *)(v0 + 544) = v6;
    *(void *)(v0 + 536) = v15;
    *(void *)(v0 + 528) = v16;
    unint64_t v25 = *(void *)(v0 + 208);
    if (v25 >> 60 == 15)
    {
      swift_bridgeObjectRelease();
      if (qword_10096A0E0 != -1) {
        swift_once();
      }
      uint64_t v26 = type metadata accessor for Logger();
      sub_10000B47C(v26, (uint64_t)qword_10097D8F0);
      uint64_t v27 = Logger.logObject.getter();
      os_log_type_t v28 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v27, v28)) {
        goto LABEL_36;
      }
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      uint64_t v30 = "Missing vCardData to resolve missing appleID";
      goto LABEL_35;
    }
    sub_100278C78(*(void *)(v0 + 200), v25);
    int v40 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100970710 + dword_100970710);
    uint64_t v31 = (void *)swift_task_alloc();
    *(void *)(v0 + 552) = v31;
    *uint64_t v31 = v0;
    v31[1] = sub_1006758D0;
    uint64_t v33 = *(void *)(v0 + 200);
    uint64_t v32 = *(void *)(v0 + 208);
    return v40(v33, v32, 0, 0);
  }
  else
  {
    unint64_t v19 = *(void *)(v0 + 296);
    unint64_t v21 = *(void *)(v0 + 280);
    uint64_t v20 = *(void *)(v0 + 288);
    unint64_t v23 = *(void *)(v0 + 264);
    uint64_t v22 = *(void *)(v0 + 272);
    uint64_t v24 = *(void *)(v0 + 256);
    *(void *)(v0 + 432) = *(void *)(*(void *)(v0 + 240)
                                      + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_deviceStatus);
    swift_bridgeObjectRetain();
    sub_100278C78(v24, v23);
    sub_10025ADCC(v22, v21);
    sub_10025ADCC(v20, v19);
    swift_bridgeObjectRetain();
    return _swift_task_switch(sub_100674960, 0, 0);
  }
}

uint64_t sub_100674960()
{
  uint64_t v24 = v0;
  if (*(void *)(v0 + 376) >> 60 == 15)
  {
    uint64_t v1 = *(void *)(v0 + 352);
    uint64_t v2 = sub_100674BB0;
  }
  else
  {
    sub_1006801A0(*(void *)(v0 + 344), *(void *)(v0 + 336), type metadata accessor for SDAirDropServerConnection);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      uint64_t v4 = *(void **)(v0 + 432);
      uint64_t v6 = *(void *)(v0 + 368);
      unint64_t v5 = *(void *)(v0 + 376);
      uint64_t v7 = *(void *)(v0 + 352);
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v8 = *(void *)(v0 + 336);
        sub_10025ADCC(*(void *)(v0 + 368), *(void *)(v0 + 376));
        sub_1006802B8(v8, type metadata accessor for SDAirDropServerConnection);
        *(void *)(v0 + 480) = sub_1004615D4(v4);
        *(void *)(v0 + 488) = v9;
        *(void *)(v0 + 496) = v10;
        sub_100250CB0(v6, v5);
        uint64_t v11 = sub_100675308;
      }
      else
      {
        uint64_t v16 = *(void *)(v0 + 336);
        sub_10025ADCC(*(void *)(v0 + 368), *(void *)(v0 + 376));
        swift_release();
        uint64_t v17 = v16 + *(int *)(sub_10000A844(&qword_100970300) + 48);
        *(void *)(v0 + 504) = sub_1004615D4(v4);
        *(void *)(v0 + 512) = v18;
        *(void *)(v0 + 520) = v19;
        sub_100250CB0(v6, v5);
        uint64_t v20 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v17, v20);
        uint64_t v11 = sub_1006755EC;
      }
    }
    else
    {
      uint64_t v12 = *(void **)(v0 + 432);
      uint64_t v14 = *(void *)(v0 + 368);
      unint64_t v13 = *(void *)(v0 + 376);
      uint64_t v7 = *(void *)(v0 + 352);
      sub_10025ADCC(v14, v13);
      sub_100461A7C(v12, (uint64_t *)v22);
      long long v15 = v22[1];
      *(_OWORD *)(v0 + 440) = v22[0];
      *(_OWORD *)(v0 + 456) = v15;
      *(void *)(v0 + 472) = v23;
      swift_release();
      sub_100250CB0(v14, v13);
      uint64_t v11 = sub_100674E8C;
    }
    uint64_t v2 = v11;
    uint64_t v1 = v7;
  }
  return _swift_task_switch(v2, v1, 0);
}

uint64_t sub_100674BB0()
{
  *(void *)(v0 + 544) = 0;
  *(_OWORD *)(v0 + 528) = 0u;
  unint64_t v1 = *(void *)(v0 + 208);
  if (v1 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    if (qword_10096A0E0 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000B47C(v2, (uint64_t)qword_10097D8F0);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v4))
    {
      unint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Missing vCardData to resolve missing appleID", v5, 2u);
      swift_slowDealloc();
    }
    uint64_t v6 = *(void *)(v0 + 344);
    uint64_t v7 = *(void **)(v0 + 192);

    uint64_t v8 = type metadata accessor for SFAirDropReceive.Failure();
    sub_100680270(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v9, enum case for SFAirDropReceive.Failure.badRequest(_:), v8);
    swift_willThrow();
    sub_100680144(v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100394590);
    sub_1006802B8(v6, type metadata accessor for SDAirDropServerConnection);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  else
  {
    sub_100278C78(*(void *)(v0 + 200), v1);
    long long v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100970710 + dword_100970710);
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 552) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1006758D0;
    uint64_t v14 = *(void *)(v0 + 200);
    uint64_t v13 = *(void *)(v0 + 208);
    return v15(v14, v13, 0, 0);
  }
}

uint64_t sub_100674E8C()
{
  uint64_t v1 = v0[56];
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v3 = v0[57];
    uint64_t v2 = v0[58];
    unint64_t v4 = v0[56];
    uint64_t v5 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0) {
      uint64_t v5 = v0[55] & 0xFFFFFFFFFFFFLL;
    }
    if (v5)
    {
      v0[75] = v2;
      v0[74] = v4;
      v0[73] = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v2)
      {
        uint64_t v23 = (char *)&dword_100970708 + dword_100970708;
        uint64_t v6 = (void *)swift_task_alloc();
        v0[76] = v6;
        *uint64_t v6 = v0;
        v6[1] = sub_100675DF8;
        __asm { BR              X8; sub_1003628E0 }
      }
      swift_bridgeObjectRelease();
      if (qword_10096A0E0 != -1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for Logger();
      sub_10000B47C(v17, (uint64_t)qword_10097D8F0);
      uint64_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v9, v10)) {
        goto LABEL_24;
      }
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      uint64_t v12 = "Missing appleID/contactID for IDENTITY-SHARE";
LABEL_23:
      _os_log_impl((void *)&_mh_execute_header, v9, v10, v12, v11, 2u);
      swift_slowDealloc();
LABEL_24:
      uint64_t v18 = v0[43];
      uint64_t v19 = (void *)v0[24];

      uint64_t v20 = type metadata accessor for SFAirDropReceive.Failure();
      sub_100680270(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, enum case for SFAirDropReceive.Failure.badRequest(_:), v20);
      swift_willThrow();
      sub_100680144(v19, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100394590);
      sub_1006802B8(v18, type metadata accessor for SDAirDropServerConnection);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v22 = (uint64_t (*)(void))v0[1];
      return v22();
    }
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v4 = 0;
    uint64_t v3 = v0[57];
    uint64_t v2 = v0[58];
  }
  v0[68] = v4;
  v0[67] = v2;
  v0[66] = v3;
  unint64_t v7 = v0[26];
  if (v7 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    if (qword_10096A0E0 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000B47C(v8, (uint64_t)qword_10097D8F0);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v9, v10)) {
      goto LABEL_24;
    }
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    uint64_t v12 = "Missing vCardData to resolve missing appleID";
    goto LABEL_23;
  }
  sub_100278C78(v0[25], v7);
  uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100970710 + dword_100970710);
  uint64_t v13 = (void *)swift_task_alloc();
  v0[69] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1006758D0;
  uint64_t v15 = v0[25];
  uint64_t v14 = v0[26];
  return v24(v15, v14, 0, 0);
}

uint64_t sub_100675308()
{
  swift_bridgeObjectRelease();
  uint64_t v2 = v0[60];
  uint64_t v1 = v0[61];
  v0[68] = 0;
  v0[67] = v1;
  v0[66] = v2;
  unint64_t v3 = v0[26];
  if (v3 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    if (qword_10096A0E0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_10097D8F0);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      unint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Missing vCardData to resolve missing appleID", v7, 2u);
      swift_slowDealloc();
    }
    uint64_t v8 = v0[43];
    uint64_t v9 = (void *)v0[24];

    uint64_t v10 = type metadata accessor for SFAirDropReceive.Failure();
    sub_100680270(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v10 - 8) + 104))(v11, enum case for SFAirDropReceive.Failure.badRequest(_:), v10);
    swift_willThrow();
    sub_100680144(v9, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100394590);
    sub_1006802B8(v8, type metadata accessor for SDAirDropServerConnection);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
  else
  {
    sub_100278C78(v0[25], v3);
    uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100970710 + dword_100970710);
    uint64_t v14 = (void *)swift_task_alloc();
    v0[69] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1006758D0;
    uint64_t v16 = v0[25];
    uint64_t v15 = v0[26];
    return v17(v16, v15, 0, 0);
  }
}

uint64_t sub_1006755EC()
{
  swift_bridgeObjectRelease();
  uint64_t v2 = v0[63];
  uint64_t v1 = v0[64];
  v0[68] = 0;
  v0[67] = v1;
  v0[66] = v2;
  unint64_t v3 = v0[26];
  if (v3 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    if (qword_10096A0E0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_10097D8F0);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      unint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Missing vCardData to resolve missing appleID", v7, 2u);
      swift_slowDealloc();
    }
    uint64_t v8 = v0[43];
    uint64_t v9 = (void *)v0[24];

    uint64_t v10 = type metadata accessor for SFAirDropReceive.Failure();
    sub_100680270(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v10 - 8) + 104))(v11, enum case for SFAirDropReceive.Failure.badRequest(_:), v10);
    swift_willThrow();
    sub_100680144(v9, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100394590);
    sub_1006802B8(v8, type metadata accessor for SDAirDropServerConnection);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
  else
  {
    sub_100278C78(v0[25], v3);
    uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100970710 + dword_100970710);
    uint64_t v14 = (void *)swift_task_alloc();
    v0[69] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1006758D0;
    uint64_t v16 = v0[25];
    uint64_t v15 = v0[26];
    return v17(v16, v15, 0, 0);
  }
}

uint64_t sub_1006758D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[70] = a1;
  v4[71] = a2;
  v4[72] = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v5 = v4[44];
    swift_bridgeObjectRelease();
    os_log_type_t v6 = sub_100675D24;
    uint64_t v7 = v5;
  }
  else
  {
    uint64_t v7 = v4[44];
    os_log_type_t v6 = sub_100675A00;
  }
  return _swift_task_switch(v6, v7, 0);
}

uint64_t sub_100675A00()
{
  uint64_t v1 = v0[71];
  sub_100250CB0(v0[25], v0[26]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v2 = v0[71];
    uint64_t v3 = v0[67];
    v0[75] = v3;
    v0[74] = v2;
    v0[73] = v2;
    swift_bridgeObjectRetain();
    if (v3)
    {
      uint64_t v15 = (char *)&dword_100970708 + dword_100970708;
      uint64_t v4 = (void *)swift_task_alloc();
      v0[76] = v4;
      *uint64_t v4 = v0;
      v4[1] = sub_100675DF8;
      __asm { BR              X8; sub_1003628E0 }
    }
  }
  swift_bridgeObjectRelease();
  if (qword_10096A0E0 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000B47C(v5, (uint64_t)qword_10097D8F0);
  os_log_type_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Missing appleID/contactID for IDENTITY-SHARE", v8, 2u);
    swift_slowDealloc();
  }
  uint64_t v9 = v0[43];
  uint64_t v10 = (void *)v0[24];

  uint64_t v11 = type metadata accessor for SFAirDropReceive.Failure();
  sub_100680270(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v11 - 8) + 104))(v12, enum case for SFAirDropReceive.Failure.badRequest(_:), v11);
  swift_willThrow();
  sub_100680144(v10, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100394590);
  sub_1006802B8(v9, type metadata accessor for SDAirDropServerConnection);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_100675D24()
{
  uint64_t v1 = v0[43];
  uint64_t v2 = (void *)v0[24];
  sub_100250CB0(v0[25], v0[26]);
  sub_100680144(v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100394590);
  sub_1006802B8(v1, type metadata accessor for SDAirDropServerConnection);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100675DF8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 616) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 352);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v4 = sub_100676024;
  }
  else {
    uint64_t v4 = sub_100675F5C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100675F5C()
{
  uint64_t v1 = *(void *)(v0 + 344);
  sub_100680144(*(void **)(v0 + 192), (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100394590);
  sub_1006802B8(v1, type metadata accessor for SDAirDropServerConnection);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100676024()
{
  uint64_t v1 = *(void *)(v0 + 344);
  sub_100680144(*(void **)(v0 + 192), (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100394590);
  sub_1006802B8(v1, type metadata accessor for SDAirDropServerConnection);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1006760EC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097D8F0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097D8F0);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1006761B4(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_10000A844(&qword_100978540);
  v2[4] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for SDAirDropServerConnection(0);
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  v2[8] = static AirDropActor.shared;
  return _swift_task_switch(sub_1006762E0, v4, 0);
}

uint64_t sub_1006762E0()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[4];
  sub_10024A330(v0[2], v3, &qword_100978540);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000A7E8(v0[4], &qword_100978540);
    if (qword_10096A0E0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_10097D8F0);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Missing connection", v7, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    sub_100680208(v0[4], v0[7], type metadata accessor for SDAirDropServerConnection);
    uint64_t v10 = (void *)swift_task_alloc();
    v0[9] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1006764E8;
    return sub_1005DBFCC();
  }
}

uint64_t sub_1006764E8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  if (v0) {
    uint64_t v4 = sub_100680330;
  }
  else {
    uint64_t v4 = sub_100676614;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100676614()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[11] = Strong;
  if (Strong)
  {
    uint64_t v2 = v0[3] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[12] = v3;
    void *v3 = v0;
    v3[1] = sub_10067673C;
    return sub_10034C504(v2, 0);
  }
  else
  {
    sub_1006802B8(v0[7], type metadata accessor for SDAirDropServerConnection);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_10067673C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_10068032C, v1, 0);
}

uint64_t sub_100676868(uint64_t a1, uint64_t a2)
{
  v2[20] = a1;
  v2[21] = a2;
  v2[22] = type metadata accessor for SDAirDropMessage();
  v2[23] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v3 = static AirDropActor.shared;
  v2[24] = static AirDropActor.shared;
  return _swift_task_switch(sub_100676938, v3, 0);
}

uint64_t sub_100676938()
{
  if (qword_10096A0E0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097D8F0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Sending non-contact response, finish DISCOVER", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 160);

  uint64_t v6 = *(void **)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_deviceStatus);
  if ((sub_10045F6E0() & 1) != 0
    && (id v7 = [v6 someComputerName]) != 0)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = 0;
  }
  id v12 = [self capabilitiesForCurrentDevice];
  id v13 = [v12 opaqueRepresentation];

  if (v13)
  {
    uint64_t v14 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v16 = v15;
  }
  else
  {
    uint64_t v14 = 0;
    unint64_t v16 = 0xF000000000000000;
  }
  *(void *)(v0 + 16) = v14;
  *(void *)(v0 + 24) = v16;
  *(void *)(v0 + 32) = v9;
  *(void *)(v0 + 40) = v11;
  *(_OWORD *)(v0 + 48) = xmmword_100770AE0;
  *(void *)(v0 + 72) = 0;
  *(void *)(v0 + 80) = 0;
  *(void *)(v0 + 64) = 0;
  *(_OWORD *)(v0 + 88) = xmmword_10077F8E0;
  *(void *)(v0 + 104) = 0xF000000000000000;
  *(void *)(v0 + 112) = 0;
  *(void *)(v0 + 120) = 0;
  *(void *)(v0 + 128) = 0;
  *(unsigned char *)(v0 + 136) = 1;
  *(void *)(v0 + 144) = 0;
  *(void *)(v0 + 152) = 0;
  uint64_t v17 = static AirDropActor.shared;
  *(void *)(v0 + 200) = static AirDropActor.shared;
  return _swift_task_switch(sub_100676B60, v17, 0);
}

uint64_t sub_100676B60()
{
  memmove(*(void **)(v0 + 184), (const void *)(v0 + 16), 0x90uLL);
  swift_storeEnumTagMultiPayload();
  sub_10039C6B0((uint64_t *)(v0 + 16));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 208) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100676C30;
  uint64_t v2 = *(void *)(v0 + 184);
  return sub_1005DB860(v2);
}

uint64_t sub_100676C30()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 184);
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  sub_1006802B8(v3, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  uint64_t v4 = *(void *)(v2 + 200);
  if (v0) {
    uint64_t v5 = sub_100676FBC;
  }
  else {
    uint64_t v5 = sub_100676D8C;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_100676D8C()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[28] = Strong;
  if (Strong)
  {
    uint64_t v2 = v0[20] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[29] = v3;
    void *v3 = v0;
    v3[1] = sub_100676E88;
    return sub_10034C504(v2, 0);
  }
  else
  {
    uint64_t v5 = v0[24];
    return _swift_task_switch(sub_100677048, v5, 0);
  }
}

uint64_t sub_100676E88()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(v1 + 192);
  return _swift_task_switch(sub_100677048, v2, 0);
}

uint64_t sub_100676FBC()
{
  return _swift_task_switch(sub_100676FD8, *(void *)(v0 + 192), 0);
}

uint64_t sub_100676FD8()
{
  sub_10039C76C((uint64_t *)(v0 + 16));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100677048()
{
  sub_10039C76C((uint64_t *)(v0 + 16));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006770B8(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  void v3[5] = a1;
  sub_10000A844(&qword_10096DF58);
  v3[8] = swift_task_alloc();
  uint64_t v4 = _s14descr1008C9AB9V10AskRequestVMa();
  v3[9] = v4;
  v3[10] = *(void *)(v4 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v3[14] = type metadata accessor for SDAirDropMessage();
  v3[15] = swift_task_alloc();
  sub_10000A844(&qword_10096DFA8);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SFAirDropReceive.AcceptContext();
  v3[19] = v5;
  v3[20] = *(void *)(v5 - 8);
  v3[21] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFAirDropReceive.AskResponse();
  v3[22] = v6;
  v3[23] = *(void *)(v6 - 8);
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  v3[26] = static AirDropActor.shared;
  return _swift_task_switch(sub_100677348, v7, 0);
}

uint64_t sub_100677348()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[23];
  uint64_t v4 = *(void (**)(uint64_t, void, uint64_t))(v3 + 104);
  v4(v1, enum case for SFAirDropReceive.AskResponse.decline(_:), v2);
  sub_100680270(&qword_10097DA50, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.AskResponse);
  char v5 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v6(v1, v2);
  if (v5) {
    goto LABEL_4;
  }
  uint64_t v7 = v0[25];
  uint64_t v8 = v0[22];
  v4(v7, enum case for SFAirDropReceive.AskResponse.error(_:), v8);
  char v9 = dispatch thunk of static Equatable.== infix(_:_:)();
  v6(v7, v8);
  if ((v9 & 1) != 0
    || (uint64_t v10 = v0[25],
        uint64_t v11 = v0[22],
        v4(v10, enum case for SFAirDropReceive.AskResponse.mixedTypes(_:), v11),
        char v12 = dispatch thunk of static Equatable.== infix(_:_:)(),
        v6(v10, v11),
        (v12 & 1) != 0))
  {
LABEL_4:
    if (qword_10096A0E0 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000B47C(v13, (uint64_t)qword_10097D8F0);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      unint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "User did not accept request, invalidating connection", v16, 2u);
      swift_slowDealloc();
    }
    uint64_t v17 = v0[6];

    uint64_t v18 = type metadata accessor for SFAirDropReceive.Failure();
    sub_100680270(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v18 - 8) + 104))(v19, enum case for SFAirDropReceive.Failure.declined(_:), v18);
    swift_willThrow();
    sub_100678768(v17);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
  uint64_t v23 = v0[23];
  uint64_t v22 = v0[24];
  uint64_t v24 = v0[22];
  (*(void (**)(uint64_t, void, uint64_t))(v23 + 16))(v22, v0[5], v24);
  int v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 88))(v22, v24);
  uint64_t v26 = v0[24];
  if (v25 == enum case for SFAirDropReceive.AskResponse.accept(_:))
  {
    uint64_t v27 = v0[20];
    uint64_t v28 = v0[21];
    uint64_t v29 = v0[19];
    uint64_t v30 = v0[7];
    (*(void (**)(void, void))(v0[23] + 96))(v0[24], v0[22]);
    uint64_t v31 = sub_10000A844(&qword_10096C950);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v28, v26 + *(int *)(v31 + 48), v29);
    *(unsigned char *)(v30 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_shouldExtractMedia) = SFAirDropReceive.AcceptContext.shouldExtractMedia.getter() & 1;
    uint64_t v32 = SFAirDropReceive.AcceptContext.customPayload.getter();
    unint64_t v34 = v33;
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v29);
    uint64_t v35 = type metadata accessor for SFAirDropReceive.ItemDestination();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v26, v35);
  }
  else
  {
    v6(v0[24], v0[22]);
    uint64_t v32 = 0;
    unint64_t v34 = 0xF000000000000000;
  }
  v0[27] = v32;
  v0[28] = v34;
  uint64_t v37 = v0[9];
  uint64_t v36 = v0[10];
  uint64_t v38 = v0[7];
  uint64_t v39 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askRequest;
  v0[29] = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askRequest;
  uint64_t v40 = v38 + v39;
  swift_beginAccess();
  uint64_t v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  v0[30] = v41;
  v0[31] = (v36 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (!v41(v40, 1, v37))
  {
    uint64_t v42 = v0[18];
    sub_10024A330(v40 + *(int *)(v0[9] + 20), v42, &qword_10096DFA8);
    uint64_t v43 = type metadata accessor for SFAirDrop.TransferType();
    uint64_t v44 = *(void *)(v43 - 8);
    int v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43);
    uint64_t v46 = v0[18];
    if (v45 == 1)
    {
      sub_10000A7E8(v0[18], &qword_10096DFA8);
    }
    else
    {
      char v47 = SFAirDrop.TransferType.isOnlyExchange.getter();
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v46, v43);
      if (v47)
      {
        uint64_t v74 = 0;
        uint64_t v75 = 0;
        uint64_t v48 = 0;
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        goto LABEL_20;
      }
    }
  }
  uint64_t v52 = v0[7];
  uint64_t v50 = *(void *)(v52 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID);
  uint64_t v51 = *(void *)(v52 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID + 8);
  swift_bridgeObjectRetain();
  sub_1006159D8();
  uint64_t v75 = v53;
  uint64_t v49 = v54;
  uint64_t v74 = sub_10061BC54();
  uint64_t v48 = v55;
LABEL_20:
  v0[33] = v49;
  v0[34] = v51;
  v0[32] = v48;
  uint64_t v56 = *(void **)(v0[7] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_deviceStatus);
  id v57 = [v56 computerName];
  if (!v57)
  {
    sub_100250CB0(v32, v34);
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v58 = v57;
  uint64_t v72 = v50;
  uint64_t v73 = v49;
  uint64_t v76 = v32;
  unint64_t v77 = v34;
  uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v60 = v59;

  v0[35] = v60;
  id v61 = [v56 modelName];
  if (!v61)
  {
LABEL_26:
    uint64_t result = sub_100250CB0(v76, v77);
    __break(1u);
    return result;
  }
  uint64_t v62 = v61;
  uint64_t v63 = v0[15];
  uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v66 = v65;

  v0[36] = v66;
  sub_100394300();
  uint64_t v67 = (void *)static NSUserDefaults.airdrop.getter();
  char v68 = SFAirDropUserDefaults.contactShareAfterAirDropEnabled.getter();

  *(void *)uint64_t v63 = v71;
  *(void *)(v63 + 8) = v60;
  *(void *)(v63 + 16) = v64;
  *(void *)(v63 + 24) = v66;
  *(unsigned char *)(v63 + 32) = v68 & 1;
  *(void *)(v63 + 40) = v72;
  *(void *)(v63 + 48) = v51;
  *(void *)(v63 + 56) = v75;
  *(void *)(v63 + 64) = v73;
  *(void *)(v63 + 72) = v74;
  *(void *)(v63 + 80) = v48;
  *(void *)(v63 + 88) = v76;
  *(void *)(v63 + 96) = v34;
  swift_storeEnumTagMultiPayload();
  sub_100278C78(v76, v34);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100278C78(v76, v34);
  uint64_t v69 = (void *)swift_task_alloc();
  v0[37] = v69;
  *uint64_t v69 = v0;
  v69[1] = sub_100677B6C;
  uint64_t v70 = v0[15];
  return sub_1005DB860(v70);
}

uint64_t sub_100677B6C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 208);
  sub_1006802B8(*(void *)(v2 + 120), (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  if (v0) {
    uint64_t v4 = sub_100678618;
  }
  else {
    uint64_t v4 = sub_100677CC8;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100677CC8()
{
  uint64_t v1 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[30];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  sub_10024A330(v0[7] + v0[29], v2, &qword_10096DF58);
  if (v1(v2, 1, v3) != 1)
  {
    uint64_t v4 = v0[13];
    uint64_t v5 = v0[9];
    sub_100680208(v0[8], v4, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
    uint64_t v6 = *(void *)(v4 + *(int *)(v5 + 48));
    uint64_t v7 = v0[13];
    if (v6)
    {
      uint64_t v8 = *(void *)(v6 + 16);
      sub_1006801A0(v7, v0[12], (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
      if (v8)
      {
        sub_1006802B8(v0[12], (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
LABEL_6:
        uint64_t v9 = v0[11];
        sub_1006801A0(v0[13], v9, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
        sub_1006802B8(v9, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
LABEL_7:
        if (qword_10096A0E0 != -1) {
          swift_once();
        }
        uint64_t v10 = type metadata accessor for Logger();
        sub_10000B47C(v10, (uint64_t)qword_10097D8F0);
        uint64_t v11 = Logger.logObject.getter();
        os_log_type_t v12 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v13 = 0;
          _os_log_impl((void *)&_mh_execute_header, v11, v12, "Staring decompression adapter", v13, 2u);
          swift_slowDealloc();
        }
        uint64_t v15 = v0[27];
        unint64_t v14 = v0[28];
        uint64_t v16 = v0[13];

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100250CB0(v15, v14);
        sub_100250CB0(v15, v14);
        sub_1006802B8(v16, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
        goto LABEL_30;
      }
      uint64_t v17 = v0[17];
      uint64_t v18 = v0[9];
      sub_10024A330(v0[12] + *(int *)(v18 + 20), v17, &qword_10096DFA8);
      uint64_t v19 = type metadata accessor for SFAirDrop.TransferType();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
      int v22 = v21(v17, 1, v19);
      uint64_t v23 = v0[17];
      uint64_t v24 = v0[12];
      if (v22 == 1)
      {
        sub_1006802B8(v0[12], (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
        sub_10000A7E8(v23, &qword_10096DFA8);
      }
      else
      {
        SFAirDrop.TransferType.exchangeType.getter();
        uint64_t v26 = v25;
        sub_1006802B8(v24, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v23, v19);
        if (v26)
        {
          swift_bridgeObjectRelease();
          goto LABEL_6;
        }
      }
      uint64_t v27 = v0[16];
      uint64_t v28 = v0[11];
      sub_1006801A0(v0[13], v28, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
      sub_10024A330(v28 + *(int *)(v18 + 20), v27, &qword_10096DFA8);
      int v29 = v21(v27, 1, v19);
      uint64_t v30 = v0[16];
      uint64_t v31 = v0[11];
      if (v29 == 1)
      {
        sub_1006802B8(v0[11], (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
        sub_10000A7E8(v30, &qword_10096DFA8);
      }
      else
      {
        char v32 = SFAirDrop.TransferType.isCustom.getter();
        sub_1006802B8(v31, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v30, v19);
        if (v32) {
          goto LABEL_7;
        }
      }
      uint64_t v7 = v0[13];
    }
    sub_1006802B8(v7, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
    goto LABEL_21;
  }
  sub_10000A7E8(v0[8], &qword_10096DF58);
LABEL_21:
  if (qword_10096A0E0 != -1) {
    swift_once();
  }
  uint64_t v33 = type metadata accessor for Logger();
  sub_10000B47C(v33, (uint64_t)qword_10097D8F0);
  unint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "No files to receive or exchanges", v36, 2u);
    swift_slowDealloc();
  }

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[39] = Strong;
  if (Strong)
  {
    uint64_t v38 = v0[7] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity;
    uint64_t v39 = (void *)swift_task_alloc();
    v0[40] = v39;
    *uint64_t v39 = v0;
    v39[1] = sub_1006783A0;
    return sub_10034C504(v38, 0);
  }
  uint64_t v42 = v0[27];
  unint64_t v41 = v0[28];
  sub_100250CB0(v42, v41);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CB0(v42, v41);
LABEL_30:
  sub_100678768(v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v43 = (uint64_t (*)(void))v0[1];
  return v43();
}

uint64_t sub_1006783A0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 208);
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_1006784CC, v1, 0);
}

uint64_t sub_1006784CC()
{
  uint64_t v2 = v0[27];
  unint64_t v1 = v0[28];
  sub_100250CB0(v2, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CB0(v2, v1);
  sub_100678768(v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100678618()
{
  uint64_t v2 = v0[27];
  unint64_t v1 = v0[28];
  uint64_t v3 = v0[6];
  sub_100250CB0(v2, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CB0(v2, v1);
  sub_100678768(v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100678768(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDAirDropServerConnection(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006801A0(a1, (uint64_t)v4, type metadata accessor for SDAirDropServerConnection);
  if (swift_getEnumCaseMultiPayload()) {
    return sub_1006802B8((uint64_t)v4, type metadata accessor for SDAirDropServerConnection);
  }
  swift_release();
  if (qword_10096A0E0 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_10097D8F0);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Cancelling ASK connection", v9, 2u);
    swift_slowDealloc();
  }

  return sub_1005DB2F4(0);
}

uint64_t sub_1006788F8(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  v2[11] = swift_task_alloc();
  sub_10000A844(&qword_10096DF58);
  v2[12] = swift_task_alloc();
  uint64_t v4 = _s14descr1008C9AB9V10AskRequestVMa();
  v2[13] = v4;
  v2[14] = *(void *)(v4 - 8);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  v2[17] = static AirDropActor.shared;
  return _swift_task_switch(sub_100678AC0, v5, 0);
}

uint64_t sub_100678AC0()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[6] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askRequest;
  swift_beginAccess();
  sub_10024A330(v4, v3, &qword_10096DF58);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000A7E8(v0[12], &qword_10096DF58);
    uint64_t v5 = type metadata accessor for SFAirDropReceive.Failure();
    sub_100680270(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, enum case for SFAirDropReceive.Failure.badRequest(_:), v5);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    return v23();
  }
  else
  {
    uint64_t v7 = v0[15];
    uint64_t v8 = v0[16];
    uint64_t v9 = v0[11];
    uint64_t v10 = v0[6];
    sub_100680208(v0[12], v8, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
    sub_1006801A0(v8, v7, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
    sub_1006801A0(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity, v9, type metadata accessor for SDAirDropServerConnectionIdentity);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v12 = v0[11];
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = type metadata accessor for SFAirDrop.TransferIdentifier();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      uint64_t v14 = 3145728;
    }
    else
    {
      sub_1006802B8(v0[11], type metadata accessor for SDAirDropServerConnectionIdentity);
      uint64_t v14 = 0x20000;
    }
    uint64_t v15 = v0[15];
    uint64_t v16 = v0[9];
    uint64_t v17 = (char *)v0[6];
    (*(void (**)(uint64_t, char *, void))(v0[8] + 16))(v16, &v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveID], v0[7]);
    uint64_t v18 = &v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveServiceDelegate];
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    uint64_t v20 = *((void *)v18 + 1);
    type metadata accessor for SDAirDropReceiveCompressionAdapter();
    swift_allocObject();
    uint64_t v21 = v17;
    int v22 = sub_100261274(v15, v14, v16, v17, (uint64_t)&off_1008E4720, Strong, v20);
    v0[18] = v22;
    uint64_t v25 = v0[6];
    *(void *)(v25 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveCompressionAdapter) = v22;
    swift_retain();
    swift_release();
    char v26 = *(unsigned char *)(v25 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_shouldExtractMedia);
    uint64_t v27 = (void *)swift_task_alloc();
    v0[19] = v27;
    *uint64_t v27 = v0;
    v27[1] = sub_100678EC8;
    uint64_t v28 = v0[5];
    return sub_1002621A4(v28, v26);
  }
}

uint64_t sub_100678EC8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 136);
  if (v0) {
    uint64_t v4 = sub_1006790B8;
  }
  else {
    uint64_t v4 = sub_100678FF4;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100678FF4()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_release();
  sub_1006802B8(v1, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1006790B8()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_release();
  sub_1006802B8(v1, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10067917C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_10000A844(&qword_100978540);
  v2[4] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for SDAirDropServerConnection(0);
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  v2[8] = static AirDropActor.shared;
  return _swift_task_switch(sub_1006792A8, v4, 0);
}

uint64_t sub_1006792A8()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[4];
  sub_10024A330(v0[2], v3, &qword_100978540);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000A7E8(v0[4], &qword_100978540);
    if (qword_10096A0E0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_10097D8F0);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Missing connection", v7, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    sub_100680208(v0[4], v0[7], type metadata accessor for SDAirDropServerConnection);
    uint64_t v10 = (void *)swift_task_alloc();
    v0[9] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1006794B0;
    return sub_1005DCA80();
  }
}

uint64_t sub_1006794B0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  if (v0) {
    uint64_t v4 = sub_1006798BC;
  }
  else {
    uint64_t v4 = sub_1006795DC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1006795DC()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[11] = Strong;
  if (Strong)
  {
    uint64_t v2 = v0[3] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[12] = v3;
    void *v3 = v0;
    v3[1] = sub_100679704;
    return sub_10034C504(v2, 0);
  }
  else
  {
    sub_1006802B8(v0[7], type metadata accessor for SDAirDropServerConnection);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_100679704()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_100679830, v1, 0);
}

uint64_t sub_100679830()
{
  sub_1006802B8(*(void *)(v0 + 56), type metadata accessor for SDAirDropServerConnection);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006798BC()
{
  sub_1006802B8(*(void *)(v0 + 56), type metadata accessor for SDAirDropServerConnection);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10067994C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_10000A844(&qword_100978540);
  v2[4] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for SDAirDropServerConnection(0);
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  v2[8] = static AirDropActor.shared;
  return _swift_task_switch(sub_100679A78, v4, 0);
}

uint64_t sub_100679A78()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[4];
  sub_10024A330(v0[2], v3, &qword_100978540);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000A7E8(v0[4], &qword_100978540);
    if (qword_10096A0E0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_10097D8F0);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Missing connection", v7, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    sub_100680208(v0[4], v0[7], type metadata accessor for SDAirDropServerConnection);
    uint64_t v10 = (void *)swift_task_alloc();
    v0[9] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_100679C80;
    return sub_1005DC748();
  }
}

uint64_t sub_100679C80()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  if (v0) {
    uint64_t v4 = sub_100680330;
  }
  else {
    uint64_t v4 = sub_100676614;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100679DAC()
{
  v1[8] = v0;
  sub_10000A844(&qword_10096DFA8);
  v1[9] = swift_task_alloc();
  sub_10000A844(&qword_10096DF58);
  v1[10] = swift_task_alloc();
  uint64_t v2 = _s14descr1008C9AB9V10AskRequestVMa();
  v1[11] = v2;
  v1[12] = *(void *)(v2 - 8);
  v1[13] = swift_task_alloc();
  v1[14] = type metadata accessor for SDAirDropMessage();
  v1[15] = swift_task_alloc();
  sub_10000A844(&qword_100978540);
  v1[16] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for SDAirDropServerConnection(0);
  v1[17] = v3;
  v1[18] = *(void *)(v3 - 8);
  v1[19] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  v1[20] = static AirDropActor.shared;
  return _swift_task_switch(sub_100679FC4, v4, 0);
}

uint64_t sub_100679FC4()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[8] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection;
  swift_beginAccess();
  sub_10024A330(v4, v3, &qword_100978540);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000A7E8(v0[16], &qword_100978540);
    uint64_t v5 = type metadata accessor for SFAirDropReceive.Failure();
    sub_100680270(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, enum case for SFAirDropReceive.Failure.incompleteTransfer(_:), v5);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
  else
  {
    uint64_t v9 = (_OWORD *)v0[15];
    sub_100680208(v0[16], v0[19], type metadata accessor for SDAirDropServerConnection);
    *uint64_t v9 = xmmword_10077D4C0;
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = (void *)swift_task_alloc();
    v0[21] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_10067A240;
    uint64_t v11 = v0[15];
    return sub_1005DB860(v11);
  }
}

uint64_t sub_10067A240()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 160);
  sub_1006802B8(*(void *)(v2 + 120), (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  if (v0) {
    uint64_t v4 = sub_10067AA44;
  }
  else {
    uint64_t v4 = sub_10067A39C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10067A39C()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[8] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askRequest;
  swift_beginAccess();
  sub_10024A330(v4, v3, &qword_10096DF58);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000A7E8(v0[10], &qword_10096DF58);
LABEL_13:
    if (qword_10096A0E0 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_10000B47C(v20, (uint64_t)qword_10097D8F0);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Cancelling UPLOAD connection", v23, 2u);
      swift_slowDealloc();
    }
    uint64_t v24 = v0[19];

    sub_1005DB2F4(0);
    sub_1006802B8(v24, type metadata accessor for SDAirDropServerConnection);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    return v25();
  }
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[11];
  uint64_t v7 = v0[9];
  sub_100680208(v0[10], v5, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_10024A330(v5 + *(int *)(v6 + 20), v7, &qword_10096DFA8);
  uint64_t v8 = type metadata accessor for SFAirDrop.TransferType();
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  uint64_t v11 = v0[9];
  if (v10 == 1)
  {
    sub_10000A7E8(v0[9], &qword_10096DFA8);
  }
  else
  {
    SFAirDrop.TransferType.exchangeType.getter();
    uint64_t v13 = v12;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
    if (v13)
    {
      uint64_t v14 = v0[13];
      swift_bridgeObjectRelease();
      uint64_t v15 = v14;
LABEL_12:
      sub_1006802B8(v15, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
      goto LABEL_13;
    }
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[23] = Strong;
  if (!Strong)
  {
    uint64_t v15 = v0[13];
    goto LABEL_12;
  }
  uint64_t v17 = v0[8] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity;
  uint64_t v18 = (void *)swift_task_alloc();
  v0[24] = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_10067A76C;
  return sub_10034C504(v17, 0);
}

uint64_t sub_10067A76C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 160);
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_10067A898, v1, 0);
}

uint64_t sub_10067A898()
{
  sub_1006802B8(v0[13], (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  if (qword_10096A0E0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097D8F0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Cancelling UPLOAD connection", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[19];

  sub_1005DB2F4(0);
  sub_1006802B8(v5, type metadata accessor for SDAirDropServerConnection);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_10067AA44()
{
  if (qword_10096A0E0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097D8F0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Cancelling UPLOAD connection", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 152);

  sub_1005DB2F4(0);
  sub_1006802B8(v5, type metadata accessor for SDAirDropServerConnection);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_10067ABCC(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_10000A844(&qword_100978540);
  v2[4] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for SDAirDropServerConnection(0);
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  v2[8] = static AirDropActor.shared;
  return _swift_task_switch(sub_10067ACF8, v4, 0);
}

uint64_t sub_10067ACF8()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[4];
  sub_10024A330(v0[2], v3, &qword_100978540);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000A7E8(v0[4], &qword_100978540);
    if (qword_10096A0E0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_10097D8F0);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Missing connection", v7, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    sub_100680208(v0[4], v0[7], type metadata accessor for SDAirDropServerConnection);
    int v10 = (void *)swift_task_alloc();
    v0[9] = v10;
    *int v10 = v0;
    v10[1] = sub_10067AF00;
    return sub_1005DC418();
  }
}

uint64_t sub_10067AF00()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  if (v0) {
    uint64_t v4 = sub_100680330;
  }
  else {
    uint64_t v4 = sub_100676614;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10067B02C(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  sub_10000A844(&qword_10096DF68);
  v2[12] = swift_task_alloc();
  uint64_t v3 = _s14descr1008C92C9V13UploadRequestVMa();
  v2[13] = v3;
  v2[14] = *(void *)(v3 - 8);
  v2[15] = swift_task_alloc();
  sub_10000A844(&qword_100978540);
  v2[16] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SDAirDropServerConnection(0);
  v2[17] = v4;
  v2[18] = *(void *)(v4 - 8);
  v2[19] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  v2[20] = static AirDropActor.shared;
  return _swift_task_switch(sub_10067B1E4, v5, 0);
}

uint64_t sub_10067B1E4()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[11] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection;
  swift_beginAccess();
  sub_10024A330(v4, v3, &qword_100978540);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000A7E8(v0[16], &qword_100978540);
    uint64_t v5 = type metadata accessor for SFAirDropReceive.Failure();
    sub_100680270(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, enum case for SFAirDropReceive.Failure.incompleteTransfer(_:), v5);
    swift_willThrow();
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
  uint64_t v7 = v0[13];
  uint64_t v8 = v0[14];
  uint64_t v10 = v0[11];
  uint64_t v9 = v0[12];
  sub_100680208(v0[16], v0[19], type metadata accessor for SDAirDropServerConnection);
  uint64_t v11 = v10 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadRequest;
  swift_beginAccess();
  sub_10024A330(v11, v9, &qword_10096DF68);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7) == 1)
  {
    uint64_t v12 = v0[19];
    sub_10000A7E8(v0[12], &qword_10096DF68);
    uint64_t v13 = type metadata accessor for SFAirDropReceive.Failure();
    sub_100680270(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v13 - 8) + 104))(v14, enum case for SFAirDropReceive.Failure.badRequest(_:), v13);
    swift_willThrow();
    sub_1006802B8(v12, type metadata accessor for SDAirDropServerConnection);
    goto LABEL_5;
  }
  uint64_t v17 = v0[15];
  uint64_t v18 = v0[13];
  sub_100680208(v0[12], v17, (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
  uint64_t v19 = (uint64_t *)(v17 + *(int *)(v18 + 28));
  uint64_t v20 = *v19;
  v0[21] = *v19;
  unint64_t v21 = v19[1];
  v0[22] = v21;
  if (v21 >> 60 == 15) {
    goto LABEL_22;
  }
  unint64_t v22 = v21 >> 62;
  switch(v21 >> 62)
  {
    case 1uLL:
      if ((int)v20 != v20 >> 32) {
        goto LABEL_13;
      }
      goto LABEL_22;
    case 2uLL:
      if (*(void *)(v20 + 16) == *(void *)(v20 + 24)) {
        goto LABEL_22;
      }
LABEL_13:
      sub_10025ADCC(v20, v21);
      goto LABEL_14;
    case 3uLL:
      goto LABEL_11;
    default:
      if ((v21 & 0xFF000000000000) != 0)
      {
LABEL_14:
        if (qword_10096A0E0 != -1) {
          swift_once();
        }
        uint64_t v23 = type metadata accessor for Logger();
        sub_10000B47C(v23, (uint64_t)qword_10097D8F0);
        sub_10025ADCC(v20, v21);
        uint64_t v24 = Logger.logObject.getter();
        os_log_type_t v25 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v24, v25))
        {
          uint64_t v26 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v26 = 134217984;
          if (v22)
          {
            if (v22 == 1)
            {
              LODWORD(v27) = HIDWORD(v20) - v20;
              if (__OFSUB__(HIDWORD(v20), v20))
              {
LABEL_48:
                __break(1u);
                goto LABEL_49;
              }
              uint64_t v27 = (int)v27;
            }
            else
            {
              uint64_t v37 = *(void *)(v20 + 16);
              uint64_t v36 = *(void *)(v20 + 24);
              BOOL v38 = __OFSUB__(v36, v37);
              uint64_t v27 = v36 - v37;
              if (v38)
              {
LABEL_49:
                __break(1u);
                JUMPOUT(0x10067B964);
              }
            }
          }
          else
          {
            uint64_t v27 = BYTE6(v21);
          }
          v0[9] = v27;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          sub_100250CB0(v20, v21);
          _os_log_impl((void *)&_mh_execute_header, v24, v25, "Streamed starting %ld bytes", v26, 0xCu);
          swift_slowDealloc();
        }
        else
        {
          sub_100250CB0(v20, v21);
        }

        if (!v22)
        {
          uint64_t v39 = BYTE6(v21);
          goto LABEL_43;
        }
        if (v22 == 1)
        {
          LODWORD(v39) = HIDWORD(v20) - v20;
          if (!__OFSUB__(HIDWORD(v20), v20))
          {
            uint64_t v39 = (int)v39;
LABEL_43:
            v0[23] = v39;
            uint64_t v42 = (void *)swift_task_alloc();
            v0[24] = v42;
            void *v42 = v0;
            v42[1] = sub_10067B974;
            return sub_100264CE8(v20, v21);
          }
          __break(1u);
        }
        else
        {
          uint64_t v41 = *(void *)(v20 + 16);
          uint64_t v40 = *(void *)(v20 + 24);
          BOOL v38 = __OFSUB__(v40, v41);
          uint64_t v39 = v40 - v41;
          if (!v38) {
            goto LABEL_43;
          }
        }
        __break(1u);
        goto LABEL_48;
      }
LABEL_11:
      sub_100250CB0(v20, v21);
LABEL_22:
      if (*(unsigned char *)(v0[15] + *(int *)(v0[13] + 32)))
      {
        if (qword_10096A0E0 != -1) {
          swift_once();
        }
        uint64_t v30 = type metadata accessor for Logger();
        sub_10000B47C(v30, (uint64_t)qword_10097D8F0);
        uint64_t v31 = Logger.logObject.getter();
        os_log_type_t v32 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v31, v32))
        {
          uint64_t v33 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v33 = 0;
          _os_log_impl((void *)&_mh_execute_header, v31, v32, "Received all file data from initial request, awaiting decompression", v33, 2u);
          swift_slowDealloc();
        }

        unint64_t v34 = (void *)swift_task_alloc();
        v0[26] = v34;
        *unint64_t v34 = v0;
        v34[1] = sub_10067BCA4;
        uint64_t v35 = v0[10];
        return sub_10067D4A4(v35);
      }
      else
      {
        v0[29] = sub_100680270(&qword_10096BA18, (void (*)(uint64_t))type metadata accessor for SDAirDropReceiveCompressionAdapter);
        v0[30] = 0;
        type metadata accessor for SDAirDropReceiveCompressionAdapter();
        uint64_t v29 = dispatch thunk of Actor.unownedExecutor.getter();
        v0[31] = v29;
        v0[32] = v28;
        return _swift_task_switch(sub_10067C00C, v29, v28);
      }
  }
}

uint64_t sub_10067B974()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 160);
  if (v0) {
    uint64_t v4 = sub_10067D220;
  }
  else {
    uint64_t v4 = sub_10067BAA0;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10067BAA0()
{
  uint64_t v1 = v0[23];
  sub_100250CB0(v0[21], v0[22]);
  if (*(unsigned char *)(v0[15] + *(int *)(v0[13] + 32)))
  {
    if (qword_10096A0E0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_10097D8F0);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Received all file data from initial request, awaiting decompression", v7, 2u);
      swift_slowDealloc();
    }

    uint64_t v8 = (void *)swift_task_alloc();
    v0[26] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_10067BCA4;
    uint64_t v9 = v0[10];
    return sub_10067D4A4(v9);
  }
  else
  {
    v0[29] = sub_100680270(&qword_10096BA18, (void (*)(uint64_t))type metadata accessor for SDAirDropReceiveCompressionAdapter);
    v0[30] = v1;
    type metadata accessor for SDAirDropReceiveCompressionAdapter();
    uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
    v0[31] = v3;
    v0[32] = v2;
    return _swift_task_switch(sub_10067C00C, v3, v2);
  }
}

uint64_t sub_10067BCA4()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[28] = v0;
    uint64_t v4 = v2[20];
    return _swift_task_switch(sub_10067BF44, v4, 0);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v2[27] = v5;
    *uint64_t v5 = v3;
    v5[1] = sub_10067BE20;
    return sub_100265B1C();
  }
}

uint64_t sub_10067BE20()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(void *)(v2 + 224) = v0;
    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = sub_10067BF44;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = sub_100680318;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10067BF44()
{
  uint64_t v1 = v0[19];
  sub_1006802B8(v0[15], (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
  sub_1006802B8(v1, type metadata accessor for SDAirDropServerConnection);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_10067C00C()
{
  uint64_t v1 = v0[29];
  uint64_t v2 = v0[10];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[33] = v3;
  void *v3 = v0;
  v3[1] = sub_10067C0F8;
  uint64_t v4 = v0[10];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 45, v2, v1, 0xD000000000000014, 0x80000001007B6FD0, sub_10026CB68, v4, &type metadata for Bool);
}

uint64_t sub_10067C0F8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 272) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 256);
  uint64_t v4 = *(void *)(v2 + 248);
  if (v0) {
    uint64_t v5 = sub_10067C454;
  }
  else {
    uint64_t v5 = sub_10067C234;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10067C234()
{
  uint64_t v1 = *(void *)(v0 + 160);
  *(unsigned char *)(v0 + 361) = *(unsigned char *)(v0 + 360);
  return _swift_task_switch(sub_10067C258, v1, 0);
}

uint64_t sub_10067C258()
{
  if (*(unsigned char *)(v0 + 361))
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 280) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_10067C538;
    return sub_1005DD018();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 240);
    if (qword_10096A0E0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_10097D8F0);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 134217984;
      *(void *)(v0 + 64) = v3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Received %ld total bytes, awaiting decompression", v7, 0xCu);
      swift_slowDealloc();
    }

    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_10067CDF0;
    uint64_t v9 = *(void *)(v0 + 80);
    return sub_10067D4A4(v9);
  }
}

uint64_t sub_10067C454()
{
  return _swift_task_switch(sub_10067C470, *(void *)(v0 + 160), 0);
}

uint64_t sub_10067C470()
{
  uint64_t v1 = v0[19];
  sub_1006802B8(v0[15], (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
  sub_1006802B8(v1, type metadata accessor for SDAirDropServerConnection);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_10067C538(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = *v4;
  uint64_t v6 = *v4;
  *(void *)(v6 + 288) = a1;
  *(void *)(v6 + 296) = a2;
  *(unsigned char *)(v6 + 362) = a3;
  *(void *)(v6 + 304) = v3;
  swift_task_dealloc();
  uint64_t v7 = *(void *)(v5 + 160);
  if (v3) {
    uint64_t v8 = sub_10067D2F4;
  }
  else {
    uint64_t v8 = sub_10067C674;
  }
  return _swift_task_switch(v8, v7, 0);
}

uint64_t sub_10067C674()
{
  unint64_t v1 = *(void *)(v0 + 296);
  if (v1 >> 60 == 15)
  {
    uint64_t v2 = *(void *)(v0 + 288);
LABEL_7:
    sub_100250CB0(v2, v1);
    uint64_t v5 = *(void *)(v0 + 240);
    if (qword_10096A0E0 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_10097D8F0);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 134217984;
      *(void *)(v0 + 64) = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Received %ld total bytes, awaiting decompression", v9, 0xCu);
      swift_slowDealloc();
    }

    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_10067CDF0;
    uint64_t v11 = *(void *)(v0 + 80);
    return sub_10067D4A4(v11);
  }
  unint64_t v3 = v1 >> 62;
  switch(v1 >> 62)
  {
    case 1uLL:
      uint64_t v13 = *(void *)(v0 + 288);
      if (__OFSUB__(HIDWORD(v13), v13)) {
        goto LABEL_41;
      }
      uint64_t v14 = HIDWORD(v13) - (int)v13;
LABEL_17:
      sub_100278C78(v13, *(void *)(v0 + 296));
      if (v14 <= 0)
      {
LABEL_5:
        unint64_t v1 = *(void *)(v0 + 296);
LABEL_6:
        uint64_t v4 = *(void *)(v0 + 288);
        sub_100250CB0(v4, v1);
        uint64_t v2 = v4;
        goto LABEL_7;
      }
LABEL_18:
      if (qword_10096A0E0 != -1) {
        swift_once();
      }
      uint64_t v18 = *(void *)(v0 + 288);
      unint64_t v17 = *(void *)(v0 + 296);
      uint64_t v19 = type metadata accessor for Logger();
      uint64_t v20 = sub_10000B47C(v19, (uint64_t)qword_10097D8F0);
      sub_100278C78(v18, v17);
      unint64_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v20 = swift_slowAlloc();
        *(_DWORD *)uint64_t v20 = 134217984;
        if (!v3) {
          goto LABEL_32;
        }
        if (v3 == 1)
        {
          uint64_t v23 = *(void *)(v0 + 288);
          LODWORD(v24) = HIDWORD(v23) - v23;
          if (!__OFSUB__(HIDWORD(v23), v23))
          {
            uint64_t v24 = (int)v24;
            goto LABEL_34;
          }
          goto LABEL_44;
        }
        uint64_t v23 = *(void *)(v0 + 288);
        uint64_t v32 = *(void *)(v23 + 16);
        uint64_t v31 = *(void *)(v23 + 24);
        BOOL v27 = __OFSUB__(v31, v32);
        uint64_t v24 = v31 - v32;
        if (v27)
        {
LABEL_45:
          __break(1u);
          JUMPOUT(0x10067CAA4);
        }
        while (1)
        {
LABEL_34:
          unint64_t v33 = *(void *)(v0 + 296);
          *(void *)(v20 + 4) = v24;
          sub_100250CB0(v23, v33);
          _os_log_impl((void *)&_mh_execute_header, v21, v22, "Streamed %ld bytes", (uint8_t *)v20, 0xCu);
          swift_slowDealloc();

          if (!v3) {
            goto LABEL_35;
          }
LABEL_26:
          if (v3 == 1) {
            break;
          }
          uint64_t v29 = *(void *)(*(void *)(v0 + 288) + 16);
          uint64_t v30 = *(void *)(*(void *)(v0 + 288) + 24);
          BOOL v27 = __OFSUB__(v30, v29);
          uint64_t v28 = v30 - v29;
          if (!v27) {
            goto LABEL_36;
          }
          __break(1u);
LABEL_32:
          uint64_t v24 = *(unsigned __int8 *)(v0 + 302);
          uint64_t v23 = *(void *)(v0 + 288);
        }
        int v25 = *(_DWORD *)(v0 + 288);
        int v26 = *(_DWORD *)(v0 + 292);
        BOOL v27 = __OFSUB__(v26, v25);
        LODWORD(v28) = v26 - v25;
        if (v27)
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          goto LABEL_45;
        }
        uint64_t v28 = (int)v28;
      }
      else
      {
        sub_100250CB0(*(void *)(v0 + 288), *(void *)(v0 + 296));

        if (v3) {
          goto LABEL_26;
        }
LABEL_35:
        uint64_t v28 = *(unsigned __int8 *)(v0 + 302);
      }
LABEL_36:
      uint64_t v34 = *(void *)(v0 + 240);
      *(void *)(v0 + 312) = v34 + v28;
      if (__OFADD__(v34, v28))
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      uint64_t v35 = (void *)swift_task_alloc();
      *(void *)(v0 + 320) = v35;
      *uint64_t v35 = v0;
      v35[1] = sub_10067CAB4;
      uint64_t v37 = *(void *)(v0 + 288);
      uint64_t v36 = *(void *)(v0 + 296);
      return sub_100264CE8(v37, v36);
    case 2uLL:
      uint64_t v13 = *(void *)(v0 + 288);
      uint64_t v16 = *(void *)(v13 + 16);
      uint64_t v15 = *(void *)(v13 + 24);
      uint64_t v14 = v15 - v16;
      if (!__OFSUB__(v15, v16)) {
        goto LABEL_17;
      }
      goto LABEL_42;
    case 3uLL:
      goto LABEL_6;
    default:
      if (!BYTE6(v1)) {
        goto LABEL_5;
      }
      goto LABEL_18;
  }
}

uint64_t sub_10067CAB4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 328) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 160);
  if (v0) {
    uint64_t v4 = sub_10067D3BC;
  }
  else {
    uint64_t v4 = sub_10067CBE0;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10067CBE0()
{
  int v1 = *(unsigned __int8 *)(v0 + 362);
  uint64_t v2 = *(void *)(v0 + 288);
  unint64_t v3 = *(void *)(v0 + 296);
  sub_100250CB0(v2, v3);
  sub_100250CB0(v2, v3);
  uint64_t v4 = *(void *)(v0 + 312);
  if (v1 == 1)
  {
    if (qword_10096A0E0 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000B47C(v5, (uint64_t)qword_10097D8F0);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v8 = 134217984;
      *(void *)(v0 + 64) = v4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Received %ld total bytes, awaiting decompression", v8, 0xCu);
      swift_slowDealloc();
    }

    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_10067CDF0;
    uint64_t v10 = *(void *)(v0 + 80);
    return sub_10067D4A4(v10);
  }
  else
  {
    *(void *)(v0 + 240) = v4;
    type metadata accessor for SDAirDropReceiveCompressionAdapter();
    uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
    *(void *)(v0 + 248) = v13;
    *(void *)(v0 + 256) = v12;
    return _swift_task_switch(sub_10067C00C, v13, v12);
  }
}

uint64_t sub_10067CDF0()
{
  uint64_t v2 = (void *)*v1;
  unint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[44] = v0;
    uint64_t v4 = v2[20];
    return _swift_task_switch(sub_10067D158, v4, 0);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v2[43] = v5;
    *uint64_t v5 = v3;
    v5[1] = sub_10067CF6C;
    return sub_100265B1C();
  }
}

uint64_t sub_10067CF6C()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(void *)(v2 + 352) = v0;
    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = sub_10067D158;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = sub_10067D090;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10067D090()
{
  uint64_t v1 = v0[19];
  sub_1006802B8(v0[15], (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
  sub_1006802B8(v1, type metadata accessor for SDAirDropServerConnection);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_10067D158()
{
  uint64_t v1 = v0[19];
  sub_1006802B8(v0[15], (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
  sub_1006802B8(v1, type metadata accessor for SDAirDropServerConnection);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_10067D220()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[15];
  sub_100250CB0(v0[21], v0[22]);
  sub_1006802B8(v2, (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
  sub_1006802B8(v1, type metadata accessor for SDAirDropServerConnection);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10067D2F4()
{
  uint64_t v1 = v0[19];
  sub_1006802B8(v0[15], (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
  sub_1006802B8(v1, type metadata accessor for SDAirDropServerConnection);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_10067D3BC()
{
  uint64_t v1 = v0[36];
  unint64_t v2 = v0[37];
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[15];
  sub_100250CB0(v1, v2);
  sub_100250CB0(v1, v2);
  sub_1006802B8(v4, (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
  sub_1006802B8(v3, type metadata accessor for SDAirDropServerConnection);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10067D4A4(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = sub_10000A844(&qword_10097DA68);
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v4 = sub_10000A844(&qword_10097DA18);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SFAirDropReceive.AskResponse();
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v2[17] = static AirDropActor.shared;
  return _swift_task_switch(sub_10067D670, v6, 0);
}

uint64_t sub_10067D670()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v0[6] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askContinuation, v3);
  SFProgressContinuation.task.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[18] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10067D770;
  uint64_t v5 = v0[16];
  uint64_t v6 = v0[7];
  return SFProgressTask.finalValue.getter(v5, v6);
}

uint64_t sub_10067D770()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 72);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *(void *)(*v1 + 56);
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 136);
  if (v0) {
    uint64_t v7 = sub_10067DD3C;
  }
  else {
    uint64_t v7 = sub_10067D8F8;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_10067D8F8()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[16], v2);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  uint64_t v5 = *(void (**)(void, uint64_t))(v3 + 8);
  int v6 = enum case for SFAirDropReceive.AskResponse.accept(_:);
  v0[20] = v5;
  v0[21] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  if (v4 == v6)
  {
    uint64_t v7 = v0[15];
    uint64_t v8 = v0[13];
    uint64_t v9 = v0[14];
    v5(v0[16], v8);
    (*(void (**)(uint64_t, uint64_t))(v9 + 96))(v7, v8);
    uint64_t v10 = v7 + *(int *)(sub_10000A844(&qword_10096C950) + 48);
    uint64_t v11 = type metadata accessor for SFAirDropReceive.AcceptContext();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    uint64_t v12 = type metadata accessor for SFAirDropReceive.ItemDestination();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v7, v12);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
  else
  {
    v5(v0[15], v0[13]);
    if (qword_10096A0E0 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10000B47C(v15, (uint64_t)qword_10097D8F0);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "ASK declined, cancelling receive compression adapter", v18, 2u);
      swift_slowDealloc();
    }

    type metadata accessor for SDAirDropReceiveCompressionAdapter();
    sub_100680270(&qword_10096BA18, (void (*)(uint64_t))type metadata accessor for SDAirDropReceiveCompressionAdapter);
    uint64_t v20 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_10067DBF8, v20, v19);
  }
}

uint64_t sub_10067DBF8()
{
  uint64_t v1 = *(void *)(v0 + 136);
  [*(id *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropReceiveCompressionAdapter_zipper) stop];
  swift_beginAccess();
  return _swift_task_switch(sub_10067DCA0, v1, 0);
}

uint64_t sub_10067DCA0()
{
  (*(void (**)(void, void))(v0 + 160))(*(void *)(v0 + 128), *(void *)(v0 + 104));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10067DD3C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10067E12C()
{
  return type metadata accessor for SDAirDropReceiveHandler();
}

uint64_t type metadata accessor for SDAirDropReceiveHandler()
{
  uint64_t result = qword_10097D9A8;
  if (!qword_10097D9A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10067E180()
{
  type metadata accessor for SFAirDrop.TransferIdentifier();
  if (v0 <= 0x3F)
  {
    type metadata accessor for UUID();
    if (v1 <= 0x3F)
    {
      type metadata accessor for SDAirDropServerConnectionIdentity(319);
      if (v2 <= 0x3F)
      {
        sub_10067E5E0();
        if (v3 <= 0x3F)
        {
          sub_1002B4AD8();
          if (v4 <= 0x3F)
          {
            sub_10067E648();
            if (v5 <= 0x3F)
            {
              sub_10067E6A4();
              if (v6 <= 0x3F)
              {
                sub_10067E700(319, &qword_10096DE40, (void (*)(uint64_t))_s12HelloRequestVMa);
                if (v7 <= 0x3F)
                {
                  sub_10067E700(319, &qword_10096DE58, (void (*)(uint64_t))_s14descr1008C9AB9V10AskRequestVMa);
                  if (v8 <= 0x3F)
                  {
                    sub_10067E700(319, &qword_10096DE70, (void (*)(uint64_t))_s14descr1008C92C9V13UploadRequestVMa);
                    if (v9 <= 0x3F)
                    {
                      sub_10067E700(319, &qword_10097D9D0, (void (*)(uint64_t))_s14descr1008C9A51V15ExchangeRequestVMa);
                      if (v10 <= 0x3F)
                      {
                        sub_10067E700(319, (unint64_t *)&qword_100973960, (void (*)(uint64_t))&type metadata accessor for Date);
                        if (v11 <= 0x3F)
                        {
                          sub_10067E700(319, &qword_10097D9D8, (void (*)(uint64_t))type metadata accessor for SDAirDropServerConnection);
                          if (v12 <= 0x3F) {
                            swift_updateClassMetadata2();
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_10067E5E0()
{
  if (!qword_10097D9B8)
  {
    type metadata accessor for SFAirDrop.AskProgress();
    type metadata accessor for SFAirDropReceive.AskResponse();
    unint64_t v0 = type metadata accessor for SFProgressContinuation();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10097D9B8);
    }
  }
}

void sub_10067E648()
{
  if (!qword_10097D9C0)
  {
    sub_100247840(&qword_100978558);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10097D9C0);
    }
  }
}

void sub_10067E6A4()
{
  if (!qword_10097D9C8)
  {
    unint64_t v0 = type metadata accessor for SFProgressContinuation();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10097D9C8);
    }
  }
}

void sub_10067E700(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SDAirDropReceiveHandler.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10067E820);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropReceiveHandler.State()
{
  return &type metadata for SDAirDropReceiveHandler.State;
}

unint64_t sub_10067E85C()
{
  unint64_t result = qword_10097D9E0;
  if (!qword_10097D9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10097D9E0);
  }
  return result;
}

uint64_t sub_10067E8B0()
{
  return sub_100680270(&qword_10096C610, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
}

uint64_t sub_10067E8F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_id;
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_10067E970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  uint64_t v5 = sub_10000A844(&qword_10096BBA8);
  v4[9] = v5;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFAirDrop.Progress();
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  return _swift_task_switch(sub_10067EACC, v7, 0);
}

uint64_t sub_10067EACC()
{
  uint64_t v28 = v0;
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 64) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_totalBytes;
  uint64_t v4 = *(void *)v3;
  char v5 = *(unsigned char *)(v3 + 8);
  long long v6 = *(_OWORD *)(v0 + 48);
  *(void *)uint64_t v1 = *(void *)(v0 + 40);
  *(void *)(v1 + 8) = v4;
  *(unsigned char *)(v1 + 16) = v5;
  *(_OWORD *)(v1 + 24) = v6;
  (*(void (**)(void))(v2 + 104))();
  if (qword_10096A0E0 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void **)(v0 + 64);
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000B47C(v8, (uint64_t)qword_10097D8F0);
  id v9 = v7;
  unint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = *(void *)(v0 + 48);
    uint64_t v13 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 134218242;
    *(void *)(v0 + 16) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2080;
    if (*(unsigned char *)(v3 + 8))
    {
      unint64_t v14 = 0x80000001007C6270;
      unint64_t v15 = 0xD000000000000019;
    }
    else
    {
      *(void *)(v0 + 24) = *(void *)v3;
      sub_1002CE960();
      unint64_t v15 = BinaryInteger.description.getter();
      unint64_t v14 = v17;
    }
    uint64_t v18 = *(void **)(v0 + 64);
    *(void *)(v0 + 32) = sub_100254634(v15, v14, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Decompression progress copied: %ld total: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v16 = *(void **)(v0 + 64);
  }
  uint64_t v20 = *(void *)(v0 + 104);
  uint64_t v19 = *(void *)(v0 + 112);
  uint64_t v21 = *(void *)(v0 + 88);
  uint64_t v22 = *(void *)(v0 + 96);
  uint64_t v23 = *(void *)(v0 + 72);
  uint64_t v24 = *(void *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v21, *(void *)(v0 + 64) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferContinuation, v23);
  SFProgressContinuation.yield(_:)();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v21, v23);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v22);
  swift_task_dealloc();
  swift_task_dealloc();
  int v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_10067EDE8(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = sub_10000A844(&qword_10096BBA8);
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  v2[8] = static AirDropActor.shared;
  return _swift_task_switch(sub_10067EEE8, v4, 0);
}

uint64_t sub_10067EEE8()
{
  if (qword_10096A0E0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097D8F0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Decompression finished, sending UPLOAD response", v4, 2u);
    swift_slowDealloc();
  }

  char v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v5;
  *char v5 = v0;
  v5[1] = sub_10067F034;
  return sub_100679DAC();
}

uint64_t sub_10067F034()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 64);
    return _swift_task_switch(sub_10067F180, v6, 0);
  }
}

uint64_t sub_10067F180()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[3];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v0[4] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferContinuation, v3);
  v0[2] = v4;
  SFProgressContinuation.finish(with:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  char v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

id sub_10067F248(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12 = v11;
  uint64_t v79 = a8;
  uint64_t v76 = a7;
  uint64_t v74 = a6;
  uint64_t v71 = a5;
  uint64_t v69 = a4;
  char v68 = a3;
  uint64_t v90 = a2;
  uint64_t v91 = a1;
  uint64_t v75 = a11;
  uint64_t v77 = a10;
  uint64_t v72 = a9;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v13 = type metadata accessor for SFAirDrop.Progress();
  uint64_t v85 = *(void *)(v13 - 8);
  uint64_t v86 = v13;
  __chkstk_darwin(v13);
  uint64_t v84 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000A844(&qword_10096BBA8);
  uint64_t v87 = *(void *)(v15 - 8);
  uint64_t v88 = v15;
  __chkstk_darwin(v15);
  uint64_t v83 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for SFAirDrop.AskProgress();
  uint64_t v78 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v73 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10000A844(&qword_10097DA18);
  uint64_t v81 = *(void *)(v18 - 8);
  uint64_t v82 = v18;
  __chkstk_darwin(v18);
  uint64_t v70 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_10000A844(&qword_100978650);
  uint64_t v66 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v65 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for UUID();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v25 = &v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_delegate];
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  int v26 = &v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveServiceDelegate];
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveServiceDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v27 = (uint64_t *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_idsSessionID];
  uint64_t v28 = v12;
  UUID.init()();
  uint64_t v29 = UUID.uuidString.getter();
  uint64_t v31 = v30;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  *uint64_t v27 = v29;
  v27[1] = v31;
  uint64_t v32 = &v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeContinuation];
  uint64_t v33 = sub_10000A844(&qword_100978558);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 1, 1, v33);
  uint64_t v34 = &v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_helloRequest];
  uint64_t v35 = _s12HelloRequestVMa();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 1, 1, v35);
  uint64_t v36 = &v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askRequest];
  uint64_t v37 = _s14descr1008C9AB9V10AskRequestVMa();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, 1, 1, v37);
  uint64_t v38 = &v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadRequest];
  uint64_t v39 = _s14descr1008C92C9V13UploadRequestVMa();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 1, 1, v39);
  uint64_t v40 = &v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeRequest];
  uint64_t v41 = _s14descr1008C9A51V15ExchangeRequestVMa(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 1, 1, v41);
  uint64_t v42 = &v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferStart];
  uint64_t v43 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 1, 1, v43);
  *(void *)&v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveCompressionAdapter] = 0;
  uint64_t v44 = &v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_helloConnection];
  uint64_t v45 = type metadata accessor for SDAirDropServerConnection(0);
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56);
  v46(v44, 1, 1, v45);
  v46(&v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askConnection], 1, 1, v45);
  v46(&v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection], 1, 1, v45);
  v46(&v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeConnection], 1, 1, v45);
  v46(&v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_errorConnection], 1, 1, v45);
  char v47 = &v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_totalBytes];
  *(void *)char v47 = 0;
  v47[8] = 1;
  v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_shouldExtractMedia] = 0;
  uint64_t v48 = &v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_id];
  uint64_t v49 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v50 = *(void *)(v49 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v48, v91, v49);
  UUID.init()();
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_receiveID], v24, v21);
  sub_1006801A0(v90, (uint64_t)&v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_serverConnectionIdentity], type metadata accessor for SDAirDropServerConnectionIdentity);
  uint64_t v51 = v68;
  *(void *)&v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_deviceStatus] = v68;
  uint64_t v52 = v69;
  *(void *)&v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_nearbyAgent] = v69;
  uint64_t v53 = v71;
  *(void *)&v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_endpointService] = v71;
  *(void *)&v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_pseudonymService] = v74;
  uint64_t v54 = v76;
  *(void *)&v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_queue] = v76;
  *((void *)v25 + 1) = v72;
  swift_unknownObjectWeakAssign();
  *((void *)v26 + 1) = v75;
  swift_unknownObjectWeakAssign();
  char v93 = 0;
  id v55 = v51;
  id v56 = v52;
  id v57 = v53;
  swift_retain();
  id v58 = v54;
  uint64_t v59 = v65;
  SFProgressContinuation.init(_:initialProgress:file:line:)();
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(&v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_handlerContinuation], v59, v67);
  (*(void (**)(char *, void, uint64_t))(v78 + 104))(v73, enum case for SFAirDrop.AskProgress.notStarted(_:), v80);
  type metadata accessor for SFAirDropReceive.AskResponse();
  uint64_t v60 = v70;
  SFProgressContinuation.init(_:initialProgress:file:line:)();
  (*(void (**)(char *, char *, uint64_t))(v81 + 32))(&v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_askContinuation], v60, v82);
  (*(void (**)(char *, void, uint64_t))(v85 + 104))(v84, enum case for SFAirDrop.Progress.notStarted(_:), v86);
  sub_10000A844((uint64_t *)&unk_10096C8B0);
  id v61 = v83;
  SFProgressContinuation.init(_:initialProgress:file:line:)();
  (*(void (**)(char *, char *, uint64_t))(v87 + 32))(&v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferContinuation], v61, v88);

  v92.receiver = v28;
  v92.super_class = ObjectType;
  id v62 = [super init];
  sub_1006802B8(v90, type metadata accessor for SDAirDropServerConnectionIdentity);
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v91, v49);
  return v62;
}

uint64_t sub_10067FCB8(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = type metadata accessor for SDAirDropMessage();
  v2[5] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v3 = static AirDropActor.shared;
  v2[6] = static AirDropActor.shared;
  return _swift_task_switch(sub_10067FD88, v3, 0);
}

uint64_t sub_10067FD88()
{
  if (qword_10096A0E0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097D8F0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Sending HELLO response", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[2];

  *(_DWORD *)uint64_t v5 = v6;
  *(unsigned char *)(v5 + 4) = BYTE4(v6);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[7] = v7;
  void *v7 = v0;
  v7[1] = sub_10067FF00;
  uint64_t v8 = v0[5];
  return sub_1005DB860(v8);
}

uint64_t sub_10067FF00()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 40);
  os_log_type_t v3 = *(void **)v1;
  v3[8] = v0;
  swift_task_dealloc();
  sub_1006802B8(v2, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  if (v0)
  {
    uint64_t v4 = v3[6];
    return _swift_task_switch(sub_100680078, v4, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v3[1];
    return v5();
  }
}

uint64_t sub_100680078()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006800DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_10097A128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_100680144(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1006801A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100680208(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100680270(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006802B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100680338()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097DAD8);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097DAD8);
  if (qword_100969CD8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946D8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100680400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v48 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v40 - v14;
  __chkstk_darwin(v13);
  uint64_t v51 = (char *)&v40 - v16;
  sub_10000A844(&qword_10096BBB0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_100771F40;
  if (qword_10096A0F0 != -1) {
    swift_once();
  }
  *(void *)(v17 + 56) = &type metadata for SDAuthentication.Operation.CheckLocalSecurityPolicy;
  *(void *)(v17 + 64) = &off_100971848;
  *(void *)(v17 + 96) = &type metadata for SDAuthentication.Operation.CheckLockRegisteredAndArmedWithAKSManager;
  *(void *)(v17 + 104) = &off_100971668;
  *(void *)(v17 + 136) = &type metadata for SDAuthentication.Operation.IncludeLastRegistrationInMessage;
  *(void *)(v17 + 144) = &off_1009716C8;
  *(void *)(v17 + 176) = &type metadata for SDAuthentication.Operation.SendRequestMessage;
  *(void *)(v17 + 184) = &off_1009717C8;
  *a3 = v17;
  uint64_t v18 = (int *)_s8KeyCheckV18InitialLockContextVMa(0);
  uint64_t v19 = *(void (**)(void))(v10 + 56);
  uint64_t v49 = (uint64_t)a3 + v18[6];
  uint64_t v50 = v19;
  v19();
  *(uint64_t *)((char *)a3 + v18[8]) = 0;
  *((unsigned char *)a3 + v18[9]) = 0;
  sub_1002BEBA4(a2, (uint64_t)v8);
  uint64_t v20 = a2;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10000A7E8((uint64_t)v8, (uint64_t *)&unk_100975040);
    if (qword_10096A0E8 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_10000B47C(v21, (uint64_t)qword_10097DAD8);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Start key check flow, device hasn't been locked yet", v24, 2u);
      swift_slowDealloc();
    }

    int v25 = v48;
    static Date.distantFuture.getter();
    sub_10000A7E8(a2, (uint64_t *)&unk_100975040);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))((char *)a3 + v18[7], v25, v9);
  }
  else
  {
    int v26 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    uint64_t v27 = v51;
    uint64_t v47 = v10 + 32;
    uint64_t v48 = (char *)a1;
    uint64_t v46 = v26;
    v26(v51, v8, v9);
    if (qword_10096A0E8 != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    sub_10000B47C(v28, (uint64_t)qword_10097DAD8);
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v45(v15, v27, v9);
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.default.getter();
    int v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v32 = swift_slowAlloc();
      int v42 = v31;
      uint64_t v33 = (uint8_t *)v32;
      uint64_t v43 = swift_slowAlloc();
      uint64_t v53 = v43;
      uint64_t v44 = v20;
      *(_DWORD *)uint64_t v33 = 136315138;
      uint64_t v40 = v33 + 4;
      uint64_t v41 = v33;
      sub_100403238();
      uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v52 = sub_100254634(v34, v35, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v42, "Start key check flow, unlockDate: %s", v41, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v36 = v44;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      uint64_t v36 = v20;
    }
    sub_10000A7E8(v36, (uint64_t *)&unk_100975040);
    uint64_t v37 = v49;
    sub_10000A7E8(v49, (uint64_t *)&unk_100975040);
    uint64_t v38 = v51;
    v45((char *)v37, v51, v9);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v50)(v37, 0, 1, v9);
    v46((char *)a3 + v18[7], v38, v9);
    a1 = (uint64_t)v48;
  }
  return sub_100686148(a1, (uint64_t)a3 + v18[5], (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
}

uint64_t _s8KeyCheckV18InitialLockContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10097DBE0);
}

id sub_100680A54()
{
  return sub_100680ABC(_s8KeyCheckV18InitialLockContextVMa, (Class *)off_1008C6918);
}

uint64_t sub_100680A88(uint64_t a1, uint64_t a2)
{
  return sub_100680F5C(a1, a2, _s8KeyCheckV18InitialLockContextVMa, (Class *)off_1008C6918);
}

id sub_100680ABC(uint64_t (*a1)(void), Class *a2)
{
  uint64_t v4 = *(int *)(a1(0) + 32);
  uint64_t v5 = *(void **)(v2 + v4);
  if (v5)
  {
    id v6 = *(id *)(v2 + v4);
LABEL_5:
    id v8 = v5;
    return v6;
  }
  id result = [objc_allocWithZone(*a2) init];
  if (result)
  {
    *(void *)(v2 + v4) = result;
    id v6 = result;
    uint64_t v5 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_100680B3C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_10000A844(&qword_10096BBB0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1007706B0;
  if (qword_10096A0F0 != -1) {
    swift_once();
  }
  unint64_t v7 = 0xD00000000000002ALL;
  *(void *)(v6 + 56) = &type metadata for SDAuthentication.Operation.CheckIsBluetoothEnabled;
  *(void *)(v6 + 64) = &off_1009718E8;
  *(void *)(v6 + 96) = &type metadata for SDAuthentication.Operation.CheckRemoteDeviceOSVersionIsSupported;
  *(void *)(v6 + 104) = &off_100971888;
  *(void *)(v6 + 136) = &type metadata for SDAuthentication.Operation.CheckLocalSecurityPolicy;
  *(void *)(v6 + 144) = &off_100971848;
  *(void *)(v6 + 176) = &type metadata for SDAuthentication.Operation.CheckRegistered;
  *(void *)(v6 + 184) = &off_100971E88;
  *(void *)(v6 + 216) = &type metadata for SDAuthentication.Operation.SendConfirmation;
  *(void *)(v6 + 224) = &off_100971EC8;
  *a3 = v6;
  id v8 = (int *)_s8KeyCheckV21HandleKeyCheckContextVMa(0);
  uint64_t v9 = v8[8];
  *(uint64_t *)((char *)a3 + v9) = 0;
  *((unsigned char *)a3 + v8[9]) = 2;
  uint64_t v10 = _s8KeyCheckV17InitialKeyContextVMa(0);
  uint64_t v23 = a2;
  uint64_t v11 = (uint64_t)a3 + v8[5];
  sub_1006861B0(a2 + *(int *)(v10 + 20), v11, (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
  unsigned int v12 = [a1 hasUnlockDate];
  if (v12)
  {
    [a1 unlockDate];
    Date.init(timeIntervalSince1970:)();
    unint64_t v13 = 0x80000001007C62C0;
    if ([a1 hasRegistrationID])
    {
      id v14 = [a1 registrationID];
      if (v14)
      {
        uint64_t v15 = v14;
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;

        sub_100686218(v23, _s8KeyCheckV17InitialKeyContextVMa);
        uint64_t v19 = (uint64_t *)((char *)a3 + v8[7]);
        *uint64_t v19 = v16;
        v19[1] = v18;
        return;
      }
    }
  }
  else
  {
    unint64_t v7 = 0xD000000000000027;
    unint64_t v13 = 0x80000001007C6290;
  }
  sub_10024D280();
  swift_allocError();
  *(_DWORD *)uint64_t v20 = 1;
  *(void *)(v20 + 8) = v7;
  *(void *)(v20 + 16) = v13;
  swift_willThrow();

  sub_100686218(v23, _s8KeyCheckV17InitialKeyContextVMa);
  swift_bridgeObjectRelease();
  sub_100686218(v11, (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
  if (v12)
  {
    uint64_t v21 = (char *)a3 + v8[6];
    uint64_t v22 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  }
}

uint64_t sub_100680E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

id sub_100680EBC()
{
  return sub_100680ABC(_s8KeyCheckV21HandleKeyCheckContextVMa, (Class *)off_1008C68E0);
}

uint64_t sub_100680EF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1006861B0(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
}

uint64_t sub_100680F28(uint64_t a1, uint64_t a2)
{
  return sub_100680F5C(a1, a2, _s8KeyCheckV21HandleKeyCheckContextVMa, (Class *)off_1008C68E0);
}

uint64_t sub_100680F5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), Class *a4)
{
  id v4 = sub_100680ABC(a3, a4);
  id v5 = [v4 data];

  if (v5)
  {
    uint64_t v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

    return v6;
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v8 = 10;
    *(void *)(v8 + 8) = 0xD00000000000001ALL;
    *(void *)(v8 + 16) = 0x80000001007B72F0;
    return swift_willThrow();
  }
}

uint64_t sub_100681024@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_10000A844(&qword_10096BBB0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10076E7A0;
  if (qword_10096A0F0 != -1) {
    swift_once();
  }
  *(void *)(v6 + 56) = &type metadata for SDAuthentication.Operation.HandleSucceededResult;
  *(void *)(v6 + 64) = &off_100971EA8;
  *a3 = v6;
  if ([a1 hasSuccess])
  {
    uint64_t v7 = a2 + *(int *)(_s8KeyCheckV18InitialLockContextVMa(0) + 20);
    uint64_t v8 = _s8KeyCheckV25HandleConfirmationContextVMa(0);
    sub_1006861B0(v7, (uint64_t)a3 + *(int *)(v8 + 20), (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
    LOBYTE(v7) = [a1 success];

    uint64_t result = sub_100686218(a2, _s8KeyCheckV18InitialLockContextVMa);
    *((unsigned char *)a3 + *(int *)(v8 + 24)) = v7;
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v10 = 1;
    *(void *)(v10 + 8) = 0xD000000000000016;
    *(void *)(v10 + 16) = 0x80000001007B72D0;
    swift_willThrow();

    sub_100686218(a2, _s8KeyCheckV18InitialLockContextVMa);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1006811DC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v52 = a3;
  uint64_t v47 = _s8KeyCheckV25HandleConfirmationContextVMa(0);
  __chkstk_darwin(v47);
  uint64_t v51 = (uint64_t *)((char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_10000A844(&qword_10097DCB8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s8KeyCheckV18InitialLockContextVMa(0);
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v49 = (uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v50 = (uint64_t)&v46 - v11;
  uint64_t v48 = _s8KeyCheckV21HandleKeyCheckContextVMa(0);
  __chkstk_darwin(v48);
  unint64_t v13 = (uint64_t *)((char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_10000A844(&qword_10097DCC0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = _s8KeyCheckV17InitialKeyContextVMa(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v46 - v22;
  sub_100278C8C(a1, (uint64_t)v57);
  sub_10000A844(&qword_100977940);
  sub_10000B740(0, &qword_10096BDD0);
  if (!swift_dynamicCast())
  {
    uint64_t v30 = v56;
    sub_100278C8C(a1, (uint64_t)v57);
    sub_10000B740(0, &qword_10096BDE8);
    if (!swift_dynamicCast())
    {
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v41 = 10;
      *(void *)(v41 + 8) = 0xD00000000000001FLL;
      *(void *)(v41 + 16) = 0x80000001007B6FF0;
      swift_willThrow();
      return;
    }
    id v24 = v58;
    sub_100278C8C(v30, (uint64_t)v57);
    sub_10000A844(&qword_10096BDF0);
    uint64_t v31 = v54;
    int v32 = swift_dynamicCast();
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56);
    if (v32)
    {
      v33(v7, 0, 1, v31);
      uint64_t v34 = v50;
      sub_100686148((uint64_t)v7, v50, _s8KeyCheckV18InitialLockContextVMa);
      uint64_t v35 = v49;
      sub_1006861B0(v34, v49, _s8KeyCheckV18InitialLockContextVMa);
      id v24 = v24;
      uint64_t v36 = v51;
      uint64_t v37 = v55;
      sub_100681024(v24, v35, v51);
      if (!v37)
      {
        uint64_t v44 = v52;
        v52[3] = v47;
        v44[4] = (uint64_t)&off_1008E4A38;
        uint64_t v45 = sub_100278AE4(v44);
        sub_100686148((uint64_t)v36, (uint64_t)v45, _s8KeyCheckV25HandleConfirmationContextVMa);

        sub_100686218(v34, _s8KeyCheckV18InitialLockContextVMa);
        return;
      }
      uint64_t v28 = _s8KeyCheckV18InitialLockContextVMa;
      uint64_t v29 = v34;
      goto LABEL_9;
    }
    v33(v7, 1, 1, v31);
    sub_10000A7E8((uint64_t)v7, &qword_10097DCB8);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v38 = 10;
    unint64_t v39 = 0xD000000000000047;
    uint64_t v40 = "Invalid previous context as InitialLockContext, message may be replayed";
LABEL_13:
    *(void *)(v38 + 8) = v39;
    *(void *)(v38 + 16) = (unint64_t)(v40 - 32) | 0x8000000000000000;
    swift_willThrow();
    goto LABEL_14;
  }
  id v24 = v58;
  sub_100278C8C(v56, (uint64_t)v57);
  sub_10000A844(&qword_10096BDF0);
  int v25 = swift_dynamicCast();
  int v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  if (!v25)
  {
    v26(v16, 1, 1, v17);
    sub_10000A7E8((uint64_t)v16, &qword_10097DCC0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v38 = 10;
    unint64_t v39 = 0xD000000000000046;
    uint64_t v40 = "Invalid previous context as InitialKeyContext, message may be replayed";
    goto LABEL_13;
  }
  v26(v16, 0, 1, v17);
  sub_100686148((uint64_t)v16, (uint64_t)v23, _s8KeyCheckV17InitialKeyContextVMa);
  sub_1006861B0((uint64_t)v23, (uint64_t)v21, _s8KeyCheckV17InitialKeyContextVMa);
  id v24 = v24;
  uint64_t v27 = v55;
  sub_100680B3C(v24, (uint64_t)v21, v13);
  if (!v27)
  {
    int v42 = v52;
    v52[3] = v48;
    v42[4] = (uint64_t)&off_1008E4A20;
    uint64_t v43 = sub_100278AE4(v42);
    sub_100686148((uint64_t)v13, (uint64_t)v43, _s8KeyCheckV21HandleKeyCheckContextVMa);

    sub_100686218((uint64_t)v23, _s8KeyCheckV17InitialKeyContextVMa);
    return;
  }
  uint64_t v28 = _s8KeyCheckV17InitialKeyContextVMa;
  uint64_t v29 = (uint64_t)v23;
LABEL_9:
  sub_100686218(v29, v28);
LABEL_14:
}

uint64_t sub_1006818D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1006861B0(v1, a1, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
}

void sub_10068190C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

uint64_t sub_100681924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100681938);
}

uint64_t sub_100681938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SDAuthenticationCommonOperationInput();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1006819FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100681A10);
}

uint64_t sub_100681A10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SDAuthenticationCommonOperationInput();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t _s8KeyCheckV4FlowVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10097DB48);
}

uint64_t sub_100681AF0()
{
  uint64_t result = type metadata accessor for SDAuthenticationCommonOperationInput();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_100681B94(char *a1, char *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (char *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    unint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void *)(v11 - 8);
    unint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    uint64_t v85 = a3;
    uint64_t v86 = a2;
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v16 = v15[5];
    uint64_t v17 = &v9[v16];
    uint64_t v18 = &v10[v16];
    if (v13(&v10[v16], 1, v11))
    {
      uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    uint64_t v20 = v15[6];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    if (v13(&v10[v20], 1, v11))
    {
      uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v21, v22, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v21, 0, 1, v11);
    }
    uint64_t v24 = v15[7];
    int v25 = &v9[v24];
    int v26 = &v10[v24];
    if (v13(&v10[v24], 1, v11))
    {
      uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v25, v26, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
    }
    uint64_t v28 = v15[8];
    uint64_t v29 = &v9[v28];
    uint64_t v30 = &v10[v28];
    if (v13(&v10[v28], 1, v11))
    {
      uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v29, v30, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v29, 0, 1, v11);
    }
    uint64_t v32 = v15[9];
    uint64_t v33 = &v9[v32];
    uint64_t v34 = &v10[v32];
    if (v13(&v10[v32], 1, v11))
    {
      uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v33, v34, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v33, 0, 1, v11);
    }
    uint64_t v36 = v15[10];
    uint64_t v37 = &v9[v36];
    uint64_t v38 = &v10[v36];
    if (v13(&v10[v36], 1, v11))
    {
      uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v37, v38, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v37, 0, 1, v11);
    }
    uint64_t v40 = v15[11];
    uint64_t v41 = &v9[v40];
    int v42 = &v10[v40];
    if (v13(&v10[v40], 1, v11))
    {
      uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v41, v42, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v41, 0, 1, v11);
    }
    uint64_t v44 = v15[12];
    uint64_t v45 = &v9[v44];
    uint64_t v46 = &v10[v44];
    if (v13(&v10[v44], 1, v11))
    {
      uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v45, v46, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v45, 0, 1, v11);
    }
    v9[v15[13]] = v10[v15[13]];
    uint64_t v48 = v15[14];
    uint64_t v49 = &v9[v48];
    uint64_t v50 = &v10[v48];
    if (v13(&v10[v48], 1, v11))
    {
      uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v49, v50, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v49, 0, 1, v11);
    }
    uint64_t v52 = v15[15];
    uint64_t v53 = &v9[v52];
    uint64_t v54 = &v10[v52];
    if (v13(&v10[v52], 1, v11))
    {
      uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v53, v54, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v53, 0, 1, v11);
    }
    uint64_t v56 = v15[16];
    id v57 = &v9[v56];
    id v58 = &v10[v56];
    if (v13(&v10[v56], 1, v11))
    {
      uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v57, v58, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v57, 0, 1, v11);
    }
    uint64_t v60 = v15[17];
    id v61 = &v9[v60];
    id v62 = &v10[v60];
    if (v13(&v10[v60], 1, v11))
    {
      uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v61, v62, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v61, 0, 1, v11);
    }
    uint64_t v64 = v15[18];
    uint64_t v65 = &v9[v64];
    uint64_t v66 = &v10[v64];
    *(_DWORD *)uint64_t v65 = *(_DWORD *)v66;
    v65[4] = v66[4];
    v9[v15[19]] = v10[v15[19]];
    uint64_t v67 = v15[20];
    char v68 = &v9[v67];
    uint64_t v69 = &v10[v67];
    uint64_t v70 = *((void *)v69 + 1);
    *(void *)char v68 = *(void *)v69;
    *((void *)v68 + 1) = v70;
    uint64_t v71 = v15[21];
    uint64_t v72 = &v9[v71];
    uint64_t v73 = &v10[v71];
    uint64_t v74 = *((void *)v73 + 1);
    *(void *)uint64_t v72 = *(void *)v73;
    *((void *)v72 + 1) = v74;
    uint64_t v75 = v85[6];
    uint64_t v76 = &v7[v75];
    uint64_t v77 = &v86[v75];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v77, 1, v11))
    {
      uint64_t v78 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(&v7[v85[7]], &v86[v85[7]], v11);
    }
    else
    {
      uint64_t v79 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
      v79(v76, v77, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v76, 0, 1, v11);
      v79(&v7[v85[7]], &v86[v85[7]], v11);
    }
    uint64_t v80 = v85[8];
    uint64_t v81 = v85[9];
    uint64_t v82 = *(void **)&v86[v80];
    *(void *)&v7[v80] = v82;
    v7[v81] = v86[v81];
    id v83 = v82;
  }
  return v7;
}

void sub_1006825D8(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v9 = v4 + v8[5];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = v4 + v8[6];
  if (!v7(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = v4 + v8[7];
  if (!v7(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = v4 + v8[8];
  if (!v7(v12, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  }
  uint64_t v13 = v4 + v8[9];
  if (!v7(v13, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v5);
  }
  uint64_t v14 = v4 + v8[10];
  if (!v7(v14, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = v4 + v8[11];
  if (!v7(v15, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = v4 + v8[12];
  if (!v7(v16, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = v4 + v8[14];
  if (!v7(v17, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = v4 + v8[15];
  if (!v7(v18, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, v5);
  }
  uint64_t v19 = v4 + v8[16];
  if (!v7(v19, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = v4 + v8[17];
  if (!v7(v20, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v20, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = a1 + a2[6];
  unsigned int v22 = v7(v21, 1, v5);
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  if (!v22) {
    v23(v21, v5);
  }
  v23(a1 + a2[7], v5);
  uint64_t v24 = *(void **)(a1 + a2[8]);
}

char *sub_100682A3C(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  id v83 = a3;
  uint64_t v84 = a2;
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v14 = v13[5];
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  if (v11(&v8[v14], 1, v9))
  {
    uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v16, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
  }
  uint64_t v18 = v13[6];
  uint64_t v19 = &v7[v18];
  uint64_t v20 = &v8[v18];
  if (v11(&v8[v18], 1, v9))
  {
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v20, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  }
  uint64_t v22 = v13[7];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  if (v11(&v8[v22], 1, v9))
  {
    uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
  }
  uint64_t v26 = v13[8];
  uint64_t v27 = &v7[v26];
  uint64_t v28 = &v8[v26];
  if (v11(&v8[v26], 1, v9))
  {
    uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v27, v28, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
  }
  uint64_t v30 = v13[9];
  uint64_t v31 = &v7[v30];
  uint64_t v32 = &v8[v30];
  if (v11(&v8[v30], 1, v9))
  {
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v31, v32, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
  }
  uint64_t v34 = v13[10];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  if (v11(&v8[v34], 1, v9))
  {
    uint64_t v37 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
  }
  uint64_t v38 = v13[11];
  uint64_t v39 = &v7[v38];
  uint64_t v40 = &v8[v38];
  if (v11(&v8[v38], 1, v9))
  {
    uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v39, v40, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v9);
  }
  uint64_t v42 = v13[12];
  uint64_t v43 = &v7[v42];
  uint64_t v44 = &v8[v42];
  if (v11(&v8[v42], 1, v9))
  {
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v43, v44, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0, 1, v9);
  }
  v7[v13[13]] = v8[v13[13]];
  uint64_t v46 = v13[14];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  if (v11(&v8[v46], 1, v9))
  {
    uint64_t v49 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
  }
  uint64_t v50 = v13[15];
  uint64_t v51 = &v7[v50];
  uint64_t v52 = &v8[v50];
  if (v11(&v8[v50], 1, v9))
  {
    uint64_t v53 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v51, v52, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v51, 0, 1, v9);
  }
  uint64_t v54 = v13[16];
  uint64_t v55 = &v7[v54];
  uint64_t v56 = &v8[v54];
  if (v11(&v8[v54], 1, v9))
  {
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v55, v56, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v55, 0, 1, v9);
  }
  uint64_t v58 = v13[17];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  if (v11(&v8[v58], 1, v9))
  {
    uint64_t v61 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
  }
  uint64_t v62 = v13[18];
  uint64_t v63 = &v7[v62];
  uint64_t v64 = &v8[v62];
  *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
  v63[4] = v64[4];
  v7[v13[19]] = v8[v13[19]];
  uint64_t v65 = v13[20];
  uint64_t v66 = &v7[v65];
  uint64_t v67 = &v8[v65];
  uint64_t v68 = *((void *)v67 + 1);
  *(void *)uint64_t v66 = *(void *)v67;
  *((void *)v66 + 1) = v68;
  uint64_t v69 = v13[21];
  uint64_t v70 = &v7[v69];
  uint64_t v71 = &v8[v69];
  uint64_t v72 = *((void *)v71 + 1);
  *(void *)uint64_t v70 = *(void *)v71;
  *((void *)v70 + 1) = v72;
  uint64_t v73 = v83[6];
  uint64_t v74 = &a1[v73];
  uint64_t v75 = &v84[v73];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v75, 1, v9))
  {
    uint64_t v76 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(&a1[v83[7]], &v84[v83[7]], v9);
  }
  else
  {
    uint64_t v77 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v77(v74, v75, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v74, 0, 1, v9);
    v77(&a1[v83[7]], &v84[v83[7]], v9);
  }
  uint64_t v78 = v83[8];
  uint64_t v79 = v83[9];
  uint64_t v80 = *(void **)&v84[v78];
  *(void *)&a1[v78] = v80;
  a1[v79] = v84[v79];
  id v81 = v80;
  return a1;
}

char *sub_100683420(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  v110 = a2;
  v111 = a1;
  v109 = a3;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  id v83 = &v7[v82];
  uint64_t v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v83, v84, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v86)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v83, v84, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  os_log_type_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  int v91 = *(_DWORD *)v90;
  v89[4] = v90[4];
  *(_DWORD *)os_log_type_t v89 = v91;
  v7[v15[19]] = v8[v15[19]];
  uint64_t v92 = v15[20];
  char v93 = &v7[v92];
  uint64_t v94 = &v8[v92];
  *(void *)char v93 = *(void *)v94;
  *((void *)v93 + 1) = *((void *)v94 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v95 = v15[21];
  uint64_t v96 = &v7[v95];
  uint64_t v97 = &v8[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  *((void *)v96 + 1) = *((void *)v97 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v98 = v109[6];
  uint64_t v99 = &v111[v98];
  v100 = &v110[v98];
  int v101 = v11(&v111[v98], 1, v9);
  int v102 = v11(v100, 1, v9);
  if (!v101)
  {
    if (!v102)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v99, v100, v9);
      goto LABEL_85;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v99, v9);
    goto LABEL_84;
  }
  if (v102)
  {
LABEL_84:
    uint64_t v103 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v99, v100, *(void *)(*(void *)(v103 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v99, v100, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v99, 0, 1, v9);
LABEL_85:
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(&v111[v109[7]], &v110[v109[7]], v9);
  uint64_t v104 = v109[8];
  v105 = *(void **)&v111[v104];
  v106 = *(void **)&v110[v104];
  *(void *)&v111[v104] = v106;
  id v107 = v106;

  v111[v109[9]] = v110[v109[9]];
  return v111;
}

char *sub_100684380(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v72 = a3;
  int v73 = a2;
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  int v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v14 = v13[5];
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  if (v11(&v8[v14], 1, v9))
  {
    uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v16, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
  }
  uint64_t v18 = v13[6];
  int v19 = &v7[v18];
  int v20 = &v8[v18];
  if (v11(&v8[v18], 1, v9))
  {
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v20, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  }
  uint64_t v22 = v13[7];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  if (v11(&v8[v22], 1, v9))
  {
    uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
  }
  uint64_t v26 = v13[8];
  uint64_t v27 = &v7[v26];
  uint64_t v28 = &v8[v26];
  if (v11(&v8[v26], 1, v9))
  {
    uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v27, v28, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
  }
  uint64_t v30 = v13[9];
  int v31 = &v7[v30];
  int v32 = &v8[v30];
  if (v11(&v8[v30], 1, v9))
  {
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v31, v32, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
  }
  uint64_t v34 = v13[10];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  if (v11(&v8[v34], 1, v9))
  {
    uint64_t v37 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
  }
  uint64_t v38 = v13[11];
  uint64_t v39 = &v7[v38];
  uint64_t v40 = &v8[v38];
  if (v11(&v8[v38], 1, v9))
  {
    uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v39, v40, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v9);
  }
  uint64_t v42 = v13[12];
  int v43 = &v7[v42];
  int v44 = &v8[v42];
  if (v11(&v8[v42], 1, v9))
  {
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v43, v44, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0, 1, v9);
  }
  v7[v13[13]] = v8[v13[13]];
  uint64_t v46 = v13[14];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  if (v11(&v8[v46], 1, v9))
  {
    uint64_t v49 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
  }
  uint64_t v50 = v13[15];
  uint64_t v51 = &v7[v50];
  uint64_t v52 = &v8[v50];
  if (v11(&v8[v50], 1, v9))
  {
    uint64_t v53 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v51, v52, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v51, 0, 1, v9);
  }
  uint64_t v54 = v13[16];
  int v55 = &v7[v54];
  int v56 = &v8[v54];
  if (v11(&v8[v54], 1, v9))
  {
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v55, v56, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v55, 0, 1, v9);
  }
  uint64_t v58 = v13[17];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  if (v11(&v8[v58], 1, v9))
  {
    uint64_t v61 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
  }
  uint64_t v62 = v13[18];
  uint64_t v63 = &v7[v62];
  uint64_t v64 = &v8[v62];
  *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
  v63[4] = v64[4];
  v7[v13[19]] = v8[v13[19]];
  *(_OWORD *)&v7[v13[20]] = *(_OWORD *)&v8[v13[20]];
  *(_OWORD *)&v7[v13[21]] = *(_OWORD *)&v8[v13[21]];
  uint64_t v65 = v72[6];
  uint64_t v66 = &a1[v65];
  int v67 = &v73[v65];
  if (v11(&v73[v65], 1, v9))
  {
    uint64_t v68 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&a1[v72[7]], &v73[v72[7]], v9);
  }
  else
  {
    uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v69(v66, v67, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v66, 0, 1, v9);
    v69(&a1[v72[7]], &v73[v72[7]], v9);
  }
  uint64_t v70 = v72[9];
  *(void *)&a1[v72[8]] = *(void *)&v73[v72[8]];
  a1[v70] = v73[v70];
  return a1;
}

char *sub_100684D3C(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  v111 = a2;
  v112 = a1;
  v110 = a3;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  id v83 = &v7[v82];
  uint64_t v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v83, v84, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v86)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v83, v84, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  os_log_type_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  *(_DWORD *)os_log_type_t v89 = *(_DWORD *)v90;
  v89[4] = v90[4];
  v7[v15[19]] = v8[v15[19]];
  uint64_t v91 = v15[20];
  uint64_t v92 = &v7[v91];
  char v93 = &v8[v91];
  uint64_t v95 = *(void *)v93;
  uint64_t v94 = *((void *)v93 + 1);
  *(void *)uint64_t v92 = v95;
  *((void *)v92 + 1) = v94;
  swift_bridgeObjectRelease();
  uint64_t v96 = v15[21];
  uint64_t v97 = &v7[v96];
  uint64_t v98 = &v8[v96];
  uint64_t v100 = *(void *)v98;
  uint64_t v99 = *((void *)v98 + 1);
  *(void *)uint64_t v97 = v100;
  *((void *)v97 + 1) = v99;
  swift_bridgeObjectRelease();
  uint64_t v101 = v110[6];
  int v102 = &v112[v101];
  uint64_t v103 = &v111[v101];
  int v104 = v11(&v112[v101], 1, v9);
  int v105 = v11(v103, 1, v9);
  if (!v104)
  {
    if (!v105)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v102, v103, v9);
      goto LABEL_85;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v102, v9);
    goto LABEL_84;
  }
  if (v105)
  {
LABEL_84:
    uint64_t v106 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v102, v103, *(void *)(*(void *)(v106 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v102, v103, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v102, 0, 1, v9);
LABEL_85:
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(&v112[v110[7]], &v111[v110[7]], v9);
  uint64_t v107 = v110[8];
  v108 = *(void **)&v112[v107];
  *(void *)&v112[v107] = *(void *)&v111[v107];

  v112[v110[9]] = v111[v110[9]];
  return v112;
}

uint64_t sub_100685C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100685C84);
}

uint64_t sub_100685C84(char *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    return v13(&a1[v11], a2, v9);
  }
  uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_9;
  }
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = &a1[a3[7]];

  return v15(v17, a2, v16);
}

uint64_t sub_100685E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100685E14);
}

char *sub_100685E14(char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
    return result;
  }
  uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (char *)v13(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_7;
  }
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = &v5[a4[7]];

  return (char *)v15(v17, a2, a2, v16);
}

void sub_100685F90()
{
  type metadata accessor for SDAuthenticationSessionMetrics();
  if (v0 <= 0x3F)
  {
    sub_100271710();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Date();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1006860B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006860CC);
}

uint64_t sub_1006860D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006860E4);
}

uint64_t _s8KeyCheckV17InitialKeyContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10097DC80);
}

uint64_t _s8KeyCheckV25HandleConfirmationContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10097DDC0);
}

uint64_t _s8KeyCheckV21HandleKeyCheckContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10097DD20);
}

uint64_t sub_100686148(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1006861B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100686218(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_100686278(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a3[5];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for Date();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    int v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v14 = v13[5];
    uint64_t v15 = &v7[v14];
    uint64_t v16 = &v8[v14];
    if (v11(&v8[v14], 1, v9))
    {
      uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v16, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
    }
    uint64_t v18 = v13[6];
    int v19 = &v7[v18];
    int v20 = &v8[v18];
    if (v11(&v8[v18], 1, v9))
    {
      uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v20, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
    }
    uint64_t v22 = v13[7];
    uint64_t v23 = &v7[v22];
    uint64_t v24 = &v8[v22];
    if (v11(&v8[v22], 1, v9))
    {
      uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
    }
    uint64_t v26 = v13[8];
    uint64_t v27 = &v7[v26];
    uint64_t v28 = &v8[v26];
    if (v11(&v8[v26], 1, v9))
    {
      uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v27, v28, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
    }
    uint64_t v30 = v13[9];
    int v31 = &v7[v30];
    int v32 = &v8[v30];
    if (v11(&v8[v30], 1, v9))
    {
      uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v31, v32, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
    }
    uint64_t v34 = v13[10];
    uint64_t v35 = &v7[v34];
    uint64_t v36 = &v8[v34];
    if (v11(&v8[v34], 1, v9))
    {
      uint64_t v37 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
    }
    uint64_t v38 = v13[11];
    uint64_t v39 = &v7[v38];
    uint64_t v40 = &v8[v38];
    if (v11(&v8[v38], 1, v9))
    {
      uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v39, v40, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v9);
    }
    uint64_t v42 = v13[12];
    int v43 = &v7[v42];
    int v44 = &v8[v42];
    if (v11(&v8[v42], 1, v9))
    {
      uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v43, v44, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0, 1, v9);
    }
    v7[v13[13]] = v8[v13[13]];
    uint64_t v46 = v13[14];
    uint64_t v47 = &v7[v46];
    uint64_t v48 = &v8[v46];
    if (v11(&v8[v46], 1, v9))
    {
      uint64_t v49 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
    }
    uint64_t v50 = v13[15];
    uint64_t v51 = &v7[v50];
    uint64_t v52 = &v8[v50];
    if (v11(&v8[v50], 1, v9))
    {
      uint64_t v53 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v51, v52, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v51, 0, 1, v9);
    }
    uint64_t v54 = v13[16];
    int v55 = &v7[v54];
    int v56 = &v8[v54];
    if (v11(&v8[v54], 1, v9))
    {
      uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v55, v56, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v55, 0, 1, v9);
    }
    uint64_t v58 = v13[17];
    uint64_t v59 = &v7[v58];
    uint64_t v60 = &v8[v58];
    if (v11(&v8[v58], 1, v9))
    {
      uint64_t v61 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
    }
    uint64_t v62 = v13[18];
    uint64_t v63 = &v7[v62];
    uint64_t v64 = &v8[v62];
    *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
    v63[4] = v64[4];
    v7[v13[19]] = v8[v13[19]];
    uint64_t v65 = v13[20];
    uint64_t v66 = &v7[v65];
    int v67 = &v8[v65];
    uint64_t v68 = *((void *)v67 + 1);
    *(void *)uint64_t v66 = *(void *)v67;
    *((void *)v66 + 1) = v68;
    uint64_t v69 = v13[21];
    uint64_t v70 = &v7[v69];
    uint64_t v71 = &v8[v69];
    uint64_t v72 = *((void *)v71 + 1);
    *(void *)uint64_t v70 = *(void *)v71;
    *((void *)v70 + 1) = v72;
    uint64_t v73 = a3[6];
    int v74 = (char *)v5 + v73;
    uint64_t v75 = (char *)a2 + v73;
    uint64_t v76 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v76(v74, v75, v9);
    uint64_t v77 = a3[7];
    uint64_t v78 = a3[8];
    int v79 = (void *)((char *)v5 + v77);
    int v80 = (void *)((char *)a2 + v77);
    uint64_t v81 = v80[1];
    *int v79 = *v80;
    v79[1] = v81;
    uint64_t v82 = *(void **)((char *)a2 + v78);
    *(void *)((char *)v5 + v78) = v82;
    *((unsigned char *)v5 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    id v83 = v82;
  }
  return v5;
}

void sub_100686C34(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v9 = v4 + v8[5];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = v4 + v8[6];
  if (!v7(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = v4 + v8[7];
  if (!v7(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = v4 + v8[8];
  if (!v7(v12, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  }
  uint64_t v13 = v4 + v8[9];
  if (!v7(v13, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v5);
  }
  uint64_t v14 = v4 + v8[10];
  if (!v7(v14, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = v4 + v8[11];
  if (!v7(v15, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = v4 + v8[12];
  if (!v7(v16, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = v4 + v8[14];
  if (!v7(v17, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = v4 + v8[15];
  if (!v7(v18, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, v5);
  }
  uint64_t v19 = v4 + v8[16];
  if (!v7(v19, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = v4 + v8[17];
  if (!v7(v20, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v20, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1 + a2[6], v5);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void **)(a1 + a2[8]);
}

void *sub_100687070(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v4 = a3[5];
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  uint64_t v22 = &v6[v20];
  if (v9(&v6[v20], 1, v7))
  {
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
  }
  uint64_t v24 = v11[8];
  uint64_t v25 = &v5[v24];
  uint64_t v26 = &v6[v24];
  if (v9(&v6[v24], 1, v7))
  {
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v9(&v6[v28], 1, v7))
  {
    uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
  }
  uint64_t v32 = v11[10];
  uint64_t v33 = &v5[v32];
  uint64_t v34 = &v6[v32];
  if (v9(&v6[v32], 1, v7))
  {
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
  }
  uint64_t v36 = v11[11];
  uint64_t v37 = &v5[v36];
  uint64_t v38 = &v6[v36];
  if (v9(&v6[v36], 1, v7))
  {
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
  }
  uint64_t v40 = v11[12];
  uint64_t v41 = &v5[v40];
  uint64_t v42 = &v6[v40];
  if (v9(&v6[v40], 1, v7))
  {
    uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
  }
  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  uint64_t v45 = &v5[v44];
  uint64_t v46 = &v6[v44];
  if (v9(&v6[v44], 1, v7))
  {
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
  }
  uint64_t v48 = v11[15];
  uint64_t v49 = &v5[v48];
  uint64_t v50 = &v6[v48];
  if (v9(&v6[v48], 1, v7))
  {
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
  }
  uint64_t v52 = v11[16];
  uint64_t v53 = &v5[v52];
  uint64_t v54 = &v6[v52];
  if (v9(&v6[v52], 1, v7))
  {
    uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v7);
  }
  uint64_t v56 = v11[17];
  uint64_t v57 = &v5[v56];
  uint64_t v58 = &v6[v56];
  if (v9(&v6[v56], 1, v7))
  {
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0, 1, v7);
  }
  uint64_t v60 = v11[18];
  uint64_t v61 = &v5[v60];
  uint64_t v62 = &v6[v60];
  *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  v5[v11[19]] = v6[v11[19]];
  uint64_t v63 = v11[20];
  uint64_t v64 = &v5[v63];
  uint64_t v65 = &v6[v63];
  uint64_t v66 = *((void *)v65 + 1);
  *(void *)uint64_t v64 = *(void *)v65;
  *((void *)v64 + 1) = v66;
  uint64_t v67 = v11[21];
  uint64_t v68 = &v5[v67];
  uint64_t v69 = &v6[v67];
  uint64_t v70 = *((void *)v69 + 1);
  *(void *)uint64_t v68 = *(void *)v69;
  *((void *)v68 + 1) = v70;
  uint64_t v71 = a3[6];
  uint64_t v72 = (char *)a1 + v71;
  uint64_t v73 = (char *)a2 + v71;
  int v74 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v74(v72, v73, v7);
  uint64_t v75 = a3[7];
  uint64_t v76 = a3[8];
  uint64_t v77 = (void *)((char *)a1 + v75);
  uint64_t v78 = (void *)((char *)a2 + v75);
  uint64_t v79 = v78[1];
  *uint64_t v77 = *v78;
  v77[1] = v79;
  int v80 = *(void **)((char *)a2 + v76);
  *(void *)((char *)a1 + v76) = v80;
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  id v81 = v80;
  return a1;
}

char *sub_1006879CC(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v106 = a2;
  uint64_t v6 = a3[5];
  uint64_t v107 = a1;
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  id v83 = &v7[v82];
  uint64_t v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (!v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v83, v84, v9);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
    goto LABEL_78;
  }
  if (v86)
  {
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v83, v84, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  os_log_type_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  int v91 = *(_DWORD *)v90;
  v89[4] = v90[4];
  *(_DWORD *)os_log_type_t v89 = v91;
  v7[v15[19]] = v8[v15[19]];
  uint64_t v92 = v15[20];
  char v93 = &v7[v92];
  uint64_t v94 = &v8[v92];
  *(void *)char v93 = *(void *)v94;
  *((void *)v93 + 1) = *((void *)v94 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v95 = v15[21];
  uint64_t v96 = &v7[v95];
  uint64_t v97 = &v8[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  *((void *)v96 + 1) = *((void *)v97 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(&v107[a3[6]], &v106[a3[6]], v9);
  uint64_t v98 = a3[7];
  uint64_t v99 = &v107[v98];
  uint64_t v100 = &v106[v98];
  *(void *)uint64_t v99 = *(void *)v100;
  *((void *)v99 + 1) = *((void *)v100 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v101 = a3[8];
  int v102 = *(void **)&v107[v101];
  uint64_t v103 = *(void **)&v106[v101];
  *(void *)&v107[v101] = v103;
  id v104 = v103;

  v107[a3[9]] = v106[a3[9]];
  return v107;
}

char *sub_10068885C(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = a3[5];
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v12 = v11[5];
  int v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  uint64_t v22 = &v6[v20];
  if (v9(&v6[v20], 1, v7))
  {
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
  }
  uint64_t v24 = v11[8];
  int v25 = &v5[v24];
  int v26 = &v6[v24];
  if (v9(&v6[v24], 1, v7))
  {
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v9(&v6[v28], 1, v7))
  {
    uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
  }
  uint64_t v32 = v11[10];
  uint64_t v33 = &v5[v32];
  uint64_t v34 = &v6[v32];
  if (v9(&v6[v32], 1, v7))
  {
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
  }
  uint64_t v36 = v11[11];
  int v37 = &v5[v36];
  int v38 = &v6[v36];
  if (v9(&v6[v36], 1, v7))
  {
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
  }
  uint64_t v40 = v11[12];
  uint64_t v41 = &v5[v40];
  uint64_t v42 = &v6[v40];
  if (v9(&v6[v40], 1, v7))
  {
    uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
  }
  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  uint64_t v45 = &v5[v44];
  uint64_t v46 = &v6[v44];
  if (v9(&v6[v44], 1, v7))
  {
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
  }
  uint64_t v48 = v11[15];
  int v49 = &v5[v48];
  int v50 = &v6[v48];
  if (v9(&v6[v48], 1, v7))
  {
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
  }
  uint64_t v52 = v11[16];
  uint64_t v53 = &v5[v52];
  uint64_t v54 = &v6[v52];
  if (v9(&v6[v52], 1, v7))
  {
    uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v7);
  }
  uint64_t v56 = v11[17];
  uint64_t v57 = &v5[v56];
  uint64_t v58 = &v6[v56];
  if (v9(&v6[v56], 1, v7))
  {
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
    uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  }
  else
  {
    uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v60(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0, 1, v7);
  }
  uint64_t v61 = v11[18];
  int v62 = &v5[v61];
  uint64_t v63 = &v6[v61];
  *(_DWORD *)int v62 = *(_DWORD *)v63;
  v62[4] = v63[4];
  v5[v11[19]] = v6[v11[19]];
  *(_OWORD *)&v5[v11[20]] = *(_OWORD *)&v6[v11[20]];
  *(_OWORD *)&v5[v11[21]] = *(_OWORD *)&v6[v11[21]];
  v60(&a1[a3[6]], &a2[a3[6]], v7);
  uint64_t v64 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(void *)&a1[v64] = *(void *)&a2[v64];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

char *sub_100689180(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  v109 = a2;
  uint64_t v6 = a3[5];
  v110 = a1;
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  id v83 = &v7[v82];
  uint64_t v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (!v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v83, v84, v9);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
    goto LABEL_78;
  }
  if (v86)
  {
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v83, v84, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  os_log_type_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  *(_DWORD *)os_log_type_t v89 = *(_DWORD *)v90;
  v89[4] = v90[4];
  v7[v15[19]] = v8[v15[19]];
  uint64_t v91 = v15[20];
  uint64_t v92 = &v7[v91];
  char v93 = &v8[v91];
  uint64_t v95 = *(void *)v93;
  uint64_t v94 = *((void *)v93 + 1);
  *(void *)uint64_t v92 = v95;
  *((void *)v92 + 1) = v94;
  swift_bridgeObjectRelease();
  uint64_t v96 = v15[21];
  uint64_t v97 = &v7[v96];
  uint64_t v98 = &v8[v96];
  uint64_t v100 = *(void *)v98;
  uint64_t v99 = *((void *)v98 + 1);
  *(void *)uint64_t v97 = v100;
  *((void *)v97 + 1) = v99;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(&v110[a3[6]], &v109[a3[6]], v9);
  uint64_t v101 = a3[7];
  int v102 = &v110[v101];
  uint64_t v103 = (uint64_t *)&v109[v101];
  uint64_t v105 = *v103;
  uint64_t v104 = v103[1];
  *(void *)int v102 = v105;
  *((void *)v102 + 1) = v104;
  swift_bridgeObjectRelease();
  uint64_t v106 = a3[8];
  uint64_t v107 = *(void **)&v110[v106];
  *(void *)&v110[v106] = *(void *)&v109[v106];

  v110[a3[9]] = v109[a3[9]];
  return v110;
}

uint64_t sub_100689FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100689FE8);
}

uint64_t sub_100689FE8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for Date();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10068A114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10068A128);
}

void *sub_10068A128(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for Date();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_10068A254()
{
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

ValueMetadata *_s8KeyCheckVMa()
{
  return &_s8KeyCheckVN;
}

uint64_t sub_10068A358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10068A36C);
}

uint64_t sub_10068A370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10068A384);
}

uint64_t sub_10068A388()
{
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for SDAirDropPeerPaymentReceiver()
{
  return self;
}

uint64_t sub_10068A454(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  return _swift_task_switch(sub_10068A474, 0, 0);
}

uint64_t sub_10068A474()
{
  uint64_t v1 = *(void *)(v0 + 104);
  unint64_t v2 = sub_100245A7C((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v0 + 80) = 0;
  *(void *)(v0 + 88) = 0xE000000000000000;
  Date.timeIntervalSinceReferenceDate.getter();
  Double.write<A>(to:)();
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 88);
  *(void *)(v0 + 40) = &type metadata for String;
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 24) = v4;
  sub_100249444((_OWORD *)(v0 + 16), (_OWORD *)(v0 + 48));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100591338((_OWORD *)(v0 + 48), 0x6144706F6F426673, 0xED000079654B6574, isUniquelyReferenced_nonNull_native);
  *(void *)(v0 + 112) = v2;
  swift_bridgeObjectRelease();
  id v6 = [objc_allocWithZone((Class)sub_10000A844(&qword_10097DEA0)) init];
  *(void *)(v0 + 120) = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v7;
  v7[2] = v6;
  v7[3] = 0;
  v7[4] = 0;
  v7[5] = 0xD00000000000001BLL;
  v7[6] = 0x80000001007C6360;
  v7[7] = 0xD00000000000002ELL;
  v7[8] = 0x80000001007C6330;
  v7[9] = v2;
  v7[10] = 0;
  v7[11] = v1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v8;
  uint64_t v9 = sub_10000A844(&qword_10096C4C0);
  *uint64_t v8 = v0;
  v8[1] = sub_10068A69C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 152, 0, 0, 0xD00000000000006ALL, 0x80000001007B69E0, sub_10068A844, v7, v9);
}

uint64_t sub_10068A69C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10068A7D0;
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + 120);
    swift_bridgeObjectRelease();

    swift_task_dealloc();
    uint64_t v3 = sub_100329A44;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10068A7D0()
{
  uint64_t v1 = *(void **)(v0 + 120);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

double sub_10068A844(uint64_t a1)
{
  *(void *)&double result = sub_1006A1FF8(a1, (void *)v1[2], (void *)v1[3], (void *)v1[4], (void *)v1[5], v1[6], (void *)v1[7], (void *)v1[8], v1[9], v1[10], v1[11]).n128_u64[0];
  return result;
}

uint64_t sub_10068A884()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097DEA8);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097DEA8);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10068A94C(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropReceive.AskRequest();
  v2[15] = v4;
  v2[16] = *(void *)(v4 - 8);
  v2[17] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_10068AB14, v5, 0);
}

void sub_10068AB14()
{
  int v80 = v0;
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v4 = v0[15];
  uint64_t v5 = *(void *)(SFAirDropReceive.AskRequest.urlItems.getter() + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  uint64_t v7 = v0[16];
  uint64_t v6 = v0[17];
  uint64_t v8 = v0[15];
  if (v5 != 1)
  {
    (*(void (**)(void, void))(v7 + 8))(v0[17], v0[15]);
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(SFAirDropReceive.AskRequest.files.getter() + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  if (!v9)
  {
    uint64_t v10 = v0[10];
    uint64_t v11 = v0[11];
    uint64_t v12 = v0[9];
    uint64_t v13 = SFAirDropReceive.AskRequest.urlItems.getter();
    sub_1002E5BA0(v13, v12);
    swift_bridgeObjectRelease();
    uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    if (v14(v12, 1, v10) == 1)
    {
      sub_10026114C(v0[9]);
      goto LABEL_34;
    }
    uint64_t v17 = *(void (**)(uint64_t, void, uint64_t))(v0[11] + 32);
    v17(v0[14], v0[9], v0[10]);
    uint64_t v18 = self;
    id v19 = [v18 defaultWorkspace];
    if (!v19) {
      goto LABEL_38;
    }
    uint64_t v21 = v19;
    URL._bridgeToObjectiveC()(v20);
    uint64_t v23 = v22;
    id v24 = [v21 applicationsAvailableForOpeningURL:v22];

    if (!v24) {
      goto LABEL_21;
    }
    sub_10068C250();
    unint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v25 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v36) {
        goto LABEL_14;
      }
    }
    else if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_14:
      if ((v25 & 0xC000000000000001) != 0)
      {
        id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_17:
        uint64_t v27 = v26;
        swift_bridgeObjectRelease();
        id v28 = [v27 bundleIdentifier];

        if (v28)
        {
          uint64_t v29 = v0[14];
          uint64_t v30 = v0[10];
          uint64_t v31 = v0[11];
          uint64_t v32 = v0[5];
          uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v35 = v34;

          (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
          *(void *)(v32 + 16) = v33;
          *(void *)(v32 + 24) = v35;
          swift_bridgeObjectRelease();
          goto LABEL_34;
        }
LABEL_21:
        id v37 = [v18 defaultWorkspace];
        if (v37)
        {
          uint64_t v39 = v37;
          URL._bridgeToObjectiveC()(v38);
          uint64_t v41 = v40;
          id v42 = [v39 URLOverrideForURL:v40];

          if (v42)
          {
            static URL._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v43 = 0;
          }
          else
          {
            uint64_t v43 = 1;
          }
          uint64_t v44 = v0[10];
          uint64_t v46 = v0[7];
          uint64_t v45 = v0[8];
          uint64_t v47 = v0[6];
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[11] + 56))(v46, v43, 1, v44);
          sub_1003D2B28(v46, v45);
          sub_1003AFF3C(v45, v47);
          if (v14(v47, 1, v44) == 1)
          {
            sub_10026114C(v0[6]);
          }
          else
          {
            uint64_t v48 = v0[13];
            uint64_t v49 = v0[10];
            uint64_t v50 = v0[11];
            v17(v48, v0[6], v49);
            uint64_t v51 = URL.scheme.getter();
            uint64_t v53 = v52;
            uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
            v54(v48, v49);
            if (v53)
            {
              uint64_t v55 = v0[14];
              uint64_t v56 = v0[10];
              uint64_t v57 = v0[5];
              sub_10026114C(v0[8]);
              v54(v55, v56);
              *(void *)(v57 + 16) = v51;
              *(void *)(v57 + 24) = v53;
              swift_bridgeObjectRelease();
              goto LABEL_34;
            }
          }
          if (qword_10096A0F8 != -1) {
            swift_once();
          }
          uint64_t v58 = v0[14];
          uint64_t v60 = v0[11];
          uint64_t v59 = v0[12];
          uint64_t v61 = v0[10];
          uint64_t v62 = type metadata accessor for Logger();
          sub_10000B47C(v62, (uint64_t)qword_10097DEA8);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16))(v59, v58, v61);
          uint64_t v63 = Logger.logObject.getter();
          os_log_type_t v64 = static os_log_type_t.error.getter();
          BOOL v65 = os_log_type_enabled(v63, v64);
          uint64_t v66 = v0[14];
          uint64_t v68 = v0[11];
          uint64_t v67 = v0[12];
          uint64_t v69 = v0[10];
          uint64_t v70 = v0[8];
          if (v65)
          {
            uint64_t v78 = v0[14];
            uint64_t v71 = (uint8_t *)swift_slowAlloc();
            uint64_t v79 = swift_slowAlloc();
            *(_DWORD *)uint64_t v71 = 136315138;
            sub_100497CD0();
            uint64_t v72 = dispatch thunk of CustomStringConvertible.description.getter();
            v0[3] = sub_100254634(v72, v73, &v79);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            int v74 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
            v74(v67, v69);
            _os_log_impl((void *)&_mh_execute_header, v63, v64, "Failed to get item type from url. {url: %s}", v71, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            sub_10026114C(v70);
            v74(v78, v69);
          }
          else
          {

            uint64_t v75 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
            v75(v67, v69);
            sub_10026114C(v70);
            v75(v66, v69);
          }
LABEL_34:
          id v76 = objc_allocWithZone((Class)LSApplicationRecord);
          id v77 = sub_1006A5458(0xD000000000000012, 0x80000001007B5AB0, 1);
          if (v77)
          {

            uint64_t v15 = 1;
            goto LABEL_7;
          }
          goto LABEL_6;
        }
LABEL_39:
        __break(1u);
        return;
      }
      if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v26 = *(id *)(v25 + 32);
        goto LABEL_17;
      }
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
LABEL_6:
  uint64_t v15 = 0;
LABEL_7:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (void (*)(uint64_t))v0[1];
  v16(v15);
}

uint64_t sub_10068B38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  v5[9] = a5;
  v5[7] = a1;
  uint64_t v6 = type metadata accessor for URL();
  v5[10] = v6;
  v5[11] = *(void *)(v6 - 8);
  v5[12] = swift_task_alloc();
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  return _swift_task_switch(sub_10068B51C, v7, 0);
}

id sub_10068B51C()
{
  uint64_t v80 = v0;
  unint64_t v1 = 0xD000000000000014;
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 64);
  sub_10000A844((uint64_t *)&unk_10096EE60);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10076E7A0;
  uint64_t v9 = *(void *)(v6 + 16);
  uint64_t v8 = *(void *)(v6 + 24);
  *(void *)(v7 + 56) = &type metadata for String;
  *(void *)(v7 + 64) = sub_1002E695C();
  *(void *)(v7 + 32) = v9;
  *(void *)(v7 + 40) = v8;
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  URL.init(string:)();
  swift_bridgeObjectRelease();
  sub_1003AFF3C(v3, v2);
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v10(v2, 1, v5) == 1)
  {
    sub_10026114C(*(void *)(v0 + 128));
    if (qword_10096A0F8 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000B47C(v11, (uint64_t)qword_10097DEA8);
    swift_bridgeObjectRetain_n();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v12, v13))
    {
      uint64_t v41 = *(void *)(v0 + 136);

      swift_bridgeObjectRelease_n();
LABEL_22:
      uint64_t v72 = v41;
LABEL_23:
      sub_10026114C(v72);
      char v57 = 0;
      goto LABEL_24;
    }
    uint64_t v14 = *(void *)(v0 + 72);
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    v79[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v16 = *(void *)(v14 + 16);
    uint64_t v17 = *(void *)(v0 + 120);
    uint64_t v18 = *(void *)(v0 + 80);
    uint64_t v19 = *(void *)(v0 + 88);
    if (v16)
    {
      (*(void (**)(void, unint64_t, void))(v19 + 16))(*(void *)(v0 + 120), *(void *)(v0 + 72)+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80)), *(void *)(v0 + 80));
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
      if (v10(v17, 1, v18) != 1)
      {
        uint64_t v20 = *(void *)(v0 + 120);
        uint64_t v21 = *(void *)(v0 + 80);
        uint64_t v22 = *(void *)(v0 + 88);
        unint64_t v1 = URL.description.getter();
        unint64_t v24 = v23;
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
LABEL_21:
        uint64_t v41 = *(void *)(v0 + 136);
        *(void *)(v0 + 16) = sub_100254634(v1, v24, v79);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Unable to build app store search URL with item: %s", v15, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        goto LABEL_22;
      }
    }
    else
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(v19 + 56))(*(void *)(v0 + 120), 1, 1, *(void *)(v0 + 80));
    }
    sub_10026114C(*(void *)(v0 + 120));
    unint64_t v24 = 0x80000001007BEA00;
    goto LABEL_21;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 88) + 32))(*(void *)(v0 + 112), *(void *)(v0 + 128), *(void *)(v0 + 80));
  if (qword_10096A0F8 != -1) {
    swift_once();
  }
  uint64_t v26 = *(void *)(v0 + 104);
  uint64_t v25 = *(void *)(v0 + 112);
  uint64_t v27 = *(void *)(v0 + 80);
  uint64_t v28 = *(void *)(v0 + 88);
  uint64_t v29 = type metadata accessor for Logger();
  sub_10000B47C(v29, (uint64_t)qword_10097DEA8);
  uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
  v30(v26, v25, v27);
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  BOOL v33 = os_log_type_enabled(v31, v32);
  uint64_t v34 = *(void *)(v0 + 104);
  uint64_t v36 = *(void *)(v0 + 80);
  uint64_t v35 = *(void *)(v0 + 88);
  id v77 = v30;
  if (v33)
  {
    id v37 = (uint8_t *)swift_slowAlloc();
    v79[0] = swift_slowAlloc();
    *(_DWORD *)id v37 = 136315138;
    sub_100497CD0();
    uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 48) = sub_100254634(v38, v39, v79);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v40(v34, v36);
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Launching app store with URL: %s", v37, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v40(v34, v36);
  }

  id v42 = self;
  URL._bridgeToObjectiveC()(v43);
  uint64_t v45 = v44;
  [v42 logReceiverBundleID:0 forURL:v44];

  id result = [self defaultWorkspace];
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v48 = result;
  URL._bridgeToObjectiveC()(v47);
  uint64_t v50 = v49;
  *(void *)(v0 + 24) = 0;
  id v51 = [v48 openURL:v49 configuration:0 error:v0 + 24];

  uint64_t v52 = *(void **)(v0 + 24);
  uint64_t v53 = *(void *)(v0 + 80);
  if (!v51)
  {
    uint64_t v58 = *(void *)(v0 + 112);
    uint64_t v59 = *(void *)(v0 + 96);
    id v60 = v52;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    v77(v59, v58, v53);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.error.getter();
    BOOL v63 = os_log_type_enabled(v61, v62);
    uint64_t v64 = *(void *)(v0 + 136);
    uint64_t v65 = *(void *)(v0 + 112);
    uint64_t v66 = *(void *)(v0 + 96);
    uint64_t v67 = *(void *)(v0 + 80);
    if (v63)
    {
      log = v61;
      uint64_t v78 = *(void *)(v0 + 136);
      os_log_type_t type = v62;
      uint64_t v68 = swift_slowAlloc();
      int v74 = (void *)swift_slowAlloc();
      v79[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v68 = 136315394;
      sub_100497CD0();
      uint64_t v69 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 32) = sub_100254634(v69, v70, v79);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v40(v66, v67);
      *(_WORD *)(v68 + 12) = 2112;
      swift_errorRetain();
      uint64_t v71 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 40) = v71;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v74 = v71;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, log, type, "Failed to launch app store with URL %s: %@", (uint8_t *)v68, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      v40(v65, v67);
      uint64_t v72 = v78;
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      v40(v66, v67);
      swift_errorRelease();
      v40(v65, v67);
      uint64_t v72 = v64;
    }
    goto LABEL_23;
  }
  uint64_t v54 = *(void *)(v0 + 136);
  uint64_t v55 = *(void *)(v0 + 112);
  id v56 = v52;

  v40(v55, v53);
  sub_10026114C(v54);
  char v57 = 1;
LABEL_24:
  **(unsigned char **)(v0 + 56) = v57;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v73 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v73();
}

uint64_t type metadata accessor for SDAirDropContentHandlerUnsupportedLinkType()
{
  return self;
}

uint64_t sub_10068BED8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerUnsupportedLinkType();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0xE000000000000000;
  *a1 = result;
  return result;
}

uint64_t sub_10068BF14(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_10068A94C(a1);
}

uint64_t sub_10068BFB0(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  return SFProgressTask.init(_:initialProgress:operation:file:line:)();
}

void sub_10068C08C(uint64_t a1, char a2)
{
  if (a2)
  {
    NSString v2 = String._bridgeToObjectiveC()();
    id v3 = (id)SFLocalizedStringForKey();

    if (v3)
    {
LABEL_5:
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      return;
    }
    __break(1u);
  }
  NSString v4 = String._bridgeToObjectiveC()();
  id v3 = (id)SFLocalizedStringForKey();

  if (v3) {
    goto LABEL_5;
  }
  __break(1u);
}

uint64_t sub_10068C14C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10068C18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_10000A6F4;
  return sub_10068B38C(a1, a2, a3, v9, v8);
}

unint64_t sub_10068C250()
{
  unint64_t result = qword_10096B598;
  if (!qword_10096B598)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10096B598);
  }
  return result;
}

uint64_t sub_10068C290()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097DFC0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097DFC0);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10068C358(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for URL();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v2[7] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferType();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_10068C4DC, v5, 0);
}

void sub_10068C4DC()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  SFAirDropReceive.AskRequest.type.getter();
  char v4 = SFAirDrop.TransferType.isLinks.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if ((v4 & 1) == 0)
  {
LABEL_46:
    uint64_t v40 = 0;
LABEL_47:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v43 = (void (*)(uint64_t))v0[1];
    v43(v40);
    return;
  }
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[3];
  uint64_t v7 = SFAirDropReceive.AskRequest.urlItems.getter();
  uint64_t v8 = v7;
  int64_t v9 = 0;
  uint64_t v47 = v7 + 56;
  uint64_t v10 = -1;
  uint64_t v11 = -1 << *(unsigned char *)(v7 + 32);
  if (-v11 < 64) {
    uint64_t v10 = ~(-1 << -(char)v11);
  }
  unint64_t v12 = v10 & *(void *)(v7 + 56);
  int64_t v48 = (unint64_t)(63 - v11) >> 6;
  uint64_t v49 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  uint64_t v45 = v6;
  uint64_t v46 = v7;
  while (v12)
  {
    unint64_t v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v15 = v14 | (v9 << 6);
LABEL_22:
    uint64_t v19 = v0[7];
    uint64_t v20 = v0[4];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))(v19, *(void *)(v8 + 48) + *(void *)(v5 + 72) * v15, v20);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v19, 0, 1, v20);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v19, 1, v20) == 1) {
      goto LABEL_42;
    }
    (*(void (**)(void, void, void))(v5 + 32))(v0[6], v0[7], v0[4]);
    sub_1003ACB84(&off_1008D2618);
    if (!v21)
    {
      (*v49)(v0[6], v0[4]);
      swift_release();
      goto LABEL_46;
    }
    uint64_t v22 = v21;
    unint64_t v23 = *(void **)(v6 + 16);
    if (v23)
    {
      id v24 = v21;
      id v25 = v23;
      id v26 = [v25 bundleIdentifier];
      int64_t v50 = v9;
      if (v26)
      {
        uint64_t v27 = v26;
        uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v30 = v29;
      }
      else
      {
        uint64_t v28 = 0;
        uint64_t v30 = 0;
      }
      id v31 = [v24 bundleIdentifier:v44];
      if (v31)
      {
        os_log_type_t v32 = v31;
        uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v35 = v34;

        if (!v30) {
          goto LABEL_36;
        }
        if (!v35) {
          goto LABEL_43;
        }
        uint64_t v36 = v0[6];
        uint64_t v44 = v0[4];
        if (v28 == v33 && v30 == v35)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();

          (*v49)(v36, v44);
          swift_bridgeObjectRelease_n();
          uint64_t v6 = v45;
          uint64_t v8 = v46;
          int64_t v9 = v50;
        }
        else
        {
          char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();

          (*v49)(v36, v44);
          swift_bridgeObjectRelease_n();
          uint64_t v6 = v45;
          uint64_t v8 = v46;
          int64_t v9 = v50;
          if ((v39 & 1) == 0) {
            goto LABEL_44;
          }
        }
      }
      else
      {
        if (v30)
        {
LABEL_43:
          uint64_t v41 = v0[6];
          uint64_t v42 = v0[4];
          swift_bridgeObjectRetain();

          (*v49)(v41, v42);
          swift_bridgeObjectRelease_n();
LABEL_44:
          swift_release();
LABEL_45:
          swift_arrayDestroy();
          goto LABEL_46;
        }
        uint64_t v35 = 0;
LABEL_36:
        uint64_t v37 = v0[6];
        uint64_t v38 = v0[4];

        (*v49)(v37, v38);
        uint64_t v6 = v45;
        uint64_t v8 = v46;
        int64_t v9 = v50;
        if (v35)
        {
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_45;
        }
      }
    }
    else
    {
      (*v49)(v0[6], v0[4]);
      os_log_type_t v13 = *(void **)(v6 + 16);
      *(void *)(v6 + 16) = v22;
    }
  }
  int64_t v16 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_51;
  }
  if (v16 >= v48) {
    goto LABEL_41;
  }
  unint64_t v17 = *(void *)(v47 + 8 * v16);
  ++v9;
  if (v17) {
    goto LABEL_21;
  }
  int64_t v9 = v16 + 1;
  if (v16 + 1 >= v48) {
    goto LABEL_41;
  }
  unint64_t v17 = *(void *)(v47 + 8 * v9);
  if (v17) {
    goto LABEL_21;
  }
  int64_t v9 = v16 + 2;
  if (v16 + 2 >= v48) {
    goto LABEL_41;
  }
  unint64_t v17 = *(void *)(v47 + 8 * v9);
  if (v17)
  {
LABEL_21:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
    goto LABEL_22;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v48)
  {
LABEL_41:
    (*(void (**)(void, uint64_t, uint64_t, void))(v5 + 56))(v0[7], 1, 1, v0[4]);
LABEL_42:
    swift_release();
    swift_arrayDestroy();
    uint64_t v40 = 1;
    goto LABEL_47;
  }
  unint64_t v17 = *(void *)(v47 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v48) {
      goto LABEL_41;
    }
    unint64_t v17 = *(void *)(v47 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_21;
    }
  }
LABEL_51:
  __break(1u);
}

void sub_10068CA80(uint64_t a1, char a2)
{
  uint64_t v5 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SFAirDropReceive.AskRequest();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v13 = *(void **)(v2 + 16);
  if (v13)
  {
    id v14 = [v13 localizedName];
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;

    unint64_t v18 = *(void *)(SFAirDropReceive.AskRequest.urlItems.getter() + 16);
    swift_bridgeObjectRelease();
    sub_10000A844(&qword_10096D760);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
    *(void *)(inited + 32) = 0x54495F4546494C49;
    *(void *)(inited + 40) = 0xEA00000000004D45;
    *(void *)(inited + 48) = v18;
    v41[0] = 0x545F4E5245444F4DLL;
    v41[1] = 0xEF524546534E4152;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20._countAndFlagsBits = 95;
    v20._object = (void *)0xE100000000000000;
    String.append(_:)(v20);
    v21._countAndFlagsBits = 0x54495F4546494C49;
    v21._object = (void *)0xEA00000000004D45;
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    if (v18 > 1)
    {
      v22._countAndFlagsBits = 0x4C4152554C505FLL;
      v22._object = (void *)0xE700000000000000;
      String.append(_:)(v22);
    }
    swift_bridgeObjectRelease();
    if (a2)
    {
      v23._countAndFlagsBits = 0x4C4154495041435FLL;
      v23._object = (void *)0xEC00000044455A49;
      String.append(_:)(v23);
    }
    v24._countAndFlagsBits = 0x545845545FLL;
    v24._object = (void *)0xE500000000000000;
    String.append(_:)(v24);
    swift_setDeallocating();
    sub_10000A844((uint64_t *)&unk_100977CB0);
    swift_arrayDestroy();
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v26 = (id)SFLocalizedStringForKey();

    if (v26)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10000A844((uint64_t *)&unk_10096EE60);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_100770AD0;
      *(void *)(v27 + 56) = &type metadata for Int;
      *(void *)(v27 + 64) = &protocol witness table for Int;
      *(void *)(v27 + 32) = v18;
      *(void *)(v27 + 96) = &type metadata for String;
      *(void *)(v27 + 104) = sub_1002E695C();
      *(void *)(v27 + 72) = v15;
      *(void *)(v27 + 80) = v17;
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_10096A100 != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    sub_10000B47C(v28, (uint64_t)qword_10097DFC0);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    int v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      int v39 = v31;
      os_log_type_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v41[0] = v38;
      *(_DWORD *)os_log_type_t v32 = 136315138;
      uint64_t v36 = v32 + 4;
      uint64_t v37 = v32;
      SFAirDropReceive.AskRequest.id.getter();
      sub_10024E048();
      uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v35 = v34;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v40 = sub_100254634(v33, v35, v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v39, "Asked for localizedDescription for iLife link which doesn't have a handling app. Transfer ID: %s", v37, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
}

uint64_t type metadata accessor for SDAirDropContentHandleriLifeLinks()
{
  return self;
}

uint64_t sub_10068D020@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandleriLifeLinks();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_10068D058(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_10068C358(a1);
}

void sub_10068D0F0(uint64_t a1, char a2)
{
}

uint64_t sub_10068D114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_10097F1D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void **)(*(void *)v2 + 16);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v9 = type metadata accessor for SFAirDropReceive.ItemDestination();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  id v10 = v8;
  sub_10039FAA0(a1, v8, 1, a2);

  return sub_10024DFE8((uint64_t)v7);
}

void destroy for SDAirDropContactHashManagerContext(uint64_t a1)
{
  swift_unknownObjectRelease();
  sub_10024D338(a1 + 8);
  swift_unknownObjectRelease();

  uint64_t v2 = *(void **)(a1 + 72);
}

uint64_t initializeWithCopy for SDAirDropContactHashManagerContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = a2 + 8;
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_unknownObjectRetain();
  v7(a1 + 8, v4, v6);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v8 = *(void **)(a2 + 64);
  uint64_t v9 = *(void **)(a2 + 72);
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_unknownObjectRetain();
  id v10 = v8;
  id v11 = v9;
  return a1;
}

void *assignWithCopy for SDAirDropContactHashManagerContext(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  sub_10026F6D4(a1 + 1, a2 + 1);
  uint64_t v4 = a2[7];
  a1[6] = a2[6];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[7] = v4;
  long long v5 = (void *)a2[8];
  uint64_t v6 = (void *)a1[8];
  a1[8] = v5;
  id v7 = v5;

  uint64_t v8 = (void *)a2[9];
  uint64_t v9 = (void *)a1[9];
  a1[9] = v8;
  id v10 = v8;

  a1[10] = a2[10];
  a1[11] = a2[11];
  return a1;
}

__n128 initializeWithTake for SDAirDropContactHashManagerContext(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for SDAirDropContactHashManagerContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  sub_10024D338(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_unknownObjectRelease();
  long long v5 = *(void **)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);

  uint64_t v6 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);

  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDAirDropContactHashManagerContext(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDAirDropContactHashManagerContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropContactHashManagerContext()
{
  return &type metadata for SDAirDropContactHashManagerContext;
}

double sub_10068D524@<D0>(uint64_t a1@<X8>)
{
  id v2 = [objc_allocWithZone((Class)CUSystemMonitor) init];
  [v2 setMeDeviceUseFindMyLocate:1];
  *(void *)a1 = v2;
  uint64_t v3 = type metadata accessor for SDContactStore();
  uint64_t v4 = (void *)swift_allocObject();
  long long v5 = (void *)CNContactStoreMeContactDidChangeNotification;
  v4[2] = CNContactStoreDidChangeNotification;
  v4[3] = v5;
  id v6 = objc_allocWithZone((Class)CNContactStore);
  id v7 = v2;
  uint64_t v8 = CNContactStoreDidChangeNotification;
  id v9 = v5;
  v4[4] = [v6 init];
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = &off_1008E0CB8;
  *(void *)(a1 + 8) = v4;
  type metadata accessor for SDAirDropHashStoreCDB();
  uint64_t v10 = swift_allocObject();
  sub_10068D6D8();
  id v11 = objc_allocWithZone((Class)CUKeyValueStoreReader);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  *(void *)(v10 + 16) = [v11 initWithKeyType:ObjCClassFromMetadata valueType:ObjCClassFromMetadata];
  *(void *)(v10 + 24) = 0;
  *(void *)(v10 + 32) = _swiftEmptyArrayStorage;
  *(void *)(v10 + 40) = &_swiftEmptySetSingleton;
  *(_WORD *)(v10 + 48) = 0;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = &protocol witness table for SDAirDropHashStoreCDB;
  *(void *)(a1 + 64) = [self defaultCenter];
  id v13 = [self defaultCenter];

  *(void *)(a1 + 72) = v13;
  double result = 5.0;
  *(_OWORD *)(a1 + 80) = xmmword_10077FE00;
  return result;
}

unint64_t sub_10068D6D8()
{
  unint64_t result = qword_10096A1C0;
  if (!qword_10096A1C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10096A1C0);
  }
  return result;
}

unsigned char *_s7RequestV5StateOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10068D7E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s7RequestV5StateOMa()
{
  return &_s7RequestV5StateON;
}

uint64_t *sub_10068D81C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    uint64_t v22 = v21 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = *(void *)(v7 - 8);
    unint64_t v34 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v34(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v37 = a1;
    uint64_t v10 = (char *)a1 + v9;
    id v11 = (char *)a2 + v9;
    uint64_t v12 = *(uint64_t *)((char *)a2 + v9 + 8);
    *(void *)uint64_t v10 = *(uint64_t *)((char *)a2 + v9);
    *((void *)v10 + 1) = v12;
    uint64_t v13 = *(uint64_t *)((char *)a2 + v9 + 24);
    *((void *)v10 + 2) = *(uint64_t *)((char *)a2 + v9 + 16);
    *((void *)v10 + 3) = v13;
    uint64_t v14 = *(uint64_t *)((char *)a2 + v9 + 40);
    *((void *)v10 + 4) = *(uint64_t *)((char *)a2 + v9 + 32);
    *((void *)v10 + 5) = v14;
    *((_WORD *)v10 + 24) = *(_WORD *)((char *)a2 + v9 + 48);
    uint64_t v15 = (int *)type metadata accessor for AuthenticationDevice();
    uint64_t v16 = v15[9];
    uint64_t v35 = v8;
    __dst = &v10[v16];
    uint64_t v17 = v8;
    unint64_t v18 = &v11[v16];
    uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v19(v18, 1, v7))
    {
      uint64_t v20 = sub_10000A844(&qword_100974EA0);
      memcpy(__dst, v18, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      v34((uint64_t *)__dst, (uint64_t *)v18, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(__dst, 0, 1, v7);
    }
    uint64_t v23 = v15[10];
    Swift::String v24 = &v10[v23];
    NSString v25 = &v11[v23];
    uint64_t v26 = *((void *)v25 + 1);
    *(void *)Swift::String v24 = *(void *)v25;
    *((void *)v24 + 1) = v26;
    uint64_t v27 = v15[11];
    uint64_t v28 = &v10[v27];
    uint64_t v29 = &v11[v27];
    *((void *)v28 + 2) = *((void *)v29 + 2);
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    uint64_t v30 = v15[12];
    int v31 = *(void **)&v11[v30];
    *(void *)&v10[v30] = v31;
    swift_bridgeObjectRetain();
    id v32 = v31;
    return v37;
  }
  return (uint64_t *)v22;
}

void sub_10068DA78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  unsigned int v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for AuthenticationDevice();
  uint64_t v9 = v7 + *(int *)(v8 + 36);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4)) {
    v6(v9, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void **)(v7 + *(int *)(v8 + 48));
}

void *sub_10068DBAC(void *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  int v31 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v31(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  unint64_t v34 = a1;
  uint64_t v9 = (uint64_t)a1 + v8;
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)&a2[v8 + 8];
  *(void *)uint64_t v9 = *(void *)&a2[v8];
  *(void *)(v9 + 8) = v11;
  uint64_t v12 = *(void *)&a2[v8 + 24];
  *(void *)(v9 + 16) = *(void *)&a2[v8 + 16];
  *(void *)(v9 + 24) = v12;
  uint64_t v13 = *(void *)&a2[v8 + 40];
  *(void *)(v9 + 32) = *(void *)&a2[v8 + 32];
  *(void *)(v9 + 40) = v13;
  *(_WORD *)(v9 + 48) = *(_WORD *)&a2[v8 + 48];
  uint64_t v14 = (int *)type metadata accessor for AuthenticationDevice();
  uint64_t v15 = v14[9];
  uint64_t v32 = v7;
  __dst = (void *)(v9 + v15);
  uint64_t v16 = v7;
  uint64_t v17 = &v10[v15];
  unint64_t v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18(v17, 1, v6))
  {
    uint64_t v19 = sub_10000A844(&qword_100974EA0);
    memcpy(__dst, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    v31(__dst, v17, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v6);
  }
  uint64_t v20 = v14[10];
  uint64_t v21 = (void *)(v9 + v20);
  uint64_t v22 = &v10[v20];
  uint64_t v23 = *((void *)v22 + 1);
  *uint64_t v21 = *(void *)v22;
  v21[1] = v23;
  uint64_t v24 = v14[11];
  uint64_t v25 = v9 + v24;
  uint64_t v26 = &v10[v24];
  *(void *)(v25 + 16) = *((void *)v26 + 2);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  uint64_t v27 = v14[12];
  uint64_t v28 = *(void **)&v10[v27];
  *(void *)(v9 + v27) = v28;
  swift_bridgeObjectRetain();
  id v29 = v28;
  return v34;
}

void *sub_10068DDB4(void *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v30 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v30(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  int v31 = a1;
  uint64_t v9 = (uint64_t)a1 + v8;
  uint64_t v10 = &a2[v8];
  *(void *)uint64_t v9 = *(void *)&a2[v8];
  *(void *)(v9 + 8) = *(void *)&a2[v8 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v9 + 16) = *((void *)v10 + 2);
  *(void *)(v9 + 24) = *((void *)v10 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v9 + 32) = *((void *)v10 + 4);
  *(void *)(v9 + 40) = *((void *)v10 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + 48) = v10[48];
  *(unsigned char *)(v9 + 49) = v10[49];
  uint64_t v11 = (int *)type metadata accessor for AuthenticationDevice();
  uint64_t v12 = v11[9];
  uint64_t v13 = (void *)(v9 + v12);
  uint64_t v14 = &v10[v12];
  uint64_t v15 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v16 = v15((const void *)(v9 + v12), 1, v6);
  int v17 = v15(v14, 1, v6);
  if (!v16)
  {
    if (!v17)
    {
      v30(v13, v14, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_10000A844(&qword_100974EA0);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_7:
  uint64_t v19 = v11[10];
  uint64_t v20 = (void *)(v9 + v19);
  uint64_t v21 = &v10[v19];
  *uint64_t v20 = *(void *)v21;
  v20[1] = *((void *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v11[11];
  uint64_t v23 = (void *)(v9 + v22);
  uint64_t v24 = &v10[v22];
  *uint64_t v23 = *(void *)v24;
  v23[1] = *((void *)v24 + 1);
  v23[2] = *((void *)v24 + 2);
  uint64_t v25 = v11[12];
  uint64_t v26 = *(void **)&v10[v25];
  uint64_t v27 = *(void **)(v9 + v25);
  *(void *)(v9 + v25) = v26;
  id v28 = v26;

  return v31;
}

void *sub_10068E068(void *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (uint64_t)a1 + v9;
  uint64_t v11 = &a2[v9];
  long long v12 = *(_OWORD *)&a2[v9 + 16];
  *(_OWORD *)uint64_t v10 = *(_OWORD *)&a2[v9];
  *(_OWORD *)(v10 + 16) = v12;
  *(_OWORD *)(v10 + 32) = *(_OWORD *)&a2[v9 + 32];
  *(_WORD *)(v10 + 48) = *(_WORD *)&a2[v9 + 48];
  uint64_t v13 = (int *)type metadata accessor for AuthenticationDevice();
  uint64_t v14 = v13[9];
  uint64_t v15 = (void *)(v10 + v14);
  int v16 = &v11[v14];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&v11[v14], 1, v6))
  {
    uint64_t v17 = sub_10000A844(&qword_100974EA0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v8(v15, v16, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  *(_OWORD *)(v10 + v13[10]) = *(_OWORD *)&v11[v13[10]];
  uint64_t v18 = v13[11];
  uint64_t v19 = v10 + v18;
  uint64_t v20 = &v11[v18];
  *(void *)(v19 + 16) = *((void *)v20 + 2);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(void *)(v10 + v13[12]) = *(void *)&v11[v13[12]];
  return a1;
}

void *sub_10068E21C(void *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v33 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v33(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  unint64_t v34 = a1;
  uint64_t v9 = (uint64_t)a1 + v8;
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)&a2[v8 + 8];
  *(void *)uint64_t v9 = *(void *)&a2[v8];
  *(void *)(v9 + 8) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *((void *)v10 + 3);
  *(void *)(v9 + 16) = *((void *)v10 + 2);
  *(void *)(v9 + 24) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *((void *)v10 + 5);
  *(void *)(v9 + 32) = *((void *)v10 + 4);
  *(void *)(v9 + 40) = v13;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + 48) = v10[48];
  *(unsigned char *)(v9 + 49) = v10[49];
  uint64_t v14 = (int *)type metadata accessor for AuthenticationDevice();
  uint64_t v15 = v14[9];
  int v16 = (void *)(v9 + v15);
  uint64_t v17 = &v10[v15];
  uint64_t v18 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v19 = v18((const void *)(v9 + v15), 1, v6);
  int v20 = v18(v17, 1, v6);
  if (!v19)
  {
    if (!v20)
    {
      v33(v16, v17, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v16, v6);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    uint64_t v21 = sub_10000A844(&qword_100974EA0);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v7 + 32))(v16, v17, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
LABEL_7:
  uint64_t v22 = v14[10];
  uint64_t v23 = (void *)(v9 + v22);
  uint64_t v24 = (uint64_t *)&v10[v22];
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = v14[11];
  uint64_t v28 = v9 + v27;
  id v29 = &v10[v27];
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  *(void *)(v28 + 16) = *((void *)v29 + 2);
  uint64_t v30 = v14[12];
  int v31 = *(void **)(v9 + v30);
  *(void *)(v9 + v30) = *(void *)&v10[v30];

  return v34;
}

uint64_t sub_10068E484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10068E498);
}

uint64_t sub_10068E498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for AuthenticationDevice();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10068E590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10068E5A4);
}

uint64_t sub_10068E5A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for AuthenticationDevice();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t _s7RequestVMa()
{
  uint64_t result = qword_10097E118;
  if (!qword_10097E118) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10068E6F4()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for AuthenticationDevice();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_10068E7CC()
{
  unint64_t result = qword_10097E158;
  if (!qword_10097E158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097E158);
  }
  return result;
}

unsigned char *_s7RequestV4KindOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10068E8BCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s7RequestV4KindOMa()
{
  return &_s7RequestV4KindON;
}

unint64_t sub_10068E8F8()
{
  unint64_t result = qword_10097E160;
  if (!qword_10097E160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097E160);
  }
  return result;
}

uint64_t sub_10068E94C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097E168);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097E168);
  if (qword_100969CA8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994648);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10068EA14()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  sub_10000B740(0, (unint64_t *)&qword_10096A1A0);
  static DispatchQoS.utility.getter();
  v7[1] = _swiftEmptyArrayStorage;
  sub_100696450((unint64_t *)&unk_100974840, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000A844((uint64_t *)&unk_10096A1B0);
  sub_1002AE308((unint64_t *)&qword_100974850, (uint64_t *)&unk_10096A1B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  qword_10097E180 = result;
  return result;
}

uint64_t sub_10068EC78()
{
  uint64_t v0 = type metadata accessor for URL();
  sub_10024A2B8(v0, qword_10097E188);
  sub_10000B47C(v0, (uint64_t)qword_10097E188);
  if (qword_10096A120 != -1) {
    swift_once();
  }
  sub_10000B47C(v0, (uint64_t)qword_10097E1A0);
  return URL.appendingPathComponent(_:)();
}

uint64_t sub_10068ED18(uint64_t a1)
{
  return sub_10068ED30(a1, qword_10097E1A0);
}

uint64_t sub_10068ED30(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for URL();
  sub_10024A2B8(v3, a2);
  sub_10000B47C(v3, (uint64_t)a2);
  if (qword_10096A138 != -1) {
    swift_once();
  }
  sub_10000B47C(v3, (uint64_t)qword_10097E1D8);
  return URL.appendingPathComponent(_:)();
}

uint64_t sub_10068EDDC(uint64_t a1)
{
  return sub_10068ED30(a1, qword_10097E1B8);
}

void sub_10068EE00()
{
  id v0 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 initWithSuiteName:v1];

  sub_10000A844(&qword_10097E228);
  Optional.unwrap(_:file:line:)();
}

unint64_t sub_10068EEC4()
{
  return 0xD00000000000002ELL;
}

id sub_10068EEE0()
{
  uint64_t v0 = type metadata accessor for URL();
  sub_10024A2B8(v0, qword_10097E1D8);
  sub_10000B47C(v0, (uint64_t)qword_10097E1D8);
  id result = sub_1001B2B24();
  if (result)
  {
    id v2 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    URL.init(fileURLWithPath:)();
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10068EF80()
{
  if (qword_10096A120 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097E1A0);
  sub_10068F1D0(v1);
}

void sub_10068F1D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v42 = *(void *)(v2 - 8);
  uint64_t v43 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v41 = &v38[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v6 = &v38[-v5];
  uint64_t v7 = type metadata accessor for CocoaError.Code();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v38[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v11 = [self defaultManager];
  URL._bridgeToObjectiveC()(v12);
  uint64_t v14 = v13;
  id v45 = 0;
  unsigned int v15 = [v11 removeItemAtURL:v13 error:&v45];

  if (v15)
  {
    id v16 = v45;
  }
  else
  {
    id v17 = v45;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRetain();
    static CocoaError.fileNoSuchFile.getter();
    sub_100696450(&qword_10097E230, (void (*)(uint64_t))&type metadata accessor for CocoaError.Code);
    LOBYTE(v17) = static _ErrorCodeProtocol.~= infix(_:_:)();
    swift_errorRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    if (v17)
    {
      swift_errorRelease();
      uint64_t v18 = v43;
      if (qword_10096A108 != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      sub_10000B47C(v19, (uint64_t)qword_10097E168);
      uint64_t v20 = v42;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v42 + 16))(v6, a1, v18);
      uint64_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        id v45 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = 136315138;
        uint64_t v41 = v23 + 4;
        sub_100696450((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v44 = sub_100254634(v24, v25, (uint64_t *)&v45);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v6, v18);
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "removeFileIfExists - Doesn't exist: %s", v23, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v6, v18);
      }
    }
    else
    {
      uint64_t v26 = v43;
      if (qword_10096A108 != -1) {
        swift_once();
      }
      uint64_t v27 = type metadata accessor for Logger();
      sub_10000B47C(v27, (uint64_t)qword_10097E168);
      id v29 = v41;
      uint64_t v28 = v42;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v42 + 16))(v41, a1, v26);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.error.getter();
      int v32 = v31;
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v33 = swift_slowAlloc();
        uint64_t v40 = (void *)swift_slowAlloc();
        id v45 = v40;
        *(_DWORD *)uint64_t v33 = 136315394;
        sub_100696450((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
        int v39 = v32;
        uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v44 = sub_100254634(v34, v35, (uint64_t *)&v45);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(unsigned char *, uint64_t))(v28 + 8))(v29, v26);
        *(_WORD *)(v33 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v36 = Error.localizedDescription.getter();
        uint64_t v44 = sub_100254634(v36, v37, (uint64_t *)&v45);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v39, "removeFileIfExists - couldn't delete %s:\n%s", (uint8_t *)v33, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(v28 + 8))(v29, v26);
        swift_errorRelease();
        swift_errorRelease();
      }

      swift_willThrow();
    }
  }
}

void sub_10068F8C0()
{
  if (qword_10096A108 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_10097E168);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "purgeAvatars", v3, 2u);
    swift_slowDealloc();
  }

  if (qword_10096A118 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = sub_10000B47C(v4, (uint64_t)qword_10097E188);
  sub_10068F1D0(v5);
}

void sub_10068FB84(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v62 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A844((uint64_t *)&unk_10096AC10);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = a1;
  BOOL v63 = (void (*)(char *, unint64_t, uint64_t))sub_100690544();
  unint64_t v11 = v10;
  if (qword_10096A108 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = sub_10000B47C(v12, (uint64_t)qword_10097E168);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v59 = v13;
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v64 = v6;
  uint64_t v65 = v9;
  if (v16)
  {
    uint64_t v17 = swift_slowAlloc();
    id v67 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v66 = sub_100254634(v58, a2, (uint64_t *)&v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v66 = sub_100254634((uint64_t)v63, v11, (uint64_t *)&v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "evictContactIdentifier: %s, compressed: %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  id v18 = [self defaultManager];
  if (qword_10096A118 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_10000B47C(v4, (uint64_t)qword_10097E188);
  URL._bridgeToObjectiveC()(v20);
  os_log_type_t v22 = v21;
  id v67 = 0;
  id v23 = [v18 contentsOfDirectoryAtURL:v21 includingPropertiesForKeys:0 options:0 error:&v67];

  id v24 = v67;
  if (v23)
  {
    uint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v26 = sub_100695040(v25, (uint64_t)v63, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    BOOL v29 = os_log_type_enabled(v27, v28);
    uint64_t v57 = v4;
    v56[2] = v19;
    if (v29)
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      id v67 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136315138;
      BOOL v63 = (void (*)(char *, unint64_t, uint64_t))(v30 + 4);
      swift_bridgeObjectRetain();
      uint64_t v31 = Array.description.getter();
      unint64_t v33 = v32;
      swift_bridgeObjectRelease();
      uint64_t v66 = sub_100254634(v31, v33, (uint64_t *)&v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Removing URLs: %s", v30, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v36 = *(void *)(v26 + 16);
    unint64_t v37 = v65;
    v56[3] = v26;
    if (v36)
    {
      v56[1] = a2;
      uint64_t v39 = v62 + 16;
      uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v62 + 16);
      unint64_t v40 = v26 + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80));
      uint64_t v41 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56);
      uint64_t v42 = (unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
      uint64_t v60 = *(void *)(v62 + 72);
      uint64_t v61 = (void (**)(char *, char *, uint64_t))(v62 + 32);
      v62 += 8;
      BOOL v63 = v38;
      v56[0] = (v39 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v43 = v57;
      while (1)
      {
        v63(v37, v40, v43);
        uint64_t v44 = *v41;
        (*v41)(v37, 0, 1, v43);
        if ((*v42)(v37, 1, v43) == 1) {
          break;
        }
        id v45 = v37;
        uint64_t v46 = (uint64_t)v64;
        (*v61)(v64, v45, v43);
        sub_10068F1D0(v46);
        (*(void (**)(uint64_t, uint64_t))v62)(v46, v43);
        v40 += v60;
        --v36;
        unint64_t v37 = v65;
        if (!v36) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56);
      uint64_t v43 = v57;
LABEL_19:
      v44(v37, 1, 1, v43);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v34 = v24;
    swift_bridgeObjectRelease();
    _convertNSErrorToError(_:)();

    swift_willThrow();
    unint64_t v35 = 0;
    swift_bridgeObjectRetain_n();
    uint64_t v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v65 = 0;
      int64_t v50 = (uint8_t *)swift_slowAlloc();
      id v67 = (id)swift_slowAlloc();
      *(_DWORD *)int64_t v50 = 136315138;
      swift_bridgeObjectRetain();
      unint64_t v35 = v65;
      uint64_t v66 = sub_100254634(v58, a2, (uint64_t *)&v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "Failed to remove specific contactID: %s, removing all", v50, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_10068F1D0(v19);
    if (v35)
    {
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v51 = Logger.logObject.getter();
      os_log_type_t v52 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v53 = (uint8_t *)swift_slowAlloc();
        id v67 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v53 = 136315138;
        swift_getErrorValue();
        uint64_t v54 = Error.localizedDescription.getter();
        uint64_t v66 = sub_100254634(v54, v55, (uint64_t *)&v67);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "evictContactIdentifier remove-all failed: %s", v53, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_errorRelease();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
    }
    else
    {
      swift_errorRelease();
    }
  }
}

uint64_t sub_100690544()
{
  uint64_t v39 = 0;
  uint64_t v0 = type metadata accessor for SHA256();
  uint64_t v37 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  os_log_type_t v2 = (char *)v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for SHA256Digest();
  unint64_t v38 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for String.Encoding();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String.Encoding.utf8.getter();
  uint64_t v10 = String.data(using:allowLossyConversion:)();
  unint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v43 = v10;
  unint64_t v44 = v12;
  sub_10000A844(&qword_10096B260);
  Optional.unwrap(_:file:line:)();
  sub_100250CB0(v10, v12);
  unint64_t v14 = *((void *)&v40 + 1);
  uint64_t v13 = v40;
  sub_100696450((unint64_t *)&unk_100974C20, (void (*)(uint64_t))&type metadata accessor for SHA256);
  dispatch thunk of HashFunction.init()();
  switch(v14 >> 62)
  {
    case 1uLL:
      if (v13 >> 32 < (int)v13) {
        __break(1u);
      }
      sub_10025ADCC(v13, v14);
      sub_1006661F0((int)v13, v13 >> 32);
      goto LABEL_6;
    case 2uLL:
      uint64_t v16 = *(void *)(v13 + 16);
      uint64_t v15 = *(void *)(v13 + 24);
      sub_10025ADCC(v13, v14);
      swift_retain();
      swift_retain();
      sub_1006661F0(v16, v15);
      swift_release();
      swift_release();
LABEL_6:
      sub_100250CC4(v13, v14);
      goto LABEL_9;
    case 3uLL:
      *(void *)((char *)&v40 + 6) = 0;
      *(void *)&long long v40 = 0;
      goto LABEL_8;
    default:
      *(void *)&long long v40 = v13;
      WORD4(v40) = v14;
      BYTE10(v40) = BYTE2(v14);
      BYTE11(v40) = BYTE3(v14);
      BYTE12(v40) = BYTE4(v14);
      BYTE13(v40) = BYTE5(v14);
LABEL_8:
      dispatch thunk of HashFunction.update(bufferPointer:)();
      sub_100250CC4(v13, v14);
LABEL_9:
      dispatch thunk of HashFunction.finalize()();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v2, v0);
      uint64_t v41 = v3;
      uint64_t v42 = sub_100696450(&qword_100974AE0, (void (*)(uint64_t))&type metadata accessor for SHA256Digest);
      uint64_t v17 = sub_100278AE4((uint64_t *)&v40);
      unint64_t v18 = v38;
      (*(void (**)(uint64_t *, char *, uint64_t))(v38 + 16))(v17, v5, v3);
      sub_10026BB6C(&v40, v41);
      dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v3);
      uint64_t v19 = v43;
      unint64_t v20 = v44;
      sub_10024D338((uint64_t)&v40);
      Data.base64EncodedString(options:)(0);
      sub_10054D6A8(5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v21 = Substring.distance(from:to:)();
      swift_bridgeObjectRelease();
      if (v21 != 5)
      {
        if (qword_10096A108 != -1) {
          swift_once();
        }
        uint64_t v22 = type metadata accessor for Logger();
        sub_10000B47C(v22, (uint64_t)qword_10097E168);
        swift_bridgeObjectRetain_n();
        id v23 = Logger.logObject.getter();
        os_log_type_t v24 = static os_log_type_t.fault.getter();
        int v25 = v24;
        if (os_log_type_enabled(v23, v24))
        {
          unint64_t v38 = v20;
          uint64_t v26 = swift_slowAlloc();
          LODWORD(v36) = v25;
          uint64_t v27 = (uint8_t *)v26;
          uint64_t v37 = swift_slowAlloc();
          *(void *)&long long v40 = v37;
          uint64_t v39 = v19;
          *(_DWORD *)uint64_t v27 = 136315138;
          v34[1] = v27 + 4;
          unint64_t v35 = v27;
          swift_bridgeObjectRetain();
          uint64_t v28 = static String._fromSubstring(_:)();
          unint64_t v30 = v29;
          swift_bridgeObjectRelease();
          uint64_t v31 = v28;
          unint64_t v20 = v38;
          uint64_t v43 = sub_100254634(v31, v30, (uint64_t *)&v40);
          uint64_t v19 = v39;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v23, (os_log_type_t)v36, "Failed to form valid lossyContactID, unexpected hash length: %s", v35, 0xCu);
          uint64_t v36 = v23;
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
      }
      uint64_t v32 = static String._fromSubstring(_:)();
      swift_bridgeObjectRelease();
      sub_100250CC4(v19, v20);
      sub_100250CC4(v13, v14);
      return v32;
  }
}

uint64_t sub_100690D3C(CGImage *a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_100690F48(a1, a2, a3, a4);
}

uint64_t sub_100690F48(CGImage *a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  unint64_t v24 = a2;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A108 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10000B47C(v13, (uint64_t)qword_10097E168);
  swift_bridgeObjectRetain_n();
  unint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v21 = v12;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v22 = a1;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v23 = v9;
    uint64_t v20 = v10;
    uint64_t v26 = v18;
    *(_DWORD *)uint64_t v17 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_100254634(v24, a3, &v26);
    unint64_t v12 = v21;
    uint64_t v5 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    uint64_t v10 = v20;
    uint64_t v9 = v23;
    swift_slowDealloc();
    a1 = v22;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t result = sub_10069259C();
  if (!v5)
  {
    sub_100693234(v24, a3, a4, (uint64_t)v12);
    sub_100694344(a1, (uint64_t)v12);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return result;
}

uint64_t static SDXPCHelperImageCache.cacheIsEmpty()()
{
  id v0 = [self defaultManager];
  if (qword_10096A120 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for URL();
  sub_10000B47C(v1, (uint64_t)qword_10097E1A0);
  URL.path.getter();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v3 = [v0 fileExistsAtPath:v2];

  return v3 ^ 1;
}

CGImageRef sub_100691424(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v35 - v13;
  sub_10069259C();
  if (!v3)
  {
    sub_100693234(a1, a2, a3, (uint64_t)v14);
    URL._bridgeToObjectiveC()(v16);
    CFURLRef v18 = v17;
    uint64_t v19 = CGImageSourceCreateWithURL(v17, 0);

    if (v19)
    {
      CGImageRef ImageAtIndex = CGImageSourceCreateImageAtIndex(v19, 0, 0);

      if (qword_10096A108 != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      sub_10000B47C(v20, (uint64_t)qword_10097E168);
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
      swift_bridgeObjectRetain_n();
      uint64_t v39 = ImageAtIndex;
      uint64_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.default.getter();
      int v37 = v22;
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = swift_slowAlloc();
        uint64_t v38 = v9;
        uint64_t v24 = v23;
        uint64_t v36 = swift_slowAlloc();
        uint64_t v41 = v36;
        *(_DWORD *)uint64_t v24 = 136315650;
        os_log_t v35 = v21;
        swift_bridgeObjectRetain();
        uint64_t v40 = sub_100254634(a1, a2, &v41);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v24 + 12) = 2080;
        sub_100696450((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v40 = sub_100254634(v25, v26, &v41);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v27 = *(void (**)(char *, uint64_t))(v38 + 8);
        v38 += 8;
        v27(v12, v8);
        *(_WORD *)(v24 + 22) = 2080;
        uint64_t v40 = (uint64_t)ImageAtIndex;
        sub_10000A844(&qword_10097E220);
        uint64_t v28 = Optional.debugDescription.getter();
        uint64_t v40 = sub_100254634(v28, v29, &v41);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        unint64_t v30 = v39;

        swift_bridgeObjectRelease();
        os_log_t v31 = v35;
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v27(v14, v8);
      }
      else
      {
        unint64_t v33 = v39;

        uint64_t v34 = *(void (**)(char *, uint64_t))(v9 + 8);
        v34(v12, v8);
        swift_bridgeObjectRelease_n();
        v34(v14, v8);
      }
    }
    else
    {
      type metadata accessor for SDXPCHelperImageCache.CacheError();
      sub_100696450(&qword_10097E218, (void (*)(uint64_t))type metadata accessor for SDXPCHelperImageCache.CacheError);
      swift_allocError();
      CGImageRef ImageAtIndex = v32;
      (*(void (**)(CGImage *, char *, uint64_t))(v9 + 16))(v32, v14, v8);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
  }
  return ImageAtIndex;
}

uint64_t static SDXPCHelperImageCache.cacheCount()()
{
  return sub_1006919D0();
}

uint64_t sub_1006919D0()
{
  uint64_t v0 = sub_10000A844((uint64_t *)&unk_10096AC10);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  id v56 = (char *)v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v58 = (char *)v53 - v3;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v68 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v59 = (char *)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v55 = (char *)v53 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v66 = (char *)v53 - v10;
  __chkstk_darwin(v9);
  unint64_t v12 = (void (**)(char *, uint64_t))((char *)v53 - v11);
  unint64_t v13 = self;
  uint64_t v14 = (uint64_t)[(id)v13 defaultManager];
  if (qword_10096A120 != -1) {
    goto LABEL_41;
  }
  while (1)
  {
    sub_10000B47C(v4, (uint64_t)qword_10097E1A0);
    URL._bridgeToObjectiveC()(v15);
    CFURLRef v17 = v16;
    uint64_t v69 = 0;
    id v18 = [(id)v14 contentsOfDirectoryAtURL:v16 includingPropertiesForKeys:0 options:0 error:&v69];

    uint64_t v19 = v69;
    if (!v18)
    {
      uint64_t v32 = v19;
LABEL_38:
      _convertNSErrorToError(_:)();

      return swift_willThrow();
    }
    uint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v69 = _swiftEmptyArrayStorage;
    uint64_t v21 = *(void *)(v20 + 16);
    uint64_t v67 = v4;
    uint64_t v65 = v21;
    if (v21)
    {
      unint64_t v54 = v13;
      unint64_t v13 = 0;
      uint64_t v61 = v12;
      uint64_t v62 = v68 + 48;
      uint64_t v14 = v68 + 32;
      uint64_t v57 = (void (**)(void, uint64_t))(v68 + 8);
      uint64_t v63 = v68 + 56;
      uint64_t v64 = v68 + 16;
      v53[1] = (v68 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v22 = (uint64_t)v58;
      uint64_t v60 = (char *)v20;
      while (v13 < *(void *)(v20 + 16))
      {
        uint64_t v23 = v68;
        unint64_t v12 = (void (**)(char *, uint64_t))((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
        uint64_t v24 = *(void *)(v68 + 72);
        (*(void (**)(uint64_t, char *, uint64_t))(v68 + 16))(v22, (char *)v12 + v20 + v24 * v13, v4);
        uint64_t v25 = *(char **)(v23 + 56);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v25)(v22, 0, 1, v4);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v22, 1, v4) == 1)
        {
          unint64_t v13 = v54;
          goto LABEL_19;
        }
        unint64_t v26 = *(void (**)(void (**)(void, void), uint64_t, uint64_t))v14;
        uint64_t v27 = v61;
        (*(void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t))v14)(v61, v22, v4);
        if (URL.hasDirectoryPath.getter())
        {
          (*v57)(v27, v4);
        }
        else
        {
          v26((void (**)(void, void))v66, (uint64_t)v27, v4);
          uint64_t v28 = v69;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_10025539C(0, v28[2] + 1, 1);
            uint64_t v28 = v69;
          }
          unint64_t v30 = v28[2];
          unint64_t v29 = v28[3];
          if (v30 >= v29 >> 1)
          {
            sub_10025539C(v29 > 1, v30 + 1, 1);
            uint64_t v28 = v69;
          }
          v28[2] = v30 + 1;
          os_log_t v31 = (char *)v12 + (void)v28 + v30 * v24;
          uint64_t v4 = v67;
          v26((void (**)(void, void))v31, (uint64_t)v66, v67);
          uint64_t v69 = v28;
          uint64_t v22 = (uint64_t)v58;
        }
        ++v13;
        uint64_t v20 = (uint64_t)v60;
        if (v65 == v13)
        {
          unint64_t v13 = v54;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v25)(v22, 1, 1, v4);
          goto LABEL_19;
        }
      }
      __break(1u);
      goto LABEL_40;
    }
    uint64_t v25 = *(char **)(v68 + 56);
    uint64_t v22 = (uint64_t)v58;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v25)(v58, 1, 1, v4);
LABEL_19:
    uint64_t v66 = v25;
    swift_bridgeObjectRelease();
    sub_10026114C(v22);
    unint64_t v12 = (void (**)(char *, uint64_t))v69;
    unint64_t v13 = (unint64_t)[(id)v13 defaultManager];
    if (qword_10096A118 != -1) {
      swift_once();
    }
    sub_10000B47C(v4, (uint64_t)qword_10097E188);
    URL._bridgeToObjectiveC()(v33);
    os_log_t v35 = v34;
    uint64_t v69 = 0;
    id v36 = [(id)v13 contentsOfDirectoryAtURL:v34 includingPropertiesForKeys:0 options:0 error:&v69];

    int v37 = v69;
    if (!v36)
    {
      uint64_t v32 = v37;
      swift_release();
      goto LABEL_38;
    }
    uint64_t v60 = (char *)v12;
    uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v69 = _swiftEmptyArrayStorage;
    uint64_t v38 = v55;
    uint64_t v4 = (uint64_t)v56;
    uint64_t v65 = *(void *)(v14 + 16);
    if (!v65) {
      break;
    }
    unint64_t v39 = 0;
    uint64_t v63 = v68 + 56;
    uint64_t v64 = v68 + 16;
    uint64_t v40 = (unint64_t *)(v68 + 32);
    uint64_t v61 = (void (**)(char *, uint64_t))(v68 + 8);
    uint64_t v62 = v68 + 48;
    while (v39 < *(void *)(v14 + 16))
    {
      uint64_t v41 = v68;
      unint64_t v12 = (void (**)(char *, uint64_t))((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
      uint64_t v42 = (void *)v14;
      uint64_t v43 = *(void *)(v68 + 72);
      unint64_t v44 = (char *)v12 + v14 + v43 * v39;
      uint64_t v45 = v67;
      (*(void (**)(uint64_t, char *, uint64_t))(v68 + 16))(v4, v44, v67);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v66)(v4, 0, 1, v45);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v4, 1, v45) == 1) {
        goto LABEL_35;
      }
      unint64_t v13 = *v40;
      ((void (*)(char *, uint64_t, uint64_t))*v40)(v38, v4, v45);
      if (URL.hasDirectoryPath.getter())
      {
        (*v61)(v38, v45);
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v13)(v59, v38, v45);
        uint64_t v46 = v69;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10025539C(0, v46[2] + 1, 1);
          uint64_t v46 = v69;
        }
        unint64_t v48 = v46[2];
        unint64_t v47 = v46[3];
        if (v48 >= v47 >> 1)
        {
          sub_10025539C(v47 > 1, v48 + 1, 1);
          uint64_t v46 = v69;
        }
        v46[2] = v48 + 1;
        ((void (*)(char *, char *, uint64_t))v13)((char *)v12 + (void)v46 + v48 * v43, v59, v67);
        uint64_t v69 = v46;
        uint64_t v38 = v55;
        uint64_t v4 = (uint64_t)v56;
      }
      ++v39;
      uint64_t v14 = (uint64_t)v42;
      if (v65 == v39) {
        goto LABEL_34;
      }
    }
LABEL_40:
    __break(1u);
LABEL_41:
    swift_once();
  }
LABEL_34:
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v66)(v4, 1, 1, v67);
LABEL_35:
  swift_bridgeObjectRelease();
  sub_10026114C(v4);
  uint64_t v49 = v69;
  uint64_t v50 = *((void *)v60 + 2);
  swift_release();
  uint64_t v51 = v49[2];
  swift_release();
  uint64_t result = v50 + v51;
  if (__OFADD__(v50, v51)) {
    __break(1u);
  }
  return result;
}

id SDXPCHelperImageCache.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

id SDXPCHelperImageCache.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDXPCHelperImageCache();
  return [super init];
}

id SDXPCHelperImageCache.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDXPCHelperImageCache();
  return [super dealloc];
}

void sub_1006922E8()
{
  id v0 = [self defaultManager];
  if (qword_10096A120 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = sub_10000B47C(v1, (uint64_t)qword_10097E1A0);
  URL._bridgeToObjectiveC()(v3);
  uint64_t v5 = v4;
  uint64_t v15 = 0;
  id v6 = [v0 contentsOfDirectoryAtURL:v4 includingPropertiesForKeys:0 options:0 error:&v15];

  id v7 = (id)v15;
  if (v6)
  {
    uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v9 = *(void *)(v8 + 16);
    swift_bridgeObjectRelease();
    if (qword_10096A108 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000B47C(v10, (uint64_t)qword_10097E168);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 134218496;
      uint64_t v15 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v13 + 12) = 2048;
      uint64_t v15 = 500;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v13 + 22) = 1024;
      LODWORD(v15) = v9 > 0x1F4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "ensureCacheNotFull - numItems = %ld, limit = %ld, shouldPurge = %{BOOL}d", (uint8_t *)v13, 0x1Cu);
      swift_slowDealloc();
    }

    if (v9 >= 0x1F5) {
      sub_10068F1D0(v2);
    }
  }
  else
  {
    uint64_t v14 = v7;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
}

uint64_t sub_10069259C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void **)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_10096AC10);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = (void *)type metadata accessor for URLResourceValues();
  uint64_t v75 = *(v9 - 1);
  __chkstk_darwin(v9);
  uint64_t v90 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A128 != -1) {
LABEL_47:
  }
    swift_once();
  uint64_t v11 = sub_10000B47C(v2, (uint64_t)qword_10097E1B8);
  uint64_t v12 = v1;
  sub_10068F1D0(v11);
  if (v1)
  {
    swift_errorRelease();
    uint64_t v12 = 0;
  }
  uint64_t v88 = v12;
  uint64_t v91 = v3;
  int v86 = v5;
  os_log_type_t v89 = (char *)v2;
  if (qword_10096A130 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_10097E1D0;
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v13 stringForKey:v14];

  if (v15)
  {
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v18 = v17;
  }
  else
  {
    uint64_t v16 = 0;
    unint64_t v18 = 0;
  }
  uint64_t v87 = v8;
  NSString v19 = String._bridgeToObjectiveC()();
  uint64_t v20 = MGGetStringAnswer();
  if (!v20) {
    __break(1u);
  }
  uint64_t v21 = (void *)v20;
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v24 = v23;

  uint64_t v25 = &qword_10096A000;
  int v74 = v9;
  if (v18 && (v22 == v16 && v18 == v24 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v26 = v88;
    uint64_t v8 = v89;
LABEL_30:
    uint64_t v3 = v86;
    uint64_t v46 = v87;
    os_log_t v35 = v91;
    goto LABEL_31;
  }
  uint64_t v85 = v22;
  if (qword_10096A108 != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  uint64_t v28 = sub_10000B47C(v27, (uint64_t)qword_10097E168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  uint64_t v84 = (unsigned int (**)(char *, uint64_t, char *))v28;
  unint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    os_log_t v83 = v29;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v93 = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 136315394;
    swift_bridgeObjectRetain();
    v92[0] = (id)sub_100254634(v85, v24, &v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 12) = 2080;
    unint64_t v32 = v18;
    uint64_t v33 = v16;
    if (!v18)
    {
      v92[0] = 0;
      v92[1] = (id)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      uint64_t v33 = 0xD000000000000015;
      unint64_t v32 = 0x80000001007B7770;
    }
    swift_bridgeObjectRetain();
    v92[0] = (id)sub_100254634(v33, v32, &v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v34 = v83;
    _os_log_impl((void *)&_mh_execute_header, v83, v30, "currentBuild(%s) != lastBuildUpdate(%s), purging.", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v25 = &qword_10096A000;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  os_log_t v35 = v91;
  if (v25[36] != -1) {
    swift_once();
  }
  uint64_t v36 = sub_10000B47C((uint64_t)v89, (uint64_t)qword_10097E1A0);
  uint64_t v37 = v88;
  sub_10068F1D0(v36);
  uint64_t v26 = v37;
  if (v37)
  {
    swift_bridgeObjectRelease();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      v92[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136315138;
      swift_getErrorValue();
      uint64_t v41 = Error.localizedDescription.getter();
      uint64_t v93 = sub_100254634(v41, v42, (uint64_t *)v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Couldn't purge for bundle version change: %s", v40, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v26 = 0;
    uint64_t v8 = v89;
    goto LABEL_30;
  }
  uint64_t v43 = (void *)qword_10097E1D0;
  NSString v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v45 = String._bridgeToObjectiveC()();
  [v43 setObject:v44 forKey:v45];

  uint64_t v8 = v89;
  uint64_t v3 = v86;
  uint64_t v46 = v87;
LABEL_31:
  URLResourceValues.init()();
  URLResourceValues.isExcludedFromBackup.setter();
  sub_10000A844(&qword_10096B358);
  uint64_t v47 = v35[9];
  unint64_t v48 = (*((unsigned __int8 *)v35 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v35 + 80);
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_100770AD0;
  uint64_t v88 = v49;
  uint64_t v2 = v49 + v48;
  if (qword_10096A120 != -1) {
    swift_once();
  }
  uint64_t v50 = sub_10000B47C((uint64_t)v8, (uint64_t)qword_10097E1A0);
  uint64_t v5 = (char *)(v35 + 2);
  unint64_t v9 = (void *)v35[2];
  ((void (*)(uint64_t, uint64_t, char *))v9)(v2, v50, v8);
  uint64_t v85 = v47;
  uint64_t v51 = v2 + v47;
  if (qword_10096A118 != -1) {
    swift_once();
  }
  uint64_t v52 = sub_10000B47C((uint64_t)v8, (uint64_t)qword_10097E188);
  ((void (*)(uint64_t, uint64_t, char *))v9)(v51, v52, v8);
  uint64_t v53 = 0;
  unint64_t v54 = 0;
  int v86 = v35 + 7;
  uint64_t v84 = (unsigned int (**)(char *, uint64_t, char *))(v35 + 6);
  uint64_t v82 = (void (**)(void *, char *, char *))(v35 + 4);
  NSFileAttributeKey v81 = NSFileProtectionKey;
  NSFileProtectionType v80 = NSFileProtectionCompleteUnlessOpen;
  os_log_t v83 = (os_log_t)(v35 + 1);
  long long v79 = xmmword_10076E7A0;
  uint64_t v78 = (char *)&type metadata for Any + 8;
  id v77 = (char *)(v35 + 2);
  while (1)
  {
    uint64_t v1 = v53;
    if (v54 >= *(void *)(v88 + 16))
    {
      __break(1u);
      goto LABEL_47;
    }
    ((void (*)(char *, unint64_t, char *))v9)(v46, v2 + v54 * v85, v8);
    unint64_t v55 = (void (*)(char *, uint64_t, uint64_t, char *))*v86;
    ((void (*)(char *, void, uint64_t, char *))*v86)(v46, 0, 1, v8);
    if ((*v84)(v46, 1, v8) == 1) {
      goto LABEL_44;
    }
    id v76 = v55;
    LODWORD(v91) = v1;
    uint64_t v56 = v2;
    uint64_t v57 = v26;
    (*v82)(v3, v46, v8);
    id v58 = [self defaultManager];
    URL._bridgeToObjectiveC()(v59);
    uint64_t v61 = v60;
    sub_10000A844(&qword_100979F80);
    uint64_t v62 = v3;
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v79;
    NSFileAttributeKey v64 = v81;
    *(void *)(inited + 32) = v81;
    type metadata accessor for FileProtectionType(0);
    *(void *)(inited + 64) = v65;
    NSFileProtectionType v66 = v80;
    *(void *)(inited + 40) = v80;
    uint64_t v67 = v64;
    uint64_t v68 = v66;
    sub_100247050(inited);
    type metadata accessor for FileAttributeKey(0);
    sub_100696450(&qword_10096AC78, type metadata accessor for FileAttributeKey);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v92[0] = 0;
    LODWORD(inited) = [v58 createDirectoryAtURL:v61 withIntermediateDirectories:1 attributes:isa error:v92];

    if (!inited)
    {
      id v71 = v92[0];
      swift_bridgeObjectRelease();
      _convertNSErrorToError(_:)();

      swift_willThrow();
      ((void (*)(void *, char *))v83->isa)(v62, v89);
      return (*(uint64_t (**)(char *, void *))(v75 + 8))(v90, v74);
    }
    id v70 = v92[0];
    URL.setResourceValues(_:)();
    uint64_t v26 = v57;
    uint64_t v3 = v62;
    if (v57) {
      break;
    }
    uint64_t v8 = v89;
    ((void (*)(void *, char *))v83->isa)(v62, v89);
    uint64_t v53 = 1;
    unint64_t v54 = 1;
    uint64_t v46 = v87;
    uint64_t v2 = v56;
    uint64_t v5 = v77;
    if (v91)
    {
      v76(v87, 1, 1, v8);
      goto LABEL_44;
    }
  }
  ((void (*)(void *, char *))v83->isa)(v62, v89);
LABEL_44:
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, void *))(v75 + 8))(v90, v74);
}

uint64_t sub_100693234@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v77 = a1;
  uint64_t v74 = a4;
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v75 = *(void *)(v6 - 8);
  uint64_t v76 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v72 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v73 = (char *)&v65 - v9;
  uint64_t v10 = type metadata accessor for SHA256();
  uint64_t v65 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for SHA256Digest();
  uint64_t v67 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  NSFileProtectionType v66 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for String.Encoding();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v81 = a3;
  uint64_t v71 = a3;
  swift_bridgeObjectRetain();
  sub_10069457C((uint64_t *)&v81);
  uint64_t v78 = v81;
  uint64_t v18 = sub_10000A844((uint64_t *)&unk_100974C30);
  uint64_t v69 = sub_1002AE308((unint64_t *)&qword_10096CE90, (uint64_t *)&unk_100974C30);
  uint64_t v70 = v18;
  uint64_t v19 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v21 = v20;
  *(void *)&long long v81 = v77;
  *((void *)&v81 + 1) = a2;
  swift_bridgeObjectRetain();
  v22._uint64_t countAndFlagsBits = 124;
  v22._object = (void *)0xE100000000000000;
  String.append(_:)(v22);
  v23._uint64_t countAndFlagsBits = v19;
  v23._object = v21;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  static String.Encoding.utf8.getter();
  uint64_t v24 = String.data(using:allowLossyConversion:)();
  unint64_t v26 = v25;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v84 = v24;
  unint64_t v85 = v26;
  sub_10000A844(&qword_10096B260);
  Optional.unwrap(_:file:line:)();
  sub_100250CB0(v24, v26);
  unint64_t v28 = *((void *)&v81 + 1);
  uint64_t v27 = v81;
  sub_100696450((unint64_t *)&unk_100974C20, (void (*)(uint64_t))&type metadata accessor for SHA256);
  dispatch thunk of HashFunction.init()();
  switch(v28 >> 62)
  {
    case 1uLL:
      if (v27 >> 32 < (int)v27) {
        __break(1u);
      }
      sub_10025ADCC(v27, v28);
      sub_1006661F0((int)v27, v27 >> 32);
      break;
    case 2uLL:
      uint64_t v29 = *(void *)(v27 + 16);
      uint64_t v30 = *(void *)(v27 + 24);
      sub_10025ADCC(v27, v28);
      swift_retain();
      swift_retain();
      sub_1006661F0(v29, v30);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      *(void *)((char *)&v81 + 6) = 0;
      *(void *)&long long v81 = 0;
      goto LABEL_5;
    default:
      *(void *)&long long v81 = v27;
      WORD4(v81) = v28;
      BYTE10(v81) = BYTE2(v28);
      BYTE11(v81) = BYTE3(v28);
      BYTE12(v81) = BYTE4(v28);
      BYTE13(v81) = BYTE5(v28);
LABEL_5:
      dispatch thunk of HashFunction.update(bufferPointer:)();
      break;
  }
  sub_100250CC4(v27, v28);
  uint64_t v31 = v66;
  dispatch thunk of HashFunction.finalize()();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v12, v10);
  uint64_t v32 = v68;
  uint64_t v82 = v68;
  uint64_t v83 = sub_100696450(&qword_100974AE0, (void (*)(uint64_t))&type metadata accessor for SHA256Digest);
  uint64_t v33 = sub_100278AE4((uint64_t *)&v81);
  uint64_t v34 = v67;
  (*(void (**)(uint64_t *, char *, uint64_t))(v67 + 16))(v33, v31, v32);
  sub_10026BB6C(&v81, v82);
  dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v32);
  uint64_t v35 = v84;
  unint64_t v36 = v85;
  sub_10024D338((uint64_t)&v81);
  Swift::String v37 = Data.base64EncodedString(options:)(0);
  uint64_t countAndFlagsBits = v37._countAndFlagsBits;
  sub_100250CC4(v35, v36);
  uint64_t v39 = v78;
  int64_t v40 = *(void *)(v78 + 16);
  if (v40)
  {
    uint64_t v68 = v37._countAndFlagsBits;
    unint64_t v77 = v28;
    *(void *)&long long v81 = _swiftEmptyArrayStorage;
    sub_100255510(0, v40, 0);
    uint64_t v41 = (void *)v81;
    uint64_t v42 = v39 + 40;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_100690544();
      uint64_t v45 = v44;
      swift_bridgeObjectRelease();
      *(void *)&long long v81 = v41;
      unint64_t v47 = v41[2];
      unint64_t v46 = v41[3];
      if (v47 >= v46 >> 1)
      {
        sub_100255510(v46 > 1, v47 + 1, 1);
        uint64_t v41 = (void *)v81;
      }
      v42 += 16;
      uint64_t v41[2] = v47 + 1;
      unint64_t v48 = &v41[2 * v47];
      v48[4] = v43;
      v48[5] = v45;
      --v40;
    }
    while (v40);
    swift_release();
    unint64_t v28 = v77;
    uint64_t countAndFlagsBits = v68;
  }
  else
  {
    swift_release();
    uint64_t v41 = _swiftEmptyArrayStorage;
  }
  *(void *)&long long v81 = v41;
  uint64_t v49 = BidirectionalCollection<>.joined(separator:)();
  unint64_t v51 = v50;
  swift_bridgeObjectRelease();
  uint64_t v52 = HIBYTE(v51) & 0xF;
  if ((v51 & 0x2000000000000000) == 0) {
    uint64_t v52 = v49 & 0xFFFFFFFFFFFFLL;
  }
  if (v52) {
    uint64_t v53 = 124;
  }
  else {
    uint64_t v53 = 0;
  }
  if (v52) {
    unint64_t v54 = (void *)0xE100000000000000;
  }
  else {
    unint64_t v54 = (void *)0xE000000000000000;
  }
  *(void *)&long long v81 = v49;
  *((void *)&v81 + 1) = v51;
  swift_bridgeObjectRetain();
  v55._uint64_t countAndFlagsBits = v53;
  v55._object = v54;
  String.append(_:)(v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v56._uint64_t countAndFlagsBits = countAndFlagsBits;
  v56._object = v37._object;
  String.append(_:)(v56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v84 = 47;
  unint64_t v85 = 0xE100000000000000;
  uint64_t v79 = 42;
  unint64_t v80 = 0xE100000000000000;
  sub_10024A1FC();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  if (*(void *)(v71 + 16))
  {
    uint64_t v58 = v75;
    uint64_t v57 = v76;
    uint64_t v59 = v73;
    uint64_t v60 = v72;
    if (qword_10096A118 != -1) {
      swift_once();
    }
    uint64_t v61 = qword_10097E188;
  }
  else
  {
    uint64_t v58 = v75;
    uint64_t v57 = v76;
    uint64_t v59 = v73;
    uint64_t v60 = v72;
    if (qword_10096A120 != -1) {
      swift_once();
    }
    uint64_t v61 = qword_10097E1A0;
  }
  uint64_t v62 = sub_10000B47C(v57, (uint64_t)v61);
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v60, v62, v57);
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v63 = *(void (**)(char *, uint64_t))(v58 + 8);
  v63(v60, v57);
  URL.appendingPathExtension(_:)();
  sub_100250CC4(v27, v28);
  return ((uint64_t (*)(char *, uint64_t))v63)(v59, v57);
}

void sub_100693C30(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v27 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v22 - v8;
  if (qword_10096A108 != -1) {
    goto LABEL_11;
  }
  while (1)
  {
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000B47C(v10, (uint64_t)qword_10097E168);
    unint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v26(v9, a1, v4);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v25 = a1;
      uint64_t v14 = (uint8_t *)v13;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v29 = v23;
      uint64_t v24 = v2;
      *(_DWORD *)uint64_t v14 = 136315138;
      v22[1] = v14 + 4;
      sub_100696450((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v28 = sub_100254634(v15, v16, &v29);
      uint64_t v2 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "markPurgeable: %s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a1 = v25;
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    }

    sub_10000B740(0, &qword_10097E238);
    uint64_t v5 = (uint64_t)v27;
    v26(v27, a1, v4);
    id v17 = sub_100694044(v5);
    if (v2) {
      break;
    }
    uint64_t v18 = v17;
    int v19 = [v17 fileDescriptor];
    uint64_t v29 = 67585;
    sub_10069419C(&v29, v19, a1, &v28);
    uint64_t v29 = 0;
    if ([v18 closeAndReturnError:&v29])
    {
      id v20 = (id)v29;

      return;
    }
    id v21 = (id)v29;
    a1 = _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
LABEL_11:
    swift_once();
  }
}

id sub_100694044(uint64_t a1)
{
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  uint64_t v3 = v2;
  id v12 = 0;
  id v4 = [(id)swift_getObjCClassFromMetadata() fileHandleForReadingFromURL:v2 error:&v12];

  id v5 = v12;
  if (v4)
  {
    uint64_t v6 = type metadata accessor for URL();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    id v8 = v5;
    v7(a1, v6);
  }
  else
  {
    id v9 = v12;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v10 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
  }
  return v4;
}

uint64_t sub_10069419C(void *a1, int a2, uint64_t a3, void *a4)
{
  uint64_t result = ffsctl(a2, 0xC0084A44uLL, a1, 0);
  if (result)
  {
    int v7 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    sub_10000A844((uint64_t *)&unk_10097D2B0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v10;
    uint64_t v11 = type metadata accessor for URL();
    *(void *)(inited + 72) = v11;
    id v12 = sub_100278AE4((uint64_t *)(inited + 48));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v12, a3, v11);
    sub_100245A7C(inited);
    id v13 = objc_allocWithZone((Class)NSError);
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v16 = [v13 initWithDomain:v14 code:v8 userInfo:isa];

    uint64_t result = swift_willThrow();
    *a4 = v16;
  }
  return result;
}

void sub_100694344(CGImage *a1, uint64_t a2)
{
  sub_10068F1D0(a2);
  if (!v2)
  {
    sub_1006922E8();
    URL._bridgeToObjectiveC()(v5);
    CFURLRef v7 = v6;
    uint64_t v8 = CGImageDestinationCreateWithURL(v6, kUTTypePNG, 1uLL, 0);

    if (v8)
    {
      CGImageDestinationAddImage(v8, a1, 0);
      if (CGImageDestinationFinalize(v8))
      {
        sub_100693C30(a2);
      }
      else
      {
        type metadata accessor for SDXPCHelperImageCache.CacheError();
        sub_100696450(&qword_10097E218, (void (*)(uint64_t))type metadata accessor for SDXPCHelperImageCache.CacheError);
        swift_allocError();
        uint64_t v13 = v12;
        uint64_t v14 = type metadata accessor for URL();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v13, a2, v14);
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
      }
    }
    else
    {
      type metadata accessor for SDXPCHelperImageCache.CacheError();
      sub_100696450(&qword_10097E218, (void (*)(uint64_t))type metadata accessor for SDXPCHelperImageCache.CacheError);
      swift_allocError();
      uint64_t v10 = v9;
      uint64_t v11 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v10, a2, v11);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
  }
}

unint64_t sub_100694560()
{
  return 0xD00000000000001ALL;
}

Swift::Int sub_10069457C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100482D8C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_1006945E8(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_1006945E8(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_100694CD4(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  Swift::Int v105 = result;
  int v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      uint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_100694DA4((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_100482474((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v104[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v106 = v3;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    id v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    id v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ _stringCompareWithSmolCheck(_:_:expecting:)()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      Swift::Int v22 = v20 + 1;
      Swift::Int v9 = v20;
      Swift::Int v20 = v22;
    }
    while (v22 < v3);
    Swift::Int v20 = v22;
LABEL_36:
    Swift::Int v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        Swift::Int v27 = v20;
        Swift::Int v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      Swift::Int v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_100481FEC(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_100481FEC((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      Swift::Int v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        unint64_t v85 = v11;
        int v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_100694DA4((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)int v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        Swift::Int v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    Swift::Int v32 = v3;
  }
  else {
    Swift::Int v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        Swift::Int v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      Swift::Int v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100694CD4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    Swift::Int v9 = (uint64_t *)(v7 + 16 * v4);
    Swift::Int result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      Swift::Int result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100694DA4(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  Swift::Int v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      id v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      Swift::Int v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          Swift::Int v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            Swift::Int v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      Swift::Int v27 = v7;
    }
LABEL_50:
    sub_1004823B8((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100695040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_10096AC10);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v38 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v45 = _swiftEmptyArrayStorage;
  uint64_t v37 = *(void *)(a1 + 16);
  if (v37)
  {
    uint64_t v31 = (char *)v26 - v12;
    Swift::Int v32 = v6;
    unint64_t v13 = 0;
    uint64_t v33 = a1;
    uint64_t v34 = v8 + 48;
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    Swift::Int v27 = (uint64_t (**)(char *, uint64_t))(v8 + 8);
    Swift::Int v28 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v35 = v8 + 56;
    uint64_t v36 = v8 + 16;
    v26[1] = (v8 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v30 = v8;
    while (v13 < *(void *)(a1 + 16))
    {
      unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v16 = *(void *)(v8 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, a1 + v15 + v16 * v13, v7);
      uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v29(v6, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
        goto LABEL_15;
      }
      id v17 = *v14;
      uint64_t v18 = v14;
      uint64_t v19 = v7;
      Swift::Int v20 = v31;
      v17(v31, v6, v19);
      uint64_t v43 = URL.absoluteString.getter();
      uint64_t v44 = v21;
      uint64_t v41 = v39;
      uint64_t v42 = v40;
      sub_10024A1FC();
      char v22 = StringProtocol.contains<A>(_:)();
      swift_bridgeObjectRelease();
      if (v22)
      {
        v17(v38, v20, v19);
        BOOL v23 = v45;
        uint64_t v7 = v19;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10025539C(0, v23[2] + 1, 1);
          BOOL v23 = v45;
        }
        unint64_t v25 = v23[2];
        unint64_t v24 = v23[3];
        uint64_t v14 = v28;
        if (v25 >= v24 >> 1)
        {
          sub_10025539C(v24 > 1, v25 + 1, 1);
          BOOL v23 = v45;
        }
        v23[2] = v25 + 1;
        uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v17)((char *)v23 + v15 + v25 * v16, v38, v7);
        uint64_t v45 = v23;
      }
      else
      {
        uint64_t result = (*v27)(v20, v19);
        uint64_t v7 = v19;
        uint64_t v14 = v18;
      }
      ++v13;
      uint64_t v6 = v32;
      a1 = v33;
      uint64_t v8 = v30;
      if (v37 == v13)
      {
        v29(v32, 1, 1, v7);
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
LABEL_15:
    swift_bridgeObjectRelease();
    sub_10026114C((uint64_t)v6);
    return (uint64_t)v45;
  }
  return result;
}

uint64_t _s16DaemoniOSLibrary21SDXPCHelperImageCacheC5evict17contactIdentifierySS_tFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A110 != -1) {
    swift_once();
  }
  v15[0] = qword_10097E180;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  aBlock[4] = sub_1006964D0;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008E4D98;
  unint64_t v13 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  v15[1] = _swiftEmptyArrayStorage;
  sub_100696450((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t _s16DaemoniOSLibrary21SDXPCHelperImageCacheC05clearE8WithSyncyySbFZ_0(char a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  v17[0] = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)type metadata accessor for DispatchQoS();
  uint64_t v6 = *(v5 - 1);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A108 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000B47C(v9, (uint64_t)qword_10097E168);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 67109120;
    LODWORD(aBlock) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "clearCacheWithSync: %{BOOL}d", v12, 8u);
    swift_slowDealloc();
  }

  BOOL v13 = qword_10096A110 == -1;
  if ((a1 & 1) == 0) {
    goto LABEL_10;
  }
  if (qword_10096A110 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_10097E180;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_10068EF80;
  *(void *)(v2 + 24) = 0;
  char v22 = sub_1005701BC;
  BOOL v23 = (char *)v2;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v19 = 1107296256;
  Swift::Int v20 = sub_1006CDF68;
  uint64_t v21 = &unk_1008E4E38;
  uint64_t v5 = _Block_copy(&aBlock);
  uint64_t v4 = v23;
  swift_retain();
  swift_release();
  dispatch_sync(v14, v5);
  _Block_release(v5);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v14)
  {
    __break(1u);
LABEL_10:
    if (!v13) {
      swift_once();
    }
    char v22 = sub_10068EF80;
    BOOL v23 = 0;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v19 = 1107296256;
    Swift::Int v20 = sub_100296520;
    uint64_t v21 = &unk_1008E4DE8;
    uint64_t v16 = _Block_copy(&aBlock);
    static DispatchQoS.unspecified.getter();
    v17[1] = _swiftEmptyArrayStorage;
    sub_100696450((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v17[0] + 8))(v4, v2);
    (*(void (**)(char *, void *))(v6 + 8))(v8, v5);
    return swift_release();
  }
  return result;
}

uint64_t _s16DaemoniOSLibrary21SDXPCHelperImageCacheC12purgeAvatarsyyFZ_0()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v9[0] - 8);
  __chkstk_darwin(v9[0]);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A110 != -1) {
    swift_once();
  }
  aBlock[4] = sub_10068F8C0;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008E4DC0;
  uint64_t v7 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter();
  v9[1] = _swiftEmptyArrayStorage;
  sub_100696450((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v7);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, void))(v4 + 8))(v6, v9[0]);
}

uint64_t _s16DaemoniOSLibrary21SDXPCHelperImageCacheC03setD0_6forKey10contactIDsySo10CGImageRefa_SSSaySSGtFZ_0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  os_log_type_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A110 != -1) {
    swift_once();
  }
  v20[0] = qword_10097E180;
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a4;
  aBlock[4] = sub_10069642C;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008E4D48;
  id v17 = _Block_copy(aBlock);
  id v18 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  v20[1] = _swiftEmptyArrayStorage;
  sub_100696450((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

CGImageRef _s16DaemoniOSLibrary21SDXPCHelperImageCacheC11imageForKey_10contactIDsSo10CGImageRefaSgSS_SaySSGtFZ_0(unint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_100691424(a1, a2, a3);
}

uint64_t type metadata accessor for SDXPCHelperImageCache()
{
  return self;
}

uint64_t type metadata accessor for SDXPCHelperImageCache.CacheError()
{
  uint64_t result = qword_10097E2B0;
  if (!qword_10097E2B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1006963E4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10069642C()
{
  return sub_100690D3C(*(CGImage **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100696438(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100696448()
{
  return swift_release();
}

uint64_t sub_100696450(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100696498()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1006964D0()
{
  sub_10068FB84(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1006964D8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t *sub_1006964E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    uint64_t v6 = type metadata accessor for URL();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10069666C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 2)
  {
    uint64_t v3 = type metadata accessor for URL();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

uint64_t sub_1006966E8(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100696778(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100696818(a1);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100696818(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDXPCHelperImageCache.CacheError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100696874(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100696904(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100696818(a1);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1006969A4()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_100696A50()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097E2E8);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097E2E8);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100696B18()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  sub_10000B740(0, (unint64_t *)&qword_10096A1A0);
  static DispatchQoS.unspecified.getter();
  v7[1] = _swiftEmptyArrayStorage;
  sub_10069D73C((unint64_t *)&unk_100974840, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000A844((uint64_t *)&unk_10096A1B0);
  sub_1002477E4();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  qword_10097E300 = result;
  return result;
}

uint64_t sub_100696D58(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropReceive.AskRequest();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_100696EBC, v5, 0);
}

uint64_t sub_100696EBC()
{
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v4 = v0[9];
  uint64_t v5 = *(void *)(SFAirDropReceive.AskRequest.files.getter() + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  uint64_t v7 = v0[10];
  uint64_t v6 = v0[11];
  uint64_t v8 = v0[9];
  if (v5)
  {
    uint64_t v9 = *(void *)(SFAirDropReceive.AskRequest.urlItems.getter() + 16);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    if (!v9)
    {
      id v10 = objc_allocWithZone((Class)LSApplicationRecord);
      id v11 = sub_1006A5458(0xD000000000000019, 0x80000001007C6720, 1);
      uint64_t v20 = v0[6];
      uint64_t v21 = v0[4];
      char v22 = *(void **)(v21 + 16);
      uint64_t v47 = v21;
      *(void *)(v21 + 16) = v11;

      uint64_t result = SFAirDropReceive.AskRequest.items.getter();
      int64_t v24 = 0;
      uint64_t v45 = result + 56;
      os_log_t log = (os_log_t)result;
      uint64_t v25 = -1;
      uint64_t v26 = -1 << *(unsigned char *)(result + 32);
      if (-v26 < 64) {
        uint64_t v25 = ~(-1 << -(char)v26);
      }
      unint64_t v27 = v25 & *(void *)(result + 56);
      uint64_t v48 = OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasVideos;
      uint64_t v49 = OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasPhotos;
      int64_t v46 = (unint64_t)(63 - v26) >> 6;
      uint64_t v51 = v20;
      uint64_t v50 = (uint64_t (**)(uint64_t, uint64_t))(v20 + 8);
      while (1)
      {
        if (v27)
        {
          unint64_t v34 = __clz(__rbit64(v27));
          v27 &= v27 - 1;
          unint64_t v35 = v34 | (v24 << 6);
        }
        else
        {
          int64_t v36 = v24 + 1;
          if (__OFADD__(v24, 1))
          {
            __break(1u);
            swift_once();
            uint64_t v12 = type metadata accessor for Logger();
            sub_10000B47C(v12, (uint64_t)qword_10097E2E8);
            swift_errorRetain();
            swift_errorRetain();
            uint64_t v13 = Logger.logObject.getter();
            os_log_type_t v14 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v13, v14))
            {
              loga = v13;
              unint64_t v15 = (uint8_t *)swift_slowAlloc();
              uint64_t v16 = (void *)swift_slowAlloc();
              *(_DWORD *)unint64_t v15 = 138412290;
              swift_errorRetain();
              uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
              *(void *)(v24 - 8) = v17;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *uint64_t v16 = v17;
              swift_errorRelease();
              swift_errorRelease();
              _os_log_impl((void *)&_mh_execute_header, loga, v14, "Failed to get Photos application: %@", v15, 0xCu);
              sub_10000A844(&qword_10096B850);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              swift_errorRelease();
            }
            else
            {
              swift_errorRelease();
              swift_errorRelease();
              swift_errorRelease();
            }
            goto LABEL_7;
          }
          if (v36 >= v46) {
            goto LABEL_35;
          }
          unint64_t v37 = *(void *)(v45 + 8 * v36);
          ++v24;
          if (!v37)
          {
            int64_t v24 = v36 + 1;
            if (v36 + 1 >= v46) {
              goto LABEL_35;
            }
            unint64_t v37 = *(void *)(v45 + 8 * v24);
            if (!v37)
            {
              int64_t v24 = v36 + 2;
              if (v36 + 2 >= v46) {
                goto LABEL_35;
              }
              unint64_t v37 = *(void *)(v45 + 8 * v24);
              if (!v37)
              {
                int64_t v38 = v36 + 3;
                if (v38 >= v46)
                {
LABEL_35:
                  swift_release();
                  uint64_t v18 = 1;
                  goto LABEL_8;
                }
                unint64_t v37 = *(void *)(v45 + 8 * v38);
                if (!v37)
                {
                  while (1)
                  {
                    int64_t v24 = v38 + 1;
                    if (__OFADD__(v38, 1)) {
                      break;
                    }
                    if (v24 >= v46) {
                      goto LABEL_35;
                    }
                    unint64_t v37 = *(void *)(v45 + 8 * v24);
                    ++v38;
                    if (v37) {
                      goto LABEL_30;
                    }
                  }
                  __break(1u);
                  return result;
                }
                int64_t v24 = v38;
              }
            }
          }
LABEL_30:
          unint64_t v27 = (v37 - 1) & v37;
          unint64_t v35 = __clz(__rbit64(v37)) + (v24 << 6);
        }
        uint64_t v40 = v0[7];
        uint64_t v39 = v0[8];
        uint64_t v41 = v0[5];
        (*(void (**)(uint64_t, char *, uint64_t))(v51 + 16))(v39, (char *)log[6].isa + *(void *)(v51 + 72) * v35, v41);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v40, v39, v41);
        SFAirDropReceive.AskRequest.ItemInfo.fileType.getter();
        NSString v42 = String._bridgeToObjectiveC()();
        int v43 = SFIsPhotosAssetBundle();

        if (v43)
        {
          swift_bridgeObjectRelease();
          SFAirDropReceive.AskRequest.ItemInfo.fileSubType.getter();
          if (!v44) {
            break;
          }
        }
        uint64_t v28 = v0[7];
        uint64_t v29 = v0[5];
        NSString v30 = String._bridgeToObjectiveC()();
        int v31 = SFIsImage();

        NSString v32 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        int v33 = SFIsVideo();

        uint64_t result = (*v50)(v28, v29);
        *(unsigned char *)(v47 + v49) = (*(unsigned char *)(v47 + v49) | v31) & 1;
        *(unsigned char *)(v47 + v48) = (*(unsigned char *)(v47 + v48) | v33) & 1;
        if (((v31 | v33 | v43) & 1) == 0) {
          goto LABEL_37;
        }
      }
      (*v50)(v0[7], v0[5]);
LABEL_37:
      swift_release();
    }
  }
  else
  {
    (*(void (**)(void, void))(v7 + 8))(v0[11], v0[9]);
  }
LABEL_7:
  uint64_t v18 = 0;
LABEL_8:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(uint64_t))v0[1];
  return v19(v18);
}

void sub_100697488(uint64_t a1, int a2)
{
  int64_t v3 = v2;
  LODWORD(v4) = a2;
  uint64_t v5 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = &v62[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  *(void *)&long long v71 = &v62[-v10];
  id v11 = (unsigned char *)OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasPhotos;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasPhotos) == 1
    && *(unsigned char *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasVideos) == 1)
  {
    int v63 = v4;
    uint64_t v12 = SFAirDropReceive.AskRequest.items.getter();
    uint64_t v64 = 0;
    uint64_t v65 = 0;
    int64_t v3 = 0;
    uint64_t v13 = *(void *)(v12 + 56);
    uint64_t v66 = v12 + 56;
    uint64_t v70 = v12;
    uint64_t v14 = 1 << *(unsigned char *)(v12 + 32);
    uint64_t v15 = -1;
    if (v14 < 64) {
      uint64_t v15 = ~(-1 << v14);
    }
    unint64_t v4 = v15 & v13;
    int64_t v67 = (unint64_t)(v14 + 63) >> 6;
    uint64_t v69 = v6 + 16;
    uint64_t v68 = v6 + 32;
    id v11 = (unsigned char *)(v6 + 8);
    while (1)
    {
      if (v4)
      {
        unint64_t v16 = __clz(__rbit64(v4));
        v4 &= v4 - 1;
        unint64_t v17 = v16 | (v3 << 6);
      }
      else
      {
        int64_t v18 = v3 + 1;
        if (__OFADD__(v3, 1))
        {
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
          goto LABEL_66;
        }
        if (v18 >= v67) {
          goto LABEL_45;
        }
        unint64_t v19 = *(void *)(v66 + 8 * v18);
        ++v3;
        if (!v19)
        {
          int64_t v3 = v18 + 1;
          if (v18 + 1 >= v67) {
            goto LABEL_45;
          }
          unint64_t v19 = *(void *)(v66 + 8 * v3);
          if (!v19)
          {
            int64_t v3 = v18 + 2;
            if (v18 + 2 >= v67) {
              goto LABEL_45;
            }
            unint64_t v19 = *(void *)(v66 + 8 * v3);
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v67)
              {
LABEL_45:
                swift_release();
                sub_10000A844(&qword_10096D760);
                uint64_t inited = swift_initStackObject();
                *(void *)(inited + 32) = 0x4F544F4850;
                long long v71 = xmmword_100770AD0;
                *(_OWORD *)(inited + 16) = xmmword_100770AD0;
                uint64_t v44 = v65;
                *(void *)(inited + 40) = 0xE500000000000000;
                *(void *)(inited + 48) = v44;
                *(void *)(inited + 56) = 0x4F45444956;
                *(void *)(inited + 64) = 0xE500000000000000;
                uint64_t v45 = v64;
                *(void *)(inited + 72) = v64;
                uint64_t v72 = 0x545F4E5245444F4DLL;
                unint64_t v73 = 0xEF524546534E4152;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v46._uint64_t countAndFlagsBits = 95;
                v46._object = (void *)0xE100000000000000;
                String.append(_:)(v46);
                v47._uint64_t countAndFlagsBits = 0x4F544F4850;
                v47._object = (void *)0xE500000000000000;
                String.append(_:)(v47);
                swift_bridgeObjectRelease();
                if (v44 > 1)
                {
                  v48._uint64_t countAndFlagsBits = 0x4C4152554C505FLL;
                  v48._object = (void *)0xE700000000000000;
                  String.append(_:)(v48);
                }
                uint64_t v49 = *(void *)(inited + 56);
                uint64_t v50 = *(void **)(inited + 64);
                uint64_t v51 = *(void *)(inited + 72);
                swift_bridgeObjectRetain();
                v52._uint64_t countAndFlagsBits = 95;
                v52._object = (void *)0xE100000000000000;
                String.append(_:)(v52);
                v53._uint64_t countAndFlagsBits = v49;
                v53._object = v50;
                String.append(_:)(v53);
                swift_bridgeObjectRelease();
                if (v51 >= 2)
                {
                  v54._uint64_t countAndFlagsBits = 0x4C4152554C505FLL;
                  v54._object = (void *)0xE700000000000000;
                  String.append(_:)(v54);
                }
                swift_bridgeObjectRelease();
                if (v63)
                {
                  v55._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
                  v55._object = (void *)0xEC00000044455A49;
                  String.append(_:)(v55);
                }
                v56._uint64_t countAndFlagsBits = 0x545845545FLL;
                v56._object = (void *)0xE500000000000000;
                String.append(_:)(v56);
                swift_setDeallocating();
                sub_10000A844((uint64_t *)&unk_100977CB0);
                swift_arrayDestroy();
                NSString v57 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
                id v58 = (id)SFLocalizedStringForKey();

                if (v65 <= 1)
                {
                  if (v45 >= 2)
                  {
                    if (!v58) {
                      goto LABEL_68;
                    }
                    static String._unconditionallyBridgeFromObjectiveC(_:)();

                    sub_10000A844((uint64_t *)&unk_10096EE60);
                    uint64_t v60 = swift_allocObject();
                    *(_OWORD *)(v60 + 16) = xmmword_10076E7A0;
                    *(void *)(v60 + 56) = &type metadata for Int;
                    *(void *)(v60 + 64) = &protocol witness table for Int;
                    *(void *)(v60 + 32) = v45;
                    goto LABEL_43;
                  }
                  if (!v58) {
                    goto LABEL_70;
                  }
                  static String._unconditionallyBridgeFromObjectiveC(_:)();

                  static String.localizedStringWithFormat(_:_:)();
                }
                else
                {
                  if (v45 < 2)
                  {
                    if (!v58) {
                      goto LABEL_69;
                    }
                    static String._unconditionallyBridgeFromObjectiveC(_:)();

                    sub_10000A844((uint64_t *)&unk_10096EE60);
                    uint64_t v61 = swift_allocObject();
                    *(_OWORD *)(v61 + 16) = xmmword_10076E7A0;
                    *(void *)(v61 + 56) = &type metadata for Int;
                    *(void *)(v61 + 64) = &protocol witness table for Int;
                    *(void *)(v61 + 32) = v65;
                  }
                  else
                  {
                    if (!v58) {
                      goto LABEL_67;
                    }
                    static String._unconditionallyBridgeFromObjectiveC(_:)();

                    sub_10000A844((uint64_t *)&unk_10096EE60);
                    uint64_t v59 = swift_allocObject();
                    *(_OWORD *)(v59 + 16) = v71;
                    *(void *)(v59 + 56) = &type metadata for Int;
                    *(void *)(v59 + 64) = &protocol witness table for Int;
                    *(void *)(v59 + 32) = v65;
                    *(void *)(v59 + 96) = &type metadata for Int;
                    *(void *)(v59 + 104) = &protocol witness table for Int;
                    *(void *)(v59 + 72) = v45;
                  }
LABEL_43:
                  static String.localizedStringWithFormat(_:_:)();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                return;
              }
              unint64_t v19 = *(void *)(v66 + 8 * v20);
              if (!v19)
              {
                while (1)
                {
                  int64_t v3 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_64;
                  }
                  if (v3 >= v67) {
                    goto LABEL_45;
                  }
                  unint64_t v19 = *(void *)(v66 + 8 * v3);
                  ++v20;
                  if (v19) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v3 = v20;
            }
          }
        }
LABEL_22:
        unint64_t v4 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v3 << 6);
      }
      uint64_t v21 = v71;
      (*(void (**)(void, unint64_t, uint64_t))(v6 + 16))(v71, *(void *)(v70 + 48) + *(void *)(v6 + 72) * v17, v5);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 32))(v9, v21, v5);
      SFAirDropReceive.AskRequest.ItemInfo.fileType.getter();
      NSString v22 = String._bridgeToObjectiveC()();
      int v23 = SFIsPhotosAssetBundle();

      if (v23 && (swift_bridgeObjectRelease(), SFAirDropReceive.AskRequest.ItemInfo.fileSubType.getter(), !v24))
      {
        (*(void (**)(unsigned char *, uint64_t))v11)(v9, v5);
      }
      else
      {
        NSString v25 = String._bridgeToObjectiveC()();
        int v26 = SFIsImage();

        if (v26)
        {
          (*(void (**)(unsigned char *, uint64_t))v11)(v9, v5);
          swift_bridgeObjectRelease();
          BOOL v29 = __OFADD__(v65++, 1);
          if (v29)
          {
            __break(1u);
            break;
          }
        }
        else
        {
          NSString v27 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          int v28 = SFIsVideo();

          (*(void (**)(unsigned char *, uint64_t))v11)(v9, v5);
          if (v28)
          {
            BOOL v29 = __OFADD__(v64++, 1);
            if (v29) {
              goto LABEL_65;
            }
          }
        }
      }
    }
  }
  unint64_t v30 = *(void *)(SFAirDropReceive.AskRequest.files.getter() + 16);
  swift_bridgeObjectRelease();
  if (v11[v3] == 1)
  {
    sub_10000A844(&qword_10096D760);
    uint64_t v31 = swift_initStackObject();
    *(_OWORD *)(v31 + 16) = xmmword_10076E7A0;
    *(void *)(v31 + 32) = 0x4F544F4850;
    *(void *)(v31 + 40) = 0xE500000000000000;
    *(void *)(v31 + 48) = v30;
    uint64_t v72 = 0x545F4E5245444F4DLL;
    unint64_t v73 = 0xEF524546534E4152;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32._uint64_t countAndFlagsBits = 95;
    v32._object = (void *)0xE100000000000000;
    String.append(_:)(v32);
    uint64_t v33 = 1414482000;
  }
  else
  {
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasVideos) != 1) {
      return;
    }
    sub_10000A844(&qword_10096D760);
    uint64_t v34 = swift_initStackObject();
    *(_OWORD *)(v34 + 16) = xmmword_10076E7A0;
    *(void *)(v34 + 32) = 0x4F45444956;
    *(void *)(v34 + 40) = 0xE500000000000000;
    *(void *)(v34 + 48) = v30;
    uint64_t v72 = 0x545F4E5245444F4DLL;
    unint64_t v73 = 0xEF524546534E4152;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v35._uint64_t countAndFlagsBits = 95;
    v35._object = (void *)0xE100000000000000;
    String.append(_:)(v35);
    uint64_t v33 = 1162103126;
  }
  v36._uint64_t countAndFlagsBits = v33 & 0xFFFF0000FFFFFFFFLL | 0x4F00000000;
  v36._object = (void *)0xE500000000000000;
  String.append(_:)(v36);
  swift_bridgeObjectRelease();
  if (v30 > 1)
  {
    v37._uint64_t countAndFlagsBits = 0x4C4152554C505FLL;
    v37._object = (void *)0xE700000000000000;
    String.append(_:)(v37);
  }
  swift_bridgeObjectRelease();
  if (v4)
  {
    v38._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
    v38._object = (void *)0xEC00000044455A49;
    String.append(_:)(v38);
  }
  v39._uint64_t countAndFlagsBits = 0x545845545FLL;
  v39._object = (void *)0xE500000000000000;
  String.append(_:)(v39);
  swift_setDeallocating();
  sub_10000A844((uint64_t *)&unk_100977CB0);
  swift_arrayDestroy();
  NSString v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v41 = (id)SFLocalizedStringForKey();

  if (v41)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_10076E7A0;
    *(void *)(v42 + 56) = &type metadata for Int;
    *(void *)(v42 + 64) = &protocol witness table for Int;
    *(void *)(v42 + 32) = v30;
    goto LABEL_43;
  }
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
}

uint64_t sub_100697EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[7] = a3;
  v6[8] = a4;
  v6[5] = a1;
  v6[6] = a2;
  uint64_t v9 = type metadata accessor for URL();
  v6[11] = v9;
  v6[12] = *(void *)(v9 - 8);
  v6[13] = swift_task_alloc();
  uint64_t v10 = swift_allocObject();
  v6[14] = v10;
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t v11 = qword_100969B90;
  swift_retain();
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v12 = static AirDropActor.shared;
  v6[15] = static AirDropActor.shared;
  return _swift_task_switch(sub_100698014, v12, 0);
}

uint64_t sub_100698014()
{
  v0[16] = [self sharedPhotoLibrary];
  if (qword_10096A148 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[15];
  type metadata accessor for SDAirDropDownloadDestinationProvideriOS();
  v0[17] = swift_initStackObject();
  return _swift_task_switch(sub_1006980E4, v1, 0);
}

uint64_t sub_1006980E4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[18] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100698180;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[8];
  return sub_100244DD0(v2, v3);
}

uint64_t sub_100698180()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 152) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 120);
  if (v0)
  {
    swift_release();
    unint64_t v4 = sub_1006985A4;
  }
  else
  {
    unint64_t v4 = sub_1006982B8;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1006982B8()
{
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v5 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v6 = static AirDropActor.shared;
  uint64_t v7 = sub_10069D73C((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[20] = v8;
  v8[2] = v5;
  v8[3] = v1;
  v8[4] = v4;
  v8[5] = v3;
  v8[6] = sub_10069CB50;
  v8[7] = v2;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[21] = v9;
  uint64_t v10 = sub_10000A844((uint64_t *)&unk_10096C8B0);
  *uint64_t v9 = v0;
  v9[1] = sub_100698438;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 4, v6, v7, 0xD000000000000027, 0x80000001007B8370, sub_10069CB88, v8, v10);
}

uint64_t sub_100698438()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 120);
  swift_release();
  swift_task_dealloc();
  if (v0) {
    uint64_t v4 = sub_1006986F0;
  }
  else {
    uint64_t v4 = sub_10069862C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1006985A4()
{
  uint64_t v1 = *(void **)(v0 + 128);
  swift_willThrow();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10069862C()
{
  uint64_t v11 = v0;
  uint64_t v1 = (void *)v0[16];
  uint64_t v3 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v4 = v0[11];
  uint64_t v5 = (void (*)(uint64_t *))v0[6];
  uint64_t v7 = v0[4];
  uint64_t v6 = (void *)v0[5];
  uint64_t v10 = 0x3FF0000000000000;
  v5(&v10);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  *uint64_t v6 = v7;
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1006986F0()
{
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  uint64_t v1 = (void *)v0[16];
  swift_willThrow();

  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100698790(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v36 = a4;
  uint64_t v37 = a7;
  uint64_t v34 = a6;
  id v41 = a3;
  uint64_t v38 = a1;
  uint64_t v40 = sub_10000A844(&qword_10097E518);
  uint64_t v9 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v35 = v10;
  Swift::String v39 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A140 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_10000B47C(v15, (uint64_t)qword_10097E2E8);
  swift_bridgeObjectRetain();
  unint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    int64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)int64_t v18 = 134217984;
    long long aBlock = *(void ***)(a2 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "PHPhotoLibrary preparing import of %ld items", v18, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = _swiftEmptyArrayStorage;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a5, v11);
  unint64_t v20 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v21 = (v13 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  NSString v22 = (char *)swift_allocObject();
  uint64_t v23 = v36;
  *((void *)v22 + 2) = v19;
  *((void *)v22 + 3) = v23;
  *((void *)v22 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v22[v20], v14, v11);
  uint64_t v24 = &v22[v21];
  uint64_t v25 = v37;
  *(void *)uint64_t v24 = v34;
  *((void *)v24 + 1) = v25;
  Swift::String v46 = sub_10069CCCC;
  Swift::String v47 = v22;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v43 = 1107296256;
  uint64_t v44 = sub_100296520;
  uint64_t v45 = &unk_1008E4FA0;
  int v26 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  NSString v27 = v39;
  uint64_t v28 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v39, v38, v40);
  unint64_t v29 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v30 = (v35 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v31 + v29, v27, v28);
  *(void *)(v31 + v30) = v19;
  Swift::String v46 = sub_10069CE68;
  Swift::String v47 = (void *)v31;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v43 = 1107296256;
  uint64_t v44 = sub_1006991B0;
  uint64_t v45 = &unk_1008E4FF0;
  Swift::String v32 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v41 performChanges:v26 completionHandler:v32];
  _Block_release(v32);
  _Block_release(v26);
  return swift_release();
}

uint64_t sub_100698C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(id, double), uint64_t a6)
{
  uint64_t v7 = sub_100699A1C(a3, a4, a5, a6);
  swift_beginAccess();
  *(void *)(a1 + 16) = v7;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100698CBC(char a1, uint64_t a2, uint64_t a3)
{
  if ((a1 & 1) == 0)
  {
    if (qword_10096A140 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000B47C(v9, (uint64_t)qword_10097E2E8);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = (void *)swift_slowAlloc();
      v22[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138412546;
      if (a2)
      {
        swift_errorRetain();
        uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
      }
      else
      {
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v14 = 0;
      }
      *uint64_t v13 = v14;
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v12 + 12) = 2080;
      type metadata accessor for URL();
      swift_bridgeObjectRetain();
      uint64_t v17 = Array.description.getter();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();
      sub_100254634(v17, v19, v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "PHPhotoLibrary performChanges failed with error %@ for items %s", (uint8_t *)v12, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v16 = a2;
      if (a2) {
        goto LABEL_18;
      }
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      swift_bridgeObjectRelease_n();
      uint64_t v16 = a2;
      if (a2)
      {
LABEL_18:
        v22[0] = v16;
        swift_errorRetain();
        sub_10000A844(&qword_10097E518);
        return CheckedContinuation.resume(throwing:)();
      }
    }
    uint64_t v20 = type metadata accessor for SFAirDropReceive.Failure();
    sub_10069D73C(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    uint64_t v16 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, enum case for SFAirDropReceive.Failure.moveToAppFailed(_:), v20);
    goto LABEL_18;
  }
  if (qword_10096A140 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_10097E2E8);
  swift_bridgeObjectRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134217984;
    v22[0] = *(void *)(a3 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "PHPhotoLibrary performChanges reported success for %ld items", v7, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_10000A844(&qword_10097E518);
  return CheckedContinuation.resume(returning:)();
}

void sub_1006991B0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_100699228(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = v3;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return SFProgressTask.init(_:initialProgress:operation:file:line:)();
}

uint64_t sub_1006992F8(uint64_t a1, int a2, uint64_t a3)
{
  int v54 = a2;
  uint64_t v58 = a1;
  uint64_t v4 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v57 = v6;
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v59 - 8);
  uint64_t v12 = __chkstk_darwin(v59);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v47 - v15;
  uint64_t v17 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v50 = *(void *)(v17 - 8);
  uint64_t v51 = v17;
  __chkstk_darwin(v17);
  uint64_t v49 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10000A844(&qword_100974EA0);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v52 = (uint64_t)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  Swift::String v48 = (char *)&v47 - v22;
  uint64_t v23 = sub_10000A844((uint64_t *)&unk_10097F1D0);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (uint64_t *)((char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10024A330(a3, (uint64_t)v25, (uint64_t *)&unk_10097F1D0);
  uint64_t v26 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    sub_10000A7E8((uint64_t)v25, (uint64_t *)&unk_10097F1D0);
LABEL_15:
    uint64_t v38 = v16;
    Swift::String v55 = v16;
    uint64_t v39 = v58;
    SFAirDropReceive.Transfer.receiveID.getter();
    uint64_t v40 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v10, 1, 1, v40);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v39, v4);
    id v41 = v14;
    uint64_t v42 = v14;
    uint64_t v43 = v59;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v42, v38, v59);
    unint64_t v44 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    unint64_t v45 = (v57 + *(unsigned __int8 *)(v11 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v46 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v46 + v44, v7, v4);
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v46 + v45, v41, v43);
    static Task<>.noThrow(priority:operation:)();
    swift_release();
    swift_release();
    sub_10000A7E8((uint64_t)v10, &qword_10096C920);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v55, v43);
  }
  if ((*(unsigned int (**)(void *, uint64_t))(v27 + 88))(v25, v26) != enum case for SFAirDropReceive.ItemDestination.customApp(_:))
  {
    (*(void (**)(void *, uint64_t))(v27 + 8))(v25, v26);
    goto LABEL_15;
  }
  (*(void (**)(void *, uint64_t))(v27 + 96))(v25, v26);
  if (*v25 == 0xD000000000000034 && v25[1] == 0x80000001007B7D20)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v28 & 1) == 0) {
      goto LABEL_15;
    }
  }
  if ((v54 & 1) == 0) {
    goto LABEL_15;
  }
  if (qword_10096A140 != -1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for Logger();
  sub_10000B47C(v29, (uint64_t)qword_10097E2E8);
  unint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v30, v31))
  {
    Swift::String v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Photos transfer succeeded with moveToApp selected; not cleaning up until Share Sheet is done",
      v32,
      2u);
    swift_slowDealloc();
  }

  uint64_t v33 = v49;
  SFAirDropReceive.Transfer.id.getter();
  uint64_t v34 = (uint64_t)v48;
  SFAirDrop.TransferIdentifier.id.getter();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v33, v51);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v34, 0, 1, v59);
  uint64_t v35 = v52;
  sub_10024D388(v34, v52, &qword_100974EA0);
  uint64_t v36 = v53 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_transferID;
  swift_beginAccess();
  sub_10061390C(v35, v36);
  return swift_endAccess();
}

void *sub_100699A1C(uint64_t a1, uint64_t a2, void (*a3)(id, double), uint64_t a4)
{
  uint64_t v246 = a4;
  v245 = a3;
  uint64_t v235 = a2;
  uint64_t v270 = a1;
  uint64_t v4 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v4 - 8);
  v252 = &v219[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v263 = type metadata accessor for URLResourceValues();
  unint64_t v287 = *(void *)(v263 - 8);
  __chkstk_darwin(v263);
  uint64_t v7 = &v219[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v262 = sub_10000A844(&qword_10096B5B0);
  __chkstk_darwin(v262);
  v261 = &v219[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v250 = type metadata accessor for UTType();
  uint64_t v9 = *(void *)(v250 - 8);
  uint64_t v10 = __chkstk_darwin(v250);
  v243 = &v219[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __chkstk_darwin(v10);
  v264 = &v219[-v13];
  __chkstk_darwin(v12);
  v249 = &v219[-v14];
  uint64_t v15 = sub_10000A844(&qword_1009700B0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  v258 = &v219[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = sub_10000A844((uint64_t *)&unk_10096AC10);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  v230 = &v219[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = __chkstk_darwin(v19);
  v242 = &v219[-v22];
  __chkstk_darwin(v21);
  uint64_t v24 = &v219[-v23];
  uint64_t v25 = type metadata accessor for URL();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  v225 = &v219[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v29 = __chkstk_darwin(v27);
  v271 = &v219[-v30];
  uint64_t v31 = __chkstk_darwin(v29);
  v232 = &v219[-v32];
  uint64_t v33 = __chkstk_darwin(v31);
  v231 = &v219[-v34];
  uint64_t v35 = __chkstk_darwin(v33);
  v227 = &v219[-v36];
  uint64_t v37 = __chkstk_darwin(v35);
  v238 = &v219[-v38];
  uint64_t v39 = __chkstk_darwin(v37);
  v234 = &v219[-v40];
  uint64_t v41 = __chkstk_darwin(v39);
  v233 = &v219[-v42];
  uint64_t v43 = __chkstk_darwin(v41);
  v229 = &v219[-v44];
  uint64_t v45 = __chkstk_darwin(v43);
  v240 = &v219[-v46];
  uint64_t v47 = __chkstk_darwin(v45);
  v239 = &v219[-v48];
  uint64_t v49 = __chkstk_darwin(v47);
  v237 = &v219[-v50];
  uint64_t v51 = __chkstk_darwin(v49);
  v269 = &v219[-v52];
  __chkstk_darwin(v51);
  v257 = &v219[-v53];
  uint64_t v54 = sub_10000A844(&qword_1009700B8);
  uint64_t v55 = __chkstk_darwin(v54 - 8);
  v284 = &v219[-((v56 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v55);
  v282 = &v219[-v57];
  uint64_t v58 = type metadata accessor for UUID();
  uint64_t v59 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v61 = &v219[-((v60 + 15) & 0xFFFFFFFFFFFFFFF0)];
  UUID.init()();
  uint64_t v244 = UUID.uuidString.getter();
  uint64_t v254 = v62;
  (*(void (**)(unsigned char *, uint64_t))(v59 + 8))(v61, v58);
  unint64_t v63 = *(void *)(v270 + 16);
  v285 = (void (**)(char *, unsigned char *, uint64_t))(v26 + 16);
  v283 = (void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  v268 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  uint64_t v64 = (void (**)(unsigned char *, char *, uint64_t))(v26 + 32);
  v280 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v281 = (void (**)(void *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  NSURLResourceKey v276 = NSURLContentTypeKey;
  v260 = (void (**)(unsigned char *, uint64_t))(v287 + 8);
  uint64_t v267 = v26;
  v279 = (void (**)(unsigned char *, uint64_t))(v26 + 8);
  v247 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32);
  v241 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16);
  v248 = (void (**)(unsigned char *, uint64_t))(v9 + 8);
  v226 = &v289;
  double v65 = (double)(uint64_t)(v63 + 1);
  swift_bridgeObjectRetain();
  uint64_t v266 = 0;
  unint64_t v66 = 0;
  v286 = 0;
  *((void *)&v67 + 1) = 2;
  long long v275 = xmmword_10076E7A0;
  unint64_t v259 = 0x80000001007C6760;
  *(void *)&long long v67 = 136315138;
  long long v236 = v67;
  v228 = (char *)&type metadata for Any + 8;
  *(void *)&long long v67 = 136315394;
  long long v265 = v67;
  v256 = _swiftEmptyArrayStorage;
  v253 = _swiftEmptyArrayStorage;
  v255 = (char *)_swiftEmptyArrayStorage;
  uint64_t v277 = v15;
  unint64_t v273 = v63;
  v272 = v7;
  v274 = v24;
  v278 = (void (**)(unsigned char *, char *, uint64_t))(v26 + 32);
  while (2)
  {
    uint64_t v68 = v269;
    while (1)
    {
      if (v66 == v63)
      {
        uint64_t v70 = *v283;
        (*v283)(v24, 1, 1, v25);
        unint64_t v287 = v63;
LABEL_9:
        sub_10000A7E8((uint64_t)v24, (uint64_t *)&unk_10096AC10);
        uint64_t v72 = 1;
        goto LABEL_12;
      }
      if (v66 >= v63)
      {
        __break(1u);
LABEL_110:
        __break(1u);
        goto LABEL_111;
      }
      uint64_t v71 = v267;
      (*(void (**)(unsigned char *, unint64_t, uint64_t))(v267 + 16))(v24, v270+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(void *)(v71 + 72) * v66, v25);
      unint64_t v287 = v66 + 1;
      uint64_t v70 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v71 + 56);
      v70(v24, 0, 1, v25);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v71 + 48))(v24, 1, v25) == 1) {
        goto LABEL_9;
      }
      unint64_t v73 = v64;
      uint64_t v74 = *v64;
      uint64_t v75 = v257;
      v74(v257, v24, v25);
      uint64_t v76 = &v258[*(int *)(v15 + 48)];
      v74(v76, v75, v25);
      uint64_t v77 = v266 + 1;
      if (__OFADD__(v266, 1)) {
        goto LABEL_110;
      }
      uint64_t v78 = (char *)v284 + *(int *)(v15 + 48);
      void *v284 = v266;
      v74(v78, v76, v25);
      uint64_t v72 = 0;
      uint64_t v266 = v77;
      uint64_t v64 = v73;
LABEL_12:
      uint64_t v79 = v284;
      (*v281)(v284, v72, 1, v15);
      uint64_t v80 = (uint64_t)v79;
      uint64_t v81 = v282;
      sub_10024D388(v80, (uint64_t)v282, &qword_1009700B8);
      if ((*v280)(v81, 1, v15) == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v214 = type metadata accessor for TaskPriority();
        uint64_t v215 = (uint64_t)v252;
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v214 - 8) + 56))(v252, 1, 1, v214);
        v216 = (void *)swift_allocObject();
        v217 = v256;
        v216[2] = v251;
        v216[3] = v217;
        v216[4] = v255;
        uint64_t v218 = swift_allocObject();
        *(void *)(v218 + 16) = &unk_10097E530;
        *(void *)(v218 + 24) = v216;
        swift_retain();
        static Task<>.noThrow(priority:operation:)();
        swift_release();
        swift_release();
        sub_10000A7E8(v215, &qword_10096C920);
        return v253;
      }
      uint64_t v82 = *(void *)v81;
      unint64_t v83 = *v64;
      (*v64)(v68, &v81[*(int *)(v15 + 48)], v25);
      sub_10000A844((uint64_t *)&unk_10096CE70);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v275;
      NSURLResourceKey v85 = v276;
      *(void *)(inited + 32) = v276;
      int v86 = v85;
      sub_1002C89FC(inited);
      swift_setDeallocating();
      type metadata accessor for URLResourceKey(0);
      swift_arrayDestroy();
      uint64_t v87 = v286;
      URL.resourceValues(forKeys:)();
      if (!v87) {
        break;
      }
      swift_bridgeObjectRelease();
      v286 = 0;
      unint64_t v89 = v271;
      if (qword_10096A140 != -1) {
        swift_once();
      }
      uint64_t v90 = type metadata accessor for Logger();
      sub_10000B47C(v90, (uint64_t)qword_10097E2E8);
      (*v285)(v89, v68, v25);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v91 = Logger.logObject.getter();
      os_log_type_t v92 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v91, v92))
      {
        uint64_t v93 = swift_slowAlloc();
        uint64_t v94 = v25;
        uint64_t v95 = (void *)swift_slowAlloc();
        id v290 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v93 = v265;
        sub_10069D73C((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v96 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v93 + 4) = sub_100254634(v96, v97, (uint64_t *)&v290);
        swift_bridgeObjectRelease();
        uint64_t v98 = *v279;
        (*v279)(v89, v94);
        *(_WORD *)(v93 + 12) = 2112;
        swift_errorRetain();
        uint64_t v99 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v93 + 14) = v99;
        *uint64_t v95 = v99;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v91, v92, "Could not get UTType for URL %s: %@", (uint8_t *)v93, 0x16u);
        sub_10000A844(&qword_10096B850);
        swift_arrayDestroy();
        uint64_t v25 = v94;
        uint64_t v68 = v269;
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        v98(v68, v25);
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
        uint64_t v69 = *v279;
        (*v279)(v89, v25);
        swift_errorRelease();
        v69(v68, v25);
      }
      uint64_t v7 = v272;
      uint64_t v15 = v277;
      uint64_t v24 = v274;
      unint64_t v63 = v273;
      uint64_t v64 = v278;
      unint64_t v66 = v287;
    }
    swift_bridgeObjectRelease();
    uint64_t v88 = (uint64_t)v261;
    URLResourceValues.contentType.getter();
    (*v260)(v7, v263);
    Optional.tryUnwrap(_:file:line:)();
    sub_10000A7E8(v88, &qword_10096B5B0);
    uint64_t v100 = v249;
    uint64_t v101 = v250;
    (*v247)(v249, v264, v250);
    UTType.identifier.getter();
    NSString v102 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    int v103 = SFIsPhotosAssetBundle();

    v224 = 0;
    if (v103)
    {
      id v104 = objc_allocWithZone((Class)PFAssetBundle);
      Swift::Int v105 = v269;
      URL._bridgeToObjectiveC()(&v291);
      Swift::Int v107 = v106;
      id v108 = [v104 initWithAssetBundleAtURL:v106];

      if (v108)
      {
        v109 = (uint8_t *)[self creationRequestForAssetFromAssetBundle:v108];
        sub_10000B740(0, (unint64_t *)&qword_10096AC60);
        id v110 = v108;
        v111 = (void *)static NSUserDefaults.airdrop.getter();
        char v112 = SFAirDropUserDefaults.moveToAppEnabled.getter();

        uint64_t v15 = v277;
        unint64_t v66 = v287;
        if (v112)
        {
          URL._bridgeToObjectiveC()((NSURL *)((char *)&v265 + 8));
          v114 = v113;
          id v290 = 0;
          id v115 = [v110 writeDowngradedRepresentationToDirectory:v113 error:&v290];

          id v116 = v290;
          v286 = v109;
          if (v115)
          {
            v117 = v239;
            static URL._unconditionallyBridgeFromObjectiveC(_:)();
            id v118 = v116;

            (*v285)(v240, v117, v25);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              v256 = (void *)sub_100253318(0, v256[2] + 1, 1, (unint64_t)v256);
            }
            unint64_t v120 = v256[2];
            unint64_t v119 = v256[3];
            v109 = v286;
            unint64_t v66 = v287;
            if (v120 >= v119 >> 1) {
              v256 = (void *)sub_100253318(v119 > 1, v120 + 1, 1, (unint64_t)v256);
            }
            v121 = v256;
            v256[2] = v120 + 1;
            uint64_t v122 = v267;
            v83((unsigned char *)v121+ ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80))+ *(void *)(v267 + 72) * v120, v240, v25);

            id v123 = (id)(*(uint64_t (**)(unsigned char *, uint64_t))(v122 + 8))(v239, v25);
            goto LABEL_48;
          }
          id v196 = v290;
          _convertNSErrorToError(_:)();

          swift_willThrow();
          if (qword_10096A140 != -1) {
            swift_once();
          }
          v224 = 0;
          uint64_t v197 = type metadata accessor for Logger();
          sub_10000B47C(v197, (uint64_t)qword_10097E2E8);
          v198 = v225;
          (*v285)(v225, v269, v25);
          swift_errorRetain();
          swift_errorRetain();
          v199 = Logger.logObject.getter();
          os_log_type_t v200 = static os_log_type_t.error.getter();
          int v201 = v200;
          if (os_log_type_enabled(v199, v200))
          {
            uint64_t v202 = swift_slowAlloc();
            v222 = (void *)swift_slowAlloc();
            v223 = (void *)swift_slowAlloc();
            id v290 = v223;
            *(_DWORD *)uint64_t v202 = v265;
            sub_10069D73C((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
            os_log_t v221 = v199;
            uint64_t v203 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v288 = sub_100254634(v203, v204, (uint64_t *)&v290);
            int v220 = v201;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            (*v279)(v198, v25);
            *(_WORD *)(v202 + 12) = 2112;
            swift_errorRetain();
            uint64_t v205 = _swift_stdlib_bridgeErrorToNSError();
            uint64_t v288 = v205;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            void *v222 = v205;
            swift_errorRelease();
            swift_errorRelease();
            os_log_t v206 = v221;
            _os_log_impl((void *)&_mh_execute_header, v221, (os_log_type_t)v220, "Failed to downgrade asset bundle %s with error: %@", (uint8_t *)v202, 0x16u);
            sub_10000A844(&qword_10096B850);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v7 = v272;
            uint64_t v15 = v277;
            swift_slowDealloc();

            swift_errorRelease();
          }
          else
          {

            swift_errorRelease();
            (*v279)(v198, v25);
            swift_errorRelease();
            swift_errorRelease();
          }
          v109 = v286;
          unint64_t v66 = v287;
          if (!v286)
          {
LABEL_105:
            v174 = 0;
            goto LABEL_106;
          }
LABEL_71:
          v174 = v109;
          NSString v175 = String._bridgeToObjectiveC()();
          [(uint8_t *)v174 setImportSessionID:v175];

          [(uint8_t *)v174 setImportedBy:13];
          id v123 = [(uint8_t *)v174 placeholderForCreatedAsset];
          if (!v123) {
            goto LABEL_106;
          }
          v176 = v123;
          id v177 = [v123 localIdentifier];

          uint64_t v178 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v180 = v179;

          swift_bridgeObjectRetain();
          v181 = v255;
          v182 = v7;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v181 = sub_100253208(0, *((void *)v181 + 2) + 1, 1, v181);
          }
          unint64_t v184 = *((void *)v181 + 2);
          unint64_t v183 = *((void *)v181 + 3);
          if (v184 >= v183 >> 1) {
            v181 = sub_100253208((char *)(v183 > 1), v184 + 1, 1, v181);
          }
          *((void *)v181 + 2) = v184 + 1;
          v185 = &v181[16 * v184];
          *((void *)v185 + 4) = v178;
          *((void *)v185 + 5) = v180;
          uint64_t v186 = v253[2];
          v255 = v181;
          if (v186)
          {
            id v123 = (id)swift_bridgeObjectRelease();
            uint64_t v7 = v182;
            goto LABEL_80;
          }
          NSString v187 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          v188 = sub_1001ACEB0((uint64_t)v187);

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v189 = (uint64_t)v230;
          URL.init(string:)();
          swift_bridgeObjectRelease();
          uint64_t v7 = v182;
          if ((*v268)(v189, 1, v25) == 1)
          {
            id v123 = (id)sub_10000A7E8(v189, (uint64_t *)&unk_10096AC10);
LABEL_80:
            v190 = v249;
            uint64_t v15 = v277;
LABEL_100:
            unint64_t v66 = v287;
            uint64_t v213 = v82 + 1;
            if (!__OFADD__(v82, 1))
            {
LABEL_107:
              v245(v123, (double)v213 / v65);
              uint64_t v64 = v278;
              (*v248)(v190, v250);
              (*v279)(v269, v25);

              v286 = v224;
              uint64_t v24 = v274;
              unint64_t v63 = v273;
              continue;
            }
          }
          else
          {
            v207 = v231;
            v83(v231, (char *)v189, v25);
            (*v285)(v232, v207, v25);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v15 = v277;
            unint64_t v66 = v287;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              v253 = (void *)sub_100253318(0, v253[2] + 1, 1, (unint64_t)v253);
            }
            unint64_t v210 = v253[2];
            unint64_t v209 = v253[3];
            if (v210 >= v209 >> 1) {
              v253 = (void *)sub_100253318(v209 > 1, v210 + 1, 1, (unint64_t)v253);
            }
            v211 = v253;
            v253[2] = v210 + 1;
            uint64_t v212 = v267;
            v83((unsigned char *)v211+ ((*(unsigned __int8 *)(v212 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v212 + 80))+ *(void *)(v267 + 72) * v210, v232, v25);
            id v123 = (id)(*(uint64_t (**)(unsigned char *, uint64_t))(v212 + 8))(v231, v25);
LABEL_106:
            v190 = v249;
            uint64_t v213 = v82 + 1;
            if (!__OFADD__(v82, 1)) {
              goto LABEL_107;
            }
          }
LABEL_111:
          __break(1u);
        }

LABEL_62:
        if (!v109) {
          goto LABEL_105;
        }
        goto LABEL_71;
      }
      uint64_t v15 = v277;
      if (qword_10096A140 != -1) {
        swift_once();
      }
      uint64_t v134 = type metadata accessor for Logger();
      sub_10000B47C(v134, (uint64_t)qword_10097E2E8);
      v135 = v237;
      (*v285)(v237, v105, v25);
      v136 = Logger.logObject.getter();
      os_log_type_t v137 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v136, v137))
      {
        uint64_t v138 = swift_slowAlloc();
        id v290 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v138 = v236;
        sub_10069D73C((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v139 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v138 + 4) = sub_100254634(v139, v140, (uint64_t *)&v290);
        swift_bridgeObjectRelease();
        (*v279)(v135, v25);
        _os_log_impl((void *)&_mh_execute_header, v136, v137, "PFAssetBundle initWithAssetBundleAtURL(%s) returned nil", (uint8_t *)v138, 0xCu);
        goto LABEL_85;
      }
LABEL_86:
      (*v279)(v135, v25);
      goto LABEL_87;
    }
    break;
  }
  UTType.identifier.getter();
  NSString v124 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  int v125 = SFIsLivePhotos();

  if (!v125)
  {
    UTType.identifier.getter();
    NSString v131 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    int v132 = SFIsVideo();

    v133 = v243;
    (*v241)(v243, v100, v101);
    uint64_t v15 = v277;
    if (v132)
    {
      (*v248)(v133, v101);
    }
    else
    {
      UTType.identifier.getter();
      NSString v153 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      int v154 = SFIsImage();

      (*v248)(v133, v250);
      if (!v154)
      {
        if (qword_10096A140 != -1) {
          swift_once();
        }
        uint64_t v191 = type metadata accessor for Logger();
        sub_10000B47C(v191, (uint64_t)qword_10097E2E8);
        v135 = v227;
        (*v285)(v227, v269, v25);
        v136 = Logger.logObject.getter();
        os_log_type_t v192 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v136, v192)) {
          goto LABEL_86;
        }
        v193 = (uint8_t *)swift_slowAlloc();
        id v290 = (id)swift_slowAlloc();
        *(_DWORD *)v193 = v236;
        v286 = v193 + 4;
        sub_10069D73C((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v194 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v288 = sub_100254634(v194, v195, (uint64_t *)&v290);
        uint64_t v15 = v277;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*v279)(v135, v25);
        _os_log_impl((void *)&_mh_execute_header, v136, v192, "Not a Photos type %s. Ignoring", v193, 0xCu);
LABEL_85:
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
LABEL_87:

        v174 = 0;
LABEL_99:
        v190 = v249;
        goto LABEL_100;
      }
    }
    v109 = (uint8_t *)[self creationRequestForAsset];
    id v110 = [objc_allocWithZone((Class)PHAssetResourceCreationOptions) init];
    if (v109)
    {
      if (v132) {
        uint64_t v155 = 2;
      }
      else {
        uint64_t v155 = 1;
      }
      v156 = v109;
      v286 = v109;
      v157 = v156;
      URL._bridgeToObjectiveC()(&v291);
      v159 = v158;
      [(uint8_t *)v157 addResourceWithType:v155 fileURL:v158 options:v110];

      v109 = v286;
    }
    sub_10000B740(0, (unint64_t *)&qword_10096AC60);
    v160 = (void *)static NSUserDefaults.airdrop.getter();
    char v161 = SFAirDropUserDefaults.moveToAppEnabled.getter();

    if ((v161 & 1) == 0)
    {

      unint64_t v66 = v287;
      if (!v109) {
        goto LABEL_105;
      }
      goto LABEL_71;
    }
    (*v285)(v238, v269, v25);
    char v162 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v66 = v287;
    if ((v162 & 1) == 0) {
      v256 = (void *)sub_100253318(0, v256[2] + 1, 1, (unint64_t)v256);
    }
    unint64_t v164 = v256[2];
    unint64_t v163 = v256[3];
    if (v164 >= v163 >> 1) {
      v256 = (void *)sub_100253318(v163 > 1, v164 + 1, 1, (unint64_t)v256);
    }
    v165 = v256;
    v256[2] = v164 + 1;
    v83((unsigned char *)v165+ ((*(unsigned __int8 *)(v267 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v267 + 80))+ *(void *)(v267 + 72) * v164, v238, v25);
    goto LABEL_62;
  }
  v126 = *v285;
  v127 = v242;
  v128 = v269;
  (*v285)(v242, v269, v25);
  v70(v127, 0, 1, v25);
  unsigned int v129 = (*v268)((uint64_t)v127, 1, v25);
  uint64_t v15 = v277;
  if (v129 == 1)
  {
    v130 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()((NSURL *)&v292);
    v130 = v141;
    (*v279)(v127, v25);
  }
  unint64_t v66 = v287;
  id v142 = [objc_allocWithZone((Class)PFVideoComplement) initWithBundleAtURL:v130];

  if (!v142)
  {
    if (qword_10096A140 != -1) {
      swift_once();
    }
    uint64_t v166 = type metadata accessor for Logger();
    sub_10000B47C(v166, (uint64_t)qword_10097E2E8);
    v167 = v229;
    v126(v229, v128, v25);
    v168 = Logger.logObject.getter();
    os_log_type_t v169 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v168, v169))
    {
      v170 = v167;
      uint64_t v171 = swift_slowAlloc();
      id v290 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v171 = v236;
      sub_10069D73C((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v172 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v171 + 4) = sub_100254634(v172, v173, (uint64_t *)&v290);
      swift_bridgeObjectRelease();
      (*v279)(v170, v25);
      _os_log_impl((void *)&_mh_execute_header, v168, v169, "PFVideoComplement initWithBundleAtURL(%s) returned nil", (uint8_t *)v171, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*v279)(v167, v25);
    }

    v174 = 0;
    uint64_t v7 = v272;
    goto LABEL_99;
  }
  v109 = (uint8_t *)[self creationRequestForAssetFromVideoComplementBundle:v142];
  sub_10000B740(0, (unint64_t *)&qword_10096AC60);
  id v143 = v142;
  v144 = (void *)static NSUserDefaults.airdrop.getter();
  char v145 = SFAirDropUserDefaults.moveToAppEnabled.getter();

  if ((v145 & 1) == 0)
  {

    uint64_t v7 = v272;
    if (!v109) {
      goto LABEL_105;
    }
    goto LABEL_71;
  }
  v286 = v109;
  uint64_t result = [v143 videoPath];
  if (result)
  {
    v147 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    v148 = v233;
    URL.init(fileURLWithPath:)();
    swift_bridgeObjectRelease();
    v126(v234, v148, v25);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      v256 = (void *)sub_100253318(0, v256[2] + 1, 1, (unint64_t)v256);
    }
    uint64_t v7 = v272;
    unint64_t v150 = v256[2];
    unint64_t v149 = v256[3];
    v109 = v286;
    unint64_t v66 = v287;
    if (v150 >= v149 >> 1) {
      v256 = (void *)sub_100253318(v149 > 1, v150 + 1, 1, (unint64_t)v256);
    }
    v151 = v256;
    v256[2] = v150 + 1;
    uint64_t v152 = v267;
    v83((unsigned char *)v151+ ((*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80))+ *(void *)(v267 + 72) * v150, v234, v25);

    id v123 = (id)(*(uint64_t (**)(unsigned char *, uint64_t))(v152 + 8))(v233, v25);
LABEL_48:
    if (!v109) {
      goto LABEL_105;
    }
    goto LABEL_71;
  }
  __break(1u);
  return result;
}

uint64_t sub_10069BE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  return _swift_task_switch(sub_10069BEF8, v4, 0);
}

uint64_t sub_10069BEF8()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_unprivatizedURLs) = v0[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_assetIdentifiers) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10069BF9C()
{
  sub_10000A7E8(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_transferID, &qword_100974EA0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_10069C030()
{
  return type metadata accessor for SDAirDropContentHandlerPhotos();
}

uint64_t type metadata accessor for SDAirDropContentHandlerPhotos()
{
  uint64_t result = qword_10097E358;
  if (!qword_10097E358) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10069C084()
{
  sub_1006133F0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10069C140@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerPhotos();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  uint64_t v3 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_transferID;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_unprivatizedURLs) = _swiftEmptyArrayStorage;
  *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_assetIdentifiers) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasPhotos) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_hasVideos) = 0;
  *a1 = v2;
  return result;
}

uint64_t sub_10069C20C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_100696D58(a1);
}

void sub_10069C2A4(uint64_t a1, int a2)
{
}

uint64_t sub_10069C2C8(uint64_t a1, int a2, uint64_t a3)
{
  return sub_1006992F8(a1, a2, a3);
}

uint64_t sub_10069C2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v3;
  v15[1] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v12 = (v8 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v13 + v11, v9, v6);
  *(void *)(v13 + v12) = a1;
  *(void *)(v13 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8)) = v10;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10000A844((uint64_t *)&unk_10096C8B0);
  return SFProgressTask.init(_:initialProgress:operation:file:line:)();
}

uint64_t sub_10069C4C4(uint64_t a1)
{
  return sub_100699228(a1);
}

BOOL sub_10069C4E8()
{
  return *(void *)(*(void *)(*v0 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_assetIdentifiers)
                   + 16) > 1uLL;
}

uint64_t sub_10069C508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10097E520 + dword_10097E520);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_100497A04;
  return v8(a2, a3);
}

uint64_t sub_10069C5C4()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = [self predicateMatchingBundleIdentifier:v0];

  uint64_t v2 = self;
  id v20 = 0;
  uint64_t v3 = v1;
  id v4 = [v2 handleForPredicate:v3 error:&v20];
  if (!v4)
  {
    id v13 = v20;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_10096A140 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10000B47C(v14, (uint64_t)qword_10097E2E8);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 138412290;
      swift_errorRetain();
      uint64_t v18 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v20 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v17 = v18;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v15, "Unable to check if Photos is visible: %@", v16, 0xCu);
      sub_10000A844(&qword_10096B850);
      char v12 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return v12 & 1;
    }
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
LABEL_11:

    char v12 = 1;
    return v12 & 1;
  }
  uint64_t v5 = v4;
  id v6 = v20;

  id v7 = [v5 currentState];
  if (!v7
    || (uint64_t v8 = v7, v9 = [v7 endowmentNamespaces], v8, !v9))
  {

    goto LABEL_11;
  }
  uint64_t v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  char v11 = sub_10057BE20(0xD00000000000001FLL, 0x80000001007C6740, v10);
  swift_bridgeObjectRelease();

  char v12 = v11 ^ 1;
  return v12 & 1;
}

uint64_t sub_10069C924()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10069C9E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = v3 + v9;
  uint64_t v12 = *(void *)(v3 + v10);
  uint64_t v13 = *(void *)(v3 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v14;
  *uint64_t v14 = v4;
  v14[1] = sub_10000A6F4;
  return sub_100697EE4(a1, a2, a3, v11, v12, v13);
}

uint64_t sub_10069CB18()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10069CB50(double a1)
{
  uint64_t v2 = *(uint64_t (**)(double *))(v1 + 16);
  double v4 = a1;
  return v2(&v4);
}

uint64_t sub_10069CB88(uint64_t a1)
{
  return sub_100698790(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_10069CB98()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10069CBD0()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10069CCCC()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = (uint64_t)v0 + v2;
  id v7 = (char *)v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(void (**)(id, double))v7;
  uint64_t v9 = *((void *)v7 + 1);

  return sub_100698C4C(v3, v4, v5, v6, v8, v9);
}

uint64_t sub_10069CD64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10069CD74()
{
  return swift_release();
}

uint64_t sub_10069CD7C()
{
  uint64_t v1 = sub_10000A844(&qword_10097E518);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10069CE68(char a1, uint64_t a2)
{
  sub_10000A844(&qword_10097E518);
  uint64_t v5 = *(void *)(v2 + 16);

  return sub_100698CBC(a1, a2, v5);
}

uint64_t sub_10069CF1C(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  uint64_t v4 = type metadata accessor for UUID();
  v3[11] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[12] = v5;
  v3[13] = *(void *)(v5 + 64);
  v3[14] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer();
  v3[15] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[16] = v7;
  v3[17] = *(void *)(v7 + 64);
  v3[18] = swift_task_alloc();
  sub_10000A844(&qword_10096C920);
  v3[19] = swift_task_alloc();
  sub_10000A844(&qword_100974EA0);
  v3[20] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v8 = static AirDropActor.shared;
  v3[21] = static AirDropActor.shared;
  return _swift_task_switch(sub_10069D0E8, v8, 0);
}

uint64_t sub_10069D0E8()
{
  uint64_t v1 = v0[10];
  v0[22] = [objc_allocWithZone((Class)type metadata accessor for SDAirDropMoveToAppShareSheet()) init];
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_unprivatizedURLs);
  v0[23] = v2;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_10097E7E8 + dword_10097E7E8);
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[24] = v3;
  void *v3 = v0;
  v3[1] = sub_10069D1CC;
  return v5(v2);
}

uint64_t sub_10069D1CC(char a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 56) = v1;
  *(unsigned char *)(v3 + 48) = a1;
  *(void *)(v3 + 40) = v2;
  *(void *)(v3 + 200) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(void *)(v3 + 168);
    uint64_t v5 = sub_10069D5A0;
  }
  else
  {
    uint64_t v6 = *(void **)(v3 + 176);
    uint64_t v7 = *(void *)(v3 + 168);
    swift_bridgeObjectRelease();

    uint64_t v5 = sub_10069D30C;
    uint64_t v4 = v7;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_10069D30C()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 80) + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropContentHandlerPhotos_transferID;
  swift_beginAccess();
  sub_10024A330(v4, v1, &qword_100974EA0);
  LODWORD(v2) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  sub_10000A7E8(v1, &qword_100974EA0);
  if (v2 != 1)
  {
    uint64_t v6 = *(void *)(v0 + 144);
    uint64_t v5 = *(void *)(v0 + 152);
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v22 = *(void *)(v0 + 136);
    uint64_t v23 = v5;
    uint64_t v8 = *(void *)(v0 + 112);
    uint64_t v9 = *(void *)(v0 + 120);
    uint64_t v10 = *(void *)(v0 + 96);
    uint64_t v11 = *(void *)(v0 + 88);
    uint64_t v13 = *(void *)(v0 + 64);
    uint64_t v12 = *(void *)(v0 + 72);
    uint64_t v14 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v5, 1, 1, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v12, v9);
    uint64_t v15 = v8;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v13, v11);
    unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    unint64_t v17 = (v22 + *(unsigned __int8 *)(v10 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v18 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v18 + v16, v6, v9);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 32))(v18 + v17, v15, v11);
    static Task<>.noThrow(priority:operation:)();
    swift_release();
    swift_release();
    sub_10000A7E8(v23, &qword_10096C920);
  }
  uint64_t v19 = *(unsigned __int8 *)(v0 + 48);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v20 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v20(v19);
}

uint64_t sub_10069D5A0()
{
  uint64_t v1 = *(void **)(v0 + 176);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

uint64_t sub_10069D64C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10069D694()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_10000A6F4;
  return sub_10069BE58(v2, v3, v4);
}

uint64_t sub_10069D73C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10069D788()
{
  uint64_t v1 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_10069D8D8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10069D924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10069D938);
}

uint64_t sub_10069D938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 80) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_10069DA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10069DA20);
}

uint64_t sub_10069DA20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 80) + 8) = a2;
  }
  return result;
}

uint64_t type metadata accessor for SDAuthenticationSessionMetrics()
{
  uint64_t result = qword_10097E5B0;
  if (!qword_10097E5B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10069DB30()
{
  sub_100271710();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10069DBFC()
{
  uint64_t v1 = v0;
  sub_10000A844(&qword_10096B500);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10076E7A0;
  *(void *)(v2 + 32) = UUID.uuidString.getter();
  *(void *)(v2 + 40) = v3;
  if (qword_10096A150 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_10097E540);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Logging metrics", v7, 2u);
    swift_slowDealloc();
  }

  int v8 = *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for SDAuthenticationSessionMetrics() + 76));
  if (v8 != 2)
  {
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease();
    uint64_t v119 = 0xD000000000000016;
    unint64_t v120 = 0x80000001007BF720;
    if (v8) {
      uint64_t v9 = 1702195828;
    }
    else {
      uint64_t v9 = 0x65736C6166;
    }
    if (v8) {
      unint64_t v10 = 0xE400000000000000;
    }
    else {
      unint64_t v10 = 0xE500000000000000;
    }
    unint64_t v11 = v10;
    String.append(_:)(*(Swift::String *)&v9);
    swift_bridgeObjectRelease();
    uint64_t v12 = v119;
    unint64_t v13 = v120;
    unint64_t v15 = *(void *)(v2 + 16);
    unint64_t v14 = *(void *)(v2 + 24);
    if (v15 >= v14 >> 1) {
      uint64_t v2 = (uint64_t)sub_100253208((char *)(v14 > 1), v15 + 1, 1, (char *)v2);
    }
    *(void *)(v2 + 16) = v15 + 1;
    uint64_t v16 = v2 + 16 * v15;
    *(void *)(v16 + 32) = v12;
    *(void *)(v16 + 40) = v13;
  }
  uint64_t v17 = sub_10069F71C();
  if ((v18 & 1) == 0)
  {
    uint64_t v19 = v17;
    _StringGuts.grow(_:)(33);
    swift_bridgeObjectRelease();
    uint64_t v119 = 0xD00000000000001ELL;
    unint64_t v120 = 0x80000001007BF700;
    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_10076E7A0;
    *(void *)(v20 + 56) = &type metadata for Double;
    *(void *)(v20 + 64) = &protocol witness table for Double;
    *(void *)(v20 + 32) = v19;
    v21._uint64_t countAndFlagsBits = String.init(format:_:)();
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    v22._uint64_t countAndFlagsBits = 115;
    v22._object = (void *)0xE100000000000000;
    String.append(_:)(v22);
    uint64_t v23 = v119;
    unint64_t v24 = v120;
    unint64_t v26 = *(void *)(v2 + 16);
    unint64_t v25 = *(void *)(v2 + 24);
    if (v26 >= v25 >> 1) {
      uint64_t v2 = (uint64_t)sub_100253208((char *)(v25 > 1), v26 + 1, 1, (char *)v2);
    }
    *(void *)(v2 + 16) = v26 + 1;
    uint64_t v27 = v2 + 16 * v26;
    *(void *)(v27 + 32) = v23;
    *(void *)(v27 + 40) = v24;
  }
  uint64_t v28 = sub_10069F984();
  if ((v29 & 1) == 0)
  {
    uint64_t v30 = v28;
    _StringGuts.grow(_:)(44);
    swift_bridgeObjectRelease();
    uint64_t v119 = 0xD000000000000029;
    unint64_t v120 = 0x80000001007BF6D0;
    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_10076E7A0;
    *(void *)(v31 + 56) = &type metadata for Double;
    *(void *)(v31 + 64) = &protocol witness table for Double;
    *(void *)(v31 + 32) = v30;
    v32._uint64_t countAndFlagsBits = String.init(format:_:)();
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
    v33._uint64_t countAndFlagsBits = 115;
    v33._object = (void *)0xE100000000000000;
    String.append(_:)(v33);
    uint64_t v34 = v119;
    unint64_t v35 = v120;
    unint64_t v37 = *(void *)(v2 + 16);
    unint64_t v36 = *(void *)(v2 + 24);
    if (v37 >= v36 >> 1) {
      uint64_t v2 = (uint64_t)sub_100253208((char *)(v36 > 1), v37 + 1, 1, (char *)v2);
    }
    *(void *)(v2 + 16) = v37 + 1;
    uint64_t v38 = v2 + 16 * v37;
    *(void *)(v38 + 32) = v34;
    *(void *)(v38 + 40) = v35;
  }
  uint64_t v39 = sub_10069EA80();
  if ((v40 & 1) == 0)
  {
    uint64_t v41 = v39;
    _StringGuts.grow(_:)(27);
    swift_bridgeObjectRelease();
    uint64_t v119 = 0xD000000000000018;
    unint64_t v120 = 0x80000001007BF6B0;
    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_10076E7A0;
    *(void *)(v42 + 56) = &type metadata for Double;
    *(void *)(v42 + 64) = &protocol witness table for Double;
    *(void *)(v42 + 32) = v41;
    v43._uint64_t countAndFlagsBits = String.init(format:_:)();
    String.append(_:)(v43);
    swift_bridgeObjectRelease();
    v44._uint64_t countAndFlagsBits = 115;
    v44._object = (void *)0xE100000000000000;
    String.append(_:)(v44);
    uint64_t v45 = v119;
    unint64_t v46 = v120;
    unint64_t v48 = *(void *)(v2 + 16);
    unint64_t v47 = *(void *)(v2 + 24);
    if (v48 >= v47 >> 1) {
      uint64_t v2 = (uint64_t)sub_100253208((char *)(v47 > 1), v48 + 1, 1, (char *)v2);
    }
    *(void *)(v2 + 16) = v48 + 1;
    uint64_t v49 = v2 + 16 * v48;
    *(void *)(v49 + 32) = v45;
    *(void *)(v49 + 40) = v46;
  }
  uint64_t v50 = sub_10069ECF8();
  if ((v51 & 1) == 0)
  {
    uint64_t v52 = v50;
    _StringGuts.grow(_:)(30);
    swift_bridgeObjectRelease();
    uint64_t v119 = 0xD00000000000001BLL;
    unint64_t v120 = 0x80000001007BF690;
    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_10076E7A0;
    *(void *)(v53 + 56) = &type metadata for Double;
    *(void *)(v53 + 64) = &protocol witness table for Double;
    *(void *)(v53 + 32) = v52;
    v54._uint64_t countAndFlagsBits = String.init(format:_:)();
    String.append(_:)(v54);
    swift_bridgeObjectRelease();
    v55._uint64_t countAndFlagsBits = 115;
    v55._object = (void *)0xE100000000000000;
    String.append(_:)(v55);
    uint64_t v56 = v119;
    unint64_t v57 = v120;
    unint64_t v59 = *(void *)(v2 + 16);
    unint64_t v58 = *(void *)(v2 + 24);
    if (v59 >= v58 >> 1) {
      uint64_t v2 = (uint64_t)sub_100253208((char *)(v58 > 1), v59 + 1, 1, (char *)v2);
    }
    *(void *)(v2 + 16) = v59 + 1;
    uint64_t v60 = v2 + 16 * v59;
    *(void *)(v60 + 32) = v56;
    *(void *)(v60 + 40) = v57;
  }
  uint64_t v61 = sub_10069EF70();
  if ((v62 & 1) == 0)
  {
    uint64_t v63 = v61;
    _StringGuts.grow(_:)(31);
    swift_bridgeObjectRelease();
    uint64_t v119 = 0xD00000000000001CLL;
    unint64_t v120 = 0x80000001007BF670;
    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = xmmword_10076E7A0;
    *(void *)(v64 + 56) = &type metadata for Double;
    *(void *)(v64 + 64) = &protocol witness table for Double;
    *(void *)(v64 + 32) = v63;
    v65._uint64_t countAndFlagsBits = String.init(format:_:)();
    String.append(_:)(v65);
    swift_bridgeObjectRelease();
    v66._uint64_t countAndFlagsBits = 115;
    v66._object = (void *)0xE100000000000000;
    String.append(_:)(v66);
    uint64_t v67 = v119;
    unint64_t v68 = v120;
    unint64_t v70 = *(void *)(v2 + 16);
    unint64_t v69 = *(void *)(v2 + 24);
    if (v70 >= v69 >> 1) {
      uint64_t v2 = (uint64_t)sub_100253208((char *)(v69 > 1), v70 + 1, 1, (char *)v2);
    }
    *(void *)(v2 + 16) = v70 + 1;
    uint64_t v71 = v2 + 16 * v70;
    *(void *)(v71 + 32) = v67;
    *(void *)(v71 + 40) = v68;
  }
  uint64_t v72 = sub_10069F1E8();
  if ((v73 & 1) == 0)
  {
    uint64_t v74 = v72;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    uint64_t v119 = 0xD000000000000019;
    unint64_t v120 = 0x80000001007BF650;
    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v75 = swift_allocObject();
    *(_OWORD *)(v75 + 16) = xmmword_10076E7A0;
    *(void *)(v75 + 56) = &type metadata for Double;
    *(void *)(v75 + 64) = &protocol witness table for Double;
    *(void *)(v75 + 32) = v74;
    v76._uint64_t countAndFlagsBits = String.init(format:_:)();
    String.append(_:)(v76);
    swift_bridgeObjectRelease();
    v77._uint64_t countAndFlagsBits = 115;
    v77._object = (void *)0xE100000000000000;
    String.append(_:)(v77);
    uint64_t v78 = v119;
    unint64_t v79 = v120;
    unint64_t v81 = *(void *)(v2 + 16);
    unint64_t v80 = *(void *)(v2 + 24);
    if (v81 >= v80 >> 1) {
      uint64_t v2 = (uint64_t)sub_100253208((char *)(v80 > 1), v81 + 1, 1, (char *)v2);
    }
    *(void *)(v2 + 16) = v81 + 1;
    uint64_t v82 = v2 + 16 * v81;
    *(void *)(v82 + 32) = v78;
    *(void *)(v82 + 40) = v79;
  }
  uint64_t v83 = sub_10069F4A4();
  if ((v84 & 1) == 0)
  {
    uint64_t v85 = v83;
    _StringGuts.grow(_:)(25);
    swift_bridgeObjectRelease();
    uint64_t v119 = 0xD000000000000016;
    unint64_t v120 = 0x80000001007BF630;
    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v86 = swift_allocObject();
    *(_OWORD *)(v86 + 16) = xmmword_10076E7A0;
    *(void *)(v86 + 56) = &type metadata for Double;
    *(void *)(v86 + 64) = &protocol witness table for Double;
    *(void *)(v86 + 32) = v85;
    v87._uint64_t countAndFlagsBits = String.init(format:_:)();
    String.append(_:)(v87);
    swift_bridgeObjectRelease();
    v88._uint64_t countAndFlagsBits = 115;
    v88._object = (void *)0xE100000000000000;
    String.append(_:)(v88);
    uint64_t v89 = v119;
    unint64_t v90 = v120;
    unint64_t v92 = *(void *)(v2 + 16);
    unint64_t v91 = *(void *)(v2 + 24);
    if (v92 >= v91 >> 1) {
      uint64_t v2 = (uint64_t)sub_100253208((char *)(v91 > 1), v92 + 1, 1, (char *)v2);
    }
    *(void *)(v2 + 16) = v92 + 1;
    uint64_t v93 = v2 + 16 * v92;
    *(void *)(v93 + 32) = v89;
    *(void *)(v93 + 40) = v90;
  }
  uint64_t v94 = sub_10069E818();
  if ((v95 & 1) == 0)
  {
    uint64_t v96 = v94;
    sub_10069EA80();
    if (v97) {
      uint64_t v98 = 0;
    }
    else {
      uint64_t v98 = 0xD000000000000013;
    }
    if (v97) {
      uint64_t v99 = (void *)0xE000000000000000;
    }
    else {
      uint64_t v99 = (void *)0x80000001007BF610;
    }
    _StringGuts.grow(_:)(31);
    swift_bridgeObjectRelease();
    uint64_t v119 = 0xD000000000000017;
    unint64_t v120 = 0x80000001007BF5F0;
    v100._uint64_t countAndFlagsBits = v98;
    v100._object = v99;
    String.append(_:)(v100);
    swift_bridgeObjectRelease();
    v101._uint64_t countAndFlagsBits = 2112800;
    v101._object = (void *)0xE300000000000000;
    String.append(_:)(v101);
    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v102 = swift_allocObject();
    *(_OWORD *)(v102 + 16) = xmmword_10076E7A0;
    *(void *)(v102 + 56) = &type metadata for Double;
    *(void *)(v102 + 64) = &protocol witness table for Double;
    *(void *)(v102 + 32) = v96;
    v103._uint64_t countAndFlagsBits = String.init(format:_:)();
    String.append(_:)(v103);
    swift_bridgeObjectRelease();
    v104._uint64_t countAndFlagsBits = 115;
    v104._object = (void *)0xE100000000000000;
    String.append(_:)(v104);
    uint64_t v105 = v119;
    unint64_t v106 = v120;
    unint64_t v108 = *(void *)(v2 + 16);
    unint64_t v107 = *(void *)(v2 + 24);
    if (v108 >= v107 >> 1) {
      uint64_t v2 = (uint64_t)sub_100253208((char *)(v107 > 1), v108 + 1, 1, (char *)v2);
    }
    *(void *)(v2 + 16) = v108 + 1;
    uint64_t v109 = v2 + 16 * v108;
    *(void *)(v109 + 32) = v105;
    *(void *)(v109 + 40) = v106;
  }
  uint64_t v119 = v2;
  sub_10000A844((uint64_t *)&unk_100974C30);
  sub_1002FE630();
  uint64_t v110 = BidirectionalCollection<>.joined(separator:)();
  unint64_t v112 = v111;
  swift_bridgeObjectRelease();
  id v113 = [self standardUserDefaults];
  NSString v114 = String._bridgeToObjectiveC()();
  NSString v115 = String._bridgeToObjectiveC()();
  [v113 setObject:v114 forKey:v115];

  swift_bridgeObjectRetain();
  id v116 = Logger.logObject.getter();
  os_log_type_t v117 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v116, v117))
  {
    id v118 = (uint8_t *)swift_slowAlloc();
    uint64_t v119 = swift_slowAlloc();
    *(_DWORD *)id v118 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v121 = sub_100254634(v110, v112, &v119);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v116, v117, "%s", v118, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_10069E750()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097E540);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097E540);
  if (qword_100969CD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946C0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10069E818()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  os_log_type_t v6 = (char *)&v23 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v23 - v12;
  sub_1002BEBA4(v0, (uint64_t)v6);
  unint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v14(v6, 1, v7) == 1)
  {
    uint64_t v15 = (uint64_t)v6;
LABEL_5:
    sub_10033FEB0(v15);
    return 0;
  }
  uint64_t v16 = v6;
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v16, v7);
  uint64_t v18 = type metadata accessor for SDAuthenticationSessionMetrics();
  sub_1002BEBA4(v0 + *(int *)(v18 + 20), (uint64_t)v4);
  if (v14(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v15 = (uint64_t)v4;
    goto LABEL_5;
  }
  v17(v11, v4, v7);
  Date.timeIntervalSince(_:)();
  uint64_t v21 = v20;
  Swift::String v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v11, v7);
  v22(v13, v7);
  return v21;
}

uint64_t sub_10069EA80()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  os_log_type_t v6 = (char *)&v24 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = type metadata accessor for SDAuthenticationSessionMetrics();
  sub_1002BEBA4(v0 + *(int *)(v14 + 24), (uint64_t)v6);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_10033FEB0(v16);
    return 0;
  }
  unint64_t v25 = v11;
  uint64_t v17 = v6;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v18(v13, v17, v7);
  sub_1002BEBA4(v0 + *(int *)(v14 + 28), (uint64_t)v4);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }
  uint64_t v20 = v25;
  v18(v25, v4, v7);
  Date.timeIntervalSince(_:)();
  uint64_t v22 = v21;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v20, v7);
  v23(v13, v7);
  return v22;
}

uint64_t sub_10069ECF8()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  os_log_type_t v6 = (char *)&v24 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = type metadata accessor for SDAuthenticationSessionMetrics();
  sub_1002BEBA4(v0 + *(int *)(v14 + 32), (uint64_t)v6);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_10033FEB0(v16);
    return 0;
  }
  unint64_t v25 = v11;
  uint64_t v17 = v6;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v18(v13, v17, v7);
  sub_1002BEBA4(v0 + *(int *)(v14 + 36), (uint64_t)v4);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }
  uint64_t v20 = v25;
  v18(v25, v4, v7);
  Date.timeIntervalSince(_:)();
  uint64_t v22 = v21;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v20, v7);
  v23(v13, v7);
  return v22;
}

uint64_t sub_10069EF70()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  os_log_type_t v6 = (char *)&v24 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = type metadata accessor for SDAuthenticationSessionMetrics();
  sub_1002BEBA4(v0 + *(int *)(v14 + 40), (uint64_t)v6);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_10033FEB0(v16);
    return 0;
  }
  unint64_t v25 = v11;
  uint64_t v17 = v6;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v18(v13, v17, v7);
  sub_1002BEBA4(v0 + *(int *)(v14 + 44), (uint64_t)v4);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }
  uint64_t v20 = v25;
  v18(v25, v4, v7);
  Date.timeIntervalSince(_:)();
  uint64_t v22 = v21;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v20, v7);
  v23(v13, v7);
  return v22;
}

uint64_t sub_10069F1E8()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  os_log_type_t v6 = (char *)&v28 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = type metadata accessor for SDAuthenticationSessionMetrics();
  if (*(unsigned char *)(v0 + *(int *)(v14 + 52)))
  {
    *(double *)&uint64_t result = 0.0;
    return result;
  }
  uint64_t v16 = v14;
  sub_1002BEBA4(v0 + *(int *)(v14 + 48), (uint64_t)v6);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v17(v6, 1, v7) == 1)
  {
    uint64_t v18 = (uint64_t)v6;
LABEL_7:
    sub_10033FEB0(v18);
    *(double *)&uint64_t result = 0.0;
    return result;
  }
  uint64_t v29 = v8;
  uint64_t v19 = v6;
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v20(v13, v19, v7);
  sub_1002BEBA4(v0 + *(int *)(v16 + 40), (uint64_t)v4);
  if (v17(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v7);
    uint64_t v18 = (uint64_t)v4;
    goto LABEL_7;
  }
  v20(v11, v4, v7);
  Date.timeIntervalSince(_:)();
  double v22 = v21;
  *(double *)&uint64_t v23 = COERCE_DOUBLE(sub_10069EF70());
  char v25 = v24;
  unint64_t v26 = *(void (**)(char *, uint64_t))(v29 + 8);
  v26(v11, v7);
  v26(v13, v7);
  double v27 = *(double *)&v23;
  if (v25) {
    double v27 = 0.0;
  }
  *(double *)&uint64_t result = v22 - v27;
  return result;
}

uint64_t sub_10069F4A4()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  os_log_type_t v6 = (char *)&v24 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = type metadata accessor for SDAuthenticationSessionMetrics();
  sub_1002BEBA4(v0 + *(int *)(v14 + 56), (uint64_t)v6);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_10033FEB0(v16);
    return 0;
  }
  char v25 = v11;
  uint64_t v17 = v6;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v18(v13, v17, v7);
  sub_1002BEBA4(v0 + *(int *)(v14 + 60), (uint64_t)v4);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }
  uint64_t v20 = v25;
  v18(v25, v4, v7);
  Date.timeIntervalSince(_:)();
  uint64_t v22 = v21;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v20, v7);
  v23(v13, v7);
  return v22;
}

uint64_t sub_10069F71C()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  os_log_type_t v6 = (char *)&v23 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = type metadata accessor for SDAuthenticationSessionMetrics();
  sub_1002BEBA4(v0 + *(int *)(v14 + 64), (uint64_t)v6);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_10033FEB0(v16);
    return 0;
  }
  uint64_t v17 = v6;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v18(v13, v17, v7);
  sub_1002BEBA4(v0, (uint64_t)v4);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }
  v18(v11, v4, v7);
  Date.timeIntervalSince(_:)();
  uint64_t v21 = v20;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v11, v7);
  v22(v13, v7);
  return v21;
}

uint64_t sub_10069F984()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  os_log_type_t v6 = (char *)&v23 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v23 - v12;
  sub_1002BEBA4(v0, (uint64_t)v6);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v14(v6, 1, v7) == 1)
  {
    uint64_t v15 = (uint64_t)v6;
LABEL_5:
    sub_10033FEB0(v15);
    return 0;
  }
  uint64_t v16 = v6;
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v16, v7);
  uint64_t v18 = type metadata accessor for SDAuthenticationSessionMetrics();
  sub_1002BEBA4(v0 + *(int *)(v18 + 68), (uint64_t)v4);
  if (v14(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v15 = (uint64_t)v4;
    goto LABEL_5;
  }
  v17(v11, v4, v7);
  Date.timeIntervalSince(_:)();
  uint64_t v21 = v20;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v11, v7);
  v22(v13, v7);
  return v21;
}

void sub_10069FBEC(uint64_t a1, unint64_t a2)
{
  id v14 = *(id *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession);
  id v5 = v14;
  sub_10000A844(&qword_10097E700);
  Optional.tryUnwrap(_:file:line:)();

  if (!v3)
  {
    id v6 = v13;
    if (a2 >> 60 == 15) {
      Class isa = 0;
    }
    else {
      Class isa = Data._bridgeToObjectiveC()().super.isa;
    }
    id v13 = 0;
    unsigned __int8 v8 = [v6 stepSessionWithData:isa outputData:&v13];

    id v9 = v13;
    if (v8)
    {
      id v14 = v13;
      id v10 = v13;
      sub_10000A844(&qword_10097E708);
      Optional.tryUnwrap(_:file:line:)();
    }
    else
    {
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v11 = 10;
      *(void *)(v11 + 8) = 0xD000000000000017;
      *(void *)(v11 + 16) = 0x80000001007C6900;
      id v12 = v9;
      swift_willThrow();
    }
  }
}

id sub_10069FE04()
{
  id v2 = *(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession);
  sub_10000A844(&qword_10097E700);
  Optional.tryUnwrap(_:file:line:)();

  if (!v1)
  {
    id v3 = [v7 generateSessionToken];
    if (v3)
    {
      uint64_t v4 = v3;
      id v2 = (id)static Data._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v6 = 10;
      *(void *)(v6 + 8) = 0xD00000000000001ELL;
      *(void *)(v6 + 16) = 0x80000001007C68E0;
      swift_willThrow();
    }
  }
  return v2;
}

void sub_10069FF44(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_type);
  unint64_t v7 = a2 >> 60;
  if (a2 >> 60 == 15 || v6 != 6)
  {
    LODWORD(v71) = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role);
    uint64_t v69 = a1;
    id v72 = *(id *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager);
    uint64_t v21 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 24);
    uint64_t v20 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 32);
    uint64_t v22 = sub_10026BB6C((void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice), v21);
    unint64_t v70 = &v69;
    uint64_t v23 = *(void *)(v21 - 8);
    __chkstk_darwin(v22);
    char v25 = (char *)&v69 - v24;
    (*(void (**)(char *))(v23 + 16))((char *)&v69 - v24);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v20);
    uint64_t v27 = v26;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v21);
    if (v6 == 7)
    {
      if (v27)
      {
        NSString v28 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v28 = 0;
      }
      id v33 = v72;
      uint64_t v30 = (void *)&unk_100994000;
      uint64_t v36 = v71;
      if (v7 > 0xE) {
        v37.super.Class isa = 0;
      }
      else {
        v37.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
      }
      id v38 = [v33 aksAuthorizationSessionForDeviceID:v28 attestation:1 originator:v36 externalACMContext:v37.super.isa sessionType:9 v69 v70];
    }
    else
    {
      if (v27)
      {
        NSString v29 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v29 = 0;
      }
      id v33 = v72;
      uint64_t v30 = &unk_100994000;
      uint64_t v39 = 10;
      uint64_t v40 = 2;
      if (v6 == 6) {
        uint64_t v40 = 8;
      }
      if (v6 != 11) {
        uint64_t v39 = v40;
      }
      if (v6 == 4) {
        uint64_t v41 = 7;
      }
      else {
        uint64_t v41 = v39;
      }
      id v38 = [v72 aksAuthSessionForDeviceID:v29 originator:v71 usingEscrow:(unint64_t)(v6 - 3) < 2 attestation:(unint64_t)(v6 - 3) < 5 sessionType:v41];
    }
    uint64_t v42 = v30[396];
    unint64_t v35 = *(void **)(v3 + v42);
    *(void *)(v3 + v42) = v38;
  }
  else
  {
    id v72 = *(id *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager);
    uint64_t v9 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 24);
    uint64_t v8 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 32);
    id v10 = sub_10026BB6C((void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice), v9);
    unint64_t v70 = &v69;
    uint64_t v11 = *(void *)(v9 - 8);
    __chkstk_darwin(v10);
    id v13 = (char *)&v69 - v12;
    (*(void (**)(char *))(v11 + 16))((char *)&v69 - v12);
    id v14 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    unint64_t v15 = a2;
    uint64_t v16 = a1;
    unint64_t v71 = v15;
    sub_10025ADCC(a1, v15);
    v14(v9, v8);
    uint64_t v18 = v17;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v9);
    if (v18)
    {
      NSString v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v19 = 0;
    }
    uint64_t v30 = &unk_100994000;
    unint64_t v31 = v71;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    id v33 = v72;
    id v34 = [v72 aksAuthSessionForDeviceID:v19 attestation:1 sessionType:8 escrowSecret:isa];
    sub_100250CB0(v16, v31);

    unint64_t v35 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession);
    *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession) = v34;
  }

  Swift::String v43 = *(void **)(v3 + v30[396]);
  if (v43)
  {
    id v44 = v43;
    if (([v44 sessionIsValid] & 1) == 0)
    {
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v55 = 10;
      *(void *)(v55 + 8) = 0xD000000000000013;
      *(void *)(v55 + 16) = 0x80000001007C6980;
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v45 = (void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice);
    uint64_t v46 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 24);
    uint64_t v47 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 32);
    unint64_t v48 = sub_10026BB6C(v45, v46);
    uint64_t v49 = *(void *)(v46 - 8);
    __chkstk_darwin(v48);
    char v51 = (char *)&v69 - v50;
    (*(void (**)(char *))(v49 + 16))((char *)&v69 - v50);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v47);
    uint64_t v53 = v52;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v51, v46);
    if (v53)
    {
      NSString v54 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v54 = 0;
    }
    unsigned __int8 v56 = [v33 cachedEscrowSecretExistsForDeviceID:v54];

    if (v56)
    {
      uint64_t v57 = v45[3];
      uint64_t v58 = v45[4];
      unint64_t v59 = sub_10026BB6C(v45, v57);
      uint64_t v60 = *(void *)(v57 - 8);
      __chkstk_darwin(v59);
      char v62 = (char *)&v69 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v60 + 16))(v62);
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v58);
      uint64_t v64 = v63;
      (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v57);
      if (v64)
      {
        NSString v65 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v65 = 0;
      }
      unsigned __int8 v67 = [v33 cachedEscrowSecretIsValidForDeviceID:v65];

      sub_10024D280();
      swift_allocError();
      if (v67)
      {
        *(_DWORD *)uint64_t v68 = 10;
        *(void *)(v68 + 8) = 0xD00000000000001DLL;
        *(void *)(v68 + 16) = 0x80000001007C6960;
      }
      else
      {
        *(_DWORD *)uint64_t v68 = 22;
        *(void *)(v68 + 8) = 0xD000000000000015;
        *(void *)(v68 + 16) = 0x80000001007C6940;
      }
    }
    else
    {
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v66 = 10;
      *(void *)(v66 + 8) = 0xD000000000000015;
      *(void *)(v66 + 16) = 0x80000001007C6920;
    }
    swift_willThrow();
  }
}

void sub_1006A073C()
{
  id v2 = *(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession);
  sub_10000A844(&qword_10097E700);
  Optional.tryUnwrap(_:file:line:)();

  if (!v1)
  {
    if (([v4 confirmSession] & 1) == 0)
    {
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v3 = 10;
      *(void *)(v3 + 8) = 0xD00000000000001DLL;
      *(void *)(v3 + 16) = 0x80000001007C69A0;
      swift_willThrow();
    }
  }
}

id sub_1006A0848()
{
  char v1 = *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role);
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 24);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice + 32);
  id v5 = sub_10026BB6C((void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice), v4);
  uint64_t v6 = *(void *)(v4 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - v7;
  (*(void (**)(char *))(v6 + 16))((char *)&v15 - v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v3);
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  if (v1)
  {
    if (v10)
    {
      NSString v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v11 = 0;
    }
    uint64_t v12 = &selRef_deviceEnabledAsKeyForIDSDeviceID_;
  }
  else
  {
    if (v10)
    {
      NSString v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v11 = 0;
    }
    uint64_t v12 = &selRef_deviceEnabledAsKey_;
  }
  id v13 = [v2 *v12 v11];

  return v13;
}

uint64_t sub_1006A09FC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_sessionID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  sub_10024D338(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice);

  return swift_deallocClassInstance();
}

uint64_t sub_1006A0ACC()
{
  return type metadata accessor for SDAuthenticationAKSAuthSession();
}

uint64_t type metadata accessor for SDAuthenticationAKSAuthSession()
{
  uint64_t result = qword_10097E650;
  if (!qword_10097E650) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1006A0B20()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SDAirDropProgressReportingFactory()
{
  return self;
}

uint64_t SFAirDropReceive.Failure.legacyFailureReason.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SFAirDropReceive.Failure();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for SFAirDropReceive.Failure.unsupportedType(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    swift_bridgeObjectRelease();
    uint64_t v7 = &v5[*(int *)(sub_10000A844((uint64_t *)&unk_1009723D0) + 48)];
    uint64_t v8 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    return 1;
  }
  if (v6 == enum case for SFAirDropReceive.Failure.unexpected(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 1;
  }
  if (v6 == enum case for SFAirDropReceive.Failure.declined(_:)) {
    return 3;
  }
  if (v6 == enum case for SFAirDropReceive.Failure.askDismissed(_:)
    || v6 == enum case for SFAirDropReceive.Failure.senderCancelled(_:))
  {
    return 0;
  }
  if (v6 == enum case for SFAirDropReceive.Failure.receiverCancelled(_:)) {
    return 3;
  }
  if (v6 == enum case for SFAirDropReceive.Failure.mixedTypes(_:)) {
    return 2;
  }
  uint64_t v9 = 1;
  if (v6 == enum case for SFAirDropReceive.Failure.missingDownloadDirectory(_:)
    || v6 == enum case for SFAirDropReceive.Failure.missingOwnContact(_:)
    || v6 == enum case for SFAirDropReceive.Failure.streamError(_:)
    || v6 == enum case for SFAirDropReceive.Failure.askNotHandled(_:)
    || v6 == enum case for SFAirDropReceive.Failure.incompleteTransfer(_:)
    || v6 == enum case for SFAirDropReceive.Failure.badRequest(_:))
  {
    return v9;
  }
  if (v6 == enum case for SFAirDropReceive.Failure.moveToAppFailed(_:)) {
    return 3;
  }
  if (v6 == enum case for SFAirDropReceive.Failure.insufficientStorage(_:)) {
    return 1;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_1006A0ED0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v21 = a2;
  uint64_t v6 = sub_10000A844(&qword_10097E830);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v20 - v11;
  __chkstk_darwin(v10);
  id v14 = (char *)&v20 - v13;
  uint64_t v15 = (os_unfair_lock_s *)(*(void *)((char *)v3 + *(void *)((swift_isaMask & *v3) + 0x58)) + 16);
  os_unfair_lock_lock(v15);
  uint64_t v16 = (uint64_t)v3 + *(void *)((swift_isaMask & *v3) + 0x68);
  swift_beginAccess();
  sub_10024A330(v16, (uint64_t)v14, &qword_10097E830);
  uint64_t v17 = sub_10000A844(&qword_10097E838);
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v12, 1, 1, v17);
  swift_beginAccess();
  sub_10026B410((uint64_t)v12, v16, &qword_10097E830);
  swift_endAccess();
  os_unfair_lock_unlock(v15);
  sub_10024A330((uint64_t)v14, (uint64_t)v9, &qword_10097E830);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v17) == 1)
  {
    sub_10000A7E8((uint64_t)v14, &qword_10097E830);
    return sub_10000A7E8((uint64_t)v9, &qword_10097E830);
  }
  else
  {
    if (a3)
    {
      uint64_t v22 = a1;
      swift_errorRetain();
      CheckedContinuation.resume(throwing:)();
    }
    else
    {
      uint64_t v22 = a1;
      uint64_t v23 = v21;
      swift_bridgeObjectRetain();
      CheckedContinuation.resume(returning:)();
    }
    sub_10000A7E8((uint64_t)v14, &qword_10097E830);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v9, v17);
  }
}

uint64_t sub_1006A117C(uint64_t a1, char a2)
{
  uint64_t v5 = sub_10000A844(&qword_10097E7F8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)v19 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v19 - v12;
  id v14 = (os_unfair_lock_s *)(*(void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x58)) + 16);
  os_unfair_lock_lock(v14);
  uint64_t v15 = (uint64_t)v2 + *(void *)((swift_isaMask & *v2) + 0x68);
  swift_beginAccess();
  sub_10024A330(v15, (uint64_t)v13, &qword_10097E7F8);
  uint64_t v16 = sub_10000A844(&qword_10097E800);
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v11, 1, 1, v16);
  swift_beginAccess();
  sub_10026B410((uint64_t)v11, v15, &qword_10097E7F8);
  swift_endAccess();
  os_unfair_lock_unlock(v14);
  sub_10024A330((uint64_t)v13, (uint64_t)v8, &qword_10097E7F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v16) == 1)
  {
    sub_10000A7E8((uint64_t)v13, &qword_10097E7F8);
    return sub_10000A7E8((uint64_t)v8, &qword_10097E7F8);
  }
  else
  {
    if (a2)
    {
      v19[0] = a1;
      swift_errorRetain();
      CheckedContinuation.resume(throwing:)();
    }
    else
    {
      LOBYTE(v19[0]) = a1;
      CheckedContinuation.resume(returning:)();
    }
    sub_10000A7E8((uint64_t)v13, &qword_10097E7F8);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v8, v16);
  }
}

uint64_t sub_1006A141C(uint64_t a1, char a2)
{
  uint64_t v5 = sub_10000A844(&qword_10097E810);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)v19 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v19 - v12;
  id v14 = (os_unfair_lock_s *)(*(void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x58)) + 16);
  os_unfair_lock_lock(v14);
  uint64_t v15 = (uint64_t)v2 + *(void *)((swift_isaMask & *v2) + 0x68);
  swift_beginAccess();
  sub_10024A330(v15, (uint64_t)v13, &qword_10097E810);
  uint64_t v16 = sub_10000A844(&qword_10097E818);
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v11, 1, 1, v16);
  swift_beginAccess();
  sub_10026B410((uint64_t)v11, v15, &qword_10097E810);
  swift_endAccess();
  os_unfair_lock_unlock(v14);
  sub_10024A330((uint64_t)v13, (uint64_t)v8, &qword_10097E810);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v16) == 1)
  {
    sub_10000A7E8((uint64_t)v13, &qword_10097E810);
    return sub_10000A7E8((uint64_t)v8, &qword_10097E810);
  }
  else
  {
    if (a2)
    {
      v19[0] = a1;
      swift_errorRetain();
      CheckedContinuation.resume(throwing:)();
    }
    else
    {
      LOBYTE(v19[0]) = a1 & 1;
      CheckedContinuation.resume(returning:)();
    }
    sub_10000A7E8((uint64_t)v13, &qword_10097E810);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v8, v16);
  }
}

__n128 sub_1006A16C0(uint64_t a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_1006A1790(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, &qword_10097E830, &qword_10097E838, (uint64_t)&unk_1008E5210, (uint64_t)sub_1006A40C0, qword_1008E5228);
  return result;
}

__n128 sub_1006A1728(uint64_t a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_1006A1790(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, &qword_10097E7F8, &qword_10097E800, (uint64_t)&unk_1008E5120, (uint64_t)sub_1006A3E84, qword_1008E5138);
  return result;
}

void sub_1006A1790(uint64_t a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t *a12, uint64_t *a13, uint64_t a14, uint64_t a15, void *a16)
{
  id v72 = a7;
  id v73 = a8;
  unint64_t v70 = a5;
  uint64_t v71 = a6;
  uint64_t v74 = a3;
  uint64_t v75 = a16;
  id v76 = a4;
  uint64_t v18 = sub_10000A844(a12);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (os_unfair_lock_s *)(*(void *)((char *)a2 + *(void *)((swift_isaMask & *a2) + 0x58)) + 16);
  os_unfair_lock_lock(v21);
  uint64_t v22 = sub_10000A844(a13);
  uint64_t v23 = *(void *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v20, a1, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  uint64_t v24 = (uint64_t)a2 + *(void *)((swift_isaMask & *a2) + 0x68);
  swift_beginAccess();
  sub_10026B410((uint64_t)v20, v24, a12);
  swift_endAccess();
  os_unfair_lock_unlock(v21);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v74;
  *(void *)(v25 + 16) = a2;
  *(void *)(v25 + 24) = v26;
  uint64_t v82 = a15;
  uint64_t v83 = v25;
  unint64_t aBlock = (unint64_t)_NSConcreteStackBlock;
  unint64_t v79 = 1107296256;
  unint64_t v80 = sub_1002670F0;
  unint64_t v81 = v75;
  uint64_t v27 = _Block_copy(&aBlock);
  NSString v28 = self;
  uint64_t v75 = a2;
  NSString v29 = a2;
  id v30 = [v28 responderWithHandler:v27, v70, v71, v72, v73];
  _Block_release(v27);
  swift_release();
  if (!v76)
  {
    uint64_t v74 = v29;
    id v76 = v30;
    id v31 = objc_allocWithZone((Class)SBSRemoteAlertDefinition);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSString v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v34 = [v31 initWithServiceName:v32 viewControllerClassName:v33];

    id v35 = [objc_allocWithZone((Class)SBSRemoteAlertConfigurationContext) init];
    if (a9)
    {
      sub_10039E870(a9);
      v36.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      v36.super.Class isa = 0;
    }
    [v35 setUserInfo:v36.super.isa];

    id v37 = [objc_allocWithZone((Class)BSMutableSettings) init];
    [v37 setFlag:1 forSetting:a10];
    id v38 = objc_allocWithZone((Class)BSAction);
    id v73 = v37;
    uint64_t v39 = v76;
    id v40 = [v38 initWithInfo:v37 responder:v76];
    sub_10000A844(&qword_10096B3E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100773BD0;
    *(void *)(inited + 32) = v40;
    unint64_t aBlock = inited;
    specialized Array._endMutation()();
    unint64_t v42 = aBlock;
    if (aBlock >> 62)
    {
      id v45 = v40;
      swift_bridgeObjectRetain();
      uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v46)
      {
LABEL_9:
        swift_bridgeObjectRelease();
        sub_1006A3EA4();
        sub_1006A3EE4(&qword_10097E808, (void (*)(uint64_t))sub_1006A3EA4);
        Class isa = Set._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v35 setActions:isa];

        if (qword_100969EA8 != -1) {
          swift_once();
        }
        id v72 = v40;
        uint64_t v48 = type metadata accessor for Logger();
        sub_10000B47C(v48, (uint64_t)qword_100976510);
        id v49 = v34;
        id v50 = v35;
        id v51 = v49;
        id v52 = v50;
        uint64_t v53 = Logger.logObject.getter();
        os_log_type_t v54 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v53, v54))
        {
          uint64_t v55 = swift_slowAlloc();
          unsigned __int8 v56 = (void *)swift_slowAlloc();
          uint64_t v71 = swift_slowAlloc();
          uint64_t v77 = v71;
          *(_DWORD *)uint64_t v55 = 138412546;
          unint64_t aBlock = (unint64_t)v51;
          id v57 = v51;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          unint64_t v70 = v56;
          *unsigned __int8 v56 = v51;

          *(_WORD *)(v55 + 12) = 2080;
          id v58 = [v52 userInfo];
          if (v58)
          {
            unint64_t v59 = v58;
            static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            swift_bridgeObjectRetain();
            unint64_t v60 = Dictionary.description.getter();
            unint64_t v62 = v61;
            swift_bridgeObjectRelease_n();
          }
          else
          {
            unint64_t aBlock = 0;
            unint64_t v79 = 0xE000000000000000;
            _StringGuts.grow(_:)(17);
            swift_bridgeObjectRelease();
            unint64_t v62 = 0x80000001007C5A00;
            unint64_t v60 = 0xD00000000000002BLL;
          }
          unint64_t aBlock = sub_100254634(v60, v62, &v77);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v53, v54, "SDAirDropRemoteViewController activating with definition: %@ and userInfo: %s", (uint8_t *)v55, 0x16u);
          sub_10000A844(&qword_10096B850);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v39 = v76;
        }
        else
        {
        }
        id v63 = [self newHandleWithDefinition:v51 configurationContext:v52];
        uint64_t v64 = v74;
        uint64_t v65 = *(void *)((swift_isaMask & *v74) + 0x60);
        uint64_t v66 = *(void **)((char *)v74 + v65);
        *(void *)((char *)v74 + v65) = v63;

        unsigned __int8 v67 = *(void **)((char *)v64 + v65);
        if (!v67) {
          goto LABEL_23;
        }
        [v67 registerObserver:v64];
        uint64_t v68 = *(void **)((char *)v64 + v65);
        if (a11)
        {
          if (!v68)
          {
LABEL_23:

            id v30 = v73;
            goto LABEL_24;
          }
          [v68 registerObserver:a11];
          uint64_t v68 = *(void **)((char *)v64 + v65);
        }
        if (v68)
        {
          id v69 = v68;
          [v69 activateWithContext:0];
        }
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v43 = *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v44 = v40;
      if (!v43) {
        goto LABEL_9;
      }
    }
    sub_1002CE0E0(v42);
    goto LABEL_9;
  }
LABEL_24:
}

__n128 sub_1006A1FF8(uint64_t a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_1006A1790(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, &qword_10097E810, &qword_10097E818, (uint64_t)&unk_1008E5170, (uint64_t)sub_1006A3F2C, qword_1008E5188);
  return result;
}

id sub_1006A2060(void *a1, void *a2, uint64_t a3)
{
  if (qword_100969EA8 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_100976510);
  id v7 = a1;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v22 = a2;
    uint64_t v10 = a3;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412290;
    *(void *)&v24[0] = v7;
    id v13 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v12 = v7;

    a3 = v10;
    a2 = v22;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "SDAirDropRemoteViewController received response: %@", v11, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v14 = [v7 error];
  if (v14)
  {
    uint64_t v15 = (uint64_t)v14;
    id v16 = v14;
    sub_1006A0ED0(v15, 0, 1);
  }
  else
  {
    id v17 = [v7 info];
    if (v17)
    {
      uint64_t v18 = v17;
      if ([v17 objectForSetting:a3])
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
        sub_100249444(&v23, v24);
      }
      else
      {
        memset(v24, 0, sizeof(v24));
      }
      sub_10000A844((uint64_t *)&unk_10096AC20);
      if (swift_dynamicCast() && (uint64_t v19 = *((void *)&v23 + 1)) != 0)
      {
        uint64_t v20 = v23;
        swift_bridgeObjectRetain();
        sub_1006A0ED0(v20, v19, 0);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        sub_1006A0ED0(0, 0, 0);
      }
    }
    else
    {
      sub_1006A0ED0(0, 0, 0);
    }
  }
  id result = *(id *)((char *)a2 + *(void *)((swift_isaMask & *a2) + 0x60));
  if (result) {
    return [result invalidate];
  }
  return result;
}

id sub_1006A2390(void *a1, void *a2, uint64_t a3)
{
  if (qword_100969EA8 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_100976510);
  id v7 = a1;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v19 = a3;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412290;
    id v20 = v7;
    id v12 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v11 = v7;

    a3 = v19;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "SDAirDropRemoteViewController received response: %@", v10, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v13 = [v7 error:v19, v20];
  if (v13)
  {
    uint64_t v14 = (uint64_t)v13;
    id v15 = v13;
    sub_1006A117C(v14, 1);
  }
  else
  {
    id v16 = [v7 info];
    if (v16)
    {
      id v17 = v16;
      sub_1006A117C([v16 BOOLForSetting:a3], 0);
    }
    else
    {
      sub_1006A117C(0, 0);
    }
  }
  id result = *(id *)((char *)a2 + *(void *)((swift_isaMask & *a2) + 0x60));
  if (result) {
    return [result invalidate];
  }
  return result;
}

id sub_1006A2610(void *a1, void *a2, uint64_t a3)
{
  if (qword_100969EA8 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_100976510);
  id v7 = a1;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v21 = a2;
    uint64_t v10 = a3;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    id v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412290;
    *(void *)&v23[0] = v7;
    id v13 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v12 = v7;

    a3 = v10;
    a2 = v21;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "SDAirDropRemoteViewController received response: %@", v11, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v14 = [v7 error];
  if (v14)
  {
    uint64_t v15 = (uint64_t)v14;
    id v16 = v14;
    sub_1006A141C(v15, 1);
  }
  else
  {
    id v17 = [v7 info];
    if (v17)
    {
      uint64_t v18 = v17;
      if ([v17 objectForSetting:a3])
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
        sub_100249444(&v22, v23);
      }
      else
      {
        memset(v23, 0, sizeof(v23));
      }
      sub_10000A844((uint64_t *)&unk_10096AC20);
      BOOL v19 = swift_dynamicCast() == 0;
      sub_1006A141C(v19, 0);
    }
    else
    {
      sub_1006A141C(1, 0);
    }
  }
  id result = *(id *)((char *)a2 + *(void *)((swift_isaMask & *a2) + 0x60));
  if (result) {
    return [result invalidate];
  }
  return result;
}

uint64_t sub_1006A290C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097E7A8);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097E7A8);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1006A29D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  uint64_t v11 = (uint64_t (*)(uint64_t))((char *)&dword_10097E7E8 + dword_10097E7E8);
  os_log_type_t v9 = (void *)swift_task_alloc();
  v7[6] = v9;
  *os_log_type_t v9 = v7;
  v9[1] = sub_1006A2A80;
  return v11(a5);
}

uint64_t sub_1006A2A80(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1006A2C18;
  }
  else
  {
    *(unsigned char *)(v4 + 64) = a1 & 1;
    uint64_t v5 = sub_1006A2BAC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1006A2BAC()
{
  (*(void (**)(void, void))(v0 + 32))(*(unsigned __int8 *)(v0 + 64), 0);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006A2C18()
{
  id v14 = v0;
  if (qword_10096A158 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097E7A8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[7];
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    v0[2] = v5;
    swift_errorRetain();
    sub_10000A844(&qword_10096BAF0);
    uint64_t v7 = String.init<A>(describing:)();
    v0[3] = sub_100254634(v7, v8, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Move to App Share Sheet failed {error: %s}", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v9 = v0[7];
  uint64_t v10 = (void (*)(void, uint64_t))v0[4];
  swift_errorRetain();
  v10(0, v9);
  swift_errorRelease();
  swift_errorRelease();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

void sub_1006A2FF0(char a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, void))(a3 + 16))(a3, a1 & 1);
}

uint64_t type metadata accessor for SDAirDropMoveToAppShareSheet()
{
  return self;
}

uint64_t sub_1006A30C4(uint64_t a1)
{
  v1[14] = a1;
  uint64_t v2 = type metadata accessor for SFMoveToAppShareSheetSettings();
  v1[15] = v2;
  v1[16] = *(void *)(v2 - 8);
  v1[17] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v1[18] = v3;
  v1[19] = *(void *)(v3 - 8);
  v1[20] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v1[21] = swift_task_alloc();
  return _swift_task_switch(sub_1006A323C, 0, 0);
}

uint64_t sub_1006A323C()
{
  id v69 = v0;
  uint64_t v1 = v0[14];
  unint64_t v68 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(v1 + 16);
  id v63 = v0 + 14;
  uint64_t v3 = v0[19];
  if (v2)
  {
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    uint64_t v4 = v3 + 16;
    uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 64));
    uint64_t v7 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 40);
    uint64_t v65 = v5;
    uint64_t v64 = *(void *)(v4 + 56);
    swift_bridgeObjectRetain();
    unint64_t v61 = (v4 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      uint64_t v8 = v0[21];
      uint64_t v9 = v0[18];
      v65(v8, v6, v9);
      uint64_t v10 = *v7;
      (*v7)(v8, 0, 1, v9);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v8, 1, v9) == 1) {
        break;
      }
      uint64_t v12 = v0[20];
      uint64_t v11 = v0[21];
      uint64_t v13 = v0;
      uint64_t v14 = v0[18];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v12, v11, v14);
      URL._bridgeToObjectiveC()(v15);
      id v17 = v16;
      id v18 = [self scopedResourceWithFileURL:v16 allowedAccess:2];

      (*(void (**)(uint64_t, uint64_t))(v4 - 8))(v12, v14);
      if (v18)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v6 += v64;
      --v2;
      uint64_t v0 = v13;
      if (!v2)
      {
        v10(v13[21], 1, 1, v13[18]);
        break;
      }
    }
  }
  else
  {
    BOOL v19 = *(void (**)(void, uint64_t, uint64_t, void))(v3 + 56);
    swift_bridgeObjectRetain();
    v19(v0[21], 1, 1, v0[18]);
  }
  swift_bridgeObjectRelease();
  unint64_t v20 = v68;
  if (v68 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t v62 = v0;
    if (v21) {
      goto LABEL_13;
    }
LABEL_27:
    uint64_t v24 = _swiftEmptyArrayStorage;
    goto LABEL_28;
  }
  uint64_t v21 = *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  unint64_t v62 = v0;
  if (!v21) {
    goto LABEL_27;
  }
LABEL_13:
  id v66 = self;
  if (v21 < 1)
  {
    __break(1u);
LABEL_40:
    swift_once();
    goto LABEL_33;
  }
  uint64_t v22 = 0;
  long long v23 = (id *)(v63 - 2);
  uint64_t v24 = _swiftEmptyArrayStorage;
  do
  {
    if ((v20 & 0xC000000000000001) != 0) {
      id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v26 = *(id *)(v20 + 8 * v22 + 32);
    }
    uint64_t v27 = v26;
    *long long v23 = 0;
    id v28 = [v66 archivedDataWithRootObject:v26 requiringSecureCoding:1 error:v23];
    id v29 = *v23;
    if (v28)
    {
      uint64_t v30 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v32 = v31;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v24 = sub_100254118(0, v24[2] + 1, 1, v24);
      }
      unint64_t v34 = v24[2];
      unint64_t v33 = v24[3];
      if (v34 >= v33 >> 1) {
        uint64_t v24 = sub_100254118((void *)(v33 > 1), v34 + 1, 1, v24);
      }
      _OWORD v24[2] = v34 + 1;
      id v35 = &v24[2 * v34];
      v35[4] = v30;
      v35[5] = v32;
    }
    else
    {
      uint64_t v25 = v29;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
    }
    ++v22;
  }
  while (v21 != v22);
LABEL_28:
  swift_bridgeObjectRelease_n();
  if (v24[2])
  {
    uint64_t v37 = v62[16];
    uint64_t v36 = v62[17];
    uint64_t v38 = v62[15];
    uint64_t v39 = *(void (**)(uint64_t, void, uint64_t))(v37 + 104);
    v39(v36, enum case for SFMoveToAppShareSheetSettings.reply(_:), v38);
    id v67 = (id)SFMoveToAppShareSheetSettings.rawValue.getter();
    id v40 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v40(v36, v38);
    v39(v36, enum case for SFMoveToAppShareSheetSettings.shareSheetSucceeded(_:), v38);
    uint64_t v41 = SFMoveToAppShareSheetSettings.rawValue.getter();
    v40(v36, v38);
    sub_10000A844((uint64_t *)&unk_10097D2B0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
    *(void *)(inited + 32) = static SFMoveToAppShareSheetSettings.encodedFiles.getter();
    *(void *)(inited + 40) = v43;
    *(void *)(inited + 72) = sub_10000A844(&qword_10097E7F0);
    *(void *)(inited + 48) = v24;
    unint64_t v44 = sub_100245A7C(inited);
    v62[22] = v44;
    id v45 = [objc_allocWithZone((Class)sub_10000A844(&qword_100975F28)) init];
    v62[23] = v45;
    uint64_t v46 = swift_task_alloc();
    v62[24] = v46;
    *(void *)(v46 + 16) = v45;
    *(void *)(v46 + 24) = v41;
    *(_OWORD *)(v46 + 32) = xmmword_100770720;
    *(void *)(v46 + 48) = 0x80000001007B69C0;
    *(void *)(v46 + 56) = 0xD000000000000024;
    *(void *)(v46 + 64) = 0x80000001007C6A40;
    *(void *)(v46 + 72) = v44;
    *(void *)(v46 + 80) = v67;
    *(void *)(v46 + 88) = 0;
    uint64_t v47 = (void *)swift_task_alloc();
    v62[25] = v47;
    uint64_t v48 = sub_10000A844(&qword_1009713C0);
    void *v47 = v62;
    v47[1] = sub_1006A3B2C;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v62 + 27, 0, 0, 0xD00000000000006ALL, 0x80000001007B69E0, sub_1006A3DD4, v46, v48);
  }
  swift_bridgeObjectRelease();
  if (qword_10096A158 != -1) {
    goto LABEL_40;
  }
LABEL_33:
  uint64_t v49 = type metadata accessor for Logger();
  sub_10000B47C(v49, (uint64_t)qword_10097E7A8);
  swift_bridgeObjectRetain_n();
  id v50 = Logger.logObject.getter();
  os_log_type_t v51 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v50, v51))
  {
    id v52 = v62;
    uint64_t v53 = (uint8_t *)swift_slowAlloc();
    unint64_t v68 = swift_slowAlloc();
    *(_DWORD *)uint64_t v53 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v54 = Array.description.getter();
    unint64_t v56 = v55;
    swift_bridgeObjectRelease();
    v62[13] = sub_100254634(v54, v56, (uint64_t *)&v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "Could not create encoded array of security scoped resources for files %s", v53, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    id v52 = v62;
  }
  uint64_t v57 = type metadata accessor for SFAirDropReceive.Failure();
  sub_1006A3EE4(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v57 - 8) + 104))(v58, enum case for SFAirDropReceive.Failure.moveToAppFailed(_:), v57);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v59 = (uint64_t (*)(void))v52[1];
  return v59(0);
}

uint64_t sub_1006A3B2C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1006A3D0C, 0, 0);
  }
  else
  {
    uint64_t v3 = *(void **)(v2 + 184);
    swift_bridgeObjectRelease();

    swift_task_dealloc();
    uint64_t v4 = *(unsigned __int8 *)(v2 + 216);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v2 + 8);
    return v5(v4 & 1);
  }
}

uint64_t sub_1006A3D0C()
{
  uint64_t v1 = *(void **)(v0 + 184);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

void sub_1006A3DD4(uint64_t a1)
{
  sub_1006A1790(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), *(void **)(v1 + 56), *(void **)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), &qword_10097E7F8, &qword_10097E800, (uint64_t)&unk_1008E5120, (uint64_t)sub_1006A3E84, qword_1008E5138);
}

uint64_t sub_1006A3E4C()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1006A3E84(void *a1)
{
  return sub_1006A2390(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1006A3E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1006A3E9C()
{
  return swift_release();
}

unint64_t sub_1006A3EA4()
{
  unint64_t result = qword_10096D400;
  if (!qword_10096D400)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10096D400);
  }
  return result;
}

uint64_t sub_1006A3EE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1006A3F2C(void *a1)
{
  return sub_1006A2610(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1006A3F34()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1006A3F6C(char a1, uint64_t a2)
{
  sub_1006A2FF0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1006A3F74()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1006A3FC4()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_10000A6F4;
  *(_OWORD *)(v3 + 32) = v4;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)&dword_10097E7E8 + dword_10097E7E8);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 48) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_1006A2A80;
  return v7(v2);
}

id sub_1006A40C0(void *a1)
{
  return sub_1006A2060(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1006A40E0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097E840);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097E840);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1006A41A8(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SFAirDropReceive.AskRequest();
  v2[12] = v5;
  v2[13] = *(void *)(v5 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  return _swift_task_switch(sub_1006A4368, v6, 0);
}

uint64_t sub_1006A4368()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[13];
  uint64_t v5 = *(void *)(SFAirDropReceive.AskRequest.files.getter() + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[12];
  uint64_t v8 = v0[13];
  if (v5)
  {
    uint64_t v9 = *(void *)(SFAirDropReceive.AskRequest.urlItems.getter() + 16);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    if (v9)
    {
      BOOL v10 = 0;
    }
    else
    {
      uint64_t v11 = SFAirDropReceive.AskRequest.files.getter();
      uint64_t v12 = *(void *)(v11 + 16);
      if (v12)
      {
        uint64_t v13 = v0[10];
        uint64_t v15 = *(void (**)(void, unint64_t, void))(v13 + 16);
        uint64_t v14 = v13 + 16;
        unint64_t v16 = v11 + ((*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64));
        uint64_t v28 = *(void *)(v14 + 56);
        os_log_type_t type = v15;
        while (1)
        {
          type(v0[11], v16, v0[9]);
          SFAirDropReceive.AskRequest.ItemInfo.fileName.getter();
          NSString v17 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          NSString v18 = [v17 pathExtension];

          if (!v18)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();
            NSString v18 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
          }
          uint64_t v19 = v0[11];
          uint64_t v20 = v0[9];
          char v21 = SFIsManagedConfigurationType();

          (*(void (**)(uint64_t, uint64_t))(v14 - 8))(v19, v20);
          if ((v21 & 1) == 0) {
            break;
          }
          v16 += v28;
          if (!--v12) {
            goto LABEL_11;
          }
        }
        swift_bridgeObjectRelease();
        BOOL v10 = 0;
      }
      else
      {
LABEL_11:
        swift_bridgeObjectRelease();
        id v22 = objc_allocWithZone((Class)LSApplicationRecord);
        id v23 = sub_1006A5458(0xD000000000000015, 0x80000001007C6B50, 1);
        uint64_t v24 = v0[5];
        uint64_t v25 = *(void **)(v24 + 16);
        *(void *)(v24 + 16) = v23;

        BOOL v10 = *(void *)(v0[5] + 16) != 0;
      }
    }
  }
  else
  {
    (*(void (**)(void, void))(v8 + 8))(v0[15], v0[12]);
    BOOL v10 = 0;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v26 = (uint64_t (*)(BOOL))v0[1];
  return v26(v10);
}

uint64_t sub_1006A4914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = sub_10000A844(&qword_1009700B0);
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v4[10] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URL();
  v4[11] = v6;
  v4[12] = *(void *)(v6 - 8);
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  sub_10000A844(&qword_1009700B8);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  return _swift_task_switch(sub_1006A4B28, v7, 0);
}

uint64_t sub_1006A4B28()
{
  uint64_t v71 = v0;
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[7];
  uint64_t v2 = v0[8];
  unint64_t v4 = *(void *)(v0[6] + 16);
  id v66 = (void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16);
  uint64_t v65 = (void (**)(void, uint64_t, uint64_t, void))(v1 + 56);
  uint64_t v60 = v1;
  uint64_t v5 = (void (**)(void, char *, void))(v1 + 32);
  id v63 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  uint64_t v64 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  id v67 = (void (**)(uint64_t, uint64_t))(v1 + 8);
  double v6 = (double)(uint64_t)(v4 + 1);
  swift_bridgeObjectRetain();
  uint64_t v59 = 0;
  unint64_t v7 = 0;
  char v8 = 1;
  unint64_t v61 = v5;
  unint64_t v62 = v4;
  BOOL v9 = v4 == 0;
  if (v4) {
    goto LABEL_3;
  }
LABEL_2:
  (*v65)(v0[10], 1, 1, v0[11]);
  unint64_t v69 = v4;
LABEL_5:
  uint64_t v13 = v0[16];
  uint64_t v14 = v0[7];
  sub_10026114C(v0[10]);
  (*v64)(v13, 1, 1, v14);
  while (1)
  {
    uint64_t v24 = v0[17];
    uint64_t v25 = v0[7];
    sub_10034346C(v0[16], v24);
    int v26 = (*v63)(v24, 1, v25);
    uint64_t v27 = (char *)v0[17];
    if (v26 == 1) {
      break;
    }
    uint64_t v68 = *(void *)v27;
    (*v5)(v0[14], &v27[*(int *)(v3 + 48)], v0[11]);
    uint64_t v42 = Data.init(contentsOf:options:)();
    unint64_t v44 = v43;
    id v45 = [self sharedConnection];
    if (!v45) {
      goto LABEL_29;
    }
    uint64_t v46 = v45;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    URL.lastPathComponent.getter();
    NSString v48 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v0[2] = 0;
    id v49 = [v46 queueFileDataForAcceptance:isa originalFileName:v48 outError:v0 + 2];

    id v50 = (void *)v0[2];
    if (v49)
    {
      id v51 = v50;

      sub_100250CC4(v42, v44);
    }
    else
    {
      id v55 = v50;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      sub_100250CC4(v42, v44);
      if (qword_10096A160 != -1) {
        swift_once();
      }
      uint64_t v28 = v0[13];
      uint64_t v29 = v0[14];
      uint64_t v30 = v0[11];
      uint64_t v31 = type metadata accessor for Logger();
      sub_10000B47C(v31, (uint64_t)qword_10097E840);
      (*v66)(v28, v29, v30);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v32 = Logger.logObject.getter();
      os_log_type_t v33 = static os_log_type_t.error.getter();
      BOOL v34 = os_log_type_enabled(v32, v33);
      uint64_t v35 = v0[13];
      uint64_t v36 = v0[11];
      if (v34)
      {
        uint64_t v37 = swift_slowAlloc();
        uint64_t v38 = (void *)swift_slowAlloc();
        v70[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v37 = 136315394;
        sub_1006A586C((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v37 + 4) = sub_100254634(v39, v40, v70);
        swift_bridgeObjectRelease();
        (*v67)(v35, v36);
        *(_WORD *)(v37 + 12) = 2112;
        swift_errorRetain();
        uint64_t v41 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v37 + 14) = v41;
        void *v38 = v41;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "Failed to load data or queue file data for acceptance for %s with error: %@", (uint8_t *)v37, 0x16u);
        sub_10000A844(&qword_10096B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        (*v67)(v35, v36);
        swift_errorRelease();
        swift_errorRelease();
      }
      char v8 = 0;
    }
    uint64_t v5 = v61;
    unint64_t v4 = v62;
    if (__OFADD__(v68, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
    }
    uint64_t v52 = v0[14];
    uint64_t v53 = v0[11];
    uint64_t v54 = (void (*)(uint64_t *))v0[4];
    *(double *)uint64_t v70 = (double)(v68 + 1) / v6;
    v54(v70);
    (*v67)(v52, v53);
    unint64_t v7 = v69;
    BOOL v9 = v69 >= v62;
    if (v69 == v62) {
      goto LABEL_2;
    }
LABEL_3:
    if (v9) {
      goto LABEL_27;
    }
    uint64_t v10 = v0[10];
    uint64_t v11 = v0[11];
    unint64_t v12 = v7;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v60 + 16))(v10, v0[6]+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(void *)(v60 + 72) * v7, v11);
    unint64_t v69 = v12 + 1;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v10, 1, v11) == 1) {
      goto LABEL_5;
    }
    uint64_t v15 = (char *)v0[15];
    uint64_t v16 = v0[11];
    uint64_t v17 = v0[9];
    NSString v18 = (void (*)(char *, char *, uint64_t))*v5;
    (*v5)(v15, (char *)v0[10], v16);
    uint64_t v19 = (char *)(v17 + *(int *)(v3 + 48));
    v18(v19, v15, v16);
    if (__OFADD__(v59, 1)) {
      goto LABEL_28;
    }
    uint64_t v20 = (void *)v0[16];
    uint64_t v21 = v0[11];
    uint64_t v22 = v0[7];
    id v23 = (char *)v20 + *(int *)(v3 + 48);
    *uint64_t v20 = v59;
    v18(v23, v19, v21);
    (*v64)((uint64_t)v20, 0, 1, v22);
    ++v59;
  }
  unint64_t v56 = (unsigned char *)v0[3];
  swift_bridgeObjectRelease();
  *unint64_t v56 = v8 & 1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v57 = (uint64_t (*)(void))v0[1];
  return v57();
}

uint64_t type metadata accessor for SDAirDropContentHandlerProfiles()
{
  return self;
}

uint64_t sub_1006A52B4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerProfiles();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1006A52EC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_1006A41A8(a1);
}

uint64_t sub_1006A5388(uint64_t a1)
{
  *(void *)(swift_allocObject() + 16) = a1;
  swift_bridgeObjectRetain();
  return SFProgressTask.init(_:initialProgress:operation:file:line:)();
}

id sub_1006A5458(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithBundleIdentifier:v5 allowPlaceholder:a3 & 1 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v6;
}

void sub_1006A5534(uint64_t a1, char a2)
{
  unint64_t v3 = *(void *)(SFAirDropReceive.AskRequest.files.getter() + 16);
  swift_bridgeObjectRelease();
  sub_10000A844(&qword_10096D760);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
  *(void *)(inited + 32) = 0x454C49464F5250;
  *(void *)(inited + 40) = 0xE700000000000000;
  *(void *)(inited + 48) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5._uint64_t countAndFlagsBits = 95;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6._uint64_t countAndFlagsBits = 0x454C49464F5250;
  v6._object = (void *)0xE700000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  if (v3 > 1)
  {
    v7._uint64_t countAndFlagsBits = 0x4C4152554C505FLL;
    v7._object = (void *)0xE700000000000000;
    String.append(_:)(v7);
  }
  swift_bridgeObjectRelease();
  if (a2)
  {
    v8._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
    v8._object = (void *)0xEC00000044455A49;
    String.append(_:)(v8);
  }
  v9._uint64_t countAndFlagsBits = 0x545845545FLL;
  v9._object = (void *)0xE500000000000000;
  String.append(_:)(v9);
  swift_setDeallocating();
  sub_10000A844((uint64_t *)&unk_100977CB0);
  swift_arrayDestroy();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = (id)SFLocalizedStringForKey();

  if (v11)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_10076E7A0;
    *(void *)(v12 + 56) = &type metadata for Int;
    *(void *)(v12 + 64) = &protocol witness table for Int;
    *(void *)(v12 + 32) = v3;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1006A577C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1006A57B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(v3 + 16);
  Swift::String v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *Swift::String v9 = v4;
  v9[1] = sub_10000A6F4;
  return sub_1006A4914(a1, a2, a3, v8);
}

uint64_t sub_1006A586C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006A58B4(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for URL();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v2[7] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferType();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_1006A5A38, v5, 0);
}

void sub_1006A5A38()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  SFAirDropReceive.AskRequest.type.getter();
  char v4 = SFAirDrop.TransferType.isLinks.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if ((v4 & 1) == 0)
  {
    uint64_t v24 = 0;
LABEL_28:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (void (*)(uint64_t))v0[1];
    v25(v24);
    return;
  }
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[3];
  uint64_t v7 = SFAirDropReceive.AskRequest.urlItems.getter();
  int64_t v8 = 0;
  uint64_t v26 = v7 + 56;
  uint64_t v9 = -1;
  uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
  if (-v10 < 64) {
    uint64_t v9 = ~(-1 << -(char)v10);
  }
  unint64_t v11 = v9 & *(void *)(v7 + 56);
  uint64_t v28 = v7;
  int64_t v27 = (unint64_t)(63 - v10) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v13 = v12 | (v8 << 6);
      goto LABEL_21;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v14 >= v27) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v27) {
        goto LABEL_26;
      }
      unint64_t v15 = *(void *)(v26 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v27) {
          goto LABEL_26;
        }
        unint64_t v15 = *(void *)(v26 + 8 * v8);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_21:
    uint64_t v17 = v0[7];
    uint64_t v18 = v0[4];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))(v17, *(void *)(v28 + 48) + *(void *)(v5 + 72) * v13, v18);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v17, 0, 1, v18);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v17, 1, v18) == 1)
    {
      swift_release();
      uint64_t v24 = 1;
      goto LABEL_27;
    }
    uint64_t v19 = v0[6];
    uint64_t v20 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 32))(v19, v0[7], v20);
    sub_1003ACB84(&off_1008D2738);
    uint64_t v22 = v21;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v20);
    id v23 = *(void **)(v6 + 16);
    *(void *)(v6 + 16) = v22;

    if (!*(void *)(v6 + 16))
    {
      swift_release();
      uint64_t v24 = 0;
LABEL_27:
      swift_arrayDestroy();
      goto LABEL_28;
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v27)
  {
LABEL_26:
    uint64_t v24 = 1;
    (*(void (**)(void, uint64_t, uint64_t, void))(v5 + 56))(v0[7], 1, 1, v0[4]);
    swift_release();
    goto LABEL_27;
  }
  unint64_t v15 = *(void *)(v26 + 8 * v16);
  if (v15)
  {
    int64_t v8 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v8 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v8 >= v27) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v8);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_32:
  __break(1u);
}

uint64_t type metadata accessor for SDAirDropContentHandleriTunesStoreLinks()
{
  return self;
}

uint64_t sub_1006A5DC4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandleriTunesStoreLinks();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1006A5DFC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_1006A58B4(a1);
}

uint64_t sub_1006A5E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_10097F1D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void **)(*(void *)v2 + 16);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v9 = type metadata accessor for SFAirDropReceive.ItemDestination();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  id v10 = v8;
  sub_10039FAA0(a1, v8, 1, a2);

  return sub_10000A7E8((uint64_t)v7, (uint64_t *)&unk_10097F1D0);
}

uint64_t sub_1006A5FAC(uint64_t a1, int a2)
{
  LODWORD(v2) = a2;
  uint64_t v3 = sub_10000A844((uint64_t *)&unk_10096AC10);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = &v63[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  int64_t v8 = &v63[-v7];
  uint64_t v9 = sub_10000A844(&qword_10096B258);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = &v63[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  int64_t v16 = &v63[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  uint64_t v18 = &v63[-v17];
  uint64_t v19 = SFAirDropReceive.AskRequest.senderDisplayName.getter();
  uint64_t v65 = v20;
  SFAirDropReceive.AskRequest.itemsDescriptionAdvanced.getter();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10000A7E8((uint64_t)v11, &qword_10096B258);
    uint64_t v21 = SFAirDropReceive.AskRequest.urlItems.getter();
    sub_1002E5BA0(v21, (uint64_t)v6);
    swift_bridgeObjectRelease();
    uint64_t v22 = type metadata accessor for URL();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v25 = 0;
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v23 + 48))(v6, 1, v22) != 1)
    {
      URL._bridgeToObjectiveC()(v24);
      uint64_t v25 = v26;
      (*(void (**)(unsigned char *, uint64_t))(v23 + 8))(v6, v22);
    }
    unint64_t v27 = SFiTunesStoreLinkType();

    if (v27 > 5)
    {
LABEL_15:
      uint64_t v66 = 0x545F4E5245444F4DLL;
      unint64_t v67 = 0xEF524546534E4152;
      swift_bridgeObjectRetain();
      v38._uint64_t countAndFlagsBits = 95;
      v38._object = (void *)0xE100000000000000;
      String.append(_:)(v38);
      v39._uint64_t countAndFlagsBits = 0xD000000000000011;
      v39._object = "ITUNES_STORE_LINK_RINGTONE";
      String.append(_:)(v39);
      swift_bridgeObjectRelease();
      if (v2)
      {
        v40._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
        v40._object = (void *)0xEC00000044455A49;
        String.append(_:)(v40);
      }
      goto LABEL_32;
    }
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 32))(v18, v11, v12);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 16))(v16, v18, v12);
    if ((*(unsigned int (**)(unsigned char *, uint64_t))(v13 + 88))(v16, v12) == enum case for SFAirDropReceive.AskRequest.AdvancedItemsDescription.itunesStoreLink(_:))
    {
      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v18, v12);
      (*(void (**)(unsigned char *, uint64_t))(v13 + 96))(v16, v12);
      unint64_t v27 = *((void *)v16 + 2);
      swift_bridgeObjectRelease();
    }
    else
    {
      int v64 = v2;
      uint64_t v2 = v19;
      uint64_t v31 = SFAirDropReceive.AskRequest.urlItems.getter();
      sub_1002E5BA0(v31, (uint64_t)v8);
      swift_bridgeObjectRelease();
      uint64_t v32 = type metadata accessor for URL();
      uint64_t v33 = *(void *)(v32 - 8);
      uint64_t v35 = 0;
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v33 + 48))(v8, 1, v32) != 1)
      {
        URL._bridgeToObjectiveC()(v34);
        uint64_t v35 = v36;
        (*(void (**)(unsigned char *, uint64_t))(v33 + 8))(v8, v32);
      }
      unint64_t v27 = SFiTunesStoreLinkType();

      uint64_t v37 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
      v37(v18, v12);
      v37(v16, v12);
      uint64_t v19 = v2;
      LOBYTE(v2) = v64;
      if (v27 > 5) {
        goto LABEL_15;
      }
    }
  }
  switch(v27)
  {
    case 0uLL:
      uint64_t v66 = 0x545F4E5245444F4DLL;
      unint64_t v67 = 0xEF524546534E4152;
      swift_bridgeObjectRetain();
      v28._uint64_t countAndFlagsBits = 95;
      v28._object = (void *)0xE100000000000000;
      String.append(_:)(v28);
      v29._uint64_t countAndFlagsBits = 0xD000000000000011;
      v29._object = "ITUNES_STORE_LINK_RINGTONE";
      String.append(_:)(v29);
      swift_bridgeObjectRelease();
      if (v2)
      {
        v30._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
        v30._object = (void *)0xEC00000044455A49;
        String.append(_:)(v30);
      }
      break;
    case 1uLL:
      uint64_t v66 = 0x545F4E5245444F4DLL;
      unint64_t v67 = 0xEF524546534E4152;
      swift_bridgeObjectRetain();
      v41._uint64_t countAndFlagsBits = 95;
      v41._object = (void *)0xE100000000000000;
      String.append(_:)(v41);
      v42._uint64_t countAndFlagsBits = 0xD000000000000017;
      v42._object = "APP_LINK_WITH_TITLE";
      String.append(_:)(v42);
      swift_bridgeObjectRelease();
      if (v2)
      {
        v43._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
        v43._object = (void *)0xEC00000044455A49;
        String.append(_:)(v43);
      }
      break;
    case 2uLL:
      uint64_t v66 = 0x545F4E5245444F4DLL;
      unint64_t v67 = 0xEF524546534E4152;
      swift_bridgeObjectRetain();
      v44._uint64_t countAndFlagsBits = 95;
      v44._object = (void *)0xE100000000000000;
      String.append(_:)(v44);
      v45._uint64_t countAndFlagsBits = 0xD000000000000017;
      v45._object = "ITUNES_STORE_LINK_MUSIC";
      String.append(_:)(v45);
      swift_bridgeObjectRelease();
      if (v2)
      {
        v46._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
        v46._object = (void *)0xEC00000044455A49;
        String.append(_:)(v46);
      }
      break;
    case 3uLL:
      uint64_t v66 = 0x545F4E5245444F4DLL;
      unint64_t v67 = 0xEF524546534E4152;
      swift_bridgeObjectRetain();
      v47._uint64_t countAndFlagsBits = 95;
      v47._object = (void *)0xE100000000000000;
      String.append(_:)(v47);
      v48._uint64_t countAndFlagsBits = 0xD000000000000019;
      v48._object = "ITUNES_STORE_LINK_MOVIE";
      String.append(_:)(v48);
      swift_bridgeObjectRelease();
      if (v2)
      {
        v49._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
        v49._object = (void *)0xEC00000044455A49;
        String.append(_:)(v49);
      }
      break;
    case 4uLL:
      uint64_t v66 = 0x545F4E5245444F4DLL;
      unint64_t v67 = 0xEF524546534E4152;
      swift_bridgeObjectRetain();
      v50._uint64_t countAndFlagsBits = 95;
      v50._object = (void *)0xE100000000000000;
      String.append(_:)(v50);
      v51._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v51._object = "ITUNES_STORE_LINK_TV_SHOW";
      String.append(_:)(v51);
      swift_bridgeObjectRelease();
      if (v2)
      {
        v52._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
        v52._object = (void *)0xEC00000044455A49;
        String.append(_:)(v52);
      }
      break;
    case 5uLL:
      uint64_t v66 = 0x545F4E5245444F4DLL;
      unint64_t v67 = 0xEF524546534E4152;
      swift_bridgeObjectRetain();
      v53._uint64_t countAndFlagsBits = 95;
      v53._object = (void *)0xE100000000000000;
      String.append(_:)(v53);
      v54._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
      v54._object = "ITUNES_STORE_LINK_AUDIOBOOK";
      String.append(_:)(v54);
      swift_bridgeObjectRelease();
      if (v2)
      {
        v55._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
        v55._object = (void *)0xEC00000044455A49;
        String.append(_:)(v55);
      }
      break;
    default:
      goto LABEL_15;
  }
LABEL_32:
  v56._uint64_t countAndFlagsBits = 0x545845545FLL;
  v56._object = (void *)0xE500000000000000;
  String.append(_:)(v56);
  sub_10000A844((uint64_t *)&unk_100977CB0);
  swift_arrayDestroy();
  NSString v57 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v58 = (id)SFLocalizedStringForKey();

  if (!v58)
  {
    __break(1u);
    JUMPOUT(0x1006A6A6CLL);
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10000A844((uint64_t *)&unk_10096EE60);
  uint64_t v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = xmmword_10076E7A0;
  *(void *)(v59 + 56) = &type metadata for String;
  *(void *)(v59 + 64) = sub_1002E695C();
  uint64_t v60 = v65;
  *(void *)(v59 + 32) = v19;
  *(void *)(v59 + 40) = v60;
  uint64_t v61 = static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v61;
}

unint64_t sub_1006A6A84()
{
  uint64_t v2 = v0;
  sub_10024D388((uint64_t)(v0 + 1), (uint64_t)v33, &qword_10096B540);
  sub_10024D388((uint64_t)v33, (uint64_t)v25, &qword_10096B540);
  sub_1004F6790((uint64_t)v33);
  _StringGuts.grow(_:)(60);
  v3._uint64_t countAndFlagsBits = 0xD000000000000039;
  v3._object = (void *)0x80000001007C6CC0;
  String.append(_:)(v3);
  _print_unlocked<A, B>(_:_:)();
  v4._uint64_t countAndFlagsBits = 125;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  uint64_t v5 = sub_10000A844(&qword_10096B540);
  Optional.tryUnwrap(_:file:line:)();
  sub_1006ADBA4((uint64_t)v33);
  unint64_t result = swift_bridgeObjectRelease();
  if (!v1)
  {
    uint64_t v7 = v27;
    uint64_t v34 = v26;
    sub_10024D388((uint64_t)(v0 + 4), (uint64_t)v32, &qword_10096B540);
    sub_10024D388((uint64_t)v32, (uint64_t)v25, &qword_10096B540);
    sub_1004F6790((uint64_t)v32);
    _StringGuts.grow(_:)(63);
    v8._uint64_t countAndFlagsBits = 0xD00000000000003CLL;
    v8._object = (void *)0x80000001007C6D60;
    String.append(_:)(v8);
    _print_unlocked<A, B>(_:_:)();
    v9._uint64_t countAndFlagsBits = 125;
    v9._object = (void *)0xE100000000000000;
    String.append(_:)(v9);
    Optional.tryUnwrap(_:file:line:)();
    sub_1006ADBA4((uint64_t)v32);
    swift_bridgeObjectRelease();
    uint64_t v23 = v27;
    uint64_t v24 = v26;
    sub_10000A844(&qword_100977F58);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1007802A0;
    id v11 = kSFOperationFileNameKey;
    sub_10000A844(&qword_10096B578);
    sub_10025B004();
    AnyHashable.init<A>(_:)();
    long long v31 = *v2;
    long long v12 = v31;
    *(void *)(inited + 96) = &type metadata for String;
    *(_OWORD *)(inited + 72) = v12;
    uint64_t v22 = v7;
    uint64_t v13 = (void *)kSFOperationFileSizeKey;
    sub_1004F6790((uint64_t)&v31);
    id v14 = v13;
    AnyHashable.init<A>(_:)();
    sub_10024D388((uint64_t)(v2 + 3), (uint64_t)v30, &qword_10097EA50);
    *(void *)(inited + 168) = sub_10000A844(&qword_10097EA50);
    sub_10024D388((uint64_t)v30, inited + 144, &qword_10097EA50);
    id v15 = kSFOperationFileTypeKey;
    AnyHashable.init<A>(_:)();
    *(void *)(inited + 240) = &type metadata for String;
    *(void *)(inited + 216) = v34;
    *(void *)(inited + 224) = v22;
    id v16 = kSFOperationtFileSubTypeKey;
    AnyHashable.init<A>(_:)();
    sub_10024D388((uint64_t)(v2 + 2), (uint64_t)v29, &qword_10096B540);
    *(void *)(inited + 312) = v5;
    sub_10024D388((uint64_t)v29, inited + 288, &qword_10096B540);
    uint64_t v17 = (void *)kSFOperationFileBomPathKey;
    sub_1004F6790((uint64_t)v29);
    id v18 = v17;
    AnyHashable.init<A>(_:)();
    *(void *)(inited + 384) = &type metadata for String;
    *(void *)(inited + 360) = v24;
    *(void *)(inited + 368) = v23;
    id v19 = kSFOperationFileIsDirectoryKey;
    AnyHashable.init<A>(_:)();
    char v20 = *((unsigned char *)v2 + 80);
    *(void *)(inited + 456) = &type metadata for Bool;
    *(unsigned char *)(inited + 432) = v20;
    id v21 = kSFOperationConvertMediaFormatsKey;
    AnyHashable.init<A>(_:)();
    sub_10024D388((uint64_t)v2 + 81, (uint64_t)&v28, &qword_1009713C0);
    *(void *)(inited + 528) = sub_10000A844(&qword_1009713C0);
    sub_10024D388((uint64_t)&v28, inited + 504, &qword_1009713C0);
    return sub_10024592C(inited);
  }
  return result;
}

uint64_t sub_1006A6FC0(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = type metadata accessor for SDAirDropMessage();
  v2[5] = swift_task_alloc();
  return _swift_task_switch(sub_1006A7054, 0, 0);
}

uint64_t sub_1006A7054()
{
  sub_1006AE4A4(v0[2], v0[5], (uint64_t (*)(void))_s12HelloRequestVMa);
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = sub_1006A97C4();
  v0[6] = (uint64_t)v1;
  uint64_t v2 = sub_1006A9F00();
  v0[7] = v2;
  v0[8] = v3;
  uint64_t v4 = v2;
  uint64_t v5 = v3;
  uint64_t v6 = v0[3];
  uint64_t v7 = swift_task_alloc();
  v0[9] = v7;
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v4;
  *(void *)(v7 + 32) = v5;
  *(void *)(v7 + 40) = v1;
  *(unsigned char *)(v7 + 48) = 1;
  Swift::String v8 = (void *)swift_task_alloc();
  v0[10] = (uint64_t)v8;
  *Swift::String v8 = v0;
  v8[1] = sub_1006A721C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v8, 0, 0, 0xD000000000000029, 0x80000001007BB130, sub_10039DB08, v7, (char *)&type metadata for () + 8);
}

uint64_t sub_1006A721C()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1006AE510;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1006AE50C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1006A7338(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = type metadata accessor for SDAirDropMessage();
  v2[5] = swift_task_alloc();
  return _swift_task_switch(sub_1006A73CC, 0, 0);
}

uint64_t sub_1006A73CC()
{
  sub_1006AE4A4(v0[2], v0[5], (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = sub_1006A97C4();
  v0[6] = (uint64_t)v1;
  uint64_t v2 = sub_1006A9F00();
  v0[7] = v2;
  v0[8] = v3;
  uint64_t v4 = v2;
  uint64_t v5 = v3;
  uint64_t v6 = v0[3];
  uint64_t v7 = swift_task_alloc();
  v0[9] = v7;
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v4;
  *(void *)(v7 + 32) = v5;
  *(void *)(v7 + 40) = v1;
  *(unsigned char *)(v7 + 48) = 1;
  Swift::String v8 = (void *)swift_task_alloc();
  v0[10] = (uint64_t)v8;
  *Swift::String v8 = v0;
  v8[1] = sub_1006A7594;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v8, 0, 0, 0xD000000000000029, 0x80000001007BB130, sub_10039DB08, v7, (char *)&type metadata for () + 8);
}

uint64_t sub_1006A7594()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1006A7744;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1006A76B0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1006A76B0()
{
  uint64_t v1 = v0[5];
  sub_100250CC4(v0[7], v0[8]);
  swift_unknownObjectRelease();
  sub_1006AABD8(v1, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1006A7744()
{
  uint64_t v1 = v0[5];
  sub_100250CC4(v0[7], v0[8]);
  swift_unknownObjectRelease();
  swift_task_dealloc();
  sub_1006AABD8(v1, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1006A77EC(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = type metadata accessor for SDAirDropMessage();
  v2[5] = swift_task_alloc();
  return _swift_task_switch(sub_1006A7880, 0, 0);
}

uint64_t sub_1006A7880()
{
  sub_1006AE4A4(v0[2], v0[5], _s14descr1008C9A51V15ExchangeRequestVMa);
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = sub_1006A97C4();
  v0[6] = (uint64_t)v1;
  uint64_t v2 = sub_1006A9F00();
  v0[7] = v2;
  v0[8] = v3;
  uint64_t v4 = v2;
  uint64_t v5 = v3;
  uint64_t v6 = v0[3];
  uint64_t v7 = swift_task_alloc();
  v0[9] = v7;
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v4;
  *(void *)(v7 + 32) = v5;
  *(void *)(v7 + 40) = v1;
  *(unsigned char *)(v7 + 48) = 1;
  Swift::String v8 = (void *)swift_task_alloc();
  v0[10] = (uint64_t)v8;
  *Swift::String v8 = v0;
  v8[1] = sub_1006A721C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v8, 0, 0, 0xD000000000000029, 0x80000001007BB130, sub_10039DB08, v7, (char *)&type metadata for () + 8);
}

uint64_t sub_1006A7A48(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = type metadata accessor for SDAirDropMessage();
  v2[5] = swift_task_alloc();
  return _swift_task_switch(sub_1006A7ADC, 0, 0);
}

uint64_t sub_1006A7ADC()
{
  sub_1006AE4A4(v0[2], v0[5], (uint64_t (*)(void))_s14descr1008C9841V12ErrorRequestVMa);
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = sub_1006A97C4();
  v0[6] = (uint64_t)v1;
  uint64_t v2 = sub_1006A9F00();
  v0[7] = v2;
  v0[8] = v3;
  uint64_t v4 = v2;
  uint64_t v5 = v3;
  uint64_t v6 = v0[3];
  uint64_t v7 = swift_task_alloc();
  v0[9] = v7;
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v4;
  *(void *)(v7 + 32) = v5;
  *(void *)(v7 + 40) = v1;
  *(unsigned char *)(v7 + 48) = 1;
  Swift::String v8 = (void *)swift_task_alloc();
  v0[10] = (uint64_t)v8;
  *Swift::String v8 = v0;
  v8[1] = sub_1006A721C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v8, 0, 0, 0xD000000000000029, 0x80000001007BB130, sub_10039DB08, v7, (char *)&type metadata for () + 8);
}

uint64_t sub_1006A7CA4(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
  return _swift_task_switch(sub_1006A7CC4, 0, 0);
}

uint64_t sub_1006A7CC4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1006A7DA0;
  uint64_t v2 = *(void *)(v0 + 48);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000015, 0x80000001007BB160, sub_10039DB0C, v2, &type metadata for SDNWHTTPResponse);
}

uint64_t sub_1006A7DA0()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1006A8258;
  }
  else {
    uint64_t v2 = sub_1006A7EB4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1006A7EB4()
{
  uint64_t v22 = v0;
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  unint64_t v2 = *(void *)(v0 + 32);
  if (v1 >= 3)
  {
    id v11 = (unsigned int *)&enum case for SFAirDropSend.Failure.badRequest(_:);
    if (v1 == 9) {
      id v11 = (unsigned int *)&enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    }
    if (v1 == 4) {
      long long v12 = (unsigned int *)&enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    }
    else {
      long long v12 = v11;
    }
    uint64_t v13 = type metadata accessor for SFAirDropSend.Failure();
    sub_1006AE45C(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v13 - 8) + 104))(v14, *v12, v13);
    swift_willThrow();
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 64);
    sub_10025ADCC(*(void *)(v0 + 24), *(void *)(v0 + 32));
    unint64_t v5 = sub_1006AAC38();
    sub_100250CC4(v3, v2);
    if (!v4)
    {
      if (qword_10096A168 != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      sub_10000B47C(v6, (uint64_t)qword_10097EA38);
      uint64_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v7, v8))
      {
        Swift::String v9 = (uint8_t *)swift_slowAlloc();
        uint64_t v18 = swift_slowAlloc();
        *(_DWORD *)Swift::String v9 = 136315138;
        uint64_t v19 = v18;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        uint64_t v20 = 0x6572204F4C4C4548;
        unint64_t v21 = 0xEF2065736E6F7073;
        *(_DWORD *)(v0 + 72) = v5;
        v10._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v10);
        swift_bridgeObjectRelease();
        *(void *)(v0 + 40) = sub_100254634(v20, v21, &v19);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "Received HELLO response {response: %s}", v9, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_100250CC4(v3, v2);
      }
      else
      {
        sub_100250CC4(v3, v2);
      }
      uint64_t v17 = *(uint64_t (**)(unint64_t))(v0 + 8);
      return v17(v5 & 0xFFFFFFFFFFLL);
    }
  }
  sub_100250CC4(v3, v2);
  id v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_1006A8258()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006A8270(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 152) = a1;
  *(void *)(v2 + 160) = a2;
  return _swift_task_switch(sub_1006A8290, 0, 0);
}

uint64_t sub_1006A8290()
{
  unsigned int v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v1;
  *unsigned int v1 = v0;
  v1[1] = sub_1006A836C;
  uint64_t v2 = *(void *)(v0 + 160);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 120, 0, 0, 0xD000000000000015, 0x80000001007BB160, sub_10039DB0C, v2, &type metadata for SDNWHTTPResponse);
}

uint64_t sub_1006A836C()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1006A8848;
  }
  else {
    uint64_t v2 = sub_1006A8480;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1006A8480()
{
  uint64_t v33 = v0;
  unsigned int v1 = *(unsigned __int8 *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  unint64_t v2 = *(void *)(v0 + 136);
  if (v1 >= 3)
  {
    id v16 = (unsigned int *)&enum case for SFAirDropSend.Failure.badRequest(_:);
    if (v1 == 9) {
      id v16 = (unsigned int *)&enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    }
    if (v1 == 4) {
      uint64_t v17 = (unsigned int *)&enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    }
    else {
      uint64_t v17 = v16;
    }
    uint64_t v18 = type metadata accessor for SFAirDropSend.Failure();
    sub_1006AE45C(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v18 - 8) + 104))(v19, *v17, v18);
    swift_willThrow();
    goto LABEL_13;
  }
  uint64_t v4 = *(void *)(v0 + 176);
  sub_10025ADCC(*(void *)(v0 + 128), *(void *)(v0 + 136));
  sub_1006AAE68();
  sub_100250CC4(v3, v2);
  if (v4)
  {
LABEL_13:
    sub_100250CC4(v3, v2);
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_14;
  }
  long long v5 = *(_OWORD *)&v32[16];
  long long v6 = *(_OWORD *)&v32[48];
  *(_OWORD *)(v0 + 80) = *(_OWORD *)&v32[32];
  *(_OWORD *)(v0 + 96) = v6;
  *(void *)(v0 + 112) = *(void *)&v32[64];
  long long v7 = v31;
  *(_OWORD *)(v0 + 16) = v30;
  *(_OWORD *)(v0 + 32) = v7;
  *(_OWORD *)(v0 + 48) = *(_OWORD *)v32;
  *(_OWORD *)(v0 + 64) = v5;
  long long v8 = v30;
  uint64_t v25 = *((void *)&v31 + 1);
  uint64_t v9 = v31;
  char v24 = v32[0];
  long long v28 = *(_OWORD *)&v32[24];
  long long v29 = *(_OWORD *)&v32[8];
  long long v26 = *(_OWORD *)&v32[56];
  long long v27 = *(_OWORD *)&v32[40];
  if (qword_10096A168 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000B47C(v10, (uint64_t)qword_10097EA38);
  sub_10039522C(v0 + 16);
  sub_10039522C(v0 + 16);
  id v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v23 = v31;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v14 = sub_1005D058C();
    *(void *)(v0 + 144) = sub_100254634(v14, v15, (uint64_t *)&v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1002FB0E0(v0 + 16);
    sub_1002FB0E0(v0 + 16);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Received ASK response {response: %s}", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v9 = v23;
    swift_slowDealloc();

    sub_100250CC4(v3, v2);
  }
  else
  {
    sub_100250CC4(v3, v2);
    sub_1002FB0E0(v0 + 16);
    sub_1002FB0E0(v0 + 16);
  }
  uint64_t v22 = *(void *)(v0 + 152);
  *(_OWORD *)uint64_t v22 = v8;
  *(void *)(v22 + 16) = v9;
  *(void *)(v22 + 24) = v25;
  *(unsigned char *)(v22 + 32) = v24;
  *(_OWORD *)(v22 + 40) = v29;
  *(_OWORD *)(v22 + 56) = v28;
  *(_OWORD *)(v22 + 72) = v27;
  *(_OWORD *)(v22 + 88) = v26;
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
LABEL_14:
  return v20();
}

uint64_t sub_1006A8848()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006A8860(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return _swift_task_switch(sub_1006A8880, 0, 0);
}

uint64_t sub_1006A8880()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1006A895C;
  uint64_t v2 = *(void *)(v0 + 40);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000015, 0x80000001007BB160, sub_10039DB0C, v2, &type metadata for SDNWHTTPResponse);
}

uint64_t sub_1006A895C()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1006AE514;
  }
  else {
    uint64_t v2 = sub_1006A8A70;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1006A8A70()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  unint64_t v3 = *(void *)(v0 + 32);
  if (v1 >= 3)
  {
    uint64_t v10 = (unsigned int *)&enum case for SFAirDropSend.Failure.badRequest(_:);
    if (v1 == 9) {
      uint64_t v10 = (unsigned int *)&enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    }
    if (v1 == 4) {
      id v11 = (unsigned int *)&enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    }
    else {
      id v11 = v10;
    }
    uint64_t v12 = type metadata accessor for SFAirDropSend.Failure();
    sub_1006AE45C(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v12 - 8) + 104))(v13, *v11, v12);
    swift_willThrow();
    sub_100250CC4(v2, v3);
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
  else
  {
    if (qword_10096A168 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_10097EA38);
    long long v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      long long v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Received UPLOAD response", v7, 2u);
      swift_slowDealloc();
    }

    sub_100250CC4(v2, v3);
    long long v8 = *(uint64_t (**)(void, unint64_t))(v0 + 8);
    return v8(0, 0xC000000000000000);
  }
}

uint64_t sub_1006A8CB8(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  _s14descr1008C9A51V16ExchangeResponseVMa(0);
  v2[8] = swift_task_alloc();
  return _swift_task_switch(sub_1006A8D48, 0, 0);
}

uint64_t sub_1006A8D48()
{
  unsigned int v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *unsigned int v1 = v0;
  v1[1] = sub_1006A8E24;
  uint64_t v2 = *(void *)(v0 + 56);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000015, 0x80000001007BB160, sub_10039DB0C, v2, &type metadata for SDNWHTTPResponse);
}

uint64_t sub_1006A8E24()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1006A92F0;
  }
  else {
    uint64_t v2 = sub_1006A8F38;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1006A8F38()
{
  uint64_t v22 = v0;
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  unint64_t v2 = *(void *)(v0 + 32);
  if (v1 >= 3)
  {
    uint64_t v15 = (unsigned int *)&enum case for SFAirDropSend.Failure.badRequest(_:);
    if (v1 == 9) {
      uint64_t v15 = (unsigned int *)&enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    }
    if (v1 == 4) {
      id v16 = (unsigned int *)&enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    }
    else {
      id v16 = v15;
    }
    uint64_t v17 = type metadata accessor for SFAirDropSend.Failure();
    sub_1006AE45C(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v17 - 8) + 104))(v18, *v16, v17);
    swift_willThrow();
    goto LABEL_13;
  }
  uint64_t v4 = *(void *)(v0 + 80);
  sub_10025ADCC(*(void *)(v0 + 24), *(void *)(v0 + 32));
  sub_1006AB2B0(v3, v2, (void (*)(void))_s14descr1008C9A51V16ExchangeResponseVMa, &qword_100979938, (void (*)(uint64_t))_s14descr1008C9A51V16ExchangeResponseVMa);
  sub_100250CC4(v3, v2);
  if (v4)
  {
LABEL_13:
    sub_100250CC4(v3, v2);
    swift_task_dealloc();
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_14;
  }
  if (qword_10096A168 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000B47C(v7, (uint64_t)qword_10097EA38);
  sub_1006AE4A4(v6, v5, _s14descr1008C9A51V16ExchangeResponseVMa);
  long long v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = *(void *)(v0 + 64);
  if (v10)
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    unint64_t v13 = sub_1005AAC00();
    *(void *)(v0 + 40) = sub_100254634(v13, v14, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1006AABD8(v11, _s14descr1008C9A51V16ExchangeResponseVMa);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Received EXCHANGE response {response: %s}", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_100250CC4(v3, v2);
  }
  else
  {
    sub_100250CC4(v3, v2);
    sub_1006AABD8(v11, _s14descr1008C9A51V16ExchangeResponseVMa);
  }
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
LABEL_14:
  return v19();
}

uint64_t sub_1006A92F0()
{
  swift_task_dealloc();
  unsigned int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006A9354(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return _swift_task_switch(sub_1006A9374, 0, 0);
}

uint64_t sub_1006A9374()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1006A9450;
  uint64_t v2 = *(void *)(v0 + 40);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000015, 0x80000001007BB160, sub_10039DB0C, v2, &type metadata for SDNWHTTPResponse);
}

uint64_t sub_1006A9450()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1006A97AC;
  }
  else {
    uint64_t v2 = sub_1006A9564;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1006A9564()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  unint64_t v3 = *(void *)(v0 + 32);
  if (v1 >= 3)
  {
    BOOL v10 = (unsigned int *)&enum case for SFAirDropSend.Failure.badRequest(_:);
    if (v1 == 9) {
      BOOL v10 = (unsigned int *)&enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    }
    if (v1 == 4) {
      uint64_t v11 = (unsigned int *)&enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    }
    else {
      uint64_t v11 = v10;
    }
    uint64_t v12 = type metadata accessor for SFAirDropSend.Failure();
    sub_1006AE45C(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v12 - 8) + 104))(v13, *v11, v12);
    swift_willThrow();
    sub_100250CC4(v2, v3);
    unint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
  else
  {
    if (qword_10096A168 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_10097EA38);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Received ERROR response", v7, 2u);
      swift_slowDealloc();
    }

    sub_100250CC4(v2, v3);
    long long v8 = *(uint64_t (**)(void, unint64_t))(v0 + 8);
    return v8(0, 0xC000000000000000);
  }
}

uint64_t sub_1006A97AC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

NSObject *sub_1006A97C4()
{
  uint64_t v1 = type metadata accessor for SDAirDropMessage();
  __chkstk_darwin(v1);
  unint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006AE4A4(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = (uint64_t (*)(void))_s12HelloRequestVMa;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      goto LABEL_14;
    case 2:
      os_log_type_t v6 = (uint64_t (*)(void))type metadata accessor for SDAirDropMessage;
      goto LABEL_8;
    case 3:
    case 5:
    case 10:
    case 11:
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for SDAirDropMessage;
      break;
    case 4:
      uint64_t v5 = (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa;
      break;
    case 6:
      uint64_t v7 = _s14descr1008C92C9V13UploadRequestVMa;
      goto LABEL_6;
    case 7:
      uint64_t v7 = type metadata accessor for SDAirDropMessage;
LABEL_6:
      uint64_t v5 = (uint64_t (*)(void))v7;
      break;
    case 8:
      os_log_type_t v6 = _s14descr1008C9A51V15ExchangeRequestVMa;
LABEL_8:
      uint64_t v5 = v6;
      break;
    case 9:
      uint64_t v5 = _s14descr1008C9A51V16ExchangeResponseVMa;
      break;
    case 12:
      uint64_t v5 = (uint64_t (*)(void))_s14descr1008C9841V12ErrorRequestVMa;
      break;
    case 13:
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for SDAirDropMessage;
      break;
    default:
      break;
  }
  sub_1006AABD8((uint64_t)v3, v5);
LABEL_14:
  uint64_t v8 = String.utf8CString.getter();
  swift_bridgeObjectRelease();
  os_log_type_t v9 = nw_content_context_create((const char *)(v8 + 32));
  swift_release();
  BOOL v10 = sub_1006AD29C();
  nw_content_context_set_metadata_for_protocol(v9, v10);
  swift_unknownObjectRelease();
  return v9;
}

uint64_t sub_1006A9B5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = 0x6F6C6C65482FLL;
  uint64_t v3 = type metadata accessor for SDAirDropMessage();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006AE4A4(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      return v2;
    case 2u:
      uint64_t v2 = 0x65766F637369442FLL;
      sub_100250CB0(*(void *)v5, *((void *)v5 + 1));
      return v2;
    case 3u:
      uint64_t v2 = 0x65766F637369442FLL;
      long long v7 = *((_OWORD *)v5 + 7);
      v20[6] = *((_OWORD *)v5 + 6);
      v20[7] = v7;
      v20[8] = *((_OWORD *)v5 + 8);
      long long v8 = *((_OWORD *)v5 + 3);
      void v20[2] = *((_OWORD *)v5 + 2);
      v20[3] = v8;
      long long v9 = *((_OWORD *)v5 + 5);
      v20[4] = *((_OWORD *)v5 + 4);
      v20[5] = v9;
      long long v10 = *((_OWORD *)v5 + 1);
      v20[0] = *(_OWORD *)v5;
      v20[1] = v10;
      sub_10039C76C((uint64_t *)v20);
      return v2;
    case 4u:
      uint64_t v2 = 1802715439;
      sub_1006AABD8((uint64_t)v5, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
      return v2;
    case 5u:
      uint64_t v2 = 1802715439;
      uint64_t v11 = *((void *)v5 + 11);
      unint64_t v12 = *((void *)v5 + 12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100250CB0(v11, v12);
      return v2;
    case 6u:
      uint64_t v2 = 0x64616F6C70552FLL;
      sub_1006AABD8((uint64_t)v5, (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
      return v2;
    case 7u:
      uint64_t v2 = 0x64616F6C70552FLL;
      sub_100250CC4(*(void *)v5, *((void *)v5 + 1));
      return v2;
    case 8u:
      uint64_t v2 = 0x676E61686378452FLL;
      os_log_type_t v6 = _s14descr1008C9A51V15ExchangeRequestVMa;
      goto LABEL_12;
    case 9u:
      uint64_t v2 = 0x676E61686378452FLL;
      os_log_type_t v6 = _s14descr1008C9A51V16ExchangeResponseVMa;
      goto LABEL_12;
    case 0xAu:
      uint64_t v2 = 0x7469746E6564492FLL;
      uint64_t v13 = *((void *)v5 + 2);
      unint64_t v14 = *((void *)v5 + 3);
      uint64_t v15 = *((void *)v5 + 4);
      unint64_t v16 = *((void *)v5 + 5);
      uint64_t v17 = *((void *)v5 + 6);
      unint64_t v18 = *((void *)v5 + 7);
      swift_bridgeObjectRelease();
      sub_100250CB0(v13, v14);
      sub_100250CC4(v15, v16);
      sub_100250CC4(v17, v18);
      swift_bridgeObjectRelease();
      return v2;
    case 0xBu:
      uint64_t v2 = 0x7469746E6564492FLL;
      sub_100250CC4(*(void *)v5, *((void *)v5 + 1));
      return v2;
    case 0xCu:
      uint64_t v2 = 0x726F7272452FLL;
      os_log_type_t v6 = (uint64_t (*)(void))_s14descr1008C9841V12ErrorRequestVMa;
      goto LABEL_12;
    case 0xDu:
      uint64_t v2 = 0x726F7272452FLL;
      sub_100250CC4(*(void *)v5, *((void *)v5 + 1));
      return v2;
    default:
      os_log_type_t v6 = (uint64_t (*)(void))_s12HelloRequestVMa;
LABEL_12:
      sub_1006AABD8((uint64_t)v5, v6);
      return v2;
  }
}

uint64_t sub_1006A9F00()
{
  uint64_t v1 = v0;
  *(void *)&long long v68 = _s14descr1008C9841V12ErrorRequestVMa();
  __chkstk_darwin(v68);
  *(void *)&long long v70 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = _s14descr1008C9A51V16ExchangeResponseVMa(0);
  __chkstk_darwin(v66);
  *(void *)&long long v69 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = _s14descr1008C9A51V15ExchangeRequestVMa(0);
  __chkstk_darwin(v64);
  unint64_t v67 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = _s14descr1008C92C9V13UploadRequestVMa();
  __chkstk_darwin(v5);
  uint64_t v65 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s14descr1008C9AB9V10AskRequestVMa();
  __chkstk_darwin(v7);
  long long v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s12HelloRequestVMa();
  __chkstk_darwin(v10);
  unint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SDAirDropMessage();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006AE4A4(v1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v19 = v15[4];
      LODWORD(v80) = *(_DWORD *)v15;
      BYTE4(v80) = v19;
      type metadata accessor for PropertyListEncoder();
      swift_allocObject();
      PropertyListEncoder.init()();
      dispatch thunk of PropertyListEncoder.outputFormat.setter();
      sub_10057A0E8();
      uint64_t v16 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
      swift_release();
      return v16;
    case 2u:
      unint64_t v21 = *((void *)v15 + 1);
      *(void *)&long long v80 = *(void *)v15;
      uint64_t v20 = v80;
      *((void *)&v80 + 1) = v21;
      type metadata accessor for PropertyListEncoder();
      swift_allocObject();
      PropertyListEncoder.init()();
      dispatch thunk of PropertyListEncoder.outputFormat.setter();
      sub_10057A094();
      uint64_t v16 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
      swift_release();
      sub_100250CB0(v20, v21);
      return v16;
    case 3u:
      long long v22 = *((_OWORD *)v15 + 5);
      long long v23 = *((_OWORD *)v15 + 7);
      long long v85 = *((_OWORD *)v15 + 6);
      long long v86 = v23;
      long long v24 = *((_OWORD *)v15 + 7);
      long long v87 = *((_OWORD *)v15 + 8);
      long long v25 = *((_OWORD *)v15 + 1);
      long long v26 = *((_OWORD *)v15 + 3);
      long long v82 = *((_OWORD *)v15 + 2);
      v83[0] = v26;
      long long v27 = *((_OWORD *)v15 + 3);
      long long v28 = *((_OWORD *)v15 + 5);
      v83[1] = *((_OWORD *)v15 + 4);
      long long v84 = v28;
      long long v29 = *((_OWORD *)v15 + 1);
      long long v80 = *(_OWORD *)v15;
      long long v81 = v29;
      long long v77 = v85;
      long long v78 = v24;
      long long v79 = *((_OWORD *)v15 + 8);
      long long v73 = v82;
      long long v74 = v27;
      long long v75 = v83[1];
      long long v76 = v22;
      long long v71 = v80;
      long long v72 = v25;
      type metadata accessor for PropertyListEncoder();
      swift_allocObject();
      PropertyListEncoder.init()();
      dispatch thunk of PropertyListEncoder.outputFormat.setter();
      sub_10057A040();
      uint64_t v16 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
      swift_release();
      sub_10039C76C((uint64_t *)&v80);
      return v16;
    case 4u:
      sub_1006AAB70((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
      type metadata accessor for PropertyListEncoder();
      swift_allocObject();
      uint64_t v16 = PropertyListEncoder.init()();
      dispatch thunk of PropertyListEncoder.outputFormat.setter();
      sub_1006AE45C(&qword_100979A70, (void (*)(uint64_t))_s14descr1008C9AB9V10AskRequestVMa);
      uint64_t v30 = v88;
      uint64_t v31 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
      if (v30)
      {
        swift_release();
        uint64_t v32 = _s14descr1008C9AB9V10AskRequestVMa;
        goto LABEL_23;
      }
      uint64_t v16 = v31;
      swift_release();
      unint64_t v62 = _s14descr1008C9AB9V10AskRequestVMa;
      goto LABEL_29;
    case 5u:
      uint64_t v33 = *((void *)v15 + 1);
      uint64_t v34 = *((void *)v15 + 2);
      uint64_t v35 = *((void *)v15 + 3);
      char v36 = v15[32];
      uint64_t v37 = *((void *)v15 + 5);
      uint64_t v39 = *((void *)v15 + 10);
      uint64_t v38 = *((void *)v15 + 11);
      unint64_t v40 = *((void *)v15 + 12);
      *(void *)&long long v80 = *(void *)v15;
      *((void *)&v80 + 1) = v33;
      *(void *)&long long v81 = v34;
      *((void *)&v81 + 1) = v35;
      LOBYTE(v82) = v36;
      *((void *)&v82 + 1) = v37;
      long long v41 = *((_OWORD *)v15 + 4);
      long long v69 = *((_OWORD *)v15 + 3);
      long long v70 = v41;
      v83[0] = v69;
      v83[1] = v41;
      *(void *)&long long v84 = v39;
      *((void *)&v84 + 1) = v38;
      *(void *)&long long v85 = v40;
      type metadata accessor for PropertyListEncoder();
      swift_allocObject();
      uint64_t v16 = PropertyListEncoder.init()();
      dispatch thunk of PropertyListEncoder.outputFormat.setter();
      sub_100579FEC();
      uint64_t v42 = v88;
      uint64_t v43 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
      uint64_t v88 = v42;
      if (!v42) {
        uint64_t v16 = v43;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100250CB0(v38, v40);
      return v16;
    case 6u:
      long long v9 = v65;
      sub_1006AAB70((uint64_t)v15, (uint64_t)v65, (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
      type metadata accessor for PropertyListEncoder();
      swift_allocObject();
      uint64_t v16 = PropertyListEncoder.init()();
      dispatch thunk of PropertyListEncoder.outputFormat.setter();
      sub_1006AE45C(&qword_100979A60, (void (*)(uint64_t))_s14descr1008C92C9V13UploadRequestVMa);
      uint64_t v44 = v88;
      uint64_t v45 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
      if (v44)
      {
        swift_release();
        uint64_t v32 = _s14descr1008C92C9V13UploadRequestVMa;
        goto LABEL_23;
      }
      uint64_t v16 = v45;
      swift_release();
      unint64_t v62 = _s14descr1008C92C9V13UploadRequestVMa;
      goto LABEL_29;
    case 7u:
    case 0xBu:
    case 0xDu:
      sub_100250CC4(*(void *)v15, *((void *)v15 + 1));
      return 0;
    case 8u:
      long long v9 = v67;
      sub_1006AAB70((uint64_t)v15, (uint64_t)v67, _s14descr1008C9A51V15ExchangeRequestVMa);
      type metadata accessor for PropertyListEncoder();
      swift_allocObject();
      uint64_t v16 = PropertyListEncoder.init()();
      dispatch thunk of PropertyListEncoder.outputFormat.setter();
      sub_1006AE45C(&qword_100979A58, (void (*)(uint64_t))_s14descr1008C9A51V15ExchangeRequestVMa);
      uint64_t v46 = v88;
      uint64_t v47 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
      if (v46)
      {
        swift_release();
        uint64_t v32 = (uint64_t (*)())_s14descr1008C9A51V15ExchangeRequestVMa;
        goto LABEL_23;
      }
      uint64_t v16 = v47;
      swift_release();
      unint64_t v62 = (uint64_t (*)())_s14descr1008C9A51V15ExchangeRequestVMa;
      goto LABEL_29;
    case 9u:
      long long v9 = (char *)v69;
      sub_1006AAB70((uint64_t)v15, v69, _s14descr1008C9A51V16ExchangeResponseVMa);
      type metadata accessor for PropertyListEncoder();
      swift_allocObject();
      uint64_t v16 = PropertyListEncoder.init()();
      dispatch thunk of PropertyListEncoder.outputFormat.setter();
      sub_1006AE45C(&qword_100979A50, (void (*)(uint64_t))_s14descr1008C9A51V16ExchangeResponseVMa);
      uint64_t v48 = v88;
      uint64_t v49 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
      if (v48)
      {
        swift_release();
        uint64_t v32 = (uint64_t (*)())_s14descr1008C9A51V16ExchangeResponseVMa;
        goto LABEL_23;
      }
      uint64_t v16 = v49;
      swift_release();
      unint64_t v62 = (uint64_t (*)())_s14descr1008C9A51V16ExchangeResponseVMa;
      goto LABEL_29;
    case 0xAu:
      uint64_t v50 = *((void *)v15 + 1);
      uint64_t v51 = *((void *)v15 + 2);
      unint64_t v52 = *((void *)v15 + 3);
      uint64_t v53 = *((void *)v15 + 4);
      unint64_t v54 = *((void *)v15 + 5);
      uint64_t v55 = *((void *)v15 + 6);
      uint64_t v57 = *((void *)v15 + 9);
      uint64_t v56 = *((void *)v15 + 10);
      *(void *)&long long v80 = *(void *)v15;
      *((void *)&v80 + 1) = v50;
      *(void *)&long long v81 = v51;
      *((void *)&v81 + 1) = v52;
      *(void *)&long long v82 = v53;
      *((void *)&v82 + 1) = v54;
      *(void *)&long long v69 = v55;
      *(void *)&v83[0] = v55;
      long long v68 = *(_OWORD *)(v15 + 56);
      *(_OWORD *)((char *)v83 + 8) = v68;
      *(void *)&long long v70 = v57;
      *((void *)&v83[1] + 1) = v57;
      *(void *)&long long v84 = v56;
      type metadata accessor for PropertyListEncoder();
      swift_allocObject();
      uint64_t v16 = PropertyListEncoder.init()();
      dispatch thunk of PropertyListEncoder.outputFormat.setter();
      sub_100579F98();
      uint64_t v58 = v88;
      uint64_t v59 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
      uint64_t v88 = v58;
      if (!v58) {
        uint64_t v16 = v59;
      }
      swift_release();
      swift_bridgeObjectRelease();
      sub_100250CB0(v51, v52);
      sub_100250CC4(v53, v54);
      sub_100250CC4(v69, v68);
      swift_bridgeObjectRelease();
      return v16;
    case 0xCu:
      long long v9 = (char *)v70;
      sub_1006AAB70((uint64_t)v15, v70, (uint64_t (*)(void))_s14descr1008C9841V12ErrorRequestVMa);
      type metadata accessor for PropertyListEncoder();
      swift_allocObject();
      uint64_t v16 = PropertyListEncoder.init()();
      dispatch thunk of PropertyListEncoder.outputFormat.setter();
      sub_1006AE45C(&qword_100979A40, (void (*)(uint64_t))_s14descr1008C9841V12ErrorRequestVMa);
      uint64_t v60 = v88;
      uint64_t v61 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
      if (v60)
      {
        swift_release();
        uint64_t v32 = _s14descr1008C9841V12ErrorRequestVMa;
LABEL_23:
        uint64_t v17 = v32;
        uint64_t v18 = (uint64_t)v9;
      }
      else
      {
        uint64_t v16 = v61;
        swift_release();
        unint64_t v62 = _s14descr1008C9841V12ErrorRequestVMa;
LABEL_29:
        uint64_t v17 = v62;
        uint64_t v18 = (uint64_t)v9;
      }
LABEL_30:
      sub_1006AABD8(v18, (uint64_t (*)(void))v17);
      return v16;
    default:
      sub_1006AAB70((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))_s12HelloRequestVMa);
      type metadata accessor for PropertyListEncoder();
      swift_allocObject();
      PropertyListEncoder.init()();
      dispatch thunk of PropertyListEncoder.outputFormat.setter();
      sub_1006AE45C(&qword_100979A90, (void (*)(uint64_t))_s12HelloRequestVMa);
      uint64_t v16 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
      swift_release();
      uint64_t v17 = _s12HelloRequestVMa;
      uint64_t v18 = (uint64_t)v12;
      goto LABEL_30;
  }
}

uint64_t sub_1006AAB70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1006AABD8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1006AAC38()
{
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  sub_100579EF0();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (v0)
  {
    swift_release();
    if (qword_10096A168 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_10000B47C(v1, (uint64_t)qword_10097EA38);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 138412290;
      swift_errorRetain();
      uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v5 = v7;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error decoding SFAirDropMessage %@", v4, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    return swift_willThrow();
  }
  else
  {
    swift_release();
    return v8 | ((unint64_t)v9 << 32);
  }
}

uint64_t sub_1006AAE68()
{
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  sub_100579CA4();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (!v0) {
    return swift_release();
  }
  swift_release();
  if (qword_10096A168 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097EA38);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error decoding SFAirDropMessage %@", v4, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return swift_willThrow();
}

uint64_t sub_1006AB08C()
{
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  sub_100579E48();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (!v0) {
    return swift_release();
  }
  swift_release();
  if (qword_10096A168 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097EA38);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error decoding SFAirDropMessage %@", v4, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return swift_willThrow();
}

uint64_t sub_1006AB2B0(uint64_t a1, uint64_t a2, void (*a3)(void), unint64_t *a4, void (*a5)(uint64_t))
{
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  a3(0);
  sub_1006AE45C(a4, a5);
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (!v5) {
    return swift_release();
  }
  swift_release();
  if (qword_10096A168 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000B47C(v9, (uint64_t)qword_10097EA38);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v10, v11))
  {
    unint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v12 = 138412290;
    swift_errorRetain();
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v13 = v15;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error decoding SFAirDropMessage %@", v12, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return swift_willThrow();
}

uint64_t sub_1006AB4FC()
{
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  sub_100579AAC();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (!v0) {
    return swift_release();
  }
  swift_release();
  if (qword_10096A168 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097EA38);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error decoding SFAirDropMessage %@", v4, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return swift_willThrow();
}

uint64_t sub_1006AB720()
{
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  sub_100579DA0();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (!v0) {
    return swift_release();
  }
  swift_release();
  if (qword_10096A168 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097EA38);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error decoding SFAirDropMessage %@", v4, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return swift_willThrow();
}

uint64_t sub_1006AB944()
{
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  sub_1006AE3B4();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (!v0) {
    return swift_release();
  }
  swift_release();
  if (qword_10096A168 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097EA38);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error decoding SFAirDropMessage %@", v4, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return swift_willThrow();
}

uint64_t sub_1006ABB68()
{
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  sub_1006AE408();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (!v0) {
    return swift_release();
  }
  swift_release();
  if (qword_10096A168 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097EA38);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error decoding SFAirDropMessage %@", v4, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  return swift_willThrow();
}

uint64_t sub_1006ABD8C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_1006ABDAC, 0, 0);
}

uint64_t sub_1006ABDAC()
{
  sub_10026BB6C(*(void **)(v0 + 16), *(void *)(*(void *)(v0 + 16) + 24));
  uint64_t v1 = 0;
  uint64_t v2 = sub_1006AD204();
  *(void *)(v0 + 32) = v2;
  *(void *)(v0 + 40) = v3;
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  switch(v3 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(v2), v2))
      {
        __break(1u);
LABEL_10:
        __break(1u);
        JUMPOUT(0x1006ABF20);
      }
      uint64_t v1 = HIDWORD(v2) - (int)v2;
LABEL_6:
      unsigned int v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 48) = v8;
      *unsigned int v8 = v0;
      v8[1] = sub_1006ABF30;
      return sub_10066274C(v5, v4, v1);
    case 2uLL:
      uint64_t v7 = *(void *)(v2 + 16);
      uint64_t v6 = *(void *)(v2 + 24);
      uint64_t v1 = v6 - v7;
      if (!__OFSUB__(v6, v7)) {
        goto LABEL_6;
      }
      goto LABEL_10;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v1 = BYTE6(v3);
      goto LABEL_6;
  }
}

uint64_t sub_1006ABF30()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1006AC0A8;
  }
  else {
    uint64_t v2 = sub_1006AC044;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1006AC044()
{
  sub_100250CC4(v0[4], v0[5]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1006AC0A8()
{
  sub_100250CC4(v0[4], v0[5]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1006AC10C@<X0>(uint8_t *a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, uint64_t a5@<X5>, unint64_t a6@<X6>, _OWORD *a7@<X8>)
{
  int v117 = a4;
  uint64_t v118 = a3;
  uint64_t v121 = a7;
  uint64_t v11 = _s14descr1008C9841V12ErrorRequestVMa();
  __chkstk_darwin(v11 - 8);
  uint64_t v110 = (char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = _s14descr1008C9A51V15ExchangeRequestVMa(0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = _s14descr1008C92C9V13UploadRequestVMa();
  __chkstk_darwin(v115);
  uint64_t v116 = (uint64_t)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_10000A844(&qword_10097EA58);
  uint64_t v17 = __chkstk_darwin(v119);
  NSString v114 = (uint64_t *)((char *)&v104 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __chkstk_darwin(v17);
  id v113 = (uint64_t *)((char *)&v104 - v20);
  uint64_t v21 = __chkstk_darwin(v19);
  unint64_t v112 = (uint64_t *)((char *)&v104 - v22);
  uint64_t v23 = __chkstk_darwin(v21);
  unint64_t v111 = (_OWORD *)((char *)&v104 - v24);
  __chkstk_darwin(v23);
  uint64_t v120 = (uint64_t)&v104 - v25;
  uint64_t v26 = _s14descr1008C9AB9V10AskRequestVMa();
  __chkstk_darwin(v26 - 8);
  long long v28 = (char *)&v104 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = _s12HelloRequestVMa();
  __chkstk_darwin(v29 - 8);
  uint64_t v31 = (char *)&v104 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == (uint8_t *)0x65766F637369442FLL && a2 == 0xE900000000000072
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t v32 = v128;
    uint64_t result = sub_1006AB08C();
    if (!v32)
    {
      _OWORD *v121 = v122;
      type metadata accessor for SDAirDropMessage();
      return swift_storeEnumTagMultiPayload();
    }
    return result;
  }
  if ((a1 != (uint8_t *)0x6F6C6C65482FLL || a2 != 0xE600000000000000)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    if (a1 == (uint8_t *)1802715439 && a2 == 0xE400000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t v35 = v128;
      uint64_t result = sub_1006AB2B0(a5, a6, (void (*)(void))_s14descr1008C9AB9V10AskRequestVMa, &qword_100979980, (void (*)(uint64_t))_s14descr1008C9AB9V10AskRequestVMa);
      if (!v35)
      {
        sub_1006AAB70((uint64_t)v28, (uint64_t)v121, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
        type metadata accessor for SDAirDropMessage();
        return swift_storeEnumTagMultiPayload();
      }
      return result;
    }
    if (a1 == (uint8_t *)0x64616F6C70552FLL && a2 == 0xE700000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      if (qword_10096A168 != -1) {
        swift_once();
      }
      uint64_t v36 = type metadata accessor for Logger();
      sub_10000B47C(v36, (uint64_t)qword_10097EA38);
      sub_10025ADCC(a5, a6);
      a2 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(a2, v37))
      {
        sub_100250CC4(a5, a6);
LABEL_36:

        uint64_t v45 = (int *)v119;
        uint64_t v44 = v120;
        uint64_t v46 = v120 + *(int *)(v119 + 64);
        uint64_t v47 = v128;
        uint64_t result = sub_1006ACEA0(v46, &v122);
        if (!v47)
        {
          uint64_t v106 = a5;
          unint64_t v107 = a6;
          long long v48 = v122;
          uint64_t v118 = v122;
          long long v49 = v123;
          uint64_t v128 = *((void *)&v123 + 1);
          uint64_t v108 = v123;
          long long v50 = v124;
          uint64_t v109 = *((void *)&v124 + 1);
          uint64_t v51 = v125;
          uint64_t v52 = v45[20];
          uint64_t v53 = (void *)(v44 + v52);
          uint64_t v54 = v45[24];
          uint64_t v55 = (void *)(v44 + v54);
          *(_OWORD *)uint64_t v44 = v122;
          *(void *)(v44 + 16) = v49;
          void *v53 = *((void *)&v49 + 1);
          v53[1] = v50;
          uint64_t v110 = (char *)v50;
          void *v55 = *((void *)&v50 + 1);
          v55[1] = v51;
          uint64_t v56 = v111;
          uint64_t v105 = (uint64_t)v111 + v45[16];
          uint64_t v57 = v105;
          uint64_t v58 = (void *)((char *)v111 + v52);
          uint64_t v59 = (void *)((char *)v111 + v54);
          _OWORD *v111 = v48;
          uint64_t v119 = *((void *)&v48 + 1);
          *((void *)v56 + 2) = v49;
          sub_100579838(v46, v57);
          uint64_t v60 = v128;
          void *v58 = v128;
          v58[1] = v50;
          uint64_t v61 = v109;
          *uint64_t v59 = v109;
          v59[1] = v51;
          unint64_t v62 = v112;
          unint64_t v111 = (_OWORD *)((char *)v112 + v45[16]);
          id v63 = v111;
          uint64_t v64 = (void *)((char *)v112 + v45[20]);
          uint64_t v65 = (void *)((char *)v112 + v45[24]);
          void *v112 = v118;
          v62[1] = *((void *)&v48 + 1);
          uint64_t v66 = v108;
          v62[2] = v108;
          sub_100579838(v46, (uint64_t)v63);
          *uint64_t v64 = v60;
          unint64_t v67 = v110;
          v64[1] = v110;
          void *v65 = v61;
          v65[1] = v51;
          uint64_t v104 = v51;
          long long v68 = v113;
          unint64_t v112 = (void *)((char *)v113 + v45[16]);
          long long v69 = v112;
          long long v70 = (void *)((char *)v113 + v45[20]);
          long long v71 = (void *)((char *)v113 + v45[24]);
          uint64_t v73 = v118;
          uint64_t v72 = v119;
          void *v113 = v118;
          v68[1] = v72;
          v68[2] = v66;
          sub_100579838(v46, (uint64_t)v69);
          *long long v70 = v128;
          v70[1] = v67;
          long long v74 = v67;
          uint64_t v75 = v109;
          void *v71 = v109;
          v71[1] = v51;
          long long v76 = v114;
          id v113 = (void *)((char *)v114 + v45[16]);
          long long v77 = v113;
          long long v78 = (void *)((char *)v114 + v45[20]);
          long long v79 = (void *)((char *)v114 + v45[24]);
          uint64_t v80 = v73;
          void *v114 = v73;
          uint64_t v81 = v119;
          uint64_t v82 = v108;
          v76[1] = v119;
          v76[2] = v82;
          sub_100579838(v46, (uint64_t)v77);
          uint64_t v83 = v128;
          *long long v78 = v128;
          v78[1] = v74;
          uint64_t v84 = v104;
          *long long v79 = v75;
          v79[1] = v84;
          uint64_t v85 = v116;
          sub_10024D388(v105, v116, (uint64_t *)&unk_10096DFB0);
          long long v86 = (int *)v115;
          *(void *)(v85 + *(int *)(v115 + 20)) = v80;
          long long v87 = (uint64_t *)(v85 + v86[6]);
          *long long v87 = v81;
          v87[1] = v82;
          uint64_t v88 = (uint64_t *)(v85 + v86[7]);
          uint64_t v89 = v106;
          unint64_t v90 = v107;
          *uint64_t v88 = v106;
          v88[1] = v90;
          *(unsigned char *)(v85 + v86[8]) = v117 & 1;
          unint64_t v91 = (void *)(v85 + v86[9]);
          unint64_t v92 = v110;
          *unint64_t v91 = v83;
          v91[1] = v92;
          uint64_t v93 = (void *)(v85 + v86[10]);
          *uint64_t v93 = v75;
          v93[1] = v84;
          sub_10025ADCC(v89, v90);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10000A7E8((uint64_t)v113, (uint64_t *)&unk_10096DFB0);
          sub_10000A7E8((uint64_t)v112, (uint64_t *)&unk_10096DFB0);
          sub_10000A7E8((uint64_t)v111, (uint64_t *)&unk_10096DFB0);
          sub_1006AAB70(v85, (uint64_t)v121, (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
          type metadata accessor for SDAirDropMessage();
          swift_storeEnumTagMultiPayload();
          return sub_10000A7E8(v120, &qword_10097EA58);
        }
        return result;
      }
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 134217984;
      a1 = v38;
      uint64_t v39 = 0;
      switch(a6 >> 62)
      {
        case 1uLL:
          LODWORD(v39) = HIDWORD(a5) - a5;
          if (!__OFSUB__(HIDWORD(a5), a5))
          {
            uint64_t v39 = (int)v39;
LABEL_35:
            *(void *)&long long v122 = v39;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            sub_100250CC4(a5, a6);
            _os_log_impl((void *)&_mh_execute_header, a2, v37, "Receiving first upload request %ld", a1, 0xCu);
            swift_slowDealloc();
            goto LABEL_36;
          }
          __break(1u);
LABEL_49:
          __break(1u);
          break;
        case 2uLL:
          uint64_t v42 = *(void *)(a5 + 16);
          uint64_t v41 = *(void *)(a5 + 24);
          BOOL v43 = __OFSUB__(v41, v42);
          uint64_t v39 = v41 - v42;
          if (!v43) {
            goto LABEL_35;
          }
          goto LABEL_49;
        case 3uLL:
          goto LABEL_35;
        default:
          uint64_t v39 = BYTE6(a6);
          goto LABEL_35;
      }
    }
    else
    {
      if (a1 == (uint8_t *)0x676E61686378452FLL && a2 == 0xE900000000000065
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        uint64_t v40 = v128;
        uint64_t result = sub_1006AB2B0(a5, a6, (void (*)(void))_s14descr1008C9A51V15ExchangeRequestVMa, &qword_100979948, (void (*)(uint64_t))_s14descr1008C9A51V15ExchangeRequestVMa);
        if (!v40)
        {
          sub_1006AAB70((uint64_t)v15, (uint64_t)v121, _s14descr1008C9A51V15ExchangeRequestVMa);
          type metadata accessor for SDAirDropMessage();
          return swift_storeEnumTagMultiPayload();
        }
        return result;
      }
      if (a1 == (uint8_t *)0x7469746E6564492FLL && a2 == 0xEE00657261685379
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        uint64_t v94 = v128;
        uint64_t result = sub_1006AB4FC();
        if (!v94)
        {
          long long v96 = v125;
          long long v95 = v126;
          uint64_t v97 = v127;
          long long v98 = v123;
          long long v99 = v124;
          Swift::String v100 = v121;
          _OWORD *v121 = v122;
          v100[1] = v98;
          v100[2] = v99;
          v100[3] = v96;
          v100[4] = v95;
          *((void *)v100 + 10) = v97;
          type metadata accessor for SDAirDropMessage();
          return swift_storeEnumTagMultiPayload();
        }
        return result;
      }
      if (a1 == (uint8_t *)0x726F7272452FLL && a2 == 0xE600000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        uint64_t v101 = (uint64_t)v110;
        uint64_t v102 = v128;
        uint64_t result = sub_1006AB2B0(a5, a6, (void (*)(void))_s14descr1008C9841V12ErrorRequestVMa, &qword_100979910, (void (*)(uint64_t))_s14descr1008C9841V12ErrorRequestVMa);
        if (!v102)
        {
          sub_1006AAB70(v101, (uint64_t)v121, (uint64_t (*)(void))_s14descr1008C9841V12ErrorRequestVMa);
          type metadata accessor for SDAirDropMessage();
          return swift_storeEnumTagMultiPayload();
        }
        return result;
      }
    }
    *(void *)&long long v122 = 0;
    *((void *)&v122 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease();
    *(void *)&long long v122 = 0x656C646E61686E55;
    *((void *)&v122 + 1) = 0xEF20687461502064;
    v103._uint64_t countAndFlagsBits = (uint64_t)a1;
    v103._object = a2;
    String.append(_:)(v103);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    JUMPOUT(0x1006ACDC8);
  }
  uint64_t v34 = v128;
  uint64_t result = sub_1006AB2B0(a5, a6, (void (*)(void))_s12HelloRequestVMa, &qword_1009799C0, (void (*)(uint64_t))_s12HelloRequestVMa);
  if (!v34)
  {
    sub_1006AAB70((uint64_t)v31, (uint64_t)v121, (uint64_t (*)(void))_s12HelloRequestVMa);
    type metadata accessor for SDAirDropMessage();
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

uint64_t sub_1006ACDD8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097EA38);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097EA38);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1006ACEA0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_10096DFB0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = 0;
  char v31 = 1;
  uint64_t v7 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  unsigned int v8 = (void *)swift_allocObject();
  v8[2] = &v30;
  v8[3] = &v28;
  v8[4] = v6;
  v8[5] = &v26;
  v8[6] = &v24;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1006AE2C4;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_1006AE308;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1006AE278;
  aBlock[3] = &unk_1008E53B8;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  nw_http_metadata_enumerate_headers();
  _Block_release(v10);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else if ((v31 & 1) != 0 || (uint64_t v13 = v29) == 0)
  {
    uint64_t v19 = type metadata accessor for SFAirDropReceive.Failure();
    sub_1006AE45C(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, enum case for SFAirDropReceive.Failure.badRequest(_:), v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10000A7E8((uint64_t)v6, (uint64_t *)&unk_10096DFB0);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = v30;
    uint64_t v22 = v28;
    sub_100579838((uint64_t)v6, a1);
    uint64_t v14 = v26;
    uint64_t v15 = v27;
    uint64_t v16 = v24;
    uint64_t v17 = v25;
    swift_bridgeObjectRetain();
    sub_10000A7E8((uint64_t)v6, (uint64_t *)&unk_10096DFB0);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v18 = v22;
    *a2 = v32;
    a2[1] = v18;
    a2[2] = v13;
    a2[3] = v14;
    a2[4] = v15;
    a2[5] = v16;
    a2[6] = v17;
  }
  return result;
}

uint64_t sub_1006AD204()
{
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  dispatch thunk of PropertyListEncoder.outputFormat.setter();
  uint64_t v0 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  swift_release();
  return v0;
}

uint64_t sub_1006AD29C()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_10096DFB0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v8 = (int *)_s14descr1008C92C9V13UploadRequestVMa();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SDAirDropMessage();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006AE4A4(v0, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      goto LABEL_8;
    case 2u:
      sub_100250CB0(*(void *)v13, *((void *)v13 + 1));
      sub_1006A9B5C();
      String.utf8CString.getter();
      swift_bridgeObjectRelease();
      nw_http_request_create();
      swift_release();
      uint64_t metadata_for_request = nw_http_create_metadata_for_request();
      nw_http_fields_append();
      goto LABEL_11;
    case 3u:
      long long v16 = *((_OWORD *)v13 + 7);
      v29[6] = *((_OWORD *)v13 + 6);
      v29[7] = v16;
      v29[8] = *((_OWORD *)v13 + 8);
      long long v17 = *((_OWORD *)v13 + 3);
      void v29[2] = *((_OWORD *)v13 + 2);
      v29[3] = v17;
      long long v18 = *((_OWORD *)v13 + 5);
      v29[4] = *((_OWORD *)v13 + 4);
      v29[5] = v18;
      long long v19 = *((_OWORD *)v13 + 1);
      v29[0] = *(_OWORD *)v13;
      v29[1] = v19;
      sub_10039C76C((uint64_t *)v29);
      goto LABEL_8;
    case 4u:
      sub_1006A9B5C();
      String.utf8CString.getter();
      swift_bridgeObjectRelease();
      nw_http_request_create();
      swift_release();
      uint64_t metadata_for_request = nw_http_create_metadata_for_request();
      nw_http_fields_append();
      swift_unknownObjectRelease();
      uint64_t v15 = (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa;
      goto LABEL_21;
    case 5u:
      uint64_t v20 = *((void *)v13 + 11);
      unint64_t v21 = *((void *)v13 + 12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100250CB0(v20, v21);
      goto LABEL_8;
    case 6u:
      sub_1006AAB70((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
      sub_1006A9B5C();
      String.utf8CString.getter();
      swift_bridgeObjectRelease();
      nw_http_request_create();
      swift_release();
      uint64_t metadata_for_request = nw_http_create_metadata_for_request();
      nw_http_fields_append();
      *(void *)&v29[0] = *(void *)&v10[v8[5]];
      swift_unknownObjectRetain();
      dispatch thunk of CustomStringConvertible.description.getter();
      String.utf8CString.getter();
      swift_bridgeObjectRelease();
      nw_http_fields_append();
      swift_unknownObjectRelease();
      swift_release();
      String.utf8CString.getter();
      swift_unknownObjectRetain();
      nw_http_fields_append();
      swift_unknownObjectRelease();
      swift_release();
      if (*(void *)&v10[v8[9] + 8])
      {
        String.utf8CString.getter();
        swift_unknownObjectRetain();
        nw_http_fields_append();
        swift_unknownObjectRelease();
        swift_release();
      }
      if (*(void *)&v10[v8[10] + 8])
      {
        String.utf8CString.getter();
        swift_unknownObjectRetain();
        nw_http_fields_append();
        swift_unknownObjectRelease();
        swift_release();
      }
      sub_100579838((uint64_t)v10, (uint64_t)v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
      {
        sub_1006AABD8((uint64_t)v10, (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
        sub_10000A7E8((uint64_t)v3, (uint64_t *)&unk_10096DFB0);
LABEL_12:
        swift_unknownObjectRelease();
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
        SFAirDrop.TransferIdentifier.stringValue.getter();
        String.utf8CString.getter();
        swift_bridgeObjectRelease();
        nw_http_fields_append();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        sub_1006AABD8((uint64_t)v10, (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
        swift_unknownObjectRelease();
        swift_release();
      }
      break;
    case 7u:
    case 0xBu:
    case 0xDu:
      sub_100250CC4(*(void *)v13, *((void *)v13 + 1));
LABEL_8:
      nw_http_response_create_well_known();
      uint64_t metadata_for_request = nw_http_create_metadata_for_response();
      goto LABEL_12;
    case 8u:
      sub_1006A9B5C();
      String.utf8CString.getter();
      swift_bridgeObjectRelease();
      nw_http_request_create();
      swift_release();
      uint64_t metadata_for_request = nw_http_create_metadata_for_request();
      nw_http_fields_append();
      swift_unknownObjectRelease();
      uint64_t v15 = _s14descr1008C9A51V15ExchangeRequestVMa;
      goto LABEL_21;
    case 9u:
      nw_http_response_create_well_known();
      uint64_t metadata_for_request = nw_http_create_metadata_for_response();
      swift_unknownObjectRelease();
      uint64_t v15 = _s14descr1008C9A51V16ExchangeResponseVMa;
      goto LABEL_21;
    case 0xAu:
      uint64_t v22 = *((void *)v13 + 2);
      unint64_t v23 = *((void *)v13 + 3);
      uint64_t v24 = *((void *)v13 + 4);
      unint64_t v25 = *((void *)v13 + 5);
      uint64_t v26 = *((void *)v13 + 6);
      unint64_t v27 = *((void *)v13 + 7);
      swift_bridgeObjectRelease();
      sub_100250CB0(v22, v23);
      sub_100250CC4(v24, v25);
      sub_100250CC4(v26, v27);
      swift_bridgeObjectRelease();
      sub_1006A9B5C();
      String.utf8CString.getter();
      swift_bridgeObjectRelease();
      nw_http_request_create();
      swift_release();
      uint64_t metadata_for_request = nw_http_create_metadata_for_request();
LABEL_11:
      nw_http_fields_append();
      goto LABEL_12;
    case 0xCu:
      sub_1006A9B5C();
      String.utf8CString.getter();
      swift_bridgeObjectRelease();
      nw_http_request_create();
      swift_release();
      uint64_t metadata_for_request = nw_http_create_metadata_for_request();
      nw_http_fields_append();
      swift_unknownObjectRelease();
      uint64_t v15 = (uint64_t (*)(void))_s14descr1008C9841V12ErrorRequestVMa;
      goto LABEL_21;
    default:
      sub_1006A9B5C();
      String.utf8CString.getter();
      swift_bridgeObjectRelease();
      nw_http_request_create();
      swift_release();
      uint64_t metadata_for_request = nw_http_create_metadata_for_request();
      nw_http_fields_append();
      swift_unknownObjectRelease();
      uint64_t v15 = (uint64_t (*)(void))_s12HelloRequestVMa;
LABEL_21:
      sub_1006AABD8((uint64_t)v13, v15);
      break;
  }
  return metadata_for_request;
}

uint64_t sub_1006ADBA4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1006ADBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, Swift::String *a6, uint64_t a7, Swift::String *a8, Swift::String *a9)
{
  uint64_t v53 = a5;
  uint64_t v12 = sub_10000A844((uint64_t *)&unk_10096DFB0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  String.init(cString:)();
  Swift::String v15 = String.lowercased()();
  swift_bridgeObjectRelease();
  String.init(cString:)();
  Swift::String v16 = String.lowercased()();
  swift_bridgeObjectRelease();
  Swift::String v17 = String.lowercased()();
  if (v15._countAndFlagsBits == v17._countAndFlagsBits && v15._object == v17._object)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
  {
    Swift::String v27 = String.lowercased()();
    if (v15._countAndFlagsBits == v27._countAndFlagsBits && v15._object == v27._object)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v28 & 1) == 0)
      {
        Swift::String v33 = String.lowercased()();
        if (v15._countAndFlagsBits == v33._countAndFlagsBits && v15._object == v33._object)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v38 & 1) == 0)
          {
            Swift::String v44 = String.lowercased()();
            if (v15._countAndFlagsBits == v44._countAndFlagsBits && v15._object == v44._object)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if ((v45 & 1) == 0)
              {
                Swift::String v49 = String.lowercased()();
                if (v15._countAndFlagsBits == v49._countAndFlagsBits && v15._object == v49._object)
                {
                  swift_bridgeObjectRelease_n();
                }
                else
                {
                  char v50 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v50 & 1) == 0) {
                    goto LABEL_26;
                  }
                }
                *a9 = v16;
LABEL_26:
                swift_bridgeObjectRelease();
                return 1;
              }
            }
            swift_bridgeObjectRelease();
            *a8 = v16;
            goto LABEL_26;
          }
        }
        swift_bridgeObjectRelease();
        SFAirDrop.TransferIdentifier.init(_:)();
        uint64_t v43 = type metadata accessor for SFAirDrop.TransferIdentifier();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v14, 0, 1, v43);
        sub_1006AE34C((uint64_t)v14, a7);
        return 1;
      }
    }
    swift_bridgeObjectRelease();
    *a6 = v16;
    goto LABEL_26;
  }
LABEL_5:
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v20 = ((unint64_t)v16._object >> 56) & 0xF;
  uint64_t v21 = v16._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (((uint64_t)v16._object & 0x2000000000000000) != 0) {
    unint64_t v22 = ((unint64_t)v16._object >> 56) & 0xF;
  }
  else {
    unint64_t v22 = v16._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (!v22)
  {
    swift_bridgeObjectRelease();
    uint64_t v41 = 0;
    char v40 = 1;
LABEL_62:
    uint64_t v42 = v53;
    uint64_t *v53 = v41;
    *((unsigned char *)v42 + 8) = v40 & 1;
    return 1;
  }
  if (((uint64_t)v16._object & 0x1000000000000000) != 0)
  {
    uint64_t v24 = sub_10031B6B4(v16._countAndFlagsBits, (uint64_t)v16._object, 10);
    char v26 = v51;
LABEL_59:
    swift_bridgeObjectRelease();
    char v40 = v26 & 1;
    if (v26) {
      uint64_t v41 = 0;
    }
    else {
      uint64_t v41 = v24;
    }
    goto LABEL_62;
  }
  if (((uint64_t)v16._object & 0x2000000000000000) == 0)
  {
    if ((v16._countAndFlagsBits & 0x1000000000000000) != 0) {
      unint64_t v23 = (unsigned __int8 *)(((uint64_t)v16._object & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      unint64_t v23 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    uint64_t v24 = (uint64_t)sub_10031B684(v23, v21, 10);
    char v26 = v25 & 1;
    goto LABEL_59;
  }
  v54[0] = v16._countAndFlagsBits;
  v54[1] = (uint64_t)v16._object & 0xFFFFFFFFFFFFFFLL;
  if (LOBYTE(v16._countAndFlagsBits) == 43)
  {
    if (!v20) {
      goto LABEL_85;
    }
    if (v20 == 1 || (BYTE1(v16._countAndFlagsBits) - 48) > 9u) {
      goto LABEL_41;
    }
    uint64_t v24 = (BYTE1(v16._countAndFlagsBits) - 48);
    if (v20 != 2)
    {
      if ((BYTE2(v16._countAndFlagsBits) - 48) > 9u) {
        goto LABEL_41;
      }
      uint64_t v24 = 10 * (BYTE1(v16._countAndFlagsBits) - 48)
          + (BYTE2(v16._countAndFlagsBits) - 48);
      unint64_t v29 = v20 - 3;
      if (v29)
      {
        uint64_t v30 = (unsigned __int8 *)v54 + 3;
        while (1)
        {
          unsigned int v31 = *v30 - 48;
          if (v31 > 9) {
            goto LABEL_41;
          }
          uint64_t v32 = 10 * v24;
          if ((unsigned __int128)(v24 * (__int128)10) >> 64 != (10 * v24) >> 63) {
            goto LABEL_41;
          }
          uint64_t v24 = v32 + v31;
          if (__OFADD__(v32, v31)) {
            goto LABEL_41;
          }
          char v26 = 0;
          ++v30;
          if (!--v29) {
            goto LABEL_59;
          }
        }
      }
    }
LABEL_58:
    char v26 = 0;
    goto LABEL_59;
  }
  if (LOBYTE(v16._countAndFlagsBits) != 45)
  {
    if (!v20 || (LOBYTE(v16._countAndFlagsBits) - 48) > 9u) {
      goto LABEL_41;
    }
    uint64_t v24 = (LOBYTE(v16._countAndFlagsBits) - 48);
    if (v20 != 1)
    {
      if ((BYTE1(v16._countAndFlagsBits) - 48) > 9u) {
        goto LABEL_41;
      }
      uint64_t v24 = 10 * (LOBYTE(v16._countAndFlagsBits) - 48)
          + (BYTE1(v16._countAndFlagsBits) - 48);
      unint64_t v34 = v20 - 2;
      if (v34)
      {
        uint64_t v35 = (unsigned __int8 *)v54 + 2;
        while (1)
        {
          unsigned int v36 = *v35 - 48;
          if (v36 > 9) {
            goto LABEL_41;
          }
          uint64_t v37 = 10 * v24;
          if ((unsigned __int128)(v24 * (__int128)10) >> 64 != (10 * v24) >> 63) {
            goto LABEL_41;
          }
          uint64_t v24 = v37 + v36;
          if (__OFADD__(v37, v36)) {
            goto LABEL_41;
          }
          char v26 = 0;
          ++v35;
          if (!--v34) {
            goto LABEL_59;
          }
        }
      }
    }
    goto LABEL_58;
  }
  if (v20)
  {
    if (v20 != 1 && (BYTE1(v16._countAndFlagsBits) - 48) <= 9u)
    {
      if (v20 == 2)
      {
        char v26 = 0;
        uint64_t v24 = -(uint64_t)(BYTE1(v16._countAndFlagsBits) - 48);
        goto LABEL_59;
      }
      if ((BYTE2(v16._countAndFlagsBits) - 48) <= 9u)
      {
        uint64_t v24 = -10 * (BYTE1(v16._countAndFlagsBits) - 48)
            - (BYTE2(v16._countAndFlagsBits) - 48);
        unint64_t v39 = v20 - 3;
        if (!v39) {
          goto LABEL_58;
        }
        uint64_t v46 = (unsigned __int8 *)v54 + 3;
        while (1)
        {
          unsigned int v47 = *v46 - 48;
          if (v47 > 9) {
            break;
          }
          uint64_t v48 = 10 * v24;
          if ((unsigned __int128)(v24 * (__int128)10) >> 64 != (10 * v24) >> 63) {
            break;
          }
          uint64_t v24 = v48 - v47;
          if (__OFSUB__(v48, v47)) {
            break;
          }
          char v26 = 0;
          ++v46;
          if (!--v39) {
            goto LABEL_59;
          }
        }
      }
    }
LABEL_41:
    uint64_t v24 = 0;
    char v26 = 1;
    goto LABEL_59;
  }
  __break(1u);
LABEL_85:
  __break(1u);
  return result;
}

uint64_t sub_1006AE278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32))(a2, a3, a4, a5) & 1;
}

uint64_t sub_1006AE2B4()
{
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1006AE2C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1006ADBD0(a1, a2, a3, a4, *(uint64_t **)(v4 + 16), *(Swift::String **)(v4 + 24), *(void *)(v4 + 32), *(Swift::String **)(v4 + 40), *(Swift::String **)(v4 + 48)) & 1;
}

uint64_t sub_1006AE2F8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006AE308()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_1006AE334(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1006AE344()
{
  return swift_release();
}

uint64_t sub_1006AE34C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_10096DFB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1006AE3B4()
{
  unint64_t result = qword_10097EA68;
  if (!qword_10097EA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10097EA68);
  }
  return result;
}

unint64_t sub_1006AE408()
{
  unint64_t result = qword_10097EA78;
  if (!qword_10097EA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10097EA78);
  }
  return result;
}

uint64_t sub_1006AE45C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006AE4A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1006AE518()
{
  *(void *)(v1 + 136) = v0;
  return _swift_task_switch(sub_1006AE538, 0, 0);
}

uint64_t sub_1006AE538()
{
  uint64_t v1 = *(void **)(v0[17] + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1006AE640;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1006AFCF4;
  v0[13] = &unk_1008E53E0;
  v0[14] = v2;
  [v1 generateLocalAttestedLTKIfNeccessaryWithCompletion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1006AE640()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_1006AE848;
  }
  else {
    uint64_t v2 = sub_1006AE750;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1006AE750()
{
  if (v0[16] >> 60 == 15)
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v1 = 10;
    *(void *)(v1 + 8) = 0xD000000000000025;
    *(void *)(v1 + 16) = 0x80000001007C6F70;
    swift_willThrow();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = v0[15];
    uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
    return v5(v4);
  }
}

uint64_t sub_1006AE848()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1006AE8B4(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  uint64_t v55 = (id *)a2;
  v53[1] = a3;
  void v53[2] = a4;
  uint64_t v54 = a1;
  v53[0] = *(id *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager);
  id v5 = [v53[0] activeAKSSessions];
  if (!v5)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v6 = v5;
  uint64_t v7 = (void *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice);
  uint64_t v9 = *(void *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 24);
  uint64_t v8 = *(void *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 32);
  uint64_t v10 = sub_10026BB6C((void *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice), v9);
  uint64_t v11 = *(void *)(v9 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v53 - v12;
  (*(void (**)(char *))(v11 + 16))((char *)v53 - v12);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v8);
  if (!v14)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v9);
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = [v6 valueForKey:v15];

  if (v16)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v57, 0, sizeof(v57));
  }
  sub_10024D388((uint64_t)v57, (uint64_t)&v58, (uint64_t *)&unk_10096AC20);
  if (!v60)
  {
    sub_10041AAB4((uint64_t)&v58);
    goto LABEL_11;
  }
  sub_1006B1A7C();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v20 = 10;
    *(void *)(v20 + 8) = 0xD000000000000019;
    *(void *)(v20 + 16) = 0x80000001007C6FD0;
    swift_willThrow();
    return;
  }
  Swift::String v17 = v61;
  char v18 = v56;
  long long v19 = (void *)sub_1006B0308(v54, (unint64_t)v55);
  if (v18)
  {

    return;
  }

  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [v17 finalizeEscrowPairing:v21];

  if (!v22)
  {
    uint64_t v56 = v17;
    UUID.uuidString.getter();
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v26 = v7[3];
    uint64_t v25 = v7[4];
    Swift::String v27 = sub_10026BB6C(v7, v26);
    uint64_t v55 = v53;
    uint64_t v28 = *(void *)(v26 - 8);
    __chkstk_darwin(v27);
    uint64_t v30 = (char *)v53 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v28 + 16))(v30);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v25);
    uint64_t v32 = v31;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v26);
    if (v32)
    {
      NSString v33 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v33 = 0;
    }
    id v39 = v53[0];
    [v53[0] setPairingID:v24 forWatchID:v33];

    sub_1006B06BC();
    char v40 = v56;
    id v41 = [v39 activeAKSSessions];
    if (v41)
    {
      uint64_t v42 = v41;
      uint64_t v43 = v7[3];
      uint64_t v44 = v7[4];
      char v45 = sub_10026BB6C(v7, v43);
      uint64_t v46 = *(void *)(v43 - 8);
      __chkstk_darwin(v45);
      uint64_t v48 = (char *)v53 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v46 + 16))(v48);
      uint64_t v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v43, v44);
      unint64_t v51 = v50;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v43);
      unint64_t v58 = v49;
      unint64_t v59 = v51;
      sub_10000A844(&qword_10096B540);
      uint64_t v52 = Optional._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v42 removeObjectForKey:v52];

      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (v22 == (id)147)
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v23 = 23;
    *(void *)(v23 + 8) = 0xD000000000000015;
    *(void *)(v23 + 16) = 0x80000001007BF000;
  }
  else
  {
    unint64_t v58 = 0;
    unint64_t v59 = 0xE000000000000000;
    _StringGuts.grow(_:)(45);
    swift_bridgeObjectRelease();
    unint64_t v58 = 0xD00000000000002ALL;
    unint64_t v59 = 0x80000001007C7080;
    *(void *)&v57[0] = v22;
    v34._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v34);
    swift_bridgeObjectRelease();
    v35._uint64_t countAndFlagsBits = 41;
    v35._object = (void *)0xE100000000000000;
    String.append(_:)(v35);
    unint64_t v36 = v58;
    unint64_t v37 = v59;
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v38 = 10;
    *(void *)(v38 + 8) = v36;
    *(void *)(v38 + 16) = v37;
  }
  swift_willThrow();
}

id sub_1006AEF58(uint64_t a1, void *a2)
{
  id v102 = *(id *)((char *)v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager);
  id result = [v102 activeAKSSessions];
  if (!result)
  {
    __break(1u);
    goto LABEL_57;
  }
  uint64_t v6 = result;
  Class v105 = v2;
  uint64_t v8 = *(void *)((char *)v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 24);
  uint64_t v7 = *(void *)((char *)v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 32);
  Swift::String v103 = (void *)((char *)v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice);
  uint64_t v9 = sub_10026BB6C((objc_class *)((char *)v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice), v8);
  uint64_t v10 = *(void *)(v8 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v95 - v11;
  (*(void (**)(char *))(v10 + 16))((char *)v95 - v11);
  id result = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v8, v7);
  if (!v13)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = [v6 valueForKey:v14];

  if (v15)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v106, 0, sizeof(v106));
  }
  Class v16 = v105;
  sub_10024D388((uint64_t)v106, (uint64_t)&v107, (uint64_t *)&unk_10096AC20);
  if (!v109)
  {
    sub_10041AAB4((uint64_t)&v107);
    goto LABEL_11;
  }
  sub_1006B1A7C();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v20 = 10;
    *(void *)(v20 + 8) = 0xD000000000000019;
    *(void *)(v20 + 16) = 0x80000001007C6FD0;
    swift_willThrow();
    return a2;
  }
  id v17 = v110;
  uint64_t v18 = v104;
  unint64_t v19 = sub_1006B0308(a1, (unint64_t)a2);
  if (v18)
  {

    return a2;
  }
  a2 = (void *)v19;
  uint64_t v21 = *(void *)((char *)v16 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_type);
  if ((unint64_t)(v21 - 1) > 3)
  {
    if (v21 == 8 && !*((unsigned char *)v16 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_role))
    {
      if ([v17 finalizeRegistration])
      {
        sub_10024D280();
        swift_allocError();
        *(_DWORD *)uint64_t v28 = 10;
        *(void *)(v28 + 8) = 0xD00000000000001FLL;
        *(void *)(v28 + 16) = 0x80000001007BEFE0;
        swift_willThrow();

        return a2;
      }
      id v101 = v17;
      uint64_t v43 = v103[3];
      uint64_t v42 = v103[4];
      uint64_t v44 = sub_10026BB6C(v103, v43);
      uint64_t v45 = *(void *)(v43 - 8);
      __chkstk_darwin(v44);
      uint64_t v47 = (char *)v95 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v45 + 16))(v47);
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v43, v42);
      uint64_t v49 = v48;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v43);
      if (v49)
      {
        NSString v50 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v50 = 0;
      }
      id v61 = [v102 remoteLTKForDeviceID:v50];

      id v17 = v101;
      if (v61)
      {
        uint64_t v62 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v64 = v63;

        sub_10025ADCC(v62, v64);
        v65.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
        uint64_t v104 = v62;
        uint64_t v100 = v64;
        sub_100250CC4(v62, v64);
      }
      else
      {
        v65.super.Class isa = 0;
        uint64_t v104 = 0;
        uint64_t v100 = 0xF000000000000000;
      }
      uint64_t v72 = sub_10001D4C4(v65.super.isa);

      if (qword_10096A170 != -1) {
        swift_once();
      }
      uint64_t v73 = type metadata accessor for Logger();
      sub_10000B47C(v73, (uint64_t)qword_10097EAC0);
      swift_retain_n();
      long long v74 = Logger.logObject.getter();
      int v75 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v74, (os_log_type_t)v75))
      {
        os_log_t v96 = v74;
        uint64_t v97 = v72;
        int v99 = v75;
        uint64_t v76 = swift_slowAlloc();
        uint64_t v98 = swift_slowAlloc();
        *(void *)&v106[0] = v98;
        *(_DWORD *)uint64_t v76 = 136315394;
        uint64_t v77 = v103[3];
        uint64_t v78 = v103[4];
        long long v79 = sub_10026BB6C(v103, v77);
        v95[1] = v95;
        uint64_t v80 = *(void *)(v77 - 8);
        __chkstk_darwin(v79);
        uint64_t v82 = (char *)v95 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v80 + 16))(v82);
        uint64_t v83 = (*(uint64_t (**)(uint64_t, uint64_t))(v78 + 8))(v77, v78);
        unint64_t v85 = v84;
        (*(void (**)(char *, uint64_t))(v80 + 8))(v82, v77);
        if (!v85)
        {
          uint64_t v83 = 0xD000000000000015;
          uint64_t v107 = 0;
          unint64_t v108 = 0xE000000000000000;
          _StringGuts.grow(_:)(17);
          swift_bridgeObjectRelease();
          unint64_t v85 = 0x80000001007B7770;
        }
        uint64_t v107 = sub_100254634(v83, v85, (uint64_t *)v106);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v76 + 12) = 2080;
        CFStringRef v86 = (id)sub_10001D9A8(v97);
        if (v86)
        {
          long long v87 = (__CFString *)v86;
          unint64_t v88 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v90 = v89;
        }
        else
        {
          unint64_t v88 = 0xD000000000000015;
          uint64_t v107 = 0;
          unint64_t v108 = 0xE000000000000000;
          _StringGuts.grow(_:)(17);
          swift_bridgeObjectRelease();
          unint64_t v90 = 0x80000001007B7770;
        }
        unint64_t v91 = v100;
        uint64_t v107 = sub_100254634(v88, v90, (uint64_t *)v106);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        os_log_t v92 = v96;
        _os_log_impl((void *)&_mh_execute_header, v96, (os_log_type_t)v99, "Device %s has been registered (peer state is %s)", (uint8_t *)v76, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        id v17 = v101;
      }
      else
      {

        swift_release_n();
        unint64_t v91 = v100;
      }
      id v29 = v102;
      uint64_t v30 = &selRef__systemCanTrigger;
      uint64_t v93 = v104;
      if (v91 >> 60 == 15)
      {
        Class isa = 0;
      }
      else
      {
        sub_10025ADCC(v104, v91);
        Class isa = Data._bridgeToObjectiveC()().super.isa;
        sub_100250CB0(v93, v91);
      }
      sub_10001D790(isa);

      sub_100250CB0(v93, v91);
      goto LABEL_23;
    }
  }
  else
  {
    sub_1006B06BC();
    if (v21 == 3)
    {
      id v22 = [v17 generateEscrowSecret];
      id v101 = v17;
      if (v22)
      {
        uint64_t v23 = v22;
        uint64_t v24 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v26 = v25;

        sub_10025ADCC(v24, v26);
        v27.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
        uint64_t v104 = v26;
        Class v105 = v27.super.isa;
        uint64_t v100 = v24;
        sub_100250CC4(v24, v26);
      }
      else
      {
        uint64_t v100 = 0;
        uint64_t v104 = 0xF000000000000000;
        Class v105 = 0;
      }
      UUID.uuidString.getter();
      NSString v51 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v53 = v103[3];
      uint64_t v52 = v103[4];
      uint64_t v54 = sub_10026BB6C(v103, v53);
      uint64_t v55 = *(void *)(v53 - 8);
      __chkstk_darwin(v54);
      uint64_t v57 = (char *)v95 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v55 + 16))(v57);
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v53, v52);
      uint64_t v59 = v58;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v53);
      if (v59)
      {
        NSString v60 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v60 = 0;
      }
      uint64_t v30 = &selRef__systemCanTrigger;
      id v29 = v102;
      Class v66 = v105;
      unsigned __int8 v67 = [v102 storeEscrowSecret:v105 pairingID:v51 deviceID:v60 requiresUnlock:0];

      if (v67)
      {
        sub_100250CB0(v100, v104);
        id v17 = v101;
      }
      else
      {
        id v17 = v101;
        if (qword_10096A170 != -1) {
          swift_once();
        }
        uint64_t v68 = type metadata accessor for Logger();
        sub_10000B47C(v68, (uint64_t)qword_10097EAC0);
        long long v69 = Logger.logObject.getter();
        os_log_type_t v70 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v69, v70))
        {
          long long v71 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)long long v71 = 0;
          _os_log_impl((void *)&_mh_execute_header, v69, v70, "Error storing escrow secret", v71, 2u);
          swift_slowDealloc();

          sub_100250CB0(v100, v104);
        }
        else
        {
          sub_100250CB0(v100, v104);
        }
      }
      goto LABEL_22;
    }
  }
  id v29 = v102;
  uint64_t v30 = &selRef__systemCanTrigger;
LABEL_22:
  [v17 confirmSession];
LABEL_23:
  id v101 = v17;
  id result = [v29 v30[157]];
  if (result)
  {
    uint64_t v31 = result;
    uint64_t v32 = v103[3];
    uint64_t v33 = v103[4];
    Swift::String v34 = sub_10026BB6C(v103, v32);
    uint64_t v35 = *(void *)(v32 - 8);
    __chkstk_darwin(v34);
    unint64_t v37 = (char *)v95 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v35 + 16))(v37);
    uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v32, v33);
    unint64_t v40 = v39;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v32);
    uint64_t v107 = v38;
    unint64_t v108 = v40;
    sub_10000A844(&qword_10096B540);
    uint64_t v41 = Optional._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v31 removeObjectForKey:v41];

    swift_unknownObjectRelease();
    return a2;
  }
LABEL_58:
  __break(1u);
  return result;
}

uint64_t sub_1006AFC2C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097EAC0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097EAC0);
  if (qword_100969CD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946C0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1006AFCF4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_10000A844(&qword_10096BAF0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    if (a2)
    {
      id v8 = a2;
      uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v11 = v10;
    }
    else
    {
      uint64_t v9 = 0;
      unint64_t v11 = 0xF000000000000000;
    }
    v13[0] = v9;
    v13[1] = v11;
    sub_10024D388((uint64_t)v13, *(void *)(*(void *)(v3 + 64) + 40), &qword_10096B260);
    return swift_continuation_throwingResume();
  }
}

void sub_1006AFDE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager);
  uint64_t v27 = 0;
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 24);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 32);
  uint64_t v5 = sub_10026BB6C((void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice), v4);
  uint64_t v6 = *(void *)(v4 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v27 - v7;
  (*(void (**)(char *))(v6 + 16))((char *)&v27 - v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v3);
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  if (v10)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v11 = 0;
  }
  uint64_t v12 = 0xD000000000000011;
  id v13 = [v2 aksPairingSessionForDeviceID:v11 originator:*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_role) errorCode:&v27 requiresAttestation:(unint64_t)(*(void *)(v1+ OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_type)- 3) < 5 requiresEscrow:(unint64_t)(*(void *)(v1+ OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_type)- 3) < 2];

  if (!v13)
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v18 = 10;
    *(void *)(v18 + 8) = 0xD000000000000026;
    *(void *)(v18 + 16) = 0x80000001007C6FF0;
    swift_willThrow();
    return;
  }
  NSString v14 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksSession);
  *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksSession) = v13;
  id v15 = v13;

  uint64_t v16 = v27;
  if (v27 > 147)
  {
    if (v27 == 148)
    {
      uint64_t v12 = 0xD000000000000012;
      unint64_t v19 = "Missing remote LTK";
    }
    else
    {
      if (v27 != 149) {
        goto LABEL_13;
      }
      unint64_t v19 = "Missing local LTK";
    }
    unint64_t v17 = (unint64_t)(v19 - 32) | 0x8000000000000000;
    goto LABEL_18;
  }
  if (v27)
  {
    if (v27 == 101)
    {
      unint64_t v17 = 0xEB00000000657275;
      uint64_t v12 = 0x6C69616620534B41;
LABEL_18:
      if (qword_10096A170 != -1) {
        swift_once();
      }
      uint64_t v22 = type metadata accessor for Logger();
      sub_10000B47C(v22, (uint64_t)qword_10097EAC0);
      swift_bridgeObjectRetain_n();
      uint64_t v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v23, v24))
      {
        unint64_t v25 = (uint8_t *)swift_slowAlloc();
        uint64_t v30 = swift_slowAlloc();
        *(_DWORD *)unint64_t v25 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v28 = sub_100254634(v12, v17, &v30);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "%s", v25, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v26 = 10;
      *(void *)(v26 + 8) = v12;
      *(void *)(v26 + 16) = v17;
      goto LABEL_24;
    }
LABEL_13:
    uint64_t v30 = 0;
    unint64_t v31 = 0xE000000000000000;
    _StringGuts.grow(_:)(33);
    swift_bridgeObjectRelease();
    uint64_t v30 = 0xD00000000000001FLL;
    unint64_t v31 = 0x80000001007C7020;
    uint64_t v28 = v16;
    char v29 = 0;
    sub_10000A844((uint64_t *)&unk_10097EBC0);
    v20._uint64_t countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
    uint64_t v12 = v30;
    unint64_t v17 = v31;
    goto LABEL_18;
  }
  if (([v15 sessionIsValid] & 1) == 0)
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v21 = 10;
    *(void *)(v21 + 8) = 0xD000000000000013;
    *(void *)(v21 + 16) = 0x80000001007C6980;
LABEL_24:
    swift_willThrow();
  }
}

unint64_t sub_1006B0308(uint64_t a1, unint64_t a2)
{
  id v4 = [*(id *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager) activeAKSSessions:a1];
  if (!v4)
  {
    __break(1u);
LABEL_21:
    __break(1u);
  }
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 24);
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 32);
  id v8 = sub_10026BB6C((void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice), v6);
  uint64_t v9 = *(void *)(v6 - 8);
  __chkstk_darwin(v8);
  NSString v11 = (char *)v23 - v10;
  (*(void (**)(char *))(v9 + 16))((char *)v23 - v10);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  if (!v12) {
    goto LABEL_21;
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v6);
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [v5 valueForKey:v13];

  if (v14)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v24, 0, sizeof(v24));
  }
  sub_10024D388((uint64_t)v24, (uint64_t)v25, (uint64_t *)&unk_10096AC20);
  if (!v25[3])
  {
    sub_10041AAB4((uint64_t)v25);
    goto LABEL_11;
  }
  sub_1006B1A7C();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v17 = 10;
    *(void *)(v17 + 8) = 0xD000000000000019;
    *(void *)(v17 + 16) = 0x80000001007C6FD0;
    swift_willThrow();
    return a2;
  }
  id v15 = (void *)v23[1];
  if (a2 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
  }
  v25[0] = 0;
  unsigned __int8 v18 = [v15 stepSessionWithData:isa outputData:v25];

  id v19 = v25[0];
  a2 = (unint64_t)v19;
  if (v18)
  {
    if (!v19)
    {
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v21 = 10;
      strcpy((char *)(v21 + 8), "No step data");
      *(unsigned char *)(v21 + 21) = 0;
      *(_WORD *)(v21 + 22) = -5120;
      swift_willThrow();
    }
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v20 = 10;
    *(void *)(v20 + 8) = 0xD000000000000017;
    *(void *)(v20 + 16) = 0x80000001007C6900;
    swift_willThrow();
  }
  return a2;
}

void sub_1006B06BC()
{
  id v33 = *(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager);
  id v1 = [v33 activeAKSSessions];
  if (!v1)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v2 = v1;
  uint64_t v3 = (void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 24);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 32);
  uint64_t v6 = sub_10026BB6C((void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice), v4);
  uint64_t v7 = *(void *)(v4 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v31 - v8;
  (*(void (**)(char *))(v7 + 16))((char *)v31 - v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  if (!v10)
  {
LABEL_18:
    __break(1u);
    return;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v4);
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [v2 valueForKey:v11];

  if (v12)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v34, 0, sizeof(v34));
  }
  sub_10024D388((uint64_t)v34, (uint64_t)v35, (uint64_t *)&unk_10096AC20);
  if (!v36)
  {
    sub_10041AAB4((uint64_t)v35);
    goto LABEL_12;
  }
  sub_1006B1A7C();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v29 = 10;
    *(void *)(v29 + 8) = 0xD000000000000019;
    *(void *)(v29 + 16) = 0x80000001007C6FD0;
    swift_willThrow();
    return;
  }
  id v13 = v37;
  id v14 = [v37 generateSessionToken];
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v18 = v17;

    uint64_t v32 = v16;
    v19.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
    uint64_t v21 = v3[3];
    uint64_t v20 = v3[4];
    uint64_t v22 = sub_10026BB6C(v3, v21);
    v31[1] = v31;
    uint64_t v23 = *(void *)(v21 - 8);
    __chkstk_darwin(v22);
    unint64_t v25 = (char *)v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v23 + 16))(v25);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v20);
    uint64_t v27 = v26;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v21);
    if (v27)
    {
      NSString v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v28 = 0;
    }
    [v33 storeRangingKey:v19.super.isa forDeviceID:v28];

    sub_100250CC4(v32, v18);
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v30 = 10;
    *(void *)(v30 + 8) = 0xD00000000000001ELL;
    *(void *)(v30 + 16) = 0x80000001007BC220;
    swift_willThrow();
  }
}

void sub_1006B0B04()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 24);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 32);
  uint64_t v5 = sub_10026BB6C((void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice), v4);
  uint64_t v6 = *(void *)(v4 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - v7;
  (*(void (**)(char *))(v6 + 16))((char *)&v17 - v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v3);
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
  if (v10)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v11 = 0;
  }
  id v12 = [v2 aksRegistrationSessionForDeviceID:v11 originator:*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_role)];

  if (v12)
  {
    id v13 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksSession);
    *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksSession) = v12;
    id v14 = v12;

    if (([v14 sessionIsValid] & 1) == 0)
    {
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v15 = 10;
      *(void *)(v15 + 8) = 0xD000000000000013;
      *(void *)(v15 + 16) = 0x80000001007C6980;
      swift_willThrow();
    }
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v16 = 10;
    *(void *)(v16 + 8) = 0xD000000000000029;
    *(void *)(v16 + 16) = 0x80000001007C6FA0;
    swift_willThrow();
  }
}

uint64_t sub_1006B0D60()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_sessionID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  sub_10024D338(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice);

  return swift_deallocClassInstance();
}

uint64_t sub_1006B0E30()
{
  return type metadata accessor for SDAuthenticationAKSPairingSession();
}

uint64_t type metadata accessor for SDAuthenticationAKSPairingSession()
{
  uint64_t result = qword_10097EB00;
  if (!qword_10097EB00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1006B0E84()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1006B0F4C(char a1, uint64_t a2, void *a3)
{
  if (qword_10096A170 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_10097EAC0);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_100254634(a2, (unint64_t)a3, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2080;
    if (a1) {
      uint64_t v10 = 7955787;
    }
    else {
      uint64_t v10 = 1801678668;
    }
    if (a1) {
      unint64_t v11 = 0xE300000000000000;
    }
    else {
      unint64_t v11 = 0xE400000000000000;
    }
    uint64_t v34 = sub_100254634(v10, v11, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Disabling pairing with %s as %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v12 = [self sharedManager];
  if (v12)
  {
    id v13 = v12;
    if (a1)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v23, v24))
      {
        unint64_t v25 = (unint64_t)a3;
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 136315138;
        uint64_t v32 = v27;
        swift_bridgeObjectRetain();
        uint64_t v34 = sub_100254634(a2, v25, &v32);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Removing escrow, ranging, LTKs and pairingID for %s", v26, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      NSString v28 = String._bridgeToObjectiveC()();
      [v13 deleteEscrowSecretForDeviceID:v28];

      NSString v29 = String._bridgeToObjectiveC()();
      [v13 deleteRangingKeyForDeviceID:v29];

      NSString v30 = String._bridgeToObjectiveC()();
      [v13 removeRemoteLTKForDeviceID:v30];

      NSString v31 = String._bridgeToObjectiveC()();
      [v13 removePairingRecordForWatchID:v31];
    }
    else
    {
      NSString v14 = String._bridgeToObjectiveC()();
      unsigned __int8 v15 = [v13 disablePairingWithKeyDevice:v14];

      if ((v15 & 1) == 0)
      {
        uint64_t v32 = 0;
        unint64_t v33 = 0xE000000000000000;
        _StringGuts.grow(_:)(62);
        v16._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
        v16._object = (void *)0x80000001007C6F00;
        String.append(_:)(v16);
        v17._uint64_t countAndFlagsBits = a2;
        v17._object = a3;
        String.append(_:)(v17);
        v18._object = (void *)0x80000001007C6F30;
        v18._uint64_t countAndFlagsBits = 0xD000000000000011;
        String.append(_:)(v18);
        uint64_t v19 = v32;
        unint64_t v20 = v33;
        sub_10024D280();
        swift_allocError();
        *(_DWORD *)uint64_t v21 = 10;
        *(void *)(v21 + 8) = v19;
        *(void *)(v21 + 16) = v20;
        swift_willThrow();
      }
    }
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v22 = 10;
    *(void *)(v22 + 8) = 0xD000000000000025;
    *(void *)(v22 + 16) = 0x80000001007C6E50;
    swift_willThrow();
  }
}

uint64_t sub_1006B14B4(uint64_t a1, void *a2, unint64_t a3)
{
  uint64_t v4 = v3;
  id v8 = [self sharedManager];
  if (!v8)
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v16 = 10;
    *(void *)(v16 + 8) = 0xD000000000000025;
    *(void *)(v16 + 16) = 0x80000001007C6E50;
    swift_willThrow();
    return (uint64_t)v4;
  }
  uint64_t v9 = v8;
  sub_1005097B4(a3);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 pairingIDForWatchID:v10];

  if (!v11)
  {
    _StringGuts.grow(_:)(44);
    swift_bridgeObjectRelease();
    uint64_t v42 = 0xD00000000000001DLL;
    unint64_t v43 = 0x80000001007C6E80;
    v17._uint64_t countAndFlagsBits = a1;
    v17._object = a2;
    String.append(_:)(v17);
    unint64_t v18 = 0xE400000000000000;
    v19._uint64_t countAndFlagsBits = 544432416;
    v19._object = (void *)0xE400000000000000;
    String.append(_:)(v19);
    char v20 = sub_1005097B4(a3);
    BOOL v21 = (v20 & 1) == 0;
    if (v20) {
      uint64_t v22 = 7955787;
    }
    else {
      uint64_t v22 = 1801678668;
    }
    if (!v21) {
      unint64_t v18 = 0xE300000000000000;
    }
    unint64_t v23 = v18;
    String.append(_:)(*(Swift::String *)&v22);
    swift_bridgeObjectRelease();
    v24._uint64_t countAndFlagsBits = 0x65636976656420;
    v24._object = (void *)0xE700000000000000;
    String.append(_:)(v24);
    uint64_t v4 = v42;
    unint64_t v25 = v43;
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v26 = 1;
    *(void *)(v26 + 8) = v4;
    *(void *)(v26 + 16) = v25;
    swift_willThrow();
    goto LABEL_12;
  }
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v14 = v13;

  char v15 = sub_1005097B4(a3);
  sub_1006B0F4C(v15 & 1, a1, a2);
  if (v3)
  {
LABEL_4:
    swift_bridgeObjectRelease();
LABEL_12:

    return (uint64_t)v4;
  }
  id v28 = [objc_allocWithZone((Class)SDAuthenticationPairingDisable) init];
  if (!v28)
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v34 = 10;
    *(void *)(v34 + 8) = 0xD000000000000020;
    *(void *)(v34 + 16) = 0x80000001007C6EA0;
    swift_willThrow();
    goto LABEL_4;
  }
  if (!HIDWORD(a3))
  {
    NSString v29 = v28;
    [v28 setType:a3];
    NSString v30 = String._bridgeToObjectiveC()();
    [v29 setPairingID:v30];

    if (qword_10096A170 != -1) {
      swift_once();
    }
    uint64_t v31 = type metadata accessor for Logger();
    sub_10000B47C(v31, (uint64_t)qword_10097EAC0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v32))
    {
      os_log_type_t type = v32;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 136315394;
      uint64_t v42 = v41;
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_100254634(a1, (unint64_t)a2, (uint64_t *)&v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_100254634(v12, v14, (uint64_t *)&v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v4, type, "Sending disable message to %s with pairingID: %s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    id v35 = [v29 data];
    if (v35)
    {
      uint64_t v36 = v35;
      uint64_t v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v38 = v37;

      sub_10025ADCC((uint64_t)v4, v38);
      sub_100250CC4((uint64_t)v4, v38);
    }
    else
    {
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v39 = 10;
      *(void *)(v39 + 8) = 0xD000000000000028;
      *(void *)(v39 + 16) = 0x80000001007C6ED0;
      swift_willThrow();
    }
    return (uint64_t)v4;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_1006B1A7C()
{
  unint64_t result = qword_10097EBB8;
  if (!qword_10097EBB8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10097EBB8);
  }
  return result;
}

uint64_t sub_1006B1ABC(void *a1)
{
  id v2 = [self sharedManager];
  if (!v2)
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v12 = 10;
    *(void *)(v12 + 8) = 0xD000000000000025;
    *(void *)(v12 + 16) = 0x80000001007C6E50;
    swift_willThrow();
    return v13 & 1;
  }
  uint64_t v3 = v2;
  unint64_t v4 = sub_10050A7B4([a1 type]);
  if (v5)
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v14 = 10;
    *(void *)(v14 + 8) = 0xD00000000000001CLL;
    *(void *)(v14 + 16) = 0x80000001007C70B0;
    swift_willThrow();

    return v13 & 1;
  }
  char v6 = sub_1005097B4(v4);
  NSString v7 = String._bridgeToObjectiveC()();
  if (v6)
  {
    id v15 = [v3 keyPairingIDForDeviceID:v7];

    if (v15)
    {
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v11 = v16;
    }
    else
    {
      uint64_t v9 = 0;
      unint64_t v11 = 0;
    }
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [v3 pairingIDForWatchID:v17];

    if (v18)
    {
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v21 = v20;

      if (v11)
      {
LABEL_14:
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v19 = 0;
      unint64_t v21 = 0;
      if (v11) {
        goto LABEL_14;
      }
    }
    uint64_t v9 = v19;
    unint64_t v11 = v21;
    goto LABEL_17;
  }
  id v8 = [v3 pairingIDForWatchID:v7];

  if (v8)
  {
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    unint64_t v11 = 0;
  }
LABEL_17:
  id v22 = [a1 pairingID];
  if (!v22)
  {
    if (v11) {
      goto LABEL_24;
    }
LABEL_29:
    if (qword_10096A170 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_10000B47C(v29, (uint64_t)qword_10097EAC0);
    NSString v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v30, v31))
    {
      os_log_type_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Successfully matched pairing key for key in aks manager", v32, 2u);
      swift_slowDealloc();
    }

    char v13 = 1;
    return v13 & 1;
  }
  unint64_t v23 = v22;
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  if (!v11)
  {
    if (v26)
    {
      swift_bridgeObjectRelease();
      int v27 = 1;
      goto LABEL_34;
    }
    goto LABEL_29;
  }
  if (!v26)
  {
LABEL_24:
    int v27 = 0;
    goto LABEL_34;
  }
  if (v9 == v24 && v11 == v26)
  {
    swift_bridgeObjectRelease();
LABEL_28:
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  int v27 = 0;
  if (v28) {
    goto LABEL_28;
  }
LABEL_34:
  uint64_t v45 = v9;
  if (qword_10096A170 != -1) {
    swift_once();
  }
  uint64_t v33 = type metadata accessor for Logger();
  sub_10000B47C(v33, (uint64_t)qword_10097EAC0);
  swift_bridgeObjectRetain();
  id v34 = a1;
  id v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 136315394;
    unint64_t v38 = v11;
    if (v27)
    {
      uint64_t v45 = 0xD000000000000015;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v38 = 0x80000001007B7770;
    }
    swift_bridgeObjectRetain();
    sub_100254634(v45, v38, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2080;
    id v39 = [v34 pairingID];
    if (v39)
    {
      unint64_t v40 = v39;
      unint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v43 = v42;
    }
    else
    {
      unint64_t v41 = 0xD000000000000015;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v43 = 0x80000001007B7770;
    }
    sub_100254634(v41, v43, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Not disabling (local pairingID: %s, received pairingID: %s)", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  char v13 = 0;
  return v13 & 1;
}

void sub_1006B210C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_1006B2178()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097EBD0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097EBD0);
  if (qword_100969CB0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994660);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void *sub_1006B2240()
{
  unint64_t result = [v0 retrievePairedPeers];
  if (!result) {
    goto LABEL_33;
  }
  uint64_t v2 = result;
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v4 = (unint64_t)sub_10045F1A0(v3);
  swift_bridgeObjectRelease();
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v5 = (uint64_t)result;
    if (!result) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t result = (void *)swift_bridgeObjectRetain();
    if (!v5) {
      goto LABEL_17;
    }
  }
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v4 + 8 * i + 32);
      }
      id v8 = v7;
      self;
      if (swift_dynamicCastObjCClass())
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
      }
    }
LABEL_17:
    swift_bridgeObjectRelease();
    unint64_t result = (void *)swift_bridgeObjectRelease();
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      unint64_t result = (void *)swift_bridgeObjectRelease();
      if (v9)
      {
LABEL_19:
        if (v9 >= 1)
        {
          for (uint64_t j = 0; j != v9; ++j)
          {
            if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
              id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v11 = (id)_swiftEmptyArrayStorage[j + 4];
            }
            uint64_t v12 = v11;
            NSString v13 = String._bridgeToObjectiveC()();
            unsigned int v14 = [v12 hasTag:v13];

            if (v14)
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
            }
            else
            {
            }
          }
          goto LABEL_30;
        }
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v9 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v9) {
        goto LABEL_19;
      }
    }
LABEL_30:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

id sub_1006B2524()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for SDB389SetupAgent()) init];
  static SDB389SetupAgent.shared = (uint64_t)result;
  return result;
}

uint64_t *SDB389SetupAgent.shared.unsafeMutableAddressor()
{
  if (qword_10096A180 != -1) {
    swift_once();
  }
  return &static SDB389SetupAgent.shared;
}

id static SDB389SetupAgent.shared.getter()
{
  if (qword_10096A180 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static SDB389SetupAgent.shared;

  return v0;
}

void *SDB389SetupAgent.queue.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue);
  id v2 = v1;
  return v1;
}

id sub_1006B2698()
{
  *(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_alertHandle] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_currentB389] = 0;
  v0[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_activated] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcResponseHandler];
  *uint64_t v1 = 0;
  v1[1] = 0;
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue;
  uint64_t v3 = v0;
  *(void *)&v0[v2] = (id)CUMainQueue();
  *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCAgent] = 0;
  *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCCnx] = 0;

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for SDB389SetupAgent();
  return [super init];
}

Swift::Void __swiftcall SDB389SetupAgent.activate()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  objc_super v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A178 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000B47C(v10, (uint64_t)qword_10097EBD0);
  id v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    NSString v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Activate called.", v13, 2u);
    swift_slowDealloc();
  }

  if (*(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue])
  {
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v1;
    aBlock[4] = sub_1006B3058;
    aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100296520;
    aBlock[3] = &unk_1008E5420;
    id v15 = _Block_copy(aBlock);
    unint64_t v16 = v1;
    static DispatchQoS.unspecified.getter();
    v17[1] = _swiftEmptyArrayStorage;
    sub_1006BA190((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002B4B9C();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_1006B2AD4(unsigned char *a1)
{
  if (qword_10096A178 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097EBD0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    objc_super v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)objc_super v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Activate in queue...", v5, 2u);
    swift_slowDealloc();
  }

  if (a1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_activated])
  {
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Already activated...", v7, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    a1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_activated] = 1;
    if (IsAppleInternalBuild())
    {
      uint64_t v8 = self;
      id v9 = [v8 defaultCenter];
      NSString v10 = String._bridgeToObjectiveC()();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = a1;
      id v35 = sub_1006BA7DC;
      uint64_t v36 = v11;
      unint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v32 = 1107296256;
      uint64_t v33 = sub_10061C838;
      id v34 = &unk_1008E57E0;
      os_log_type_t v12 = _Block_copy(&aBlock);
      NSString v13 = a1;
      swift_release();
      id v14 = [v9 addObserverForName:v10 object:0 queue:0 usingBlock:v12];
      _Block_release(v12);
      swift_unknownObjectRelease();

      id v15 = [v8 defaultCenter];
      NSString v16 = String._bridgeToObjectiveC()();
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v13;
      id v35 = sub_1006BA7E4;
      uint64_t v36 = v17;
      unint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v32 = 1107296256;
      uint64_t v33 = sub_10061C838;
      id v34 = &unk_1008E5830;
      id v18 = _Block_copy(&aBlock);
      uint64_t v19 = v13;
      swift_release();
      id v20 = [v15 addObserverForName:v16 object:0 queue:0 usingBlock:v18];
      _Block_release(v18);
      swift_unknownObjectRelease();

      id v21 = [v8 defaultCenter];
      NSString v22 = String._bridgeToObjectiveC()();
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v19;
      id v35 = sub_1006BA824;
      uint64_t v36 = v23;
      unint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v32 = 1107296256;
      uint64_t v33 = sub_10061C838;
      id v34 = &unk_1008E5880;
      uint64_t v24 = _Block_copy(&aBlock);
      uint64_t v25 = v19;
      swift_release();
      id v26 = [v21 addObserverForName:v22 object:0 queue:0 usingBlock:v24];
      _Block_release(v24);
      swift_unknownObjectRelease();
    }
    int v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Activated!", v29, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1006B3020()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1006B3058()
{
  sub_1006B2AD4(*(unsigned char **)(v0 + 16));
}

uint64_t sub_1006B3060(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1006B3070()
{
  return swift_release();
}

id sub_1006B3078(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  objc_super v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  NSString v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v15 = (char *)&v23 - v14;
  uint64_t v16 = *(void *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue);
  id result = [objc_allocWithZone((Class)CBCentralManager) initWithDelegate:0 queue:v16];
  if (v16)
  {
    id v18 = result;
    static DispatchTime.now()();
    + infix(_:_:)();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v23 = v10 + 8;
    uint64_t v24 = v19;
    v19(v13, v9);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v18;
    aBlock[4] = sub_1006BA8B4;
    aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100296520;
    aBlock[3] = &unk_1008E5970;
    id v21 = _Block_copy(aBlock);
    id v22 = v18;
    static DispatchQoS.unspecified.getter();
    os_log_type_t v28 = _swiftEmptyArrayStorage;
    sub_1006BA190((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002B4B9C();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v3);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v26);
    v24(v15, v9);
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1006B3434(void *a1)
{
  id v2 = [a1 sharedPairingAgent];
  if (!v2) {
    goto LABEL_20;
  }
  uint64_t v3 = v2;
  unint64_t v4 = (unint64_t)sub_1006B2240();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v5) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v5) {
      goto LABEL_11;
    }
  }
  if (v5 < 1)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(v4 + 8 * i + 32);
    }
    uint64_t v8 = v7;
    [v3 unpairPeer:v7];
  }
LABEL_11:
  swift_bridgeObjectRelease();
  [self sleepForTimeInterval:2.0];
  [a1 setDelegate:0];
  if (qword_10096A178 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000B47C(v9, (uint64_t)qword_10097EBD0);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v10, "sharing.unpairAllB389", v11, 2u);
    swift_slowDealloc();
    uint64_t v12 = v3;
  }
  else
  {
    uint64_t v12 = oslog;
    osos_log_t log = v3;
  }
}

void sub_1006B3658()
{
  id v1 = [self sharedNearbyAgent];
  id v2 = [objc_allocWithZone((Class)SFDevice) init];
  id v3 = [v1 bleProximityRSSIThresholdForType:8 device:v2];

  unint64_t v4 = (int *)type metadata accessor for B389PresentationConfig(0);
  *(void *)(v0 + v4[11]) = v3;
  uint64_t v5 = self;
  [v5 b389MultiDiscoveryInstructionsDelay];
  uint64_t v6 = v0 + v4[12];
  *(void *)uint64_t v6 = v7;
  *(unsigned char *)(v6 + 8) = 0;
  id v8 = [v5 sharedMonitor];
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = [v8 meCard];

    if (v10)
    {
      id v11 = [v10 givenName];

      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      id v15 = (uint64_t *)(v0 + v4[13]);
      swift_bridgeObjectRelease();
      *id v15 = v12;
      v15[1] = v14;
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1006B37B4(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v19[0] - 8);
  uint64_t result = __chkstk_darwin(v19[0]);
  id v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue])
  {
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a2;
    aBlock[4] = a4;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100296520;
    aBlock[3] = a5;
    uint64_t v17 = _Block_copy(aBlock);
    id v18 = a2;
    static DispatchQoS.unspecified.getter();
    v19[1] = _swiftEmptyArrayStorage;
    sub_1006BA190((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002B4B9C();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, void))(v12 + 8))(v15, v19[0]);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006B3A48(uint64_t a1, const char *a2, char a3)
{
  uint64_t v5 = (int *)type metadata accessor for B389PresentationConfig(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A178 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000B47C(v8, (uint64_t)qword_10097EBD0);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, a2, v11, 2u);
    swift_slowDealloc();
  }

  v7[v5[6]] = a3;
  type metadata accessor for B389PresentationConfig.Mode(0);
  swift_storeEnumTagMultiPayload();
  *(_DWORD *)uint64_t v7 = 21760;
  *((void *)v7 + 1) = 0x2C31676154726941;
  *((void *)v7 + 2) = 0xE900000000000031;
  *(_DWORD *)&v7[v5[7]] = 0;
  v7[v5[8]] = 0;
  v7[v5[9]] = 0;
  v7[v5[10]] = 0;
  *(void *)&v7[v5[11]] = -50;
  uint64_t v12 = &v7[v5[12]];
  *(void *)uint64_t v12 = 0;
  v12[8] = 1;
  uint64_t v13 = &v7[v5[13]];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  *(_OWORD *)&v7[v5[14]] = xmmword_100770AE0;
  sub_1006B3658();
  sub_1006B4DFC((uint64_t)v7);
  return sub_1006BA77C((uint64_t)v7, type metadata accessor for B389PresentationConfig);
}

void SDB389SetupAgent.advertisingB389Found(_:)(void *a1)
{
  id v2 = (int *)type metadata accessor for B389PresentationConfig(0);
  __chkstk_darwin(v2);
  unint64_t v4 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v88 - v13;
  id v15 = [a1 identifier];
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v97 = v14;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v17(v7, v12, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      v17(v97, v7, v8);
      id v18 = [a1 bleDevice];
      if (v18)
      {
        uint64_t v19 = v18;
        id v20 = [v18 advertisementFields];
        if (v20)
        {
          id v21 = v20;
          uint64_t v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          v98[0] = 6580592;
          v98[1] = 0xE300000000000000;
          AnyHashable.init<A>(_:)();
          if (*(void *)(v22 + 16) && (unint64_t v23 = sub_100583878((uint64_t)v99), (v24 & 1) != 0))
          {
            sub_10024D2D4(*(void *)(v22 + 56) + 32 * v23, (uint64_t)&v100);
          }
          else
          {
            long long v100 = 0u;
            long long v101 = 0u;
          }
          sub_10025B0A8((uint64_t)v99);
          if (*((void *)&v101 + 1))
          {
            if (swift_dynamicCast())
            {
              int v35 = v98[0];
              v98[0] = 0x6C65646F6DLL;
              v98[1] = 0xE500000000000000;
              AnyHashable.init<A>(_:)();
              if (*(void *)(v22 + 16) && (unint64_t v36 = sub_100583878((uint64_t)v99), (v37 & 1) != 0))
              {
                sub_10024D2D4(*(void *)(v22 + 56) + 32 * v36, (uint64_t)&v100);
              }
              else
              {
                long long v100 = 0u;
                long long v101 = 0u;
              }
              sub_10025B0A8((uint64_t)v99);
              if (*((void *)&v101 + 1))
              {
                if (swift_dynamicCast())
                {
                  uint64_t v94 = (uint8_t *)v98[0];
                  long long v95 = (char *)v98[1];
                  v98[0] = 1396863855;
                  v98[1] = 0xE400000000000000;
                  AnyHashable.init<A>(_:)();
                  if (*(void *)(v22 + 16) && (unint64_t v49 = sub_100583878((uint64_t)v99), (v50 & 1) != 0))
                  {
                    sub_10024D2D4(*(void *)(v22 + 56) + 32 * v49, (uint64_t)&v100);
                  }
                  else
                  {
                    long long v100 = 0u;
                    long long v101 = 0u;
                  }
                  sub_10025B0A8((uint64_t)v99);
                  if (*((void *)&v101 + 1))
                  {
                    if (swift_dynamicCast())
                    {
                      int v93 = LOBYTE(v98[0]);
                      v98[0] = 1816556399;
                      v98[1] = 0xE400000000000000;
                      AnyHashable.init<A>(_:)();
                      if (*(void *)(v22 + 16) && (unint64_t v58 = sub_100583878((uint64_t)v99), (v59 & 1) != 0))
                      {
                        sub_10024D2D4(*(void *)(v22 + 56) + 32 * v58, (uint64_t)&v100);
                      }
                      else
                      {
                        long long v100 = 0u;
                        long long v101 = 0u;
                      }
                      sub_10025B0A8((uint64_t)v99);
                      if (*((void *)&v101 + 1))
                      {
                        if (swift_dynamicCast())
                        {
                          unsigned int v90 = v98[0];
                          strcpy((char *)v98, "engravingData");
                          HIWORD(v98[1]) = -4864;
                          AnyHashable.init<A>(_:)();
                          if (*(void *)(v22 + 16) && (unint64_t v64 = sub_100583878((uint64_t)v99), (v65 & 1) != 0))
                          {
                            sub_10024D2D4(*(void *)(v22 + 56) + 32 * v64, (uint64_t)&v100);
                          }
                          else
                          {
                            long long v100 = 0u;
                            long long v101 = 0u;
                          }
                          sub_10025B0A8((uint64_t)v99);
                          id v96 = v19;
                          if (*((void *)&v101 + 1))
                          {
                            if (swift_dynamicCast())
                            {
                              os_log_t v92 = v98[0];
                              unint64_t v70 = v98[1];
                              goto LABEL_86;
                            }
                          }
                          else
                          {
                            sub_10000A7E8((uint64_t)&v100, (uint64_t *)&unk_10096AC20);
                          }
                          if (qword_10096A178 != -1) {
                            swift_once();
                          }
                          uint64_t v71 = type metadata accessor for Logger();
                          sub_10000B47C(v71, (uint64_t)qword_10097EBD0);
                          uint64_t v72 = Logger.logObject.getter();
                          os_log_type_t v73 = static os_log_type_t.default.getter();
                          if (os_log_type_enabled(v72, v73))
                          {
                            long long v74 = (uint8_t *)swift_slowAlloc();
                            os_log_t v92 = v72;
                            *(_WORD *)long long v74 = 0;
                            _os_log_impl((void *)&_mh_execute_header, v72, v73, "bleDevice does not have engraving data", v74, 2u);
                            swift_slowDealloc();
                          }
                          else
                          {
                          }
                          os_log_t v92 = 0;
                          unint64_t v70 = 0xF000000000000000;
LABEL_86:
                          unint64_t v91 = v70;
                          *(void *)&long long v100 = 1816359791;
                          *((void *)&v100 + 1) = 0xE400000000000000;
                          AnyHashable.init<A>(_:)();
                          if (*(void *)(v22 + 16) && (unint64_t v75 = sub_100583878((uint64_t)v99), (v76 & 1) != 0))
                          {
                            sub_10024D2D4(*(void *)(v22 + 56) + 32 * v75, (uint64_t)&v100);
                          }
                          else
                          {
                            long long v100 = 0u;
                            long long v101 = 0u;
                          }
                          swift_bridgeObjectRelease();
                          sub_10025B0A8((uint64_t)v99);
                          if (*((void *)&v101 + 1))
                          {
                            if (swift_dynamicCast())
                            {
                              int v77 = v98[0];
LABEL_95:
                              if ((v90 & 0x20) != 0) {
                                int v78 = 99;
                              }
                              else {
                                int v78 = v77;
                              }
                              char v79 = v93;
                              BOOL v89 = (v93 & 0xFE) == 2;
                              v90 &= 0x20u;
                              uint64_t v80 = &v4[v2[6]];
                              uint64_t v81 = *(int *)(sub_10000A844(&qword_10096D228) + 48);
                              (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v80, v97, v8);
                              v80[v81] = 0;
                              type metadata accessor for B389PresentationConfig.Mode(0);
                              swift_storeEnumTagMultiPayload();
                              *(_DWORD *)unint64_t v4 = v35;
                              uint64_t v82 = v95;
                              *((void *)v4 + 1) = v94;
                              *((void *)v4 + 2) = v82;
                              *(_DWORD *)&v4[v2[7]] = v78;
                              v4[v2[8]] = v90 >> 5;
                              v4[v2[9]] = v79;
                              v4[v2[10]] = v89;
                              *(void *)&v4[v2[11]] = -50;
                              uint64_t v83 = &v4[v2[12]];
                              *(void *)uint64_t v83 = 0;
                              v83[8] = 1;
                              unint64_t v84 = &v4[v2[13]];
                              *(void *)unint64_t v84 = 0;
                              *((void *)v84 + 1) = 0;
                              unint64_t v85 = &v4[v2[14]];
                              unint64_t v87 = v91;
                              uint64_t v86 = (uint64_t)v92;
                              *(void *)unint64_t v85 = v92;
                              *((void *)v85 + 1) = v87;
                              sub_100278C78(v86, v87);
                              sub_1006B3658();
                              sub_1006B4DFC((uint64_t)v4);

                              sub_100250CB0(v86, v87);
                              sub_1006BA77C((uint64_t)v4, type metadata accessor for B389PresentationConfig);
                              goto LABEL_74;
                            }
                          }
                          else
                          {
                            sub_10000A7E8((uint64_t)&v100, (uint64_t *)&unk_10096AC20);
                          }
                          int v77 = 0;
                          goto LABEL_95;
                        }
                        swift_bridgeObjectRelease();
                      }
                      else
                      {
                        swift_bridgeObjectRelease();
                        sub_10000A7E8((uint64_t)&v100, (uint64_t *)&unk_10096AC20);
                      }
                      if (qword_10096A178 != -1) {
                        swift_once();
                      }
                      uint64_t v66 = type metadata accessor for Logger();
                      sub_10000B47C(v66, (uint64_t)qword_10097EBD0);
                      swift_bridgeObjectRetain();
                      unint64_t v43 = Logger.logObject.getter();
                      os_log_type_t v52 = static os_log_type_t.error.getter();
                      if (os_log_type_enabled(v43, v52))
                      {
                        uint64_t v53 = (uint8_t *)swift_slowAlloc();
                        v99[0] = swift_slowAlloc();
                        id v96 = v19;
                        *(_DWORD *)uint64_t v53 = 136315138;
                        uint64_t v94 = v53 + 4;
                        swift_bridgeObjectRetain();
                        long long v95 = (char *)&type metadata for Any + 8;
                        uint64_t v67 = Dictionary.description.getter();
                        unint64_t v69 = v68;
                        swift_bridgeObjectRelease();
                        *(void *)&long long v100 = sub_100254634(v67, v69, v99);
                        UnsafeMutableRawBufferPointer.copyMemory(from:)();
                        swift_bridgeObjectRelease_n();
                        swift_bridgeObjectRelease();
                        uint64_t v57 = "Couldn't decode flags from advertisementFields: %s";
                        goto LABEL_71;
                      }
LABEL_73:
                      swift_bridgeObjectRelease_n();

                      goto LABEL_74;
                    }
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                    sub_10000A7E8((uint64_t)&v100, (uint64_t *)&unk_10096AC20);
                  }
                  if (qword_10096A178 != -1) {
                    swift_once();
                  }
                  uint64_t v60 = type metadata accessor for Logger();
                  sub_10000B47C(v60, (uint64_t)qword_10097EBD0);
                  swift_bridgeObjectRetain();
                  unint64_t v43 = Logger.logObject.getter();
                  os_log_type_t v52 = static os_log_type_t.error.getter();
                  if (!os_log_type_enabled(v43, v52)) {
                    goto LABEL_73;
                  }
                  uint64_t v53 = (uint8_t *)swift_slowAlloc();
                  v99[0] = swift_slowAlloc();
                  id v96 = v19;
                  *(_DWORD *)uint64_t v53 = 136315138;
                  uint64_t v94 = v53 + 4;
                  swift_bridgeObjectRetain();
                  long long v95 = (char *)&type metadata for Any + 8;
                  uint64_t v61 = Dictionary.description.getter();
                  unint64_t v63 = v62;
                  swift_bridgeObjectRelease();
                  *(void *)&long long v100 = sub_100254634(v61, v63, v99);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease();
                  uint64_t v57 = "Couldn't decode battery state from advertisementFields: %s";
LABEL_71:
                  _os_log_impl((void *)&_mh_execute_header, v43, v52, v57, v53, 0xCu);
                  swift_arrayDestroy();
                  goto LABEL_72;
                }
              }
              else
              {
                sub_10000A7E8((uint64_t)&v100, (uint64_t *)&unk_10096AC20);
              }
              if (qword_10096A178 != -1) {
                swift_once();
              }
              uint64_t v51 = type metadata accessor for Logger();
              sub_10000B47C(v51, (uint64_t)qword_10097EBD0);
              swift_bridgeObjectRetain();
              unint64_t v43 = Logger.logObject.getter();
              os_log_type_t v52 = static os_log_type_t.error.getter();
              if (!os_log_type_enabled(v43, v52)) {
                goto LABEL_73;
              }
              uint64_t v53 = (uint8_t *)swift_slowAlloc();
              v99[0] = swift_slowAlloc();
              id v96 = v19;
              *(_DWORD *)uint64_t v53 = 136315138;
              uint64_t v94 = v53 + 4;
              swift_bridgeObjectRetain();
              long long v95 = (char *)&type metadata for Any + 8;
              uint64_t v54 = Dictionary.description.getter();
              unint64_t v56 = v55;
              swift_bridgeObjectRelease();
              *(void *)&long long v100 = sub_100254634(v54, v56, v99);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              uint64_t v57 = "Couldn't decode model from advertisementFields: %s";
              goto LABEL_71;
            }
          }
          else
          {
            sub_10000A7E8((uint64_t)&v100, (uint64_t *)&unk_10096AC20);
          }
          if (qword_10096A178 != -1) {
            swift_once();
          }
          uint64_t v42 = type metadata accessor for Logger();
          sub_10000B47C(v42, (uint64_t)qword_10097EBD0);
          swift_bridgeObjectRetain();
          unint64_t v43 = Logger.logObject.getter();
          os_log_type_t v44 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v43, v44))
          {
            uint64_t v45 = (uint8_t *)swift_slowAlloc();
            v99[0] = swift_slowAlloc();
            id v96 = v19;
            *(_DWORD *)uint64_t v45 = 136315138;
            uint64_t v94 = v45 + 4;
            swift_bridgeObjectRetain();
            long long v95 = (char *)&type metadata for Any + 8;
            uint64_t v46 = Dictionary.description.getter();
            unint64_t v48 = v47;
            swift_bridgeObjectRelease();
            *(void *)&long long v100 = sub_100254634(v46, v48, v99);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v43, v44, "Couldn't decode product ID from advertisementFields: %s", v45, 0xCu);
            swift_arrayDestroy();
LABEL_72:
            swift_slowDealloc();
            swift_slowDealloc();

LABEL_74:
            (*(void (**)(char *, uint64_t))(v9 + 8))(v97, v8);
            return;
          }
          goto LABEL_73;
        }
        uint64_t v33 = v97;
        if (qword_10096A178 != -1) {
          swift_once();
        }
        uint64_t v38 = type metadata accessor for Logger();
        sub_10000B47C(v38, (uint64_t)qword_10097EBD0);
        id v39 = Logger.logObject.getter();
        os_log_type_t v40 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v39, v40))
        {
          unint64_t v41 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v41 = 0;
          _os_log_impl((void *)&_mh_execute_header, v39, v40, "advertisementFields = nil", v41, 2u);
          swift_slowDealloc();
        }
      }
      else
      {
        if (qword_10096A178 != -1) {
          swift_once();
        }
        uint64_t v29 = type metadata accessor for Logger();
        sub_10000B47C(v29, (uint64_t)qword_10097EBD0);
        NSString v30 = Logger.logObject.getter();
        os_log_type_t v31 = static os_log_type_t.error.getter();
        BOOL v32 = os_log_type_enabled(v30, v31);
        uint64_t v33 = v97;
        if (v32)
        {
          id v34 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v34 = 0;
          _os_log_impl((void *)&_mh_execute_header, v30, v31, "bleDevice = nil", v34, 2u);
          swift_slowDealloc();
        }
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v33, v8);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  sub_10000A7E8((uint64_t)v7, &qword_100974EA0);
  if (qword_10096A178 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  sub_10000B47C(v25, (uint64_t)qword_10097EBD0);
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v26, v27))
  {
    os_log_type_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "advertisingB389Found with nil UUID", v28, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1006B4DFC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v19 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for B389PresentationConfig(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t result = __chkstk_darwin(v9 - 8);
  if (*(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue])
  {
    sub_1006BA714(a1, (uint64_t)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for B389PresentationConfig);
    unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v1;
    sub_1006BA440((uint64_t)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
    aBlock[4] = sub_1006BA4A4;
    aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100296520;
    aBlock[3] = &unk_1008E5740;
    id v15 = _Block_copy(aBlock);
    uint64_t v16 = v1;
    static DispatchQoS.unspecified.getter();
    id v20 = _swiftEmptyArrayStorage;
    sub_1006BA190((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002B4B9C();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v3);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v18);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1006B5150(char *a1, NSObject *a2)
{
  os_log_t v65 = a2;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v63 = *(void *)(v3 - 8);
  uint64_t v64 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void (**)(void, void))(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v61 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v51 - v13;
  uint64_t v15 = type metadata accessor for B389PresentationConfig(0);
  uint64_t v16 = *(void *)(*(void *)(v15 - 8) + 64);
  uint64_t v17 = __chkstk_darwin(v15);
  __chkstk_darwin(v17);
  id v21 = (char *)&v51 - v20;
  if (a1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_activated] == 1)
  {
    uint64_t v55 = v19;
    uint64_t v56 = v18;
    id v60 = (id)v9;
    uint64_t v57 = v8;
    uint64_t v58 = v6;
    if (qword_10096A178 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_10000B47C(v22, (uint64_t)qword_10097EBD0);
    sub_1006BA714((uint64_t)v65, (uint64_t)v21, type metadata accessor for B389PresentationConfig);
    unint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    BOOL v25 = os_log_type_enabled(v23, v24);
    char v59 = v5;
    if (v25)
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v53 = v14;
      os_log_type_t v27 = (uint8_t *)v26;
      uint64_t v28 = swift_slowAlloc();
      uint64_t v54 = v10;
      aBlock[0] = v28;
      os_log_type_t v52 = a1;
      *(_DWORD *)os_log_type_t v27 = 136315138;
      uint64_t v29 = sub_1002C43EC();
      void aBlock[6] = sub_100254634(v29, v30, aBlock);
      a1 = v52;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1006BA77C((uint64_t)v21, type metadata accessor for B389PresentationConfig);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "advertisingB389Found: %s. Debouncing...", v27, 0xCu);
      swift_arrayDestroy();
      uint64_t v10 = v54;
      swift_slowDealloc();
      uint64_t v14 = v53;
      swift_slowDealloc();
    }
    else
    {
      sub_1006BA77C((uint64_t)v21, type metadata accessor for B389PresentationConfig);
    }

    id v35 = v60;
    os_log_t v36 = v65;
    uint64_t v37 = *(uint64_t *)((char *)&v65->isa + *(int *)(v15 + 44));
    type metadata accessor for SDB389BubbleMonitor();
    swift_allocObject();
    uint64_t v38 = sub_1002C2BD4(v37);
    id v39 = *(void **)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue];
    swift_beginAccess();
    os_log_type_t v40 = *(void **)(v38 + 24);
    *(void *)(v38 + 24) = v39;
    id v60 = v39;

    sub_1002C2C54((uint64_t)LongHash.storage.getter, 0);
    if (v39)
    {
      unint64_t v41 = v61;
      static DispatchTime.now()();
      [self b389MultiDiscoveryDebounce];
      + infix(_:_:)();
      uint64_t v54 = (void (*)(void, void))*((void *)v10 + 1);
      v54(v41, v35);
      uint64_t v42 = v56;
      sub_1006BA714((uint64_t)v36, v56, type metadata accessor for B389PresentationConfig);
      unint64_t v43 = (*(unsigned __int8 *)(v55 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
      uint64_t v44 = swift_allocObject();
      *(void *)(v44 + 16) = v38;
      sub_1006BA440(v42, v44 + v43);
      *(void *)(v44 + ((v16 + v43 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
      aBlock[4] = (uint64_t)sub_1006BA684;
      aBlock[5] = v44;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100296520;
      aBlock[3] = (uint64_t)&unk_1008E5790;
      uint64_t v45 = _Block_copy(aBlock);
      swift_retain();
      uint64_t v46 = a1;
      unint64_t v47 = v57;
      static DispatchQoS.unspecified.getter();
      uint64_t v66 = _swiftEmptyArrayStorage;
      sub_1006BA190((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10000A844((uint64_t *)&unk_10096C490);
      sub_1002B4B9C();
      id v48 = v35;
      unint64_t v49 = v59;
      uint64_t v50 = v64;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v45);
      swift_release();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v49, v50);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v47, v62);
      v54(v14, v48);
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    SDB389SetupAgent.activate()();
    if (qword_10096A178 != -1) {
      swift_once();
    }
    uint64_t v31 = type metadata accessor for Logger();
    sub_10000B47C(v31, (uint64_t)qword_10097EBD0);
    os_log_t v65 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v65, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v65, v32, "Device found, but agent not activated.", v33, 2u);
      swift_slowDealloc();
    }
    os_log_t v34 = v65;
  }
}

uint64_t sub_1006B5968(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for B389PresentationConfig.Mode(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for B389PresentationConfig(0);
  __chkstk_darwin(v7);
  uint64_t v9 = ((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  unint64_t v10 = *(void *)(*(void *)(a1 + 80) + 16);
  sub_1002C39CC();
  if (qword_10096A178 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10000B47C(v11, (uint64_t)qword_10097EBD0);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 134217984;
    unint64_t v20 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Debounce fired. Count: %ld", v14, 0xCu);
    swift_slowDealloc();
  }

  sub_1006BA714(a2, (uint64_t)v9, type metadata accessor for B389PresentationConfig);
  uint64_t v15 = (uint64_t)v9 + *(int *)(v7 + 24);
  sub_1006BA714(v15, (uint64_t)v6, type metadata accessor for B389PresentationConfig.Mode);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1006BA77C(v15, type metadata accessor for B389PresentationConfig.Mode);
    uint64_t v16 = *(int *)(sub_10000A844(&qword_10096D228) + 48);
    uint64_t v17 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v6, v17);
    *(unsigned char *)(v15 + v16) = v10 > 1;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_1006BA77C((uint64_t)v6, type metadata accessor for B389PresentationConfig.Mode);
  }
  if (LODWORD(v9->isa) == 21760)
  {
    sub_1006B7CF8(v9, 0, 0);
  }
  else
  {
    id v18 = [self sharedProximityPairingAgent];
    [v18 startSoftwareUpdateRequiredUI];
  }
  return sub_1006BA77C((uint64_t)v9, type metadata accessor for B389PresentationConfig);
}

uint64_t SDB389SetupAgent.advertisingB389Lost(_:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v19 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A844(&qword_100974EA0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t result = __chkstk_darwin(v9 - 8);
  if (*(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue])
  {
    sub_10043661C(a1, (uint64_t)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v1;
    sub_1005F7168((uint64_t)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
    aBlock[4] = sub_1006B9988;
    aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100296520;
    aBlock[3] = &unk_1008E5470;
    uint64_t v15 = _Block_copy(aBlock);
    uint64_t v16 = v1;
    static DispatchQoS.unspecified.getter();
    unint64_t v20 = _swiftEmptyArrayStorage;
    sub_1006BA190((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002B4B9C();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v3);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v18);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1006B6010(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_100974EA0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v19 - v8;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_activated) == 1)
  {
    if (qword_10096A178 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000B47C(v10, (uint64_t)qword_10097EBD0);
    sub_10043661C(a2, (uint64_t)v9);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      unint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)unint64_t v13 = 136315138;
      sub_10043661C((uint64_t)v9, (uint64_t)v7);
      uint64_t v14 = type metadata accessor for UUID();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v7, 1, v14) == 1)
      {
        sub_10000A7E8((uint64_t)v7, &qword_100974EA0);
        unint64_t v16 = 0x80000001007C7380;
        unint64_t v17 = 0xD000000000000012;
      }
      else
      {
        unint64_t v17 = UUID.description.getter();
        unint64_t v16 = v18;
        (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v14);
      }
      uint64_t v19 = sub_100254634(v17, v16, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000A7E8((uint64_t)v9, &qword_100974EA0);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Lost UUID: %s", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10000A7E8((uint64_t)v9, &qword_100974EA0);
    }
  }
}

id sub_1006B6420(uint64_t a1, void *a2)
{
  uint64_t v4 = (int *)type metadata accessor for B389PresentationConfig(0);
  __chkstk_darwin(v4);
  uint64_t v6 = ((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for OSSignpostID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = (id)b389_log();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  swift_unknownObjectRetain();
  OSSignpostID.init(log:object:)();
  static os_signpost_type_t.begin.getter();
  id result = (id)b389_log();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  os_log_type_t v12 = result;
  os_signpost(_:dso:log:name:signpostID:)();

  unint64_t v13 = *(void **)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig);
  *(void *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig) = a2;
  uint64_t v14 = a2;

  *(Class *)((char *)&v6->isa + v4[6]) = v14;
  type metadata accessor for B389PresentationConfig.Mode(0);
  swift_storeEnumTagMultiPayload();
  LODWORD(v6->isa) = 21760;
  v6[1].Class isa = (Class)0x2C31676154726941;
  v6[2].Class isa = (Class)0xE900000000000031;
  *(_DWORD *)((char *)&v6->isa + v4[7]) = 0;
  *((unsigned char *)&v6->isa + v4[8]) = 0;
  *((unsigned char *)&v6->isa + v4[9]) = 0;
  *((unsigned char *)&v6->isa + v4[10]) = 0;
  *(Class *)((char *)&v6->isa + v4[11]) = (Class)-50;
  uint64_t v15 = (char *)v6 + v4[12];
  *(void *)uint64_t v15 = 0;
  v15[8] = 1;
  unint64_t v16 = (Class *)((char *)&v6->isa + v4[13]);
  *unint64_t v16 = 0;
  v16[1] = 0;
  *(_OWORD *)((char *)&v6->isa + v4[14]) = xmmword_100770AE0;
  unint64_t v17 = v14;
  sub_1006B3658();
  sub_1006B7CF8(v6, 0, 0);
  static os_signpost_type_t.end.getter();
  id result = (id)b389_log();
  if (result)
  {
    unint64_t v18 = result;
    os_signpost(_:dso:log:name:signpostID:)();

    sub_1006BA77C((uint64_t)v6, type metadata accessor for B389PresentationConfig);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1006B6788(uint64_t a1, double a2, uint64_t a3, uint64_t a4)
{
  if (a1) {
    uint64_t v6 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, double))(a4 + 16))(a4, a2);
}

void sub_1006B685C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig];
  *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig] = a1;
  id v7 = a1;

  uint64_t v8 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCAgent;
  if (!*(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCAgent])
  {
    if (qword_10096A178 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000B47C(v9, (uint64_t)qword_10097EBD0);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "ensureNFCXPCStarted - initialize nfcXPCAgent", v12, 2u);
      swift_slowDealloc();
    }

    id v13 = [objc_allocWithZone((Class)CUXPCAgent) init];
    uint64_t v14 = *(void **)&v3[v8];
    *(void *)&v3[v8] = v13;
    id v15 = v13;

    if (*(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue])
    {
      [v15 setDispatchQueue:];
      NSString v16 = String._bridgeToObjectiveC()();
      [v15 setLabel:v16];

      unint64_t v17 = self;
      id v18 = [v17 interfaceWithProtocol:&OBJC_PROTOCOL___SDXPCClientInterface];
      [v15 setExportedInterface:v18];

      [v15 setExportedObject:v3];
      id v19 = [v17 interfaceWithProtocol:&OBJC_PROTOCOL___SFXPCB389NFCPromptConfigurationReceiving];
      [v15 setRemoteObjectInterface:v19];

      uint64_t v20 = (void *)swift_allocObject();
      void v20[2] = v3;
      v20[3] = a2;
      v20[4] = a3;
      uint64_t v37 = sub_1006BA284;
      uint64_t v38 = v20;
      id aBlock = _NSConcreteStackBlock;
      uint64_t v34 = 1107296256;
      id v35 = sub_1002670F0;
      os_log_t v36 = &unk_1008E5650;
      id v21 = _Block_copy(&aBlock);
      uint64_t v22 = v3;
      sub_1002CA420(a2);
      swift_release();
      [v15 setConnectionStartedHandler:v21];
      _Block_release(v21);
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v22;
      uint64_t v37 = sub_1006BA290;
      uint64_t v38 = (void *)v23;
      id aBlock = _NSConcreteStackBlock;
      uint64_t v34 = 1107296256;
      id v35 = sub_1002670F0;
      os_log_t v36 = &unk_1008E56A0;
      os_log_type_t v24 = _Block_copy(&aBlock);
      BOOL v25 = v22;
      swift_release();
      [v15 setConnectionEndedHandler:v24];
      _Block_release(v24);
      id aBlock = 0;
      if ([v15 activateDirectAndReturnError:&aBlock])
      {
        id v26 = aBlock;
LABEL_11:

        return;
      }
      id v27 = aBlock;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v28 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v28, v29))
      {
        unint64_t v30 = (uint8_t *)swift_slowAlloc();
        id aBlock = (id)swift_slowAlloc();
        *(_DWORD *)unint64_t v30 = 136315138;
        swift_getErrorValue();
        uint64_t v31 = Error.localizedDescription.getter();
        sub_100254634(v31, v32, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "Failed to activate: %s", v30, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        goto LABEL_11;
      }

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1006B6DD4(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  id v7 = *(void **)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCCnx];
  *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCCnx] = a1;
  id v8 = a1;

  if (qword_10096A178 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000B47C(v9, (uint64_t)qword_10097EBD0);
  uint64_t v10 = a2;
  os_log_type_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  id v13 = &unk_10097E000;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    id v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 138412290;
    NSString v16 = *(void **)&v10[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig];
    if (v16)
    {
      id v17 = v16;
      id v13 = (void *)&unk_10097E000;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v15 = v16;

    _os_log_impl((void *)&_mh_execute_header, v11, v12, "connectionStarted. pending: %@", v14, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v18 = *(void **)&v10[v13[385]];
  if (v18)
  {
    id v19 = v18;
    SDB389SetupAgent.updateNFCPromptConfig(_:responseHandler:)(v18, a3, a4);
  }
}

void sub_1006B7020(uint64_t a1, uint64_t a2)
{
  if (qword_10096A178 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000B47C(v3, (uint64_t)qword_10097EBD0);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "connectionEnded", v6, 2u);
    swift_slowDealloc();
  }

  id v7 = *(void **)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCCnx);
  *(void *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCCnx) = 0;
}

void SDB389SetupAgent.updateNFCPromptConfig(_:responseHandler:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v43 = a3;
  uint64_t v44 = a2;
  uint64_t v46 = type metadata accessor for OSSignpostID();
  uint64_t v6 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  id v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A178 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = sub_10000B47C(v9, (uint64_t)qword_10097EBD0);
  os_log_type_t v11 = a1;
  os_log_type_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v41[1] = v10;
    uint64_t v42 = v6;
    uint64_t v45 = v8;
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    id v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 138412290;
    if (a1)
    {
      id aBlock = v11;
      NSString v16 = v11;
    }
    else
    {
      id aBlock = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v15 = a1;

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "updateNFCPromptConfig: %@", v14, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v6 = v42;
    id v8 = v45;
  }
  else
  {
  }
  if (!(id)b389_log())
  {
    __break(1u);
LABEL_33:
    __break(1u);
  }
  swift_unknownObjectRetain();
  OSSignpostID.init(log:object:)();
  static os_signpost_type_t.begin.getter();
  id v17 = (id)b389_log();
  if (!v17) {
    goto LABEL_33;
  }
  id v18 = v17;
  os_signpost(_:dso:log:name:signpostID:)();

  sub_1006B685C(a1, 0, 0);
  id v19 = *(void **)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCCnx);
  if (v19)
  {
    uint64_t v51 = sub_1006B78D4;
    uint64_t v52 = 0;
    id aBlock = _NSConcreteStackBlock;
    uint64_t v48 = 1107296256;
    unint64_t v49 = sub_1006B210C;
    uint64_t v50 = &unk_1008E5498;
    uint64_t v20 = _Block_copy(&aBlock);
    id v21 = v19;
    id v22 = [v21 remoteObjectProxyWithErrorHandler:v20];
    _Block_release(v20);
    if ([v22 respondsToSelector:"b389NFCPromptUpdateConfiguration:"]) {
      [v22 b389NFCPromptUpdateConfiguration:v11];
    }
    static os_signpost_type_t.end.getter();
    id v23 = (id)b389_log();
    if (v23)
    {
      os_log_type_t v24 = v23;
      os_signpost(_:dso:log:name:signpostID:)();

      uint64_t v25 = v44;
      if (v44)
      {
        if ([v22 respondsToSelector:"setResponseHandler:"])
        {
          uint64_t v51 = (void (*)(uint64_t))v25;
          uint64_t v52 = v43;
          id aBlock = _NSConcreteStackBlock;
          uint64_t v48 = 1107296256;
          unint64_t v49 = sub_1006B7AF4;
          uint64_t v50 = &unk_1008E54E8;
          id v26 = _Block_copy(&aBlock);
          sub_1002CA420(v25);
          sub_1002CA420(v25);
          [(id)swift_unknownObjectRetain() setResponseHandler:v26];
          _Block_release(v26);
          swift_release();
          sub_1002CA430(v25);
          swift_unknownObjectRelease_n();

          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v46);
          return;
        }
        uint64_t v38 = *(void (**)(char *, uint64_t))(v6 + 8);
        swift_retain();
        v38(v8, v46);
        swift_unknownObjectRelease();
        uint64_t v39 = v25;
      }
      else
      {
        uint64_t v33 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcResponseHandler;
        uint64_t v34 = *(void *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcResponseHandler);
        if (!v34)
        {
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v46);

          swift_unknownObjectRelease();
          return;
        }
        id v35 = v8;
        uint64_t v36 = *(void *)(v33 + 8);
        if ([v22 respondsToSelector:"setResponseHandler:"])
        {
          uint64_t v51 = (void (*)(uint64_t))v34;
          uint64_t v52 = v36;
          id aBlock = _NSConcreteStackBlock;
          uint64_t v48 = 1107296256;
          unint64_t v49 = sub_1006B7AF4;
          uint64_t v50 = &unk_1008E54C0;
          uint64_t v37 = _Block_copy(&aBlock);
          sub_1002CA420(v34);
          swift_unknownObjectRetain();
          sub_1002CA420(v34);
          [v22 setResponseHandler:v37];
          _Block_release(v37);

          swift_release();
          sub_1002CA430(v34);
          swift_unknownObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v6 + 8))(v35, v46);
          return;
        }
        os_log_type_t v40 = *(void (**)(char *, uint64_t))(v6 + 8);
        swift_retain();
        v40(v35, v46);
        swift_unknownObjectRelease();
        uint64_t v39 = v34;
      }
      sub_1002CA430(v39);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v45 = v8;
    id v27 = v11;
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v28, v29))
    {
      unint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v30 = 138412290;
      if (a1)
      {
        id aBlock = v27;
        unint64_t v32 = v27;
      }
      else
      {
        id aBlock = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v31 = a1;

      _os_log_impl((void *)&_mh_execute_header, v28, v29, "No nfcXPCCnx to show config %@", v30, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v45, v46);
  }
}

void sub_1006B78D4(uint64_t a1)
{
  if (qword_10096A178 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097EBD0);
  swift_errorRetain();
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    if (a1)
    {
      swift_getErrorValue();
      unint64_t v5 = Error.localizedDescription.getter();
      unint64_t v7 = v6;
    }
    else
    {
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v7 = 0x80000001007B7770;
      unint64_t v5 = 0xD000000000000015;
    }
    sub_100254634(v5, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v3, "remoteObjectProxyWithErrorHandler failed in updateNFCPromptConfig. Error: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
}

void sub_1006B7AF4(uint64_t a1, void *a2, uint64_t a3, double a4)
{
  unint64_t v7 = *(void (**)(void *, uint64_t, double))(a1 + 32);
  swift_retain();
  id v8 = a2;
  v7(a2, a3, a4);
  swift_release();
}

Swift::Void __swiftcall SDB389SetupAgent.dismissNFCPrompt()()
{
  SDB389SetupAgent.updateNFCPromptConfig(_:responseHandler:)(0, 0, 0);
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig);
  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig) = 0;
}

void sub_1006B7CF8(NSObject *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (int *)type metadata accessor for B389PresentationConfig(0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  os_log_type_t v12 = (char *)&v86 - v11;
  os_log_type_t v13 = self;
  id v14 = [v13 sharedMonitor];
  if (!v14)
  {
    __break(1u);
    goto LABEL_45;
  }
  id v15 = v14;
  unsigned int v16 = [v14 deviceKeyBagUnlocked];

  if (!v16)
  {
    if (qword_10096A178 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_10000B47C(v26, (uint64_t)qword_10097EBD0);
    uint64_t v94 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v94, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v94, v27, "Device is locked, not showing pairing UI", v28, 2u);
      swift_slowDealloc();
    }
LABEL_23:
    unint64_t v47 = v94;

    return;
  }
  uint64_t v94 = a1;
  id v17 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_alertHandle);
  if (v17)
  {
    uint64_t v18 = qword_10096A178;
    id v19 = v17;
    if (v18 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_10000B47C(v20, (uint64_t)qword_10097EBD0);
    uint64_t v94 = v19;
    id v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      id v23 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v24 = (void *)swift_slowAlloc();
      *(_DWORD *)id v23 = 138412290;
      id v96 = v94;
      uint64_t v25 = v94;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *os_log_type_t v24 = v17;

      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Existing alert handle: %@", v23, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }

    goto LABEL_23;
  }
  uint64_t v88 = a2;
  uint64_t v89 = a3;
  uint64_t v91 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_alertHandle;
  uint64_t v92 = v3;
  int v93 = v10;
  uint64_t v98 = &type metadata for SharingFeatureFlags;
  unint64_t v99 = sub_1006BA13C();
  LOBYTE(v96) = 0;
  char v29 = isFeatureEnabled(_:)();
  sub_10024D338((uint64_t)&v96);
  if (v29) {
    uint64_t v30 = 0xD00000000000001DLL;
  }
  else {
    uint64_t v30 = 0xD00000000000001BLL;
  }
  if (v29) {
    uint64_t v31 = (void *)0x80000001007C7330;
  }
  else {
    uint64_t v31 = (void *)0x80000001007C72A0;
  }
  id v96 = 0;
  unint64_t v97 = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  id v96 = 0xD000000000000013;
  unint64_t v97 = 0x80000001007C72C0;
  v32._uint64_t countAndFlagsBits = v30;
  v32._object = v31;
  String.append(_:)(v32);
  swift_bridgeObjectRelease();
  id v33 = objc_allocWithZone((Class)SBSRemoteAlertDefinition);
  NSString v34 = String._bridgeToObjectiveC()();
  NSString v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v36 = [v33 initWithServiceName:v34 viewControllerClassName:v35];

  uint64_t v37 = &selRef_forceAWDLDeviceRefresh_;
  id v38 = [objc_allocWithZone((Class)SBSRemoteAlertConfigurationContext) init];
  if (qword_10096A178 != -1) {
    swift_once();
  }
  uint64_t v39 = type metadata accessor for Logger();
  sub_10000B47C(v39, (uint64_t)qword_10097EBD0);
  sub_1006BA714((uint64_t)v94, (uint64_t)v12, type metadata accessor for B389PresentationConfig);
  os_log_type_t v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.default.getter();
  BOOL v42 = os_log_type_enabled(v40, v41);
  id v90 = v38;
  if (v42)
  {
    uint64_t v43 = swift_slowAlloc();
    id v87 = v36;
    uint64_t v44 = (uint8_t *)v43;
    id v96 = swift_slowAlloc();
    *(_DWORD *)uint64_t v44 = 136315138;
    uint64_t v45 = sub_1002C43EC();
    uint64_t v95 = sub_100254634(v45, v46, (uint64_t *)&v96);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1006BA77C((uint64_t)v12, type metadata accessor for B389PresentationConfig);
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "showUI with options: %s", v44, 0xCu);
    swift_arrayDestroy();
    uint64_t v37 = &selRef_forceAWDLDeviceRefresh_;
    swift_slowDealloc();
    id v36 = v87;
    swift_slowDealloc();
  }
  else
  {
    sub_1006BA77C((uint64_t)v12, type metadata accessor for B389PresentationConfig);
  }

  uint64_t v48 = (uint64_t)v93;
  uint64_t v49 = v92;
  sub_1006BA714((uint64_t)v94, (uint64_t)v93, type metadata accessor for B389PresentationConfig);
  id v50 = [self sharedNearbyAgent];
  id v51 = [objc_allocWithZone((Class)SFDevice) v37[462]];
  id v52 = [v50 bleProximityRSSIThresholdForType:8 device:v51];

  *(void *)(v48 + v7[11]) = v52;
  [v13 b389MultiDiscoveryInstructionsDelay];
  uint64_t v53 = v48 + v7[12];
  *(void *)uint64_t v53 = v54;
  *(unsigned char *)(v53 + 8) = 0;
  id v55 = [v13 sharedMonitor];
  uint64_t v56 = v91;
  if (!v55)
  {
LABEL_45:
    __break(1u);
    swift_unexpectedError();
    __break(1u);
    return;
  }
  uint64_t v57 = v55;
  id v58 = [v55 meCard];

  if (v58)
  {
    id v59 = [v58 givenName];
    uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v62 = v61;
  }
  else
  {
    uint64_t v60 = 0;
    uint64_t v62 = 0;
  }
  uint64_t v63 = (uint64_t *)(v48 + v7[13]);
  swift_bridgeObjectRelease();
  *uint64_t v63 = v60;
  v63[1] = v62;
  uint64_t v64 = *(void **)(v49 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig);
  os_log_t v65 = v90;
  if (v64)
  {
    id v66 = v64;
    sub_1006B685C(v64, 0, 0);
    uint64_t v67 = *(void **)(v49 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCAgent);
    if (v67)
    {
      unint64_t v68 = v65;
      id v69 = [v67 listenerEndpoint];
      if (v69)
      {
        unint64_t v70 = v69;
        id v71 = [v69 _endpoint];
      }
      else
      {
        id v71 = 0;
      }
      os_log_t v65 = v68;
    }
    else
    {
      id v71 = 0;
    }
    [v65 setXpcEndpoint:v71];
    swift_unknownObjectRelease();
    uint64_t v72 = (uint64_t *)(v49 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcResponseHandler);
    uint64_t v73 = *(void *)(v49 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcResponseHandler);
    uint64_t v74 = v88;
    uint64_t v75 = v89;
    *uint64_t v72 = v88;
    v72[1] = v75;
    sub_1002CA420(v74);
    sub_1002CA430(v73);
  }
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  sub_1006BA190((unint64_t *)&unk_10097EC60, (void (*)(uint64_t))type metadata accessor for B389PresentationConfig);
  uint64_t v76 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  unint64_t v78 = v77;
  swift_release();
  sub_10000A844(&qword_100977F58);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
  id v96 = 0xD000000000000011;
  unint64_t v97 = 0x80000001007C7310;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 96) = &type metadata for Data;
  *(void *)(inited + 72) = v76;
  *(void *)(inited + 80) = v78;
  sub_10025ADCC(v76, v78);
  sub_10024592C(inited);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v65 setUserInfo:isa];

  id v81 = [self newHandleWithDefinition:v36 configurationContext:v65];
  uint64_t v82 = *(void **)(v49 + v56);
  *(void *)(v49 + v56) = v81;

  uint64_t v83 = *(void **)(v49 + v56);
  if (v83 && (objc_msgSend(v83, "sd_addObserver:", v49), (unint64_t v84 = *(void **)(v49 + v56)) != 0))
  {
    id v85 = v84;
    [v85 activateWithContext:0];

    sub_100250CC4(v76, v78);
  }
  else
  {

    sub_100250CC4(v76, v78);
  }

  sub_1006BA77C(v48, type metadata accessor for B389PresentationConfig);
}

id SDB389SetupAgent.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDB389SetupAgent();
  return [super dealloc];
}

uint64_t SDB389SetupAgent.remoteAlertHandleDidActivate(_:)(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue))
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a1;
    aBlock[4] = sub_1006B9CBC;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100296520;
    aBlock[3] = &unk_1008E5538;
    os_log_type_t v13 = _Block_copy(aBlock);
    id v14 = a1;
    static DispatchQoS.unspecified.getter();
    v15[1] = _swiftEmptyArrayStorage;
    sub_1006BA190((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002B4B9C();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v13);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1006B9078(void *a1)
{
  if (qword_10096A178 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097EBD0);
  id v8 = a1;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    unint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    id v7 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v6 = v8;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "remoteAlertHandleDidActivate: %@", v5, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void SDB389SetupAgent.remoteAlertHandle(_:didInvalidateWithError:)(uint64_t a1, uint64_t a2)
{
}

void sub_1006B92B4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_alertHandle);
  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_alertHandle) = 0;

  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_currentB389);
  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_currentB389) = 0;

  uint64_t v3 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCAgent;
  [*(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCAgent) invalidate];
  os_log_type_t v4 = *(void **)(v0 + v3);
  *(void *)(v0 + v3) = 0;

  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCCnx);
  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcXPCCnx) = 0;

  unint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig);
  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_nfcConfig) = 0;
}

void SDB389SetupAgent.remoteAlertHandleDidDeactivate(_:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v30 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A178 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10000B47C(v11, (uint64_t)qword_10097EBD0);
  id v12 = a1;
  os_log_type_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  BOOL v15 = os_log_type_enabled(v13, v14);
  char v29 = v10;
  if (v15)
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v26 = v2;
    id v17 = (uint8_t *)v16;
    uint64_t v25 = (void *)swift_slowAlloc();
    *(_DWORD *)id v17 = 138412290;
    uint64_t v27 = v8;
    aBlock[0] = v12;
    id v18 = v12;
    uint64_t v28 = v4;
    id v19 = v18;
    uint64_t v8 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v25 = v12;

    uint64_t v4 = v28;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "remoteAlertHandleDidDeactivate: %@", v17, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v26;
    swift_slowDealloc();
  }
  else
  {
  }
  if (*(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue])
  {
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v2;
    aBlock[4] = sub_1006BA8F8;
    aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100296520;
    aBlock[3] = &unk_1008E5588;
    id v21 = _Block_copy(aBlock);
    os_log_type_t v22 = v2;
    id v23 = v29;
    static DispatchQoS.unspecified.getter();
    uint64_t v31 = _swiftEmptyArrayStorage;
    sub_1006BA190((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002B4B9C();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v21);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v23, v7);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1006B9860()
{
  uint64_t v1 = *(void *)(sub_10000A844(&qword_100974EA0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);

  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_1006B9988()
{
  uint64_t v1 = *(void *)(sub_10000A844(&qword_100974EA0) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_1006B6010(v2, v3);
}

uint64_t _s16DaemoniOSLibrary16SDB389SetupAgentC23showNFCPromptWithConfig_15responseHandlerySo06SFB389G13ConfigurationC_ys5Error_pSg_SdSo0L11NFCResponseVtctF_0(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue])
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v1;
    *(void *)(v12 + 24) = a1;
    aBlock[4] = sub_1006BA2D8;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100296520;
    aBlock[3] = &unk_1008E56F0;
    os_log_type_t v13 = _Block_copy(aBlock);
    os_log_type_t v14 = v1;
    id v15 = a1;
    static DispatchQoS.unspecified.getter();
    v16[1] = _swiftEmptyArrayStorage;
    sub_1006BA190((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002B4B9C();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v13);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for SDB389SetupAgent()
{
  return self;
}

void sub_1006B9CBC()
{
  sub_1006B9078(*(void **)(v0 + 16));
}

void sub_1006B9CC4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v23 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A178 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000B47C(v9, (uint64_t)qword_10097EBD0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v24 = v6;
  if (v12)
  {
    uint64_t v22 = v3;
    os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v13 = 136315138;
    if (a1)
    {
      swift_getErrorValue();
      unint64_t v14 = Error.localizedDescription.getter();
      unint64_t v16 = v15;
    }
    else
    {
      uint64_t aBlock = 0;
      unint64_t v28 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v16 = 0x80000001007B7770;
      unint64_t v14 = 0xD000000000000015;
    }
    uint64_t aBlock = sub_100254634(v14, v16, (uint64_t *)&v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "remoteAlertHandleDidInvalidateWithError: %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v3 = v22;
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  id v17 = v25;
  if (*(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB389SetupAgent_queue])
  {
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v17;
    uint64_t v31 = sub_1006BA218;
    uint64_t v32 = v18;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    unint64_t v28 = 1107296256;
    char v29 = sub_100296520;
    uint64_t v30 = &unk_1008E5600;
    id v19 = _Block_copy(&aBlock);
    id v20 = v17;
    static DispatchQoS.unspecified.getter();
    uint64_t v26 = _swiftEmptyArrayStorage;
    sub_1006BA190((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002B4B9C();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v19);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v24);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1006BA13C()
{
  unint64_t result = qword_10097EC58;
  if (!qword_10097EC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EC58);
  }
  return result;
}

uint64_t sub_1006BA190(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006BA1D8()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1006BA210(uint64_t a1, uint64_t a2, double a3)
{
  sub_1006B6788(a1, a3, a2, *(void *)(v3 + 16));
}

void sub_1006BA218()
{
}

uint64_t sub_1006BA23C()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1006BA284(void *a1)
{
  sub_1006B6DD4(a1, *(char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_1006BA290(uint64_t a1)
{
  sub_1006B7020(a1, *(void *)(v1 + 16));
}

uint64_t sub_1006BA298()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1006BA2D8()
{
  return sub_1006B6420(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1006BA2E0()
{
  uint64_t v1 = type metadata accessor for B389PresentationConfig(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);

  swift_bridgeObjectRelease();
  uint64_t v5 = (id *)(v0 + v3 + *(int *)(v1 + 24));
  type metadata accessor for B389PresentationConfig.Mode(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(id *, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t *)(v0 + v3 + *(int *)(v1 + 56));
  unint64_t v9 = v8[1];
  if (v9 >> 60 != 15) {
    sub_100250CC4(*v8, v9);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1006BA440(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for B389PresentationConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1006BA4A4()
{
  uint64_t v1 = *(void *)(type metadata accessor for B389PresentationConfig(0) - 8);
  uint64_t v2 = *(char **)(v0 + 16);
  uint64_t v3 = (v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  sub_1006B5150(v2, v3);
}

uint64_t sub_1006BA508()
{
  uint64_t v1 = type metadata accessor for B389PresentationConfig(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v5 = (id *)(v0 + v3 + *(int *)(v1 + 24));
  type metadata accessor for B389PresentationConfig.Mode(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(id *, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t *)(v0 + v3 + *(int *)(v1 + 56));
  unint64_t v9 = v8[1];
  if (v9 >> 60 != 15) {
    sub_100250CC4(*v8, v9);
  }
  unint64_t v10 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = v10 + 8;

  return _swift_deallocObject(v0, v11, v2 | 7);
}

uint64_t sub_1006BA684()
{
  uint64_t v1 = *(void *)(type metadata accessor for B389PresentationConfig(0) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1006B5968(v2, v3);
}

uint64_t sub_1006BA714(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1006BA77C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_1006BA7DC(uint64_t a1)
{
  return sub_1006B3078(a1, *(void *)(v1 + 16));
}

uint64_t sub_1006BA7E4(uint64_t a1)
{
  return sub_1006B37B4(a1, *(char **)(v1 + 16), (uint64_t)&unk_1008E5908, (uint64_t)sub_1006BA88C, (uint64_t)&unk_1008E5920);
}

uint64_t sub_1006BA824(uint64_t a1)
{
  return sub_1006B37B4(a1, *(char **)(v1 + 16), (uint64_t)&unk_1008E58B8, (uint64_t)sub_1006BA864, (uint64_t)&unk_1008E58D0);
}

uint64_t sub_1006BA864()
{
  return sub_1006B3A48(*(void *)(v0 + 16), "sharing.fakeB389MultiUI", 1);
}

uint64_t sub_1006BA88C()
{
  return sub_1006B3A48(*(void *)(v0 + 16), "sharing.fakeB389UI", 0);
}

void sub_1006BA8B4()
{
  sub_1006B3434(*(void **)(v0 + 16));
}

uint64_t sub_1006BA9A8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097ECD0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097ECD0);
  if (qword_100969C68 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994588);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t type metadata accessor for SDAirDropAgentClientToken()
{
  return self;
}

uint64_t sub_1006BAEE0()
{
  return type metadata accessor for SDAirDropAgentClient();
}

uint64_t type metadata accessor for SDAirDropAgentClient()
{
  uint64_t result = qword_10097ED50;
  if (!qword_10097ED50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1006BAF34()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_1006BB038()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

id sub_1006BB070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  uint64_t v38 = a2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v37 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  unint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  os_log_type_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = v4;
  UUID.init()();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v14[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_id], v13, v10);
  *(void *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_client] = a1;
  swift_unknownObjectRetain();
  if (nw_agent_client_copy_parameters())
  {
    type metadata accessor for NWParameters();
    swift_unknownObjectRetain();
    NWParameters.__allocating_init(_:)();
    NWParameters.nw.getter();
    if (nw_parameters_get_attributed_bundle_identifier())
    {
      uint64_t v15 = String.init(cString:)();
      unint64_t v17 = v16;
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
      uint64_t v15 = 0;
      unint64_t v17 = 0xE000000000000000;
    }
    uint64_t v25 = (uint64_t *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_bundleID];
    uint64_t *v25 = v15;
    v25[1] = v17;
    NWParameters.nw.getter();
    int pid = nw_parameters_get_pid();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_10096A188 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_10000B47C(v18, (uint64_t)qword_10097ECD0);
    id v19 = v14;
    id v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v40 = v33;
      NSString v34 = ObjectType;
      *(_DWORD *)uint64_t v22 = 136315138;
      uint64_t v31 = v22 + 4;
      uint64_t v32 = v22;
      sub_100499968();
      uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v39 = sub_100254634(v23, v24, &v40);
      uint64_t ObjectType = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Unable to parse parameters for agent client %s", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    int pid = 0;
    uint64_t v27 = &v19[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_bundleID];
    *(void *)uint64_t v27 = 0;
    *((void *)v27 + 1) = 0xE000000000000000;
  }
  *(_DWORD *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid] = pid;
  unint64_t v28 = &v14[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_browseResponse];
  uint64_t v29 = v36;
  *(void *)unint64_t v28 = v35;
  *((void *)v28 + 1) = v29;
  swift_retain();
  Date.init()();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v14[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_startTime], v9, v37);
  v14[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_applicationServiceEndpointsOnly] = j__nw_browse_descriptor_get_discover_application_service_endpoints_only();

  v41.receiver = v14;
  v41.super_class = ObjectType;
  return [super init];
}

uint64_t sub_1006BB4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1006BB4C8()
{
  return swift_release();
}

ValueMetadata *_s14descr1008C9EA1V12FeatureFlagsVMa()
{
  return &_s14descr1008C9EA1V12FeatureFlagsVN;
}

uint64_t _s13HelloResponseVwCP(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)uint64_t result = v2;
  return result;
}

uint64_t _s13HelloResponseVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 254);
  }
  if (*(unsigned __int8 *)(a1 + 4) <= 2u) {
    int v3 = 2;
  }
  else {
    int v3 = *(unsigned __int8 *)(a1 + 4);
  }
  int v4 = v3 - 3;
  if (*(unsigned __int8 *)(a1 + 4) < 2u) {
    int v5 = -1;
  }
  else {
    int v5 = v4;
  }
  return (v5 + 1);
}

uint64_t _s13HelloResponseVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *_s13HelloResponseVMa()
{
  return &_s13HelloResponseVN;
}

void *sub_1006BB59C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for SFAirDrop.TransferIdentifier();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(_DWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 20));
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_1006BB670(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SFAirDrop.TransferIdentifier();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1006BB6D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t sub_1006BB758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1006BB7E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t sub_1006BB864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t sub_1006BB8E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006BB8FC);
}

uint64_t sub_1006BB8FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) <= 2u) {
      int v10 = 2;
    }
    else {
      int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    }
    unsigned int v11 = v10 - 2;
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) >= 2u) {
      return v11;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1006BB9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006BB9D8);
}

uint64_t sub_1006BB9D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
  }
  return result;
}

uint64_t _s12HelloRequestVMa()
{
  uint64_t result = qword_10097EDB8;
  if (!qword_10097EDB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1006BBAE0()
{
  uint64_t result = type metadata accessor for SFAirDrop.TransferIdentifier();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1006BBB84()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1006BBBE4()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1006BBC34(void *a1, int a2)
{
  int v18 = a2;
  uint64_t v3 = sub_10000A844(&qword_10097EED0);
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  __chkstk_darwin(v3);
  int v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000A844(&qword_10097EED8);
  uint64_t v6 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A844(&qword_10097EEE0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  sub_1006BDDCC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  os_log_type_t v13 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  if (v18)
  {
    char v20 = 1;
    sub_1006BDE20();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    char v19 = 0;
    sub_1006BDE74();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  }
  return (*v13)(v12, v9);
}

uint64_t sub_1006BBEE4()
{
  if (*v0) {
    return 0x6D79615072656570;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_1006BBF28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1006BCD80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1006BBF50(uint64_t a1)
{
  unint64_t v2 = sub_1006BDDCC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006BBF8C(uint64_t a1)
{
  unint64_t v2 = sub_1006BDDCC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006BBFC8(uint64_t a1)
{
  unint64_t v2 = sub_1006BDE20();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006BC004(uint64_t a1)
{
  unint64_t v2 = sub_1006BDE20();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006BC040(uint64_t a1)
{
  unint64_t v2 = sub_1006BDE74();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006BC07C(uint64_t a1)
{
  unint64_t v2 = sub_1006BDE74();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006BC0B8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1006BCE8C(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_1006BC0E8(void *a1)
{
  return sub_1006BBC34(a1, *v1);
}

uint64_t sub_1006BC104(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000A844(&qword_10097EE60);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10026BB6C(a1, a1[3]);
  sub_1006BD8E4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v13 = 0;
  type metadata accessor for SFAirDrop.TransferIdentifier();
  sub_1006BD9F8(&qword_100974D38);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v9 = _s12HelloRequestVMa();
    int v12 = *(_DWORD *)(v3 + *(int *)(v9 + 20));
    v11[7] = 1;
    sub_1006BD83C();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v11[6] = *(unsigned char *)(v3 + *(int *)(v9 + 24));
    v11[5] = 2;
    sub_1006BD890();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1006BC304@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v3 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v21 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v22 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10000A844(&qword_10097EE50);
  uint64_t v20 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s12HelloRequestVMa();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(int *)(v8 + 24);
  v10[v11] = 2;
  sub_10026BB6C(a1, a1[3]);
  sub_1006BD8E4();
  uint64_t v23 = v6;
  uint64_t v12 = v25;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v12) {
    return sub_10024D338((uint64_t)a1);
  }
  uint64_t v13 = v11;
  uint64_t v14 = v21;
  char v30 = 0;
  sub_1006BD9F8(&qword_100974D28);
  uint64_t v15 = v22;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v25 = v3;
  v16(v10, v15, v3);
  char v29 = 1;
  sub_1006BD794();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  *(_DWORD *)&v10[*(int *)(v7 + 20)] = v26;
  char v27 = 2;
  sub_1006BD7E8();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v24);
  v10[v13] = v28;
  sub_1006BD938((uint64_t)v10, v19);
  sub_10024D338((uint64_t)a1);
  return sub_1006BD99C((uint64_t)v10);
}

uint64_t sub_1006BC6A0()
{
  uint64_t v1 = 0x4665727574616566;
  if (*v0 != 1) {
    uint64_t v1 = 0x54747865746E6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705;
  }
}

uint64_t sub_1006BC700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1006BD2DC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1006BC728(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1006BC734(uint64_t a1)
{
  unint64_t v2 = sub_1006BD8E4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006BC770(uint64_t a1)
{
  unint64_t v2 = sub_1006BD8E4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006BC7AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1006BC304(a1, a2);
}

uint64_t sub_1006BC7C4(void *a1)
{
  return sub_1006BC104(a1);
}

uint64_t sub_1006BC7DC(uint64_t a1)
{
  _StringGuts.grow(_:)(16);
  v3._uint64_t countAndFlagsBits = 0x6572204F4C4C4548;
  v3._object = (void *)0xEE00207473657571;
  String.append(_:)(v3);
  uint64_t v7 = *(unsigned int *)(v1 + *(int *)(a1 + 20));
  v4._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  String.append(_:)(v5);
  return HIDWORD(v7);
}

uint64_t sub_1006BC8A0(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_10000A844(&qword_10097EE38);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10026BB6C(a1, a1[3]);
  sub_1006BD740();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  int v11 = a2;
  v10[11] = 0;
  sub_1006BD83C();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    v10[10] = BYTE4(a2);
    v10[9] = 1;
    sub_1006BD890();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1006BCA2C()
{
  if (*v0) {
    return 0x54747865746E6F63;
  }
  else {
    return 0x4665727574616566;
  }
}

uint64_t sub_1006BCA78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1006BD44C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1006BCAA0(uint64_t a1)
{
  unint64_t v2 = sub_1006BD740();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1006BCADC(uint64_t a1)
{
  unint64_t v2 = sub_1006BD740();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1006BCB18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1006BD570(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = result;
    *(unsigned char *)(a2 + 4) = BYTE4(result);
  }
  return result;
}

uint64_t sub_1006BCB4C(void *a1)
{
  return sub_1006BC8A0(a1, *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32));
}

uint64_t sub_1006BCB70()
{
  _StringGuts.grow(_:)(17);
  v0._uint64_t countAndFlagsBits = 0x6572204F4C4C4548;
  v0._object = (void *)0xEF2065736E6F7073;
  String.append(_:)(v0);
  v1._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  String.append(_:)(v2);
  return 0;
}

unint64_t sub_1006BCC24()
{
  unint64_t result = qword_10097EDF8;
  if (!qword_10097EDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EDF8);
  }
  return result;
}

unint64_t sub_1006BCC7C()
{
  unint64_t result = qword_10097EE00;
  if (!qword_10097EE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EE00);
  }
  return result;
}

unint64_t sub_1006BCCD4()
{
  unint64_t result = qword_10097EE08;
  if (!qword_10097EE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EE08);
  }
  return result;
}

unint64_t sub_1006BCD2C()
{
  unint64_t result = qword_10097EE10;
  if (!qword_10097EE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EE10);
  }
  return result;
}

uint64_t sub_1006BCD80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D79615072656570 && a2 == 0xEB00000000746E65)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1006BCE8C(uint64_t a1)
{
  uint64_t v2 = sub_10000A844(&qword_10097EEA0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A844(&qword_10097EEA8);
  uint64_t v25 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A844(&qword_10097EEB0);
  uint64_t v24 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  int v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C((void *)a1, *(void *)(a1 + 24));
  sub_1006BDDCC();
  uint64_t v12 = v26;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v13 = v25;
  uint64_t v21 = v6;
  uint64_t v26 = a1;
  uint64_t v14 = KeyedDecodingContainer.allKeys.getter();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v16 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v18 = v17;
    sub_10000A844(&qword_100978068);
    *uint64_t v18 = &_s14descr1008C9EA1V11ContextTypeON;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, enum case for DecodingError.typeMismatch(_:), v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
    a1 = v26;
LABEL_7:
    sub_10024D338(a1);
    return a1;
  }
  a1 = *(unsigned __int8 *)(v14 + 32);
  if (a1)
  {
    LODWORD(v25) = *(unsigned __int8 *)(v14 + 32);
    char v28 = 1;
    sub_1006BDE20();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    uint64_t v15 = v24;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v9);
    a1 = v25;
  }
  else
  {
    char v27 = 0;
    sub_1006BDE74();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    uint64_t v19 = v24;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
  }
  sub_10024D338(v26);
  return a1;
}

uint64_t sub_1006BD2DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4665727574616566 && a2 == 0xEC0000007367616CLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x54747865746E6F63 && a2 == 0xEB00000000657079)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1006BD44C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4665727574616566 && a2 == 0xEC0000007367616CLL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x54747865746E6F63 && a2 == 0xEB00000000657079)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1006BD570(void *a1)
{
  uint64_t v3 = sub_10000A844(&qword_10097EE18);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10026BB6C(a1, a1[3]);
  sub_1006BD740();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1) {
    return sub_10024D338((uint64_t)a1);
  }
  v10[11] = 0;
  sub_1006BD794();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v7 = v11;
  v10[9] = 1;
  sub_1006BD7E8();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v8 = v10[10];
  sub_10024D338((uint64_t)a1);
  return v7 | (v8 << 32);
}

unint64_t sub_1006BD740()
{
  unint64_t result = qword_10097EE20;
  if (!qword_10097EE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EE20);
  }
  return result;
}

unint64_t sub_1006BD794()
{
  unint64_t result = qword_10097EE28;
  if (!qword_10097EE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EE28);
  }
  return result;
}

unint64_t sub_1006BD7E8()
{
  unint64_t result = qword_10097EE30;
  if (!qword_10097EE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EE30);
  }
  return result;
}

unint64_t sub_1006BD83C()
{
  unint64_t result = qword_10097EE40;
  if (!qword_10097EE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EE40);
  }
  return result;
}

unint64_t sub_1006BD890()
{
  unint64_t result = qword_10097EE48;
  if (!qword_10097EE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EE48);
  }
  return result;
}

unint64_t sub_1006BD8E4()
{
  unint64_t result = qword_10097EE58;
  if (!qword_10097EE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EE58);
  }
  return result;
}

uint64_t sub_1006BD938(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12HelloRequestVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006BD99C(uint64_t a1)
{
  uint64_t v2 = _s12HelloRequestVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1006BD9F8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SFAirDrop.TransferIdentifier();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s12HelloRequestV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006BDB08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s12HelloRequestV10CodingKeysOMa()
{
  return &_s12HelloRequestV10CodingKeysON;
}

ValueMetadata *_s13HelloResponseV10CodingKeysOMa()
{
  return &_s13HelloResponseV10CodingKeysON;
}

ValueMetadata *_s14descr1008C9EA1V11ContextTypeOMa()
{
  return &_s14descr1008C9EA1V11ContextTypeON;
}

unint64_t sub_1006BDB68()
{
  unint64_t result = qword_10097EE68;
  if (!qword_10097EE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EE68);
  }
  return result;
}

unint64_t sub_1006BDBC0()
{
  unint64_t result = qword_10097EE70;
  if (!qword_10097EE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EE70);
  }
  return result;
}

unint64_t sub_1006BDC18()
{
  unint64_t result = qword_10097EE78;
  if (!qword_10097EE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EE78);
  }
  return result;
}

unint64_t sub_1006BDC70()
{
  unint64_t result = qword_10097EE80;
  if (!qword_10097EE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EE80);
  }
  return result;
}

unint64_t sub_1006BDCC8()
{
  unint64_t result = qword_10097EE88;
  if (!qword_10097EE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EE88);
  }
  return result;
}

unint64_t sub_1006BDD20()
{
  unint64_t result = qword_10097EE90;
  if (!qword_10097EE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EE90);
  }
  return result;
}

unint64_t sub_1006BDD78()
{
  unint64_t result = qword_10097EE98;
  if (!qword_10097EE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EE98);
  }
  return result;
}

unint64_t sub_1006BDDCC()
{
  unint64_t result = qword_10097EEB8;
  if (!qword_10097EEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EEB8);
  }
  return result;
}

unint64_t sub_1006BDE20()
{
  unint64_t result = qword_10097EEC0;
  if (!qword_10097EEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EEC0);
  }
  return result;
}

unint64_t sub_1006BDE74()
{
  unint64_t result = qword_10097EEC8;
  if (!qword_10097EEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EEC8);
  }
  return result;
}

unsigned char *_s14descr1008C9EA1V11ContextTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006BDF94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr1008C9EA1V11ContextTypeO10CodingKeysOMa()
{
  return &_s14descr1008C9EA1V11ContextTypeO10CodingKeysON;
}

ValueMetadata *_s14descr1008C9EA1V11ContextTypeO17UnknownCodingKeysOMa()
{
  return &_s14descr1008C9EA1V11ContextTypeO17UnknownCodingKeysON;
}

ValueMetadata *_s14descr1008C9EA1V11ContextTypeO21PeerPaymentCodingKeysOMa()
{
  return &_s14descr1008C9EA1V11ContextTypeO21PeerPaymentCodingKeysON;
}

unint64_t sub_1006BDFF0()
{
  unint64_t result = qword_10097EEE8;
  if (!qword_10097EEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EEE8);
  }
  return result;
}

unint64_t sub_1006BE048()
{
  unint64_t result = qword_10097EEF0;
  if (!qword_10097EEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EEF0);
  }
  return result;
}

unint64_t sub_1006BE0A0()
{
  unint64_t result = qword_10097EEF8;
  if (!qword_10097EEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EEF8);
  }
  return result;
}

unint64_t sub_1006BE0F8()
{
  unint64_t result = qword_10097EF00;
  if (!qword_10097EF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EF00);
  }
  return result;
}

unint64_t sub_1006BE150()
{
  unint64_t result = qword_10097EF08;
  if (!qword_10097EF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EF08);
  }
  return result;
}

unint64_t sub_1006BE1A8()
{
  unint64_t result = qword_10097EF10;
  if (!qword_10097EF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EF10);
  }
  return result;
}

unint64_t sub_1006BE200()
{
  unint64_t result = qword_10097EF18;
  if (!qword_10097EF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097EF18);
  }
  return result;
}

uint64_t sub_1006BE258()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_askRequest;
  uint64_t v2 = type metadata accessor for SFAirDropReceive.AskRequest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_10024D338(v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler);

  uint64_t v3 = v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  uint64_t v4 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  uint64_t v5 = v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_metrics;
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer.Metrics();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  sub_10024D338(v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager);
  sub_10000A7E8(v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateContinuation, &qword_1009785B8);
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1006BE3BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1006BE44C(a1, (uint64_t (*)(void))&type metadata accessor for SFAirDropReceive.Transfer.State, (void (*)(void))&SFAirDropReceive.Transfer.state.getter, "Transfer changed status %s -> %s", (void (*)(uint64_t))&SFAirDropReceive.Transfer.update(state:), a2);
}

uint64_t sub_1006BE404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1006BE44C(a1, (uint64_t (*)(void))&type metadata accessor for SFAirDrop.DisplayPriority, (void (*)(void))&SFAirDropReceive.Transfer.displayPriority.getter, "Transfer changed display priority %s -> %s", (void (*)(uint64_t))&SFAirDropReceive.Transfer.update(displayPriority:), a2);
}

uint64_t sub_1006BE44C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, void (*a3)(void)@<X2>, const char *a4@<X3>, void (*a5)(uint64_t)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v51 = a6;
  id v52 = a5;
  unint64_t v46 = a4;
  uint64_t v44 = a3;
  uint64_t v8 = a2(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v43 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v45 = (char *)v39 - v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v39 - v14;
  uint64_t v16 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (void (*)(void))((char *)v39 - v21);
  uint64_t v48 = *(void *)(v6 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
  CurrentValueSubject.value.getter();
  uint64_t v23 = *(void (**)(char *, void (*)(void), uint64_t))(v17 + 16);
  uint64_t v53 = v16;
  v23(v20, v22, v16);
  uint64_t v49 = v9;
  uint64_t v50 = a1;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  unint64_t v47 = v15;
  v24(v15, a1, v8);
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.debug.getter();
  int v27 = v26;
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    uint64_t v55 = v42;
    *(_DWORD *)uint64_t v28 = 136315394;
    v39[1] = v28 + 4;
    char v29 = v45;
    int v41 = v27;
    v44();
    v24(v43, (uint64_t)v29, v8);
    uint64_t v30 = String.init<A>(describing:)();
    uint64_t v40 = (void (*)(char *, char *, uint64_t))v24;
    unint64_t v32 = v31;
    uint64_t v44 = v22;
    uint64_t v49 = *(void *)(v49 + 8);
    ((void (*)(char *, uint64_t))v49)(v29, v8);
    uint64_t v54 = sub_100254634(v30, v32, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v33 = *(void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v43 = (char *)v25;
    v33(v20, v53);
    *(_WORD *)(v28 + 12) = 2080;
    NSString v34 = v47;
    v40(v29, v47, v8);
    uint64_t v35 = String.init<A>(describing:)();
    uint64_t v54 = sub_100254634(v35, v36, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v49)(v34, v8);
    os_log_t v37 = (os_log_t)v43;
    uint64_t v22 = v44;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v43, (os_log_type_t)v41, v46, (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v33 = *(void (**)(char *, uint64_t))(v17 + 8);
    v33(v20, v53);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v47, v8);
  }
  v52(v50);
  CurrentValueSubject.send(_:)();
  return ((uint64_t (*)(void (*)(void), uint64_t))v33)(v22, v53);
}

uint64_t sub_1006BE8E8(uint64_t a1)
{
  return sub_1006BED34(a1, "Transfer changed cancel action", (void (*)(uint64_t))&SFAirDropReceive.Transfer.update(cancelAction:));
}

uint64_t sub_1006BE908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v38 = sub_10000A844(&qword_10097F260);
  uint64_t v4 = __chkstk_darwin(v38);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v34 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v34 - v17;
  uint64_t v40 = *(void *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
  CurrentValueSubject.value.getter();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v43 = v12;
  v19(v16, v18, v12);
  uint64_t v41 = a1;
  uint64_t v39 = v11;
  sub_10024A330(a1, (uint64_t)v11, &qword_10097F260);
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  int v22 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v23 = swift_slowAlloc();
    int v36 = v22;
    uint64_t v24 = v23;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v45 = v37;
    *(_DWORD *)uint64_t v24 = 136315394;
    os_log_t v35 = v20;
    SFAirDropReceive.Transfer.activeInterfaceType.getter();
    sub_10024A330((uint64_t)v9, (uint64_t)v6, &qword_10097F260);
    uint64_t v25 = String.init<A>(describing:)();
    unint64_t v27 = v26;
    sub_10000A7E8((uint64_t)v9, &qword_10097F260);
    uint64_t v44 = sub_100254634(v25, v27, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v28 = *(void (**)(char *, uint64_t))(v13 + 8);
    v28(v16, v43);
    *(_WORD *)(v24 + 12) = 2080;
    uint64_t v29 = (uint64_t)v39;
    sub_10024A330((uint64_t)v39, (uint64_t)v9, &qword_10097F260);
    uint64_t v30 = String.init<A>(describing:)();
    uint64_t v44 = sub_100254634(v30, v31, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A7E8(v29, &qword_10097F260);
    os_log_t v32 = v35;
    _os_log_impl((void *)&_mh_execute_header, v35, (os_log_type_t)v36, "Transfer changed active interface type %s -> %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v28 = *(void (**)(char *, uint64_t))(v13 + 8);
    v28(v16, v43);
    sub_10000A7E8((uint64_t)v39, &qword_10097F260);
  }
  SFAirDropReceive.Transfer.update(activeInterfaceType:)();
  CurrentValueSubject.send(_:)();
  return ((uint64_t (*)(char *, uint64_t))v28)(v18, v43);
}

uint64_t sub_1006BED14(uint64_t a1)
{
  return sub_1006BED34(a1, "Transfer changed ask response", (void (*)(uint64_t))&SFAirDropReceive.Transfer.update(askResponse:));
}

uint64_t sub_1006BED34(uint64_t a1, const char *a2, void (*a3)(uint64_t))
{
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  CurrentValueSubject.value.getter();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, a2, v12, 2u);
    swift_slowDealloc();
  }

  a3(a1);
  CurrentValueSubject.send(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1006BEEC4(uint64_t a1, uint64_t a2)
{
  v3[115] = v2;
  v3[114] = a2;
  v3[113] = a1;
  uint64_t v4 = type metadata accessor for ContinuousClock();
  v3[116] = v4;
  v3[117] = *(void *)(v4 - 8);
  v3[118] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SFAirDropReceive.Transfer.State();
  v3[119] = v5;
  v3[120] = *(void *)(v5 - 8);
  v3[121] = swift_task_alloc();
  v3[122] = sub_10000A844((uint64_t *)&unk_10097F230);
  v3[123] = swift_task_alloc();
  v3[124] = swift_task_alloc();
  v3[125] = sub_10000A844(&qword_10096CC50);
  v3[126] = swift_task_alloc();
  v3[127] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Date();
  v3[128] = v6;
  v3[129] = *(void *)(v6 - 8);
  v3[130] = swift_task_alloc();
  v3[131] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SFAirDrop.TransferType();
  v3[132] = v7;
  v3[133] = *(void *)(v7 - 8);
  v3[134] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SFAirDropReceive.AskRequest();
  v3[135] = v8;
  v3[136] = *(void *)(v8 - 8);
  v3[137] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for SFAirDropReceive.Transfer();
  v3[138] = v9;
  v3[139] = *(void *)(v9 - 8);
  v3[140] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v10 = static AirDropActor.shared;
  v3[141] = static AirDropActor.shared;
  return _swift_task_switch(sub_1006BF22C, v10, 0);
}

uint64_t sub_1006BF22C()
{
  uint64_t v40 = v0;
  uint64_t v1 = *(void *)(v0 + 1120);
  uint64_t v2 = *(void *)(v0 + 1112);
  uint64_t v3 = *(void *)(v0 + 1104);
  uint64_t v4 = *(void *)(v0 + 1096);
  uint64_t v5 = *(void *)(v0 + 1088);
  uint64_t v6 = *(void *)(v0 + 1072);
  uint64_t v7 = *(void *)(v0 + 1064);
  uint64_t v35 = *(void *)(v0 + 1080);
  uint64_t v37 = *(void *)(v0 + 1056);
  *(void *)(v0 + 1136) = *(void *)(*(void *)(v0 + 920)
                                     + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
  CurrentValueSubject.value.getter();
  SFAirDropReceive.Transfer.askRequest.getter();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(void *)(v0 + 1144) = v8;
  *(void *)(v0 + 1152) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v8(v1, v3);
  SFAirDropReceive.AskRequest.type.getter();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  *(void *)(v0 + 1160) = v9;
  *(void *)(v0 + 1168) = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v4, v35);
  char v10 = SFAirDrop.TransferType.isFiles.getter();
  os_log_type_t v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  *(void *)(v0 + 1176) = v11;
  *(void *)(v0 + 1184) = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v11(v6, v37);
  if (v10)
  {
    uint64_t v12 = *(void *)(v0 + 920);
    uint64_t v13 = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
    *(void *)(v0 + 1192) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
    uint64_t v14 = v12 + v13;
    swift_beginAccess();
    sub_100278C8C(v14, v0 + 216);
    *(void *)(v0 + 1200) = sub_10000A844(&qword_10097F210);
    sub_10000A844(&qword_10097F218);
    if (swift_dynamicCast())
    {
      sub_10000A7E8(v0 + 296, (uint64_t *)&unk_10097F220);
      *(void *)(v0 + 1208) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
      swift_bridgeObjectRetain_n();
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 136315138;
        type metadata accessor for URL();
        swift_bridgeObjectRetain();
        uint64_t v18 = Array.description.getter();
        unint64_t v20 = v19;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 896) = sub_100254634(v18, v20, &v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Importing START: {urls: %s}", v17, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      static Date.now.getter();
      sub_100278C8C(v14, v0 + 336);
      unint64_t v31 = (void *)swift_task_alloc();
      *(void *)(v0 + 1216) = v31;
      *unint64_t v31 = v0;
      v31[1] = sub_1006BF744;
      uint64_t v32 = *(void *)(v0 + 912);
      uint64_t v33 = *(void *)(v0 + 904);
      return sub_1006C30D4(v33, v0 + 336, v32);
    }
    *(void *)(v0 + 328) = 0;
    *(_OWORD *)(v0 + 296) = 0u;
    *(_OWORD *)(v0 + 312) = 0u;
    sub_10000A7E8(v0 + 296, (uint64_t *)&unk_10097F220);
  }
  uint64_t v36 = *(void *)(v0 + 1120);
  uint64_t v38 = *(void *)(v0 + 1104);
  uint64_t v21 = *(void *)(v0 + 968);
  uint64_t v22 = *(void *)(v0 + 960);
  uint64_t v23 = *(void *)(v0 + 952);
  uint64_t v24 = *(void *)(v0 + 912);
  uint64_t v25 = *(void *)(v0 + 904);
  uint64_t v26 = sub_10000A844(&qword_10096B2C8);
  uint64_t v27 = *(int *)(v26 + 48);
  uint64_t v28 = *(int *)(v26 + 64);
  uint64_t v29 = type metadata accessor for SFAirDropReceive.ItemDestination();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v21, v24, v29);
  *(void *)(v21 + v27) = v25;
  *(void *)(v21 + v28) = 0x3FF0000000000000;
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))(v21, enum case for SFAirDropReceive.Transfer.State.importing(_:), v23);
  swift_bridgeObjectRetain();
  sub_1006BE3BC(v21, v36);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  v8(v36, v38);
  uint64_t v30 = static AirDropActor.shared;
  *(void *)(v0 + 1232) = static AirDropActor.shared;
  return _swift_task_switch(sub_1006BFD4C, v30, 0);
}

uint64_t sub_1006BF744(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = *v2 + 336;
  v4[87] = v2;
  v4[88] = a1;
  v4[89] = v1;
  v4[153] = v1;
  swift_task_dealloc();
  uint64_t v6 = v3[141];
  sub_10024D338(v5);
  if (v1) {
    uint64_t v7 = sub_1006C04C4;
  }
  else {
    uint64_t v7 = sub_1006BF88C;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1006BF88C()
{
  uint64_t v39 = v0;
  uint64_t v1 = v0[88];
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1006C6C28(v2);
  uint64_t v37 = v1;
  swift_bridgeObjectRelease();
  static Date.now.getter();
  sub_1006C9214((unint64_t *)&unk_100974490, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    uint64_t v27 = v0[130];
    uint64_t v4 = (void *)v0[129];
    uint64_t v5 = v0[128];
    uint64_t v31 = v0[125];
    uint64_t v33 = v0[127];
    uint64_t v6 = v0[123];
    uint64_t v7 = v0[122];
    uint64_t v36 = v0[124];
    uint64_t v29 = v7;
    uint64_t v30 = v0[126];
    uint64_t v8 = v36 + *(int *)(v7 + 48);
    uint64_t v9 = (void (*)(void))v4[2];
    v9();
    char v10 = (void (*)(uint64_t, uint64_t, uint64_t))v4[4];
    uint64_t v28 = v8;
    v10(v8, v27, v5);
    uint64_t v11 = v6 + *(int *)(v7 + 48);
    ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v6, v36, v5);
    ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v11, v8, v5);
    v10(v30, v6, v5);
    uint64_t v12 = (void (*)(uint64_t, uint64_t))v4[1];
    v12(v11, v5);
    uint64_t v13 = v6 + *(int *)(v29 + 48);
    v10(v6, v36, v5);
    v10(v13, v28, v5);
    v10(v30 + *(int *)(v31 + 36), v13, v5);
    v12(v6, v5);
    sub_1002BC03C(v30, v33);
    ClosedRange<>.interval.getter();
    unint64_t v15 = v14;
    sub_10000A7E8(v33, &qword_10096CC50);
    swift_bridgeObjectRetain_n();
    os_log_type_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = v0[131];
    uint64_t v20 = v0[128];
    if (v18)
    {
      uint64_t v35 = v0[131];
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      type metadata accessor for URL();
      uint64_t v34 = v20;
      swift_bridgeObjectRetain();
      uint64_t v22 = Array.description.getter();
      uint64_t v32 = v12;
      unint64_t v24 = v23;
      swift_bridgeObjectRelease();
      v0[104] = sub_100254634(v22, v24, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Importing END {importedURLs: %s}", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v32(v35, v34);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      v12(v19, v20);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(uint64_t, __n128))v0[1];
    v26.n128_u64[0] = v15;
    return v25(v37, v26);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006BFD4C()
{
  uint64_t v1 = static Duration.seconds(_:)();
  uint64_t v3 = v2;
  ContinuousClock.init()();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 1240) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1006BFE2C;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_1006BFE2C()
{
  uint64_t v2 = (void *)*v1;
  v2[156] = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[118];
  uint64_t v4 = v2[116];
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v2[117] + 8);
  if (v0)
  {
    uint64_t v6 = v2[154];
    v5(v3, v4);
    uint64_t v7 = sub_1006BFFA8;
  }
  else
  {
    uint64_t v6 = v2[141];
    v5(v3, v4);
    uint64_t v7 = sub_1006C00AC;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1006BFFA8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006C00AC()
{
  uint64_t v29 = v0;
  swift_retain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v24 = (void (*)(uint64_t, uint64_t))v0[147];
    unint64_t v23 = (void (*)(uint64_t, uint64_t))v0[145];
    uint64_t v27 = v1;
    uint64_t v3 = (void (*)(uint64_t, uint64_t))v0[143];
    os_log_type_t v26 = v2;
    uint64_t v4 = v0[140];
    uint64_t v5 = v0[138];
    uint64_t v6 = v0[137];
    uint64_t v22 = v0[135];
    uint64_t v7 = v0[134];
    uint64_t v8 = v0[132];
    uint64_t v25 = v0[115];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    CurrentValueSubject.value.getter();
    SFAirDropReceive.Transfer.askRequest.getter();
    v3(v4, v5);
    SFAirDropReceive.AskRequest.type.getter();
    v23(v6, v22);
    sub_1006C9214((unint64_t *)&unk_10097F240, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType);
    uint64_t v10 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v12 = v11;
    v24(v7, v8);
    v0[109] = sub_100254634(v10, v12, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v9 + 12) = 2080;
    uint64_t v13 = v25 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
    swift_beginAccess();
    sub_100278C8C(v13, (uint64_t)(v0 + 7));
    sub_10026BB6C(v0 + 7, v0[10]);
    uint64_t DynamicType = swift_getDynamicType();
    uint64_t v15 = v0[11];
    sub_10024D338((uint64_t)(v0 + 7));
    v0[99] = DynamicType;
    v0[100] = v15;
    sub_10000A844(&qword_10096CC88);
    uint64_t v16 = String.init<A>(describing:)();
    v0[108] = sub_100254634(v16, v17, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v27, v26, "Importing SKIP. {type: %s, handler: %s}", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v18 = v0[113];
  swift_bridgeObjectRetain();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(uint64_t, __n128))v0[1];
  v20.n128_u64[0] = 0;
  return v19(v18, v20);
}

uint64_t sub_1006C04C4()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[143];
  uint64_t v2 = v0[140];
  uint64_t v3 = v0[138];
  v0[157] = type metadata accessor for SDAirDropContentHandlerGenericFiles();
  uint64_t v4 = swift_allocObject();
  v0[158] = v4;
  *(void *)(v4 + 16) = 0;
  *(unsigned char *)(v4 + 24) = 0;
  v0[159] = type metadata accessor for SDAirDropContentHandleriCloudDrive();
  uint64_t v5 = swift_allocObject();
  v0[160] = v5;
  uint64_t v6 = v5 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropContentHandleriCloudDrive_iCloudDriveFolder;
  uint64_t v7 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v0[161] = type metadata accessor for SDAirDropContentHandlerUnsupportedFileType();
  uint64_t v8 = swift_allocObject();
  v0[162] = v8;
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0xE000000000000000;
  CurrentValueSubject.value.getter();
  SFAirDropReceive.Transfer.askRequest.getter();
  v1(v2, v3);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[163] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1006C0660;
  uint64_t v10 = v0[137];
  return sub_10040EE58(v10);
}

uint64_t sub_1006C0660(char a1)
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 1160);
  uint64_t v3 = *(void *)(*(void *)v1 + 1128);
  uint64_t v4 = *(void *)(*(void *)v1 + 1096);
  uint64_t v5 = *(void *)(*(void *)v1 + 1080);
  *(unsigned char *)(*(void *)v1 + 1376) = a1;
  swift_task_dealloc();
  v2(v4, v5);
  return _swift_task_switch(sub_1006C07E4, v3, 0);
}

uint64_t sub_1006C07E4()
{
  if (*(unsigned char *)(v0 + 1376) != 1)
  {
LABEL_4:
    uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1144);
    uint64_t v2 = *(void *)(v0 + 1120);
    uint64_t v3 = *(void *)(v0 + 1104);
    CurrentValueSubject.value.getter();
    SFAirDropReceive.Transfer.askRequest.getter();
    v1(v2, v3);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 1328) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1006C11A4;
    uint64_t v5 = *(void *)(v0 + 1096);
    return sub_1003D2068(v5);
  }
  sub_100278C8C(*(void *)(v0 + 920) + *(void *)(v0 + 1192), v0 + 256);
  if (swift_dynamicCast())
  {
    swift_release();
    goto LABEL_4;
  }
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 888) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v10 = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Import failed with error: {%@}. Switching handler to generic files handler and retrying...", v9, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v12 = *(void *)(v0 + 1264);
  uint64_t v13 = *(void *)(v0 + 920) + *(void *)(v0 + 1192);
  *(void *)(v0 + 520) = *(void *)(v0 + 1256);
  *(void *)(v0 + 528) = &off_1008D9ED8;
  *(void *)(v0 + 496) = v12;
  sub_1002AF688((long long *)(v0 + 496), v0 + 376);
  swift_beginAccess();
  swift_retain();
  sub_10024D338(v13);
  sub_1002AF688((long long *)(v0 + 376), v13);
  swift_endAccess();
  sub_100278C8C(v13, v0 + 16);
  unint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 1312) = v14;
  *unint64_t v14 = v0;
  v14[1] = sub_1006C0B70;
  uint64_t v15 = *(void *)(v0 + 912);
  uint64_t v16 = *(void *)(v0 + 904);
  return sub_1006C30D4(v16, v0 + 16, v15);
}

uint64_t sub_1006C0B70(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = *v2 + 16;
  v4[90] = v2;
  v4[91] = a1;
  v4[92] = v1;
  v4[165] = v1;
  swift_task_dealloc();
  uint64_t v6 = v3[141];
  sub_10024D338(v5);
  if (v1) {
    uint64_t v7 = sub_1006C28F4;
  }
  else {
    uint64_t v7 = sub_1006C0CB8;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1006C0CB8()
{
  uint64_t v39 = v0;
  swift_errorRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0[91];
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1006C6C28(v2);
  uint64_t v37 = v1;
  swift_bridgeObjectRelease();
  static Date.now.getter();
  sub_1006C9214((unint64_t *)&unk_100974490, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    uint64_t v27 = v0[130];
    uint64_t v4 = (void *)v0[129];
    uint64_t v5 = v0[128];
    uint64_t v31 = v0[125];
    uint64_t v33 = v0[127];
    uint64_t v6 = v0[123];
    uint64_t v7 = v0[122];
    uint64_t v36 = v0[124];
    uint64_t v29 = v7;
    uint64_t v30 = v0[126];
    uint64_t v8 = v36 + *(int *)(v7 + 48);
    uint64_t v9 = (void (*)(void))v4[2];
    v9();
    uint64_t v10 = (void (*)(uint64_t, uint64_t, uint64_t))v4[4];
    uint64_t v28 = v8;
    v10(v8, v27, v5);
    uint64_t v11 = v6 + *(int *)(v7 + 48);
    ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v6, v36, v5);
    ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v11, v8, v5);
    v10(v30, v6, v5);
    uint64_t v12 = (void (*)(uint64_t, uint64_t))v4[1];
    v12(v11, v5);
    uint64_t v13 = v6 + *(int *)(v29 + 48);
    v10(v6, v36, v5);
    v10(v13, v28, v5);
    v10(v30 + *(int *)(v31 + 36), v13, v5);
    v12(v6, v5);
    sub_1002BC03C(v30, v33);
    ClosedRange<>.interval.getter();
    unint64_t v15 = v14;
    sub_10000A7E8(v33, &qword_10096CC50);
    swift_bridgeObjectRetain_n();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = v0[131];
    uint64_t v20 = v0[128];
    if (v18)
    {
      uint64_t v35 = v0[131];
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      type metadata accessor for URL();
      uint64_t v34 = v20;
      swift_bridgeObjectRetain();
      uint64_t v22 = Array.description.getter();
      uint64_t v32 = v12;
      unint64_t v24 = v23;
      swift_bridgeObjectRelease();
      v0[104] = sub_100254634(v22, v24, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Importing END {importedURLs: %s}", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v32(v35, v34);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      v12(v19, v20);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(uint64_t, __n128))v0[1];
    v26.n128_u64[0] = v15;
    return v25(v37, v26);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006C11A4(char a1)
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 1160);
  uint64_t v3 = *(void *)(*(void *)v1 + 1128);
  uint64_t v4 = *(void *)(*(void *)v1 + 1096);
  uint64_t v5 = *(void *)(*(void *)v1 + 1080);
  *(unsigned char *)(*(void *)v1 + 1377) = a1;
  swift_task_dealloc();
  v2(v4, v5);
  return _swift_task_switch(sub_1006C1328, v3, 0);
}

uint64_t sub_1006C1328()
{
  if (*(unsigned char *)(v0 + 1377) == 1)
  {
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      uint64_t v4 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v3 = 138412290;
      swift_errorRetain();
      uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 824) = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v4 = v5;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "Import failed with error: {%@}. Switching handler to iCloud Drive handler and retrying...", v3, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v12 = *(void *)(v0 + 1280);
    uint64_t v13 = *(void *)(v0 + 920) + *(void *)(v0 + 1192);
    *(void *)(v0 + 160) = *(void *)(v0 + 1272);
    *(void *)(v0 + 168) = &off_1008D9290;
    *(void *)(v0 + 136) = v12;
    sub_1002AF688((long long *)(v0 + 136), v0 + 96);
    swift_beginAccess();
    swift_retain();
    sub_10024D338(v13);
    sub_1002AF688((long long *)(v0 + 96), v13);
    swift_endAccess();
    sub_100278C8C(v13, v0 + 176);
    unint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 1336) = v14;
    *unint64_t v14 = v0;
    v14[1] = sub_1006C1668;
    uint64_t v15 = *(void *)(v0 + 912);
    uint64_t v16 = *(void *)(v0 + 904);
    return sub_1006C30D4(v16, v0 + 176, v15);
  }
  else
  {
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 1144);
    uint64_t v7 = *(void *)(v0 + 1120);
    uint64_t v8 = *(void *)(v0 + 1104);
    CurrentValueSubject.value.getter();
    SFAirDropReceive.Transfer.askRequest.getter();
    v6(v7, v8);
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 1352) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1006C1C9C;
    uint64_t v10 = *(void *)(v0 + 1096);
    return sub_100496588(v10);
  }
}

uint64_t sub_1006C1668(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = *v2 + 176;
  v4[93] = v2;
  v4[94] = a1;
  v4[95] = v1;
  v4[168] = v1;
  swift_task_dealloc();
  uint64_t v6 = v3[141];
  sub_10024D338(v5);
  if (v1) {
    uint64_t v7 = sub_1006C2B94;
  }
  else {
    uint64_t v7 = sub_1006C17B0;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1006C17B0()
{
  uint64_t v39 = v0;
  swift_errorRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0[94];
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1006C6C28(v2);
  uint64_t v37 = v1;
  swift_bridgeObjectRelease();
  static Date.now.getter();
  sub_1006C9214((unint64_t *)&unk_100974490, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    uint64_t v27 = v0[130];
    uint64_t v4 = (void *)v0[129];
    uint64_t v5 = v0[128];
    uint64_t v31 = v0[125];
    uint64_t v33 = v0[127];
    uint64_t v6 = v0[123];
    uint64_t v7 = v0[122];
    uint64_t v36 = v0[124];
    uint64_t v29 = v7;
    uint64_t v30 = v0[126];
    uint64_t v8 = v36 + *(int *)(v7 + 48);
    uint64_t v9 = (void (*)(void))v4[2];
    v9();
    uint64_t v10 = (void (*)(uint64_t, uint64_t, uint64_t))v4[4];
    uint64_t v28 = v8;
    v10(v8, v27, v5);
    uint64_t v11 = v6 + *(int *)(v7 + 48);
    ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v6, v36, v5);
    ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v11, v8, v5);
    v10(v30, v6, v5);
    uint64_t v12 = (void (*)(uint64_t, uint64_t))v4[1];
    v12(v11, v5);
    uint64_t v13 = v6 + *(int *)(v29 + 48);
    v10(v6, v36, v5);
    v10(v13, v28, v5);
    v10(v30 + *(int *)(v31 + 36), v13, v5);
    v12(v6, v5);
    sub_1002BC03C(v30, v33);
    ClosedRange<>.interval.getter();
    unint64_t v15 = v14;
    sub_10000A7E8(v33, &qword_10096CC50);
    swift_bridgeObjectRetain_n();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = v0[131];
    uint64_t v20 = v0[128];
    if (v18)
    {
      uint64_t v35 = v0[131];
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      type metadata accessor for URL();
      uint64_t v34 = v20;
      swift_bridgeObjectRetain();
      uint64_t v22 = Array.description.getter();
      uint64_t v32 = v12;
      unint64_t v24 = v23;
      swift_bridgeObjectRelease();
      v0[104] = sub_100254634(v22, v24, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Importing END {importedURLs: %s}", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v32(v35, v34);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      v12(v19, v20);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(uint64_t, __n128))v0[1];
    v26.n128_u64[0] = v15;
    return v25(v37, v26);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006C1C9C(char a1)
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 1160);
  uint64_t v3 = *(void *)(*(void *)v1 + 1128);
  uint64_t v4 = *(void *)(*(void *)v1 + 1096);
  uint64_t v5 = *(void *)(*(void *)v1 + 1080);
  *(unsigned char *)(*(void *)v1 + 1378) = a1;
  swift_task_dealloc();
  v2(v4, v5);
  return _swift_task_switch(sub_1006C1E20, v3, 0);
}

uint64_t sub_1006C1E20()
{
  int v1 = *(unsigned __int8 *)(v0 + 1378);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  if (v1 == 1)
  {
    if (v4)
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 138412290;
      swift_errorRetain();
      uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 808) = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v6 = v7;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Import failed with error: {%@}. Switching handler to unsupported file type handler and retrying...", v5, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v11 = *(void *)(v0 + 1296);
    uint64_t v12 = *(void *)(v0 + 920) + *(void *)(v0 + 1192);
    *(void *)(v0 + 440) = *(void *)(v0 + 1288);
    *(void *)(v0 + 448) = &off_1008DC280;
    *(void *)(v0 + 416) = v11;
    sub_1002AF688((long long *)(v0 + 416), v0 + 456);
    swift_beginAccess();
    swift_retain();
    sub_10024D338(v12);
    sub_1002AF688((long long *)(v0 + 456), v12);
    swift_endAccess();
    sub_100278C8C(v12, v0 + 536);
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 1360) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1006C22C0;
    uint64_t v14 = *(void *)(v0 + 912);
    uint64_t v15 = *(void *)(v0 + 904);
    return sub_1006C30D4(v15, v0 + 536, v14);
  }
  else
  {
    if (v4)
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412290;
      swift_errorRetain();
      uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 856) = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v9 = v10;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Importing END - Failure {%@}", v8, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v17 = *(void *)(v0 + 1048);
    uint64_t v18 = *(void *)(v0 + 1032);
    uint64_t v19 = *(void *)(v0 + 1024);
    swift_willThrow();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
}

uint64_t sub_1006C22C0(uint64_t a1)
{
  os_log_type_t v3 = (void *)*v2;
  BOOL v4 = (void *)*v2;
  uint64_t v5 = *v2 + 536;
  v4[96] = v2;
  v4[97] = a1;
  v4[98] = v1;
  v4[171] = v1;
  swift_task_dealloc();
  uint64_t v6 = v3[141];
  sub_10024D338(v5);
  if (v1) {
    uint64_t v7 = sub_1006C2E34;
  }
  else {
    uint64_t v7 = sub_1006C2408;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1006C2408()
{
  uint64_t v39 = v0;
  swift_errorRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0[97];
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1006C6C28(v2);
  uint64_t v37 = v1;
  swift_bridgeObjectRelease();
  static Date.now.getter();
  sub_1006C9214((unint64_t *)&unk_100974490, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    uint64_t v27 = v0[130];
    BOOL v4 = (void *)v0[129];
    uint64_t v5 = v0[128];
    uint64_t v31 = v0[125];
    uint64_t v33 = v0[127];
    uint64_t v6 = v0[123];
    uint64_t v7 = v0[122];
    uint64_t v36 = v0[124];
    uint64_t v29 = v7;
    uint64_t v30 = v0[126];
    uint64_t v8 = v36 + *(int *)(v7 + 48);
    uint64_t v9 = (void (*)(void))v4[2];
    v9();
    uint64_t v10 = (void (*)(uint64_t, uint64_t, uint64_t))v4[4];
    uint64_t v28 = v8;
    v10(v8, v27, v5);
    uint64_t v11 = v6 + *(int *)(v7 + 48);
    ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v6, v36, v5);
    ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v11, v8, v5);
    v10(v30, v6, v5);
    uint64_t v12 = (void (*)(uint64_t, uint64_t))v4[1];
    v12(v11, v5);
    uint64_t v13 = v6 + *(int *)(v29 + 48);
    v10(v6, v36, v5);
    v10(v13, v28, v5);
    v10(v30 + *(int *)(v31 + 36), v13, v5);
    v12(v6, v5);
    sub_1002BC03C(v30, v33);
    ClosedRange<>.interval.getter();
    unint64_t v15 = v14;
    sub_10000A7E8(v33, &qword_10096CC50);
    swift_bridgeObjectRetain_n();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = v0[131];
    uint64_t v20 = v0[128];
    if (v18)
    {
      uint64_t v35 = v0[131];
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      type metadata accessor for URL();
      uint64_t v34 = v20;
      swift_bridgeObjectRetain();
      uint64_t v22 = Array.description.getter();
      uint64_t v32 = v12;
      unint64_t v24 = v23;
      swift_bridgeObjectRelease();
      v0[104] = sub_100254634(v22, v24, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Importing END {importedURLs: %s}", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v32(v35, v34);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      v12(v19, v20);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(uint64_t, __n128))v0[1];
    v26.n128_u64[0] = v15;
    return v25(v37, v26);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006C28F4()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    BOOL v4 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[110] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *BOOL v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Importing END - Failure {%@}", v3, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = v0[131];
  uint64_t v7 = v0[129];
  uint64_t v8 = v0[128];
  swift_willThrow();
  swift_release();
  swift_release();
  swift_release();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1006C2B94()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    BOOL v4 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[102] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *BOOL v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Importing END - Failure {%@}", v3, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = v0[131];
  uint64_t v7 = v0[129];
  uint64_t v8 = v0[128];
  swift_willThrow();
  swift_release();
  swift_release();
  swift_release();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1006C2E34()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    BOOL v4 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[106] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *BOOL v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Importing END - Failure {%@}", v3, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = v0[131];
  uint64_t v7 = v0[129];
  uint64_t v8 = v0[128];
  swift_willThrow();
  swift_release();
  swift_release();
  swift_release();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1006C30D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[23] = a3;
  v4[24] = v3;
  v4[21] = a1;
  v4[22] = a2;
  uint64_t v5 = type metadata accessor for ContinuousClock();
  v4[25] = v5;
  v4[26] = *(void *)(v5 - 8);
  v4[27] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer.State();
  v4[28] = v6;
  v4[29] = *(void *)(v6 - 8);
  v4[30] = swift_task_alloc();
  uint64_t v7 = sub_10000A844((uint64_t *)&unk_10097F200);
  v4[31] = v7;
  v4[32] = *(void *)(v7 - 8);
  v4[33] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UUID();
  v4[34] = v8;
  v4[35] = *(void *)(v8 - 8);
  v4[36] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v4[37] = v9;
  v4[38] = *(void *)(v9 - 8);
  v4[39] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer();
  v4[40] = v10;
  v4[41] = *(void *)(v10 - 8);
  v4[42] = swift_task_alloc();
  v4[43] = swift_task_alloc();
  uint64_t v11 = sub_10000A844(&qword_1009756C8);
  v4[44] = v11;
  v4[45] = *(void *)(v11 - 8);
  v4[46] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v12 = static AirDropActor.shared;
  v4[47] = static AirDropActor.shared;
  return _swift_task_switch(sub_1006C3414, v12, 0);
}

uint64_t sub_1006C3414()
{
  sub_100278C8C(*(void *)(v0 + 176), v0 + 56);
  sub_10000A844(&qword_10097F210);
  sub_10000A844(&qword_10097F218);
  if (swift_dynamicCast())
  {
    uint64_t v1 = *(void *)(v0 + 344);
    uint64_t v3 = *(void *)(v0 + 328);
    uint64_t v2 = *(void *)(v0 + 336);
    uint64_t v4 = *(void *)(v0 + 312);
    uint64_t v14 = *(void *)(v0 + 320);
    uint64_t v5 = *(void *)(v0 + 288);
    uint64_t v21 = *(void *)(v0 + 296);
    uint64_t v6 = *(void *)(v0 + 280);
    uint64_t v19 = *(void *)(v0 + 272);
    uint64_t v20 = *(void *)(v0 + 304);
    uint64_t v17 = *(void *)(v0 + 168);
    uint64_t v18 = *(void *)(v0 + 184);
    sub_1002AF688((long long *)(v0 + 96), v0 + 16);
    uint64_t v16 = *(void *)(v0 + 40);
    uint64_t v15 = *(void *)(v0 + 48);
    sub_10026BB6C((void *)(v0 + 16), v16);
    CurrentValueSubject.value.getter();
    SFAirDropReceive.Transfer.id.getter();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    *(void *)(v0 + 384) = v7;
    *(void *)(v0 + 392) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v7(v1, v14);
    CurrentValueSubject.value.getter();
    SFAirDropReceive.Transfer.receiveID.getter();
    v7(v2, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8))(v17, v4, v5, v18, v16);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v19);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v4, v21);
    SFProgressTask.makeAsyncIterator()();
    *(_DWORD *)(v0 + 148) = enum case for SFAirDropReceive.Transfer.State.importing(_:);
    uint64_t v8 = static AirDropActor.shared;
    uint64_t v9 = sub_1006C9214((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 400) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1006C37AC;
    uint64_t v11 = *(void *)(v0 + 248);
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 136, v8, v9, v11, v0 + 152);
  }
  else
  {
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    *(void *)(v0 + 128) = 0;
    sub_10000A7E8(v0 + 96, (uint64_t *)&unk_10097F220);
    uint64_t v22 = *(void *)(v0 + 168);
    swift_bridgeObjectRetain();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v12(v22);
  }
}

uint64_t sub_1006C37AC()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 376);
  if (v0) {
    uint64_t v4 = sub_1006C42E8;
  }
  else {
    uint64_t v4 = sub_1006C38C0;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1006C38C0()
{
  uint64_t v1 = *(void *)(v0 + 136);
  if (*(unsigned char *)(v0 + 144))
  {
    (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 408) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1006C3B80;
    uint64_t v3 = *(void *)(v0 + 352);
    return SFProgressTask.finalValue.getter(v0 + 160, v3);
  }
  else
  {
    unsigned int v19 = *(_DWORD *)(v0 + 148);
    uint64_t v4 = *(void *)(v0 + 344);
    uint64_t v20 = *(void *)(v0 + 320);
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    uint64_t v5 = *(void *)(v0 + 232);
    uint64_t v6 = *(void *)(v0 + 240);
    uint64_t v7 = *(void *)(v0 + 224);
    uint64_t v8 = *(void *)(v0 + 184);
    uint64_t v9 = *(void *)(v0 + 168);
    uint64_t v10 = sub_10000A844(&qword_10096B2C8);
    uint64_t v11 = *(int *)(v10 + 48);
    uint64_t v12 = *(int *)(v10 + 64);
    uint64_t v13 = type metadata accessor for SFAirDropReceive.ItemDestination();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v6, v8, v13);
    *(void *)(v6 + v11) = v9;
    *(void *)(v6 + v12) = v1;
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v6, v19, v7);
    swift_bridgeObjectRetain();
    sub_1006BE3BC(v6, v4);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
    v21(v4, v20);
    uint64_t v14 = static AirDropActor.shared;
    uint64_t v15 = sub_1006C9214((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 400) = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_1006C37AC;
    uint64_t v17 = *(void *)(v0 + 248);
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 136, v14, v15, v17, v0 + 152);
  }
}

uint64_t sub_1006C3B80()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 416) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 376);
  if (v0) {
    uint64_t v4 = sub_1006C440C;
  }
  else {
    uint64_t v4 = sub_1006C3CAC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1006C3CAC()
{
  uint64_t v1 = *(unsigned int *)(v0 + 148);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
  uint64_t v2 = *(void *)(v0 + 344);
  uint64_t v4 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 240);
  uint64_t v5 = *(void *)(v0 + 224);
  uint64_t v6 = *(void *)(v0 + 184);
  uint64_t v14 = *(void *)(v0 + 320);
  uint64_t v7 = *(void *)(v0 + 168);
  *(void *)(v0 + 424) = *(void *)(v0 + 160);
  uint64_t v8 = sub_10000A844(&qword_10096B2C8);
  uint64_t v9 = *(int *)(v8 + 48);
  uint64_t v10 = *(int *)(v8 + 64);
  uint64_t v11 = type metadata accessor for SFAirDropReceive.ItemDestination();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v3, v6, v11);
  *(void *)(v3 + v9) = v7;
  *(void *)(v3 + v10) = 0x3FF0000000000000;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v3, v1, v5);
  swift_bridgeObjectRetain();
  sub_1006BE3BC(v3, v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v15(v2, v14);
  uint64_t v12 = static AirDropActor.shared;
  *(void *)(v0 + 432) = static AirDropActor.shared;
  return _swift_task_switch(sub_1006C3E24, v12, 0);
}

uint64_t sub_1006C3E24()
{
  uint64_t v1 = static Duration.seconds(_:)();
  uint64_t v3 = v2;
  ContinuousClock.init()();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 440) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1006C3F04;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_1006C3F04()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 216);
  uint64_t v4 = *(void *)(*v1 + 208);
  uint64_t v5 = *(void *)(*v1 + 200);
  *(void *)(*v1 + 448) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0)
  {
    uint64_t v6 = *(void *)(v2 + 432);
    uint64_t v7 = sub_1006C4178;
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 376);
    uint64_t v7 = sub_1006C4080;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1006C4080()
{
  (*(void (**)(void, void))(v0[45] + 8))(v0[46], v0[44]);
  sub_10024D338((uint64_t)(v0 + 2));
  uint64_t v1 = v0[53];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_1006C4178()
{
  uint64_t v1 = *(void *)(v0 + 376);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1006C41E4, v1, 0);
}

uint64_t sub_1006C41E4()
{
  (*(void (**)(void, void))(v0[45] + 8))(v0[46], v0[44]);
  sub_10024D338((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1006C42E8()
{
  uint64_t v2 = v0[45];
  uint64_t v1 = v0[46];
  uint64_t v3 = v0[44];
  (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_10024D338((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1006C440C()
{
  (*(void (**)(void, void))(v0[45] + 8))(v0[46], v0[44]);
  sub_10024D338((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1006C4510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[22] = v14;
  v9[23] = v8;
  v9[20] = a7;
  v9[21] = a8;
  v9[18] = a3;
  v9[19] = a4;
  v9[16] = a1;
  v9[17] = a2;
  sub_10000A844((uint64_t *)&unk_10097F1D0);
  v9[24] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer.State();
  v9[25] = v10;
  v9[26] = *(void *)(v10 - 8);
  v9[27] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_100975040);
  v9[28] = swift_task_alloc();
  sub_10000A844(&qword_10097F1E0);
  v9[29] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v11 = static AirDropActor.shared;
  return _swift_task_switch(sub_1006C46AC, v11, 0);
}

uint64_t sub_1006C46AC()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[29];
  uint64_t v3 = v0[27];
  uint64_t v32 = v0[26];
  uint64_t v33 = v0[25];
  uint64_t v4 = v0[23];
  uint64_t v35 = v0[24];
  uint64_t v26 = v4;
  uint64_t v29 = v0[21];
  uint64_t v30 = v0[22];
  uint64_t v36 = v0[20];
  uint64_t v31 = v0[19];
  uint64_t v27 = v0[17];
  uint64_t v28 = v0[18];
  uint64_t v34 = v0[16];
  uint64_t v5 = enum case for SFAirDropReceive.Transfer.Metrics.TransferResult.success(_:);
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 104))(v2, v5, v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v2, 0, 1, v6);
  uint64_t v8 = v4 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_metrics;
  swift_beginAccess();
  SFAirDropReceive.Transfer.Metrics.result.setter();
  swift_endAccess();
  static Date.now.getter();
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v1, 0, 1, v9);
  swift_beginAccess();
  SFAirDropReceive.Transfer.Metrics.endDate.setter();
  swift_endAccess();
  uint64_t v10 = (int *)sub_10000A844((uint64_t *)&unk_100974550);
  uint64_t v11 = v3 + v10[12];
  uint64_t v12 = (void *)(v3 + v10[16]);
  uint64_t v13 = v10[20];
  uint64_t v14 = v10[24];
  uint64_t v23 = v10[28];
  uint64_t v15 = type metadata accessor for SFAirDropReceive.Transfer.Metrics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v3, v8, v15);
  uint64_t v16 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v24 = v16;
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  v25(v11, v36, v16);
  *uint64_t v12 = v29;
  v12[1] = v30;
  *(void *)(v3 + v13) = v27;
  *(void *)(v3 + v14) = v28;
  *(void *)(v3 + v23) = v31;
  (*(void (**)(uint64_t, void, uint64_t))(v32 + 104))(v3, enum case for SFAirDropReceive.Transfer.State.completedSuccessfully(_:), v33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1006BE3BC(v3, v34);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v3, v33);
  uint64_t v18 = v26 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
  swift_beginAccess();
  sub_100278C8C(v18, (uint64_t)(v0 + 2));
  uint64_t v19 = v0[5];
  uint64_t v20 = v0[6];
  sub_10026BB6C(v0 + 2, v19);
  v25(v35, v36, v24);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v35, 0, 1, v24);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 96))(v34, 1, v35, v19, v20);
  sub_10000A7E8(v35, (uint64_t *)&unk_10097F1D0);
  sub_10024D338((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_1006C4B08()
{
  v1[4] = v0;
  sub_10000A844(&qword_10096C920);
  v1[5] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for SFAirDropReceive.Failure();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for SFAirDrop.TransferType();
  v1[10] = v3;
  v1[11] = *(void *)(v3 - 8);
  v1[12] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropReceive.Transfer.State();
  v1[13] = v4;
  v1[14] = *(void *)(v4 - 8);
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SFAirDropReceive.Transfer();
  v1[17] = v5;
  v1[18] = *(void *)(v5 - 8);
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v1[21] = static AirDropActor.shared;
  return _swift_task_switch(sub_1006C4D78, v6, 0);
}

uint64_t sub_1006C4D78()
{
  uint64_t v75 = v0;
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[16];
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[14];
  CurrentValueSubject.value.getter();
  SFAirDropReceive.Transfer.state.getter();
  uint64_t v73 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v73(v1, v2);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v4, v5);
  if (v7 == enum case for SFAirDropReceive.Transfer.State.completedSuccessfully(_:))
  {
    uint64_t v9 = v0[11];
    uint64_t v8 = v0[12];
    uint64_t v10 = v0[10];
    (*(void (**)(void, void))(v0[14] + 96))(v0[16], v0[13]);
    uint64_t v11 = sub_10000A844((uint64_t *)&unk_100974550);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    SFAirDropReceive.AskRequest.type.getter();
    char v12 = SFAirDrop.TransferType.isOnlyExchange.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    if (v12)
    {
      char v13 = 1;
    }
    else
    {
      sub_100394300();
      uint64_t v27 = (void *)static NSUserDefaults.airdrop.getter();
      char v28 = SFAirDropUserDefaults.moveToAppEnabled.getter();

      char v13 = v28 ^ 1;
    }
    uint64_t v29 = v0[16];
    uint64_t v30 = v29 + *(int *)(v11 + 48);
    uint64_t v31 = type metadata accessor for SFAirDropReceive.ItemDestination();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
    uint64_t v32 = type metadata accessor for SFAirDropReceive.Transfer.Metrics();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v29, v32);
    if ((v13 & 1) == 0) {
      goto LABEL_23;
    }
LABEL_20:
    uint64_t v51 = v0[4];
    uint64_t v52 = v0[5];
    uint64_t v53 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v52, 1, 1, v53);
    uint64_t v54 = static AirDropActor.shared;
    uint64_t v55 = sub_1006C9214((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v56 = (void *)swift_allocObject();
    v56[2] = v54;
    v56[3] = v55;
    void v56[4] = v51;
    swift_retain();
    swift_retain();
    v0[22] = sub_10028CFA8(v52, (uint64_t)&unk_10097F1F8, (uint64_t)v56);
    uint64_t v57 = (void *)swift_task_alloc();
    v0[23] = v57;
    void *v57 = v0;
    v57[1] = sub_1006C58D0;
    return Task<>.value.getter();
  }
  if (v7 != enum case for SFAirDropReceive.Transfer.State.transferFailed(_:))
  {
    swift_retain_n();
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = v0[19];
      uint64_t v36 = v0[17];
      unint64_t v70 = v33;
      uint64_t v38 = v0[14];
      uint64_t v37 = v0[15];
      uint64_t v39 = v0[13];
      os_log_type_t type = v34;
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136315138;
      CurrentValueSubject.value.getter();
      SFAirDropReceive.Transfer.state.getter();
      v73(v35, v36);
      sub_1006C9214(&qword_100970950, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v41 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v43 = v42;
      uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
      v44(v37, v39);
      v0[3] = sub_100254634(v41, v43, &v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v70, type, "runPostTransferEndedSteps invalid transfer state. Skipping. {transfer.state: %s}", v40, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v48 = v0[14];
      swift_release_n();

      uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
    }
    v44(v0[16], v0[13]);
    goto LABEL_23;
  }
  uint64_t v14 = v0[16];
  uint64_t v16 = v0[8];
  uint64_t v15 = v0[9];
  uint64_t v17 = v0[6];
  uint64_t v18 = v0[7];
  (*(void (**)(uint64_t, void))(v0[14] + 96))(v14, v0[13]);
  uint64_t v19 = sub_10000A844(&qword_100970340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v15, v14 + *(int *)(v19 + 48), v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v16, v15, v17);
  int v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 88))(v16, v17);
  if (v20 == enum case for SFAirDropReceive.Failure.unsupportedType(_:))
  {
    uint64_t v21 = v0[8];
    uint64_t v22 = v0[6];
    uint64_t v23 = v0[7];
    (*(void (**)(void, uint64_t))(v23 + 8))(v0[9], v22);
    (*(void (**)(uint64_t, uint64_t))(v23 + 96))(v21, v22);
    swift_bridgeObjectRelease();
    uint64_t v24 = v21 + *(int *)(sub_10000A844((uint64_t *)&unk_1009723D0) + 48);
    uint64_t v25 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
    char v26 = 1;
    goto LABEL_19;
  }
  if (v20 == enum case for SFAirDropReceive.Failure.unexpected(_:))
  {
    uint64_t v45 = v0[8];
    uint64_t v46 = v0[6];
    unint64_t v47 = *(void (**)(uint64_t, uint64_t))(v0[7] + 8);
    v47(v0[9], v46);
    v47(v45, v46);
    char v26 = 1;
    goto LABEL_19;
  }
  if (v20 == enum case for SFAirDropReceive.Failure.declined(_:)
    || v20 == enum case for SFAirDropReceive.Failure.askDismissed(_:))
  {
    goto LABEL_18;
  }
  if (v20 == enum case for SFAirDropReceive.Failure.senderCancelled(_:))
  {
LABEL_30:
    (*(void (**)(void, void))(v0[7] + 8))(v0[9], v0[6]);
    char v26 = 1;
LABEL_19:
    uint64_t v49 = v0[16];
    uint64_t v50 = type metadata accessor for SFAirDropReceive.Transfer.Metrics();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v49, v50);
    if ((v26 & 1) == 0)
    {
LABEL_23:
      swift_retain_n();
      id v58 = Logger.logObject.getter();
      os_log_type_t v59 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = v0[19];
        uint64_t v62 = v0[14];
        uint64_t v61 = v0[15];
        uint64_t v69 = v0[17];
        uint64_t v71 = v0[13];
        uint64_t v63 = (uint8_t *)swift_slowAlloc();
        uint64_t v74 = swift_slowAlloc();
        *(_DWORD *)uint64_t v63 = 136315138;
        CurrentValueSubject.value.getter();
        SFAirDropReceive.Transfer.state.getter();
        v73(v60, v69);
        sub_1006C9214(&qword_100970950, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Transfer.State);
        uint64_t v64 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v66 = v65;
        (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v71);
        v0[2] = sub_100254634(v64, v66, &v74);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "Transer Linger SKIPPED. {transfer.state: %s}", v63, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();
      }

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v67 = (uint64_t (*)(void))v0[1];
      return v67();
    }
    goto LABEL_20;
  }
  if (v20 == enum case for SFAirDropReceive.Failure.receiverCancelled(_:)
    || v20 == enum case for SFAirDropReceive.Failure.mixedTypes(_:))
  {
    goto LABEL_18;
  }
  if (v20 == enum case for SFAirDropReceive.Failure.missingDownloadDirectory(_:)) {
    goto LABEL_30;
  }
  if (v20 == enum case for SFAirDropReceive.Failure.missingOwnContact(_:))
  {
LABEL_18:
    (*(void (**)(void, void))(v0[7] + 8))(v0[9], v0[6]);
    char v26 = 0;
    goto LABEL_19;
  }
  if (v20 == enum case for SFAirDropReceive.Failure.streamError(_:)
    || v20 == enum case for SFAirDropReceive.Failure.askNotHandled(_:)
    || v20 == enum case for SFAirDropReceive.Failure.incompleteTransfer(_:)
    || v20 == enum case for SFAirDropReceive.Failure.badRequest(_:)
    || v20 == enum case for SFAirDropReceive.Failure.moveToAppFailed(_:)
    || v20 == enum case for SFAirDropReceive.Failure.insufficientStorage(_:))
  {
    goto LABEL_30;
  }
  return _diagnoseUnexpectedEnumCase<A>(type:)();
}

uint64_t sub_1006C58D0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 168);
  swift_task_dealloc();
  return _swift_task_switch(sub_1006C59E0, v1, 0);
}

uint64_t sub_1006C59E0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006C5AA8(uint64_t a1, uint64_t a2)
{
  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  sub_10000A844((uint64_t *)&unk_10097F1D0);
  v3[19] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropReceive.Transfer.State();
  v3[20] = v4;
  v3[21] = *(void *)(v4 - 8);
  v3[22] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_100975040);
  v3[23] = swift_task_alloc();
  sub_10000A844(&qword_10097F1E0);
  v3[24] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_1006C5C34, v5, 0);
}

uint64_t sub_1006C5C34()
{
  uint64_t v1 = v0[24];
  uint64_t v18 = v0[22];
  uint64_t v23 = v0[23];
  uint64_t v24 = v0[21];
  uint64_t v2 = v0[18];
  uint64_t v22 = v0[19];
  uint64_t v3 = v0[17];
  uint64_t v20 = v0[16];
  uint64_t v21 = v0[20];
  uint64_t v4 = type metadata accessor for SFAirDropReceive.Failure();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  v19(v1, v3, v4);
  uint64_t v5 = enum case for SFAirDropReceive.Transfer.Metrics.TransferResult.failure(_:);
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 104))(v1, v5, v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v1, 0, 1, v6);
  uint64_t v8 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_metrics;
  swift_beginAccess();
  SFAirDropReceive.Transfer.Metrics.result.setter();
  swift_endAccess();
  static Date.now.getter();
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v23, 0, 1, v9);
  swift_beginAccess();
  SFAirDropReceive.Transfer.Metrics.endDate.setter();
  swift_endAccess();
  uint64_t v10 = v18 + *(int *)(sub_10000A844(&qword_100970340) + 48);
  uint64_t v11 = type metadata accessor for SFAirDropReceive.Transfer.Metrics();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v18, v8, v11);
  v19(v10, v3, v4);
  (*(void (**)(uint64_t, void, uint64_t))(v24 + 104))(v18, enum case for SFAirDropReceive.Transfer.State.transferFailed(_:), v21);
  sub_1006BE3BC(v18, v20);
  uint64_t v12 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
  swift_beginAccess();
  sub_100278C8C(v12, (uint64_t)(v0 + 2));
  uint64_t v13 = v0[5];
  uint64_t v14 = v0[6];
  sub_10026BB6C(v0 + 2, v13);
  uint64_t v15 = type metadata accessor for SFAirDropReceive.ItemDestination();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v22, 1, 1, v15);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(v14 + 96))(v20, 0, v22, v13, v14);
  sub_10000A7E8(v22, (uint64_t *)&unk_10097F1D0);
  sub_10024D338((uint64_t)(v0 + 2));
  sub_1006C63D4();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v18, v21);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1006C6014(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v29 = *(void *)(v4 - 8);
  uint64_t v30 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v27 = a1;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v32 = v26;
    uint64_t v28 = v1;
    *(_DWORD *)uint64_t v13 = 136315138;
    v25[1] = v13 + 4;
    SFAirDropReceive.Transfer.id.getter();
    uint64_t v14 = SFAirDrop.TransferIdentifier.shortIdentifier.getter();
    unint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v30);
    uint64_t v31 = sub_100254634(v14, v16, &v32);
    uint64_t v2 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Begin Receive OSTransaction and Power Assertion %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v32 = 0;
  unint64_t v33 = 0xE000000000000000;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  uint64_t v32 = 0xD000000000000010;
  unint64_t v33 = 0x80000001007C7700;
  SFAirDropReceive.Transfer.id.getter();
  uint64_t v17 = SFAirDrop.TransferIdentifier.shortIdentifier.getter();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v30);
  v20._uint64_t countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  v21._uint64_t countAndFlagsBits = 93;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  String.utf8CString.getter();
  swift_bridgeObjectRelease();
  uint64_t v22 = os_transaction_create();
  swift_release();
  *(void *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_osTransaction) = v22;
  swift_unknownObjectRelease();
  uint64_t result = sub_100052784();
  uint64_t v24 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_powerAssertion;
  *(_DWORD *)uint64_t v24 = result;
  *(unsigned char *)(v24 + 4) = 0;
  return result;
}

uint64_t sub_1006C63D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_osTransaction;
  if (*(void *)(v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_osTransaction))
  {
    swift_unknownObjectRetain();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Clearing Receive OSTransaction", v5, 2u);
      swift_slowDealloc();
    }
    swift_unknownObjectRelease();

    *(void *)(v1 + v2) = 0;
    swift_unknownObjectRelease();
  }
  uint64_t v6 = v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_powerAssertion;
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_powerAssertion + 4) & 1) == 0)
  {
    IOPMAssertionID v7 = *(_DWORD *)v6;
    if (*(_DWORD *)v6)
    {
      uint64_t v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Clearing Receive Power Assertion", v10, 2u);
        swift_slowDealloc();
      }

      IOPMAssertionRelease(v7);
      *(_DWORD *)uint64_t v6 = 0;
      *(unsigned char *)(v6 + 4) = 1;
    }
  }
  uint64_t v11 = *(void *)(v1
                  + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager
                  + 24);
  uint64_t v12 = *(void *)(v1
                  + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager
                  + 32);
  sub_10026BB6C((void *)(v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager), v11);
  v15[3] = _s10BaseRunnerCMa(0);
  v15[0] = v1;
  uint64_t v13 = *(void (**)(void *, uint64_t, uint64_t))(v12 + 24);
  swift_retain();
  v13(v15, v11, v12);
  return sub_10024D338((uint64_t)v15);
}

uint64_t sub_1006C65B8(double a1)
{
  uint64_t v3 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SFAirDrop.DisplayPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  os_log_type_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_displayPriorityReturnToNormalTask;
  if (*(void *)(v1
                 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_displayPriorityReturnToNormalTask))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for SFAirDrop.DisplayPriority.high(_:), v6);
  sub_1006BE404((uint64_t)v9, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v15 = type metadata accessor for TaskPriority();
  unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  v16(v5, 1, 1, v15);
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = swift_allocObject();
  *(double *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = static Task<>.noThrow(priority:operation:)();
  swift_release();
  sub_10000A7E8((uint64_t)v5, &qword_10096C920);
  *(void *)(v1 + v14) = v19;
  swift_retain();
  swift_release();
  v16(v5, 1, 1, v15);
  swift_retain();
  static Task<>.noThrow(priority:operation:)();
  swift_release_n();
  swift_release();
  return sub_10000A7E8((uint64_t)v5, &qword_10096C920);
}

uint64_t sub_1006C693C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844((uint64_t *)&unk_10097EFA0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10000A844(&qword_1009785B8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  os_log_type_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v19[-v10];
  uint64_t v12 = *(void *)(v0
                  + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager
                  + 24);
  uint64_t v13 = *(void *)(v0
                  + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager
                  + 32);
  sub_10026BB6C((void *)(v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager), v12);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  if ((result & 1) == 0)
  {
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Lock state changed to unlocked", v17, 2u);
      swift_slowDealloc();
    }

    uint64_t v18 = v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateContinuation;
    swift_beginAccess();
    sub_10024A330(v18, (uint64_t)v11, &qword_1009785B8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2))
    {
      sub_10000A7E8((uint64_t)v11, &qword_1009785B8);
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v5, v11, v2);
      sub_10000A7E8((uint64_t)v11, &qword_1009785B8);
      CheckedContinuation.resume(returning:)();
      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
    }
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v9, 1, 1, v2);
    swift_beginAccess();
    sub_10053B18C((uint64_t)v9, v18);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1006C6C28(uint64_t a1)
{
  uint64_t v2 = sub_10000A844((uint64_t *)&unk_10097F250);
  __chkstk_darwin(v2 - 8);
  uint64_t v89 = (char *)v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for SFSandboxTokenURLPair();
  uint64_t v86 = *(void *)(v107 - 8);
  uint64_t v4 = __chkstk_darwin(v107);
  unint64_t v77 = (char *)v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v83 = (char *)v75 - v7;
  __chkstk_darwin(v6);
  uint64_t v82 = (char *)v75 - v8;
  uint64_t v9 = sub_10000A844(&qword_100970FC8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for SFSecurityScopedURL();
  uint64_t v12 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v88 = (char *)v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  Swift::String v103 = (char *)v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  unint64_t v99 = (char *)v75 - v19;
  __chkstk_darwin(v18);
  uint64_t v106 = (char *)v75 - v20;
  uint64_t v21 = sub_10000A844((uint64_t *)&unk_10096AC10);
  __chkstk_darwin(v21 - 8);
  long long v101 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for SFPlatform();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  static SFPlatform.macOS.getter();
  char v27 = static SFPlatform.isPlatform(_:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  if (v27)
  {
    uint64_t v29 = a1;
    uint64_t v30 = *(void *)(a1 + 16);
    if (v30)
    {
      uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
      uint64_t v32 = v29 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
      unint64_t v97 = (unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      uint64_t v33 = *(void *)(v15 + 72);
      uint64_t v94 = (void (**)(char *, char *, uint64_t))(v15 + 32);
      uint64_t v95 = v33;
      int v93 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
      id v81 = (void (**)(char *, char *, uint64_t))(v12 + 32);
      uint64_t v80 = (void (**)(char *, void, uint64_t, uint64_t))(v86 + 56);
      char v79 = (void (**)(char *, uint64_t))(v12 + 8);
      uint64_t v92 = (void (**)(char *, uint64_t))(v15 + 8);
      unint64_t v78 = (void (**)(char *, char *, uint64_t))(v86 + 32);
      uint64_t v76 = (void (**)(char *, char *, uint64_t))(v86 + 16);
      v75[2] = v86 + 8;
      v75[1] = v29;
      swift_bridgeObjectRetain();
      uint64_t v105 = 0;
      id v87 = _swiftEmptyArrayStorage;
      uint64_t v98 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
      v75[0] = (v15 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      *(void *)&long long v34 = 136315138;
      long long v85 = v34;
      unint64_t v84 = (char *)&type metadata for Any + 8;
      uint64_t v35 = v89;
      uint64_t v96 = v15 + 16;
      uint64_t v36 = v100;
      uint64_t v37 = v101;
      uint64_t v38 = v103;
      uint64_t v102 = v14;
      id v90 = v11;
      do
      {
        v31(v37, v32, v14);
        uint64_t v91 = *v98;
        v91(v37, 0, 1, v14);
        if ((*v97)(v37, 1, v14) == 1)
        {
          uint64_t v66 = v86;
          goto LABEL_25;
        }
        uint64_t v104 = v30;
        uint64_t v41 = v31;
        unint64_t v42 = v106;
        (*v94)(v106, v37, v14);
        unint64_t v43 = v42;
        uint64_t v31 = v41;
        v41(v99, (uint64_t)v43, v14);
        uint64_t v44 = v105;
        SFSecurityScopedURL.init(_:readWrite:)();
        if (v44)
        {
          swift_errorRelease();
          (*v93)(v11, 1, 1, v36);
          sub_10000A7E8((uint64_t)v11, &qword_100970FC8);
          if (qword_100969D30 != -1) {
            swift_once();
          }
          uint64_t v45 = type metadata accessor for Logger();
          sub_10000B47C(v45, (uint64_t)qword_100970FA8);
          uint64_t v46 = v106;
          v41(v38, (uint64_t)v106, v14);
          unint64_t v47 = Logger.logObject.getter();
          os_log_type_t v48 = static os_log_type_t.error.getter();
          BOOL v49 = os_log_type_enabled(v47, v48);
          uint64_t v105 = 0;
          if (v49)
          {
            uint64_t v50 = swift_slowAlloc();
            uint64_t v108 = swift_slowAlloc();
            *(_DWORD *)uint64_t v50 = v85;
            sub_1006C9214((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
            uint64_t v51 = dispatch thunk of CustomStringConvertible.description.getter();
            *(void *)(v50 + 4) = sub_100254634(v51, v52, &v108);
            swift_bridgeObjectRelease();
            uint64_t v53 = *v92;
            (*v92)(v103, v102);
            _os_log_impl((void *)&_mh_execute_header, v47, v48, "Failed to get security scoped url %s", (uint8_t *)v50, 0xCu);
            swift_arrayDestroy();
            uint64_t v38 = v103;
            uint64_t v35 = v89;
            swift_slowDealloc();
            uint64_t v14 = v102;
            swift_slowDealloc();

            v53(v46, v14);
          }
          else
          {

            uint64_t v39 = *v92;
            (*v92)(v38, v14);
            v39(v46, v14);
          }
          uint64_t v11 = v90;
          uint64_t v36 = v100;
          uint64_t v31 = v41;
          uint64_t v40 = v104;
        }
        else
        {
          (*v93)(v11, 0, 1, v36);
          (*v81)(v88, v11, v36);
          static SFSecurityScopedURL.consumeSandboxToken(item:)();
          uint64_t v105 = 0;
          uint64_t v54 = v107;
          (*v80)(v35, 0, 1, v107);
          uint64_t v55 = *v78;
          uint64_t v56 = v82;
          (*v78)(v82, v35, v54);
          (*v76)(v83, v56, v54);
          if (swift_isUniquelyReferenced_nonNull_native())
          {
            uint64_t v57 = v88;
            unint64_t v58 = (unint64_t)v87;
          }
          else
          {
            unint64_t v58 = sub_10025396C(0, v87[2] + 1, 1, (unint64_t)v87);
            uint64_t v57 = v88;
          }
          uint64_t v40 = v104;
          uint64_t v14 = v102;
          unint64_t v60 = *(void *)(v58 + 16);
          unint64_t v59 = *(void *)(v58 + 24);
          if (v60 >= v59 >> 1) {
            unint64_t v58 = sub_10025396C(v59 > 1, v60 + 1, 1, v58);
          }
          *(void *)(v58 + 16) = v60 + 1;
          uint64_t v61 = v86;
          unint64_t v62 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
          id v87 = (void *)v58;
          unint64_t v63 = v58 + v62 + *(void *)(v86 + 72) * v60;
          uint64_t v64 = v107;
          v55((char *)v63, v83, v107);
          (*(void (**)(char *, uint64_t))(v61 + 8))(v82, v64);
          (*v92)(v106, v14);
          uint64_t v36 = v100;
          (*v79)(v57, v100);
          uint64_t v35 = v89;
          uint64_t v38 = v103;
        }
        v32 += v95;
        uint64_t v30 = v40 - 1;
        uint64_t v37 = v101;
      }
      while (v30);
      unint64_t v65 = v91;
    }
    else
    {
      unint64_t v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
      swift_bridgeObjectRetain();
      id v87 = _swiftEmptyArrayStorage;
      uint64_t v37 = v101;
    }
    v65(v37, 1, 1, v14);
    uint64_t v66 = v86;
LABEL_25:
    swift_bridgeObjectRelease();
    uint64_t v67 = v87[2];
    unint64_t v68 = v77;
    if (v67)
    {
      uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
      uint64_t v70 = v66 + 16;
      uint64_t v69 = v71;
      uint64_t v72 = (char *)v87 + ((*(unsigned __int8 *)(v70 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 64));
      uint64_t v73 = *(void *)(v70 + 56);
      swift_bridgeObjectRetain();
      uint64_t v74 = v107;
      do
      {
        v69(v68, v72, v74);
        SFSandboxTokenURLPair.releaseSandboxExtension()();
        (*(void (**)(char *, uint64_t))(v70 - 8))(v68, v74);
        v72 += v73;
        --v67;
      }
      while (v67);
      return swift_bridgeObjectRelease_n();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1006C77C4()
{
  uint64_t v1 = _s10BaseRunnerC11FinishTokenVMa(0);
  __chkstk_darwin(v1);
  uint64_t v41 = (uint64_t)v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SFAirDropReceive.Transfer.State();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v35 - v12;
  SFAirDropReceive.Transfer.state.getter();
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v13, v7);
  if (v14 == enum case for SFAirDropReceive.Transfer.State.completedSuccessfully(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v13, v7);
    uint64_t v15 = &v13[*(int *)(sub_10000A844((uint64_t *)&unk_100974550) + 48)];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = type metadata accessor for SFAirDropReceive.ItemDestination();
    (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
LABEL_5:
    uint64_t v19 = type metadata accessor for SFAirDropReceive.Transfer.Metrics();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v13, v19);
  }
  if (v14 == enum case for SFAirDropReceive.Transfer.State.transferFailed(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v13, v7);
    uint64_t v17 = &v13[*(int *)(sub_10000A844(&qword_100970340) + 48)];
    uint64_t v18 = type metadata accessor for SFAirDropReceive.Failure();
    (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    goto LABEL_5;
  }
  uint64_t v40 = v4;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v22 = v3;
  uint64_t v23 = v6;
  v21(v6, v0, v22);
  uint64_t v24 = v41;
  sub_1006C89F0(v0, v41);
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.fault.getter();
  int v27 = v26;
  if (os_log_type_enabled(v25, v26))
  {
    os_log_t v39 = v25;
    uint64_t v28 = swift_slowAlloc();
    int v37 = v27;
    uint64_t v29 = (uint8_t *)v28;
    uint64_t v38 = swift_slowAlloc();
    uint64_t v43 = v38;
    uint64_t v36 = v29;
    *(_DWORD *)uint64_t v29 = 136315138;
    v35[1] = (uint64_t)(v29 + 4);
    SFAirDropReceive.Transfer.state.getter();
    sub_1006C9214(&qword_100970950, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Transfer.State);
    v35[0] = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v31 = v30;
    uint64_t v32 = v11;
    uint64_t v33 = *(void (**)(char *, uint64_t))(v8 + 8);
    v33(v32, v7);
    uint64_t v42 = sub_100254634(v35[0], v31, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1006C8A54(v24);
    os_log_t v34 = v39;
    _os_log_impl((void *)&_mh_execute_header, v39, (os_log_type_t)v37, "Unexpected transfer state in FinishToken.validate {transfer.state: %s}", v36, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v40 + 8))(v23, v22);
    return ((uint64_t (*)(char *, uint64_t))v33)(v13, v7);
  }
  else
  {
    sub_1006C8A54(v24);

    (*(void (**)(char *, uint64_t))(v40 + 8))(v23, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
}

uint64_t sub_1006C7D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a4;
  uint64_t v5 = type metadata accessor for ContinuousClock();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v4[11] = static AirDropActor.shared;
  return _swift_task_switch(sub_1006C7E28, v6, 0);
}

uint64_t sub_1006C7E28()
{
  *(void *)(v0 + 96) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Transfer Linger START", v3, 2u);
    swift_slowDealloc();
  }

  ContinuousClock.init()();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1006C7F7C;
  return v6(5000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_1006C7F7C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = *(void *)(*v1 + 72);
  uint64_t v5 = *(void *)(*v1 + 64);
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 88);
  if (v0) {
    uint64_t v7 = sub_10032184C;
  }
  else {
    uint64_t v7 = sub_1006C8104;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1006C8104()
{
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Receive StateMachine Linger END", v3, 2u);
    swift_slowDealloc();
  }

  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1006C81E4(double a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 48) = a3;
  *(double *)(v3 + 40) = a1;
  uint64_t v4 = type metadata accessor for SFAirDrop.DisplayPriority();
  *(void *)(v3 + 56) = v4;
  *(void *)(v3 + 64) = *(void *)(v4 - 8);
  *(void *)(v3 + 72) = swift_task_alloc();
  sub_10000A844(&qword_100970920);
  *(void *)(v3 + 80) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for ContinuousClock();
  *(void *)(v3 + 88) = v5;
  *(void *)(v3 + 96) = *(void *)(v5 - 8);
  *(void *)(v3 + 104) = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  *(void *)(v3 + 112) = static AirDropActor.shared;
  return _swift_task_switch(sub_1006C8370, v6, 0);
}

uint64_t sub_1006C8370()
{
  uint64_t v1 = static Duration.seconds(_:)();
  uint64_t v3 = v2;
  ContinuousClock.init()();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1006C844C;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_1006C844C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 104);
  uint64_t v4 = *(void *)(*v1 + 96);
  uint64_t v5 = *(void *)(*v1 + 88);
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v7 = sub_100323574;
  }
  else {
    uint64_t v7 = sub_1006C85D4;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1006C85D4()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v2 = v0[9];
    uint64_t v1 = v0[10];
    uint64_t v3 = v0[7];
    uint64_t v4 = v0[8];
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v2, enum case for SFAirDrop.DisplayPriority.normal(_:), v3);
    sub_1006BE404(v2, v1);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  uint64_t v6 = v0[10];
  uint64_t v7 = type metadata accessor for SFAirDropReceive.Transfer();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, v5, 1, v7);
  sub_10000A7E8(v6, &qword_100970920);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1006C877C()
{
  sub_1006BE258();

  return swift_deallocClassInstance();
}

uint64_t sub_1006C87D4()
{
  return _s10BaseRunnerCMa(0);
}

uint64_t _s10BaseRunnerCMa(uint64_t a1)
{
  return sub_10000B93C(a1, (uint64_t *)&unk_10097EF60);
}

void sub_1006C87FC()
{
  type metadata accessor for SFAirDropReceive.AskRequest();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Logger();
    if (v1 <= 0x3F)
    {
      type metadata accessor for SFAirDropReceive.Transfer.Metrics();
      if (v2 <= 0x3F)
      {
        sub_1006C8974();
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_1006C8974()
{
  if (!qword_10097EF98)
  {
    sub_100247840((uint64_t *)&unk_10097EFA0);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10097EF98);
    }
  }
}

uint64_t _s10BaseRunnerC11FinishTokenVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10097F2C0);
}

uint64_t sub_1006C89F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10BaseRunnerC11FinishTokenVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006C8A54(uint64_t a1)
{
  uint64_t v2 = _s10BaseRunnerC11FinishTokenVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1006C8AB0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v45 = a4;
  uint64_t v46 = a2;
  uint64_t v41 = a3;
  uint64_t v38 = a1;
  uint64_t v6 = type metadata accessor for Date();
  __chkstk_darwin(v6 - 8);
  uint64_t v42 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SFAirDropReceive.Transfer.Metrics();
  uint64_t v43 = *(void *)(v8 - 8);
  uint64_t v44 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v39 = v11;
  uint64_t v40 = v12;
  __chkstk_darwin(v11);
  int v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SFAirDropReceive.AskRequest();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v4 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateContinuation;
  uint64_t v20 = sub_10000A844((uint64_t *)&unk_10097EFA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  *(void *)(v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_osTransaction) = 0;
  uint64_t v21 = v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_powerAssertion;
  *(_DWORD *)uint64_t v21 = 0;
  *(unsigned char *)(v21 + 4) = 1;
  *(void *)(v5
            + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_displayPriorityReturnToNormalTask) = 0;
  uint64_t v22 = v38;
  SFAirDropReceive.Transfer.askRequest.getter();
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_askRequest, v18, v15);
  sub_100278C8C(v46, v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler);
  uint64_t v23 = v41;
  *(void *)(v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_deviceStatus) = v41;
  uint64_t v24 = v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  uint64_t v25 = type metadata accessor for Logger();
  uint64_t v26 = *(void *)(v25 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v24, v45, v25);
  int v27 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v28 = v22;
  v27(v14, v22, v11);
  sub_10000A844(&qword_10097F1A0);
  swift_allocObject();
  id v29 = v23;
  *(void *)(v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject) = CurrentValueSubject.init(_:)();
  SFAirDropReceive.Transfer.startDate.getter();
  SFAirDropReceive.Transfer.Metrics.init(startDate:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_metrics, v10, v44);
  unint64_t v30 = (uint64_t *)(v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager);
  uint64_t v31 = type metadata accessor for SDAirDropPlatformLockStateManagerSupported();
  uint64_t v32 = swift_allocObject();
  v30[3] = v31;
  id v30[4] = (uint64_t)&off_1008DDAE0;
  *unint64_t v30 = v32;
  sub_1006C6014(v28);
  uint64_t v33 = *(void *)(v5
                  + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager
                  + 24);
  uint64_t v34 = *(void *)(v5
                  + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager
                  + 32);
  sub_10026BB6C((void *)(v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_lockStateManager), v33);
  v47[3] = _s10BaseRunnerCMa(0);
  v47[0] = v5;
  uint64_t v35 = *(void (**)(void *, const char *, uint64_t, uint64_t))(v34 + 16);
  swift_retain();
  v35(v47, "lockStateChanged", v33, v34);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v45, v25);
  sub_10024D338(v46);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v28, v39);
  sub_10024D338((uint64_t)v47);
  return v5;
}

uint64_t sub_1006C8F64()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1006C8F9C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006C8FD4(uint64_t a1)
{
  double v4 = *(double *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_10000A6F0;
  return sub_1006C81E4(v4, a1, v5);
}

uint64_t sub_1006C9084(uint64_t a1)
{
  double v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *double v4 = v2;
  v4[1] = sub_10000A6F4;
  return sub_1003235F0(a1, v1);
}

uint64_t sub_1006C9120()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1006C9160(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_10000A6F0;
  return sub_1006C7D2C(a1, v4, v5, v6);
}

uint64_t sub_1006C9214(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1006C925C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Logger();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for SFAirDropReceive.Transfer();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1006C9364(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_1006C940C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_1006C94C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_1006C957C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_1006C9634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1006C96EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006C9700);
}

uint64_t sub_1006C9700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1006C97F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006C980C);
}

uint64_t sub_1006C980C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for SFAirDropReceive.Transfer();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_1006C9910()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SFAirDropReceive.Transfer();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1006C99D8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for URL();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v2[7] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferType();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_1006C9B5C, v5, 0);
}

void sub_1006C9B5C()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  SFAirDropReceive.AskRequest.type.getter();
  char v4 = SFAirDrop.TransferType.isLinks.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if ((v4 & 1) == 0)
  {
    uint64_t v24 = 0;
LABEL_28:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (void (*)(uint64_t))v0[1];
    v25(v24);
    return;
  }
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[3];
  uint64_t v7 = SFAirDropReceive.AskRequest.urlItems.getter();
  int64_t v8 = 0;
  uint64_t v26 = v7 + 56;
  uint64_t v9 = -1;
  uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
  if (-v10 < 64) {
    uint64_t v9 = ~(-1 << -(char)v10);
  }
  unint64_t v11 = v9 & *(void *)(v7 + 56);
  uint64_t v28 = v7;
  int64_t v27 = (unint64_t)(63 - v10) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v13 = v12 | (v8 << 6);
      goto LABEL_21;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v14 >= v27) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v27) {
        goto LABEL_26;
      }
      unint64_t v15 = *(void *)(v26 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v27) {
          goto LABEL_26;
        }
        unint64_t v15 = *(void *)(v26 + 8 * v8);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_21:
    uint64_t v17 = v0[7];
    uint64_t v18 = v0[4];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))(v17, *(void *)(v28 + 48) + *(void *)(v5 + 72) * v13, v18);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v17, 0, 1, v18);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v17, 1, v18) == 1)
    {
      swift_release();
      uint64_t v24 = 1;
      goto LABEL_27;
    }
    uint64_t v19 = v0[6];
    uint64_t v20 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 32))(v19, v0[7], v20);
    sub_1003ACB84(&off_1008D2668);
    uint64_t v22 = v21;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v20);
    uint64_t v23 = *(void **)(v6 + 16);
    *(void *)(v6 + 16) = v22;

    if (!*(void *)(v6 + 16))
    {
      swift_release();
      uint64_t v24 = 0;
LABEL_27:
      swift_arrayDestroy();
      goto LABEL_28;
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v27)
  {
LABEL_26:
    uint64_t v24 = 1;
    (*(void (**)(void, uint64_t, uint64_t, void))(v5 + 56))(v0[7], 1, 1, v0[4]);
    swift_release();
    goto LABEL_27;
  }
  unint64_t v15 = *(void *)(v26 + 8 * v16);
  if (v15)
  {
    int64_t v8 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v8 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v8 >= v27) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v8);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_32:
  __break(1u);
}

uint64_t type metadata accessor for SDAirDropContentHandleriBooksLinks()
{
  return self;
}

uint64_t sub_1006C9EE8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandleriBooksLinks();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1006C9F20(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_1006C99D8(a1);
}

uint64_t sub_1006C9FBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_10097F1D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void **)(*(void *)v2 + 16);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v9 = type metadata accessor for SFAirDropReceive.ItemDestination();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  id v10 = v8;
  sub_10039FAA0(a1, v8, 1, a2);

  return sub_10024DFE8((uint64_t)v7);
}

void sub_1006CA0C0(uint64_t a1, char a2)
{
  unint64_t v3 = *(void *)(SFAirDropReceive.AskRequest.urlItems.getter() + 16);
  swift_bridgeObjectRelease();
  sub_10000A844(&qword_10096D760);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
  *(void *)(inited + 32) = 0xD000000000000017;
  *(void *)(inited + 40) = 0x80000001007C7760;
  *(void *)(inited + 48) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5._uint64_t countAndFlagsBits = 95;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6._uint64_t countAndFlagsBits = 0xD000000000000017;
  v6._object = (void *)0x80000001007C7760;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  if (v3 > 1)
  {
    v7._uint64_t countAndFlagsBits = 0x4C4152554C505FLL;
    v7._object = (void *)0xE700000000000000;
    String.append(_:)(v7);
  }
  swift_bridgeObjectRelease();
  if (a2)
  {
    v8._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
    v8._object = (void *)0xEC00000044455A49;
    String.append(_:)(v8);
  }
  v9._uint64_t countAndFlagsBits = 0x545845545FLL;
  v9._object = (void *)0xE500000000000000;
  String.append(_:)(v9);
  swift_setDeallocating();
  sub_10000A844((uint64_t *)&unk_100977CB0);
  swift_arrayDestroy();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = (id)SFLocalizedStringForKey();

  if (v11)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_10076E7A0;
    *(void *)(v12 + 56) = &type metadata for Int;
    *(void *)(v12 + 64) = &protocol witness table for Int;
    *(void *)(v12 + 32) = v3;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1006CA304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t sub_1006CA310(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *sub_1006CA368(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

__n128 sub_1006CA390(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1006CA3A4(uint64_t a1, uint64_t a2)
{
  sub_10024D338(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t sub_1006CA3E0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1006CA428(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for DeviceSequence()
{
  return sub_1002CEB48();
}

uint64_t sub_1006CA488()
{
  return swift_getWitnessTable();
}

uint64_t sub_1006CA4A4()
{
  type metadata accessor for DeviceSequence.Event();
  sub_100247840(&qword_10096BAF0);
  uint64_t v1 = type metadata accessor for AsyncThrowingStream();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  long long v4 = (char *)&v6 - v3;
  sub_10026BB6C(v0, v0[3]);
  off_10097F4F8();
  AsyncThrowingStream.makeAsyncIterator()();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1006CA5E0(uint64_t a1)
{
  sub_1006CA4A4();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);

  return v3(v1, a1);
}

uint64_t type metadata accessor for DeviceSequence.Event()
{
  return sub_1002CEB48();
}

uint64_t sub_1006CA658()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1006CA6E8(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(_DWORD *)(v4 + 80);
  if (v6 <= 7 && (unint64_t)(v5 + 1) <= 0x18 && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    unsigned int v10 = a2[v5];
    unsigned int v11 = v10 - 3;
    if (v10 >= 3)
    {
      if (v5 <= 3) {
        uint64_t v12 = v5;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a2;
          goto LABEL_18;
        case 2:
          int v13 = *(unsigned __int16 *)a2;
          goto LABEL_18;
        case 3:
          int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_18;
        case 4:
          int v13 = *(_DWORD *)a2;
LABEL_18:
          int v14 = (v13 | (v11 << (8 * v5))) + 3;
          unsigned int v10 = v13 + 3;
          if (v5 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 2)
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 2;
    }
    else if (v10 == 1)
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 1;
    }
    else
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 0;
    }
  }
  else
  {
    uint64_t v9 = *(void *)a2;
    void *v3 = *(void *)a2;
    uint64_t v3 = (void *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1006CA884(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1006CA8B0(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  unsigned int v5 = a2[v4];
  if (v5 >= 3)
  {
    if (v4 <= 3) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a2;
        goto LABEL_10;
      case 2:
        int v7 = *(unsigned __int16 *)a2;
        goto LABEL_10;
      case 3:
        int v7 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_10;
      case 4:
        int v7 = *(_DWORD *)a2;
LABEL_10:
        int v8 = (v7 | ((v5 - 3) << (8 * v4))) + 3;
        char v9 = v7 + 3;
        if (v4 >= 4) {
          LOBYTE(v5) = v9;
        }
        else {
          LOBYTE(v5) = v8;
        }
        break;
      default:
        break;
    }
  }
  (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
  *(unsigned char *)(a1 + v4) = v5;
  return a1;
}

unsigned __int8 *sub_1006CA9C8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 + 64);
    (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    unsigned int v9 = a2[v8];
    if (v9 >= 3)
    {
      if (v8 <= 3) {
        uint64_t v10 = v8;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a2;
          goto LABEL_11;
        case 2:
          int v11 = *(unsigned __int16 *)a2;
          goto LABEL_11;
        case 3:
          int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_11;
        case 4:
          int v11 = *(_DWORD *)a2;
LABEL_11:
          int v12 = (v11 | ((v9 - 3) << (8 * v8))) + 3;
          char v13 = v11 + 3;
          if (v8 >= 4) {
            LOBYTE(v9) = v13;
          }
          else {
            LOBYTE(v9) = v12;
          }
          break;
        default:
          break;
      }
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v5);
    a1[v8] = v9;
  }
  return a1;
}

uint64_t sub_1006CAB28(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  unsigned int v5 = a2[v4];
  if (v5 >= 3)
  {
    if (v4 <= 3) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a2;
        goto LABEL_10;
      case 2:
        int v7 = *(unsigned __int16 *)a2;
        goto LABEL_10;
      case 3:
        int v7 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_10;
      case 4:
        int v7 = *(_DWORD *)a2;
LABEL_10:
        int v8 = (v7 | ((v5 - 3) << (8 * v4))) + 3;
        char v9 = v7 + 3;
        if (v4 >= 4) {
          LOBYTE(v5) = v9;
        }
        else {
          LOBYTE(v5) = v8;
        }
        break;
      default:
        break;
    }
  }
  (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
  *(unsigned char *)(a1 + v4) = v5;
  return a1;
}

unsigned __int8 *sub_1006CAC40(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 + 64);
    (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    unsigned int v9 = a2[v8];
    if (v9 >= 3)
    {
      if (v8 <= 3) {
        uint64_t v10 = v8;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a2;
          goto LABEL_11;
        case 2:
          int v11 = *(unsigned __int16 *)a2;
          goto LABEL_11;
        case 3:
          int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_11;
        case 4:
          int v11 = *(_DWORD *)a2;
LABEL_11:
          int v12 = (v11 | ((v9 - 3) << (8 * v8))) + 3;
          char v13 = v11 + 3;
          if (v8 >= 4) {
            LOBYTE(v9) = v13;
          }
          else {
            LOBYTE(v9) = v12;
          }
          break;
        default:
          break;
      }
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v5);
    a1[v8] = v9;
  }
  return a1;
}

uint64_t sub_1006CADA0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_20;
  }
  uint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_20;
      }
      goto LABEL_12;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_20;
      }
      goto LABEL_12;
    }
    if (v8 < 2)
    {
LABEL_20:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 3) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_20;
  }
LABEL_12:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 254;
}

void sub_1006CAEC8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_32:
        __break(1u);
        JUMPOUT(0x1006CB084);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_21;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_20;
      case 3:
        goto LABEL_32;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_21;
      default:
LABEL_20:
        if (a2) {
LABEL_21:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1006CB0AC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  uint64_t v3 = a1[v2];
  int v4 = v3 - 3;
  if (v3 >= 3)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_10;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_10;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_10;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_10:
        unsigned int v7 = (v6 | (v4 << (8 * v2))) + 3;
        LODWORD(v3) = v6 + 3;
        if (v2 >= 4) {
          uint64_t v3 = v3;
        }
        else {
          uint64_t v3 = v7;
        }
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_1006CB158(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (a2 > 2)
  {
    unsigned int v5 = a2 - 3;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 3;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 3;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

void sub_1006CB224(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a1;
  uint64_t v4 = sub_10000A844(&qword_10097F510);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  int v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [objc_allocWithZone((Class)RPCompanionLinkClient) init];
  id v32 = v8;
  [v8 setControlFlags:a2];
  int v9 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v31 = v5 + 16;
  v9(v7, a1, v4);
  unsigned int v10 = v9;
  uint64_t v11 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = (v11 + 16) & ~v11;
  uint64_t v30 = v11 | 7;
  v27[0] = v12 + v6;
  uint64_t v13 = swift_allocObject();
  uint64_t v33 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v33(v13 + v12, v7, v4);
  uint64_t v38 = sub_1006CBC60;
  uint64_t v39 = v13;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256;
  v27[1] = &v36;
  uint64_t v36 = (void (*)(uint64_t, void *))sub_10032A9D8;
  uint64_t v37 = &unk_1008E5EF0;
  int v14 = _Block_copy(&aBlock);
  swift_release();
  [v8 setDeviceFoundHandler:v14];
  _Block_release(v14);
  uint64_t v15 = v29;
  uint64_t v28 = v10;
  v10(v7, v29, v4);
  uint64_t v16 = swift_allocObject();
  v33(v16 + v12, v7, v4);
  uint64_t v38 = sub_1006CBC84;
  uint64_t v39 = v16;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256;
  uint64_t v36 = (void (*)(uint64_t, void *))sub_10032A9D8;
  uint64_t v37 = &unk_1008E5F40;
  uint64_t v17 = _Block_copy(&aBlock);
  swift_release();
  [v32 setDeviceLostHandler:v17];
  _Block_release(v17);
  v10(v7, v15, v4);
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v12;
  uint64_t v20 = v33;
  v33(v18 + v19, v7, v4);
  uint64_t v38 = sub_1006CBD08;
  uint64_t v39 = v18;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256;
  uint64_t v36 = sub_1006CBA74;
  uint64_t v37 = &unk_1008E5F90;
  uint64_t v21 = _Block_copy(&aBlock);
  swift_release();
  id v22 = v32;
  [v32 setDeviceChangedHandler:v21];
  _Block_release(v21);
  *(void *)(swift_allocObject() + 16) = v22;
  id v23 = v22;
  uint64_t v24 = v29;
  AsyncThrowingStream.Continuation.onTermination.setter();
  v28(v7, v24, v4);
  uint64_t v25 = swift_allocObject();
  v20(v25 + v19, v7, v4);
  uint64_t v38 = sub_1006CBE6C;
  uint64_t v39 = v25;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256;
  uint64_t v36 = sub_1006B210C;
  uint64_t v37 = &unk_1008E6008;
  uint64_t v26 = _Block_copy(&aBlock);
  swift_release();
  [v23 activateWithCompletion:v26];
  _Block_release(v26);
}

uint64_t sub_1006CB700(void *a1)
{
  uint64_t v2 = sub_10000A844(&qword_10097F508);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000A844(&qword_10097F518);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AuthenticationDevice();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100613448(a1, (uint64_t)v11);
  sub_1006CBEE0((uint64_t)v11, (uint64_t)v4);
  swift_storeEnumTagMultiPayload();
  sub_10000A844(&qword_10097F510);
  AsyncThrowingStream.Continuation.yield(_:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_1006CBF44((uint64_t)v11);
}

uint64_t sub_1006CB8C0(void *a1)
{
  uint64_t v2 = sub_10000A844(&qword_10097F508);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000A844(&qword_10097F518);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AuthenticationDevice();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100613448(a1, (uint64_t)v11);
  sub_1006CBEE0((uint64_t)v11, (uint64_t)v4);
  swift_storeEnumTagMultiPayload();
  sub_10000A844(&qword_10097F510);
  AsyncThrowingStream.Continuation.yield(_:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_1006CBF44((uint64_t)v11);
}

void sub_1006CBA74(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_1006CBAE8(uint64_t result)
{
  if (result)
  {
    swift_errorRetain();
    sub_10000A844(&qword_10097F510);
    return AsyncThrowingStream.Continuation.finish(throwing:)();
  }
  return result;
}

uint64_t sub_1006CBB38()
{
  uint64_t v1 = sub_10000A844(&qword_10097F500);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = *v0;
  sub_10000A844(&qword_10097F508);
  (*(void (**)(unsigned char *, void, uint64_t))(v2 + 104))(v4, enum case for AsyncThrowingStream.Continuation.BufferingPolicy.unbounded<A, B>(_:), v1);
  uint64_t v8 = v5;
  return AsyncThrowingStream.init<>(_:bufferingPolicy:_:)();
}

void sub_1006CBC54(uint64_t a1)
{
  sub_1006CB224(a1, *(void *)(v1 + 16));
}

uint64_t sub_1006CBC60(void *a1)
{
  return sub_1006CBC8C(a1);
}

uint64_t sub_1006CBC68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1006CBC78()
{
  return swift_release();
}

uint64_t sub_1006CBC84(void *a1)
{
  return sub_1006CBC8C(a1);
}

uint64_t sub_1006CBC8C(void *a1)
{
  return sub_1006CB700(a1);
}

uint64_t sub_1006CBD08(void *a1)
{
  sub_10000A844(&qword_10097F510);

  return sub_1006CB8C0(a1);
}

uint64_t sub_1006CBD8C()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1006CBDC4()
{
  return [*(id *)(v0 + 16) invalidate];
}

uint64_t sub_1006CBDD8()
{
  uint64_t v1 = sub_10000A844(&qword_10097F510);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1006CBE6C(uint64_t a1)
{
  sub_10000A844(&qword_10097F510);

  return sub_1006CBAE8(a1);
}

uint64_t sub_1006CBEE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuthenticationDevice();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006CBF44(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AuthenticationDevice();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for RapportDeviceSequenceProvider()
{
  return &type metadata for RapportDeviceSequenceProvider;
}

uint64_t sub_1006CBFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_1006CC01C(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t))
{
  if (*(unsigned char *)(a1 + 120) == 1)
  {
    swift_beginAccess();
    uint64_t v8 = *(void *)(a1 + 104);
    if (*(void *)(v8 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1005838BC(a2, (uint64_t)a3);
      if (v10)
      {
        uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a4(v11);
        return swift_release();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    _StringGuts.grow(_:)(34);
    swift_bridgeObjectRelease();
    v14._uint64_t countAndFlagsBits = a2;
    v14._object = a3;
    String.append(_:)(v14);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v15 = 10;
    *(void *)(v15 + 8) = 0xD000000000000020;
    *(void *)(v15 + 16) = 0x80000001007C7CD0;
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v13 = 10;
    *(void *)(v13 + 8) = 0xD00000000000001ELL;
    *(void *)(v13 + 16) = 0x80000001007B8EB0;
  }
  return swift_willThrow();
}

uint64_t sub_1006CC1E8(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t *__return_ptr, uint64_t))
{
  if (*(unsigned char *)(a1 + 120) != 1)
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v14 = 10;
    *(void *)(v14 + 8) = 0xD00000000000001ELL;
    *(void *)(v14 + 16) = 0x80000001007B8EB0;
    return swift_willThrow();
  }
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 104);
  if (!*(void *)(v9 + 16))
  {
LABEL_8:
    _StringGuts.grow(_:)(34);
    swift_bridgeObjectRelease();
    v15._uint64_t countAndFlagsBits = a2;
    v15._object = a3;
    String.append(_:)(v15);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v16 = 10;
    *(void *)(v16 + 8) = 0xD000000000000020;
    *(void *)(v16 + 16) = 0x80000001007C7CD0;
    return swift_willThrow();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1005838BC(a2, (uint64_t)a3);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a4(&v17, v12);
  uint64_t result = swift_release();
  if (!v4) {
    return v17;
  }
  return result;
}

uint64_t sub_1006CC3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  char v11 = (char *)&v26 - v10;
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v26 - v13;
  int64_t v15 = 0;
  uint64_t v27 = a2;
  uint64_t v16 = a1 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(a1 + 56);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_5;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v23 >= v20) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v16 + 8 * v23);
    ++v15;
    if (!v24)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v20) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v16 + 8 * v15);
      if (!v24)
      {
        int64_t v15 = v23 + 2;
        if (v23 + 2 >= v20) {
          goto LABEL_23;
        }
        unint64_t v24 = *(void *)(v16 + 8 * v15);
        if (!v24)
        {
          int64_t v15 = v23 + 3;
          if (v23 + 3 >= v20) {
            goto LABEL_23;
          }
          unint64_t v24 = *(void *)(v16 + 8 * v15);
          if (!v24) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v19 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v15 << 6);
LABEL_5:
    sub_10070F0FC(*(void *)(a1 + 48) + *(void *)(v5 + 72) * v22, (uint64_t)v14, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_10070F174((uint64_t)v14, (uint64_t)v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100595DA4((uint64_t)v11, (uint64_t)v8);
    uint64_t result = sub_10070EE60((uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  int64_t v25 = v23 + 4;
  if (v25 >= v20)
  {
LABEL_23:
    swift_release();
    return v27;
  }
  unint64_t v24 = *(void *)(v16 + 8 * v25);
  if (v24)
  {
    int64_t v15 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v15 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v15 >= v20) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v16 + 8 * v15);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1006CC630(unint64_t a1, void *a2)
{
  unint64_t v2 = a1;
  v18[1] = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_10000B740(0, &qword_10096B3E8);
    sub_100361188();
    Set.Iterator.init(_cocoa:)();
    unint64_t v2 = (unint64_t)v18[2];
    uint64_t v17 = v18[3];
    uint64_t v3 = (uint64_t)v18[4];
    id v4 = v18[5];
    unint64_t v5 = (unint64_t)v18[6];
  }
  else
  {
    id v4 = 0;
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = (void *)(a1 + 56);
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if ((v2 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | ((void)v4 << 6);
      uint64_t v12 = (char *)v4;
      goto LABEL_29;
    }
    uint64_t v14 = (uint64_t)v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v14 >= v9) {
      goto LABEL_32;
    }
    unint64_t v15 = v17[v14];
    uint64_t v12 = (char *)v4 + 1;
    if (!v15)
    {
      uint64_t v12 = (char *)v4 + 2;
      if ((uint64_t)v4 + 2 >= v9) {
        goto LABEL_32;
      }
      unint64_t v15 = v17[(void)v12];
      if (!v15)
      {
        uint64_t v12 = (char *)v4 + 3;
        if ((uint64_t)v4 + 3 >= v9) {
          goto LABEL_32;
        }
        unint64_t v15 = v17[(void)v12];
        if (!v15)
        {
          uint64_t v12 = (char *)v4 + 4;
          if ((uint64_t)v4 + 4 >= v9) {
            goto LABEL_32;
          }
          unint64_t v15 = v17[(void)v12];
          if (!v15)
          {
            uint64_t v12 = (char *)v4 + 5;
            if ((uint64_t)v4 + 5 >= v9) {
              goto LABEL_32;
            }
            unint64_t v15 = v17[(void)v12];
            if (!v15)
            {
              uint64_t v16 = (char *)v4 + 6;
              while ((char *)v9 != v16)
              {
                unint64_t v15 = v17[(void)v16++];
                if (v15)
                {
                  uint64_t v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_10024D330();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + ((void)v12 << 6);
LABEL_29:
    id v13 = *(id *)(*(void *)(v2 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_1005965F8(v18, v13);

      id v4 = v12;
      unint64_t v5 = v10;
      if ((v2 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        sub_10000B740(0, &qword_10096B3E8);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v13 = v18[0];
        swift_unknownObjectRelease();
        uint64_t v12 = (char *)v4;
        uint64_t v10 = v5;
        if (v13) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void *sub_1006CC8D0()
{
  uint64_t v0 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1006E9654();
  id v4 = sub_100707E2C(1, (uint64_t)v3);
  swift_bridgeObjectRelease();
  int64_t v5 = v4[2];
  if (v5)
  {
    unint64_t v22 = _swiftEmptyArrayStorage;
    sub_100255510(0, v5, 0);
    for (uint64_t i = (uint64_t)(v4 + 4); ; i += 40)
    {
      sub_100278C8C(i, (uint64_t)v19);
      uint64_t v7 = v20;
      uint64_t v8 = v21;
      sub_10026BB6C(v19, v20);
      (*(void (**)(uint64_t, uint64_t))(v8 + 48))(v7, v8);
      uint64_t v9 = type metadata accessor for UUID();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t result = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v2, 1, v9);
      if (result == 1) {
        break;
      }
      uint64_t v12 = UUID.uuidString.getter();
      uint64_t v14 = v13;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v2, v9);
      sub_10024D338((uint64_t)v19);
      unint64_t v15 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100255510(0, v15[2] + 1, 1);
        unint64_t v15 = v22;
      }
      unint64_t v17 = v15[2];
      unint64_t v16 = v15[3];
      if (v17 >= v16 >> 1)
      {
        sub_100255510(v16 > 1, v17 + 1, 1);
        unint64_t v15 = v22;
      }
      void v15[2] = v17 + 1;
      uint64_t v18 = &v15[2 * v17];
      v18[4] = v12;
      v18[5] = v14;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        return v15;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void sub_1006CCB14(char a1)
{
  uint64_t v3 = 0;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  void *v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0) {
    goto LABEL_103;
  }
  if ((sub_1006E75E0() & 1) == 0)
  {
    if (qword_10096A190 != -1) {
      goto LABEL_104;
    }
    goto LABEL_26;
  }
  id v10 = [self sharedTransport];
  unint64_t v11 = v10;
  int v88 = a1 & 1;
  if ((a1 & 1) == 0)
  {
    if (v10)
    {
      id v12 = [v10 enabledAutoUnlockDevices];

      if (v12)
      {
        uint64_t v87 = v1;
        sub_10000B740(0, &qword_10096B3E8);
        sub_100361188();
        uint64_t v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        if ((v13 & 0xC000000000000001) != 0)
        {
          uint64_t v14 = (uint64_t)&_swiftEmptySetSingleton;
          v91[0] = (uint64_t)&_swiftEmptySetSingleton;
          __CocoaSet.makeIterator()();
          uint64_t v15 = __CocoaSet.Iterator.next()();
          if (v15)
          {
            uint64_t v83 = 0;
            do
            {
              uint64_t v89 = v15;
              swift_dynamicCast();
              id v16 = [v90 type];
              id v17 = v90;
              if (v16 == (id)4)
              {
                uint64_t v18 = v91[0];
                unint64_t v19 = *(void *)(v91[0] + 16);
                if (*(void *)(v91[0] + 24) <= v19)
                {
                  sub_100599C4C(v19 + 1);
                  uint64_t v18 = v91[0];
                }
                Swift::Int v20 = NSObject._rawHashValue(seed:)(*(void *)(v18 + 40));
                uint64_t v21 = v18 + 56;
                uint64_t v22 = -1 << *(unsigned char *)(v18 + 32);
                unint64_t v23 = v20 & ~v22;
                unint64_t v24 = v23 >> 6;
                if (((-1 << v23) & ~*(void *)(v18 + 56 + 8 * (v23 >> 6))) != 0)
                {
                  unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v18 + 56 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
                }
                else
                {
                  char v26 = 0;
                  unint64_t v27 = (unint64_t)(63 - v22) >> 6;
                  do
                  {
                    if (++v24 == v27 && (v26 & 1) != 0)
                    {
                      __break(1u);
                      goto LABEL_101;
                    }
                    BOOL v28 = v24 == v27;
                    if (v24 == v27) {
                      unint64_t v24 = 0;
                    }
                    v26 |= v28;
                    uint64_t v29 = *(void *)(v21 + 8 * v24);
                  }
                  while (v29 == -1);
                  unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
                }
                *(void *)(v21 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
                *(void *)(*(void *)(v18 + 48) + 8 * v25) = v17;
                ++*(void *)(v18 + 16);
              }
              else
              {
              }
              uint64_t v15 = __CocoaSet.Iterator.next()();
            }
            while (v15);
LABEL_51:
            uint64_t v14 = v91[0];
            uint64_t v3 = v83;
          }
          goto LABEL_52;
        }
        uint64_t v53 = (uint64_t (*)(char *, unint64_t, uint64_t))sub_100707264;
LABEL_63:
        uint64_t v14 = sub_100706DCC(v13, v53);
        goto LABEL_64;
      }
      if (qword_10096A190 != -1) {
        swift_once();
      }
      uint64_t v51 = type metadata accessor for Logger();
      sub_10000B47C(v51, (uint64_t)qword_10097F520);
      uint64_t v31 = Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v31, v32)) {
        goto LABEL_29;
      }
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v33 = 0;
      uint64_t v34 = "No devices enabled to unlock this device";
LABEL_28:
      _os_log_impl((void *)&_mh_execute_header, v31, v32, v34, v33, 2u);
      swift_slowDealloc();
      goto LABEL_29;
    }
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
    return;
  }
  if (!v10) {
    goto LABEL_107;
  }
  id v35 = [v10 enabledAutoUnlockLockDevices];

  if (!v35)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v52 = type metadata accessor for Logger();
    sub_10000B47C(v52, (uint64_t)qword_10097F520);
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v31, v32)) {
      goto LABEL_29;
    }
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v33 = 0;
    uint64_t v34 = "This device isn't enabled to unlock any other devices";
    goto LABEL_28;
  }
  uint64_t v87 = v1;
  sub_10000B740(0, &qword_10096B3E8);
  sub_100361188();
  uint64_t v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v13 & 0xC000000000000001) == 0)
  {
    uint64_t v53 = (uint64_t (*)(char *, unint64_t, uint64_t))sub_1007070BC;
    goto LABEL_63;
  }
  uint64_t v14 = (uint64_t)&_swiftEmptySetSingleton;
  v91[0] = (uint64_t)&_swiftEmptySetSingleton;
  __CocoaSet.makeIterator()();
  uint64_t v36 = __CocoaSet.Iterator.next()();
  if (!v36)
  {
LABEL_52:
    swift_release();
LABEL_64:
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v54 = type metadata accessor for Logger();
    sub_10000B47C(v54, (uint64_t)qword_10097F520);
    swift_bridgeObjectRetain_n();
    uint64_t v55 = Logger.logObject.getter();
    os_log_type_t v56 = static os_log_type_t.debug.getter();
    BOOL v57 = os_log_type_enabled(v55, v56);
    uint64_t v83 = v3;
    if (v57)
    {
      unint64_t v58 = (uint8_t *)swift_slowAlloc();
      v91[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v58 = 136315138;
      sub_10000B740(0, &qword_10096B3E8);
      sub_100361188();
      swift_bridgeObjectRetain();
      uint64_t v59 = Set.description.getter();
      unint64_t v61 = v60;
      swift_bridgeObjectRelease();
      id v90 = (id)sub_100254634(v59, v61, v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "Registering Devices: %s", v58, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    if ((v14 & 0xC000000000000001) != 0)
    {
      __CocoaSet.makeIterator()();
      sub_10000B740(0, &qword_10096B3E8);
      sub_100361188();
      Set.Iterator.init(_cocoa:)();
      uint64_t v14 = v91[0];
      uint64_t v62 = v91[1];
      uint64_t v63 = v91[2];
      uint64_t v64 = v91[3];
      unint64_t v65 = v91[4];
    }
    else
    {
      uint64_t v64 = 0;
      uint64_t v66 = -1 << *(unsigned char *)(v14 + 32);
      uint64_t v62 = v14 + 56;
      uint64_t v63 = ~v66;
      uint64_t v67 = -v66;
      if (v67 < 64) {
        uint64_t v68 = ~(-1 << v67);
      }
      else {
        uint64_t v68 = -1;
      }
      unint64_t v65 = v68 & *(void *)(v14 + 56);
    }
    uint64_t v86 = v14 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v84 = v63;
    int64_t v69 = (unint64_t)(v63 + 64) >> 6;
    long long v85 = (char *)&type metadata for Swift.AnyObject + 8;
    if ((v14 & 0x8000000000000000) == 0) {
      goto LABEL_79;
    }
LABEL_76:
    uint64_t v70 = __CocoaSet.Iterator.next()();
    if (v70)
    {
      uint64_t v89 = v70;
      sub_10000B740(0, &qword_10096B3E8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v71 = v90;
      swift_unknownObjectRelease();
      int64_t v72 = v64;
      uint64_t v73 = v65;
      while (v71)
      {
        id v77 = [v71 uniqueID:v83, v84, v85, v86];
        if (!v77)
        {
          __break(1u);
          goto LABEL_106;
        }
        unint64_t v78 = v77;
        uint64_t v79 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v81 = v80;

        sub_1007004B0(v88, v79, v81, 0);
        swift_bridgeObjectRelease();

        uint64_t v64 = v72;
        unint64_t v65 = v73;
        if (v14 < 0) {
          goto LABEL_76;
        }
LABEL_79:
        if (v65)
        {
          uint64_t v73 = (v65 - 1) & v65;
          unint64_t v74 = __clz(__rbit64(v65)) | (v64 << 6);
          int64_t v72 = v64;
        }
        else
        {
          int64_t v72 = v64 + 1;
          if (__OFADD__(v64, 1)) {
            goto LABEL_102;
          }
          if (v72 >= v69) {
            break;
          }
          unint64_t v75 = *(void *)(v62 + 8 * v72);
          if (!v75)
          {
            uint64_t v76 = v64 + 2;
            if (v64 + 2 >= v69) {
              break;
            }
            unint64_t v75 = *(void *)(v62 + 8 * v76);
            if (v75) {
              goto LABEL_88;
            }
            uint64_t v76 = v64 + 3;
            if (v64 + 3 >= v69) {
              break;
            }
            unint64_t v75 = *(void *)(v62 + 8 * v76);
            if (v75)
            {
LABEL_88:
              int64_t v72 = v76;
            }
            else
            {
              int64_t v72 = v64 + 4;
              if (v64 + 4 >= v69) {
                break;
              }
              unint64_t v75 = *(void *)(v62 + 8 * v72);
              if (!v75)
              {
                uint64_t v82 = v64 + 5;
                while (v69 != v82)
                {
                  unint64_t v75 = *(void *)(v62 + 8 * v82++);
                  if (v75)
                  {
                    int64_t v72 = v82 - 1;
                    goto LABEL_89;
                  }
                }
                break;
              }
            }
          }
LABEL_89:
          uint64_t v73 = (v75 - 1) & v75;
          unint64_t v74 = __clz(__rbit64(v75)) + (v72 << 6);
        }
        id v71 = *(id *)(*(void *)(v14 + 48) + 8 * v74);
      }
    }
    sub_10024D330();
    return;
  }
  uint64_t v83 = 0;
  while (1)
  {
    uint64_t v89 = v36;
    swift_dynamicCast();
    id v37 = [v90 type];
    id v38 = v90;
    if (v37 == (id)2) {
      break;
    }

LABEL_36:
    uint64_t v36 = __CocoaSet.Iterator.next()();
    if (!v36) {
      goto LABEL_51;
    }
  }
  uint64_t v39 = v91[0];
  unint64_t v40 = *(void *)(v91[0] + 16);
  if (*(void *)(v91[0] + 24) <= v40)
  {
    sub_100599C4C(v40 + 1);
    uint64_t v39 = v91[0];
  }
  Swift::Int v41 = NSObject._rawHashValue(seed:)(*(void *)(v39 + 40));
  uint64_t v42 = v39 + 56;
  uint64_t v43 = -1 << *(unsigned char *)(v39 + 32);
  unint64_t v44 = v41 & ~v43;
  unint64_t v45 = v44 >> 6;
  if (((-1 << v44) & ~*(void *)(v39 + 56 + 8 * (v44 >> 6))) != 0)
  {
    unint64_t v46 = __clz(__rbit64((-1 << v44) & ~*(void *)(v39 + 56 + 8 * (v44 >> 6)))) | v44 & 0x7FFFFFFFFFFFFFC0;
LABEL_50:
    *(void *)(v42 + ((v46 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v46;
    *(void *)(*(void *)(v39 + 48) + 8 * v46) = v38;
    ++*(void *)(v39 + 16);
    goto LABEL_36;
  }
  char v47 = 0;
  unint64_t v48 = (unint64_t)(63 - v43) >> 6;
  while (++v45 != v48 || (v47 & 1) == 0)
  {
    BOOL v49 = v45 == v48;
    if (v45 == v48) {
      unint64_t v45 = 0;
    }
    v47 |= v49;
    uint64_t v50 = *(void *)(v42 + 8 * v45);
    if (v50 != -1)
    {
      unint64_t v46 = __clz(__rbit64(~v50)) + (v45 << 6);
      goto LABEL_50;
    }
  }
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  swift_once();
LABEL_26:
  uint64_t v30 = type metadata accessor for Logger();
  sub_10000B47C(v30, (uint64_t)qword_10097F520);
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v33 = 0;
    uint64_t v34 = "MacUnlockPhone isn't enabled, not registering";
    goto LABEL_28;
  }
LABEL_29:
}

void sub_1006CD690(uint64_t a1, SEL *a2)
{
  uint64_t v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10000B740(0, &qword_10096B3E8);
    sub_100361188();
    Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v23;
    uint64_t v21 = v24;
    uint64_t v3 = v25;
    uint64_t v4 = v26;
    unint64_t v5 = v27;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v21 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v20 = (unint64_t)(v3 + 64) >> 6;
  while (1)
  {
    uint64_t v9 = v4;
    if (v2 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_33;
      }
      sub_10000B740(0, &qword_10096B3E8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v12 = v28;
      swift_unknownObjectRelease();
      if (!v28) {
        goto LABEL_33;
      }
      goto LABEL_31;
    }
    if (!v5) {
      break;
    }
    unint64_t v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_30:
    id v12 = *(id *)(*(void *)(v2 + 48) + 8 * v11);
    if (!v12) {
      goto LABEL_33;
    }
LABEL_31:
    id v16 = [self sharedManager];
    if (!v16) {
      goto LABEL_35;
    }
    id v17 = v16;
    id v18 = [v12 uniqueID];
    unsigned int v19 = [v17 *a2:v18];

    if (v19) {
      goto LABEL_33;
    }
  }
  int64_t v13 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v13 >= v20) {
      goto LABEL_33;
    }
    unint64_t v14 = *(void *)(v21 + 8 * v13);
    ++v4;
    if (!v14)
    {
      uint64_t v4 = v9 + 2;
      if (v9 + 2 >= v20) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v21 + 8 * v4);
      if (!v14)
      {
        uint64_t v4 = v9 + 3;
        if (v9 + 3 >= v20) {
          goto LABEL_33;
        }
        unint64_t v14 = *(void *)(v21 + 8 * v4);
        if (!v14)
        {
          uint64_t v4 = v9 + 4;
          if (v9 + 4 >= v20) {
            goto LABEL_33;
          }
          unint64_t v14 = *(void *)(v21 + 8 * v4);
          if (!v14)
          {
            uint64_t v4 = v9 + 5;
            if (v9 + 5 >= v20) {
              goto LABEL_33;
            }
            unint64_t v14 = *(void *)(v21 + 8 * v4);
            if (!v14)
            {
              uint64_t v15 = v9 + 6;
              while (v20 != v15)
              {
                unint64_t v14 = *(void *)(v21 + 8 * v15++);
                if (v14)
                {
                  uint64_t v4 = v15 - 1;
                  goto LABEL_29;
                }
              }
LABEL_33:
              sub_10024D330();
              return;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v4 << 6);
    goto LABEL_30;
  }
  __break(1u);
LABEL_35:
  __break(1u);
}

uint64_t sub_1006CD9D4()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (qword_10096A190 != -1) {
LABEL_32:
  }
    swift_once();
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000B47C(v7, (uint64_t)qword_10097F520);
  uint64_t v8 = v0;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v11 = 134217984;
    id v12 = (char *)v8 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_authenticationStateChangesObservers;
    swift_beginAccess();
    uint64_t v27 = *(void *)(*(void *)v12 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Reporting authenticationStateChanged to %ld observers", v11, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    uint64_t v9 = v8;
  }

  int64_t v13 = (uint64_t *)((char *)v8
                  + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_authenticationStateChangesObservers);
  swift_beginAccess();
  uint64_t v14 = *v13;
  uint64_t v0 = (char *)(v14 + 64);
  uint64_t v15 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v14 + 64);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v19 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v21 = v20 | (v19 << 6);
      goto LABEL_10;
    }
    int64_t v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    if (v22 >= v18) {
      return swift_release();
    }
    unint64_t v23 = *(void *)&v0[8 * v22];
    ++v19;
    if (!v23)
    {
      int64_t v19 = v22 + 1;
      if (v22 + 1 >= v18) {
        return swift_release();
      }
      unint64_t v23 = *(void *)&v0[8 * v19];
      if (!v23)
      {
        int64_t v19 = v22 + 2;
        if (v22 + 2 >= v18) {
          return swift_release();
        }
        unint64_t v23 = *(void *)&v0[8 * v19];
        if (!v23)
        {
          int64_t v19 = v22 + 3;
          if (v22 + 3 >= v18) {
            return swift_release();
          }
          unint64_t v23 = *(void *)&v0[8 * v19];
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_10:
    [*(id *)(*(void *)(v14 + 56) + 8 * v21) stateDidChange];
  }
  int64_t v24 = v22 + 4;
  if (v24 < v18)
  {
    unint64_t v23 = *(void *)&v0[8 * v24];
    if (!v23)
    {
      while (1)
      {
        int64_t v19 = v24 + 1;
        if (__OFADD__(v24, 1)) {
          goto LABEL_30;
        }
        if (v19 >= v18) {
          return swift_release();
        }
        unint64_t v23 = *(void *)&v0[8 * v19];
        ++v24;
        if (v23) {
          goto LABEL_27;
        }
      }
    }
    int64_t v19 = v24;
    goto LABEL_27;
  }
  return swift_release();
}

uint64_t sub_1006CDD5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  os_log_type_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StateMetrics(0);
  uint64_t v12 = v2 + *(int *)(v11 + 32);
  sub_10024A330(v12, (uint64_t)v6, (uint64_t *)&unk_100975040);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10000A7E8((uint64_t)v6, (uint64_t *)&unk_100975040);
LABEL_4:
    uint64_t v12 = v2 + *(int *)(v11 + 28);
    return sub_10024A330(v12, a1, (uint64_t *)&unk_100975040);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  Date.timeIntervalSinceNow.getter();
  double v14 = v13;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v14 > 60.0) {
    goto LABEL_4;
  }
  return sub_10024A330(v12, a1, (uint64_t *)&unk_100975040);
}

uint64_t sub_1006CDF40(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1006CDF68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1006CDF90()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097F520);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097F520);
  if (qword_100969CD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946C0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1006CE0A0()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  sub_10000B740(0, (unint64_t *)&qword_10096A1A0);
  static DispatchQoS.unspecified.getter();
  v9[1] = _swiftEmptyArrayStorage;
  sub_10000BBC0((unint64_t *)&unk_100974840, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000A844((uint64_t *)&unk_10096A1B0);
  sub_1002AE308((unint64_t *)&qword_100974850, (uint64_t *)&unk_10096A1B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  id v6 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  id v7 = objc_allocWithZone((Class)type metadata accessor for SDAuthenticationManager(0));
  id result = sub_1006CE628(v6);
  qword_100994D10 = (uint64_t)result;
  return result;
}

uint64_t sub_1006CE38C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsService + 24);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsService + 32);
  sub_10026BB6C((void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsService), v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  if (result)
  {
    uint64_t v6 = *(void *)(result + 16);
    if (v6)
    {
      uint64_t v7 = result + 32;
      while (1)
      {
        sub_100278C8C(v7, (uint64_t)&v10);
        uint64_t v8 = v11;
        uint64_t v9 = v12;
        sub_10026BB6C(&v10, v11);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(v8, v9)) {
          break;
        }
        sub_10024D338((uint64_t)&v10);
        v7 += 40;
        if (!--v6) {
          goto LABEL_6;
        }
      }
      sub_1002AF688(&v10, a1);
    }
    else
    {
LABEL_6:
      *(void *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1006CE494()
{
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager____lazy_storage___unlockVolumeManager;
  if (*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager____lazy_storage___unlockVolumeManager))
  {
    uint64_t v2 = *(void **)(v0
                    + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager____lazy_storage___unlockVolumeManager);
  }
  else
  {
    uint64_t v3 = v0;
    _s19VolumeUnlockManagerCMa();
    uint64_t v2 = (void *)swift_allocObject();
    swift_defaultActor_initialize();
    type metadata accessor for UserProfilesMonitor();
    uint64_t v4 = swift_allocObject();
    swift_defaultActor_initialize();
    uint64_t v5 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary19UserProfilesMonitor_continuation;
    uint64_t v6 = sub_10000A844((uint64_t *)&unk_1009765F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
    *(void *)(v4 + 136) = &type metadata for UnsupportedProfilesProvider;
    *(void *)(v4 + 144) = &off_1008DD5B8;
    v2[14] = v4;
    _s22VolumeUnlockLocalCacheCMa();
    swift_allocObject();
    v2[15] = sub_10049B354((uint64_t)j___s10Foundation4DateVACycfC, 0);
    v2[16] = &_swiftEmptyDictionarySingleton;
    uint64_t v7 = (char *)v2
       + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication19VolumeUnlockManager_lastCarPlaySessionEndDate;
    uint64_t v8 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id sub_1006CE628(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v5 = objc_allocWithZone((Class)IDSService);
  id v6 = v2;
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v5 initWithService:v7];

  if (v8)
  {
    uint64_t v9 = (objc_class *)type metadata accessor for SDAuthenticationSecurityManager(0);
    id v10 = objc_allocWithZone(v9);
    id v11 = a1;
    uint64_t v12 = sub_10033B948(v11);
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000B47C(v13, (uint64_t)qword_10097F520);
    double v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Initializing transport manager", v16, 2u);
      swift_slowDealloc();
    }

    id v17 = v11;
    int64_t v18 = sub_1005F5A60(v17);

    v30[3] = v9;
    id v30[4] = &off_1008D7208;
    v30[0] = v12;
    int64_t v19 = objc_allocWithZone(ObjectType);
    uint64_t v20 = sub_1002AF758((uint64_t)v30, (uint64_t)v9);
    __chkstk_darwin(v20);
    int64_t v22 = (void *)((char *)&v30[-1] - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v23 + 16))(v22);
    uint64_t v24 = *v22;
    uint64_t v25 = v12;
    id v26 = v8;
    sub_10070D688(v17, v24, v18, (uint64_t)v26, v19);
    id v8 = v27;

    sub_10024D338((uint64_t)v30);
  }
  else
  {
  }
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v8;
}

id sub_1006CE950()
{
  id result = [self sharedMonitor];
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v1 = result;
  id v2 = [result awdlInfo];

  if (v2)
  {
    uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v3 = 0;
  }
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_10097F520);
  swift_bridgeObjectRetain_n();
  id v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    NSString v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)NSString v7 = 136315138;
    if (v3)
    {
      unint64_t v8 = Dictionary.description.getter();
      unint64_t v10 = v9;
    }
    else
    {
      unint64_t v10 = 0x80000001007BD180;
      unint64_t v8 = 0xD000000000000012;
    }
    sub_100254634(v8, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "AWDLInfo = %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (!v3) {
      goto LABEL_14;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (!v3)
    {
LABEL_14:
      v11.super.Class isa = 0;
      goto LABEL_15;
    }
  }
  v11.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
LABEL_15:
  id v12 = sub_1000D1EEC(v11.super.isa);

  if (!v12) {
    return 0;
  }
  uint64_t v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

  return (id)v13;
}

uint64_t sub_1006CEC14@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int v11 = a4 & 1;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  os_log_type_t v15 = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = 0;
  memset(v62, 0, sizeof(v62));
  if ((unint64_t)(a3 - 9) <= 5)
  {
    uint64_t v53 = a5;
    uint64_t v54 = v12;
    uint64_t v55 = a1;
    int v56 = v11;
    uint64_t v16 = a2[3];
    uint64_t v17 = a2[4];
    sub_10026BB6C(a2, v16);
    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
    if (v19)
    {
      uint64_t v20 = v18;
      uint64_t v21 = v19;
      if (qword_100969D50 != -1) {
        swift_once();
      }
      swift_bridgeObjectRetain();
      LOBYTE(v11) = v56;
      uint64_t v51 = (uint8_t *)sub_1003B5358(3, v56, v20, v21, a3 == 9, 0);
      swift_bridgeObjectRelease();
      if (qword_10096A190 != -1) {
        swift_once();
      }
      uint64_t v33 = type metadata accessor for Logger();
      sub_10000B47C(v33, (uint64_t)qword_10097F520);
      uint64_t v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.default.getter();
      int v36 = v35;
      BOOL v37 = os_log_type_enabled(v34, v35);
      uint64_t v52 = v20;
      if (v37)
      {
        uint64_t v38 = swift_slowAlloc();
        int v49 = v36;
        uint64_t v39 = v38;
        uint64_t v50 = swift_slowAlloc();
        v59[0] = v50;
        *(_DWORD *)uint64_t v39 = 136315394;
        uint64_t v58 = sub_100254634(0x646F4D7473657567, 0xEF6B636F6C6E5565, v59);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v39 + 12) = 2080;
        v48[1] = v39 + 14;
        uint64_t v40 = sub_10050938C();
        uint64_t v58 = sub_100254634(v40, v41, v59);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        LOBYTE(v11) = v56;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v49, "Start flow %s:%s with SDAuthentication.LTKManager", (uint8_t *)v39, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      uint64_t v12 = v54;
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v55, v54);
      uint64_t v42 = _s10LTKSessionCMa();
      uint64_t v43 = swift_allocObject();
      uint64_t v44 = v43 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession;
      *(unsigned char *)(v44 + 8) = 1;
      *(void *)uint64_t v44 = 0;
      *(unsigned char *)(v43 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_role) = v11;
      unint64_t v45 = (uint64_t *)(v43 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID);
      *unint64_t v45 = v52;
      v45[1] = v21;
      (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v43 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_sessionID, v15, v12);
      *(void *)(v43 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_type) = a3;
      *(void *)(v43 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK) = v51;
      uint64_t v60 = v42;
      unint64_t v61 = &off_1008D91A8;
      v59[0] = v43;
      a1 = v55;
      sub_10000A7E8((uint64_t)v62, &qword_1009778D0);
      sub_10024D388((uint64_t)v59, (uint64_t)v62, &qword_1009778D0);
    }
    else
    {
      if (qword_10096A190 != -1) {
        swift_once();
      }
      uint64_t v22 = type metadata accessor for Logger();
      sub_10000B47C(v22, (uint64_t)qword_10097F520);
      sub_100278C8C((uint64_t)a2, (uint64_t)v59);
      uint64_t v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        uint64_t v52 = swift_slowAlloc();
        uint64_t v58 = v52;
        *(_DWORD *)uint64_t v25 = 136315138;
        uint64_t v50 = (uint64_t)(v25 + 4);
        uint64_t v51 = v25;
        uint64_t v26 = a3;
        uint64_t v28 = v60;
        uint64_t v27 = v61;
        sub_10026BB6C(v59, v60);
        uint64_t v29 = (uint64_t (*)(uint64_t, _UNKNOWN **))v27[9];
        uint64_t v30 = v27;
        a3 = v26;
        uint64_t v31 = v29(v28, v30);
        uint64_t v57 = sub_100254634(v31, v32, &v58);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10024D338((uint64_t)v59);
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "No uniqueIDOverride in %s", v51, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10024D338((uint64_t)v59);
      }

      LOBYTE(v11) = v56;
      uint64_t v12 = v54;
      a1 = v55;
    }
    a5 = v53;
  }
  sub_100278C8C(a5, a6);
  sub_100278C8C((uint64_t)a2, a6 + 40);
  unint64_t v46 = (int *)type metadata accessor for SDAuthenticationCommonOperationInput();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a6 + v46[6], a1, v12);
  *(void *)(a6 + v46[7]) = a3;
  *(unsigned char *)(a6 + v46[8]) = v11;
  return sub_10024D388((uint64_t)v62, a6 + v46[9], &qword_1009778D0);
}

uint64_t sub_1006CF4B4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  id v491 = a3;
  uint64_t v494 = a2;
  uint64_t v496 = a4;
  v497 = a1;
  uint64_t v486 = _s6UnpairV23InitialInitiatorContextVMa(0);
  __chkstk_darwin(v486);
  v487 = (uint64_t *)((char *)&v437 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v483 = _s6UnpairV23InitialResponderContextVMa(0);
  __chkstk_darwin(v483);
  v485 = (uint64_t *)((char *)&v437 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v468 = _s8KeyCheckV17InitialKeyContextVMa(0);
  __chkstk_darwin(v468);
  v471 = (char **)((char *)&v437 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v464 = _s8KeyCheckV18InitialLockContextVMa(0);
  __chkstk_darwin(v464);
  v465 = (uint64_t *)((char *)&v437 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v460 = _s27GuestModeUnlockRegistrationV17InitialKeyContextVMa(0);
  __chkstk_darwin(v460);
  v462 = (uint64_t *)((char *)&v437 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v467 = _s27GuestModeUnlockRegistrationV18InitialLockContextVMa(0);
  __chkstk_darwin(v467);
  v469 = (uint64_t *)((char *)&v437 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v458 = _s22GuestModeUnlockPairingV17InitialKeyContextVMa(0);
  __chkstk_darwin(v458);
  v463 = (uint64_t *)((char *)&v437 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v466 = _s22GuestModeUnlockPairingV18InitialLockContextVMa(0);
  __chkstk_darwin(v466);
  v470 = (uint64_t *)((char *)&v437 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v455 = _s15GuestModeUnlockV17InitialKeyContextVMa(0);
  __chkstk_darwin(v455);
  v459 = (uint64_t *)((char *)&v437 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v484 = _s15GuestModeUnlockV4FlowVMa(0);
  __chkstk_darwin(v484);
  v488 = (char *)&v437 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v457 = _s15GuestModeUnlockV18InitialLockContextVMa(0);
  uint64_t v14 = __chkstk_darwin(v457);
  v456 = (char **)((char *)&v437 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v461 = (uint64_t)&v437 - v16;
  uint64_t v442 = _s15MacApprovePhoneV17InitialKeyContextVMa(0);
  __chkstk_darwin(v442);
  v444 = (uint64_t *)((char *)&v437 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v478 = _s15MacApprovePhoneV4FlowVMa(0);
  __chkstk_darwin(v478);
  v480 = (char *)&v437 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v446 = _s15MacApprovePhoneV18InitialLockContextVMa(0);
  __chkstk_darwin(v446);
  v448 = (uint64_t *)((char *)&v437 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v445 = _s14MacUnlockPhoneV17InitialKeyContextVMa(0);
  __chkstk_darwin(v445);
  v447 = (uint64_t *)((char *)&v437 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v477 = _s14MacUnlockPhoneV4FlowVMa(0);
  __chkstk_darwin(v477);
  v479 = (char *)&v437 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v493 = (void *)type metadata accessor for UUID();
  uint64_t v492 = *(v493 - 1);
  uint64_t v22 = __chkstk_darwin(v493);
  v453 = (char *)&v437 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  v450 = (char *)&v437 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v441 = (char *)&v437 - v27;
  __chkstk_darwin(v26);
  v437 = (char *)&v437 - v28;
  uint64_t v440 = _s14MacUnlockPhoneV18InitialLockContextVMa(0);
  __chkstk_darwin(v440);
  v443 = (char *)&v437 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v452 = _s10NanoWalletV17InitialKeyContextVMa(0);
  __chkstk_darwin(v452);
  v454 = (char *)&v437 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v489 = _s10NanoWalletV4FlowVMa(0);
  __chkstk_darwin(v489);
  v490 = (char *)&v437 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for SDAuthenticationCommonOperationInput();
  uint64_t v33 = __chkstk_darwin(v32);
  uint64_t v35 = (uint64_t)&v437 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v495 = (uint64_t)&v437 - v36;
  uint64_t v37 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v38 = __chkstk_darwin(v37 - 8);
  uint64_t v482 = (uint64_t)&v437 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v475 = (uint64_t)&v437 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  v439 = (char *)&v437 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v474 = (uint64_t)&v437 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v476 = (uint64_t)&v437 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v438 = (uint64_t)&v437 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v449 = (uint64_t)&v437 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  v451 = (char *)&v437 - v53;
  __chkstk_darwin(v52);
  v481 = (char *)&v437 - v54;
  uint64_t v55 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v56 = __chkstk_darwin(v55);
  uint64_t v58 = (char *)&v437 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __chkstk_darwin(v56);
  unint64_t v61 = (char *)&v437 - v60;
  uint64_t v62 = __chkstk_darwin(v59);
  uint64_t v64 = (char *)&v437 - v63;
  uint64_t v65 = __chkstk_darwin(v62);
  uint64_t v67 = (char *)&v437 - v66;
  uint64_t v68 = __chkstk_darwin(v65);
  uint64_t v473 = (uint64_t)&v437 - v69;
  uint64_t v70 = __chkstk_darwin(v68);
  uint64_t v472 = (uint64_t)&v437 - v71;
  uint64_t v72 = __chkstk_darwin(v70);
  unint64_t v74 = (char *)&v437 - v73;
  __chkstk_darwin(v72);
  uint64_t v76 = (char *)&v437 - v75;
  id v77 = (int *)_s10NanoWalletV18InitialLockContextVMa(0);
  uint64_t v78 = __chkstk_darwin(v497);
  unint64_t v80 = (char *)&v437 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = v32;
  uint64_t v82 = (char *)*(int *)(v32 + 28);
  uint64_t v83 = *(int *)(v32 + 32);
  char v84 = *(unsigned char *)(v78 + v83);
  switch(*(void *)&v82[v78])
  {
    case 2:
      uint64_t v85 = v78;
      if (*(unsigned char *)(v78 + v83))
      {
        uint64_t v86 = type metadata accessor for SDAuthenticationRangingSession(0);
        swift_allocObject();
        uint64_t v87 = sub_100421E80();
        int v88 = (uint64_t *)v454;
        *((void *)v454 + 4) = v86;
        v88[5] = (uint64_t)&off_1008DA718;
        v88[1] = v87;
        uint64_t v89 = v452;
        id v90 = (char *)v88 + *(int *)(v452 + 24);
        uint64_t v91 = type metadata accessor for Date();
        uint64_t v92 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56);
        v92(v90, 1, 1, v91);
        v92(&v90[v55[5]], 1, 1, v91);
        v92(&v90[v55[6]], 1, 1, v91);
        v92(&v90[v55[7]], 1, 1, v91);
        v92(&v90[v55[8]], 1, 1, v91);
        v92(&v90[v55[9]], 1, 1, v91);
        v92(&v90[v55[10]], 1, 1, v91);
        v92(&v90[v55[11]], 1, 1, v91);
        v92(&v90[v55[12]], 1, 1, v91);
        v90[v55[13]] = 0;
        v92(&v90[v55[14]], 1, 1, v91);
        v92(&v90[v55[15]], 1, 1, v91);
        v92(&v90[v55[16]], 1, 1, v91);
        v92(&v90[v55[17]], 1, 1, v91);
        int v93 = &v90[v55[18]];
        *(_DWORD *)int v93 = 0;
        v93[4] = 1;
        v90[v55[19]] = 2;
        uint64_t v94 = &v90[v55[20]];
        *(void *)uint64_t v94 = 0;
        *((void *)v94 + 1) = 0;
        uint64_t v95 = &v90[v55[21]];
        *(void *)uint64_t v95 = 0;
        *((void *)v95 + 1) = 0;
        uint64_t v96 = *(uint64_t (**)(uint64_t))(v494
                                                + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo);
        uint64_t v97 = swift_retain();
        uint64_t v98 = v96(v97);
        uint64_t v100 = v99;
        swift_release();
        *int v88 = (uint64_t)_swiftEmptyArrayStorage;
        long long v101 = (uint64_t *)((char *)v88 + *(int *)(v89 + 28));
        *long long v101 = v98;
        v101[1] = v100;
        *(_OWORD *)((char *)v88 + *(int *)(v89 + 32)) = xmmword_100770AE0;
        uint64_t v499 = v89;
        v500 = &off_1008D5EB8;
        uint64_t v102 = sub_100278AE4((uint64_t *)&v498);
        sub_10070F0FC((uint64_t)v88, (uint64_t)v102, _s10NanoWalletV17InitialKeyContextVMa);
        uint64_t v103 = v495;
        sub_10070F0FC(v85, v495, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
        uint64_t v104 = (int *)v489;
        uint64_t v502 = v489;
        v503 = &off_1008D5E60;
        uint64_t v105 = sub_100278AE4((uint64_t *)&v501);
        uint64_t v106 = (uint64_t)v490;
        *(void *)&v490[v104[6]] = _swiftEmptyArrayStorage;
        *(void *)(v106 + v104[7]) = _swiftEmptyArrayStorage;
        uint64_t v107 = v499;
        uint64_t v108 = v500;
        uint64_t v109 = sub_10026BB6C(&v498, v499);
        uint64_t v110 = (uint64_t *)(v106 + v104[5]);
        v110[3] = v107;
        v110[4] = *((void *)v108[1] + 1);
        unint64_t v111 = sub_100278AE4(v110);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v107 - 8) + 16))(v111, v109, v107);
        sub_10070F174(v103, v106, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
        sub_10070F174(v106, (uint64_t)v105, _s10NanoWalletV4FlowVMa);
        sub_10024D338((uint64_t)&v498);
        unint64_t v112 = _s10NanoWalletV17InitialKeyContextVMa;
        goto LABEL_88;
      }
      v493 = v80;
      uint64_t v223 = type metadata accessor for SDAuthenticationRangingSession(0);
      swift_allocObject();
      uint64_t v224 = sub_100421E80();
      uint64_t v502 = v223;
      v503 = &off_1008DA718;
      *(void *)&long long v501 = v224;
      uint64_t v225 = type metadata accessor for Date();
      uint64_t v226 = *(void *)(v225 - 8);
      v227 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v226 + 56);
      v227(v76, 1, 1, v225);
      v227(&v76[v55[5]], 1, 1, v225);
      v227(&v76[v55[6]], 1, 1, v225);
      v227(&v76[v55[7]], 1, 1, v225);
      v227(&v76[v55[8]], 1, 1, v225);
      v227(&v76[v55[9]], 1, 1, v225);
      v227(&v76[v55[10]], 1, 1, v225);
      v227(&v76[v55[11]], 1, 1, v225);
      v227(&v76[v55[12]], 1, 1, v225);
      v76[v55[13]] = 0;
      v227(&v76[v55[14]], 1, 1, v225);
      v227(&v76[v55[15]], 1, 1, v225);
      v227(&v76[v55[16]], 1, 1, v225);
      v227(&v76[v55[17]], 1, 1, v225);
      v228 = &v76[v55[18]];
      *(_DWORD *)v228 = 0;
      v228[4] = 1;
      v76[v55[19]] = 2;
      v229 = &v76[v55[20]];
      *(void *)v229 = 0;
      *((void *)v229 + 1) = 0;
      v230 = &v76[v55[21]];
      *(void *)v230 = 0;
      *((void *)v230 + 1) = 0;
      v227(v481, 1, 1, v225);
      uint64_t v231 = v494;
      v232 = (void *)(v494 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager);
      swift_beginAccess();
      uint64_t v233 = *sub_10026BB6C(v232, v232[3])
           + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
      swift_beginAccess();
      uint64_t v234 = v449;
      sub_10024A330(v233, v449, (uint64_t *)&unk_100975040);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v226 + 48))(v234, 1, v225) == 1)
      {
        uint64_t v235 = (uint64_t)v451;
        static Date.distantFuture.getter();
        sub_10000A7E8(v234, (uint64_t *)&unk_100975040);
      }
      else
      {
        v322 = v451;
        (*(void (**)(char *, uint64_t, uint64_t))(v226 + 32))(v451, v234, v225);
        uint64_t v235 = (uint64_t)v322;
      }
      uint64_t v323 = v496;
      v227((char *)v235, 0, 1, v225);
      v324 = *(uint64_t (**)(uint64_t))(v231
                                               + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo);
      uint64_t v325 = swift_retain();
      uint64_t v326 = v324(v325);
      uint64_t v328 = v327;
      swift_release();
      uint64_t v329 = sub_1002D345C();
      uint64_t v330 = (uint64_t)v493;
      void *v493 = v329;
      sub_1002AF688(&v501, v330 + 8);
      sub_10070F174((uint64_t)v76, v330 + v77[6], (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
      sub_10024D388((uint64_t)v481, v330 + v77[7], (uint64_t *)&unk_100975040);
      sub_10024D388(v235, v330 + v77[8], (uint64_t *)&unk_100975040);
      v331 = (uint64_t *)(v330 + v77[9]);
      uint64_t *v331 = v326;
      v331[1] = v328;
      *(_OWORD *)(v330 + v77[10]) = xmmword_100770AE0;
      *(void *)(v330 + v77[11]) = 0;
      *(unsigned char *)(v330 + v77[12]) = 0;
      uint64_t v499 = (uint64_t)v77;
      v500 = &off_1008D5E48;
      v332 = sub_100278AE4((uint64_t *)&v498);
      sub_10070F0FC(v330, (uint64_t)v332, _s10NanoWalletV18InitialLockContextVMa);
      uint64_t v333 = v495;
      sub_10070F0FC(v85, v495, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
      v334 = (int *)v489;
      uint64_t v502 = v489;
      v503 = &off_1008D5E60;
      v335 = sub_100278AE4((uint64_t *)&v501);
      uint64_t v336 = (uint64_t)v490;
      *(void *)&v490[v334[6]] = _swiftEmptyArrayStorage;
      *(void *)(v336 + v334[7]) = _swiftEmptyArrayStorage;
      uint64_t v337 = v499;
      v338 = v500;
      v339 = sub_10026BB6C(&v498, v499);
      v340 = (uint64_t *)(v336 + v334[5]);
      v340[3] = v337;
      v340[4] = *((void *)v338[1] + 1);
      v341 = sub_100278AE4(v340);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v337 - 8) + 16))(v341, v339, v337);
      sub_10070F174(v333, v336, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
      sub_10070F174(v336, (uint64_t)v335, _s10NanoWalletV4FlowVMa);
      sub_10024D338((uint64_t)&v498);
      sub_10070EE60(v330, _s10NanoWalletV18InitialLockContextVMa);
      uint64_t v310 = v323;
      return sub_1002AF688(&v501, v310);
    case 6:
      uint64_t v139 = v81;
      if (*(unsigned char *)(v78 + v83))
      {
        uint64_t v140 = v83;
        v490 = v82;
        sub_10024A330((uint64_t)v491, (uint64_t)&v501, &qword_10097F7D8);
        if (v502)
        {
          sub_10000A844(&qword_10097F850);
          sub_10000B740(0, &qword_10097F7D0);
          int v141 = swift_dynamicCast();
          id v142 = v498;
          if (!v141) {
            id v142 = 0;
          }
          id v491 = v142;
        }
        else
        {
          sub_10000A7E8((uint64_t)&v501, &qword_10097F7D8);
          id v491 = 0;
        }
        v342 = v497;
        uint64_t v343 = v497[8];
        uint64_t v35 = v497[9];
        sub_10026BB6C(v497 + 5, v343);
        uint64_t v78 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v343, v35);
        if (v344)
        {
          sub_1006D4404(v78, v344, v476);
          swift_bridgeObjectRelease();
          uint64_t v345 = type metadata accessor for Date();
          uint64_t v35 = *(void *)(*(void *)(v345 - 8) + 56);
          uint64_t v346 = v472;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v35)(v472, 1, 1, v345);
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v35)(v346 + v55[5], 1, 1, v345);
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v35)(v346 + v55[6], 1, 1, v345);
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v35)(v346 + v55[7], 1, 1, v345);
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v35)(v346 + v55[8], 1, 1, v345);
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v35)(v346 + v55[9], 1, 1, v345);
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v35)(v346 + v55[10], 1, 1, v345);
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v35)(v346 + v55[11], 1, 1, v345);
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v35)(v346 + v55[12], 1, 1, v345);
          *(unsigned char *)(v346 + v55[13]) = 0;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v35)(v346 + v55[14], 1, 1, v345);
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v35)(v346 + v55[15], 1, 1, v345);
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v35)(v346 + v55[16], 1, 1, v345);
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v35)(v346 + v55[17], 1, 1, v345);
          uint64_t v347 = v346 + v55[18];
          *(_DWORD *)uint64_t v347 = 0;
          *(unsigned char *)(v347 + 4) = 1;
          *(unsigned char *)(v346 + v55[19]) = 2;
          v348 = (void *)(v346 + v55[20]);
          void *v348 = 0;
          v348[1] = 0;
          v349 = (void *)(v346 + v55[21]);
          void *v349 = 0;
          v349[1] = 0;
          char v350 = *((unsigned char *)v342 + v140);
          sub_100278C8C((uint64_t)(v342 + 5), (uint64_t)&v501);
          v351 = (char *)v342 + *(int *)(v139 + 24);
          uint64_t v352 = v492;
          v353 = v441;
          v354 = v493;
          (*(void (**)(char *, char *, void *))(v492 + 16))(v441, v351, v493);
          uint64_t v355 = *(void *)&v490[(void)v342];
          uint64_t v356 = type metadata accessor for SDAuthenticationAKSAuthSession();
          uint64_t v357 = swift_allocObject();
          *(void *)(v357 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession) = 0;
          uint64_t v78 = (uint64_t)[self sharedManager];
          if (v78)
          {
            *(void *)(v357 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager) = v78;
            *(unsigned char *)(v357 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role) = v350;
            sub_1002AF688(&v501, v357 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice);
            (*(void (**)(uint64_t, char *, void *))(v352 + 32))(v357 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_sessionID, v353, v354);
            *(void *)(v357 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_type) = v355;
            uint64_t v502 = v356;
            v503 = &off_1008E50E0;
            *(void *)&long long v501 = v357;
            uint64_t v247 = v476;
            sub_10024A330(v476, v474, (uint64_t *)&unk_100975040);
            uint64_t v358 = (uint64_t)v439;
            ((void (*)(char *, uint64_t, uint64_t, uint64_t))v35)(v439, 1, 1, v345);
            if (v491)
            {
              id v359 = [v491 authorizationToken];
              uint64_t v360 = v495;
              uint64_t v361 = (uint64_t)v479;
              v362 = v447;
              v363 = (int *)v445;
              if (v359)
              {
                v364 = v359;
                uint64_t v365 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
                unint64_t v367 = v366;
              }
              else
              {
                uint64_t v365 = 0;
                unint64_t v367 = 0xF000000000000000;
              }
            }
            else
            {
              uint64_t v365 = 0;
              unint64_t v367 = 0xF000000000000000;
              uint64_t v360 = v495;
              uint64_t v361 = (uint64_t)v479;
              v362 = v447;
              v363 = (int *)v445;
            }
            uint64_t *v362 = sub_10049D6A4();
            sub_10070F174(v472, (uint64_t)v362 + v363[5], (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
            sub_1002AF688(&v501, (uint64_t)v362 + v363[6]);
            sub_10024D388(v474, (uint64_t)v362 + v363[7], (uint64_t *)&unk_100975040);
            sub_10024D388(v358, (uint64_t)v362 + v363[8], (uint64_t *)&unk_100975040);
            v427 = (uint64_t *)((char *)v362 + v363[9]);
            uint64_t *v427 = v365;
            v427[1] = v367;
            *(uint64_t *)((char *)v362 + v363[10]) = 0;
            *((unsigned char *)v362 + v363[11]) = 0;
            uint64_t v499 = (uint64_t)v363;
            v500 = &off_1008DC800;
            v428 = sub_100278AE4((uint64_t *)&v498);
            sub_10070F0FC((uint64_t)v362, (uint64_t)v428, _s14MacUnlockPhoneV17InitialKeyContextVMa);
            sub_10070F0FC((uint64_t)v497, v360, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
            v429 = (int *)v477;
            uint64_t v502 = v477;
            v503 = &off_1008DC7A8;
            v430 = sub_100278AE4((uint64_t *)&v501);
            *(void *)(v361 + v429[6]) = _swiftEmptyArrayStorage;
            *(void *)(v361 + v429[7]) = _swiftEmptyArrayStorage;
            uint64_t v431 = v499;
            v432 = v500;
            v433 = sub_10026BB6C(&v498, v499);
            v434 = (uint64_t *)(v361 + v429[5]);
            v434[3] = v431;
            v434[4] = *((void *)v432[1] + 1);
            v435 = sub_100278AE4(v434);
            (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v431 - 8) + 16))(v435, v433, v431);
            sub_10070F174(v360, v361, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
            sub_10070F174(v361, (uint64_t)v430, _s14MacUnlockPhoneV4FlowVMa);
            sub_10024D338((uint64_t)&v498);

            v274 = _s14MacUnlockPhoneV17InitialKeyContextVMa;
            uint64_t v275 = (uint64_t)v362;
            goto LABEL_94;
          }
          goto LABEL_99;
        }
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        sub_10070F0FC(v78, v35, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
        *(void *)&long long v501 = 0;
        *((void *)&v501 + 1) = 0xE000000000000000;
        _StringGuts.grow(_:)(36);
        swift_bridgeObjectRelease();
        *(void *)&long long v501 = 0xD000000000000022;
        *((void *)&v501 + 1) = 0x80000001007C7E00;
        v436._uint64_t countAndFlagsBits = sub_10050938C();
        String.append(_:)(v436);
        swift_bridgeObjectRelease();
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        JUMPOUT(0x1006D43D0);
      }
      uint64_t v241 = v78 + 40;
      uint64_t v242 = *(void *)(v78 + 64);
      uint64_t v243 = *(void *)(v78 + 72);
      uint64_t v244 = v78;
      sub_10026BB6C((void *)(v78 + 40), v242);
      uint64_t v78 = (*(uint64_t (**)(uint64_t, uint64_t))(v243 + 8))(v242, v243);
      uint64_t v35 = (uint64_t)v493;
      uint64_t v246 = v492;
      if (!v245) {
        goto LABEL_96;
      }
      uint64_t v247 = v438;
      uint64_t v248 = v494;
      sub_1006D4404(v78, v245, v438);
      swift_bridgeObjectRelease();
      sub_100278C8C(v241, (uint64_t)&v501);
      uint64_t v249 = v244 + *(int *)(v139 + 24);
      uint64_t v250 = v437;
      (*(void (**)(char *, uint64_t, uint64_t))(v246 + 16))(v437, v249, v35);
      uint64_t v251 = type metadata accessor for SDAuthenticationAKSAuthSession();
      uint64_t v252 = swift_allocObject();
      *(void *)(v252 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession) = 0;
      uint64_t v78 = (uint64_t)[self sharedManager];
      if (v78)
      {
        *(void *)(v252 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager) = v78;
        *(unsigned char *)(v252 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role) = 0;
        sub_1002AF688(&v501, v252 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice);
        (*(void (**)(uint64_t, char *, uint64_t))(v246 + 32))(v252 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_sessionID, v250, v35);
        *(void *)(v252 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_type) = 6;
        uint64_t v502 = v251;
        v503 = &off_1008E50E0;
        *(void *)&long long v501 = v252;
        uint64_t v253 = type metadata accessor for Date();
        uint64_t v254 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v253 - 8) + 56);
        v254(v74, 1, 1, v253);
        v254(&v74[v55[5]], 1, 1, v253);
        v254(&v74[v55[6]], 1, 1, v253);
        v254(&v74[v55[7]], 1, 1, v253);
        v254(&v74[v55[8]], 1, 1, v253);
        v254(&v74[v55[9]], 1, 1, v253);
        v254(&v74[v55[10]], 1, 1, v253);
        v254(&v74[v55[11]], 1, 1, v253);
        v254(&v74[v55[12]], 1, 1, v253);
        v74[v55[13]] = 0;
        v254(&v74[v55[14]], 1, 1, v253);
        v254(&v74[v55[15]], 1, 1, v253);
        v254(&v74[v55[16]], 1, 1, v253);
        v254(&v74[v55[17]], 1, 1, v253);
        v255 = &v74[v55[18]];
        *(_DWORD *)v255 = 0;
        v255[4] = 1;
        v74[v55[19]] = 2;
        v256 = &v74[v55[20]];
        *(void *)v256 = 0;
        *((void *)v256 + 1) = 0;
        v257 = &v74[v55[21]];
        *(void *)v257 = 0;
        *((void *)v257 + 1) = 0;
        v258 = (void *)(v248 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager);
        swift_beginAccess();
        unint64_t v259 = sub_10026BB6C(v258, v258[3]);
        uint64_t v260 = v440;
        v261 = v443;
        uint64_t v262 = (uint64_t)&v443[*(int *)(v440 + 32)];
        uint64_t v263 = *v259 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
        swift_beginAccess();
        sub_10024A330(v263, v262, (uint64_t *)&unk_100975040);
        void *v261 = _swiftEmptyArrayStorage;
        sub_1002AF688(&v501, (uint64_t)(v261 + 1));
        sub_10070F174((uint64_t)v74, (uint64_t)v261 + *(int *)(v260 + 24), (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
        sub_10024A330(v247, (uint64_t)v261 + *(int *)(v260 + 28), (uint64_t *)&unk_100975040);
        uint64_t v499 = v260;
        v500 = &off_1008DC790;
        v264 = sub_100278AE4((uint64_t *)&v498);
        sub_10070F0FC((uint64_t)v261, (uint64_t)v264, _s14MacUnlockPhoneV18InitialLockContextVMa);
        uint64_t v265 = v495;
        sub_10070F0FC(v244, v495, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
        uint64_t v266 = (int *)v477;
        uint64_t v502 = v477;
        v503 = &off_1008DC7A8;
        uint64_t v267 = sub_100278AE4((uint64_t *)&v501);
        uint64_t v268 = (uint64_t)v479;
        *(void *)&v479[v266[6]] = _swiftEmptyArrayStorage;
        *(void *)(v268 + v266[7]) = _swiftEmptyArrayStorage;
        uint64_t v269 = v499;
        uint64_t v270 = v500;
        v271 = sub_10026BB6C(&v498, v499);
        v272 = (uint64_t *)(v268 + v266[5]);
        v272[3] = v269;
        v272[4] = *((void *)v270[1] + 1);
        unint64_t v273 = sub_100278AE4(v272);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v269 - 8) + 16))(v273, v271, v269);
        sub_10070F174(v265, v268, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
        sub_10070F174(v268, (uint64_t)v267, _s14MacUnlockPhoneV4FlowVMa);
        sub_10024D338((uint64_t)&v498);
        v274 = _s14MacUnlockPhoneV18InitialLockContextVMa;
        uint64_t v275 = (uint64_t)v261;
LABEL_94:
        sub_10070EE60(v275, v274);
        sub_10000A7E8(v247, (uint64_t *)&unk_100975040);
        goto LABEL_90;
      }
      goto LABEL_97;
    case 7:
      uint64_t v113 = v81;
      if ((*(unsigned char *)(v78 + v83) & 1) == 0)
      {
        uint64_t v236 = v83;
        v237 = v82;
        sub_10024A330((uint64_t)v491, (uint64_t)&v501, &qword_10097F7D8);
        v238 = v493;
        uint64_t v239 = v492;
        if (v502)
        {
          sub_10000A844(&qword_10097F850);
          sub_10000B740(0, &qword_10097F7D0);
          if (swift_dynamicCast()) {
            v240 = v498;
          }
          else {
            v240 = 0;
          }
        }
        else
        {
          sub_10000A7E8((uint64_t)&v501, &qword_10097F7D8);
          v240 = 0;
        }
        v368 = v450;
        v369 = (char *)v497;
        uint64_t v35 = *((unsigned __int8 *)v497 + v236);
        sub_100278C8C((uint64_t)(v497 + 5), (uint64_t)&v501);
        (*(void (**)(char *, char *, void *))(v239 + 16))(v368, &v369[*(int *)(v113 + 24)], v238);
        uint64_t v370 = *(void *)&v237[(void)v369];
        uint64_t v371 = type metadata accessor for SDAuthenticationAKSAuthSession();
        uint64_t v372 = swift_allocObject();
        *(void *)(v372 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession) = 0;
        uint64_t v78 = (uint64_t)[self sharedManager];
        if (!v78) {
          goto LABEL_100;
        }
        *(void *)(v372 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager) = v78;
        *(unsigned char *)(v372 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role) = v35;
        sub_1002AF688(&v501, v372 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice);
        (*(void (**)(uint64_t, char *, void *))(v239 + 32))(v372 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_sessionID, v368, v238);
        *(void *)(v372 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_type) = v370;
        uint64_t v502 = v371;
        v503 = &off_1008E50E0;
        *(void *)&long long v501 = v372;
        uint64_t v373 = type metadata accessor for Date();
        v374 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v373 - 8) + 56);
        uint64_t v375 = v473;
        v374(v473, 1, 1, v373);
        v374(v375 + v55[5], 1, 1, v373);
        v374(v375 + v55[6], 1, 1, v373);
        v374(v375 + v55[7], 1, 1, v373);
        v374(v375 + v55[8], 1, 1, v373);
        v374(v375 + v55[9], 1, 1, v373);
        v374(v375 + v55[10], 1, 1, v373);
        v374(v375 + v55[11], 1, 1, v373);
        v374(v375 + v55[12], 1, 1, v373);
        *(unsigned char *)(v375 + v55[13]) = 0;
        v374(v375 + v55[14], 1, 1, v373);
        v374(v375 + v55[15], 1, 1, v373);
        v374(v375 + v55[16], 1, 1, v373);
        v374(v375 + v55[17], 1, 1, v373);
        uint64_t v376 = v375 + v55[18];
        *(_DWORD *)uint64_t v376 = 0;
        *(unsigned char *)(v376 + 4) = 1;
        unsigned __int8 v377 = 2;
        *(unsigned char *)(v375 + v55[19]) = 2;
        v378 = (void *)(v375 + v55[20]);
        void *v378 = 0;
        v378[1] = 0;
        v379 = (void *)(v375 + v55[21]);
        void *v379 = 0;
        v379[1] = 0;
        v374(v475, 1, 1, v373);
        if (v240)
        {
          id v380 = [v240 bundleID];
          if (v380)
          {
            v381 = v380;
            uint64_t v382 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v384 = v383;
          }
          else
          {
            uint64_t v382 = 0;
            uint64_t v384 = 0;
          }
          id v404 = [v240 appName];
          if (v404)
          {
            v405 = v404;
            uint64_t v397 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v398 = v406;
          }
          else
          {
            uint64_t v397 = 0;
            uint64_t v398 = 0;
          }
          unsigned __int8 v377 = [v240 biometricOnly];
          id v407 = [v240 acmContext];
          if (v407)
          {
            v408 = v407;
            uint64_t v396 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v410 = v409;

            goto LABEL_87;
          }
          uint64_t v396 = 0;
        }
        else
        {
          uint64_t v396 = 0;
          uint64_t v397 = 0;
          uint64_t v398 = 0;
          uint64_t v382 = 0;
          uint64_t v384 = 0;
        }
        unint64_t v410 = 0xF000000000000000;
LABEL_87:
        uint64_t v411 = sub_10026CBEC();
        int v88 = v448;
        uint64_t *v448 = v411;
        sub_1002AF688(&v501, (uint64_t)(v88 + 1));
        v412 = (int *)v446;
        sub_10070F174(v473, (uint64_t)v88 + *(int *)(v446 + 24), (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
        sub_10024D388(v475, (uint64_t)v88 + v412[7], (uint64_t *)&unk_100975040);
        v413 = (uint64_t *)((char *)v88 + v412[8]);
        uint64_t *v413 = v382;
        v413[1] = v384;
        v414 = (uint64_t *)((char *)v88 + v412[9]);
        uint64_t *v414 = v397;
        v414[1] = v398;
        *((unsigned char *)v88 + v412[10]) = v377;
        v415 = (uint64_t *)((char *)v88 + v412[11]);
        uint64_t *v415 = v396;
        v415[1] = v410;
        *(uint64_t *)((char *)v88 + v412[12]) = 0;
        *((unsigned char *)v88 + v412[13]) = 10;
        uint64_t v499 = (uint64_t)v412;
        v500 = &off_1008D4630;
        v416 = sub_100278AE4((uint64_t *)&v498);
        sub_10070F0FC((uint64_t)v88, (uint64_t)v416, _s15MacApprovePhoneV18InitialLockContextVMa);
        uint64_t v417 = v495;
        sub_10070F0FC((uint64_t)v497, v495, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
        v418 = (int *)v478;
        uint64_t v502 = v478;
        v503 = &off_1008D4648;
        v419 = sub_100278AE4((uint64_t *)&v501);
        uint64_t v420 = (uint64_t)v480;
        *(void *)&v480[v418[6]] = _swiftEmptyArrayStorage;
        *(void *)(v420 + v418[7]) = _swiftEmptyArrayStorage;
        uint64_t v421 = v499;
        v422 = v500;
        v423 = sub_10026BB6C(&v498, v499);
        v424 = (uint64_t *)(v420 + v418[5]);
        v424[3] = v421;
        v424[4] = *((void *)v422[1] + 1);
        v425 = sub_100278AE4(v424);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v421 - 8) + 16))(v425, v423, v421);
        sub_10070F174(v417, v420, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
        sub_10070F174(v420, (uint64_t)v419, _s15MacApprovePhoneV4FlowVMa);
        sub_10024D338((uint64_t)&v498);

        unint64_t v112 = _s15MacApprovePhoneV18InitialLockContextVMa;
LABEL_88:
        v158 = v112;
        uint64_t v159 = (uint64_t)v88;
        goto LABEL_89;
      }
      uint64_t v114 = type metadata accessor for Date();
      uint64_t v115 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56);
      uint64_t v35 = 1;
      v115(v67, 1, 1, v114);
      v115(&v67[v55[5]], 1, 1, v114);
      v115(&v67[v55[6]], 1, 1, v114);
      v115(&v67[v55[7]], 1, 1, v114);
      v115(&v67[v55[8]], 1, 1, v114);
      v115(&v67[v55[9]], 1, 1, v114);
      v115(&v67[v55[10]], 1, 1, v114);
      v115(&v67[v55[11]], 1, 1, v114);
      v115(&v67[v55[12]], 1, 1, v114);
      v67[v55[13]] = 0;
      v115(&v67[v55[14]], 1, 1, v114);
      v115(&v67[v55[15]], 1, 1, v114);
      v115(&v67[v55[16]], 1, 1, v114);
      v115(&v67[v55[17]], 1, 1, v114);
      uint64_t v116 = &v67[v55[18]];
      *(_DWORD *)uint64_t v116 = 0;
      v116[4] = 1;
      v67[v55[19]] = 2;
      int v117 = &v67[v55[20]];
      *(void *)int v117 = 0;
      *((void *)v117 + 1) = 0;
      uint64_t v118 = &v67[v55[21]];
      *(void *)uint64_t v118 = 0;
      *((void *)v118 + 1) = 0;
      uint64_t v119 = v497;
      sub_100278C8C((uint64_t)(v497 + 5), (uint64_t)&v501);
      uint64_t v120 = (char *)v119 + *(int *)(v113 + 24);
      uint64_t v121 = v492;
      long long v122 = v453;
      long long v123 = v493;
      (*(void (**)(char *, char *, void *))(v492 + 16))(v453, v120, v493);
      uint64_t v124 = type metadata accessor for SDAuthenticationAKSAuthSession();
      uint64_t v125 = swift_allocObject();
      *(void *)(v125 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession) = 0;
      uint64_t v78 = (uint64_t)[self sharedManager];
      if (!v78)
      {
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
        goto LABEL_98;
      }
      *(void *)(v125 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager) = v78;
      *(unsigned char *)(v125 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role) = 1;
      sub_1002AF688(&v501, v125 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice);
      (*(void (**)(uint64_t, char *, void *))(v121 + 32))(v125 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_sessionID, v122, v123);
      *(void *)(v125 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_type) = 7;
      uint64_t v502 = v124;
      v503 = &off_1008E50E0;
      *(void *)&long long v501 = v125;
      long long v126 = v444;
      uint64_t *v444 = (uint64_t)_swiftEmptyArrayStorage;
      uint64_t v127 = v442;
      sub_10070F174((uint64_t)v67, (uint64_t)v126 + *(int *)(v442 + 20), (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
      sub_1002AF688(&v501, (uint64_t)v126 + *(int *)(v127 + 24));
      uint64_t v499 = v127;
      v500 = &off_1008D46A0;
      uint64_t v128 = sub_100278AE4((uint64_t *)&v498);
      sub_10070F0FC((uint64_t)v126, (uint64_t)v128, _s15MacApprovePhoneV17InitialKeyContextVMa);
      uint64_t v129 = v495;
      sub_10070F0FC((uint64_t)v119, v495, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
      v130 = (int *)v478;
      uint64_t v502 = v478;
      v503 = &off_1008D4648;
      NSString v131 = sub_100278AE4((uint64_t *)&v501);
      uint64_t v132 = (uint64_t)v480;
      *(void *)&v480[v130[6]] = _swiftEmptyArrayStorage;
      *(void *)(v132 + v130[7]) = _swiftEmptyArrayStorage;
      uint64_t v133 = v499;
      uint64_t v134 = v500;
      v135 = sub_10026BB6C(&v498, v499);
      v136 = (uint64_t *)(v132 + v130[5]);
      v136[3] = v133;
      v136[4] = *((void *)v134[1] + 1);
      os_log_type_t v137 = sub_100278AE4(v136);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v133 - 8) + 16))(v137, v135, v133);
      sub_10070F174(v129, v132, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
      sub_10070F174(v132, (uint64_t)v131, _s15MacApprovePhoneV4FlowVMa);
      sub_10024D338((uint64_t)&v498);
      uint64_t v138 = _s15MacApprovePhoneV17InitialKeyContextVMa;
LABEL_14:
      v158 = v138;
      uint64_t v159 = (uint64_t)v126;
LABEL_89:
      sub_10070EE60(v159, v158);
LABEL_90:
      uint64_t v310 = v496;
      return sub_1002AF688(&v501, v310);
    case 9:
      uint64_t v185 = v78;
      if (*(unsigned char *)(v78 + v83))
      {
        uint64_t v186 = v458;
        char v162 = v463;
        NSString v187 = (char *)v463 + *(int *)(v458 + 20);
        uint64_t v188 = type metadata accessor for Date();
        uint64_t v189 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v188 - 8) + 56);
        v189(v187, 1, 1, v188);
        v189(&v187[v55[5]], 1, 1, v188);
        v189(&v187[v55[6]], 1, 1, v188);
        v189(&v187[v55[7]], 1, 1, v188);
        v189(&v187[v55[8]], 1, 1, v188);
        v189(&v187[v55[9]], 1, 1, v188);
        v189(&v187[v55[10]], 1, 1, v188);
        v189(&v187[v55[11]], 1, 1, v188);
        v189(&v187[v55[12]], 1, 1, v188);
        v187[v55[13]] = 0;
        v189(&v187[v55[14]], 1, 1, v188);
        v189(&v187[v55[15]], 1, 1, v188);
        v189(&v187[v55[16]], 1, 1, v188);
        v189(&v187[v55[17]], 1, 1, v188);
        v190 = &v187[v55[18]];
        *(_DWORD *)v190 = 0;
        v190[4] = 1;
        v187[v55[19]] = 2;
        uint64_t v191 = &v187[v55[20]];
        *(void *)uint64_t v191 = 0;
        *((void *)v191 + 1) = 0;
        os_log_type_t v192 = &v187[v55[21]];
        *(void *)os_log_type_t v192 = 0;
        *((void *)v192 + 1) = 0;
        sub_10000A844(&qword_10096BBB0);
        uint64_t v193 = swift_allocObject();
        *(_OWORD *)(v193 + 16) = xmmword_10076E7A0;
        if (qword_10096A088 != -1) {
          swift_once();
        }
        *(void *)(v193 + 56) = &type metadata for SDAuthentication.Operation.BuildMessageHeader;
        *(void *)(v193 + 64) = &off_100971928;
        *char v162 = v193;
        *(uint64_t *)((char *)v162 + *(int *)(v186 + 24)) = 0;
        *((unsigned char *)v162 + *(int *)(v186 + 28)) = 9;
        uint64_t v499 = v186;
        v500 = &off_1008E1EF0;
        uint64_t v194 = sub_100278AE4((uint64_t *)&v498);
        sub_10070F0FC((uint64_t)v162, (uint64_t)v194, _s22GuestModeUnlockPairingV17InitialKeyContextVMa);
        uint64_t v195 = v495;
        sub_10070F0FC(v185, v495, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
        uint64_t v502 = _s22GuestModeUnlockPairingV4FlowVMa(0);
        v503 = &off_1008E1E98;
        id v196 = sub_100278AE4((uint64_t *)&v501);
        sub_1005F8ED0((uint64_t)&v498, v195, (uint64_t)v196);
        unint64_t v173 = _s22GuestModeUnlockPairingV17InitialKeyContextVMa;
        goto LABEL_78;
      }
      sub_10024A330((uint64_t)v491, (uint64_t)&v501, &qword_10097F7D8);
      if (v502)
      {
        sub_10000A844(&qword_10097F850);
        sub_10000B740(0, &qword_10097F7D0);
        if (swift_dynamicCast())
        {
          v294 = v498;
          goto LABEL_68;
        }
      }
      else
      {
        sub_10000A7E8((uint64_t)&v501, &qword_10097F7D8);
      }
      v294 = 0;
LABEL_68:
      uint64_t v385 = type metadata accessor for Date();
      v386 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v385 - 8) + 56);
      v386(v64, 1, 1, v385);
      v386(&v64[v55[5]], 1, 1, v385);
      v386(&v64[v55[6]], 1, 1, v385);
      v386(&v64[v55[7]], 1, 1, v385);
      v386(&v64[v55[8]], 1, 1, v385);
      v386(&v64[v55[9]], 1, 1, v385);
      v386(&v64[v55[10]], 1, 1, v385);
      v386(&v64[v55[11]], 1, 1, v385);
      v386(&v64[v55[12]], 1, 1, v385);
      v64[v55[13]] = 0;
      v386(&v64[v55[14]], 1, 1, v385);
      v386(&v64[v55[15]], 1, 1, v385);
      v386(&v64[v55[16]], 1, 1, v385);
      v386(&v64[v55[17]], 1, 1, v385);
      v387 = &v64[v55[18]];
      *(_DWORD *)v387 = 0;
      v387[4] = 1;
      v64[v55[19]] = 2;
      v388 = &v64[v55[20]];
      *(void *)v388 = 0;
      *((void *)v388 + 1) = 0;
      v389 = &v64[v55[21]];
      *(void *)v389 = 0;
      *((void *)v389 + 1) = 0;
      if (v294)
      {
        id v390 = [v294 authorizationToken];
        uint64_t v391 = v495;
        if (v390)
        {
          v392 = v390;
          uint64_t v393 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v395 = v394;
        }
        else
        {
          uint64_t v393 = 0;
          unint64_t v395 = 0xF000000000000000;
        }
      }
      else
      {
        uint64_t v393 = 0;
        unint64_t v395 = 0xF000000000000000;
        uint64_t v391 = v495;
      }
      sub_10000A844(&qword_10096BBB0);
      uint64_t v399 = swift_allocObject();
      *(_OWORD *)(v399 + 16) = xmmword_100770AD0;
      if (qword_10096A088 != -1) {
        swift_once();
      }
      *(void *)(v399 + 56) = &type metadata for SDAuthentication.Operation.IncludeLongTermKeyInPairingMessage;
      *(void *)(v399 + 64) = &off_100971908;
      *(void *)(v399 + 96) = &type metadata for SDAuthentication.Operation.BuildMessageHeader;
      *(void *)(v399 + 104) = &off_100971928;
      char v162 = v470;
      uint64_t *v470 = v399;
      uint64_t v400 = v466;
      v401 = (uint64_t *)((char *)v162 + *(int *)(v466 + 24));
      *(uint64_t *)((char *)v162 + *(int *)(v466 + 28)) = 0;
      *((unsigned char *)v162 + *(int *)(v400 + 32)) = 3;
      sub_10070F174((uint64_t)v64, (uint64_t)v162 + *(int *)(v400 + 20), (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
      uint64_t *v401 = v393;
      v401[1] = v395;
      uint64_t v499 = v400;
      v500 = &off_1008E1E80;
      v402 = sub_100278AE4((uint64_t *)&v498);
      sub_10070F0FC((uint64_t)v162, (uint64_t)v402, _s22GuestModeUnlockPairingV18InitialLockContextVMa);
      sub_10070F0FC(v185, v391, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
      uint64_t v502 = _s22GuestModeUnlockPairingV4FlowVMa(0);
      v503 = &off_1008E1E98;
      v403 = sub_100278AE4((uint64_t *)&v501);
      sub_1005F8ED0((uint64_t)&v498, v391, (uint64_t)v403);

      unint64_t v173 = _s22GuestModeUnlockPairingV18InitialLockContextVMa;
      goto LABEL_78;
    case 0xALL:
      uint64_t v197 = v78;
      uint64_t v198 = type metadata accessor for Date();
      v199 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v198 - 8) + 56);
      if (v84)
      {
        v199(v74, 1, 1, v198);
        v199(&v74[v55[5]], 1, 1, v198);
        v199(&v74[v55[6]], 1, 1, v198);
        v199(&v74[v55[7]], 1, 1, v198);
        v199(&v74[v55[8]], 1, 1, v198);
        v199(&v74[v55[9]], 1, 1, v198);
        v199(&v74[v55[10]], 1, 1, v198);
        v199(&v74[v55[11]], 1, 1, v198);
        v199(&v74[v55[12]], 1, 1, v198);
        v74[v55[13]] = 0;
        v199(&v74[v55[14]], 1, 1, v198);
        v199(&v74[v55[15]], 1, 1, v198);
        v199(&v74[v55[16]], 1, 1, v198);
        v199(&v74[v55[17]], 1, 1, v198);
        os_log_type_t v200 = &v74[v55[18]];
        *(_DWORD *)os_log_type_t v200 = 0;
        v200[4] = 1;
        v74[v55[19]] = 2;
        int v201 = &v74[v55[20]];
        *(void *)int v201 = 0;
        *((void *)v201 + 1) = 0;
        uint64_t v202 = &v74[v55[21]];
        *(void *)uint64_t v202 = 0;
        *((void *)v202 + 1) = 0;
        uint64_t v179 = v462;
        sub_100554280((uint64_t)v74, v462);
        uint64_t v203 = (int *)_s27GuestModeUnlockRegistrationV4FlowVMa(0);
        uint64_t v502 = (uint64_t)v203;
        v503 = &off_1008DEF60;
        unint64_t v204 = sub_100278AE4((uint64_t *)&v501);
        uint64_t v205 = (uint64_t *)((char *)v204 + v203[5]);
        v205[3] = v460;
        v205[4] = (uint64_t)&off_1008DEF48;
        os_log_t v206 = sub_100278AE4(v205);
        sub_10070F0FC((uint64_t)v179, (uint64_t)v206, _s27GuestModeUnlockRegistrationV17InitialKeyContextVMa);
        sub_10070F0FC(v197, (uint64_t)v204, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
        *(uint64_t *)((char *)v204 + v203[6]) = (uint64_t)_swiftEmptyArrayStorage;
        *(uint64_t *)((char *)v204 + v203[7]) = (uint64_t)_swiftEmptyArrayStorage;
        unint64_t v184 = _s27GuestModeUnlockRegistrationV17InitialKeyContextVMa;
        goto LABEL_52;
      }
      v199(v61, 1, 1, v198);
      v199(&v61[v55[5]], 1, 1, v198);
      v199(&v61[v55[6]], 1, 1, v198);
      v199(&v61[v55[7]], 1, 1, v198);
      v199(&v61[v55[8]], 1, 1, v198);
      v199(&v61[v55[9]], 1, 1, v198);
      v199(&v61[v55[10]], 1, 1, v198);
      v199(&v61[v55[11]], 1, 1, v198);
      v199(&v61[v55[12]], 1, 1, v198);
      v61[v55[13]] = 0;
      v199(&v61[v55[14]], 1, 1, v198);
      v199(&v61[v55[15]], 1, 1, v198);
      v199(&v61[v55[16]], 1, 1, v198);
      v199(&v61[v55[17]], 1, 1, v198);
      v295 = &v61[v55[18]];
      *(_DWORD *)v295 = 0;
      v295[4] = 1;
      v61[v55[19]] = 2;
      v296 = &v61[v55[20]];
      *(void *)v296 = 0;
      *((void *)v296 + 1) = 0;
      v297 = &v61[v55[21]];
      *(void *)v297 = 0;
      *((void *)v297 + 1) = 0;
      sub_10000A844(&qword_10096BBB0);
      uint64_t v298 = swift_allocObject();
      *(_OWORD *)(v298 + 16) = xmmword_10076E7A0;
      if (qword_100969F58 != -1) {
        swift_once();
      }
      *(void *)(v298 + 56) = &type metadata for SDAuthentication.Operation.BuildMessageHeader;
      *(void *)(v298 + 64) = &off_100971928;
      uint64_t v299 = (uint64_t)v469;
      uint64_t *v469 = v298;
      uint64_t v300 = v467;
      *(void *)(v299 + *(int *)(v467 + 24)) = 0;
      *(unsigned char *)(v299 + *(int *)(v300 + 28)) = 3;
      uint64_t v301 = v496;
      if (qword_100969F50 != -1) {
        swift_once();
      }
      uint64_t v302 = type metadata accessor for Logger();
      sub_10000B47C(v302, (uint64_t)qword_100978E30);
      v303 = Logger.logObject.getter();
      os_log_type_t v304 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v303, v304))
      {
        v305 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v305 = 0;
        _os_log_impl((void *)&_mh_execute_header, v303, v304, "Start authentication Lock registration", v305, 2u);
        swift_slowDealloc();
      }

      sub_10070F174((uint64_t)v61, v299 + *(int *)(v300 + 20), (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
      v306 = (int *)_s27GuestModeUnlockRegistrationV4FlowVMa(0);
      uint64_t v502 = (uint64_t)v306;
      v503 = &off_1008DEF60;
      v307 = sub_100278AE4((uint64_t *)&v501);
      v308 = (uint64_t *)((char *)v307 + v306[5]);
      v308[3] = v300;
      v308[4] = (uint64_t)&off_1008DEF30;
      v309 = sub_100278AE4(v308);
      sub_10070F0FC(v299, (uint64_t)v309, _s27GuestModeUnlockRegistrationV18InitialLockContextVMa);
      sub_10070F0FC(v197, (uint64_t)v307, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
      *(uint64_t *)((char *)v307 + v306[6]) = (uint64_t)_swiftEmptyArrayStorage;
      *(uint64_t *)((char *)v307 + v306[7]) = (uint64_t)_swiftEmptyArrayStorage;
      sub_10070EE60(v299, _s27GuestModeUnlockRegistrationV18InitialLockContextVMa);
      uint64_t v310 = v301;
      return sub_1002AF688(&v501, v310);
    case 0xBLL:
      uint64_t v143 = type metadata accessor for Date();
      v144 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v143 - 8) + 56);
      v144(v74, 1, 1, v143);
      v144(&v74[v55[5]], 1, 1, v143);
      v144(&v74[v55[6]], 1, 1, v143);
      v144(&v74[v55[7]], 1, 1, v143);
      v144(&v74[v55[8]], 1, 1, v143);
      v144(&v74[v55[9]], 1, 1, v143);
      v144(&v74[v55[10]], 1, 1, v143);
      v144(&v74[v55[11]], 1, 1, v143);
      v144(&v74[v55[12]], 1, 1, v143);
      v74[v55[13]] = 0;
      v144(&v74[v55[14]], 1, 1, v143);
      v144(&v74[v55[15]], 1, 1, v143);
      v144(&v74[v55[16]], 1, 1, v143);
      v144(&v74[v55[17]], 1, 1, v143);
      char v145 = &v74[v55[18]];
      *(_DWORD *)char v145 = 0;
      v145[4] = 1;
      v74[v55[19]] = 2;
      v146 = &v74[v55[20]];
      *(void *)v146 = 0;
      *((void *)v146 + 1) = 0;
      v147 = &v74[v55[21]];
      *(void *)v147 = 0;
      *((void *)v147 + 1) = 0;
      if (v84)
      {
        long long v126 = v459;
        sub_1003F8838((uint64_t)v74, v459);
        uint64_t v499 = v455;
        v500 = &off_1008D9B78;
        v148 = sub_100278AE4((uint64_t *)&v498);
        sub_10070F0FC((uint64_t)v126, (uint64_t)v148, _s15GuestModeUnlockV17InitialKeyContextVMa);
        uint64_t v149 = v495;
        sub_10070F0FC((uint64_t)v497, v495, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
        unint64_t v150 = (int *)v484;
        uint64_t v502 = v484;
        v503 = &off_1008D9B20;
        v151 = sub_100278AE4((uint64_t *)&v501);
        uint64_t v152 = (uint64_t)v488;
        *(void *)&v488[v150[6]] = _swiftEmptyArrayStorage;
        *(void *)(v152 + v150[7]) = _swiftEmptyArrayStorage;
        uint64_t v153 = v499;
        int v154 = v500;
        uint64_t v155 = sub_10026BB6C(&v498, v499);
        v156 = (uint64_t *)(v152 + v150[5]);
        v156[3] = v153;
        v156[4] = *((void *)v154[1] + 1);
        v157 = sub_100278AE4(v156);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v153 - 8) + 16))(v157, v155, v153);
        sub_10070F174(v149, v152, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
        sub_10070F174(v152, (uint64_t)v151, _s15GuestModeUnlockV4FlowVMa);
        sub_10024D338((uint64_t)&v498);
        uint64_t v138 = _s15GuestModeUnlockV17InitialKeyContextVMa;
        goto LABEL_14;
      }
      NSURLResourceKey v276 = (void *)(v494 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager);
      swift_beginAccess();
      uint64_t v277 = *sub_10026BB6C(v276, v276[3])
           + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
      swift_beginAccess();
      uint64_t v278 = v482;
      sub_10024A330(v277, v482, (uint64_t *)&unk_100975040);
      v279 = v456;
      void *v456 = _swiftEmptyArrayStorage;
      uint64_t v280 = v457;
      uint64_t v281 = (uint64_t)v279 + *(int *)(v457 + 24);
      v144((char *)v281, 1, 1, v143);
      sub_10070F174((uint64_t)v74, (uint64_t)v279 + *(int *)(v280 + 20), (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
      sub_10026B410(v278, v281, (uint64_t *)&unk_100975040);
      uint64_t v282 = (uint64_t)v279;
      uint64_t v283 = v461;
      sub_10070F174(v282, v461, _s15GuestModeUnlockV18InitialLockContextVMa);
      uint64_t v499 = v280;
      v500 = &off_1008D9B10;
      v284 = sub_100278AE4((uint64_t *)&v498);
      sub_10070F0FC(v283, (uint64_t)v284, _s15GuestModeUnlockV18InitialLockContextVMa);
      uint64_t v285 = v495;
      sub_10070F0FC((uint64_t)v497, v495, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
      v286 = (int *)v484;
      uint64_t v502 = v484;
      v503 = &off_1008D9B20;
      unint64_t v287 = sub_100278AE4((uint64_t *)&v501);
      uint64_t v288 = (uint64_t)v488;
      *(void *)&v488[v286[6]] = _swiftEmptyArrayStorage;
      *(void *)(v288 + v286[7]) = _swiftEmptyArrayStorage;
      uint64_t v289 = v499;
      id v290 = v500;
      NSURL v291 = sub_10026BB6C(&v498, v499);
      uint64_t v292 = (uint64_t *)(v288 + v286[5]);
      v292[3] = v289;
      v292[4] = *((void *)v290[1] + 1);
      v293 = sub_100278AE4(v292);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v289 - 8) + 16))(v293, v291, v289);
      sub_10070F174(v285, v288, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
      sub_10070F174(v288, (uint64_t)v287, _s15GuestModeUnlockV4FlowVMa);
      sub_10024D338((uint64_t)&v498);
      v158 = _s15GuestModeUnlockV18InitialLockContextVMa;
      uint64_t v159 = v283;
      goto LABEL_89;
    case 0xCLL:
      uint64_t v160 = v78;
      if ((*(unsigned char *)(v78 + v83) & 1) == 0) {
        goto LABEL_16;
      }
      goto LABEL_18;
    case 0xDLL:
      uint64_t v160 = v78;
      if (!*(unsigned char *)(v78 + v83))
      {
LABEL_18:
        uint64_t v174 = type metadata accessor for Date();
        NSString v175 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v174 - 8) + 56);
        v175(v74, 1, 1, v174);
        v175(&v74[v55[5]], 1, 1, v174);
        v175(&v74[v55[6]], 1, 1, v174);
        v175(&v74[v55[7]], 1, 1, v174);
        v175(&v74[v55[8]], 1, 1, v174);
        v175(&v74[v55[9]], 1, 1, v174);
        v175(&v74[v55[10]], 1, 1, v174);
        v175(&v74[v55[11]], 1, 1, v174);
        v175(&v74[v55[12]], 1, 1, v174);
        v74[v55[13]] = 0;
        v175(&v74[v55[14]], 1, 1, v174);
        v175(&v74[v55[15]], 1, 1, v174);
        v175(&v74[v55[16]], 1, 1, v174);
        v175(&v74[v55[17]], 1, 1, v174);
        v176 = &v74[v55[18]];
        *(_DWORD *)v176 = 0;
        v176[4] = 1;
        v74[v55[19]] = 2;
        id v177 = &v74[v55[20]];
        *(void *)id v177 = 0;
        *((void *)v177 + 1) = 0;
        uint64_t v178 = &v74[v55[21]];
        *(void *)uint64_t v178 = 0;
        *((void *)v178 + 1) = 0;
        uint64_t v179 = v487;
        sub_1003E75FC((uint64_t)v74, v487);
        uint64_t v180 = (int *)_s6UnpairV4FlowVMa(0);
        uint64_t v502 = (uint64_t)v180;
        v503 = &off_1008D9800;
        v181 = sub_100278AE4((uint64_t *)&v501);
        v182 = (uint64_t *)((char *)v181 + v180[5]);
        v182[3] = v486;
        v182[4] = (uint64_t)&off_1008D97E8;
        unint64_t v183 = sub_100278AE4(v182);
        sub_10070F0FC((uint64_t)v179, (uint64_t)v183, _s6UnpairV23InitialInitiatorContextVMa);
        sub_10070F0FC(v160, (uint64_t)v181, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
        *(uint64_t *)((char *)v181 + v180[6]) = (uint64_t)_swiftEmptyArrayStorage;
        *(uint64_t *)((char *)v181 + v180[7]) = (uint64_t)_swiftEmptyArrayStorage;
        unint64_t v184 = _s6UnpairV23InitialInitiatorContextVMa;
        goto LABEL_52;
      }
LABEL_16:
      uint64_t v161 = v483;
      char v162 = v485;
      unint64_t v163 = (char *)v485 + *(int *)(v483 + 20);
      uint64_t v164 = type metadata accessor for Date();
      v165 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v164 - 8) + 56);
      v165(v163, 1, 1, v164);
      v165(&v163[v55[5]], 1, 1, v164);
      v165(&v163[v55[6]], 1, 1, v164);
      v165(&v163[v55[7]], 1, 1, v164);
      v165(&v163[v55[8]], 1, 1, v164);
      v165(&v163[v55[9]], 1, 1, v164);
      v165(&v163[v55[10]], 1, 1, v164);
      v165(&v163[v55[11]], 1, 1, v164);
      v165(&v163[v55[12]], 1, 1, v164);
      v163[v55[13]] = 0;
      v165(&v163[v55[14]], 1, 1, v164);
      v165(&v163[v55[15]], 1, 1, v164);
      v165(&v163[v55[16]], 1, 1, v164);
      v165(&v163[v55[17]], 1, 1, v164);
      uint64_t v166 = &v163[v55[18]];
      *(_DWORD *)uint64_t v166 = 0;
      v166[4] = 1;
      v163[v55[19]] = 2;
      v167 = &v163[v55[20]];
      *(void *)v167 = 0;
      *((void *)v167 + 1) = 0;
      v168 = &v163[v55[21]];
      *(void *)v168 = 0;
      *((void *)v168 + 1) = 0;
      *char v162 = (uint64_t)_swiftEmptyArrayStorage;
      os_log_type_t v169 = (int *)_s6UnpairV4FlowVMa(0);
      uint64_t v502 = (uint64_t)v169;
      v503 = &off_1008D9800;
      v170 = sub_100278AE4((uint64_t *)&v501);
      uint64_t v171 = (uint64_t *)((char *)v170 + v169[5]);
      v171[3] = v161;
      v171[4] = (uint64_t)&off_1008D97D0;
      uint64_t v172 = sub_100278AE4(v171);
      sub_10070F0FC((uint64_t)v162, (uint64_t)v172, _s6UnpairV23InitialResponderContextVMa);
      sub_10070F0FC(v160, (uint64_t)v170, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
      *(uint64_t *)((char *)v170 + v169[6]) = (uint64_t)_swiftEmptyArrayStorage;
      *(uint64_t *)((char *)v170 + v169[7]) = (uint64_t)_swiftEmptyArrayStorage;
      unint64_t v173 = _s6UnpairV23InitialResponderContextVMa;
LABEL_78:
      v158 = v173;
      uint64_t v159 = (uint64_t)v162;
      goto LABEL_89;
    case 0xELL:
      uint64_t v207 = v78;
      uint64_t v208 = type metadata accessor for Date();
      unint64_t v209 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v208 - 8) + 56);
      if (v84)
      {
        v209(v58, 1, 1, v208);
        v209(&v58[v55[5]], 1, 1, v208);
        v209(&v58[v55[6]], 1, 1, v208);
        v209(&v58[v55[7]], 1, 1, v208);
        v209(&v58[v55[8]], 1, 1, v208);
        v209(&v58[v55[9]], 1, 1, v208);
        v209(&v58[v55[10]], 1, 1, v208);
        v209(&v58[v55[11]], 1, 1, v208);
        v209(&v58[v55[12]], 1, 1, v208);
        v58[v55[13]] = 0;
        v209(&v58[v55[14]], 1, 1, v208);
        v209(&v58[v55[15]], 1, 1, v208);
        v209(&v58[v55[16]], 1, 1, v208);
        v209(&v58[v55[17]], 1, 1, v208);
        unint64_t v210 = &v58[v55[18]];
        *(_DWORD *)unint64_t v210 = 0;
        v210[4] = 1;
        v58[v55[19]] = 2;
        v211 = &v58[v55[20]];
        *(void *)v211 = 0;
        *((void *)v211 + 1) = 0;
        uint64_t v212 = &v58[v55[21]];
        *(void *)uint64_t v212 = 0;
        *((void *)v212 + 1) = 0;
        uint64_t v213 = (uint64_t)v471;
        void *v471 = _swiftEmptyArrayStorage;
        if (qword_10096A0E8 != -1) {
          swift_once();
        }
        uint64_t v214 = type metadata accessor for Logger();
        sub_10000B47C(v214, (uint64_t)qword_10097DAD8);
        uint64_t v215 = Logger.logObject.getter();
        os_log_type_t v216 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v215, v216))
        {
          v217 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v217 = 0;
          _os_log_impl((void *)&_mh_execute_header, v215, v216, "Start key check flow", v217, 2u);
          swift_slowDealloc();
        }

        uint64_t v218 = v468;
        sub_10070F174((uint64_t)v58, v213 + *(int *)(v468 + 20), (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
        v219 = (int *)_s8KeyCheckV4FlowVMa(0);
        uint64_t v502 = (uint64_t)v219;
        v503 = &off_1008E4878;
        int v220 = sub_100278AE4((uint64_t *)&v501);
        os_log_t v221 = (uint64_t *)((char *)v220 + v219[5]);
        v221[3] = v218;
        v221[4] = (uint64_t)&off_1008E4860;
        v222 = sub_100278AE4(v221);
        sub_10070F0FC(v213, (uint64_t)v222, _s8KeyCheckV17InitialKeyContextVMa);
        sub_10070F0FC(v207, (uint64_t)v220, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
        *(uint64_t *)((char *)v220 + v219[6]) = (uint64_t)_swiftEmptyArrayStorage;
        *(uint64_t *)((char *)v220 + v219[7]) = (uint64_t)_swiftEmptyArrayStorage;
        v158 = _s8KeyCheckV17InitialKeyContextVMa;
        uint64_t v159 = v213;
      }
      else
      {
        v209(v74, 1, 1, v208);
        v209(&v74[v55[5]], 1, 1, v208);
        v209(&v74[v55[6]], 1, 1, v208);
        v209(&v74[v55[7]], 1, 1, v208);
        v209(&v74[v55[8]], 1, 1, v208);
        v209(&v74[v55[9]], 1, 1, v208);
        v209(&v74[v55[10]], 1, 1, v208);
        v209(&v74[v55[11]], 1, 1, v208);
        v209(&v74[v55[12]], 1, 1, v208);
        v74[v55[13]] = 0;
        v209(&v74[v55[14]], 1, 1, v208);
        v209(&v74[v55[15]], 1, 1, v208);
        v209(&v74[v55[16]], 1, 1, v208);
        v209(&v74[v55[17]], 1, 1, v208);
        v311 = &v74[v55[18]];
        *(_DWORD *)v311 = 0;
        v311[4] = 1;
        v74[v55[19]] = 2;
        v312 = &v74[v55[20]];
        *(void *)v312 = 0;
        *((void *)v312 + 1) = 0;
        v313 = &v74[v55[21]];
        *(void *)v313 = 0;
        *((void *)v313 + 1) = 0;
        v314 = (void *)(v494 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager);
        swift_beginAccess();
        uint64_t v315 = *sub_10026BB6C(v314, v314[3])
             + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
        swift_beginAccess();
        uint64_t v316 = v315;
        uint64_t v317 = v482;
        sub_10024A330(v316, v482, (uint64_t *)&unk_100975040);
        uint64_t v179 = v465;
        sub_100680400((uint64_t)v74, v317, v465);
        v318 = (int *)_s8KeyCheckV4FlowVMa(0);
        uint64_t v502 = (uint64_t)v318;
        v503 = &off_1008E4878;
        v319 = sub_100278AE4((uint64_t *)&v501);
        v320 = (uint64_t *)((char *)v319 + v318[5]);
        v320[3] = v464;
        v320[4] = (uint64_t)&off_1008E4848;
        v321 = sub_100278AE4(v320);
        sub_10070F0FC((uint64_t)v179, (uint64_t)v321, _s8KeyCheckV18InitialLockContextVMa);
        sub_10070F0FC(v207, (uint64_t)v319, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
        *(uint64_t *)((char *)v319 + v318[6]) = (uint64_t)_swiftEmptyArrayStorage;
        *(uint64_t *)((char *)v319 + v318[7]) = (uint64_t)_swiftEmptyArrayStorage;
        unint64_t v184 = _s8KeyCheckV18InitialLockContextVMa;
LABEL_52:
        v158 = v184;
        uint64_t v159 = (uint64_t)v179;
      }
      goto LABEL_89;
    default:
      goto LABEL_101;
  }
}

uint64_t sub_1006D4404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_10000A844((uint64_t *)&unk_100974F20);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  id v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    uint64_t v17 = (uint64_t *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID);
    swift_beginAccess();
    uint64_t v18 = *v17;
    if (*(void *)(v18 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1005838BC(a1, a2);
      if (v20)
      {
        uint64_t v21 = v19;
        uint64_t v22 = *(void *)(v18 + 56);
        uint64_t v23 = type metadata accessor for RegistrationState(0);
        uint64_t v24 = *(void *)(v23 - 8);
        sub_10070F0FC(v22 + *(void *)(v24 + 72) * v21, (uint64_t)v9, type metadata accessor for RegistrationState);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v9, 0, 1, v23);
      }
      else
      {
        uint64_t v23 = type metadata accessor for RegistrationState(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v9, 1, 1, v23);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v23 = type metadata accessor for RegistrationState(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v9, 1, 1, v23);
    }
    type metadata accessor for RegistrationState(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v9, 1, v23))
    {
      sub_10000A7E8((uint64_t)v9, (uint64_t *)&unk_100974F20);
      swift_endAccess();
      uint64_t v25 = type metadata accessor for Date();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a3, 1, 1, v25);
    }
    else
    {
      sub_10024A330((uint64_t)v9, a3, (uint64_t *)&unk_100975040);
      sub_10000A7E8((uint64_t)v9, (uint64_t *)&unk_100974F20);
      return swift_endAccess();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006D47B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_100278C8C(a1, (uint64_t)v14);
  uint64_t v3 = type metadata accessor for SDAuthenticationSessionExecutor();
  uint64_t v4 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v4 + 152) = 0x402E000000000000;
  *(void *)(v4 + 160) = 0;
  uint64_t v5 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_responseTimerContinuation;
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_10096BA90);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(void *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_timer) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_currentMessage) = 0;
  sub_1002AF688(v14, v4 + 112);
  sub_100278C8C(v4 + 112, (uint64_t)v11);
  uint64_t v7 = v12;
  uint64_t v8 = v13;
  sub_10026BB6C(v11, v12);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v8 + 72))(v10, v7, v8);
  sub_1002AF688(v10, v4 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext);
  uint64_t result = sub_10024D338((uint64_t)v11);
  a2[3] = v3;
  a2[4] = (uint64_t)&off_1008DDF60;
  *a2 = v4;
  return result;
}

id sub_1006D4904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(char *, uint64_t)@<X4>, void *a6@<X5>, void *a7@<X8>)
{
  uint64_t v14 = type metadata accessor for UUID();
  __chkstk_darwin(v14);
  uint64_t v16 = &v22[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(char *, uint64_t))(v17 + 16))(v16, a1);
  sub_100278C8C(a2, (uint64_t)v22);
  uint64_t v18 = (objc_class *)type metadata accessor for SDAuthenticationPairingLockSession();
  objc_allocWithZone(v18);
  id v19 = a6;
  swift_bridgeObjectRetain();
  id result = sub_10035B8F8(v19, v16, (uint64_t)v22, a3, a4, a5);
  a7[3] = v18;
  a7[4] = &off_1008D7BA8;
  *a7 = result;
  return result;
}

void sub_1006D4A4C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = type metadata accessor for UUID();
  __chkstk_darwin(v10);
  uint64_t v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, a1);
  sub_100278C8C(a2, (uint64_t)v18);
  uint64_t v14 = (objc_class *)type metadata accessor for SDAuthenticationPairingKeySession();
  objc_allocWithZone(v14);
  id v15 = a4;
  id v16 = sub_1005C9E90(v15, v12, (uint64_t)v18, a3);

  a5[3] = v14;
  a5[4] = &off_1008E0B60;
  *a5 = v16;
}

uint64_t sub_1006D4B78@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X8>)
{
  uint64_t v12 = type metadata accessor for UUID();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v15 + 16))(v14, a3);
  id v16 = (objc_class *)type metadata accessor for SDAuthenticationLockSession(0);
  objc_allocWithZone(v16);
  id v17 = a5;
  sub_10025ADCC(a1, a2);
  id v18 = sub_1004EC7B4((uint64_t)v17, a1, a2, (uint64_t)v14, a4);
  uint64_t result = sub_100250CC4(a1, a2);
  a6[3] = v16;
  a6[4] = &off_1008DD7F0;
  *a6 = v18;
  return result;
}

uint64_t sub_1006D4CBC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X8>)
{
  id v25 = a5;
  unint64_t v26 = a2;
  uint64_t v27 = a4;
  uint64_t v28 = a6;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v25 - v13;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v15((char *)&v25 - v13, a3, v8);
  id v16 = (objc_class *)type metadata accessor for SDAuthenticationKeySession();
  id v17 = objc_allocWithZone(v16);
  id v18 = &v17[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_lastUnlockDate];
  uint64_t v19 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *(void *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_aksAuthSession] = 0;
  *(_OWORD *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken] = xmmword_100770AE0;
  v17[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_isConfirmationSent] = 0;
  v15(v12, (uint64_t)v14, v8);
  id v20 = v25;
  unint64_t v21 = v26;
  sub_10025ADCC(a1, v26);
  id v22 = sub_1002BC7FC((uint64_t)v20, a1, v21, v12, v27);
  sub_100250CC4(a1, v21);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  uint64_t v24 = v28;
  v28[3] = v16;
  v24[4] = &off_1008DB5E0;
  *uint64_t v24 = v22;
  return result;
}

uint64_t sub_1006D4EE4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  id v28 = a4;
  uint64_t v29 = a1;
  unint64_t v30 = a2;
  uint64_t v31 = a5;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v28 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v28 - v14;
  id v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16((char *)&v28 - v14, a3, v6);
  v16(v13, (uint64_t)v15, v6);
  id v17 = (objc_class *)type metadata accessor for SDAuthenticationKeySession();
  id v18 = objc_allocWithZone(v17);
  uint64_t v19 = &v18[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_lastUnlockDate];
  uint64_t v20 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  *(void *)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_aksAuthSession] = 0;
  *(_OWORD *)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken] = xmmword_100770AE0;
  v18[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_isConfirmationSent] = 0;
  v16(v10, (uint64_t)v13, v6);
  id v21 = v28;
  uint64_t v23 = v29;
  unint64_t v22 = v30;
  sub_10025ADCC(v29, v30);
  id v24 = sub_1002BC7FC((uint64_t)v21, v23, v22, v10, 0);
  sub_100250CC4(v23, v22);
  id v25 = *(void (**)(char *, uint64_t))(v7 + 8);
  v25(v13, v6);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v15, v6);
  uint64_t v27 = v31;
  v31[3] = v17;
  v27[4] = &off_1008DB5E0;
  *uint64_t v27 = v24;
  return result;
}

id sub_1006D5154()
{
  return sub_1006D516C((SEL *)&selRef_wirelessEnabled);
}

id sub_1006D5160()
{
  return sub_1006D516C((SEL *)&selRef_bluetoothEnabled);
}

id sub_1006D516C(SEL *a1)
{
  id result = [self sharedMonitor];
  if (result)
  {
    uint64_t v3 = result;
    id v4 = [result *a1];

    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1006D51CC(uint64_t a1)
{
  id result = [self sharedTransport];
  if (result)
  {
    uint64_t v3 = result;
    id v4 = [result autoUnlockEligibleDevicesWithCloudPairing:1 deviceType:a1];

    if (v4)
    {
      sub_10000B740(0, &qword_10096B3E8);
      sub_100361188();
      uint64_t v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      return (id)v5;
    }
    else
    {
      return &_swiftEmptySetSingleton;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1006D5288(uint64_t a1@<X8>)
{
  id v2 = [self sharedTransport];
  if (v2)
  {
    uint64_t v3 = v2;
    NSString v4 = String._bridgeToObjectiveC()();
    id v5 = [v3 idsDeviceForUniqueID:v4];

    if (v5)
    {
      *(void *)(a1 + 24) = sub_10000B740(0, &qword_10097BB60);
      *(void *)(a1 + 32) = &off_1008E2510;
      *(void *)a1 = v5;
    }
    else
    {
      *(void *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1006D5358(char *a1)
{
  void (*v13)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  void v35[2];
  uint64_t v36;
  uint64_t v37;
  void v38[5];

  uint64_t v2 = 0xD000000000000015;
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006D58F4();
  sub_1006D5B08();
  Date.init()();
  sub_1006D5DAC((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1006D6720(1);
  id v7 = [self standardUserDefaults];
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 stringForKey:v8];

  if (v9)
  {
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    uint64_t v13 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsDeviceForUniqueID];
    swift_retain();
    v13(v38, v10, v12);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v14 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lastMacThatDidMacUnlockPhone];
    swift_beginAccess();
    sub_10026B410((uint64_t)v38, v14, &qword_10097BB50);
    swift_endAccess();
  }
  uint64_t v15 = &a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lastMacThatDidMacUnlockPhone];
  swift_beginAccess();
  sub_10024A330((uint64_t)v15, (uint64_t)v38, &qword_10097BB50);
  id v16 = v38[3];
  sub_10000A7E8((uint64_t)v38, &qword_10097BB50);
  if (v16)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    id v17 = type metadata accessor for Logger();
    sub_10000B47C(v17, (uint64_t)qword_10097F520);
    id v18 = a1;
    uint64_t v19 = Logger.logObject.getter();
    uint64_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      id v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v37 = v36;
      *(_DWORD *)id v21 = 136315138;
      unint64_t v22 = *((void *)v15 + 3);
      if (!v22) {
        goto LABEL_11;
      }
      uint64_t v23 = *((void *)v15 + 4);
      id v24 = sub_10026BB6C(v15, *((void *)v15 + 3));
      v35[1] = v35;
      id v25 = *(void *)(v22 - 8);
      __chkstk_darwin(v24);
      uint64_t v27 = (char *)v35 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v25 + 16))(v27);
      id v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
      unint64_t v30 = v29;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v22);
      uint64_t v2 = 0xD000000000000015;
      if (v30)
      {
        uint64_t v2 = v28;
      }
      else
      {
LABEL_11:
        v38[0] = 0;
        v38[1] = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        unint64_t v30 = 0x80000001007B7770;
      }
      v38[0] = sub_100254634(v2, v30, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Loaded last mac that unlocked phone %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
  if (*(void *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationManager])
  {
    swift_retain();
    sub_100331AF4();
    swift_release();
  }
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for Logger();
  sub_10000B47C(v31, (uint64_t)qword_10097F520);
  uint64_t v32 = Logger.logObject.getter();
  uint64_t v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v34 = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "SDAuthenticationManager started", v34, 2u);
    swift_slowDealloc();
  }
}

void sub_1006D58F4()
{
  sub_1006E5BC0();
  uint64_t v1 = self;
  id v2 = [v1 defaultCenter];
  if (qword_100969C00 != -1) {
    swift_once();
  }
  [v2 addObserver:v0 selector:"handleStateChanged" name:qword_100994478 object:0];

  id v3 = [v1 defaultCenter];
  if (qword_100969C10 != -1) {
    swift_once();
  }
  [v3 addObserver:v0 selector:"handleStateChanged" name:qword_100994488 object:0];

  id v4 = [v1 defaultCenter];
  if (qword_100969C18 != -1) {
    swift_once();
  }
  [v4 addObserver:v0 selector:"handleStateChanged" name:qword_100994490 object:0];

  id v5 = [v1 defaultCenter];
  id v6 = v5;
  if (qword_100969C20 != -1)
  {
    swift_once();
    id v5 = v6;
  }
  [v5 addObserver:v0 selector:"handleStateChanged" name:qword_100994498 object:0];
}

void sub_1006D5B08()
{
  uint64_t v1 = v0;
  int out_token = 0;
  sub_10000B740(0, (unint64_t *)&qword_10096A1A0);
  id v2 = static OS_dispatch_queue.main.getter();
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = sub_10070F0E4;
  uint64_t v16 = v3;
  uint64_t v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_1006CBFC8;
  uint64_t v14 = &unk_1008E6348;
  id v4 = _Block_copy(&v11);
  swift_release();
  notify_register_dispatch("postUnlockKeyRequestNotification", &out_token, v2, v4);
  _Block_release(v4);

  id v5 = static OS_dispatch_queue.main.getter();
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = sub_10070F0EC;
  uint64_t v16 = v6;
  uint64_t v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_1006CBFC8;
  uint64_t v14 = &unk_1008E6370;
  id v7 = _Block_copy(&v11);
  swift_release();
  notify_register_dispatch("triggerStateChange", &out_token, v5, v7);
  _Block_release(v7);

  NSString v8 = *(NSObject **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = sub_10070F0F4;
  uint64_t v16 = v9;
  uint64_t v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_1006CBFC8;
  uint64_t v14 = &unk_1008E6398;
  uint64_t v10 = _Block_copy(&v11);
  swift_release();
  notify_register_dispatch("com.apple.sharingd.register", &out_token, v8, v10);
  _Block_release(v10);
}

void sub_1006D5DAC(uint64_t a1)
{
  uint64_t v51 = a1;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v54 = *(void *)(v2 - 8);
  uint64_t v55 = v2;
  __chkstk_darwin(v2);
  uint64_t v50 = v3;
  uint64_t v53 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v4 - 8);
  uint64_t v52 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A844(&qword_10096FC30);
  uint64_t v47 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  NSString v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_10000A844(&qword_10096FC38);
  __chkstk_darwin(v48);
  uint64_t v49 = sub_10000A844(&qword_10097F800);
  __chkstk_darwin(v49);
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = v1;
  uint64_t v14 = *(void **)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *uint64_t v12 = v14;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  id v15 = v14;
  unsigned int v16 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if ((v16 & 1) == 0)
  {
    __break(1u);
LABEL_30:
    swift_once();
    goto LABEL_9;
  }
  unsigned int v17 = SFDeviceClassCodeGet();
  if (v17 == 1)
  {
    id v18 = v1;
    uint64_t v19 = (uint64_t)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiatorDeviceStream];
    swift_beginAccess();
    if (*(void *)(v19 + 24))
    {
      sub_100278C8C(v19, (uint64_t)&v59);
      if (*((void *)&v60 + 1)) {
        goto LABEL_5;
      }
    }
    else
    {
      long long v35 = *(_OWORD *)(v19 + 16);
      long long v59 = *(_OWORD *)v19;
      long long v60 = v35;
      uint64_t v61 = *(void *)(v19 + 32);
      if (*((void *)&v35 + 1))
      {
LABEL_5:
        sub_10024D338((uint64_t)&v59);
        if (*(void *)(v19 + 24)) {
          goto LABEL_6;
        }
        goto LABEL_22;
      }
    }
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    sub_10000B47C(v36, (uint64_t)qword_10097F520);
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "BioArmInitiator: Creating device stream", v39, 2u);
      id v18 = v13;
      swift_slowDealloc();
    }

    *((void *)&v60 + 1) = sub_10000A844(&qword_10097F808);
    uint64_t v61 = sub_1002AE308(&qword_10097F810, &qword_10097F808);
    sub_100278AE4((uint64_t *)&v59);
    sub_10000B740(0, &qword_10096FC48);
    (*(void (**)(char *, void, uint64_t))(v47 + 104))(v8, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v6);
    swift_retain();
    AsyncStream.init(_:bufferingPolicy:_:)();
    sub_1002AE308(&qword_10097F818, &qword_10096FC38);
    AsyncCompactMapSequence.init(_:transform:)();
    sub_10000A844(&qword_10096FBD8);
    sub_1002AE308(&qword_10097F820, &qword_10097F800);
    AsyncCompactMapSequence.init(_:transform:)();
    swift_release();
    swift_beginAccess();
    uint64_t v40 = *((void *)&v60 + 1);
    if (*(void *)(v19 + 24))
    {
      sub_10024D338(v19);
      if (v40)
      {
LABEL_18:
        sub_1002AF688(&v59, v19);
        goto LABEL_21;
      }
    }
    else if (*((void *)&v60 + 1))
    {
      goto LABEL_18;
    }
    long long v41 = v60;
    *(_OWORD *)uint64_t v19 = v59;
    *(_OWORD *)(v19 + 16) = v41;
    *(void *)(v19 + 32) = v61;
LABEL_21:
    swift_endAccess();
    if (*(void *)(v19 + 24))
    {
LABEL_6:
      sub_100278C8C(v19, (uint64_t)&v56);
      if (*((void *)&v57 + 1))
      {
LABEL_7:
        sub_1002AF688(&v56, (uint64_t)&v59);
        uint64_t v20 = type metadata accessor for TaskPriority();
        uint64_t v21 = (uint64_t)v52;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v52, 1, 1, v20);
        sub_100278C8C((uint64_t)&v59, (uint64_t)&v56);
        uint64_t v23 = v53;
        uint64_t v22 = v54;
        uint64_t v24 = v55;
        (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v53, v51, v55);
        unint64_t v25 = (*(unsigned __int8 *)(v22 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
        unint64_t v26 = (v50 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = 0;
        *(void *)(v27 + 24) = 0;
        sub_1002AF688(&v56, v27 + 32);
        (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v27 + v25, v23, v24);
        *(void *)(v27 + v26) = v18;
        id v28 = v18;
        sub_10028CFA8(v21, (uint64_t)&unk_10097F830, v27);
        swift_release();
        sub_10024D338((uint64_t)&v59);
        return;
      }
      goto LABEL_23;
    }
LABEL_22:
    long long v42 = *(_OWORD *)(v19 + 16);
    long long v56 = *(_OWORD *)v19;
    long long v57 = v42;
    uint64_t v58 = *(void *)(v19 + 32);
    if (*((void *)&v42 + 1)) {
      goto LABEL_7;
    }
LABEL_23:
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for Logger();
    sub_10000B47C(v43, (uint64_t)qword_10097F520);
    unint64_t v30 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v30, v44)) {
      goto LABEL_28;
    }
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v45 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v44, "BioArmInitiator: device stream is nil. This shouldn't happen", v45, 2u);
    goto LABEL_27;
  }
  unsigned int v16 = v17;
  if (qword_10096A190 != -1) {
    goto LABEL_30;
  }
LABEL_9:
  uint64_t v29 = type metadata accessor for Logger();
  sub_10000B47C(v29, (uint64_t)qword_10097F520);
  unint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v59 = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136315138;
    sub_10070EAF0(v16);
    uint64_t v33 = String.init(cString:)();
    *(void *)&long long v56 = sub_100254634(v33, v34, (uint64_t *)&v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "BioArmInitiator: Not iPhone. Got %s instead", v32, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
LABEL_27:
    swift_slowDealloc();
  }
LABEL_28:
}

void sub_1006D6720(int a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v100 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v6 - 8);
  NSString v8 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!SFDeviceIsRealityDevice()) {
    return;
  }
  uint64_t v98 = v3;
  unsigned __int8 v104 = 0;
  uint64_t v12 = self;
  id v13 = [v12 sharedMonitor];
  if (!v13)
  {
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  uint64_t v14 = v13;
  id v15 = (void (**)(char *, uint64_t))[v13 defaultWiFiDevice];

  uint64_t v91 = v11;
  uint64_t v92 = v1;
  uint64_t v99 = v8;
  uint64_t v89 = v4;
  LODWORD(v97) = a1;
  if (v15)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v103, 0, sizeof(v103));
  }
  sub_10000A7E8((uint64_t)v103, (uint64_t *)&unk_10096AC20);
  unsigned int v16 = self;
  id v17 = [v16 standardUserDefaults];
  NSString v18 = String._bridgeToObjectiveC()();
  unsigned int v19 = [v17 BOOLForKey:v18];

  sub_10070EF38(4);
  int v21 = v20;
  id v22 = [v16 standardUserDefaults];
  NSString v23 = String._bridgeToObjectiveC()();
  unsigned int v24 = [v22 BOOLForKey:v23];

  if (v24)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_10000B47C(v25, (uint64_t)qword_10097F520);
    unint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      id v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "pretendClassDUntilNextBioArm is set", v28, 2u);
      swift_slowDealloc();
    }
  }
  int v29 = sub_10001DA8C();
  id v30 = [v12 sharedMonitor];
  if (!v30) {
    goto LABEL_63;
  }
  os_log_type_t v31 = v30;
  unsigned __int8 v32 = [v30 screenOn];

  id v33 = [v12 sharedMonitor];
  if (!v33)
  {
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    return;
  }
  uint64_t v40 = v33;
  LODWORD(v34) = v21 | v19;
  LODWORD(v35) = v29 ^ 1 | v24;
  LOBYTE(v36) = v32 | v97;
  unsigned __int8 v37 = [v33 screenOn];

  uint64_t v38 = v92;
  uint64_t v39 = (unsigned __int8 *)(v92 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics);
  swift_beginAccess();
  LOBYTE(v40) = 0;
  id v90 = v39;
  *uint64_t v39 = v37;
  if (v15)
  {
    long long v41 = &qword_10096A000;
    if (((v34 ^ 1) & 1) == 0 && ((v35 ^ 1) & 1) == 0)
    {
      unsigned __int8 v104 = 1;
      LOBYTE(v40) = v36;
    }
  }
  else
  {
    long long v41 = &qword_10096A000;
  }
  if (v41[50] != -1) {
    goto LABEL_51;
  }
  while (1)
  {
    uint64_t v42 = type metadata accessor for Logger();
    sub_10000B47C(v42, (uint64_t)qword_10097F520);
    int v43 = v104;
    os_log_type_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 67110400;
      int v102 = v43;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v46 + 8) = 1024;
      int v102 = v15 != 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v46 + 14) = 1024;
      int v102 = v34 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v46 + 20) = 1024;
      int v102 = (int)v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v46 + 26) = 1024;
      int v102 = v97 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v46 + 32) = 1024;
      int v102 = v36 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Advertising for Unlock Class C: %{BOOL}d (wifiDeviceLoaded: %{BOOL}d, enabled: %{BOOL}d, inClassD: %{BOOL}d, ignoreScreenState: %{BOOL}d, screen on: %{BOOL}d", (uint8_t *)v46, 0x26u);
      uint64_t v38 = v92;
      swift_slowDealloc();
    }

    swift_beginAccess();
    if (v104 == 1)
    {
      uint64_t v47 = (uint64_t)v91;
      Date.init()();
      uint64_t v48 = type metadata accessor for Date();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
      uint64_t v49 = v90;
      swift_beginAccess();
      uint64_t v50 = type metadata accessor for StateMetrics(0);
      sub_10026B410(v47, (uint64_t)&v49[*(int *)(v50 + 28)], (uint64_t *)&unk_100975040);
      swift_endAccess();
      uint64_t v51 = 8;
    }
    else
    {
      uint64_t v51 = 0;
    }
    long long v35 = v99;
    id v52 = [self sharedNearbyAgent];
    [v52 unlockUpdateAdvertising:v51 mask:8];

    if ((v40 & 1) == 0) {
      break;
    }
    uint64_t v53 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_nearbyActionAdvertiser;
    uint64_t v54 = *(void *)(v38 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_nearbyActionAdvertiser);
    if (v54)
    {
      if (*(unsigned char *)(v54 + 16) == 1) {
        break;
      }
    }
    id v97 = self;
    id v55 = [v97 sharedTransport];
    if (!v55) {
      goto LABEL_65;
    }
    long long v56 = v55;
    id v57 = [v55 enabledAutoUnlockDevices];

    if (!v57) {
      goto LABEL_66;
    }
    sub_10000B740(0, &qword_10096B3E8);
    sub_100361188();
    uint64_t v58 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v34 = (unint64_t)sub_100254E44(v58);
    swift_bridgeObjectRelease();
    long long v59 = *(void **)(v38 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
    if ((v34 & 0x8000000000000000) != 0 || (v34 & 0x4000000000000000) != 0)
    {
      id v78 = v59;
      swift_retain();
      uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
      if (!v36)
      {
LABEL_53:
        swift_release();
        unint64_t v74 = _swiftEmptyArrayStorage;
LABEL_54:
        type metadata accessor for SDAuthenticationNearbyActionAdvertiser();
        uint64_t v79 = swift_allocObject();
        *(void *)(v79 + 40) = 0;
        id v80 = [objc_allocWithZone((Class)SFService) init];
        *(void *)(v79 + 24) = v80;
        id v81 = v80;
        [v81 setDispatchQueue:v59];

        *(void *)(v79 + 32) = v74;
        *(unsigned char *)(v79 + 16) = 0;
        uint64_t v82 = v92;
        *(void *)(v92 + v53) = v79;
        swift_release();
        if (*(void *)(v82 + v53))
        {
          swift_retain();
          sub_100327774();
          swift_release();
        }
        uint64_t v83 = (uint64_t)v91;
        Date.init()();
        uint64_t v84 = type metadata accessor for Date();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v83, 0, 1, v84);
        uint64_t v85 = v90;
        swift_beginAccess();
        uint64_t v86 = type metadata accessor for StateMetrics(0);
        sub_10026B410(v83, (uint64_t)&v85[*(int *)(v86 + 32)], (uint64_t *)&unk_100975040);
        swift_endAccess();
        return;
      }
    }
    else
    {
      uint64_t v36 = *(void *)(v34 + 16);
      id v60 = v59;
      if (!v36) {
        goto LABEL_53;
      }
    }
    uint64_t v87 = v59;
    uint64_t v88 = v53;
    long long v101 = _swiftEmptyArrayStorage;
    sub_100255510(0, v36 & ~(v36 >> 63), 0);
    if (v36 < 0)
    {
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      (*v95)(v35, 1, 1, v98);
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    uint64_t v38 = 0;
    unint64_t v96 = v34 & 0xC000000000000001;
    uint64_t v94 = (void (**)(char *, char *, uint64_t))(v89 + 32);
    uint64_t v95 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v89 + 56);
    int v93 = (unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48);
    id v15 = (void (**)(char *, uint64_t))(v89 + 8);
    while (v36 != v38)
    {
      if (v96) {
        id v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v61 = *(id *)(v34 + 8 * v38 + 32);
      }
      uint64_t v62 = v61;
      id v63 = [v97 sharedTransport];
      if (!v63) {
        goto LABEL_59;
      }
      uint64_t v64 = v63;
      uint64_t v65 = (void *)v34;
      NSString v66 = [v62 uniqueID];
      if (v66)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        NSString v66 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      id v67 = [v64 bluetoothIDForIDSID:v66];

      if (!v67) {
        goto LABEL_60;
      }
      uint64_t v68 = v100;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v69 = v68;
      uint64_t v70 = v98;
      (*v94)(v35, v69, v98);
      (*v95)(v35, 0, 1, v70);
      if ((*v93)(v35, 1, v70) == 1) {
        goto LABEL_61;
      }
      uint64_t v71 = UUID.uuidString.getter();
      uint64_t v73 = v72;
      (*v15)(v35, v70);

      unint64_t v74 = v101;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100255510(0, v74[2] + 1, 1);
        unint64_t v74 = v101;
      }
      unint64_t v76 = v74[2];
      unint64_t v75 = v74[3];
      uint64_t v40 = (void *)(v76 + 1);
      if (v76 >= v75 >> 1)
      {
        sub_100255510(v75 > 1, v76 + 1, 1);
        unint64_t v74 = v101;
      }
      ++v38;
      v74[2] = v40;
      id v77 = &v74[2 * v76];
      v77[4] = v71;
      v77[5] = v73;
      long long v35 = v99;
      unint64_t v34 = (unint64_t)v65;
      if (v36 == v38)
      {
        swift_release();
        uint64_t v53 = v88;
        long long v59 = v87;
        goto LABEL_54;
      }
    }
    __break(1u);
LABEL_51:
    swift_once();
  }
}

uint64_t sub_1006D72DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SFPlatform();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  NSString v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static SFPlatform.iOS.getter();
  char v9 = static SFPlatform.isPlatform(_:)();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v6 + 8);
  v10(v8, v5);
  if ((v9 & 1) != 0
    || (static SFPlatform.visionOS.getter(),
        char v11 = static SFPlatform.isPlatform(_:)(),
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v10)(v8, v5),
        (v11 & 1) != 0))
  {
    if (qword_100969D50 != -1) {
      swift_once();
    }
    sub_1003B4B90();
    uint64_t v13 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
    uint64_t v14 = (void *)swift_allocObject();
    long long v14[2] = 0;
    v14[3] = 0;
    v14[4] = v1;
    id v15 = v1;
    sub_10028CFA8((uint64_t)v4, (uint64_t)&unk_10097FAA8, (uint64_t)v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_1006D74F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_1006D7518, 0, 0);
}

uint64_t sub_1006D7518()
{
  uint64_t v1 = sub_1006CE494();
  *(void *)(v0 + 24) = v1;
  return _swift_task_switch(sub_10064426C, v1, 0);
}

uint64_t sub_1006D75CC(uint64_t a1)
{
  *(void *)(v2 + 200) = a1;
  *(void *)(v2 + 208) = v1;
  return _swift_task_switch(sub_1006D75EC, 0, 0);
}

uint64_t sub_1006D75EC()
{
  uint64_t v143 = v0;
  uint64_t v2 = v0;
  uint64_t v3 = (uint64_t)(v0 + 25);
  uint64_t v4 = sub_100508E74(v0[25]);
  v0[27] = v4;
  if ((unint64_t)(v4 - 5) <= 3)
  {
    type metadata accessor for SDAuthenticationStatusMonitor();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[28] = (uint64_t)v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1006D89D4;
    return sub_10032D8E4();
  }
  if (qword_10096A190 != -1) {
    goto LABEL_163;
  }
LABEL_6:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000B47C(v7, (uint64_t)qword_10097F520);
  NSString v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  NSString v131 = v2;
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    v142[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v11 = sub_10050938C();
    v2[24] = sub_100254634(v11, v12, v142);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Asked to list all eligible devices for: %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  unint64_t v13 = v2[27];
  if (v13 - 3 < 0xC)
  {
    Swift::UInt8 v14 = SFDeviceClassCodeGet();
    Swift::Int v15 = sub_1005095A0(v13);
    BOOL v16 = sub_10057C25C(8u, v15);
    swift_bridgeObjectRelease();
    if (v16)
    {
      if (!SFDeviceIsRealityDevice())
      {
LABEL_11:
        int64_t v17 = sub_1005095C4(v2[27]);
LABEL_16:
        int64_t v25 = v17;
        uint64_t v26 = v2[27];
        if ((unint64_t)(v26 - 10) > 4)
        {
          uint64_t v125 = (void *)(v3 - 96);
          Swift::UInt8 v38 = SFDeviceClassCodeGet();
          Swift::Int v39 = sub_1005095A0(v26);
          LOBYTE(v26) = v39;
          BOOL v40 = sub_10057C25C(8u, v39);
          swift_bridgeObjectRelease();
          int64_t v127 = v25;
          if (v40)
          {
            if (!SFDeviceIsRealityDevice())
            {
LABEL_39:
              float v41 = 15.0;
              float v1 = 18.2;
              switch(v2[27])
              {
                case 5:
                case 6:
                  goto LABEL_56;
                case 7:
                case 8:
                  float v41 = 18.0;
                  goto LABEL_56;
                case 9:
                  goto LABEL_49;
                default:
                  float v41 = 0.0;
                  goto LABEL_56;
              }
            }
          }
          else
          {
            Swift::Int v42 = sub_1005095A0(v2[27]);
            LOBYTE(v26) = v42;
            BOOL v43 = sub_10057C25C(v38, v42);
            swift_bridgeObjectRelease();
            if (!v43) {
              goto LABEL_39;
            }
          }
          float v41 = 18.0;
          float v1 = 2.2;
          switch(v2[27])
          {
            case 3:
            case 4:
              float v41 = 17.1;
              goto LABEL_56;
            case 5:
            case 6:
            case 8:
              goto LABEL_56;
            case 7:
              float v41 = 15.0;
LABEL_56:
              *uint64_t v125 = _swiftEmptyArrayStorage;
              uint64_t v47 = (char *)&_swiftEmptySetSingleton;
              float v1 = v41;
              goto LABEL_57;
            case 9:
LABEL_49:
              *uint64_t v125 = _swiftEmptyArrayStorage;
              char v46 = sub_100611C18(3u);
              if (v46 == 2)
              {
                uint64_t v47 = (char *)&_swiftEmptySetSingleton;
                goto LABEL_57;
              }
              LOBYTE(v26) = v46 & 1;
              if (qword_100969D50 == -1) {
                goto LABEL_53;
              }
              goto LABEL_167;
            default:
              *uint64_t v125 = _swiftEmptyArrayStorage;
              uint64_t v47 = (char *)&_swiftEmptySetSingleton;
              float v1 = 0.0;
              goto LABEL_57;
          }
        }
        uint64_t v27 = 0;
        uint64_t v26 = v17 + 56;
        uint64_t v28 = *(void *)(v17 + 56);
        v142[0] = (uint64_t)_swiftEmptyArrayStorage;
        uint64_t v29 = -1;
        uint64_t v30 = -1 << *(unsigned char *)(v17 + 32);
        if (-v30 < 64) {
          uint64_t v29 = ~(-1 << -(char)v30);
        }
        unint64_t v31 = v29 & v28;
        uint64_t v3 = (unint64_t)(63 - v30) >> 6;
        if ((v29 & v28) != 0)
        {
LABEL_20:
          unint64_t v32 = __clz(__rbit64(v31));
          v31 &= v31 - 1;
          unint64_t v33 = v32 | (v27 << 6);
          goto LABEL_35;
        }
        while (1)
        {
          uint64_t v34 = v27 + 1;
          if (__OFADD__(v27, 1)) {
            goto LABEL_162;
          }
          if (v34 >= v3)
          {
LABEL_44:
            swift_release();
            os_log_type_t v44 = (void *)sub_100259A30(v142[0]);
            swift_bridgeObjectRelease();
            goto LABEL_46;
          }
          unint64_t v35 = *(void *)(v26 + 8 * v34);
          ++v27;
          if (!v35)
          {
            uint64_t v27 = v34 + 1;
            if (v34 + 1 >= v3) {
              goto LABEL_44;
            }
            unint64_t v35 = *(void *)(v26 + 8 * v27);
            if (!v35)
            {
              uint64_t v27 = v34 + 2;
              if (v34 + 2 >= v3) {
                goto LABEL_44;
              }
              unint64_t v35 = *(void *)(v26 + 8 * v27);
              if (!v35)
              {
                uint64_t v36 = v34 + 3;
                if (v36 >= v3) {
                  goto LABEL_44;
                }
                unint64_t v35 = *(void *)(v26 + 8 * v36);
                if (!v35)
                {
                  while (1)
                  {
                    uint64_t v27 = v36 + 1;
                    if (__OFADD__(v36, 1)) {
                      break;
                    }
                    if (v27 >= v3) {
                      goto LABEL_44;
                    }
                    unint64_t v35 = *(void *)(v26 + 8 * v27);
                    ++v36;
                    if (v35) {
                      goto LABEL_34;
                    }
                  }
                  __break(1u);
LABEL_165:
                  __break(1u);
LABEL_166:
                  __break(1u);
LABEL_167:
                  swift_once();
LABEL_53:
                  BOOL v40 = 0;
                  Swift::Int v48 = (Swift::Int)sub_1003B5358(3, v26, 0, 0, 0, 0);
                  while (1)
                  {
                    uint64_t v26 = v48;
                    uint64_t v119 = *(os_unfair_lock_s **)(v48 + 112);
                    uint64_t v120 = swift_task_alloc();
                    *(void *)(v120 + 16) = sub_1005008F4;
                    *(void *)(v120 + 24) = v26;
                    v119 += 4;
                    os_unfair_lock_lock(v119);
                    sub_100500810(v142);
                    os_unfair_lock_unlock(v119);
                    uint64_t v47 = (char *)v142[0];
                    swift_release();
                    swift_task_dealloc();
LABEL_57:
                    int64_t v49 = 0;
                    char v123 = v3 - 120;
                    v136 = (id *)(v3 - 56);
                    uint64_t v134 = (uint64_t *)(v3 - 48);
                    uint64_t v50 = (id *)(v3 - 40);
                    uint64_t v51 = (uint64_t *)(v3 - 32);
                    int64_t v121 = v127 + 56;
                    uint64_t v52 = -1 << *(unsigned char *)(v127 + 32);
                    if (-v52 < 64) {
                      uint64_t v53 = ~(-1 << -(char)v52);
                    }
                    else {
                      uint64_t v53 = -1;
                    }
                    unint64_t v54 = v53 & *(void *)(v127 + 56);
                    uint64_t v124 = (uint64_t (**)(uint64_t))(v2[26]
                                                            + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_autoUnlockEligibleDevices);
                    int64_t v122 = (unint64_t)(63 - v52) >> 6;
                    uint64_t v140 = v47 + 56;
                    int v141 = v47;
                    uint64_t v132 = (uint64_t *)(v3 - 32);
                    uint64_t v133 = (id *)(v3 - 40);
LABEL_62:
                    if (v54)
                    {
                      uint64_t v129 = (v54 - 1) & v54;
                      int64_t v130 = v49;
                      unint64_t v55 = __clz(__rbit64(v54)) | (v49 << 6);
                    }
                    else
                    {
                      BOOL v56 = __OFADD__(v49, 1);
                      int64_t v57 = v49 + 1;
                      if (v56) {
                        goto LABEL_165;
                      }
                      if (v57 >= v122)
                      {
LABEL_159:
                        swift_release();
                        swift_bridgeObjectRelease();
                        swift_beginAccess();
                        unint64_t v118 = swift_bridgeObjectRetain();
                        os_log_type_t v44 = (void *)sub_100259A30(v118);
                        swift_bridgeObjectRelease_n();
                        goto LABEL_46;
                      }
                      unint64_t v58 = *(void *)(v121 + 8 * v57);
                      if (!v58)
                      {
                        int64_t v59 = v57 + 1;
                        if (v57 + 1 >= v122) {
                          goto LABEL_159;
                        }
                        unint64_t v58 = *(void *)(v121 + 8 * v59);
                        if (!v58)
                        {
                          int64_t v59 = v57 + 2;
                          if (v57 + 2 >= v122) {
                            goto LABEL_159;
                          }
                          unint64_t v58 = *(void *)(v121 + 8 * v59);
                          if (!v58)
                          {
                            int64_t v59 = v57 + 3;
                            if (v57 + 3 >= v122) {
                              goto LABEL_159;
                            }
                            unint64_t v58 = *(void *)(v121 + 8 * v59);
                            if (!v58)
                            {
                              while (1)
                              {
                                int64_t v57 = v59 + 1;
                                if (__OFADD__(v59, 1)) {
                                  goto LABEL_166;
                                }
                                if (v57 >= v122) {
                                  goto LABEL_159;
                                }
                                unint64_t v58 = *(void *)(v121 + 8 * v57);
                                ++v59;
                                if (v58) {
                                  goto LABEL_74;
                                }
                              }
                            }
                          }
                        }
                        int64_t v57 = v59;
                      }
LABEL_74:
                      uint64_t v129 = (v58 - 1) & v58;
                      int64_t v130 = v57;
                      unint64_t v55 = __clz(__rbit64(v58)) + (v57 << 6);
                    }
                    uint64_t v60 = *(void *)(*(void *)(v127 + 48) + 8 * v55);
                    id v61 = *v124;
                    swift_retain();
                    uint64_t v126 = v60;
                    uint64_t v62 = v61(v60);
                    swift_release();
                    if ((v62 & 0xC000000000000001) == 0)
                    {
                      BOOL v40 = 0;
                      uint64_t v3 = sub_100706F44(v62, v1);
                      if (!*((void *)v47 + 2)) {
                        goto LABEL_155;
                      }
                      goto LABEL_97;
                    }
                    uint64_t v3 = (uint64_t)&_swiftEmptySetSingleton;
                    v142[0] = (uint64_t)&_swiftEmptySetSingleton;
                    __CocoaSet.makeIterator()();
                    uint64_t v63 = __CocoaSet.Iterator.next()();
                    if (!v63) {
                      break;
                    }
                    uint64_t v64 = v63;
                    sub_10000B740(0, &qword_10096B3E8);
LABEL_80:
                    uint64_t *v51 = v64;
                    swift_dynamicCast();
                    BOOL v40 = 0;
                    unsigned __int8 v65 = sub_1006DA11C(v50, v1);
                    id v66 = *v50;
                    if ((v65 & 1) == 0)
                    {

                      goto LABEL_79;
                    }
                    unint64_t v67 = *(void *)(v3 + 16);
                    if (*(void *)(v3 + 24) <= v67)
                    {
                      sub_100599C4C(v67 + 1);
                      uint64_t v3 = v142[0];
                    }
                    Swift::Int v48 = NSObject._rawHashValue(seed:)(*(void *)(v3 + 40));
                    uint64_t v68 = v3 + 56;
                    uint64_t v69 = -1 << *(unsigned char *)(v3 + 32);
                    unint64_t v70 = v48 & ~v69;
                    unint64_t v71 = v70 >> 6;
                    if (((-1 << v70) & ~*(void *)(v3 + 56 + 8 * (v70 >> 6))) != 0)
                    {
                      unint64_t v72 = __clz(__rbit64((-1 << v70) & ~*(void *)(v3 + 56 + 8 * (v70 >> 6)))) | v70 & 0x7FFFFFFFFFFFFFC0;
                      goto LABEL_93;
                    }
                    char v73 = 0;
                    unint64_t v74 = (unint64_t)(63 - v69) >> 6;
                    while (++v71 != v74 || (v73 & 1) == 0)
                    {
                      BOOL v75 = v71 == v74;
                      if (v71 == v74) {
                        unint64_t v71 = 0;
                      }
                      v73 |= v75;
                      uint64_t v76 = *(void *)(v68 + 8 * v71);
                      if (v76 != -1)
                      {
                        unint64_t v72 = __clz(__rbit64(~v76)) + (v71 << 6);
LABEL_93:
                        *(void *)(v68 + ((v72 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v72;
                        *(void *)(*(void *)(v3 + 48) + 8 * v72) = v66;
                        ++*(void *)(v3 + 16);
LABEL_79:
                        uint64_t v64 = __CocoaSet.Iterator.next()();
                        if (!v64) {
                          goto LABEL_94;
                        }
                        goto LABEL_80;
                      }
                    }
                    __break(1u);
                  }
LABEL_94:
                  swift_release();
                  if (!*((void *)v47 + 2)) {
                    goto LABEL_155;
                  }
LABEL_97:
                  BOOL v135 = v40;
                  if ((v3 & 0xC000000000000001) != 0)
                  {
                    swift_retain();
                    __CocoaSet.makeIterator()();
                    sub_10000B740(0, &qword_10096B3E8);
                    sub_100361188();
                    Set.Iterator.init(_cocoa:)();
                    uint64_t v77 = v2[2];
                    uint64_t v138 = v2[3];
                    id v78 = v2;
                    uint64_t v79 = v2[4];
                    uint64_t v2 = (uint64_t *)v2[5];
                    unint64_t v80 = v78[6];
                  }
                  else
                  {
                    uint64_t v81 = -1 << *(unsigned char *)(v3 + 32);
                    uint64_t v138 = v3 + 56;
                    uint64_t v79 = ~v81;
                    uint64_t v82 = -v81;
                    if (v82 < 64) {
                      uint64_t v83 = ~(-1 << v82);
                    }
                    else {
                      uint64_t v83 = -1;
                    }
                    unint64_t v80 = v83 & *(void *)(v3 + 56);
                    swift_retain();
                    uint64_t v2 = 0;
                    uint64_t v77 = v3;
                  }
                  int64_t v137 = (unint64_t)(v79 + 64) >> 6;
                  while (2)
                  {
                    uint64_t v85 = v2;
                    if (v77 < 0)
                    {
                      uint64_t v88 = __CocoaSet.Iterator.next()();
                      if (!v88)
                      {
                        uint64_t v2 = v131;
                        uint64_t v47 = v141;
LABEL_153:
                        BOOL v40 = v135;
                        uint64_t v51 = v132;
                        uint64_t v50 = v133;
                        goto LABEL_154;
                      }
                      *uint64_t v134 = v88;
                      sub_10000B740(0, &qword_10096B3E8);
                      swift_unknownObjectRetain();
                      swift_dynamicCast();
                      id v89 = *v136;
                      swift_unknownObjectRelease();
                      uint64_t v47 = v141;
                      if (!v89) {
                        goto LABEL_152;
                      }
                      goto LABEL_122;
                    }
                    if (v80)
                    {
                      unint64_t v86 = __clz(__rbit64(v80));
                      v80 &= v80 - 1;
                      unint64_t v87 = v86 | ((void)v2 << 6);
                      uint64_t v47 = v141;
                      goto LABEL_121;
                    }
                    uint64_t v2 = (uint64_t *)((char *)v2 + 1);
                    uint64_t v47 = v141;
                    if (!__OFADD__(v85, 1))
                    {
                      if ((uint64_t)v2 >= v137) {
                        goto LABEL_152;
                      }
                      unint64_t v90 = *(void *)(v138 + 8 * (void)v2);
                      BOOL v40 = v135;
                      uint64_t v51 = v132;
                      uint64_t v50 = v133;
                      if (!v90)
                      {
                        uint64_t v91 = (uint64_t *)((char *)v85 + 2);
                        if ((uint64_t)v85 + 2 >= v137) {
                          goto LABEL_157;
                        }
                        unint64_t v90 = *(void *)(v138 + 8 * (void)v91);
                        if (v90) {
                          goto LABEL_119;
                        }
                        uint64_t v91 = (uint64_t *)((char *)v85 + 3);
                        if ((uint64_t)v85 + 3 >= v137) {
                          goto LABEL_157;
                        }
                        unint64_t v90 = *(void *)(v138 + 8 * (void)v91);
                        if (v90)
                        {
LABEL_119:
                          uint64_t v2 = v91;
                        }
                        else
                        {
                          uint64_t v2 = (uint64_t *)((char *)v85 + 4);
                          if ((uint64_t)v85 + 4 >= v137)
                          {
LABEL_157:
                            uint64_t v2 = v131;
LABEL_154:
                            sub_10024D330();
LABEL_155:
                            LOBYTE(v26) = v123;
                            swift_beginAccess();
                            sub_1003D571C(v3);
                            swift_endAccess();
                            uint64_t v108 = Logger.logObject.getter();
                            os_log_type_t v109 = static os_log_type_t.default.getter();
                            uint64_t v3 = v109;
                            if (os_log_type_enabled(v108, v109))
                            {
                              uint64_t v26 = swift_slowAlloc();
                              uint64_t v139 = swift_slowAlloc();
                              v142[0] = v139;
                              *(_DWORD *)uint64_t v26 = 136315650;
                              uint64_t v110 = sub_10050938C();
                              v2[14] = sub_100254634(v110, v111, v142);
                              UnsafeMutableRawBufferPointer.copyMemory(from:)();
                              swift_bridgeObjectRelease();
                              *(_WORD *)(v26 + 12) = 2080;
                              v2[15] = v126;
                              type metadata accessor for SFAutoUnlockDeviceType(0);
                              uint64_t v112 = String.init<A>(describing:)();
                              v2[16] = sub_100254634(v112, v113, v142);
                              UnsafeMutableRawBufferPointer.copyMemory(from:)();
                              swift_bridgeObjectRelease();
                              *(_WORD *)(v26 + 22) = 2080;
                              sub_10000B740(0, &qword_10096B3E8);
                              swift_bridgeObjectRetain();
                              uint64_t v114 = Array.description.getter();
                              unint64_t v116 = v115;
                              uint64_t v50 = v133;
                              swift_bridgeObjectRelease();
                              uint64_t v117 = v114;
                              uint64_t v2 = v131;
                              v131[17] = sub_100254634(v117, v116, v142);
                              uint64_t v51 = v132;
                              UnsafeMutableRawBufferPointer.copyMemory(from:)();
                              swift_bridgeObjectRelease();
                              _os_log_impl((void *)&_mh_execute_header, v108, (os_log_type_t)v3, "listEligibleDevices for %s returning eligible %s devices: %s", (uint8_t *)v26, 0x20u);
                              uint64_t v3 = v139;
                              swift_arrayDestroy();
                              swift_slowDealloc();
                              swift_slowDealloc();
                            }

                            unint64_t v54 = v129;
                            int64_t v49 = v130;
                            goto LABEL_62;
                          }
                          unint64_t v90 = *(void *)(v138 + 8 * (void)v2);
                          if (!v90)
                          {
                            uint64_t v107 = (char *)v85 + 5;
                            uint64_t v2 = v131;
                            do
                            {
                              if ((char *)v137 == v107) {
                                goto LABEL_154;
                              }
                              unint64_t v90 = *(void *)(v138 + 8 * (void)v107++);
                            }
                            while (!v90);
                            uint64_t v2 = (uint64_t *)(v107 - 1);
                          }
                        }
                      }
                      unint64_t v80 = (v90 - 1) & v90;
                      unint64_t v87 = __clz(__rbit64(v90)) + ((void)v2 << 6);
LABEL_121:
                      id v89 = *(id *)(*(void *)(v77 + 48) + 8 * v87);
                      if (!v89)
                      {
LABEL_152:
                        uint64_t v2 = v131;
                        goto LABEL_153;
                      }
LABEL_122:
                      id v92 = [v89 uniqueID];
                      if (!v92)
                      {
                        __break(1u);
                        JUMPOUT(0x1006D89A4);
                      }
                      int v93 = v92;
                      uint64_t v94 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                      uint64_t v96 = v95;

                      if (!*((void *)v47 + 2)) {
                        goto LABEL_104;
                      }
                      Hasher.init(_seed:)();
                      String.hash(into:)();
                      Swift::Int v97 = Hasher._finalize()();
                      uint64_t v98 = -1 << v47[32];
                      unint64_t v99 = v97 & ~v98;
                      if (((*(void *)&v140[(v99 >> 3) & 0xFFFFFFFFFFFFFF8] >> v99) & 1) == 0) {
                        goto LABEL_104;
                      }
                      uint64_t v100 = *((void *)v47 + 6);
                      long long v101 = (void *)(v100 + 16 * v99);
                      if (*v101 == v94 && v101[1] == v96 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                        goto LABEL_132;
                      }
                      uint64_t v128 = ~v98;
                      unint64_t v102 = (v99 + 1) & ~v98;
                      if (((*(void *)&v140[(v102 >> 3) & 0xFFFFFFFFFFFFFF8] >> v102) & 1) == 0) {
                        goto LABEL_104;
                      }
                      uint64_t v103 = (void *)(v100 + 16 * v102);
                      if (*v103 == v94 && v103[1] == v96 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                        goto LABEL_132;
                      }
                      unint64_t v104 = (v102 + 1) & v128;
                      if ((*(void *)&v140[(v104 >> 3) & 0xFFFFFFFFFFFFFF8] >> v104))
                      {
                        while (1)
                        {
                          uint64_t v105 = (void *)(v100 + 16 * v104);
                          BOOL v106 = *v105 == v94 && v105[1] == v96;
                          if (v106 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                            break;
                          }
                          uint64_t v84 = 0;
                          unint64_t v104 = (v104 + 1) & v128;
                          if (((*(void *)&v140[(v104 >> 3) & 0xFFFFFFFFFFFFFF8] >> v104) & 1) == 0) {
                            goto LABEL_105;
                          }
                        }
LABEL_132:
                        uint64_t v84 = 1;
                      }
                      else
                      {
LABEL_104:
                        uint64_t v84 = 0;
                      }
LABEL_105:
                      swift_bridgeObjectRelease();
                      [v89 setUnlockEnabled:v84];

                      continue;
                    }
                    break;
                  }
                  __break(1u);
LABEL_162:
                  __break(1u);
LABEL_163:
                  swift_once();
                  goto LABEL_6;
                }
                uint64_t v27 = v36;
              }
            }
          }
LABEL_34:
          unint64_t v31 = (v35 - 1) & v35;
          unint64_t v33 = __clz(__rbit64(v35)) + (v27 << 6);
LABEL_35:
          Swift::Int v37 = sub_1006D9E0C(3, *(void *)(*(void *)(v25 + 48) + 8 * v33));
          sub_1003D571C(v37);
          if (v31) {
            goto LABEL_20;
          }
        }
      }
    }
    else
    {
      Swift::Int v23 = sub_1005095A0(v2[27]);
      BOOL v24 = sub_10057C25C(v14, v23);
      swift_bridgeObjectRelease();
      if (!v24) {
        goto LABEL_11;
      }
    }
    int64_t v17 = sub_1005095DC(v2[27]);
    goto LABEL_16;
  }
  NSString v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    int v20 = (uint8_t *)swift_slowAlloc();
    v142[0] = swift_slowAlloc();
    *(_DWORD *)int v20 = 136315138;
    uint64_t v21 = sub_10050938C();
    v2[22] = sub_100254634(v21, v22, v142);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "listEligibleDevices is not supported for authenticationType %s", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  os_log_type_t v44 = &_swiftEmptySetSingleton;
LABEL_46:
  os_log_type_t v45 = (uint64_t (*)(void *))v2[1];
  return v45(v44);
}

uint64_t sub_1006D89D4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1006D8AD0, 0, 0);
}

uint64_t sub_1006D8AD0()
{
  uint64_t v140 = v0;
  uint64_t v2 = v0;
  if (qword_10096A190 != -1) {
    goto LABEL_158;
  }
  while (1)
  {
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000B47C(v3, (uint64_t)qword_10097F520);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      v139[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315138;
      uint64_t v7 = sub_10050938C();
      v2[24] = sub_100254634(v7, v8, v139);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Asked to list all eligible devices for: %s", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    unint64_t v9 = v2[27];
    if (v9 - 3 >= 0xC) {
      break;
    }
    Swift::UInt8 v10 = SFDeviceClassCodeGet();
    Swift::Int v11 = sub_1005095A0(v9);
    BOOL v12 = sub_10057C25C(8u, v11);
    swift_bridgeObjectRelease();
    if (v12)
    {
      if (SFDeviceIsRealityDevice()) {
        goto LABEL_11;
      }
    }
    else
    {
      Swift::Int v19 = sub_1005095A0(v2[27]);
      BOOL v20 = sub_10057C25C(v10, v19);
      swift_bridgeObjectRelease();
      if (v20)
      {
LABEL_11:
        int64_t v13 = sub_1005095DC(v2[27]);
        goto LABEL_12;
      }
    }
    int64_t v13 = sub_1005095C4(v2[27]);
LABEL_12:
    int64_t v21 = v13;
    uint64_t v22 = v2[27];
    int64_t v130 = v2;
    if ((unint64_t)(v22 - 10) > 4)
    {
      uint64_t v124 = v2 + 13;
      Swift::UInt8 v35 = SFDeviceClassCodeGet();
      Swift::Int v36 = sub_1005095A0(v22);
      LOBYTE(v22) = v36;
      BOOL v37 = sub_10057C25C(8u, v36);
      swift_bridgeObjectRelease();
      int64_t v126 = v21;
      if (v37)
      {
        if (!SFDeviceIsRealityDevice())
        {
LABEL_35:
          float v38 = 15.0;
          float v1 = 18.2;
          switch(v2[27])
          {
            case 5:
            case 6:
              goto LABEL_52;
            case 7:
            case 8:
              float v38 = 18.0;
              goto LABEL_52;
            case 9:
              goto LABEL_45;
            default:
              float v38 = 0.0;
              goto LABEL_52;
          }
        }
      }
      else
      {
        Swift::Int v39 = sub_1005095A0(v2[27]);
        LOBYTE(v22) = v39;
        BOOL v40 = sub_10057C25C(v35, v39);
        swift_bridgeObjectRelease();
        if (!v40) {
          goto LABEL_35;
        }
      }
      float v38 = 18.0;
      float v1 = 2.2;
      switch(v2[27])
      {
        case 3:
        case 4:
          float v38 = 17.1;
          goto LABEL_52;
        case 5:
        case 6:
        case 8:
          goto LABEL_52;
        case 7:
          float v38 = 15.0;
LABEL_52:
          *uint64_t v124 = _swiftEmptyArrayStorage;
          os_log_type_t v45 = (char *)&_swiftEmptySetSingleton;
          float v1 = v38;
          goto LABEL_53;
        case 9:
LABEL_45:
          *uint64_t v124 = _swiftEmptyArrayStorage;
          char v44 = sub_100611C18(3u);
          if (v44 == 2)
          {
            os_log_type_t v45 = (char *)&_swiftEmptySetSingleton;
            goto LABEL_53;
          }
          LOBYTE(v22) = v44 & 1;
          if (qword_100969D50 == -1) {
            goto LABEL_49;
          }
          goto LABEL_162;
        default:
          *uint64_t v124 = _swiftEmptyArrayStorage;
          os_log_type_t v45 = (char *)&_swiftEmptySetSingleton;
          float v1 = 0.0;
          goto LABEL_53;
      }
    }
    int64_t v23 = 0;
    uint64_t v22 = v13 + 56;
    uint64_t v24 = *(void *)(v13 + 56);
    v139[0] = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v25 = -1;
    uint64_t v26 = -1 << *(unsigned char *)(v13 + 32);
    if (-v26 < 64) {
      uint64_t v25 = ~(-1 << -(char)v26);
    }
    unint64_t v27 = v25 & v24;
    int64_t v28 = (unint64_t)(63 - v26) >> 6;
    if ((v25 & v24) != 0)
    {
LABEL_16:
      unint64_t v29 = __clz(__rbit64(v27));
      v27 &= v27 - 1;
      unint64_t v30 = v29 | (v23 << 6);
      goto LABEL_31;
    }
    while (1)
    {
      int64_t v31 = v23 + 1;
      if (__OFADD__(v23, 1)) {
        goto LABEL_157;
      }
      if (v31 >= v28)
      {
LABEL_40:
        swift_release();
        float v41 = (void *)sub_100259A30(v139[0]);
        swift_bridgeObjectRelease();
        goto LABEL_42;
      }
      unint64_t v32 = *(void *)(v22 + 8 * v31);
      ++v23;
      if (v32) {
        goto LABEL_30;
      }
      int64_t v23 = v31 + 1;
      if (v31 + 1 >= v28) {
        goto LABEL_40;
      }
      unint64_t v32 = *(void *)(v22 + 8 * v23);
      if (v32) {
        goto LABEL_30;
      }
      int64_t v23 = v31 + 2;
      if (v31 + 2 >= v28) {
        goto LABEL_40;
      }
      unint64_t v32 = *(void *)(v22 + 8 * v23);
      if (v32) {
        goto LABEL_30;
      }
      int64_t v33 = v31 + 3;
      if (v33 >= v28) {
        goto LABEL_40;
      }
      unint64_t v32 = *(void *)(v22 + 8 * v33);
      if (!v32) {
        break;
      }
      int64_t v23 = v33;
LABEL_30:
      unint64_t v27 = (v32 - 1) & v32;
      unint64_t v30 = __clz(__rbit64(v32)) + (v23 << 6);
LABEL_31:
      Swift::Int v34 = sub_1006D9E0C(3, *(void *)(*(void *)(v21 + 48) + 8 * v30));
      sub_1003D571C(v34);
      if (v27) {
        goto LABEL_16;
      }
    }
    while (1)
    {
      int64_t v23 = v33 + 1;
      if (__OFADD__(v33, 1)) {
        break;
      }
      if (v23 >= v28) {
        goto LABEL_40;
      }
      unint64_t v32 = *(void *)(v22 + 8 * v23);
      ++v33;
      if (v32) {
        goto LABEL_30;
      }
    }
    __break(1u);
    while (2)
    {
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      swift_once();
LABEL_49:
      BOOL v12 = 0;
      Swift::Int v46 = (Swift::Int)sub_1003B5358(3, v22, 0, 0, 0, 0);
LABEL_155:
      uint64_t v22 = v46;
      unint64_t v116 = *(os_unfair_lock_s **)(v46 + 112);
      uint64_t v117 = swift_task_alloc();
      *(void *)(v117 + 16) = sub_1005008F4;
      *(void *)(v117 + 24) = v22;
      v116 += 4;
      os_unfair_lock_lock(v116);
      sub_100500810(v139);
      os_unfair_lock_unlock(v116);
      os_log_type_t v45 = (char *)v139[0];
      swift_release();
      swift_task_dealloc();
LABEL_53:
      int64_t v47 = 0;
      char v122 = (_BYTE)v2 + 80;
      uint64_t v133 = (id *)(v2 + 18);
      uint64_t v132 = v2 + 19;
      Swift::Int v48 = v2 + 21;
      unint64_t v118 = (id *)(v2 + 20);
      int64_t v119 = v126 + 56;
      uint64_t v49 = -1 << *(unsigned char *)(v126 + 32);
      if (-v49 < 64) {
        uint64_t v50 = ~(-1 << -(char)v49);
      }
      else {
        uint64_t v50 = -1;
      }
      unint64_t v51 = v50 & *(void *)(v126 + 56);
      char v123 = (uint64_t (**)(uint64_t))(v2[26]
                                              + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_autoUnlockEligibleDevices);
      int64_t v120 = (unint64_t)(63 - v49) >> 6;
      int64_t v137 = v45 + 56;
      uint64_t v138 = v45;
      NSString v131 = v2 + 21;
LABEL_58:
      if (v51)
      {
        uint64_t v128 = (v51 - 1) & v51;
        int64_t v129 = v47;
        unint64_t v52 = __clz(__rbit64(v51)) | (v47 << 6);
      }
      else
      {
        BOOL v53 = __OFADD__(v47, 1);
        int64_t v54 = v47 + 1;
        if (v53) {
          continue;
        }
        if (v54 >= v120)
        {
LABEL_154:
          swift_release();
          swift_bridgeObjectRelease();
          swift_beginAccess();
          unint64_t v115 = swift_bridgeObjectRetain();
          float v41 = (void *)sub_100259A30(v115);
          swift_bridgeObjectRelease_n();
          goto LABEL_42;
        }
        unint64_t v55 = *(void *)(v119 + 8 * v54);
        if (!v55)
        {
          int64_t v56 = v54 + 1;
          if (v54 + 1 >= v120) {
            goto LABEL_154;
          }
          unint64_t v55 = *(void *)(v119 + 8 * v56);
          if (!v55)
          {
            int64_t v56 = v54 + 2;
            if (v54 + 2 >= v120) {
              goto LABEL_154;
            }
            unint64_t v55 = *(void *)(v119 + 8 * v56);
            if (!v55)
            {
              int64_t v56 = v54 + 3;
              if (v54 + 3 >= v120) {
                goto LABEL_154;
              }
              unint64_t v55 = *(void *)(v119 + 8 * v56);
              if (!v55)
              {
                while (1)
                {
                  int64_t v54 = v56 + 1;
                  if (__OFADD__(v56, 1)) {
                    goto LABEL_161;
                  }
                  if (v54 >= v120) {
                    goto LABEL_154;
                  }
                  unint64_t v55 = *(void *)(v119 + 8 * v54);
                  ++v56;
                  if (v55) {
                    goto LABEL_70;
                  }
                }
              }
            }
          }
          int64_t v54 = v56;
        }
LABEL_70:
        uint64_t v128 = (v55 - 1) & v55;
        int64_t v129 = v54;
        unint64_t v52 = __clz(__rbit64(v55)) + (v54 << 6);
      }
      break;
    }
    uint64_t v57 = *(void *)(*(void *)(v126 + 48) + 8 * v52);
    unint64_t v58 = *v123;
    swift_retain();
    uint64_t v125 = v57;
    uint64_t v59 = v58(v57);
    swift_release();
    if ((v59 & 0xC000000000000001) != 0)
    {
      uint64_t v60 = (uint64_t)&_swiftEmptySetSingleton;
      v139[0] = (uint64_t)&_swiftEmptySetSingleton;
      __CocoaSet.makeIterator()();
      uint64_t v61 = __CocoaSet.Iterator.next()();
      if (v61)
      {
        uint64_t v62 = v61;
        sub_10000B740(0, &qword_10096B3E8);
LABEL_76:
        *Swift::Int v48 = v62;
        swift_dynamicCast();
        BOOL v12 = 0;
        unsigned __int8 v63 = sub_1006DA11C(v118, v1);
        id v64 = *v118;
        if ((v63 & 1) == 0)
        {

          goto LABEL_75;
        }
        unint64_t v65 = *(void *)(v60 + 16);
        if (*(void *)(v60 + 24) <= v65)
        {
          sub_100599C4C(v65 + 1);
          uint64_t v60 = v139[0];
        }
        Swift::Int v46 = NSObject._rawHashValue(seed:)(*(void *)(v60 + 40));
        uint64_t v66 = v60 + 56;
        uint64_t v67 = -1 << *(unsigned char *)(v60 + 32);
        unint64_t v68 = v46 & ~v67;
        unint64_t v69 = v68 >> 6;
        if (((-1 << v68) & ~*(void *)(v60 + 56 + 8 * (v68 >> 6))) != 0)
        {
          unint64_t v70 = __clz(__rbit64((-1 << v68) & ~*(void *)(v60 + 56 + 8 * (v68 >> 6)))) | v68 & 0x7FFFFFFFFFFFFFC0;
          goto LABEL_89;
        }
        char v71 = 0;
        unint64_t v72 = (unint64_t)(63 - v67) >> 6;
        while (++v69 != v72 || (v71 & 1) == 0)
        {
          BOOL v73 = v69 == v72;
          if (v69 == v72) {
            unint64_t v69 = 0;
          }
          v71 |= v73;
          uint64_t v74 = *(void *)(v66 + 8 * v69);
          if (v74 != -1)
          {
            unint64_t v70 = __clz(__rbit64(~v74)) + (v69 << 6);
LABEL_89:
            *(void *)(v66 + ((v70 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v70;
            *(void *)(*(void *)(v60 + 48) + 8 * v70) = v64;
            ++*(void *)(v60 + 16);
LABEL_75:
            uint64_t v62 = __CocoaSet.Iterator.next()();
            if (!v62) {
              goto LABEL_90;
            }
            goto LABEL_76;
          }
        }
        __break(1u);
        goto LABEL_155;
      }
LABEL_90:
      swift_release();
      if (*((void *)v45 + 2)) {
        goto LABEL_93;
      }
      goto LABEL_150;
    }
    BOOL v12 = 0;
    uint64_t v60 = sub_100706F44(v59, v1);
    if (!*((void *)v45 + 2))
    {
LABEL_150:
      LOBYTE(v22) = v122;
      swift_beginAccess();
      sub_1003D571C(v60);
      swift_endAccess();
      BOOL v106 = Logger.logObject.getter();
      os_log_type_t v107 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v106, v107))
      {
        uint64_t v108 = swift_slowAlloc();
        uint64_t v136 = swift_slowAlloc();
        v139[0] = v136;
        *(_DWORD *)uint64_t v108 = 136315650;
        uint64_t v109 = sub_10050938C();
        v130[14] = sub_100254634(v109, v110, v139);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v108 + 12) = 2080;
        v130[15] = v125;
        type metadata accessor for SFAutoUnlockDeviceType(0);
        uint64_t v111 = String.init<A>(describing:)();
        v130[16] = sub_100254634(v111, v112, v139);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v108 + 22) = 2080;
        sub_10000B740(0, &qword_10096B3E8);
        swift_bridgeObjectRetain();
        uint64_t v22 = Array.description.getter();
        unint64_t v114 = v113;
        uint64_t v2 = v130;
        swift_bridgeObjectRelease();
        v130[17] = sub_100254634(v22, v114, v139);
        Swift::Int v48 = v131;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v106, v107, "listEligibleDevices for %s returning eligible %s devices: %s", (uint8_t *)v108, 0x20u);
        LOBYTE(v22) = v136;
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      unint64_t v51 = v128;
      int64_t v47 = v129;
      goto LABEL_58;
    }
LABEL_93:
    BOOL v121 = v12;
    if ((v60 & 0xC000000000000001) != 0)
    {
      swift_retain();
      __CocoaSet.makeIterator()();
      sub_10000B740(0, &qword_10096B3E8);
      sub_100361188();
      Set.Iterator.init(_cocoa:)();
      uint64_t v75 = v2[2];
      uint64_t v135 = v2[3];
      uint64_t v76 = v2[4];
      int64_t v77 = v2[5];
      unint64_t v78 = v2[6];
    }
    else
    {
      uint64_t v79 = -1 << *(unsigned char *)(v60 + 32);
      uint64_t v135 = v60 + 56;
      uint64_t v76 = ~v79;
      uint64_t v80 = -v79;
      if (v80 < 64) {
        uint64_t v81 = ~(-1 << v80);
      }
      else {
        uint64_t v81 = -1;
      }
      unint64_t v78 = v81 & *(void *)(v60 + 56);
      swift_retain();
      int64_t v77 = 0;
      uint64_t v75 = v60;
    }
    int64_t v134 = (unint64_t)(v76 + 64) >> 6;
    while (2)
    {
      uint64_t v2 = (void *)v78;
      int64_t v83 = v77;
      if (v75 < 0)
      {
        uint64_t v86 = __CocoaSet.Iterator.next()();
        if (!v86)
        {
          os_log_type_t v45 = v138;
LABEL_148:
          BOOL v12 = v121;
          Swift::Int v48 = v131;
LABEL_149:
          sub_10024D330();
          uint64_t v2 = v130;
          goto LABEL_150;
        }
        *uint64_t v132 = v86;
        sub_10000B740(0, &qword_10096B3E8);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v87 = *v133;
        swift_unknownObjectRelease();
        os_log_type_t v45 = v138;
        if (!v87) {
          goto LABEL_148;
        }
        goto LABEL_118;
      }
      if (v78)
      {
        unint64_t v84 = __clz(__rbit64(v78));
        v78 &= v78 - 1;
        unint64_t v85 = v84 | (v77 << 6);
        os_log_type_t v45 = v138;
        goto LABEL_117;
      }
      ++v77;
      os_log_type_t v45 = v138;
      if (!__OFADD__(v83, 1))
      {
        if (v77 >= v134) {
          goto LABEL_148;
        }
        unint64_t v88 = *(void *)(v135 + 8 * v77);
        Swift::Int v48 = v131;
        if (!v88)
        {
          int64_t v89 = v83 + 2;
          if (v83 + 2 >= v134) {
            goto LABEL_152;
          }
          unint64_t v88 = *(void *)(v135 + 8 * v89);
          if (v88) {
            goto LABEL_115;
          }
          int64_t v89 = v83 + 3;
          if (v83 + 3 >= v134) {
            goto LABEL_152;
          }
          unint64_t v88 = *(void *)(v135 + 8 * v89);
          if (v88)
          {
LABEL_115:
            int64_t v77 = v89;
          }
          else
          {
            int64_t v77 = v83 + 4;
            if (v83 + 4 >= v134)
            {
LABEL_152:
              BOOL v12 = v121;
              goto LABEL_149;
            }
            unint64_t v88 = *(void *)(v135 + 8 * v77);
            if (!v88)
            {
              int64_t v105 = v83 + 5;
              BOOL v12 = v121;
              do
              {
                if (v134 == v105) {
                  goto LABEL_149;
                }
                unint64_t v88 = *(void *)(v135 + 8 * v105++);
              }
              while (!v88);
              int64_t v77 = v105 - 1;
            }
          }
        }
        unint64_t v78 = (v88 - 1) & v88;
        unint64_t v85 = __clz(__rbit64(v88)) + (v77 << 6);
LABEL_117:
        id v87 = *(id *)(*(void *)(v75 + 48) + 8 * v85);
        if (!v87) {
          goto LABEL_148;
        }
LABEL_118:
        id v90 = [v87 uniqueID];
        if (!v90)
        {
          __break(1u);
          JUMPOUT(0x1006D9DDCLL);
        }
        uint64_t v91 = v90;
        uint64_t v92 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v94 = v93;

        if (!*((void *)v45 + 2)) {
          goto LABEL_100;
        }
        Hasher.init(_seed:)();
        String.hash(into:)();
        Swift::Int v95 = Hasher._finalize()();
        uint64_t v96 = -1 << v45[32];
        unint64_t v97 = v95 & ~v96;
        if (((*(void *)&v137[(v97 >> 3) & 0xFFFFFFFFFFFFFF8] >> v97) & 1) == 0) {
          goto LABEL_100;
        }
        uint64_t v98 = *((void *)v45 + 6);
        unint64_t v99 = (void *)(v98 + 16 * v97);
        if (*v99 == v92 && v99[1] == v94 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_128;
        }
        uint64_t v127 = ~v96;
        unint64_t v100 = (v97 + 1) & ~v96;
        if (((*(void *)&v137[(v100 >> 3) & 0xFFFFFFFFFFFFFF8] >> v100) & 1) == 0) {
          goto LABEL_100;
        }
        long long v101 = (void *)(v98 + 16 * v100);
        if (*v101 == v92 && v101[1] == v94 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_128;
        }
        unint64_t v102 = (v100 + 1) & v127;
        if ((*(void *)&v137[(v102 >> 3) & 0xFFFFFFFFFFFFFF8] >> v102))
        {
          while (1)
          {
            uint64_t v103 = (void *)(v98 + 16 * v102);
            BOOL v104 = *v103 == v92 && v103[1] == v94;
            if (v104 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
              break;
            }
            uint64_t v82 = 0;
            unint64_t v102 = (v102 + 1) & v127;
            if (((*(void *)&v137[(v102 >> 3) & 0xFFFFFFFFFFFFFF8] >> v102) & 1) == 0) {
              goto LABEL_101;
            }
          }
LABEL_128:
          uint64_t v82 = 1;
        }
        else
        {
LABEL_100:
          uint64_t v82 = 0;
        }
LABEL_101:
        swift_bridgeObjectRelease();
        [v87 setUnlockEnabled:v82];

        continue;
      }
      break;
    }
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    swift_once();
  }
  Swift::UInt8 v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    BOOL v16 = (uint8_t *)swift_slowAlloc();
    v139[0] = swift_slowAlloc();
    *(_DWORD *)BOOL v16 = 136315138;
    uint64_t v17 = sub_10050938C();
    v2[22] = sub_100254634(v17, v18, v139);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "listEligibleDevices is not supported for authenticationType %s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  float v41 = &_swiftEmptySetSingleton;
LABEL_42:
  Swift::Int v42 = (uint64_t (*)(void *))v2[1];
  return v42(v41);
}

Swift::Int sub_1006D9E0C(Swift::Int a1, uint64_t a2)
{
  uint64_t v4 = v2;
  Swift::Int v6 = a1;
  char v7 = sub_100611C18(a1);
  _StringGuts.grow(_:)(43);
  swift_bridgeObjectRelease();
  Swift::Int v23 = 0xD000000000000029;
  unint64_t v24 = 0x80000001007C82B0;
  unint64_t v8 = 0xE700000000000000;
  uint64_t v9 = 0x6E776F6E6B6E75;
  switch((char)v6)
  {
    case 1:
      unint64_t v8 = 0xEE00656E6F68506BLL;
      uint64_t v9 = 0x636F6C6E5563616DLL;
      break;
    case 2:
      unint64_t v8 = 0xEC00000043737361;
      uint64_t v9 = 0x6C436B636F6C6E75;
      break;
    case 3:
      unint64_t v8 = 0xEF6B636F6C6E5565;
      uint64_t v9 = 0x646F4D7473657567;
      break;
    default:
      break;
  }
  unint64_t v10 = v8;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease();
  unint64_t v11 = v24;
  if (v7 == 2)
  {
    Swift::Int v6 = v23;
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v12 = 10;
    *(void *)(v12 + 8) = v6;
    *(void *)(v12 + 16) = v11;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
    char v13 = v7 & 1;
    if (qword_100969D50 != -1) {
      swift_once();
    }
    Swift::UInt8 v14 = (void *)qword_100994790;
    os_log_type_t v15 = sub_1003B5358(v6, v13, 0, 0, 0, 0);
    if (!v3)
    {
      v22[1] = v22;
      __chkstk_darwin(v15);
      unint64_t v18 = v17 + 4;
      os_unfair_lock_lock(v17 + 4);
      sub_100500810(&v25);
      os_unfair_lock_unlock(v18);
      uint64_t v19 = v25;
      swift_release();
      swift_bridgeObjectRelease();
      Swift::Int v23 = v19;
      BOOL v20 = *(uint64_t (**)(uint64_t))(v4
                                              + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_autoUnlockEligibleDevices);
      swift_retain();
      uint64_t v21 = v20(a2);
      swift_release();
      Swift::Int v6 = sub_100706B28(v21, &v23, v14, v6, v13);
      swift_bridgeObjectRelease();
    }
  }
  return v6;
}

id sub_1006DA11C(id *a1, float a2)
{
  uint64_t v5 = sub_10000A844(&qword_10097C320);
  __chkstk_darwin(v5 - 8);
  char v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = *a1;
  id result = [*a1 productVersion];
  if (result)
  {
    unint64_t v10 = result;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v13 = v12;

    double v34 = *(double *)&v11;
    unint64_t v35 = v13;
    v33[0] = Float.description.getter();
    v33[1] = v14;
    uint64_t v15 = type metadata accessor for Locale();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 1, 1, v15);
    sub_10024A1FC();
    uint64_t v16 = StringProtocol.compare<A>(_:options:range:locale:)();
    sub_10000A7E8((uint64_t)v7, &qword_10097C320);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v16 == -1)
    {
      if (qword_10096A190 != -1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for Logger();
      sub_10000B47C(v17, (uint64_t)qword_10097F520);
      id v18 = v8;
      uint64_t v19 = Logger.logObject.getter();
      int v20 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v19, (os_log_type_t)v20))
      {
        HIDWORD(v29) = v20;
        uint64_t v32 = v2;
        uint64_t v21 = swift_slowAlloc();
        uint64_t v22 = (void *)swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        v33[0] = v31;
        *(_DWORD *)uint64_t v21 = 138412802;
        double v34 = *(double *)&v18;
        id v23 = v18;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        unint64_t v30 = v22;
        void *v22 = v18;

        *(_WORD *)(v21 + 12) = 2080;
        id v24 = [v23 productVersion];
        if (v24)
        {
          uint64_t v25 = v24;
          unint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v28 = v27;
        }
        else
        {
          double v34 = 0.0;
          unint64_t v35 = 0xE000000000000000;
          _StringGuts.grow(_:)(17);
          swift_bridgeObjectRelease();
          unint64_t v28 = 0x80000001007B7770;
          unint64_t v26 = 0xD000000000000015;
        }
        double v34 = COERCE_DOUBLE(sub_100254634(v26, v28, v33));
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 22) = 2048;
        double v34 = a2;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v19, BYTE4(v29), "Device not eligible since it is not on a recent enough software version, device: %@, version: %s, required: %f", (uint8_t *)v21, 0x20u);
        sub_10000A844(&qword_10096B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }
    return (id)(v16 != -1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006DA6BC(uint64_t a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  id v6 = a3;
  char v7 = (void *)swift_task_alloc();
  v3[4] = v7;
  void *v7 = v3;
  v7[1] = sub_1006DA790;
  v7[25] = a1;
  v7[26] = v6;
  return _swift_task_switch(sub_1006D75EC, 0, 0);
}

uint64_t sub_1006DA790()
{
  float v1 = *(void (***)(void, void))(*v0 + 24);
  uint64_t v2 = *(void **)(*v0 + 16);
  uint64_t v6 = *v0;
  swift_task_dealloc();

  sub_10000B740(0, &qword_10096B3E8);
  sub_100361188();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  ((void (**)(void, Class))v1)[2](v1, isa);

  _Block_release(v1);
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

void sub_1006DA918(id *a1, uint64_t *a2, uint64_t a3, char a4, char a5)
{
  id v6 = *a1;
  uint64_t v7 = *a2;
  if (*a2)
  {
    swift_bridgeObjectRetain();
    id v8 = [v6 uniqueID];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;

      sub_10057BE20(v10, v12, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
LABEL_19:
    __break(1u);
    os_unfair_lock_unlock((os_unfair_lock_t)v7);
    __break(1u);
    return;
  }
  uint64_t v7 = a5 & 1;
  id v14 = [*a1 uniqueID];
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v18 = 0;
  }
  sub_1003B5358(a4, v7, v16, v18, 0, 0);
  if (!v5)
  {
    swift_bridgeObjectRelease();
    id v29 = [v6 uniqueID];
    if (v29)
    {
      unint64_t v30 = v29;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v32 = __chkstk_darwin(v31);
      __chkstk_darwin(v32);
      double v34 = v33 + 4;
      os_unfair_lock_lock(v33 + 4);
      sub_1003CEC58(v35);
      os_unfair_lock_unlock(v34);
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_19;
  }
  swift_errorRelease();
  swift_bridgeObjectRelease();
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_10000B47C(v19, (uint64_t)qword_10097F520);
  id v20 = v6;
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    id v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)id v23 = 136315138;
    id v24 = [v20 uniqueID];
    if (v24)
    {
      uint64_t v25 = v24;
      unint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v28 = v27;
    }
    else
    {
      v35[0] = 0;
      v35[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v28 = 0x80000001007B7770;
      unint64_t v26 = 0xD000000000000015;
    }
    v35[0] = sub_100254634(v26, v28, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "No LocalLTK for remoteDevice %s", v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_1006DAD10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v38)(long long *__return_ptr, uint64_t, unint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  unsigned int v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  id v56;
  uint64_t v57;
  void *v58;
  Class v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  long long v71;
  uint64_t v72;
  uint64_t v73[6];

  uint64_t v7 = v6;
  unint64_t v68 = a4;
  unint64_t v69 = a6;
  unint64_t v70 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = type metadata accessor for UUID();
  id v64 = *(void *)(v12 - 8);
  unint64_t v65 = v12;
  __chkstk_darwin(v12);
  uint64_t v62 = v13;
  unsigned __int8 v63 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v14 - 8);
  uint64_t v67 = (uint64_t)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchPredicate();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (uint64_t *)((char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v20 = *(char **)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *uint64_t v19 = v20;
  (*(void (**)(void *, void, uint64_t))(v17 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v16);
  uint64_t v21 = v20;
  char v22 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v17 + 8))(v19, v16);
  if (v22)
  {
    id v20 = (char *)sub_100508E74(a1);
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v23 = type metadata accessor for Logger();
  uint64_t v24 = sub_10000B47C(v23, (uint64_t)qword_10097F520);
  swift_bridgeObjectRetain_n();
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  BOOL v27 = os_log_type_enabled(v25, v26);
  uint64_t v66 = a5;
  uint64_t v61 = ObjectType;
  if (v27)
  {
    uint64_t v28 = swift_slowAlloc();
    v73[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136315394;
    uint64_t v60 = v24;
    uint64_t v29 = sub_10050938C();
    *(void *)&char v71 = sub_100254634(v29, v30, v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v31 = v70;
    *(void *)&char v71 = sub_100254634(v70, a3, v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Asked to enable %s for device: %s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v31 = v70;
  }
  if ((unint64_t)(v20 - 3) >= 0xC)
  {
    id v32 = sub_10070E650(0x13u, 0, 0xE000000000000000);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      double v34 = (void *)Strong;
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      [v34 manager:v7 didFailToEnableDeviceFor:isa error:v32];
      swift_unknownObjectRelease();

      id v32 = isa;
    }
  }
  uint64_t v36 = *(uint64_t (**)(uint64_t))&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_isBluetoothEnabled];
  uint64_t v37 = swift_retain();
  LOBYTE(v36) = v36(v37);
  swift_release();
  if (v36)
  {
    float v38 = *(void (**)(long long *__return_ptr, uint64_t, unint64_t))&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsDeviceForUniqueID];
    swift_retain();
    v38(&v71, v31, a3);
    swift_release();
    if (v72)
    {
      sub_1002AF688(&v71, (uint64_t)v73);
      if ((unint64_t)(v20 - 9) > 5)
      {
        sub_1006DCBA4(v69, (uint64_t)v73, v68, v66, (uint64_t)v20, &v71);
        sub_10026BB6C(&v71, v72);
        sub_10035BF70();
        sub_10024D338((uint64_t)v73);
        sub_10024D338((uint64_t)&v71);
      }
      else
      {
        Swift::Int v39 = type metadata accessor for TaskPriority();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v67, 1, 1, v39);
        sub_100278C8C((uint64_t)v73, (uint64_t)&v71);
        float v41 = v63;
        BOOL v40 = v64;
        Swift::Int v42 = v65;
        (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v63, v69, v65);
        BOOL v43 = (*(unsigned __int8 *)(v40 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
        char v44 = (v62 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
        os_log_type_t v45 = (v44 + 15) & 0xFFFFFFFFFFFFFFF8;
        Swift::Int v46 = (char *)swift_allocObject();
        *((void *)v46 + 2) = 0;
        *((void *)v46 + 3) = 0;
        int64_t v47 = v66;
        *((void *)v46 + 4) = v68;
        *((void *)v46 + 5) = v47;
        sub_1002AF688(&v71, (uint64_t)(v46 + 48));
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(&v46[v43], v41, v42);
        *(void *)&v46[v44] = v7;
        *(void *)&v46[v45] = 9;
        *(void *)&v46[(v45 + 15) & 0xFFFFFFFFFFFFFFF8] = v61;
        swift_bridgeObjectRetain();
        Swift::Int v48 = v7;
        sub_10028CAC4(v67, (uint64_t)&unk_10097FA60, (uint64_t)v46);
        swift_release();
        sub_10024D338((uint64_t)v73);
      }
      return;
    }
    sub_10000A7E8((uint64_t)&v71, &qword_10097BB50);
    swift_bridgeObjectRetain_n();
    BOOL v53 = Logger.logObject.getter();
    int64_t v54 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v53, v54))
    {
      unint64_t v55 = (uint8_t *)swift_slowAlloc();
      v73[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v55 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)&char v71 = sub_100254634(v70, a3, v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "IDS device not found for SFAutoUnlock device: %s. Is the device in the same iCloud account?", v55, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    unint64_t v52 = 1;
  }
  else
  {
    uint64_t v49 = Logger.logObject.getter();
    uint64_t v50 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v49, v50))
    {
      unint64_t v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v51 = 0;
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "Bluetooth is disabled", v51, 2u);
      swift_slowDealloc();
    }

    unint64_t v52 = 17;
  }
  int64_t v56 = sub_10070E650(v52, 0, 0xE000000000000000);
  uint64_t v57 = swift_unknownObjectWeakLoadStrong();
  if (v57)
  {
    unint64_t v58 = (void *)v57;
    uint64_t v59 = UUID._bridgeToObjectiveC()().super.isa;
    [v58 manager:v7 didFailToEnableDeviceFor:v59 error:v56];
    swift_unknownObjectRelease();
  }
  else
  {
  }
}

uint64_t sub_1006DB584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[28] = a8;
  v8[29] = v14;
  v8[26] = a6;
  v8[27] = a7;
  v8[24] = a4;
  v8[25] = a5;
  uint64_t v9 = type metadata accessor for UUID();
  v8[30] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[31] = v10;
  v8[32] = *(void *)(v10 + 64);
  v8[33] = swift_task_alloc();
  v8[34] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for String.Encoding();
  v8[35] = v11;
  v8[36] = *(void *)(v11 - 8);
  v8[37] = swift_task_alloc();
  return _swift_task_switch(sub_1006DB6C8, 0, 0);
}

uint64_t sub_1006DB6C8()
{
  uint64_t v65 = v0;
  *(void *)(v0 + 304) = [objc_allocWithZone((Class)SFAuthenticationOptions) init];
  if (!String.count.getter())
  {
    id v8 = *(void **)(v0 + 208);
    uint64_t v9 = v8[3];
    uint64_t v10 = v8[4];
    sub_10026BB6C(v8, v9);
    (*(void (**)(uint64_t, uint64_t))(v10 + 56))(v9, v10);
    swift_bridgeObjectRelease();
    NSString v11 = String._bridgeToObjectiveC()();
    id v12 = (id)SFLocalizedStringForKey();

    if (v12)
    {
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v15 = 0;
    }
    *(void *)(v0 + 312) = v15;
    NSString v50 = String._bridgeToObjectiveC()();
    id v51 = (id)SFLocalizedStringForKey();

    if (v51)
    {
      uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v54 = v53;
    }
    else
    {
      uint64_t v52 = 0;
      uint64_t v54 = 0;
    }
    *(void *)(v0 + 320) = v54;
    uint64_t v55 = swift_task_alloc();
    *(void *)(v0 + 328) = v55;
    *(void *)uint64_t v55 = v0;
    *(void *)(v55 + 8) = sub_1006DBE70;
    *(unsigned char *)(v55 + 584) = 0;
    *(void *)(v55 + 544) = v54;
    *(void *)(v55 + 536) = v52;
    *(void *)(v55 + 528) = v15;
    *(void *)(v55 + 520) = v13;
    uint64_t v42 = (uint64_t)sub_10070F704;
    uint64_t v43 = 0;
    uint64_t v44 = 0;
    return _swift_task_switch(v42, v43, v44);
  }
  uint64_t v2 = *(void *)(v0 + 288);
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 280);
  static String.Encoding.utf8.getter();
  uint64_t v4 = String.data(using:allowLossyConversion:)();
  unint64_t v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v6 >> 60 == 15)
  {
    Class isa = 0;
  }
  else
  {
    sub_10025ADCC(v4, v6);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100250CC4(v4, v6);
  }
  unsigned __int8 v63 = (void *)(v0 + 64);
  uint64_t v62 = (long long *)(v0 + 104);
  *(void *)(v0 + 360) = v4;
  *(void *)(v0 + 368) = v6;
  [*(id *)(v0 + 304) setAuthorizationToken:isa];

  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v16 = *(void *)(v0 + 272);
  uint64_t v18 = *(void *)(v0 + 240);
  uint64_t v17 = *(void *)(v0 + 248);
  uint64_t v19 = *(void *)(v0 + 216);
  uint64_t v20 = type metadata accessor for Logger();
  sub_10000B47C(v20, (uint64_t)qword_10097F520);
  uint64_t v61 = *(void (**)(void))(v17 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v61)(v16, v19, v18);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v24 = *(void *)(v0 + 272);
  uint64_t v26 = *(void *)(v0 + 240);
  uint64_t v25 = *(void *)(v0 + 248);
  if (v23)
  {
    BOOL v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v64 = swift_slowAlloc();
    *(_DWORD *)BOOL v27 = 136315138;
    sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 184) = sub_100254634(v28, v29, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Got passcode, starting Lock pairing executor for sessionID %s", v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v25 + 8))(*(void *)(v0 + 272), *(void *)(v0 + 240));
  }

  uint64_t v30 = *(void *)(v0 + 256);
  uint64_t v31 = *(void *)(v0 + 240);
  uint64_t v32 = *(void *)(v0 + 248);
  uint64_t v58 = *(void *)(v0 + 232);
  uint64_t v59 = *(void **)(v0 + 304);
  int64_t v56 = *(char **)(v0 + 224);
  uint64_t v57 = *(void *)(v0 + 264);
  uint64_t v33 = *(void *)(v0 + 208);
  *(_OWORD *)unsigned __int8 v63 = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(void *)(v0 + 96) = 0;
  queue = *(NSObject **)&v56[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  v61();
  sub_100278C8C(v33, (uint64_t)v62);
  unint64_t v34 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  unint64_t v35 = (v30 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v36 = (v35 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v37 = swift_allocObject();
  *(void *)(v0 + 376) = v37;
  *(void *)(v37 + 16) = v63;
  *(void *)(v37 + 24) = v56;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v32 + 32))(v37 + v34, v57, v31);
  sub_1002AF688(v62, v37 + v35);
  *(void *)(v37 + v36) = v58;
  *(void *)(v37 + ((v36 + 15) & 0xFFFFFFFFFFFFFFF8)) = v59;
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = sub_100710E8C;
  *(void *)(v38 + 24) = v37;
  *(void *)(v0 + 48) = sub_1006562A4;
  *(void *)(v0 + 56) = v38;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_1006CDF68;
  *(void *)(v0 + 40) = &unk_1008E6BC0;
  Swift::Int v39 = _Block_copy((const void *)(v0 + 16));
  BOOL v40 = v56;
  id v41 = v59;
  swift_retain();
  swift_release();
  dispatch_sync(queue, v39);
  _Block_release(v39);
  LOBYTE(v34) = swift_isEscapingClosureAtFileLocation();
  uint64_t v42 = swift_release();
  if (v34)
  {
    __break(1u);
    return _swift_task_switch(v42, v43, v44);
  }
  uint64_t v45 = *(void *)(v0 + 88);
  if (v45)
  {
    sub_10026BB6C(v63, v45);
    *(_OWORD *)(v0 + 160) = 0u;
    *(void *)(v0 + 176) = 0;
    *(_OWORD *)(v0 + 144) = 0u;
    Swift::Int v46 = (void *)swift_task_alloc();
    *(void *)(v0 + 384) = v46;
    *Swift::Int v46 = v0;
    v46[1] = sub_1006DC5E4;
    return sub_1004F74C0(v0 + 144);
  }
  else
  {
    Swift::Int v48 = *(void **)(v0 + 304);
    sub_100250CB0(*(void *)(v0 + 360), *(void *)(v0 + 368));

    sub_10000A7E8((uint64_t)v63, &qword_100974F18);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v49 = *(uint64_t (**)(void))(v0 + 8);
    return v49();
  }
}

uint64_t sub_1006DBE70(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 336) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_1006DC540;
  }
  else
  {
    *(void *)(v6 + 344) = a2;
    *(void *)(v6 + 352) = a1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_1006DBFC8;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1006DBFC8()
{
  uint64_t v44 = v0;
  uint64_t v42 = (void *)(v0 + 64);
  id v41 = (long long *)(v0 + 104);
  sub_10025ADCC(*(void *)(v0 + 352), *(void *)(v0 + 344));
  unint64_t v2 = *(void *)(v0 + 344);
  uint64_t v1 = *(void *)(v0 + 352);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100250CC4(v1, v2);
  *(void *)(v0 + 360) = v1;
  *(void *)(v0 + 368) = v2;
  [*(id *)(v0 + 304) setAuthorizationToken:isa];

  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void *)(v0 + 272);
  uint64_t v5 = *(void *)(v0 + 240);
  uint64_t v6 = *(void *)(v0 + 248);
  uint64_t v7 = *(void *)(v0 + 216);
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000B47C(v8, (uint64_t)qword_10097F520);
  uint64_t v9 = *(void (**)(void))(v6 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v4, v7, v5);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 272);
  uint64_t v15 = *(void *)(v0 + 240);
  uint64_t v14 = *(void *)(v0 + 248);
  if (v12)
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315138;
    sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 184) = sub_100254634(v17, v18, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Got passcode, starting Lock pairing executor for sessionID %s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v14 + 8))(*(void *)(v0 + 272), *(void *)(v0 + 240));
  }

  uint64_t v19 = *(void *)(v0 + 256);
  uint64_t v21 = *(void *)(v0 + 240);
  uint64_t v20 = *(void *)(v0 + 248);
  uint64_t v38 = *(void *)(v0 + 232);
  Swift::Int v39 = *(void **)(v0 + 304);
  unint64_t v36 = *(char **)(v0 + 224);
  uint64_t v37 = *(void *)(v0 + 264);
  uint64_t v22 = *(void *)(v0 + 208);
  *(_OWORD *)uint64_t v42 = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(void *)(v0 + 96) = 0;
  queue = *(NSObject **)&v36[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  v9();
  sub_100278C8C(v22, (uint64_t)v41);
  unint64_t v23 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  unint64_t v24 = (v19 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_allocObject();
  *(void *)(v0 + 376) = v26;
  *(void *)(v26 + 16) = v42;
  *(void *)(v26 + 24) = v36;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v20 + 32))(v26 + v23, v37, v21);
  sub_1002AF688(v41, v26 + v24);
  *(void *)(v26 + v25) = v38;
  *(void *)(v26 + ((v25 + 15) & 0xFFFFFFFFFFFFFFF8)) = v39;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_100710E8C;
  *(void *)(v27 + 24) = v26;
  *(void *)(v0 + 48) = sub_1006562A4;
  *(void *)(v0 + 56) = v27;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_1006CDF68;
  *(void *)(v0 + 40) = &unk_1008E6BC0;
  uint64_t v28 = _Block_copy((const void *)(v0 + 16));
  unint64_t v29 = v36;
  id v30 = v39;
  swift_retain();
  swift_release();
  dispatch_sync(queue, v28);
  _Block_release(v28);
  LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v20)
  {
    __break(1u);
  }
  else
  {
    uint64_t v32 = *(void *)(v0 + 88);
    if (v32)
    {
      sub_10026BB6C(v42, v32);
      *(_OWORD *)(v0 + 160) = 0u;
      *(void *)(v0 + 176) = 0;
      *(_OWORD *)(v0 + 144) = 0u;
      uint64_t v33 = (void *)swift_task_alloc();
      *(void *)(v0 + 384) = v33;
      *uint64_t v33 = v0;
      v33[1] = sub_1006DC5E4;
      return sub_1004F74C0(v0 + 144);
    }
    else
    {
      unint64_t v34 = *(void **)(v0 + 304);
      sub_100250CB0(*(void *)(v0 + 360), *(void *)(v0 + 368));

      sub_10000A7E8((uint64_t)v42, &qword_100974F18);
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      unint64_t v35 = *(uint64_t (**)(void))(v0 + 8);
      return v35();
    }
  }
  return result;
}

uint64_t sub_1006DC540()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006DC5E4()
{
  uint64_t v1 = *v0 + 144;
  swift_task_dealloc();
  sub_10000A7E8(v1, (uint64_t *)&unk_1009778D8);
  return _swift_task_switch(sub_1006DC6F4, 0, 0);
}

uint64_t sub_1006DC6F4()
{
  uint64_t v1 = (void *)v0[38];
  sub_100250CB0(v0[45], v0[46]);

  sub_10000A7E8((uint64_t)(v0 + 8), &qword_100974F18);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1006DC7AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  void (*v28)(void *__return_ptr, char *, char *, uint64_t);
  void (*v29)(void *);
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  char *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned char v43[40];
  void v44[6];

  uint64_t v7 = v6;
  uint64_t v37 = a2;
  uint64_t v38 = a5;
  unint64_t v36 = a4;
  BOOL v40 = a6;
  id v41 = a3;
  Swift::Int v39 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  BOOL v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SDAuthenticationCommonOperationInput();
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchPredicate();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (uint64_t *)((char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = *(void **)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *uint64_t v19 = v20;
  (*(void (**)(void *, void, uint64_t))(v17 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v16);
  id v21 = v20;
  LOBYTE(v20) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v17 + 8))(v19, v16);
  if (v20)
  {
    uint64_t v23 = v36 & 1;
    unint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_commonContextGenerator];
    v44[3] = ObjectType;
    v44[4] = &off_1008E6078;
    v44[0] = v7;
    swift_retain();
    unint64_t v25 = v7;
    uint64_t v26 = v15;
    unint64_t v35 = v15;
    uint64_t v27 = v39;
    v24(v39, v37, v41, v23, v44);
    swift_release();
    sub_10024D338((uint64_t)v44);
    uint64_t v28 = *(void (**)(void *__return_ptr, char *, char *, uint64_t))&v25[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_flowGenerator];
    swift_retain();
    v28(v44, v26, v25, v38);
    swift_release();
    unint64_t v29 = *(void (**)(void *))&v25[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessionGenerator];
    swift_retain();
    id v30 = v40;
    v29(v44);
    swift_release();
    uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v31(v12, v27, v9);
    uint64_t v32 = &v25[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessionAuthTypes];
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v42 = *(void *)v32;
    *(void *)uint64_t v32 = 0x8000000000000000;
    sub_1005937FC(v41, (uint64_t)v12, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v32 = v42;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    swift_endAccess();
    v31(v12, v27, v9);
    sub_100278C8C(v30, (uint64_t)v43);
    swift_beginAccess();
    sub_100467720((uint64_t)v43, (uint64_t)v12);
    swift_endAccess();
    sub_10024D338((uint64_t)v44);
    return sub_10070EE60((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006DCBA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v35 = a5;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *(void **)((char *)v7 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  id v18 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if (v17)
  {
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v7
                                                                             + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessionGenerator);
    swift_retain();
    v19(a1, a2, a3, a4, v35);
    swift_release();
    uint64_t v41 = ObjectType;
    uint64_t v42 = &off_1008E6078;
    v40[0] = v7;
    uint64_t v20 = a6[3];
    uint64_t v21 = a6[4];
    sub_1002AF758((uint64_t)a6, v20);
    uint64_t v22 = *(void *)(*(void *)(v21 + 8) + 8);
    uint64_t v23 = *(void (**)(void *, uint64_t, uint64_t))(v22 + 16);
    unint64_t v24 = v7;
    v23(v40, v20, v22);
    sub_100278C8C((uint64_t)a6, (uint64_t)v40);
    uint64_t v7 = (void **)((char *)v24 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions);
    swift_beginAccess();
    a6 = *v7;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char *v7 = a6;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  a6 = sub_100253AF8(0, a6[2] + 1, 1, a6);
  char *v7 = a6;
LABEL_3:
  unint64_t v27 = a6[2];
  unint64_t v26 = a6[3];
  if (v27 >= v26 >> 1)
  {
    a6 = sub_100253AF8((void *)(v26 > 1), v27 + 1, 1, a6);
    char *v7 = a6;
  }
  uint64_t v28 = sub_1002AF758((uint64_t)v40, v41);
  __chkstk_darwin(v28);
  id v30 = (uint64_t *)((char *)&v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v31 + 16))(v30);
  uint64_t v32 = *v30;
  uint64_t v38 = type metadata accessor for SDAuthenticationPairingLockSession();
  Swift::Int v39 = &off_1008D7BA8;
  *(void *)&long long v37 = v32;
  a6[2] = v27 + 1;
  sub_1002AF688(&v37, (uint64_t)&a6[5 * v27 + 4]);
  sub_10024D338((uint64_t)v40);
  return swift_endAccess();
}

void sub_1006DD050(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  void (*v40)(long long *__return_ptr, uint64_t, unint64_t);
  id v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  void *v46;
  Class v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  unsigned int v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  id v55;
  uint64_t v56;
  void *v57;
  Class v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  unint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  long long v79;
  uint64_t v80;
  _UNKNOWN **v81;
  long long v82;
  uint64_t v83;
  uint64_t v84[6];

  uint64_t v5 = v4;
  unint64_t v78 = a4;
  uint64_t v9 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v9 - 8);
  uint64_t v74 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v76 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v75 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *(void **)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  id v18 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if (v17)
  {
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v19 = type metadata accessor for Logger();
  uint64_t v20 = sub_10000B47C(v19, (uint64_t)qword_10097F520);
  swift_bridgeObjectRetain_n();
  int64_t v77 = v20;
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    char v71 = swift_slowAlloc();
    v84[0] = v71;
    *(_DWORD *)uint64_t v23 = 136315394;
    unint64_t v72 = a2;
    id v24 = (id)SFAuthenticationTypeToString();
    BOOL v73 = v5;
    id v25 = v24;
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = v11;
    uint64_t v28 = a1;
    unint64_t v30 = v29;

    *(void *)&uint64_t v82 = sub_100254634(v26, v30, v84);
    a2 = v72;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a1 = v28;
    uint64_t v11 = v27;
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&uint64_t v82 = sub_100254634(a2, a3, v84);
    uint64_t v5 = v73;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Requested enablement of %s for device: %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v31 = sub_100508E74(a1);
  if ((unint64_t)(v31 - 3) >= 0xC)
  {
    uint64_t v32 = a2;
    unint64_t v33 = a3;
    id v34 = sub_10070E650(0x13u, 0, 0xE000000000000000);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      unint64_t v36 = (void *)Strong;
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      [v36 manager:v5 didFailToEnableDeviceFor:isa error:v34];
      swift_unknownObjectRelease();

      id v34 = isa;
    }

    a3 = v33;
    a2 = v32;
  }
  uint64_t v38 = *(uint64_t (**)(uint64_t))(v5
                                          + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_isBluetoothEnabled);
  uint64_t v39 = swift_retain();
  LOBYTE(v38) = v38(v39);
  swift_release();
  if ((v38 & 1) == 0)
  {
    Swift::Int v48 = Logger.logObject.getter();
    uint64_t v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      NSString v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Bluetooth is disabled", v50, 2u);
      swift_slowDealloc();
    }

    id v51 = 17;
    goto LABEL_26;
  }
  BOOL v40 = *(void (**)(long long *__return_ptr, uint64_t, unint64_t))(v5
                                                                                 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsDeviceForUniqueID);
  swift_retain();
  v40(&v82, a2, a3);
  swift_release();
  if (!v83)
  {
    sub_10000A7E8((uint64_t)&v82, &qword_10097BB50);
    swift_bridgeObjectRetain_n();
    uint64_t v52 = Logger.logObject.getter();
    uint64_t v53 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      v84[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v54 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)&uint64_t v82 = sub_100254634(a2, a3, v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "IDS device not found for SFAutoUnlock device: %s. Is the device in the same iCloud account?", v54, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    id v51 = 1;
LABEL_26:
    uint64_t v55 = sub_10070E650(v51, 0, 0xE000000000000000);
    int64_t v56 = swift_unknownObjectWeakLoadStrong();
    if (v56)
    {
      uint64_t v57 = (void *)v56;
      uint64_t v58 = UUID._bridgeToObjectiveC()().super.isa;
      [v57 manager:v5 didFailToEnableDeviceFor:v58 error:v55];
      swift_unknownObjectRelease();
    }
    else
    {
    }
    return;
  }
  sub_1002AF688(&v82, (uint64_t)v84);
  if ((unint64_t)(v31 - 9) <= 5)
  {
    if (sub_100611C18(3u))
    {
      uint64_t v60 = v75;
      uint64_t v59 = v76;
      (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v75, v78, v11);
      uint64_t v61 = v11;
      uint64_t v62 = Logger.logObject.getter();
      unsigned __int8 v63 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v62, v63))
      {
        uint64_t v64 = (uint8_t *)swift_slowAlloc();
        *(void *)&uint64_t v82 = swift_slowAlloc();
        *(_DWORD *)uint64_t v64 = 136315138;
        BOOL v73 = v5;
        sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v65 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)&uint64_t v79 = sub_100254634(v65, v66, (uint64_t *)&v82);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
        _os_log_impl((void *)&_mh_execute_header, v62, v63, "Starting PairingKeySession executor for sessionID %s", v64, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
      }

      uint64_t v67 = [objc_allocWithZone((Class)SFAuthenticationOptions) init];
      uint64_t v80 = sub_10000B740(0, &qword_10097F7D0);
      uint64_t v81 = &off_1008DE258;
      *(void *)&uint64_t v79 = v67;
      sub_1006DC7AC(v78, (uint64_t)v84, 9, 1, (uint64_t)&v79, (uint64_t)&v82);
      sub_10000A7E8((uint64_t)&v79, &qword_10097F7D8);
      unint64_t v68 = type metadata accessor for TaskPriority();
      unint64_t v69 = (uint64_t)v74;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v74, 1, 1, v68);
      sub_100278C8C((uint64_t)&v82, (uint64_t)&v79);
      unint64_t v70 = swift_allocObject();
      *(void *)(v70 + 16) = 0;
      *(void *)(v70 + 24) = 0;
      sub_1002AF688(&v79, v70 + 32);
      sub_10028CFA8(v69, (uint64_t)&unk_10097FA50, v70);
      swift_release();
      sub_10024D338((uint64_t)&v82);
    }
    else
    {
      uint64_t v41 = sub_10070E650(1u, 0, 0xE000000000000000);
      uint64_t v42 = Logger.logObject.getter();
      uint64_t v43 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v44 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v44 = 0;
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "requestEnablement is only applicable for Key device", v44, 2u);
        swift_slowDealloc();
      }

      uint64_t v45 = swift_unknownObjectWeakLoadStrong();
      if (v45)
      {
        Swift::Int v46 = (void *)v45;
        int64_t v47 = UUID._bridgeToObjectiveC()().super.isa;
        [v46 manager:v5 didFailToEnableDeviceFor:v47 error:v41];

        swift_unknownObjectRelease();
      }
    }
  }
  sub_10024D338((uint64_t)v84);
}

uint64_t sub_1006DDB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 56) = a4;
  return _swift_task_switch(sub_1006DDB40, 0, 0);
}

uint64_t sub_1006DDB40()
{
  sub_10026BB6C(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24));
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1006DDBF4;
  return sub_1004F74C0(v0 + 16);
}

uint64_t sub_1006DDBF4()
{
  uint64_t v1 = *v0 + 16;
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_10000A7E8(v1, (uint64_t *)&unk_1009778D8);
  unint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

void sub_1006DDD14(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  void (*v36)(long long *__return_ptr, uint64_t, void *);
  uint64_t v37;
  unint64_t v38;
  char *v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  void *v49;
  Class v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  BOOL v56;
  uint8_t *v57;
  uint64_t v58;
  void *v59;
  unint64_t v60;
  char *v61;
  char *v62;
  char v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  NSObject *v69;
  os_log_type_t v70;
  BOOL v71;
  uint8_t *v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  int v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t Strong;
  void *v97;
  Class isa;
  void *v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint8_t *v103;
  char v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  NSObject *v108;
  os_log_type_t v109;
  BOOL v110;
  uint8_t *v111;
  NSObject *v112;
  os_log_type_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  void *v118;
  uint8_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  long long v131;
  uint64_t v132;
  _UNKNOWN **v133;
  long long v134;
  uint64_t v135;
  uint64_t v136[6];

  uint64_t v5 = v4;
  int64_t v129 = a4;
  int64_t v130 = a1;
  uint64_t v125 = type metadata accessor for SFPlatform();
  uint64_t v124 = *(char **)(v125 - 8);
  __chkstk_darwin(v125);
  int64_t v126 = (char *)&v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v128 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v127 = (char *)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchPredicate();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t *)((char *)&v120 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v18 = *(void **)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *uint64_t v17 = v18;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  id v19 = v18;
  char v20 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if (v20)
  {
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v21 = type metadata accessor for Logger();
  uint64_t v22 = sub_10000B47C(v21, (uint64_t)qword_10097F520);
  swift_bridgeObjectRetain_n();
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  BOOL v25 = os_log_type_enabled(v23, v24);
  char v123 = v12;
  if (v25)
  {
    uint64_t v26 = swift_slowAlloc();
    BOOL v121 = swift_slowAlloc();
    v136[0] = v121;
    *(_DWORD *)uint64_t v26 = 136315394;
    int64_t v120 = v26 + 4;
    id v27 = (id)SFAuthenticationTypeToString();
    char v122 = v22;
    uint64_t v28 = v11;
    uint64_t v29 = a2;
    id v30 = v27;
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v32 = (unint64_t)a3;
    unint64_t v33 = v5;
    unint64_t v35 = v34;

    a2 = v29;
    uint64_t v11 = v28;
    *(void *)&int64_t v134 = sub_100254634(v31, v35, v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v5 = v33;
    a3 = (void *)v32;
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&int64_t v134 = sub_100254634(a2, v32, v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Asked to disable %s for IDSDeviceID: %s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  unint64_t v36 = *(void (**)(long long *__return_ptr, uint64_t, void *))&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsDeviceForUniqueID];
  swift_retain();
  v36(&v134, a2, a3);
  swift_release();
  if (v135)
  {
    sub_1002AF688(&v134, (uint64_t)v136);
    long long v37 = sub_100508E74(v130);
    uint64_t v38 = v37;
    uint64_t v39 = v127;
    BOOL v40 = v128;
    if ((unint64_t)(v37 - 3) >= 6)
    {
      if ((unint64_t)(v37 - 9) >= 6)
      {
        if (v37 == 1)
        {
          BOOL v73 = Logger.logObject.getter();
          uint64_t v74 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v73, v74))
          {
            uint64_t v75 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v75 = 0;
            _os_log_impl((void *)&_mh_execute_header, v73, v74, "Pairing for siri is tied to Auto Unlock. Use SFAutoUnlockManager instead", v75, 2u);
            swift_slowDealloc();
          }
        }
        else
        {
          uint64_t v91 = Logger.logObject.getter();
          uint64_t v92 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v91, v92))
          {
            uint64_t v93 = (uint8_t *)swift_slowAlloc();
            *(void *)&int64_t v134 = swift_slowAlloc();
            *(_DWORD *)uint64_t v93 = 136315138;
            uint64_t v94 = sub_10050938C();
            *(void *)&NSString v131 = sub_100254634(v94, v95, (uint64_t *)&v134);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v91, v92, "%s does not support pairing. There is nothing to unpair.", v93, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
        }
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (!Strong) {
          goto LABEL_65;
        }
        unint64_t v97 = (void *)Strong;
        Class isa = UUID._bridgeToObjectiveC()().super.isa;
        unint64_t v99 = sub_10070E650(1u, 0, 0xE000000000000000);
        [v97 manager:v5 didFailToDisableDeviceFor:isa error:v99];

        goto LABEL_64;
      }
      uint64_t v41 = sub_100611C18(3u);
      if (v41 != 2)
      {
        uint64_t v42 = (v41 & 1) != 0 ? 12 : 13;
        uint64_t v43 = sub_100611C18(3u);
        if (v43 != 2)
        {
          LODWORD(v130) = v43 & 1;
          unint64_t v78 = v123;
          (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v39, v129, v123);
          uint64_t v79 = Logger.logObject.getter();
          uint64_t v80 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v79, v80))
          {
            uint64_t v81 = swift_slowAlloc();
            int64_t v126 = (char *)v42;
            uint64_t v82 = v81;
            int64_t v83 = swift_slowAlloc();
            uint64_t v125 = (uint64_t)v5;
            uint64_t v124 = v11;
            *(void *)&int64_t v134 = v83;
            *(_DWORD *)uint64_t v82 = 136315650;
            sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
            unint64_t v84 = dispatch thunk of CustomStringConvertible.description.getter();
            *(void *)&NSString v131 = sub_100254634(v84, v85, (uint64_t *)&v134);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v78);
            *(_WORD *)(v82 + 12) = 2080;
            uint64_t v86 = v130;
            if (v130) {
              id v87 = 7955787;
            }
            else {
              id v87 = 1801678668;
            }
            if (v130) {
              unint64_t v88 = 0xE300000000000000;
            }
            else {
              unint64_t v88 = 0xE400000000000000;
            }
            *(void *)&NSString v131 = sub_100254634(v87, v88, (uint64_t *)&v134);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            *(_WORD *)(v82 + 22) = 2080;
            int64_t v89 = sub_10050938C();
            *(void *)&NSString v131 = sub_100254634(v89, v90, (uint64_t *)&v134);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v79, v80, "Starting PairingDisable session executor for sessionID %s, role %s, disableType %s", (uint8_t *)v82, 0x20u);
            swift_arrayDestroy();
            uint64_t v11 = v124;
            swift_slowDealloc();
            uint64_t v42 = (uint64_t)v126;
            swift_slowDealloc();
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v78);

            uint64_t v86 = v130;
          }
          unint64_t v100 = [objc_allocWithZone((Class)SFAuthenticationOptions) init];
          uint64_t v132 = sub_10000B740(0, &qword_10097F7D0);
          uint64_t v133 = &off_1008DE258;
          *(void *)&NSString v131 = v100;
          sub_1006DC7AC(v129, (uint64_t)v136, v42, v86, (uint64_t)&v131, (uint64_t)&v134);
          sub_10000A7E8((uint64_t)&v131, &qword_10097F7D8);
          long long v101 = type metadata accessor for TaskPriority();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 56))(v11, 1, 1, v101);
          sub_100278C8C((uint64_t)&v134, (uint64_t)&v131);
          unint64_t v102 = swift_allocObject();
          *(void *)(v102 + 16) = 0;
          *(void *)(v102 + 24) = 0;
          sub_1002AF688(&v131, v102 + 32);
          sub_10028CFA8((uint64_t)v11, (uint64_t)&unk_10097F7E8, v102);
          swift_release();
          sub_10024D338((uint64_t)&v134);
          goto LABEL_65;
        }
      }
    }
    uint64_t v44 = sub_1006B14B4(a2, a3, v38);
    uint64_t v53 = v52;
    int64_t v130 = v44;
    uint64_t v54 = Logger.logObject.getter();
    uint64_t v55 = static os_log_type_t.info.getter();
    int64_t v56 = os_log_type_enabled(v54, v55);
    uint64_t v128 = v53;
    if (v56)
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v57 = 134217984;
      *(void *)&int64_t v134 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "Created disable message with type %lu", v57, 0xCu);
      uint64_t v53 = v128;
      swift_slowDealloc();
    }

    sub_1006DF18C(v130, v53, (uint64_t)v136, 8, v38);
    uint64_t v58 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v11, 1, 1, v58);
    sub_100278C8C((uint64_t)v136, (uint64_t)&v134);
    uint64_t v59 = (void *)swift_allocObject();
    v59[2] = 0;
    uint64_t v59[3] = 0;
    v59[4] = v5;
    v59[5] = v38;
    sub_1002AF688(&v134, (uint64_t)(v59 + 6));
    uint64_t v60 = v53;
    uint64_t v61 = v5;
    sub_10028CAC4((uint64_t)v11, (uint64_t)&unk_10097F7C8, (uint64_t)v59);
    swift_release();
    if (v38 == 5)
    {
      uint64_t v127 = v61;
      uint64_t v62 = v126;
      static SFPlatform.macOS.getter();
      unsigned __int8 v63 = static SFPlatform.isPlatform(_:)();
      uint64_t v64 = (void (*)(char *, uint64_t))*((void *)v124 + 1);
      uint64_t v65 = v125;
      v64(v62, v125);
      if (v63)
      {
        uint64_t v66 = sub_1006DF990(2, "eligible iPhone devices: %s");
        sub_1006CD690(v66, (SEL *)&selRef_deviceEnabledAsKeyForIDSDeviceID_);
        unint64_t v68 = v67;
        swift_bridgeObjectRelease();
        unint64_t v69 = Logger.logObject.getter();
        unint64_t v70 = static os_log_type_t.default.getter();
        char v71 = os_log_type_enabled(v69, v70);
        if (v68)
        {
          if (v71)
          {
            unint64_t v72 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)unint64_t v72 = 0;
            _os_log_impl((void *)&_mh_execute_header, v69, v70, "Found a device that is still unlockable by this mac, leaving enabled as true", v72, 2u);
            swift_slowDealloc();
          }
        }
        else
        {
          if (v71)
          {
            uint64_t v103 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v103 = 0;
            _os_log_impl((void *)&_mh_execute_header, v69, v70, "Found no phones unlockable by this mac, reporting change to observers", v103, 2u);
            swift_slowDealloc();
          }

          sub_1006CD9D4();
        }
        uint64_t v62 = v126;
      }
      static SFPlatform.iOS.getter();
      BOOL v104 = static SFPlatform.isPlatform(_:)();
      v64(v62, v65);
      if ((v104 & 1) == 0)
      {
        sub_100250CC4(v130, v128);
        uint64_t v61 = v127;
        goto LABEL_59;
      }
      uint64_t v61 = v127;
      int64_t v105 = sub_1006DF990(4, "eligible mac devices: %s");
      BOOL v106 = sub_100707E2C(0, v105);
      swift_bridgeObjectRelease();
      os_log_type_t v107 = v106[2];
      swift_bridgeObjectRelease();
      uint64_t v108 = Logger.logObject.getter();
      uint64_t v109 = static os_log_type_t.default.getter();
      unint64_t v110 = os_log_type_enabled(v108, v109);
      if (v107)
      {
        if (v110)
        {
          uint64_t v111 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v111 = 0;
          _os_log_impl((void *)&_mh_execute_header, v108, v109, "Found a mac that can unlock this phone, leaving enabled as true", v111, 2u);
          swift_slowDealloc();
        }
        sub_100250CC4(v130, v128);

        goto LABEL_59;
      }
      if (v110)
      {
        int64_t v119 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int64_t v119 = 0;
        _os_log_impl((void *)&_mh_execute_header, v108, v109, "Found no macs able to unlock this phone, reporting change to observers", v119, 2u);
        swift_slowDealloc();
      }

      sub_1006CD9D4();
      uint64_t v76 = v130;
      int64_t v77 = v128;
    }
    else
    {
      uint64_t v76 = v130;
      int64_t v77 = v60;
    }
    sub_100250CC4(v76, v77);
LABEL_59:
    swift_bridgeObjectRetain_n();
    unint64_t v112 = Logger.logObject.getter();
    unint64_t v113 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v112, v113))
    {
      unint64_t v114 = swift_slowAlloc();
      *(void *)&int64_t v134 = swift_slowAlloc();
      *(_DWORD *)unint64_t v114 = 136315394;
      unint64_t v115 = sub_10050938C();
      *(void *)&NSString v131 = sub_100254634(v115, v116, (uint64_t *)&v134);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v114 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&NSString v131 = sub_100254634(a2, (unint64_t)a3, (uint64_t *)&v134);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v112, v113, "Successfully disabled %s for IDSdeviceID: %s", (uint8_t *)v114, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v117 = swift_unknownObjectWeakLoadStrong();
    if (!v117) {
      goto LABEL_65;
    }
    unint64_t v118 = (void *)v117;
    unint64_t v99 = UUID._bridgeToObjectiveC()().super.isa;
    [v118 manager:v61 didDisableAuthenticationFor:v99];
LABEL_64:
    swift_unknownObjectRelease();

LABEL_65:
    sub_10024D338((uint64_t)v136);
    return;
  }
  sub_10000A7E8((uint64_t)&v134, &qword_10097BB50);
  swift_bridgeObjectRetain_n();
  uint64_t v45 = Logger.logObject.getter();
  Swift::Int v46 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v45, v46))
  {
    int64_t v47 = (uint8_t *)swift_slowAlloc();
    v136[0] = swift_slowAlloc();
    *(_DWORD *)int64_t v47 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)&int64_t v134 = sub_100254634(a2, (unint64_t)a3, v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "IDS device not found for IDSDeviceID: %s. Is the device in the same iCloud account?", v47, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  Swift::Int v48 = swift_unknownObjectWeakLoadStrong();
  if (v48)
  {
    uint64_t v49 = (void *)v48;
    NSString v50 = UUID._bridgeToObjectiveC()().super.isa;
    id v51 = sub_10070E650(1u, 0, 0xE000000000000000);
    [v49 manager:v5 didFailToDisableDeviceFor:v50 error:v51];
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1006DF0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 56) = a4;
  return _swift_task_switch(sub_1006DF0D8, 0, 0);
}

uint64_t sub_1006DF0D8()
{
  sub_10026BB6C(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24));
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10071342C;
  return sub_1004F74C0(v0 + 16);
}

uint64_t sub_1006DF18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000B47C(v10, (uint64_t)qword_10097F520);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    unsigned int v20 = a4;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    char v14 = sub_100508B74(a5);
    unint64_t v15 = 0xEB00000000746E65;
    uint64_t v16 = 0x674179627261656ELL;
    switch(v14)
    {
      case 1:
        unint64_t v15 = 0xE800000000000000;
        uint64_t v16 = 0x6C61636F4C736469;
        break;
      case 2:
        uint64_t v16 = 0x7265746E49736469;
        unint64_t v15 = 0xEB0000000074656ELL;
        break;
      case 3:
        unint64_t v15 = 0xE900000000000054;
        uint64_t v16 = 0x4274726F70706172;
        break;
      case 4:
        unint64_t v15 = 0xEB000000004C4457;
        uint64_t v16 = 0x4174726F70706172;
        break;
      case 5:
        unint64_t v15 = 0x80000001007B5F90;
        uint64_t v16 = 0xD000000000000010;
        break;
      case 6:
        unint64_t v15 = 0xED000068746F6F74;
        uint64_t v16 = 0x65756C4265726F63;
        break;
      default:
        break;
    }
    sub_100254634(v16, v15, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Using transport type %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a4 = v20;
  }
  else
  {
  }
  char v17 = sub_100508B74(a5);
  unint64_t v18 = sub_1005EA6AC(a1, a2, a3, a4, v17);
  return v18 | ((HIDWORD(v18) & 1) << 32);
}

uint64_t sub_1006DF480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[8] = a5;
  v6[9] = a6;
  v6[7] = a4;
  uint64_t v7 = type metadata accessor for ContinuousClock();
  v6[10] = v7;
  v6[11] = *(void *)(v7 - 8);
  v6[12] = swift_task_alloc();
  return _swift_task_switch(sub_1006DF544, 0, 0);
}

uint64_t sub_1006DF544()
{
  ContinuousClock.init()();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1006DF60C;
  return v3(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_1006DF60C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 96);
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_1006DF92C;
  }
  else {
    uint64_t v5 = sub_1006DF77C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1006DF77C()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[9];
  uint64_t v3 = *(void *)(v0[7] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
  char v4 = sub_100508B74(v0[8]);
  sub_100278C8C(v2, (uint64_t)(v0 + 2));
  uint64_t v5 = sub_1005EA4B4(v4, (uint64_t)(v0 + 2));
  uint64_t v7 = v6;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v7 + 56))(ObjectType, v7);
  uint64_t v9 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_transportLock);
  uint64_t v10 = (void *)swift_task_alloc();
  long long v10[2] = v5;
  v10[3] = v7;
  v10[4] = v0 + 2;
  v10[5] = v3;
  uint64_t v11 = swift_task_alloc();
  *(void *)(v11 + 16) = sub_10045A89C;
  *(void *)(v11 + 24) = v10;
  os_unfair_lock_lock(v9 + 4);
  sub_1002CEA38(v12);
  if (v1)
  {
    os_unfair_lock_unlock(v9 + 4);
    return swift_task_dealloc();
  }
  else
  {
    os_unfair_lock_unlock(v9 + 4);
    swift_unknownObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10000A7E8((uint64_t)(v0 + 2), &qword_10097BB50);
    swift_task_dealloc();
    char v14 = (uint64_t (*)(void))v0[1];
    return v14();
  }
}

uint64_t sub_1006DF92C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006DF990(uint64_t a1, const char *a2)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v2
                                         + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_autoUnlockEligibleDevices);
  swift_retain();
  uint64_t v6 = v5(a1);
  swift_release();
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000B47C(v7, (uint64_t)qword_10097F520);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    sub_10000B740(0, &qword_10096B3E8);
    sub_100361188();
    swift_bridgeObjectRetain();
    uint64_t v11 = Set.description.getter();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    sub_100254634(v11, v13, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, a2, v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v6;
}

void sub_1006DFBD0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v58 = a4;
  uint64_t v60 = a1;
  uint64_t v61 = a2;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v11 - 8);
  unint64_t v13 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = sub_10000B47C(v14, (uint64_t)qword_10097F520);
  swift_bridgeObjectRetain_n();
  uint64_t v59 = v15;
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v56 = v9;
  uint64_t v57 = v13;
  if (v18)
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v55 = v7;
    v53[1] = v20;
    v67[0] = v20;
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v54 = v8;
    uint64_t v21 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v22 = (id)SFAuthenticationTypeToString();
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    os_log_type_t v24 = v5;
    unint64_t v26 = v25;

    uint64_t v10 = v21;
    *(void *)&long long v64 = sub_100254634(v23, v26, v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v5 = v24;
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&long long v64 = sub_100254634(v61, a3, v67);
    uint64_t v8 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Asked to check canAuthenticate %s for device: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    uint64_t v7 = v55;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  id v27 = [self sharedTransport];
  if (v27)
  {
    uint64_t v28 = v27;
    NSString v29 = String._bridgeToObjectiveC()();
    id v30 = [v28 idsDeviceForUniqueID:v29];

    if (v30)
    {
      uint64_t v31 = sub_100508E74(v60);
      if ((unint64_t)(v31 - 9) <= 5)
      {
        uint64_t v32 = v31;
        char v33 = sub_100611C18(3u);
        if (v33 != 2 && (v33 & 1) == 0)
        {
          uint64_t v65 = sub_10000B740(0, &qword_10097BB60);
          uint64_t v66 = &off_1008E2510;
          uint64_t v63 = 0;
          *(void *)&long long v64 = v30;
          memset(v62, 0, sizeof(v62));
          id v34 = v30;
          uint64_t v35 = v58;
          sub_1006DC7AC(v58, (uint64_t)&v64, 14, 0, (uint64_t)v62, (uint64_t)v67);
          sub_10000A7E8((uint64_t)v62, &qword_10097F7D8);
          sub_10024D338((uint64_t)&v64);
          uint64_t v36 = type metadata accessor for TaskPriority();
          uint64_t v37 = (uint64_t)v57;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v57, 1, 1, v36);
          sub_100278C8C((uint64_t)v67, (uint64_t)&v64);
          (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v35, v7);
          unint64_t v38 = (*(unsigned __int8 *)(v8 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
          uint64_t v39 = (char *)swift_allocObject();
          *((void *)v39 + 2) = 0;
          *((void *)v39 + 3) = 0;
          sub_1002AF688(&v64, (uint64_t)(v39 + 32));
          *((void *)v39 + 9) = v32;
          *((void *)v39 + 10) = v5;
          (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v39[v38], v10, v7);
          id v40 = v5;
          sub_10028CFA8(v37, (uint64_t)&unk_10097FA40, (uint64_t)v39);
          swift_release();

          sub_10024D338((uint64_t)v67);
          return;
        }
      }
      id v41 = sub_10070E650(1u, 0, 0xE000000000000000);
      uint64_t v42 = Logger.logObject.getter();
      os_log_type_t v43 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v44 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v44 = 0;
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "canAuthenticate is only applicable for Lock device", v44, 2u);
        swift_slowDealloc();
      }

      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        Swift::Int v46 = (void *)Strong;
        v47.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
        [v46 manager:v5 didFailToEnableDeviceFor:v47.super.isa error:v41];

LABEL_21:
        swift_unknownObjectRelease();

        return;
      }
    }
    else
    {
      swift_bridgeObjectRetain_n();
      Swift::Int v48 = Logger.logObject.getter();
      uint64_t v49 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v48, (os_log_type_t)v49))
      {
        NSString v50 = (uint8_t *)swift_slowAlloc();
        v67[0] = swift_slowAlloc();
        *(_DWORD *)NSString v50 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)&long long v64 = sub_100254634(v61, a3, v67);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v48, (os_log_type_t)v49, "IDS device not found for SFAutoUnlock device: %s. Is the device in the same iCloud account?", v50, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      id v41 = sub_10070E650(1u, 0, 0xE000000000000000);
      uint64_t v51 = swift_unknownObjectWeakLoadStrong();
      if (v51)
      {
        uint64_t v52 = (void *)v51;
        v47.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
        [v52 manager:v5 didFailToEnableDeviceFor:v47.super.isa error:v41];
        goto LABEL_21;
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1006E035C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  return _swift_task_switch(sub_1006E0380, 0, 0);
}

uint64_t sub_1006E0380()
{
  sub_10026BB6C(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24));
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1006E0434;
  return sub_1004F74C0(v0 + 16);
}

uint64_t sub_1006E0434()
{
  uint64_t v1 = *v0 + 16;
  swift_task_dealloc();
  sub_10000A7E8(v1, (uint64_t *)&unk_1009778D8);
  return _swift_task_switch(sub_1006E0544, 0, 0);
}

uint64_t sub_1006E0544()
{
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097F520);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    char v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Started canAuthenticate/key check session", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[8];

  id v6 = [self defaultCenter];
  [v6 postNotificationName:@"SDAuthenticationSessionStarted" object:0];

  if (v5 != 4)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v8 = (void *)Strong;
      uint64_t v9 = v0[9];
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      [v8 manager:v9 didStartAuthenticationFor:isa];
      swift_unknownObjectRelease();
    }
  }
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1006E070C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, char *))
{
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  id v16 = a1;
  a6(a3, v13, v15, v12);
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_1006E0838(uint64_t a1, char *a2, void *a3)
{
  void (*v64)(long long *__return_ptr, uint64_t, unint64_t);
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  int64_t v68;
  BOOL v69;
  char *v70;
  char v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  int v74;
  int v75;
  int IsRealityDevice;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  id v80;
  NSString v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  id v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  char *v89;
  char v90;
  uint64_t v91;
  int v92;
  int v93;
  NSObject *v94;
  os_log_type_t v95;
  uint8_t *v96;
  os_log_type_t v97;
  uint8_t *v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  unsigned __int8 v115;
  uint64_t v116;
  os_log_type_t v117;
  uint8_t *v118;
  uint64_t v119;
  void *v120;
  id v121;
  NSObject *v122;
  os_log_type_t v123;
  uint8_t *v124;
  id v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  id v137;
  char *v138;
  uint64_t v139;
  char *v140;
  id v141;
  void (*v142)(char *, char *, uint64_t);
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t ObjectType;
  uint64_t v148;
  char *v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  id v157;
  unint64_t v158;
  uint64_t v159;
  id v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  long long v164;
  long long v165;
  _UNKNOWN **v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;

  char v4 = v3;
  uint64_t v160 = a3;
  char v162 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v6 - 8);
  uint64_t v152 = (uint64_t)&v139 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A844(&qword_10097FA10);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v150 = (char *)&v139 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = v11;
  __chkstk_darwin(v10);
  v151 = (char *)&v139 - v12;
  v156 = type metadata accessor for SFPlatform();
  uint64_t v153 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  uint64_t v155 = (char *)&v139 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = type metadata accessor for UUID();
  uint64_t v159 = *(void *)(v161 - 8);
  uint64_t v14 = __chkstk_darwin(v161);
  uint64_t v149 = (char *)&v139 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v145 = v15;
  __chkstk_darwin(v14);
  os_log_type_t v17 = (char *)&v139 - v16;
  uint64_t v18 = type metadata accessor for DispatchPredicate();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (uint64_t *)((char *)&v139 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v22 = *(void **)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *uint64_t v21 = v22;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
  id v23 = v22;
  char v24 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v19 + 8))(v21, v18);
  if (v24)
  {
    uint64_t v141 = v23;
    uint64_t v144 = v9;
    v148 = v8;
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v25 = type metadata accessor for Logger();
  uint64_t v26 = sub_10000B47C(v25, (uint64_t)qword_10097F520);
  uint64_t v27 = v159;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v159 + 16);
  uint64_t v29 = v161;
  uint64_t v143 = v159 + 16;
  id v142 = v28;
  v28(v17, a2, v161);
  id v30 = v160;
  id v31 = v160;
  v158 = v26;
  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    v157 = v31;
    int v154 = a2;
    uint64_t v140 = v4;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v35 = (void *)swift_slowAlloc();
    uint64_t v139 = swift_slowAlloc();
    v167 = v139;
    *(_DWORD *)uint64_t v34 = 136315650;
    id v36 = (id)SFAuthenticationTypeToString();
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v39 = v38;

    *(void *)&uint64_t v164 = sub_100254634(v37, v39, &v167);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2080;
    sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&uint64_t v164 = sub_100254634(v40, v41, &v167);
    id v30 = v160;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v159 + 8))(v17, v29);
    *(_WORD *)(v34 + 22) = 2112;
    if (v30)
    {
      id v31 = v157;
      *(void *)&uint64_t v164 = v157;
      id v42 = v157;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
    }
    else
    {
      *(void *)&uint64_t v164 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      id v31 = v157;
    }
    *uint64_t v35 = v30;

    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Asked to authenticate %s sessionID: %s with options %@", (uint8_t *)v34, 0x20u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    char v4 = v140;
    a2 = v154;
    uint64_t v29 = v161;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v17, v29);
  }
  unint64_t v43 = sub_100508E74(v162);
  Swift::UInt v44 = v43;
  if (v43 <= 9 && ((1 << v43) & 0x228) != 0)
  {
    uint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v45, v46))
    {
      NSUUID v47 = (uint8_t *)swift_slowAlloc();
      v167 = swift_slowAlloc();
      *(_DWORD *)NSUUID v47 = 136315138;
      uint64_t v161 = (uint64_t)(v47 + 4);
      id v48 = (id)SFAuthenticationTypeToString();
      uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v51 = v50;

      *(void *)&uint64_t v164 = sub_100254634(v49, v51, &v167);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Type %s can only be used in enable SPI", v47, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    unsigned int v52 = 1;
LABEL_14:
    uint64_t v53 = 0;
    uint64_t v54 = 0xE000000000000000;
LABEL_15:
    id v55 = sub_10070E650(v52, v53, v54);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v57 = (void *)Strong;
      v58.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
      [v57 manager:v4 didFailAuthenticationFor:v58.super.isa error:v55];
      swift_unknownObjectRelease();

LABEL_17:
      return;
    }

    return;
  }
  if (v30)
  {
    id v59 = [v31 idsDeviceID];
    if (v59)
    {
      uint64_t v60 = v59;
      v157 = v31;
      uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v63 = v62;

      long long v64 = *(void (**)(long long *__return_ptr, uint64_t, unint64_t))&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsDeviceForUniqueID];
      swift_retain();
      v64(&v164, v61, v63);
      swift_release();
      if (!*((void *)&v165 + 1))
      {
        swift_bridgeObjectRelease();
        sub_10000A7E8((uint64_t)&v164, &qword_10097BB50);
        uint64_t v53 = 0xD000000000000032;
        uint64_t v54 = 0x80000001007C8210;
        unsigned int v52 = 1;
        goto LABEL_15;
      }
      sub_1002AF688(&v164, (uint64_t)&v167);
      swift_bridgeObjectRetain();
      uint64_t v65 = Logger.logObject.getter();
      uint64_t v66 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v65, v66))
      {
        uint64_t v67 = (uint8_t *)swift_slowAlloc();
        *(void *)&uint64_t v164 = swift_slowAlloc();
        int v154 = a2;
        *(_DWORD *)uint64_t v67 = 136315138;
        swift_bridgeObjectRetain();
        unint64_t v163 = sub_100254634(v61, v63, (uint64_t *)&v164);
        a2 = v154;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v65, v66, "DeviceID was specified in options, attempting to authenticate with device: %s", v67, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      id v31 = v157;
      goto LABEL_39;
    }
  }
  unint64_t v68 = sub_1005095DC(v44);
  unint64_t v69 = sub_10057C16C(1uLL, v68);
  swift_bridgeObjectRelease();
  if (v69)
  {
    sub_1006CE38C((uint64_t)&v164);
    if (!*((void *)&v165 + 1))
    {
      sub_10000A7E8((uint64_t)&v164, &qword_10097BB50);
      uint64_t v86 = Logger.logObject.getter();
      id v87 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v86, v87))
      {
        unint64_t v88 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v88 = 0;
        _os_log_impl((void *)&_mh_execute_header, v86, v87, "No active watch", v88, 2u);
        swift_slowDealloc();
      }

      unsigned int v52 = 18;
      goto LABEL_14;
    }
    sub_1002AF688(&v164, (uint64_t)&v167);
    if (!v30)
    {
      uint64_t v166 = 0;
      uint64_t v164 = 0u;
      v165 = 0u;
LABEL_40:
      uint64_t v82 = v168;
      int64_t v83 = v169;
      unint64_t v84 = sub_10026BB6C(&v167, v168);
      unint64_t v85 = v31;
      sub_10070B744(v44, (uint64_t)v84, a2, (uint64_t)&v164, v4, v82, v83);
      sub_10024D338((uint64_t)&v167);
      sub_10000A7E8((uint64_t)&v164, &qword_10097F7D8);
      return;
    }
LABEL_39:
    *((void *)&v165 + 1) = sub_10000B740(0, &qword_10097F7D0);
    uint64_t v166 = &off_1008DE258;
    *(void *)&uint64_t v164 = v31;
    goto LABEL_40;
  }
  if (v44 - 6 < 2)
  {
    v157 = v31;
    unint64_t v70 = v155;
    static SFPlatform.macOS.getter();
    char v71 = static SFPlatform.isPlatform(_:)();
    unint64_t v72 = *(void (**)(char *, uint64_t))(v153 + 8);
    v72(v70, v156);
    if (v71)
    {
      BOOL v73 = sub_1006DF990(2, "eligible iPhone devices: %s");
      sub_1006CD690(v73, (SEL *)&selRef_deviceEnabledAsKeyForIDSDeviceID_);
      uint64_t v75 = v74;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v75 = 0;
    }
    int64_t v89 = v155;
    static SFPlatform.iOS.getter();
    id v90 = static SFPlatform.isPlatform(_:)();
    v72(v89, v156);
    if (v90)
    {
      uint64_t v91 = sub_1006DF990(4, "eligible mac devices: %s");
      sub_1006CD690(v91, (SEL *)&selRef_deviceEnabledAsKey_);
      uint64_t v93 = v92;
      swift_bridgeObjectRelease();
      if (((v75 | v93) & 1) == 0)
      {
LABEL_48:
        uint64_t v94 = Logger.logObject.getter();
        Swift::Int v95 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v94, v95))
        {
          uint64_t v96 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v96 = 0;
          _os_log_impl((void *)&_mh_execute_header, v94, v95, "Mac Unlock Phone isn't enabled", v96, 2u);
          swift_slowDealloc();
        }

        unsigned int v52 = 33;
        goto LABEL_14;
      }
    }
    else if ((v75 & 1) == 0)
    {
      goto LABEL_48;
    }
    long long v101 = a2;
    if (v44 == 7)
    {
      unint64_t v102 = &v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lastMacThatDidMacUnlockPhone];
      swift_beginAccess();
      uint64_t v103 = *((void *)v102 + 3);
      if (!v103) {
        goto LABEL_64;
      }
      BOOL v104 = *((void *)v102 + 4);
      int64_t v105 = sub_10026BB6C(v102, *((void *)v102 + 3));
      BOOL v106 = *(void *)(v103 - 8);
      __chkstk_darwin(v105);
      uint64_t v108 = (char *)&v139 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v106 + 16))(v108);
      uint64_t v109 = (*(uint64_t (**)(uint64_t, uint64_t))(v104 + 8))(v103, v104);
      uint64_t v111 = v110;
      (*(void (**)(char *, uint64_t))(v106 + 8))(v108, v103);
      if (v111)
      {
        unint64_t v112 = 65538;
        sub_10000A844(&qword_10096B500);
        unint64_t v113 = 7;
        unint64_t v114 = (void *)swift_allocObject();
        unint64_t v115 = 0;
        *((_OWORD *)v114 + 1) = xmmword_10076E7A0;
        v114[4] = v109;
        v114[5] = v111;
        unint64_t v116 = 20;
      }
      else
      {
LABEL_64:
        unint64_t v112 = 65538;
        char v122 = Logger.logObject.getter();
        char v123 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v122, v123))
        {
          uint64_t v124 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v124 = 0;
          _os_log_impl((void *)&_mh_execute_header, v122, v123, "No device filter set because no mac listed that performed last unlock", v124, 2u);
          swift_slowDealloc();
        }

        unint64_t v116 = 0;
        unint64_t v114 = _swiftEmptyArrayStorage;
        unint64_t v115 = 1;
        unint64_t v113 = 5;
      }
      uint64_t v29 = v161;
    }
    else
    {
      unint64_t v116 = 0;
      unint64_t v114 = _swiftEmptyArrayStorage;
      unint64_t v115 = 1;
      unint64_t v112 = 2;
      unint64_t v113 = 5;
    }
    type metadata accessor for SDAuthenticationNearbyInfoTemporaryScanner();
    swift_allocObject();
    uint64_t v125 = v141;
    LOBYTE(v164) = v115;
    char v162 = sub_10032C478(v125, v112, (uint64_t)v114, v116 | ((unint64_t)v115 << 32));
    int64_t v126 = v151;
    sub_10032C564(v113);
    uint64_t v127 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 56))(v152, 1, 1, v127);
    uint64_t v128 = v144;
    (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v150, v126, v148);
    v142(v149, v101, v29);
    int64_t v129 = (*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80);
    v158 = (v146 + v129 + 7) & 0xFFFFFFFFFFFFFFF8;
    int64_t v130 = (v158 + 15) & 0xFFFFFFFFFFFFFFF8;
    NSString v131 = v159;
    uint64_t v132 = (*(unsigned __int8 *)(v159 + 80) + v130 + 8) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80);
    uint64_t v133 = (v145 + v132 + 7) & 0xFFFFFFFFFFFFFFF8;
    int64_t v134 = swift_allocObject();
    uint64_t v135 = v134 + v129;
    *(void *)(v134 + 16) = 0;
    *(void *)(v134 + 24) = 0;
    uint64_t v136 = v148;
    (*(void (**)(unint64_t, char *, uint64_t))(v128 + 32))(v135, v150, v148);
    *(void *)(v134 + v158) = v44;
    *(void *)(v134 + v130) = v4;
    (*(void (**)(unint64_t, char *, uint64_t))(v131 + 32))(v134 + v132, v149, v161);
    *(void *)(v134 + v133) = v160;
    *(void *)(v134 + ((v133 + 15) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
    int64_t v137 = v157;
    uint64_t v138 = v4;
    sub_10028CAC4(v152, (uint64_t)&unk_10097FA20, v134);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v128 + 8))(v151, v136);
    return;
  }
  if (v44 == 4)
  {
    IsRealityDevice = SFDeviceIsRealityDevice();
    int64_t v77 = Logger.logObject.getter();
    if (IsRealityDevice)
    {
      unint64_t v78 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v77, v78))
      {
        uint64_t v79 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v79 = 0;
        _os_log_impl((void *)&_mh_execute_header, v77, v78, "Manually triggering state change for urgent arming path on companion device", v79, 2u);
        swift_slowDealloc();
      }

      uint64_t v80 = [self standardUserDefaults];
      uint64_t v81 = String._bridgeToObjectiveC()();
      [v80 setBool:1 forKey:v81];

      sub_1006D6720(1);
      return;
    }
    uint64_t v117 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v77, v117)) {
      goto LABEL_61;
    }
    unint64_t v118 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v118 = 0;
    _os_log_impl((void *)&_mh_execute_header, v77, v117, "autool authenticate on iPhone is unsupported. Run the command on the companion device", v118, 2u);
  }
  else
  {
    int64_t v77 = Logger.logObject.getter();
    unint64_t v97 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v77, v97)) {
      goto LABEL_61;
    }
    uint64_t v98 = (uint8_t *)swift_slowAlloc();
    v167 = swift_slowAlloc();
    *(_DWORD *)uint64_t v98 = 136315138;
    unint64_t v99 = sub_10050938C();
    *(void *)&uint64_t v164 = sub_100254634(v99, v100, &v167);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v77, v97, "Unhandled authentication type %s was not triggered", v98, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
  }
  swift_slowDealloc();
LABEL_61:

  int64_t v119 = swift_unknownObjectWeakLoadStrong();
  if (v119)
  {
    int64_t v120 = (void *)v119;
    v58.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
    BOOL v121 = sub_10070E650(0x13u, 0, 0xE000000000000000);
    [v120 manager:v4 didFailAuthenticationFor:v58.super.isa error:v121];
    swift_unknownObjectRelease();

    goto LABEL_17;
  }
}

uint64_t sub_1006E1CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[28] = a7;
  v8[29] = a8;
  v8[26] = a5;
  v8[27] = a6;
  v8[25] = a4;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  v8[30] = v9;
  v8[31] = *(void *)(v9 - 8);
  v8[32] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for DispatchQoS();
  v8[33] = v10;
  v8[34] = *(void *)(v10 - 8);
  v8[35] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for UUID();
  v8[36] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v8[37] = v12;
  v8[38] = *(void *)(v12 + 64);
  v8[39] = swift_task_alloc();
  uint64_t v13 = sub_10000A844(&qword_10097FA28);
  v8[40] = v13;
  v8[41] = *(void *)(v13 - 8);
  v8[42] = swift_task_alloc();
  return _swift_task_switch(sub_1006E1E90, 0, 0);
}

uint64_t sub_1006E1E90()
{
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[43] = sub_10000B47C(v1, (uint64_t)qword_10097F520);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    char v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Beginning scanning for enabled iPhones", v4, 2u);
    swift_slowDealloc();
  }

  sub_10000A844(&qword_10097FA10);
  AsyncThrowingStream.makeAsyncIterator()();
  v0[44] = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lastMacThatDidMacUnlockPhone;
  swift_beginAccess();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[45] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1006E2058;
  uint64_t v6 = v0[40];
  return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 23, 0, 0, v6, v0 + 21);
}

uint64_t sub_1006E2058()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_1006E2C40;
  }
  else {
    uint64_t v1 = sub_1006E2168;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_1006E2168()
{
  uint64_t v1 = (void *)*((void *)v0 + 23);
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = swift_slowAlloc();
      uint64_t v6 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 138412290;
      *(void *)(v5 + 4) = v2;
      *uint64_t v6 = v1;

      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Found %@", (uint8_t *)v5, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v12 = *((void *)v0 + 26);
    if (v12 != 7)
    {
      if (v12 == 6)
      {
        id v13 = [self sharedManager];
        if (!v13)
        {
          __break(1u);
LABEL_50:
          __break(1u);
          return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v13, v14, v15, v16, v17);
        }
        uint64_t v18 = v13;
        id v19 = [v2 idsDeviceIdentifier];
        unsigned int v20 = [v18 deviceEnabledAsKeyForIDSDeviceID:v19];

        if (v20)
        {
LABEL_37:
          id v13 = [self sharedTransport];
          if (v13)
          {
            id v48 = v13;
            id v49 = [v2 idsDeviceIdentifier];
            id v50 = [v48 idsDeviceForUniqueID:v49];

            if (v50)
            {
              uint64_t v86 = *((void *)v0 + 42);
              uint64_t v83 = *((void *)v0 + 41);
              uint64_t v51 = *((void *)v0 + 39);
              uint64_t v84 = *((void *)v0 + 40);
              uint64_t v52 = *((void *)v0 + 37);
              uint64_t v53 = *((void *)v0 + 38);
              uint64_t v54 = *((void *)v0 + 36);
              uint64_t v81 = *((void *)v0 + 34);
              uint64_t v82 = *((void *)v0 + 33);
              uint64_t v77 = *((void *)v0 + 35);
              uint64_t v78 = *((void *)v0 + 32);
              uint64_t v80 = *((void *)v0 + 31);
              id v55 = (void *)*((void *)v0 + 27);
              uint64_t v75 = *((void *)v0 + 26);
              uint64_t v76 = (void *)*((void *)v0 + 29);
              uint64_t v79 = *((void *)v0 + 30);
              (*(void (**)(uint64_t, void, uint64_t))(v52 + 16))(v51, *((void *)v0 + 28), v54);
              unint64_t v56 = (*(unsigned __int8 *)(v52 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
              unint64_t v57 = (v53 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
              NSUUID v58 = (char *)swift_allocObject();
              *((void *)v58 + 2) = v50;
              *((void *)v58 + 3) = v55;
              *((void *)v58 + 4) = v75;
              (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(&v58[v56], v51, v54);
              *(void *)&v58[v57] = v76;
              *((void *)v0 + 6) = sub_1007124EC;
              *((void *)v0 + 7) = v58;
              *((void *)v0 + 2) = _NSConcreteStackBlock;
              *((void *)v0 + 3) = 1107296256;
              *((void *)v0 + 4) = sub_100296520;
              *((void *)v0 + 5) = &unk_1008E6AA8;
              id v59 = _Block_copy(v0 + 1);
              id v60 = v76;
              id v61 = v50;
              id v62 = v55;
              static DispatchQoS.unspecified.getter();
              *((void *)v0 + 24) = _swiftEmptyArrayStorage;
              sub_10000BBC0((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
              sub_10000A844((uint64_t *)&unk_10096C490);
              sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
              dispatch thunk of SetAlgebra.init<A>(_:)();
              OS_dispatch_queue.async(group:qos:flags:execute:)();
              _Block_release(v59);

              (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v78, v79);
              (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v77, v82);
              (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v86, v84);
              swift_release();
            }
            else
            {
              id v63 = v2;
              long long v64 = Logger.logObject.getter();
              os_log_type_t v65 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v64, v65))
              {
                uint64_t v66 = (uint8_t *)swift_slowAlloc();
                unint64_t v85 = (void *)swift_slowAlloc();
                *(_DWORD *)uint64_t v66 = 138412290;
                *((void *)v0 + 22) = v63;
                id v67 = v63;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                *unint64_t v85 = v1;

                _os_log_impl((void *)&_mh_execute_header, v64, v65, "Could not find IDS device for discovered device. This shouldn't happen %@", v66, 0xCu);
                sub_10000A844(&qword_10096B850);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }
              else
              {
              }
              uint64_t Strong = swift_unknownObjectWeakLoadStrong();
              if (Strong)
              {
                unint64_t v69 = (void *)Strong;
                uint64_t v70 = *((void *)v0 + 27);
                Class isa = UUID._bridgeToObjectiveC()().super.isa;
                id v72 = sub_10070E650(0xAu, 0, 0xE000000000000000);
                [v69 manager:v70 didFailAuthenticationFor:isa error:v72];
                swift_unknownObjectRelease();
              }
              (*(void (**)(void, void))(*((void *)v0 + 41) + 8))(*((void *)v0 + 42), *((void *)v0 + 40));
            }
            goto LABEL_46;
          }
          goto LABEL_50;
        }
      }
LABEL_29:
      unint64_t v41 = v2;
      id v42 = Logger.logObject.getter();
      os_log_type_t v43 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v44 = swift_slowAlloc();
        uint64_t v45 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v44 = 138412290;
        *(void *)(v44 + 4) = v41;
        *uint64_t v45 = v1;
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "%@ not enabled to be unlocked by this device", (uint8_t *)v44, 0xCu);
        sub_10000A844(&qword_10096B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        id v42 = v41;
      }

      os_log_type_t v46 = (void *)swift_task_alloc();
      *((void *)v0 + 45) = v46;
      *os_log_type_t v46 = v0;
      v46[1] = sub_1006E2058;
      uint64_t v16 = *((void *)v0 + 40);
      id v13 = (char *)v0 + 184;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      os_log_type_t v17 = (void *)v0 + 21;
      return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v13, v14, v15, v16, v17);
    }
    sub_10024A330(*((void *)v0 + 27) + *((void *)v0 + 44), (uint64_t)(v0 + 4), &qword_10097BB50);
    if (!*((void *)v0 + 11))
    {
      sub_10000A7E8((uint64_t)(v0 + 4), &qword_10097BB50);
      uint64_t v26 = Logger.logObject.getter();
      os_log_type_t v27 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v28 = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "Could not find mac that previously put phone into assert delay", v28, 2u);
        swift_slowDealloc();
      }

      id v29 = sub_10070E650(1u, 0, 0xE000000000000000);
      uint64_t v30 = swift_unknownObjectWeakLoadStrong();
      if (v30)
      {
        id v31 = (void *)v30;
        uint64_t v32 = *((void *)v0 + 27);
        Class v33 = UUID._bridgeToObjectiveC()().super.isa;
        [v31 manager:v32 didFailAuthenticationFor:v33 error:v29];
        swift_unknownObjectRelease();
      }
      uint64_t v35 = *((void *)v0 + 41);
      uint64_t v34 = *((void *)v0 + 42);
      uint64_t v36 = *((void *)v0 + 40);

      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
      goto LABEL_46;
    }
    sub_1002AF688(v0 + 4, (uint64_t)v0 + 104);
    id v21 = [v2 idsDeviceIdentifier];
    if (v21)
    {
      id v22 = v21;
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v25 = v24;
    }
    else
    {
      uint64_t v23 = 0;
      uint64_t v25 = 0;
    }
    uint64_t v37 = *((void *)v0 + 16);
    uint64_t v38 = *((void *)v0 + 17);
    sub_10026BB6C((void *)v0 + 13, v37);
    uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
    if (v25)
    {
      if (v40)
      {
        if (v23 != v39 || v25 != v40)
        {
          char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10024D338((uint64_t)v0 + 104);
          if (v47) {
            goto LABEL_37;
          }
          goto LABEL_29;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_35:
        sub_10024D338((uint64_t)v0 + 104);
        goto LABEL_37;
      }
    }
    else if (!v40)
    {
      goto LABEL_35;
    }
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)v0 + 104);
    goto LABEL_29;
  }
  (*(void (**)(void, void))(*((void *)v0 + 41) + 8))(*((void *)v0 + 42), *((void *)v0 + 40));
  id v7 = sub_10070E650(0x14u, 0, 0xE000000000000000);
  uint64_t v8 = swift_unknownObjectWeakLoadStrong();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    uint64_t v10 = *((void *)v0 + 27);
    Class v11 = UUID._bridgeToObjectiveC()().super.isa;
    [v9 manager:v10 didFailAuthenticationFor:v11 error:v7];

    swift_unknownObjectRelease();
  }
  else
  {
  }
LABEL_46:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v73 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v73();
}

uint64_t sub_1006E2C40()
{
  (*(void (**)(void, void))(v0[41] + 8))(v0[42], v0[40]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_1006E2CF0(void *a1, void *a2, Swift::UInt a3, char *a4, void *a5)
{
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000B47C(v10, (uint64_t)qword_10097F520);
  id v11 = a1;
  id v12 = a2;
  id v13 = v11;
  uint64_t v14 = (char *)v12;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v15, v16))
  {

    if (a5) {
      goto LABEL_5;
    }
LABEL_7:
    os_log_type_t v27 = 0;
    long long v25 = 0u;
    long long v26 = 0u;
    goto LABEL_8;
  }
  uint64_t v17 = swift_slowAlloc();
  uint64_t v23 = a5;
  uint64_t v18 = (void *)swift_slowAlloc();
  *(_DWORD *)uint64_t v17 = 138412546;
  *(void *)&long long v25 = v13;
  Swift::UInt v24 = a3;
  id v19 = v13;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *uint64_t v18 = v13;

  *(_WORD *)(v17 + 12) = 2112;
  *(void *)&long long v25 = *(void *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  id v20 = (id)v25;
  a3 = v24;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  v18[1] = v25;

  _os_log_impl((void *)&_mh_execute_header, v15, v16, "Beginning authentication with %@ on queue %@", (uint8_t *)v17, 0x16u);
  sub_10000A844(&qword_10096B850);
  swift_arrayDestroy();
  a5 = v23;
  swift_slowDealloc();
  swift_slowDealloc();

  if (!v23) {
    goto LABEL_7;
  }
LABEL_5:
  *((void *)&v26 + 1) = sub_10000B740(0, &qword_10097F7D0);
  os_log_type_t v27 = &off_1008DE258;
  *(void *)&long long v25 = a5;
LABEL_8:
  id v21 = v13;
  id v22 = a5;
  sub_10070A644(a3, v21, a4, (uint64_t)&v25, v14);
  sub_10000A7E8((uint64_t)&v25, &qword_10097F7D8);
}

void sub_1006E308C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  id v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v33 - v8;
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (uint8_t **)((char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *id v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  id v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    uint64_t v37 = v1;
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = sub_10000B47C(v16, (uint64_t)qword_10097F520);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, a1, v3);
  uint64_t v35 = v17;
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v36 = v4;
  if (v20)
  {
    id v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    *(void *)&long long v41 = v34;
    *(_DWORD *)id v21 = 136315138;
    Class v33 = v21 + 4;
    sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&long long v38 = sub_100254634(v22, v23, (uint64_t *)&v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    Swift::UInt v24 = *(void (**)(char *, uint64_t))(v4 + 8);
    v24(v9, v3);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Asked to cancel %s", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    Swift::UInt v24 = *(void (**)(char *, uint64_t))(v4 + 8);
    v24(v9, v3);
  }

  uint64_t v25 = v37 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions;
  swift_beginAccess();
  uint64_t v26 = *(void *)(*(void *)v25 + 16);
  if (v26)
  {
    uint64_t v27 = *(void *)v25 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100278C8C(v27, (uint64_t)&v41);
      uint64_t v29 = v42;
      uint64_t v28 = v43;
      sub_10026BB6C(&v41, v42);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v28 + 8) + 8) + 32))(v29);
      LOBYTE(v28) = static UUID.== infix(_:_:)();
      v24(v7, v3);
      if (v28) {
        break;
      }
      sub_10024D338((uint64_t)&v41);
      v27 += 40;
      if (!--v26) {
        goto LABEL_12;
      }
    }
    sub_1002AF688(&v41, (uint64_t)&v38);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_12:
    uint64_t v40 = 0;
    long long v38 = 0u;
    long long v39 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v39 + 1))
  {
    sub_1002AF688(&v38, (uint64_t)&v41);
    sub_10026BB6C(&v41, v42);
    sub_1004DBA0C();
    sub_10024D338((uint64_t)&v41);
  }
  else
  {
    sub_10000A7E8((uint64_t)&v38, &qword_10097F998);
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Could not find session to cancel", v32, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1006E35F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  return _swift_task_switch(sub_1006E3610, 0, 0);
}

uint64_t sub_1006E3610()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_approveNearbyInfoAdvertiser;
  v0[4] = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_approveNearbyInfoAdvertiser;
  uint64_t v3 = *(void *)(v1 + v2);
  v0[5] = v3;
  if (v3)
  {
    swift_retain();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[6] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1006E36F4;
    return sub_100328ED4();
  }
  else
  {
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_1006E36F4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1006E3830, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1006E3830()
{
  swift_release();
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097F520);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Could not start nearbyInfo advertiser for approve, got error %@", v4, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  if (*(void *)(v0[3] + v0[4]))
  {
    swift_retain();
    sub_100329520();
    swift_errorRelease();
    swift_release();
  }
  else
  {
    swift_errorRelease();
  }
  *(void *)(v0[3] + v0[4]) = 0;
  swift_release();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

void sub_1006E3AB8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v80 = a4;
  uint64_t v8 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v8 - 8);
  uint64_t v79 = &v68[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for UUID();
  unint64_t v81 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v77 = &v68[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v14 = &v68[-v13];
  uint64_t v15 = type metadata accessor for DispatchPredicate();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = &v68[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v78 = v4;
  os_log_type_t v19 = *(void **)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v18 = v19;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  id v20 = v19;
  LOBYTE(v19) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  if (v19)
  {
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v21 = type metadata accessor for Logger();
  uint64_t v22 = sub_10000B47C(v21, (uint64_t)qword_10097F520);
  uint64_t v24 = v80;
  unint64_t v23 = v81;
  uint64_t v25 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v81 + 16);
  unint64_t v75 = v81 + 16;
  uint64_t v74 = v25;
  v25(v14, v80, v10);
  sub_100278C78(a1, a2);
  swift_errorRetain();
  sub_100278C78(a1, a2);
  swift_errorRetain();
  uint64_t v26 = Logger.logObject.getter();
  int v27 = static os_log_type_t.default.getter();
  BOOL v28 = os_log_type_enabled(v26, (os_log_type_t)v27);
  uint64_t v76 = v10;
  if (v28)
  {
    int v69 = v27;
    uint64_t v70 = v26;
    uint64_t v73 = v22;
    uint64_t v29 = swift_slowAlloc();
    char v71 = (void *)swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    v85[0] = v72;
    *(_DWORD *)uint64_t v29 = 136315650;
    sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v31 = v10;
    *(void *)&v84[0] = sub_100254634(v30, v32, v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    Class v33 = *(void (**)(unsigned char *, uint64_t))(v23 + 8);
    v33(v14, v31);
    *(_WORD *)(v29 + 12) = 1024;
    sub_100250CB0(a1, a2);
    LODWORD(v84[0]) = a2 >> 60 != 15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100250CB0(a1, a2);
    *(_WORD *)(v29 + 18) = 2112;
    if (a3)
    {
      swift_errorRetain();
      uint64_t v34 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&v84[0] = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
    }
    else
    {
      *(void *)&v84[0] = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v34 = 0;
    }
    long long v38 = v70;
    os_log_type_t v39 = v69;
    void *v71 = v34;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "Got approval result for session %s: User approved - %{BOOL}d, error - %@", (uint8_t *)v29, 0x1Cu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v37 = (uint64_t)v79;
    uint64_t v24 = v80;
    uint64_t v36 = v78;
  }
  else
  {
    sub_100250CB0(a1, a2);
    uint64_t v35 = v10;
    Class v33 = *(void (**)(unsigned char *, uint64_t))(v23 + 8);
    v33(v14, v35);
    sub_100250CB0(a1, a2);
    swift_errorRelease();
    swift_errorRelease();

    uint64_t v36 = v78;
    uint64_t v37 = (uint64_t)v79;
  }
  uint64_t v40 = (uint64_t *)(v36 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions);
  swift_beginAccess();
  uint64_t v41 = *v40;
  if (*(void *)(*v40 + 16) && (unint64_t v42 = sub_100583A00(v24), (v43 & 1) != 0))
  {
    sub_100278C8C(*(void *)(v41 + 56) + 40 * v42, (uint64_t)v84);
    sub_1002AF688(v84, (uint64_t)v85);
    swift_endAccess();
    int v82 = 0;
    char v83 = 1;
    if (a3)
    {
      type metadata accessor for Code(0);
      *(void *)&v84[0] = -9;
      swift_errorRetain();
      sub_10000BBC0(&qword_10096AE40, type metadata accessor for Code);
      if (static _ErrorCodeProtocol.~= infix(_:_:)()) {
        goto LABEL_15;
      }
      *(void *)&v84[0] = -4;
      swift_errorRetain();
      char v44 = static _ErrorCodeProtocol.~= infix(_:_:)();
      swift_errorRelease();
      if ((v44 & 1) != 0
        || (*(void *)&v84[0] = -2,
            swift_errorRetain(),
            char v45 = static _ErrorCodeProtocol.~= infix(_:_:)(),
            swift_errorRelease(),
            (v45 & 1) != 0))
      {
LABEL_15:
        uint64_t v46 = a1;
        int v47 = 14;
      }
      else
      {
        *(void *)&v84[0] = -1;
        swift_errorRetain();
        char v67 = static _ErrorCodeProtocol.~= infix(_:_:)();
        swift_errorRelease();
        uint64_t v46 = a1;
        if (v67) {
          int v47 = 32;
        }
        else {
          int v47 = 31;
        }
      }
      int v82 = v47;
      char v83 = 0;
      swift_errorRetain();
      swift_errorRetain();
      id v48 = Logger.logObject.getter();
      os_log_type_t v49 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v48, v49))
      {
        unint64_t v81 = a2;
        uint64_t v50 = swift_slowAlloc();
        uint64_t v51 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v50 = 138412546;
        swift_errorRetain();
        uint64_t v52 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)&v84[0] = v52;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v51 = v52;
        swift_errorRelease();
        swift_errorRelease();
        *(_WORD *)(v50 + 12) = 2112;
        swift_beginAccess();
        if (v83)
        {
          *(void *)&v84[0] = 0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          uint64_t v53 = 0;
        }
        else
        {
          int v61 = v82;
          type metadata accessor for SFAuthenticationError(0);
          sub_10000BBC0(&qword_100977FB0, type metadata accessor for SFAuthenticationError);
          swift_allocError();
          *id v62 = v61;
          uint64_t v53 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)&v84[0] = v53;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
        }
        v51[1] = v53;
        _os_log_impl((void *)&_mh_execute_header, v48, v49, "Sending received error %@ as %@", (uint8_t *)v50, 0x16u);
        sub_10000A844(&qword_10096B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        a2 = v81;
        a1 = v46;
        uint64_t v37 = (uint64_t)v79;
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();

        a1 = v46;
      }
    }
    swift_beginAccess();
    char v63 = v83;
    if (v83) {
      int v64 = 0;
    }
    else {
      int v64 = v82;
    }
    uint64_t v65 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v37, 1, 1, v65);
    sub_100278C8C((uint64_t)v85, (uint64_t)v84);
    uint64_t v66 = swift_allocObject();
    *(void *)(v66 + 16) = 0;
    *(void *)(v66 + 24) = 0;
    sub_1002AF688(v84, v66 + 32);
    *(void *)(v66 + 72) = a1;
    *(void *)(v66 + 80) = a2;
    *(unsigned char *)(v66 + 88) = v63 ^ 1;
    *(_DWORD *)(v66 + 92) = v64;
    sub_100278C78(a1, a2);
    sub_100278C78(a1, a2);
    sub_10028CFA8(v37, (uint64_t)&unk_10097F9F8, v66);
    swift_release();
    sub_100250CB0(a1, a2);
    sub_10024D338((uint64_t)v85);
  }
  else
  {
    swift_endAccess();
    uint64_t v54 = v77;
    uint64_t v55 = v76;
    v74(v77, v24, v76);
    unint64_t v56 = Logger.logObject.getter();
    os_log_type_t v57 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v56, v57))
    {
      NSUUID v58 = (uint8_t *)swift_slowAlloc();
      v85[0] = swift_slowAlloc();
      *(_DWORD *)NSUUID v58 = 136315138;
      sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v59 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&v84[0] = sub_100254634(v59, v60, v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v33(v54, v55);
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "No session found for approval result sessionID %s, dropping report", v58, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v33(v54, v55);
    }
  }
}

uint64_t sub_1006E4710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  return _swift_task_switch(sub_1006E4734, 0, 0);
}

uint64_t sub_1006E4734()
{
  unint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 64);
  sub_10026BB6C(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24));
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 40) = &type metadata for SDAuthenticationApproveResult;
  *(void *)(v0 + 48) = &off_1008D8CE0;
  *(void *)(v0 + 24) = v2;
  *(unsigned char *)(v0 + 32) = v1 & 1;
  *(_DWORD *)(v0 + 36) = HIDWORD(v1);
  sub_100278C78(v3, v2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1006E4824;
  return sub_1004F74C0(v0 + 16);
}

uint64_t sub_1006E4824()
{
  uint64_t v1 = *v0 + 16;
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_10000A7E8(v1, (uint64_t *)&unk_1009778D8);
  unint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_1006E4A84(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = v2;
  uint64_t v14 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  id v15 = v14;
  char v16 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if (v16)
  {
    uint64_t v31 = v7;
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v17 = type metadata accessor for Logger();
  sub_10000B47C(v17, (uint64_t)qword_10097F520);
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v30(v9, v34, v3);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    id v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    v36[0] = v29;
    *(_DWORD *)id v20 = 136315138;
    sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v35 = sub_100254634(v21, v22, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    unint64_t v23 = *(void (**)(char *, uint64_t))(v4 + 8);
    v23(v9, v3);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Added observer for authenticationStateChanged with id: %s", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    unint64_t v23 = *(void (**)(char *, uint64_t))(v4 + 8);
    v23(v9, v3);
  }

  uint64_t v24 = (uint64_t)v31;
  v30(v31, v34, v3);
  uint64_t v25 = (uint64_t *)(v32 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_authenticationStateChangesObservers);
  swift_beginAccess();
  uint64_t v26 = v33;
  swift_unknownObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v35 = *v25;
  uint64_t *v25 = 0x8000000000000000;
  sub_100594B80(v26, v24, isUniquelyReferenced_nonNull_native);
  uint64_t *v25 = v35;
  swift_bridgeObjectRelease();
  v23((char *)v24, v3);
  return swift_endAccess();
}

uint64_t sub_1006E4FD4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  id v13 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v14 = type metadata accessor for Logger();
  sub_10000B47C(v14, (uint64_t)qword_10097F520);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  id v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v23 = a1;
    v25[0] = v18;
    uint64_t v22 = v2;
    *(_DWORD *)uint64_t v17 = 136315138;
    sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v24 = sub_100254634(v19, v20, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Removed observer for authenticationStateChanged with id: %s", v17, 0xCu);
    swift_arrayDestroy();
    a1 = v23;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  swift_beginAccess();
  sub_1002AA3EC(a1);
  swift_endAccess();
  return swift_unknownObjectRelease();
}

uint64_t sub_1006E53A8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  id v10 = a1;
  a4(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1006E5498(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 - 9 >= 6)
  {
    if (a1 - 6 >= 2)
    {
      if (a1 != 2)
      {
        if (a1 <= 8)
        {
          swift_beginAccess();
          uint64_t v20 = swift_bridgeObjectRetain();
          if (((1 << a1) & 0x18E) != 0) {
            uint64_t v21 = sub_10045F128(v20);
          }
          else {
            uint64_t v21 = sub_10045F164(v20);
          }
          uint64_t v22 = v21;
          swift_bridgeObjectRelease();
          uint64_t v23 = v22[2];
          swift_bridgeObjectRelease();
          char v25 = v23 == 0;
          return v25 & 1;
        }
LABEL_15:
        char v25 = 1;
        return v25 & 1;
      }
      uint64_t v14 = &off_1008D38E8;
    }
    else
    {
      uint64_t v14 = &off_1008D38A8;
    }
    char v25 = sub_1006EA360(v14) ^ 1;
    return v25 & 1;
  }
  int v9 = SFDeviceClassCodeGet();
  if (!v9) {
    goto LABEL_15;
  }
  int v10 = v9;
  Swift::Int v11 = sub_1002CC2E4((uint64_t)&off_1008D3880);
  BOOL v12 = sub_10057C25C(v10, v11);
  swift_bridgeObjectRelease();
  if (v10 != 8 && !v12 && !SFDeviceIsRealityDevice()) {
    goto LABEL_15;
  }
  if (qword_100969D50 != -1) {
    swift_once();
  }
  id v13 = sub_1003B5358(3, v12, a2, a3, 0, 0);
  uint64_t v15 = __chkstk_darwin(v13);
  *(&v27 - 6) = v15;
  *(&v27 - 5) = a2;
  *(&v27 - 4) = a3;
  *(&v27 - 3) = (uint64_t)sub_100308F9C;
  *(&v27 - 2) = 0;
  __chkstk_darwin(v15);
  *(&v27 - 2) = (uint64_t)sub_10030E664;
  *(&v27 - 1) = v16;
  uint64_t v18 = v17 + 4;
  os_unfair_lock_lock(v17 + 4);
  sub_1002CEA38(v19);
  os_unfair_lock_unlock(v18);
  swift_release();
  uint64_t v24 = type metadata accessor for UUID();
  char v25 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v8, 1, v24) == 1;
  sub_10000A7E8((uint64_t)v8, &qword_100974EA0);
  return v25 & 1;
}

uint64_t sub_1006E5828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  return _swift_task_switch(sub_1006E584C, 0, 0);
}

uint64_t sub_1006E584C()
{
  sub_10026BB6C(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24));
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1006E5900;
  return sub_1004F74C0(v0 + 16);
}

uint64_t sub_1006E5900()
{
  uint64_t v1 = *v0 + 16;
  swift_task_dealloc();
  sub_10000A7E8(v1, (uint64_t *)&unk_1009778D8);
  return _swift_task_switch(sub_1006E5A10, 0, 0);
}

uint64_t sub_1006E5A10()
{
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097F520);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "started auth session", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[8];

  id v6 = [self defaultCenter];
  [v6 postNotificationName:@"SDAuthenticationSessionStarted" object:0];

  if (v5 != 4)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v8 = (void *)Strong;
      uint64_t v9 = v0[9];
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      [v8 manager:v9 didStartAuthenticationFor:isa];
      swift_unknownObjectRelease();
    }
  }
  Swift::Int v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1006E5BC0()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[1] = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_10070F164;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008E63C0;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v13 = _swiftEmptyArrayStorage;
  sub_10000BBC0((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  swift_release();
  return swift_release();
}

void sub_1006E5E98()
{
  uint64_t v0 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v8 = (char *)Strong;
  uint64_t v9 = self;
  id v10 = [v9 sharedMonitor];
  if (!v10)
  {
    __break(1u);
    goto LABEL_43;
  }
  Swift::Int v11 = v10;
  unsigned int v12 = [v10 deviceKeyBagDisabled];

  id v13 = [v9 sharedMonitor];
  if (!v13)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v14 = v13;
  unsigned __int8 v15 = [v13 deviceKeyBagUnlocked];

  id v16 = [v9 sharedMonitor];
  if (!v16)
  {
LABEL_44:
    __break(1u);
    return;
  }
  uint64_t v17 = v16;
  unsigned int v18 = [v16 screenOn];

  if (SFDeviceClassCodeGet() == 1)
  {
    uint64_t v64 = v1;
    int v19 = v18 ^ 1;
    if ((v18 ^ 1 | v12) == 1)
    {
      uint64_t v20 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_requestUnlockNotificationPosted;
      if (v8[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_requestUnlockNotificationPosted] == 1)
      {
        if (qword_10096A190 != -1) {
          swift_once();
        }
        uint64_t v21 = type metadata accessor for Logger();
        sub_10000B47C(v21, (uint64_t)qword_10097F520);
        uint64_t v22 = Logger.logObject.getter();
        os_log_type_t v23 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v24 = (_DWORD *)swift_slowAlloc();
          os_log_t v63 = v20;
          char v25 = v24;
          *uint64_t v24 = 67109376;
          LODWORD(v71[0]) = v19;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *((_WORD *)v25 + 4) = 1024;
          LODWORD(v71[0]) = v12;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v22, v23, "Dismissing unlock request notification on screen off: %{BOOL}d, passcode disable: %{BOOL}d", (uint8_t *)v25, 0xEu);
          uint64_t v20 = v63;
          swift_slowDealloc();
        }

        id v26 = [self sharedManager];
        [v26 dismissRequestToUnlockNotification];

        *((unsigned char *)&v20->isa + (void)v8) = 0;
      }
      if (v12) {
        sub_1006E68AC();
      }
    }
    if (v15)
    {
      uint64_t v27 = self;
      id v28 = [v27 standardUserDefaults];
      NSString v29 = String._bridgeToObjectiveC()();
      unsigned int v30 = [v28 BOOLForKey:v29];

      uint64_t v31 = v64;
      if (v30)
      {
        id v32 = [v27 standardUserDefaults];
        NSString v33 = String._bridgeToObjectiveC()();
        [v32 setBool:0 forKey:v33];

        if (qword_10096A190 != -1) {
          swift_once();
        }
        uint64_t v34 = type metadata accessor for Logger();
        sub_10000B47C(v34, (uint64_t)qword_10097F520);
        uint64_t v35 = Logger.logObject.getter();
        os_log_type_t v36 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v35, v36))
        {
          uint64_t v37 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v37 = 0;
          _os_log_impl((void *)&_mh_execute_header, v35, v36, "Showing notification since phone was unlocked via Oneness", v37, 2u);
          swift_slowDealloc();
        }

        if (qword_100969E10 != -1) {
          swift_once();
        }
        sub_1004460FC();
      }
      if (v8[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_requestUnlockNotificationPosted] == 1)
      {
        uint64_t v38 = (uint64_t)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_previousUnlockClassCLockDevice];
        swift_beginAccess();
        sub_10024A330(v38, (uint64_t)&v68, &qword_10097BB50);
        if (*((void *)&v69 + 1))
        {
          sub_1002AF688(&v68, (uint64_t)v71);
          if (qword_10096A190 != -1) {
            swift_once();
          }
          uint64_t v39 = type metadata accessor for Logger();
          sub_10000B47C(v39, (uint64_t)qword_10097F520);
          sub_100278C8C((uint64_t)v71, (uint64_t)&v68);
          uint64_t v40 = Logger.logObject.getter();
          int v41 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v40, (os_log_type_t)v41))
          {
            int v62 = v41;
            os_log_t v63 = v40;
            unint64_t v42 = (uint8_t *)swift_slowAlloc();
            uint64_t v61 = swift_slowAlloc();
            uint64_t v65 = v61;
            *(_DWORD *)unint64_t v42 = 136315138;
            uint64_t v44 = *((void *)&v69 + 1);
            char v43 = v70;
            sub_10026BB6C(&v68, *((uint64_t *)&v69 + 1));
            uint64_t v45 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v43[1])(v44, v43);
            if (v46)
            {
              unint64_t v47 = v46;
            }
            else
            {
              uint64_t v66 = 0;
              unint64_t v67 = 0xE000000000000000;
              _StringGuts.grow(_:)(17);
              swift_bridgeObjectRelease();
              uint64_t v45 = 0xD000000000000015;
              unint64_t v47 = 0x80000001007B7770;
            }
            uint64_t v31 = v64;
            uint64_t v66 = sub_100254634(v45, v47, &v65);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_10024D338((uint64_t)&v68);
            uint64_t v40 = v63;
            _os_log_impl((void *)&_mh_execute_header, v63, (os_log_type_t)v62, "Trying to authenticate with device that previously failed due to expired escrow %s", v42, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            sub_10024D338((uint64_t)&v68);
          }

          UUID.init()();
          id v51 = [objc_allocWithZone((Class)SFAuthenticationOptions) init];
          *((void *)&v69 + 1) = sub_10000B740(0, &qword_10097F7D0);
          uint64_t v70 = &off_1008DE258;
          *(void *)&long long v68 = v51;
          uint64_t v52 = v72;
          uint64_t v53 = v73;
          uint64_t v54 = sub_10026BB6C(v71, v72);
          sub_10070B744(4uLL, (uint64_t)v54, v3, (uint64_t)&v68, v8, v52, v53);
          (*(void (**)(char *, uint64_t))(v31 + 8))(v3, v0);
          sub_10024D338((uint64_t)v71);
          sub_10000A7E8((uint64_t)&v68, &qword_10097F7D8);
          uint64_t v70 = 0;
          long long v68 = 0u;
          long long v69 = 0u;
          swift_beginAccess();
          sub_10026B410((uint64_t)&v68, v38, &qword_10097BB50);
          swift_endAccess();
        }
        else
        {
          sub_10000A7E8((uint64_t)&v68, &qword_10097BB50);
        }
      }
      uint64_t v55 = type metadata accessor for Date();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v6, 1, 1, v55);
      unint64_t v56 = &v8[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics];
      swift_beginAccess();
      uint64_t v57 = type metadata accessor for StateMetrics(0);
      sub_10026B410((uint64_t)v6, (uint64_t)&v56[*(int *)(v57 + 24)], (uint64_t *)&unk_100975040);
      swift_endAccess();
      id v58 = [v27 standardUserDefaults];
      Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
      NSString v60 = String._bridgeToObjectiveC()();
      [v58 setValue:isa forKey:v60];
    }
    else
    {
      Date.init()();
      uint64_t v48 = type metadata accessor for Date();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v6, 0, 1, v48);
      os_log_type_t v49 = &v8[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics];
      swift_beginAccess();
      uint64_t v50 = type metadata accessor for StateMetrics(0);
      sub_10026B410((uint64_t)v6, (uint64_t)&v49[*(int *)(v50 + 24)], (uint64_t *)&unk_100975040);
      swift_endAccess();
    }
  }
  else if (SFDeviceIsRealityDevice())
  {
    sub_1006D6720(0);
  }
}

uint64_t sub_1006E68AC()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v73 = v0;
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0) {
    goto LABEL_66;
  }
  if (qword_100969D50 != -1) {
LABEL_67:
  }
    swift_once();
  unint64_t v7 = sub_1003B4D48();
  unint64_t v9 = v7;
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v76 = v9;
  if (v10)
  {
    unint64_t v11 = 0;
    uint64_t v12 = 0;
    unint64_t v78 = v76 & 0xC000000000000001;
    uint64_t v75 = v76 & 0xFFFFFFFFFFFFFF8;
    unint64_t v74 = v76 + 32;
    *(void *)&long long v8 = 136315394;
    long long v81 = v8;
    uint64_t v80 = (char *)&type metadata for Any + 8;
    uint64_t v77 = v10;
    while (1)
    {
      if (v78)
      {
        uint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v15 = v14;
        BOOL v16 = __OFADD__(v11, 1);
        unint64_t v17 = v11 + 1;
        if (v16) {
          goto LABEL_64;
        }
      }
      else
      {
        if (v11 >= *(void *)(v75 + 16)) {
          goto LABEL_65;
        }
        uint64_t v15 = *(void *)(v74 + 8 * v11);
        uint64_t v14 = swift_retain();
        BOOL v16 = __OFADD__(v11, 1);
        unint64_t v17 = v11 + 1;
        if (v16)
        {
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
          goto LABEL_67;
        }
      }
      unint64_t v79 = v17;
      __chkstk_darwin(v14);
      *(&v73 - 2) = (uint64_t)sub_1005008F4;
      *(&v73 - 1) = v15;
      int v19 = v18 + 4;
      os_unfair_lock_lock(v18 + 4);
      sub_100500810(v88);
      os_unfair_lock_unlock(v19);
      uint64_t v20 = 0;
      uint64_t v21 = *(void *)(v88[0] + 56);
      int v82 = (const char *)(v88[0] + 56);
      uint64_t v86 = v88[0];
      uint64_t v22 = 1 << *(unsigned char *)(v88[0] + 32);
      if (v22 < 64) {
        uint64_t v23 = ~(-1 << v22);
      }
      else {
        uint64_t v23 = -1;
      }
      unint64_t v24 = v23 & v21;
      char v83 = (char *)((unint64_t)(v22 + 63) >> 6);
      while (1)
      {
        if (v24)
        {
          unint64_t v25 = __clz(__rbit64(v24));
          v24 &= v24 - 1;
          unint64_t v26 = v25 | (v20 << 6);
          goto LABEL_33;
        }
        BOOL v16 = __OFADD__(v20++, 1);
        if (v16)
        {
          __break(1u);
LABEL_63:
          __break(1u);
          goto LABEL_64;
        }
        if (v20 >= (uint64_t)v83) {
          goto LABEL_7;
        }
        unint64_t v27 = *(void *)&v82[8 * v20];
        if (!v27) {
          break;
        }
LABEL_32:
        unint64_t v24 = (v27 - 1) & v27;
        unint64_t v26 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_33:
        NSString v29 = (uint64_t *)(*(void *)(v86 + 48) + 16 * v26);
        uint64_t v30 = *v29;
        unint64_t v31 = v29[1];
        uint64_t v32 = qword_10096A190;
        swift_bridgeObjectRetain();
        if (v32 != -1) {
          swift_once();
        }
        uint64_t v33 = type metadata accessor for Logger();
        sub_10000B47C(v33, (uint64_t)qword_10097F520);
        swift_bridgeObjectRetain_n();
        swift_retain_n();
        uint64_t v34 = Logger.logObject.getter();
        os_log_type_t v35 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v34, v35))
        {
          *(void *)&long long v84 = v30;
          uint64_t v85 = 0;
          uint64_t v36 = swift_slowAlloc();
          v88[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v36 = v81;
          unint64_t v37 = 0xE700000000000000;
          uint64_t v38 = 0x6E776F6E6B6E75;
          switch(*(unsigned char *)(v15 + 32))
          {
            case 1:
              unint64_t v37 = 0xEE00656E6F68506BLL;
              uint64_t v38 = 0x636F6C6E5563616DLL;
              break;
            case 2:
              unint64_t v37 = 0xEC00000043737361;
              uint64_t v38 = 0x6C436B636F6C6E75;
              break;
            case 3:
              unint64_t v37 = 0xEF6B636F6C6E5565;
              uint64_t v38 = 0x646F4D7473657567;
              break;
            default:
              break;
          }
          *(void *)(v36 + 4) = sub_100254634(v38, v37, v88);
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v36 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v30 = v84;
          *(void *)(v36 + 14) = sub_100254634(v84, v31, v88);
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v34, v35, "Removing pairing record for %s with %s", (uint8_t *)v36, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v12 = v85;
        }
        else
        {

          swift_bridgeObjectRelease_n();
          uint64_t v39 = swift_release_n();
        }
        uint64_t v40 = __chkstk_darwin(v39);
        *(&v73 - 4) = v15;
        *(&v73 - 3) = v30;
        *(&v73 - 2) = v31;
        __chkstk_darwin(v40);
        *(&v73 - 2) = (uint64_t)sub_1003CEC94;
        *(&v73 - 1) = v41;
        char v43 = v42 + 4;
        os_unfair_lock_lock(v42 + 4);
        sub_10030F73C(v44);
        os_unfair_lock_unlock(v43);
        if (v12)
        {
          swift_errorRelease();
          uint64_t v12 = 0;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v28 = v20 + 1;
      if (v20 + 1 >= (uint64_t)v83) {
        goto LABEL_7;
      }
      unint64_t v27 = *(void *)&v82[8 * v28];
      if (v27) {
        goto LABEL_31;
      }
      uint64_t v28 = v20 + 2;
      if (v20 + 2 >= (uint64_t)v83) {
        goto LABEL_7;
      }
      unint64_t v27 = *(void *)&v82[8 * v28];
      if (v27) {
        goto LABEL_31;
      }
      uint64_t v28 = v20 + 3;
      if (v20 + 3 < (uint64_t)v83) {
        break;
      }
LABEL_7:
      swift_release();
      uint64_t v13 = v77;
      unint64_t v11 = v79;
      swift_release();
      if (v11 == v13) {
        goto LABEL_48;
      }
    }
    unint64_t v27 = *(void *)&v82[8 * v28];
    if (!v27)
    {
      while (1)
      {
        uint64_t v20 = v28 + 1;
        if (__OFADD__(v28, 1)) {
          goto LABEL_63;
        }
        if (v20 >= (uint64_t)v83) {
          goto LABEL_7;
        }
        unint64_t v27 = *(void *)&v82[8 * v20];
        ++v28;
        if (v27) {
          goto LABEL_32;
        }
      }
    }
LABEL_31:
    uint64_t v20 = v28;
    goto LABEL_32;
  }
LABEL_48:
  swift_bridgeObjectRelease();
  uint64_t v45 = sub_1006E9654();
  unint64_t v46 = sub_100707E2C(1, (uint64_t)v45);
  swift_bridgeObjectRelease();
  uint64_t v47 = sub_1006DF990(4, "eligible mac devices: %s");
  uint64_t v48 = sub_100707E2C(0, v47);
  swift_bridgeObjectRelease();
  v88[0] = (uint64_t)v46;
  sub_1003D5D1C((uint64_t)v48);
  uint64_t v49 = v88[0];
  if (!*(void *)(v88[0] + 16)) {
    return swift_bridgeObjectRelease();
  }
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v50 = type metadata accessor for Logger();
  uint64_t v51 = sub_10000B47C(v50, (uint64_t)qword_10097F520);
  swift_bridgeObjectRetain_n();
  uint64_t v52 = Logger.logObject.getter();
  os_log_type_t v53 = static os_log_type_t.info.getter();
  BOOL v54 = os_log_type_enabled(v52, v53);
  uint64_t v85 = v51;
  if (v54)
  {
    uint64_t v55 = (uint8_t *)swift_slowAlloc();
    v88[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v55 = 136315138;
    swift_bridgeObjectRetain();
    sub_10000A844((uint64_t *)&unk_10097BB90);
    uint64_t v56 = Array.description.getter();
    unint64_t v58 = v57;
    swift_bridgeObjectRelease();
    uint64_t v87 = sub_100254634(v56, v58, v88);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v52, v53, "Disabling all pairings as both lock and key device with %s", v55, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v60 = *(void *)(v49 + 16);
    if (v60) {
      goto LABEL_53;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v60 = *(void *)(v49 + 16);
    if (v60)
    {
LABEL_53:
      *(void *)&long long v81 = v49;
      uint64_t v61 = v49 + 32;
      *(void *)&long long v59 = 136315138;
      long long v84 = v59;
      int v82 = "Unknown assertion state";
      char v83 = (char *)&type metadata for Any + 8;
      do
      {
        sub_100278C8C(v61, (uint64_t)v88);
        uint64_t v62 = v89;
        uint64_t v63 = v90;
        sub_10026BB6C(v88, v89);
        uint64_t v64 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 8))(v62, v63);
        if (!v65)
        {
          __break(1u);
LABEL_70:
          __break(1u);
          JUMPOUT(0x1006E7534);
        }
        sub_1006B0F4C(1, v64, v65);
        swift_bridgeObjectRelease();
        uint64_t v67 = v89;
        uint64_t v66 = v90;
        sub_10026BB6C(v88, v89);
        uint64_t v68 = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 8))(v67, v66);
        if (!v69) {
          goto LABEL_70;
        }
        sub_1006B0F4C(0, v68, v69);
        swift_bridgeObjectRelease();
        sub_10024D338((uint64_t)v88);
        v61 += 40;
        --v60;
      }
      while (v60);
    }
  }
  swift_bridgeObjectRelease();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v71 = String._bridgeToObjectiveC()();
  NSString v72 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_1000D289C(0, v71, v72);

  sub_1006CD9D4();
  return sub_1006E9424();
}

uint64_t sub_1006E75E0()
{
  uint64_t v0 = type metadata accessor for SFPlatform();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static SFPlatform.macOS.getter();
  char v4 = static SFPlatform.isPlatform(_:)();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  if (v4)
  {
    uint64_t v6 = sub_1006DF990(2, "eligible iPhone devices: %s");
    sub_1006CD690(v6, (SEL *)&selRef_deviceEnabledAsKeyForIDSDeviceID_);
    int v8 = v7;
    swift_bridgeObjectRelease();
  }
  else
  {
    int v8 = 0;
  }
  static SFPlatform.iOS.getter();
  char v9 = static SFPlatform.isPlatform(_:)();
  v5(v3, v0);
  if (v9)
  {
    uint64_t v10 = sub_1006DF990(4, "eligible mac devices: %s");
    sub_1006CD690(v10, (SEL *)&selRef_deviceEnabledAsKey_);
    int v12 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    int v12 = 0;
  }
  return (v8 | v12) & 1;
}

uint64_t sub_1006E7764(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    int v12 = (void *)result;
    id v13 = *(id *)(result + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);

    aBlock[4] = sub_10070F16C;
    aBlock[5] = a2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100296520;
    aBlock[3] = &unk_1008E63E8;
    uint64_t v14 = _Block_copy(aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    unint64_t v17 = _swiftEmptyArrayStorage;
    sub_10000BBC0((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    uint64_t v16 = v7;
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v14);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v16);
    return swift_release();
  }
  return result;
}

void sub_1006E7A4C()
{
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_10097F520);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "postUnlockKeyRequestNotification by command line", v3, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_1006E7B5C();
  }
}

void sub_1006E7B5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  id v8 = [self sharedMonitor];
  if (!v8)
  {
    __break(1u);
    return;
  }
  uint64_t v9 = v8;
  unsigned int v10 = [v8 deviceKeyBagLocked];

  if (!v10)
  {
    if (qword_10096A190 == -1)
    {
LABEL_10:
      uint64_t v17 = type metadata accessor for Logger();
      sub_10000B47C(v17, (uint64_t)qword_10097F520);
      id v13 = Logger.logObject.getter();
      os_log_type_t v14 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v13, v14))
      {
LABEL_13:

        return;
      }
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      uint64_t v16 = "not posting request to unlock phone because device is already unlocked";
LABEL_12:
      _os_log_impl((void *)&_mh_execute_header, v13, v14, v16, v15, 2u);
      swift_slowDealloc();
      goto LABEL_13;
    }
LABEL_20:
    swift_once();
    goto LABEL_10;
  }
  uint64_t v11 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_requestUnlockNotificationPosted;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_requestUnlockNotificationPosted))
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000B47C(v12, (uint64_t)qword_10097F520);
    id v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v13, v14)) {
      goto LABEL_13;
    }
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    uint64_t v16 = "not posting request to unlock phone because notification has already been posted";
    goto LABEL_12;
  }
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_10000B47C(v18, (uint64_t)qword_10097F520);
  int v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Posting request to unlock phone", v21, 2u);
    swift_slowDealloc();
  }

  id v22 = [self sharedManager];
  [v22 showRequestToUnlockNotification];

  *(unsigned char *)(v1 + v11) = 1;
}

void sub_1006E7EF0()
{
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_10097F520);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "triggerStateChange by command line", v3, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_1006E5BC0();
  }
}

void sub_1006E8000()
{
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_10097F520);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "register by command line", v3, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_1006E81A0(0x20646E616D6D6F63, 0xEC000000656E696CLL);
  }
  if (SFDeviceClassCodeGet() == 1)
  {
    swift_beginAccess();
    uint64_t v6 = swift_unknownObjectWeakLoadStrong();
    if (!v6) {
      return;
    }
    id v7 = (void *)v6;
    char v8 = 0;
    goto LABEL_13;
  }
  if (SFDeviceClassCodeGet() == 5)
  {
    swift_beginAccess();
    uint64_t v9 = swift_unknownObjectWeakLoadStrong();
    if (v9)
    {
      id v7 = (void *)v9;
      char v8 = 1;
LABEL_13:
      sub_1006CCB14(v8);
    }
  }
}

uint64_t sub_1006E81A0(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v21[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned int v10 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  id v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000B47C(v12, (uint64_t)qword_10097F520);
  swift_bridgeObjectRetain_n();
  id v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    v21[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315138;
    if (a2)
    {
      unint64_t v16 = a2;
    }
    else
    {
      a1 = 0x676E697373696D3CLL;
      unint64_t v16 = 0xE90000000000003ELL;
    }
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_100254634(a1, v16, v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Resetting registration state because: %s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  unint64_t v17 = sub_1002460C0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v18 = (unint64_t *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID);
  swift_beginAccess();
  *uint64_t v18 = v17;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1006E849C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[28] = a5;
  v6[29] = a6;
  v6[27] = a4;
  uint64_t v7 = type metadata accessor for Date();
  v6[30] = v7;
  v6[31] = *(void *)(v7 - 8);
  v6[32] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  v6[33] = v8;
  v6[34] = *(void *)(v8 - 8);
  v6[35] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DispatchQoS();
  v6[36] = v9;
  v6[37] = *(void *)(v9 - 8);
  v6[38] = swift_task_alloc();
  uint64_t v10 = sub_10000A844(&qword_10096FBD8);
  v6[39] = v10;
  v6[40] = *(void *)(v10 - 8);
  v6[41] = swift_task_alloc();
  v6[42] = swift_task_alloc();
  v6[43] = swift_task_alloc();
  v6[44] = swift_task_alloc();
  v6[45] = swift_task_alloc();
  v6[46] = swift_task_alloc();
  sub_10000A844(&qword_10097F838);
  v6[47] = swift_task_alloc();
  return _swift_task_switch(sub_1006E86E8, 0, 0);
}

uint64_t sub_1006E86E8()
{
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[48] = sub_10000B47C(v1, (uint64_t)qword_10097F520);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "BioArmInitiator: Waiting to arm next device...", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = (void *)v0[27];

  uint64_t v6 = v5[3];
  uint64_t v7 = sub_10026BB6C(v5, v6);
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v8 + 16))(v9, v7, v6);
  v0[21] = swift_getAssociatedTypeWitness();
  v0[22] = swift_getAssociatedConformanceWitness();
  sub_100278AE4(v0 + 18);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  swift_task_dealloc();
  sub_1002AF758((uint64_t)(v0 + 18), v0[21]);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[49] = (uint64_t)v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1006E8960;
  uint64_t v11 = v0[47];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v11, 0, 0);
}

uint64_t sub_1006E8960()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1006E8A5C, 0, 0);
}

uint64_t sub_1006E8A5C()
{
  uint64_t v1 = v0[47];
  uint64_t v2 = v0[39];
  uint64_t v77 = (uint64_t)(v0 + 18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0[40] + 48))(v1, 1, v2) == 1)
  {
LABEL_6:
    sub_10024D338(v77);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
  os_log_type_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[31] + 32);
  uint64_t v4 = *(int *)(v2 + 48);
  uint64_t v5 = v0[46] + v4;
  uint64_t v6 = (long long *)(v1 + v4);
  v3(v0[46], v1, v0[30]);
  sub_1002AF688(v6, v5);
  if (static Date.> infix(_:_:)())
  {
    uint64_t v67 = v5;
    uint64_t v63 = (long long *)(v0 + 13);
    os_log_t log = (os_log_t)(v0 + 8);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "BioArmInitiator: Processing unarmed device!", v9, 2u);
      swift_slowDealloc();
    }
    uint64_t v10 = v0[45];
    uint64_t v11 = v0[46];
    uint64_t v12 = v0[39];
    uint64_t v62 = v0[38];
    uint64_t v70 = v0[37];
    uint64_t v13 = v0[35];
    uint64_t v71 = v0[36];
    uint64_t v14 = v0[33];
    uint64_t v66 = v0[34];
    uint64_t v15 = v0[30];
    uint64_t v16 = v0[31];
    unint64_t v17 = (void *)v0[29];

    uint64_t v18 = (long long *)(v10 + *(int *)(v12 + 48));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v10, v11, v15);
    sub_100278C8C(v67, (uint64_t)v18);
    sub_1002AF688(v18, (uint64_t)log);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v10, v15);
    sub_100278C8C((uint64_t)log, (uint64_t)v63);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v17;
    sub_1002AF688(v63, v19 + 24);
    v0[6] = sub_10070ED40;
    v0[7] = v19;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_100296520;
    v0[5] = &unk_1008E6190;
    uint64_t v20 = _Block_copy(v0 + 2);
    id v21 = v17;
    static DispatchQoS.unspecified.getter();
    v0[26] = _swiftEmptyArrayStorage;
    sub_10000BBC0((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v20);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v13, v14);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v62, v71);
    sub_10024D338((uint64_t)log);
    sub_10000A7E8(v11, &qword_10096FBD8);
    swift_release();
    goto LABEL_6;
  }
  long long v69 = v3;
  uint64_t v24 = v0[46];
  uint64_t v25 = v0[44];
  uint64_t v26 = v0[42];
  uint64_t v72 = v0[43];
  uint64_t v73 = v0[41];
  uint64_t v27 = v0[39];
  uint64_t v28 = v0[30];
  NSString v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[31] + 16);
  uint64_t v30 = v25 + *(int *)(v27 + 48);
  v29(v25, v24, v28);
  sub_100278C8C(v5, v30);
  sub_10024D388(v25, v72, &qword_10096FBD8);
  uint64_t v31 = v26 + *(int *)(v27 + 48);
  uint64_t v68 = v29;
  v29(v26, v24, v28);
  sub_100278C8C(v5, v31);
  sub_10024D388(v26, v73, &qword_10096FBD8);
  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = v0[43];
    uint64_t v35 = v0[39];
    uint64_t v36 = (char *)swift_slowAlloc();
    v0[25] = swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 136315394;
    unint64_t v37 = (void *)(v34 + *(int *)(v35 + 48));
    uint64_t v38 = v37[3];
    uint64_t v39 = v37[4];
    sub_10026BB6C(v37, v38);
    uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8))(v38, v39);
    loga = v32;
    os_log_type_t v74 = v33;
    uint64_t aBlock = v36;
    if (v41)
    {
      unint64_t v42 = v41;
    }
    else
    {
      v0[23] = 0;
      v0[24] = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v42 = 0x80000001007B7770;
      uint64_t v40 = 0xD000000000000015;
    }
    uint64_t v47 = v0[45];
    uint64_t v64 = v0[46];
    uint64_t v48 = v0[43];
    uint64_t v49 = v0[41];
    uint64_t v50 = v0[39];
    uint64_t v52 = v0[31];
    uint64_t v51 = v0[32];
    uint64_t v53 = v0[30];
    *(void *)(aBlock + 4) = sub_100254634(v40, v42, v0 + 25);
    swift_bridgeObjectRelease();
    sub_10000A7E8(v48, &qword_10096FBD8);
    *((_WORD *)aBlock + 6) = 2080;
    uint64_t v54 = *(int *)(v50 + 48);
    uint64_t v55 = v47 + v54;
    uint64_t v56 = v49 + v54;
    v68(v47, v49, v53);
    sub_100278C8C(v56, v55);
    v69(v51, v47, v53);
    sub_10024D338(v55);
    sub_10000BBC0(&qword_100974530, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v59 = v58;
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
    *(void *)(aBlock + 14) = sub_100254634(v57, v59, v0 + 25);
    swift_bridgeObjectRelease();
    sub_10000A7E8(v49, &qword_10096FBD8);
    _os_log_impl((void *)&_mh_execute_header, loga, v74, "BioArmInitiator: Skipping %s since it was yielded before %s", (uint8_t *)aBlock, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v46 = v64;
  }
  else
  {
    uint64_t v43 = v0[46];
    uint64_t v44 = v0[43];
    uint64_t v45 = v0[41];

    sub_10000A7E8(v45, &qword_10096FBD8);
    sub_10000A7E8(v44, &qword_10096FBD8);
    uint64_t v46 = v43;
  }
  sub_10000A7E8(v46, &qword_10096FBD8);
  sub_1002AF758(v77, v0[21]);
  uint64_t v60 = (void *)swift_task_alloc();
  v0[49] = v60;
  void *v60 = v0;
  v60[1] = sub_1006E8960;
  uint64_t v61 = v0[47];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v61, 0, 0);
}

uint64_t sub_1006E92C4(char *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  id v8 = [objc_allocWithZone((Class)SFAuthenticationOptions) init];
  v14[3] = sub_10000B740(0, &qword_10097F7D0);
  v14[4] = &off_1008DE258;
  v14[0] = v8;
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v11 = sub_10026BB6C(a2, v9);
  sub_10070B744(4uLL, (uint64_t)v11, v7, (uint64_t)v14, a1, v9, v10);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_10000A7E8((uint64_t)v14, &qword_10097F7D8);
}

uint64_t sub_1006E9424()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000B47C(v8, (uint64_t)qword_10097F520);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "BioArmInitiator: Stopping device stream", v11, 2u);
    swift_slowDealloc();
  }

  swift_retain();
  sub_100330740();
  swift_release();
  uint64_t v12 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiatorDeviceStream;
  swift_beginAccess();
  if (*(void *)(v12 + 24)) {
    sub_10024D338(v12);
  }
  *(void *)(v12 + 32) = 0;
  *(_OWORD *)uint64_t v12 = 0u;
  *(_OWORD *)(v12 + 16) = 0u;
  return swift_endAccess();
}

void *sub_1006E9654()
{
  uint64_t v1 = (uint64_t (**)(uint64_t))(v0
                                        + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_autoUnlockEligibleDevices);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0
                                         + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_autoUnlockEligibleDevices);
  swift_retain();
  uint64_t v3 = (void *)v2(5);
  swift_release();
  uint64_t v18 = v3;
  v17[3] = (uint64_t)&type metadata for SharingFeatureFlags;
  v17[4] = sub_1006BA13C();
  LOBYTE(v17[0]) = 8;
  char v4 = isFeatureEnabled(_:)();
  sub_10024D338((uint64_t)v17);
  if (v4)
  {
    uint64_t v5 = *v1;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t v6 = v5(3);
    swift_release();
    sub_1006CC630(v6, v3);
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    uint64_t v18 = v8;
  }
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000B47C(v9, (uint64_t)qword_10097F520);
  os_log_type_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    v17[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    swift_beginAccess();
    sub_10000B740(0, &qword_10096B3E8);
    sub_100361188();
    swift_bridgeObjectRetain();
    uint64_t v13 = Set.description.getter();
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    sub_100254634(v13, v15, v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "eligible reality devices: %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  return v18;
}

uint64_t sub_1006E98F8@<X0>(Swift::UInt a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v52 = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v9 - 8);
  os_log_type_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StateMetrics(0);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchPredicate();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (uint64_t *)((char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = *(void **)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *uint64_t v18 = v19;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  id v20 = v19;
  LOBYTE(v19) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  if (v19)
  {
    id v21 = *(uint64_t (**)(uint64_t))&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo];
    uint64_t v22 = swift_retain();
    uint64_t v23 = v21(v22);
    unint64_t v25 = v24;
    swift_release();
    uint64_t v26 = *(void (**)(uint64_t, unint64_t, char *, Swift::UInt))&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessionGenerator];
    swift_retain();
    uint64_t v50 = v23;
    unint64_t v49 = v25;
    v26(v23, v25, a2, a1);
    swift_release();
    uint64_t v57 = ObjectType;
    unint64_t v58 = &off_1008E6078;
    v56[0] = v5;
    uint64_t v27 = a4[3];
    uint64_t v28 = a4[4];
    sub_1002AF758((uint64_t)a4, v27);
    uint64_t v29 = *(void *)(*(void *)(v28 + 8) + 8);
    uint64_t v30 = *(void (**)(void *, uint64_t, uint64_t))(v29 + 16);
    uint64_t v31 = v5;
    v30(v56, v27, v29);
    sub_10026BB6C(a4, a4[3]);
    uint64_t v32 = (uint64_t)&v31[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics];
    swift_beginAccess();
    sub_10070F0FC(v32, (uint64_t)v14, type metadata accessor for StateMetrics);
    swift_beginAccess();
    sub_1004DCAD0(v14, a1);
    swift_endAccess();
    sub_10070EE60((uint64_t)v14, type metadata accessor for StateMetrics);
    os_log_type_t v33 = &v31[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager];
    swift_beginAccess();
    uint64_t v34 = *sub_10026BB6C(v33, *((void *)v33 + 3))
        + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
    swift_beginAccess();
    sub_10024A330(v34, (uint64_t)v11, (uint64_t *)&unk_100975040);
    uint64_t v36 = a4[3];
    uint64_t v35 = a4[4];
    sub_1002AF758((uint64_t)a4, v36);
    (*(void (**)(char *, uint64_t))(*(void *)(v35 + 8) + 24))(v11, v36);
    sub_10024A330(v52, (uint64_t)v56, &qword_10097BB50);
    uint64_t v38 = a4[3];
    uint64_t v37 = a4[4];
    sub_1002AF758((uint64_t)a4, v38);
    (*(void (**)(void *, uint64_t))(*(void *)(*(void *)(v37 + 8) + 8) + 72))(v56, v38);
    sub_100278C8C((uint64_t)a4, (uint64_t)v56);
    a2 = &v31[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions];
    swift_beginAccess();
    uint64_t v18 = *(void **)a2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)a2 = v18;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t v18 = sub_100253DE8(0, v18[2] + 1, 1, v18);
  *(void *)a2 = v18;
LABEL_3:
  unint64_t v41 = v18[2];
  unint64_t v40 = v18[3];
  if (v41 >= v40 >> 1)
  {
    uint64_t v18 = sub_100253DE8((void *)(v40 > 1), v41 + 1, 1, v18);
    *(void *)a2 = v18;
  }
  uint64_t v42 = sub_1002AF758((uint64_t)v56, v57);
  __chkstk_darwin(v42);
  uint64_t v44 = (uint64_t *)((char *)&v48 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v45 + 16))(v44);
  uint64_t v46 = *v44;
  uint64_t v54 = type metadata accessor for SDAuthenticationLockSession(0);
  uint64_t v55 = &off_1008DD7F0;
  *(void *)&long long v53 = v46;
  void v18[2] = v41 + 1;
  sub_1002AF688(&v53, (uint64_t)&v18[5 * v41 + 4]);
  sub_10024D338((uint64_t)v56);
  swift_endAccess();
  return sub_100250CC4(v50, v49);
}

uint64_t sub_1006E9ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v45 = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *(void **)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  id v18 = v17;
  unint64_t v19 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if (v19)
  {
    id v20 = *(uint64_t (**)(uint64_t))&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo];
    uint64_t v21 = swift_retain();
    uint64_t v13 = v20(v21);
    unint64_t v19 = v22;
    swift_release();
    uint64_t v23 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessionInitiatorGenerator];
    swift_retain();
    v23(v13, v19, a2, a1);
    swift_release();
    uint64_t v50 = ObjectType;
    uint64_t v51 = &off_1008E6078;
    v49[0] = v5;
    uint64_t v25 = *(void *)(a4 + 24);
    uint64_t v24 = *(void *)(a4 + 32);
    sub_1002AF758(a4, v25);
    uint64_t v26 = *(void *)(*(void *)(v24 + 8) + 8);
    uint64_t v27 = *(void (**)(void *, uint64_t, uint64_t))(v26 + 16);
    uint64_t v28 = v5;
    v27(v49, v25, v26);
    sub_10024A330(v45, (uint64_t)v49, &qword_10097BB50);
    uint64_t v29 = *(void *)(a4 + 24);
    uint64_t v30 = *(void *)(a4 + 32);
    sub_1002AF758(a4, v29);
    (*(void (**)(void *, uint64_t))(*(void *)(*(void *)(v30 + 8) + 8) + 72))(v49, v29);
    uint64_t v31 = &v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics];
    swift_beginAccess();
    uint64_t v32 = type metadata accessor for StateMetrics(0);
    sub_10024A330((uint64_t)&v31[*(int *)(v32 + 24)], (uint64_t)v12, (uint64_t *)&unk_100975040);
    uint64_t v33 = *(void *)(a4 + 24);
    uint64_t v34 = *(void *)(a4 + 32);
    sub_1002AF758(a4, v33);
    (*(void (**)(char *, uint64_t))(*(void *)(v34 + 8) + 24))(v12, v33);
    sub_100278C8C(a4, (uint64_t)v49);
    uint64_t v12 = &v28[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions];
    swift_beginAccess();
    uint64_t v16 = *(void **)v12;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v12 = v16;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t v16 = sub_100253DD4(0, v16[2] + 1, 1, v16);
  *(void *)uint64_t v12 = v16;
LABEL_3:
  unint64_t v37 = v16[2];
  unint64_t v36 = v16[3];
  if (v37 >= v36 >> 1)
  {
    uint64_t v16 = sub_100253DD4((void *)(v36 > 1), v37 + 1, 1, v16);
    *(void *)uint64_t v12 = v16;
  }
  uint64_t v38 = sub_1002AF758((uint64_t)v49, v50);
  __chkstk_darwin(v38);
  unint64_t v40 = (uint64_t *)((char *)&v44 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v41 + 16))(v40);
  uint64_t v42 = *v40;
  uint64_t v47 = type metadata accessor for SDAuthenticationKeySession();
  uint64_t v48 = &off_1008DB5E0;
  *(void *)&long long v46 = v42;
  void v16[2] = v37 + 1;
  sub_1002AF688(&v46, (uint64_t)&v16[5 * v37 + 4]);
  sub_10024D338((uint64_t)v49);
  swift_endAccess();
  return sub_100250CC4(v13, v19);
}

uint64_t sub_1006EA360(void *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessionAuthTypes;
  uint64_t result = swift_beginAccess();
  int64_t v5 = 0;
  uint64_t v6 = *(void *)v3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(*(void *)v3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(*(void *)v3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    do
    {
LABEL_4:
      while (v9)
      {
        unint64_t v11 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v12 = v11 | (v5 << 6);
        uint64_t v13 = a1[2];
        if (v13) {
          goto LABEL_23;
        }
      }
      int64_t v14 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_35;
      }
      if (v14 >= v10) {
        return 0;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v14);
      ++v5;
      if (!v15)
      {
        int64_t v5 = v14 + 1;
        if (v14 + 1 >= v10) {
          return 0;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v5);
        if (!v15)
        {
          int64_t v5 = v14 + 2;
          if (v14 + 2 >= v10) {
            return 0;
          }
          unint64_t v15 = *(void *)(v6 + 8 * v5);
          if (!v15)
          {
            int64_t v5 = v14 + 3;
            if (v14 + 3 >= v10) {
              return 0;
            }
            unint64_t v15 = *(void *)(v6 + 8 * v5);
            if (!v15)
            {
              int64_t v16 = v14 + 4;
              if (v16 >= v10) {
                return 0;
              }
              unint64_t v15 = *(void *)(v6 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  int64_t v5 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_36;
                  }
                  if (v5 >= v10) {
                    return 0;
                  }
                  unint64_t v15 = *(void *)(v6 + 8 * v5);
                  ++v16;
                  if (v15) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v5 = v16;
            }
          }
        }
      }
LABEL_22:
      unint64_t v9 = (v15 - 1) & v15;
      unint64_t v12 = __clz(__rbit64(v15)) + (v5 << 6);
      uint64_t v13 = a1[2];
    }
    while (!v13);
LABEL_23:
    uint64_t v17 = *(void *)(*(void *)(*(void *)v3 + 56) + 8 * v12);
    if (a1[4] == v17) {
      return 1;
    }
    if (v13 != 1)
    {
      if (a1[5] == v17) {
        return 1;
      }
      if (v13 != 2) {
        break;
      }
    }
  }
  uint64_t v18 = 6;
  while (1)
  {
    uint64_t v19 = v18 - 3;
    if (__OFADD__(v18 - 4, 1)) {
      break;
    }
    if (a1[v18] == v17) {
      return 1;
    }
    ++v18;
    if (v19 == v13) {
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1006EA524@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, void *a5@<X8>)
{
  uint64_t v6 = v5;
  int v38 = a4;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v15 = &v37[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int64_t v16 = *(void **)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *unint64_t v15 = v16;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  id v17 = v16;
  LOBYTE(v16) = _dispatchPreconditionTest(_:)();
  uint64_t v19 = *(void (**)(void *, uint64_t))(v13 + 8);
  uint64_t v18 = (char *)(v13 + 8);
  v19(v15, v12);
  if (v16)
  {
    id v20 = *(void (**)(uint64_t, uint64_t, uint64_t))&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessionGenerator];
    swift_retain();
    v20(a1, a2, a3);
    swift_release();
    uint64_t v43 = ObjectType;
    uint64_t v44 = &off_1008E6078;
    v42[0] = v6;
    uint64_t v22 = a5[3];
    uint64_t v21 = a5[4];
    sub_1002AF758((uint64_t)a5, v22);
    uint64_t v23 = *(void *)(*(void *)(v21 + 8) + 8);
    uint64_t v24 = *(void (**)(void *, uint64_t, uint64_t))(v23 + 16);
    uint64_t v25 = v6;
    v24(v42, v22, v23);
    uint64_t v27 = a5[3];
    uint64_t v26 = a5[4];
    sub_1002AF758((uint64_t)a5, v27);
    (*(void (**)(void, uint64_t))(*(void *)(v26 + 8) + 24))(v38 & 1, v27);
    sub_100278C8C((uint64_t)a5, (uint64_t)v42);
    uint64_t v18 = &v25[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions];
    swift_beginAccess();
    a5 = *(void **)v18;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v18 = a5;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  a5 = sub_100253C3C(0, a5[2] + 1, 1, a5);
  *(void *)uint64_t v18 = a5;
LABEL_3:
  unint64_t v30 = a5[2];
  unint64_t v29 = a5[3];
  if (v30 >= v29 >> 1)
  {
    a5 = sub_100253C3C((void *)(v29 > 1), v30 + 1, 1, a5);
    *(void *)uint64_t v18 = a5;
  }
  uint64_t v31 = sub_1002AF758((uint64_t)v42, v43);
  __chkstk_darwin(v31);
  uint64_t v33 = (uint64_t *)&v37[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v34 + 16))(v33);
  uint64_t v35 = *v33;
  uint64_t v40 = type metadata accessor for SDAuthenticationPairingKeySession();
  uint64_t v41 = &off_1008E0B60;
  *(void *)&long long v39 = v35;
  a5[2] = v30 + 1;
  sub_1002AF688(&v39, (uint64_t)&a5[5 * v30 + 4]);
  sub_10024D338((uint64_t)v42);
  return swift_endAccess();
}

void sub_1006EA8B0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  char v4 = v3;
  uint64_t v82 = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v7 - 8);
  char v83 = (char *)v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (char *)v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = __chkstk_darwin(v12);
  long long v81 = (char *)v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v86 = (char *)v72 - v16;
  id v17 = (void *)type metadata accessor for DispatchPredicate();
  uint64_t v18 = *(v17 - 1);
  __chkstk_darwin(v17);
  id v20 = (void *)((char *)v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v85 = v4;
  uint64_t v21 = *(void **)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *id v20 = v21;
  (*(void (**)(void *, void, void *))(v18 + 104))(v20, enum case for DispatchPredicate.onQueue(_:), v17);
  id v22 = v21;
  LOBYTE(v21) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, void *))(v18 + 8))(v20, v17);
  if ((v21 & 1) == 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  id v23 = objc_allocWithZone((Class)SDAuthenticationPrePairingRequest);
  sub_10025ADCC(a1, a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100250CC4(a1, a2);
  id v17 = [v23 initWithData:isa];

  if (!v17)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_10000B47C(v37, (uint64_t)qword_10097F520);
    sub_10025ADCC(a1, a2);
    sub_10025ADCC(a1, a2);
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v38))
    {
      long long v39 = (uint8_t *)swift_slowAlloc();
      *(void *)&v87[0] = swift_slowAlloc();
      *(_DWORD *)long long v39 = 136315138;
      sub_10025ADCC(a1, a2);
      uint64_t v40 = Data.description.getter();
      unint64_t v42 = v41;
      sub_100250CC4(a1, a2);
      uint64_t v88 = sub_100254634(v40, v42, (uint64_t *)v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100250CC4(a1, a2);
      sub_100250CC4(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v34, v38, "Failed to unwrap SDAuthenticationPrePairingRequest (data: %s", v39, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100250CC4(a1, a2);
      sub_100250CC4(a1, a2);
    }
LABEL_21:

    return;
  }
  id v25 = [v17 sessionID];
  if (!v25)
  {
LABEL_6:
    if (qword_10096A190 == -1)
    {
LABEL_7:
      uint64_t v33 = type metadata accessor for Logger();
      sub_10000B47C(v33, (uint64_t)qword_10097F520);
      uint64_t v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v34, v35))
      {
        unint64_t v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v36 = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "Message does not have a session ID", v36, 2u);
        swift_slowDealloc();

        return;
      }

      goto LABEL_21;
    }
LABEL_30:
    swift_once();
    goto LABEL_7;
  }
  uint64_t v26 = v25;
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v29 = v28;

  UUID.init(uuidString:)();
  uint64_t v30 = v13;
  uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v32 = v12;
  if (v31(v11, 1, v12) == 1)
  {
    swift_bridgeObjectRelease();
    sub_10000A7E8((uint64_t)v11, &qword_100974EA0);
    goto LABEL_6;
  }
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  uint64_t v44 = v86;
  v43(v86, v11, v32);
  if (![v17 hasType]
    || (unint64_t v45 = sub_10050A7B4([v17 type]), (v46 & 1) != 0))
  {
    swift_bridgeObjectRelease();
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v56 = type metadata accessor for Logger();
    sub_10000B47C(v56, (uint64_t)qword_10097F520);
    uint64_t v57 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v57, v58))
    {
      unint64_t v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v59 = 0;
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "Message missing authenticationType", v59, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v30 + 8))(v44, v32);
  }
  else
  {
    unint64_t v77 = v45;
    uint64_t v78 = v43;
    uint64_t v79 = v27;
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    sub_10000B47C(v47, (uint64_t)qword_10097F520);
    uint64_t v48 = v17;
    swift_bridgeObjectRetain_n();
    uint64_t v80 = v48;
    unint64_t v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.default.getter();
    int v51 = v50;
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v52 = swift_slowAlloc();
      int v75 = v51;
      uint64_t v53 = v52;
      uint64_t v73 = (void *)swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      *(void *)&v87[0] = v76;
      *(_DWORD *)uint64_t v53 = 138412546;
      os_log_t v74 = v49;
      v72[1] = v53 + 12;
      uint64_t v88 = (uint64_t)v80;
      v72[2] = &v89;
      uint64_t v54 = v80;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v73 = v17;

      uint64_t v44 = v86;
      *(_WORD *)(v53 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v88 = sub_100254634(v79, v29, (uint64_t *)v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      os_log_t v55 = v74;
      _os_log_impl((void *)&_mh_execute_header, v74, (os_log_type_t)v75, "Received %@ for sessionID %s", (uint8_t *)v53, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      id v60 = v80;

      swift_bridgeObjectRelease_n();
    }
    uint64_t v61 = type metadata accessor for TaskPriority();
    uint64_t v62 = (uint64_t)v83;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v83, 1, 1, v61);
    sub_100278C8C(v82, (uint64_t)v87);
    uint64_t v63 = v81;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v81, v44, v32);
    unint64_t v64 = (*(unsigned __int8 *)(v30 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v65 = v14 + v64 + 7;
    uint64_t v66 = v44;
    unint64_t v67 = v65 & 0xFFFFFFFFFFFFFFF8;
    uint64_t v68 = (void *)swift_allocObject();
    v68[2] = 0;
    v68[3] = 0;
    unsigned char v68[4] = v77;
    sub_1002AF688(v87, (uint64_t)(v68 + 5));
    v68[10] = v79;
    v68[11] = v29;
    long long v69 = (char *)v68 + v64;
    uint64_t v70 = v85;
    v68[12] = v85;
    v78(v69, v63, v32);
    *(void *)((char *)v68 + v67) = ObjectType;
    id v71 = v70;
    sub_10028CFA8(v62, (uint64_t)&unk_10097F8C0, (uint64_t)v68);
    swift_release();

    (*(void (**)(char *, uint64_t))(v30 + 8))(v66, v32);
  }
}

uint64_t sub_1006EB304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[52] = a8;
  v8[53] = v15;
  v8[50] = a6;
  v8[51] = a7;
  v8[48] = a4;
  v8[49] = a5;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  v8[54] = v9;
  v8[55] = *(void *)(v9 - 8);
  v8[56] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for DispatchQoS();
  v8[57] = v10;
  v8[58] = *(void *)(v10 - 8);
  v8[59] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for UUID();
  v8[60] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v8[61] = v12;
  v8[62] = *(void *)(v12 + 64);
  v8[63] = swift_task_alloc();
  type metadata accessor for String.Encoding();
  v8[64] = swift_task_alloc();
  return _swift_task_switch(sub_1006EB4EC, 0, 0);
}

uint64_t sub_1006EB4EC()
{
  if (v0[48] == 5) {
    sub_100711040();
  }
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = (id)SFLocalizedStringForKey();

  if (v2)
  {
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;
  }
  else
  {
    unint64_t v5 = 0x80000001007C80B0;
    uint64_t v3 = 0xD000000000000010;
  }
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = (id)SFLocalizedStringForKey();

  if (!v7)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v11 = (void *)v0[49];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10000A844((uint64_t *)&unk_10096EE60);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10076E7A0;
  *(void *)(v12 + 56) = &type metadata for String;
  unint64_t v13 = sub_1002E695C();
  *(void *)(v12 + 64) = v13;
  *(void *)(v12 + 32) = v3;
  *(void *)(v12 + 40) = v5;
  uint64_t v14 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[65] = v16;
  uint64_t v17 = v11[3];
  uint64_t v18 = v11[4];
  sub_10026BB6C(v11, v17);
  uint64_t v8 = (uint64_t (*)())(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 56))(v17, v18);
  if (!v9)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v19 = v8;
  unint64_t v20 = v9;
  swift_bridgeObjectRelease();
  uint64_t v21 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0) {
    uint64_t v21 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL;
  }
  if (v21)
  {
    uint64_t v36 = v14;
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = (id)SFLocalizedStringForKey();

    if (v23)
    {
      uint64_t v24 = (void *)v0[49];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_10076E7A0;
      uint64_t v26 = v11[3];
      uint64_t v27 = v11[4];
      sub_10026BB6C(v24, v26);
      uint64_t v8 = (uint64_t (*)())(*(uint64_t (**)(uint64_t, uint64_t))(v27 + 56))(v26, v27);
      if (v9)
      {
        *(void *)(v25 + 56) = &type metadata for String;
        *(void *)(v25 + 64) = v13;
        *(void *)(v25 + 32) = v8;
        *(void *)(v25 + 40) = v9;
        uint64_t v28 = static String.localizedStringWithFormat(_:_:)();
        uint64_t v30 = v29;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v14 = v36;
        goto LABEL_16;
      }
      goto LABEL_22;
    }
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  NSString v31 = String._bridgeToObjectiveC()();
  id v32 = (id)SFLocalizedStringForKey();

  if (!v32)
  {
LABEL_23:
    __break(1u);
    return _swift_task_switch(v8, v9, v10);
  }
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v33;

LABEL_16:
  v0[66] = v30;
  uint64_t v34 = swift_task_alloc();
  v0[67] = v34;
  *(void *)uint64_t v34 = v0;
  *(void *)(v34 + 8) = sub_1006EBFC0;
  *(unsigned char *)(v34 + 584) = 0;
  *(void *)(v34 + 544) = v30;
  *(void *)(v34 + 536) = v28;
  *(void *)(v34 + 528) = v16;
  *(void *)(v34 + 520) = v14;
  uint64_t v8 = sub_10070F704;
  unint64_t v9 = 0;
  uint64_t v10 = 0;
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_1006EBFC0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (void *)*v3;
  v4[68] = a1;
  v4[69] = a2;
  v4[70] = v2;
  swift_task_dealloc();
  if (v2)
  {
    unint64_t v5 = sub_1006ECA4C;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v5 = sub_1006EC124;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1006EC124()
{
  uint64_t v67 = v0;
  *(_OWORD *)(v0 + 296) = *(_OWORD *)(v0 + 544);
  static String.Encoding.utf8.getter();
  sub_1003CEFBC();
  uint64_t v1 = String.init<A>(bytes:encoding:)();
  if (!v2)
  {
    if (qword_10096A190 == -1)
    {
LABEL_9:
      uint64_t v15 = type metadata accessor for Logger();
      sub_10000B47C(v15, (uint64_t)qword_10097F520);
      uint64_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.error.getter();
      BOOL v18 = os_log_type_enabled(v16, v17);
      unint64_t v19 = *(void *)(v0 + 552);
      uint64_t v20 = *(void *)(v0 + 544);
      if (v18)
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "Could not decode passcode", v21, 2u);
        swift_slowDealloc();
      }
      sub_100250CC4(v20, v19);

      goto LABEL_22;
    }
LABEL_26:
    swift_once();
    goto LABEL_9;
  }
  uint64_t v3 = v1;
  uint64_t v4 = v2;
  unint64_t v5 = *(void *)(v0 + 384);
  if (v5 <= 7 && ((1 << v5) & 0xC4) != 0 || v5 >= 9)
  {
    unint64_t v64 = (void *)(v0 + 192);
    swift_bridgeObjectRelease();
    id v6 = [objc_allocWithZone((Class)SFAuthenticationOptions) init];
    *(void *)(v0 + 568) = v6;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    uint64_t v61 = v6;
    [v6 setAuthorizationToken:isa];

    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000B47C(v8, (uint64_t)qword_10097F520);
    swift_bridgeObjectRetain_n();
    unint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    BOOL v11 = os_log_type_enabled(v9, v10);
    unint64_t v12 = *(void *)(v0 + 408);
    if (v11)
    {
      uint64_t v13 = *(void *)(v0 + 400);
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 376) = sub_100254634(v13, v12, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Got passcode, starting executor for sessionID %s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v22 = *(void *)(v0 + 496);
    uint64_t v23 = *(void *)(v0 + 480);
    uint64_t v24 = *(void *)(v0 + 488);
    uint64_t v54 = *(char **)(v0 + 416);
    uint64_t v55 = *(void *)(v0 + 504);
    uint64_t v25 = *(void *)(v0 + 392);
    uint64_t v57 = *(void *)(v0 + 384);
    *(_OWORD *)unint64_t v64 = 0u;
    *(_OWORD *)(v0 + 208) = 0u;
    *(void *)(v0 + 224) = 0;
    queue = *(NSObject **)&v54[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
    (*(void (**)(void))(v24 + 16))();
    sub_100278C8C(v25, v0 + 232);
    unint64_t v26 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    unint64_t v27 = (v22 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v28 = (v27 + 47) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v29 = swift_allocObject();
    *(void *)(v0 + 576) = v29;
    *(void *)(v29 + 16) = v64;
    *(void *)(v29 + 24) = v54;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v24 + 32))(v29 + v26, v55, v23);
    sub_1002AF688((long long *)(v0 + 232), v29 + v27);
    *(void *)(v29 + v28) = v57;
    *(void *)(v29 + ((v28 + 15) & 0xFFFFFFFFFFFFFFF8)) = v6;
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = sub_100710E8C;
    *(void *)(v30 + 24) = v29;
    *(void *)(v0 + 96) = sub_1006562A4;
    *(void *)(v0 + 104) = v30;
    *(void *)(v0 + 64) = _NSConcreteStackBlock;
    *(void *)(v0 + 72) = 1107296256;
    *(void *)(v0 + 80) = sub_1006CDF68;
    *(void *)(v0 + 88) = &unk_1008E6760;
    NSString v31 = _Block_copy((const void *)(v0 + 64));
    id v32 = v54;
    id v33 = v61;
    swift_retain();
    swift_release();
    dispatch_sync(queue, v31);
    _Block_release(v31);
    LOBYTE(v27) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v27 & 1) == 0)
    {
      uint64_t v34 = *(void *)(v0 + 216);
      if (v34)
      {
        sub_10026BB6C(v64, v34);
        *(_OWORD *)(v0 + 128) = 0u;
        *(void *)(v0 + 144) = 0;
        *(_OWORD *)(v0 + 112) = 0u;
        os_log_type_t v35 = (void *)swift_task_alloc();
        *(void *)(v0 + 584) = v35;
        *os_log_type_t v35 = v0;
        v35[1] = sub_1006ED198;
        return sub_1004F74C0(v0 + 112);
      }
      uint64_t v37 = *(void **)(v0 + 568);
      sub_100250CC4(*(void *)(v0 + 544), *(void *)(v0 + 552));

      sub_10000A7E8((uint64_t)v64, &qword_100974F18);
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v58 = *(void *)(v0 + 544);
  dispatch_queue_t queuea = *(dispatch_queue_t *)(v0 + 552);
  uint64_t v38 = *(void *)(v0 + 496);
  uint64_t v50 = *(void *)(v0 + 504);
  uint64_t v39 = *(void *)(v0 + 488);
  uint64_t v49 = *(void *)(v0 + 480);
  uint64_t v62 = *(void *)(v0 + 464);
  uint64_t aBlock = *(void **)(v0 + 456);
  uint64_t v51 = *(void *)(v0 + 472);
  uint64_t v52 = *(void *)(v0 + 448);
  uint64_t v56 = *(void *)(v0 + 440);
  uint64_t v53 = *(void *)(v0 + 432);
  uint64_t v65 = *(void **)(v0 + 416);
  uint64_t v40 = *(void *)(v0 + 392);
  (*(void (**)(void))(v39 + 16))();
  sub_100278C8C(v40, v0 + 152);
  unint64_t v41 = (*(unsigned __int8 *)(v39 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  unint64_t v42 = (v38 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v43 = (v42 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v65;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v39 + 32))(v44 + v41, v50, v49);
  sub_1002AF688((long long *)(v0 + 152), v44 + v42);
  unint64_t v45 = (uint64_t *)(v44 + v43);
  *unint64_t v45 = v3;
  v45[1] = v4;
  *(void *)(v44 + ((v43 + 23) & 0xFFFFFFFFFFFFFFF8)) = v5;
  *(void *)(v0 + 48) = sub_100710DDC;
  *(void *)(v0 + 56) = v44;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_100296520;
  *(void *)(v0 + 40) = &unk_1008E66E8;
  char v46 = _Block_copy((const void *)(v0 + 16));
  id v47 = v65;
  static DispatchQoS.unspecified.getter();
  *(void *)(v0 + 336) = _swiftEmptyArrayStorage;
  sub_10000BBC0((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  sub_100250CC4(v58, (unint64_t)queuea);
  _Block_release(v46);
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v52, v53);
  (*(void (**)(uint64_t, void *))(v62 + 8))(v51, aBlock);
LABEL_21:
  swift_release();
LABEL_22:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v48 = *(uint64_t (**)(void))(v0 + 8);
  return v48();
}

uint64_t sub_1006ECA4C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 560);
  id v2 = [objc_allocWithZone((Class)SDAuthenticationPairingResponse) init];
  uint64_t v3 = v2;
  if (v2)
  {
    [v2 setVersion:1];
    id v4 = v3;
    NSString v5 = String._bridgeToObjectiveC()();
    [v4 setSessionID:v5];
  }
  *(void *)(v0 + 312) = v1;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  id v6 = &qword_10096A000;
  if ((swift_dynamicCast() & 1) == 0)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000B47C(v9, (uint64_t)qword_10097F520);
    swift_errorRetain();
    swift_errorRetain();
    os_log_type_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      unint64_t v42 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v12 = 138412290;
      swift_errorRetain();
      uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 320) = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v42 = v13;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "LA Error: %@", v12, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      id v6 = &qword_10096A000;
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v14 = (void *)_convertErrorToNSError(_:)();
    if ([v14 code] == (id)-5) {
      uint64_t v15 = 5;
    }
    else {
      uint64_t v15 = 23;
    }
    id v8 = v3;
    [v8 setErrorCode:v15];

    goto LABEL_15;
  }
  if (v3)
  {
    uint64_t v7 = *(unsigned int *)(v0 + 272);
    id v8 = v3;
    [v8 setErrorCode:v7];
    swift_bridgeObjectRelease();
LABEL_15:

    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
LABEL_16:
  if (v6[50] != -1) {
    swift_once();
  }
  uint64_t v16 = (void *)(v0 + 360);
  uint64_t v17 = type metadata accessor for Logger();
  sub_10000B47C(v17, (uint64_t)qword_10097F520);
  id v18 = v3;
  swift_errorRetain();
  id v19 = v18;
  swift_errorRetain();
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = v3;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 138412546;
    swift_errorRetain();
    uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 352) = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v24 = v25;
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v23 + 12) = 2112;
    if (v22)
    {
      *(void *)(v0 + 328) = v19;
      id v26 = v19;
    }
    else
    {
      *(void *)(v0 + 344) = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v24[1] = v22;

    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Reporting error %@ to remote device as %@", (uint8_t *)v23, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    uint64_t v16 = (void *)(v0 + 360);
    uint64_t v3 = v22;

    if (!v22) {
      goto LABEL_28;
    }
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    if (!v3)
    {
LABEL_28:
      id v34 = v19;
      os_log_type_t v35 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        uint64_t v38 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v37 = 138412290;
        if (v3)
        {
          *uint64_t v16 = v34;
          id v39 = v34;
        }
        else
        {
          *(void *)(v0 + 368) = 0;
        }
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v38 = v3;

        _os_log_impl((void *)&_mh_execute_header, v35, v36, "Could not convert response to data: %@", v37, 0xCu);
        sub_10000A844(&qword_10096B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {

        swift_errorRelease();
      }
      goto LABEL_34;
    }
  }
  id v27 = [v19 data];
  if (!v27) {
    goto LABEL_28;
  }
  unint64_t v28 = v27;
  unint64_t v30 = *(void *)(v0 + 384);
  uint64_t v29 = *(void *)(v0 + 392);
  uint64_t v31 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v33 = v32;

  sub_1006DF18C(v31, v33, v29, 4, v30);
  swift_errorRelease();
  sub_100250CC4(v31, v33);
LABEL_34:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_1006ED198()
{
  uint64_t v1 = *v0 + 112;
  swift_task_dealloc();
  sub_10000A7E8(v1, (uint64_t *)&unk_1009778D8);
  return _swift_task_switch(sub_1006ED2D4, 0, 0);
}

uint64_t sub_1006ED2D4()
{
  uint64_t v1 = (void *)v0[71];
  sub_100250CC4(v0[68], v0[69]);

  sub_10000A7E8((uint64_t)(v0 + 24), &qword_100974F18);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1006ED3BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  v13[3] = sub_10000B740(0, &qword_10097F7D0);
  v13[4] = &off_1008DE258;
  v13[0] = a6;
  id v11 = a6;
  sub_1006DC7AC(a3, a4, a5, 0, (uint64_t)v13, (uint64_t)v14);
  sub_10000A7E8((uint64_t)v13, &qword_10097F7D8);
  return sub_10026B410((uint64_t)v14, a1, &qword_100974F18);
}

uint64_t sub_1006ED478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1006DCBA4(a2, a3, a4, a5, a6, v7);
  sub_10026BB6C(v7, v7[3]);
  sub_10035BF70();
  return sub_10024D338((uint64_t)v7);
}

void sub_1006ED4D8(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v103 = a3;
  uint64_t v6 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v6 - 8);
  unint64_t v99 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A844(&qword_100974EA0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v98 = (uint64_t)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v102 = (char *)&v92 - v11;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v100 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v92 - v16;
  uint64_t v18 = type metadata accessor for DispatchPredicate();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  os_log_type_t v21 = (uint64_t *)((char *)&v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *os_log_type_t v21 = v22;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
  id v23 = v22;
  LOBYTE(v22) = _dispatchPreconditionTest(_:)();
  uint64_t v25 = *(void (**)(void *, uint64_t))(v19 + 8);
  id v24 = (id)(v19 + 8);
  v25(v21, v18);
  if ((v22 & 1) == 0)
  {
    __break(1u);
LABEL_55:
    swift_once();
    goto LABEL_4;
  }
  id v26 = objc_allocWithZone((Class)SDAuthenticationPairingRequest);
  sub_10025ADCC(a1, a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100250CC4(a1, a2);
  id v24 = [v26 initWithData:isa];

  if (!v24)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v40 = type metadata accessor for Logger();
    sub_10000B47C(v40, (uint64_t)qword_10097F520);
    sub_10025ADCC(a1, a2);
    sub_10025ADCC(a1, a2);
    unint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v108 = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136315138;
      sub_10025ADCC(a1, a2);
      uint64_t v44 = Data.description.getter();
      unint64_t v46 = v45;
      sub_100250CC4(a1, a2);
      *(void *)&long long v105 = sub_100254634(v44, v46, (uint64_t *)&v108);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100250CC4(a1, a2);
      sub_100250CC4(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Failed to unwrap SDAuthenticationPairingRequest (data: %s)", v43, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100250CC4(a1, a2);
      sub_100250CC4(a1, a2);
    }
LABEL_21:

    return;
  }
  uint64_t v97 = v3;
  if (qword_10096A190 != -1) {
    goto LABEL_55;
  }
LABEL_4:
  uint64_t v28 = type metadata accessor for Logger();
  uint64_t v29 = sub_10000B47C(v28, (uint64_t)qword_10097F520);
  sub_100278C8C((uint64_t)v103, (uint64_t)&v108);
  unint64_t v30 = v24;
  uint64_t v101 = v29;
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v94 = v30;
    uint64_t v95 = v13;
    uint64_t v96 = v12;
    uint64_t v33 = swift_slowAlloc();
    id v34 = (void *)swift_slowAlloc();
    uint64_t v92 = swift_slowAlloc();
    v104[0] = v92;
    *(_DWORD *)uint64_t v33 = 136315394;
    uint64_t v35 = v109;
    uint64_t v36 = v110;
    sub_10026BB6C(&v108, v109);
    uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v35, v36);
    uint64_t v93 = v17;
    if (v38)
    {
      unint64_t v39 = v38;
    }
    else
    {
      *(void *)&long long v105 = 0;
      *((void *)&v105 + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v39 = 0x80000001007B7770;
      uint64_t v37 = 0xD000000000000015;
    }
    *(void *)&long long v105 = sub_100254634(v37, v39, v104);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)&v108);
    *(_WORD *)(v33 + 12) = 2112;
    unint64_t v30 = v94;
    *(void *)&long long v105 = v94;
    id v47 = v94;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v34 = v24;

    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Received Pairing/RegistrationRequest from %s: %@", (uint8_t *)v33, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v12 = v96;
    uint64_t v13 = v95;
    uint64_t v17 = v93;
  }
  else
  {
    sub_10024D338((uint64_t)&v108);
  }
  id v48 = [v30 sessionID];
  if (!v48) {
    goto LABEL_18;
  }
  uint64_t v49 = v48;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v50 = (uint64_t)v102;
  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  uint64_t v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v51(v50, 1, v12) == 1)
  {
    sub_10000A7E8(v50, &qword_100974EA0);
LABEL_18:
    unint64_t v41 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v41, v52))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v53 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v52, "Message does not have a session ID", v53, 2u);
      swift_slowDealloc();

      return;
    }

    goto LABEL_21;
  }
  uint64_t v54 = (uint64_t)v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v17, v50, v12);
  if (![v30 hasType]
    || (unint64_t v55 = sub_10050A7B4([v30 type]), (v56 & 1) != 0))
  {
    uint64_t v67 = Logger.logObject.getter();
    os_log_type_t v68 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v67, v68))
    {
      long long v69 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v69 = 0;
      _os_log_impl((void *)&_mh_execute_header, v67, v68, "Message does not have an authentication type", v69, 2u);
      swift_slowDealloc();
      uint64_t v70 = v67;
    }
    else
    {
      uint64_t v70 = v30;
      unint64_t v30 = v67;
    }

LABEL_35:
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v54, v12);
    return;
  }
  uint64_t v57 = v55;
  if (v55 <= 7 && ((1 << v55) & 0xC4) != 0 || v55 >= 9)
  {
    uint64_t v58 = (uint64_t *)(v97 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions);
    swift_beginAccess();
    uint64_t v59 = *v58;
    if (*(void *)(*v58 + 16) && (unint64_t v60 = sub_100583A00(v54), (v61 & 1) != 0))
    {
      sub_100278C8C(*(void *)(v59 + 56) + 40 * v60, (uint64_t)&v105);
      sub_1002AF688(&v105, (uint64_t)&v108);
      swift_endAccess();
      uint64_t v62 = type metadata accessor for TaskPriority();
      uint64_t v63 = (uint64_t)v99;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v99, 1, 1, v62);
      sub_100278C8C((uint64_t)&v108, (uint64_t)&v105);
      unint64_t v64 = (void *)swift_allocObject();
      v64[2] = 0;
      v64[3] = 0;
      sub_1002AF688(&v105, (uint64_t)(v64 + 4));
      v64[9] = v30;
      uint64_t v65 = v30;
      uint64_t v66 = &unk_10097F8E8;
    }
    else
    {
      swift_endAccess();
      id v71 = [objc_allocWithZone((Class)SFAuthenticationOptions) init];
      *((void *)&v106 + 1) = sub_10000B740(0, &qword_10097F7D0);
      os_log_type_t v107 = &off_1008DE258;
      *(void *)&long long v105 = v71;
      sub_1006DC7AC(v54, (uint64_t)v103, v57, 1, (uint64_t)&v105, (uint64_t)&v108);
      sub_10000A7E8((uint64_t)&v105, &qword_10097F7D8);
      uint64_t v72 = type metadata accessor for TaskPriority();
      uint64_t v63 = (uint64_t)v99;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v99, 1, 1, v72);
      sub_100278C8C((uint64_t)&v108, (uint64_t)&v105);
      unint64_t v64 = (void *)swift_allocObject();
      v64[2] = 0;
      v64[3] = 0;
      v64[4] = v30;
      v64[5] = v57;
      sub_1002AF688(&v105, (uint64_t)(v64 + 6));
      uint64_t v65 = v30;
      uint64_t v66 = &unk_10097F8D8;
    }
    sub_10028CFA8(v63, (uint64_t)v66, (uint64_t)v64);
    swift_release();

    sub_10024D338((uint64_t)&v108);
    goto LABEL_35;
  }
  uint64_t v94 = v30;
  uint64_t v96 = v12;
  uint64_t v73 = (char **)(v97 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions);
  swift_beginAccess();
  os_log_t v74 = *v73;
  uint64_t v75 = *((void *)*v73 + 2);
  uint64_t v95 = v13;
  unint64_t v102 = v74;
  if (v75)
  {
    uint64_t v76 = (uint64_t)(v74 + 32);
    unint64_t v77 = (void (**)(char *, uint64_t))(v13 + 8);
    swift_bridgeObjectRetain();
    uint64_t v78 = v100;
    while (1)
    {
      sub_100278C8C(v76, (uint64_t)&v108);
      uint64_t v80 = v109;
      uint64_t v79 = v110;
      sub_10026BB6C(&v108, v109);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v79 + 8) + 8) + 32))(v80);
      LOBYTE(v79) = static UUID.== infix(_:_:)();
      (*v77)(v78, v96);
      if (v79) {
        break;
      }
      sub_10024D338((uint64_t)&v108);
      v76 += 40;
      if (!--v75) {
        goto LABEL_43;
      }
    }
    sub_1002AF688(&v108, (uint64_t)&v105);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_43:
    os_log_type_t v107 = 0;
    long long v105 = 0u;
    long long v106 = 0u;
  }
  swift_bridgeObjectRelease();
  uint64_t v81 = v96;
  uint64_t v82 = v95;
  if (*((void *)&v106 + 1))
  {
    sub_1002AF688(&v105, (uint64_t)&v108);
  }
  else
  {
    sub_10000A7E8((uint64_t)&v105, &qword_10097F8C8);
    sub_1006EA524(v54, (uint64_t)v103, v57, 0, &v108);
  }
  if (v57 != 8) {
    goto LABEL_53;
  }
  uint64_t v83 = v97 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI;
  swift_beginAccess();
  uint64_t v84 = v98;
  sub_10024A330(v83, v98, &qword_100974EA0);
  LODWORD(v83) = v51(v84, 1, v81);
  sub_10000A7E8(v84, &qword_100974EA0);
  if (v83 != 1)
  {
    uint64_t v85 = v109;
    uint64_t v86 = v110;
    sub_1002AF758((uint64_t)&v108, v109);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v86 + 8) + 24))(1, v85);
  }
  uint64_t v87 = v103[3];
  uint64_t v88 = v103[4];
  sub_10026BB6C(v103, v87);
  uint64_t v89 = (*(uint64_t (**)(uint64_t, uint64_t))(v88 + 8))(v87, v88);
  if (v90)
  {
    sub_1006EE6C0(v89, v90);
    swift_bridgeObjectRelease();
LABEL_53:
    sub_10026BB6C(&v108, v109);
    uint64_t v91 = v94;
    sub_1005C2108(v94);

    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v54, v81);
    sub_10024D338((uint64_t)&v108);
    return;
  }
  __break(1u);
}

uint64_t sub_1006EE324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return _swift_task_switch(sub_1006EE344, 0, 0);
}

uint64_t sub_1006EE344()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10026BB6C(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24));
  *(void *)(v0 + 40) = sub_10000B740(0, &qword_10097BE10);
  *(void *)(v0 + 48) = &off_1008D8830;
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  void *v3 = v0;
  v3[1] = sub_100713464;
  return sub_1004F74C0(v0 + 16);
}

uint64_t sub_1006EE424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[8] = a5;
  v6[9] = a6;
  v6[7] = a4;
  return _swift_task_switch(sub_1006EE448, 0, 0);
}

uint64_t sub_1006EE448()
{
  uint64_t v1 = *(void **)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = sub_10000B740(0, &qword_10097BE10);
  *(void *)(v0 + 16) = v1;
  uint64_t v4 = (_OWORD *)(v0 + 16);
  *(void *)(v0 + 40) = v3;
  *(void *)(v0 + 48) = &off_1008D8830;
  if ((unint64_t)(v2 - 9) >= 6)
  {
    id v6 = v1;
  }
  else
  {
    id v5 = v1;
    if (v2 == 10)
    {
      sub_10000A7E8(v0 + 16, (uint64_t *)&unk_1009778D8);
      *uint64_t v4 = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
      *(void *)(v0 + 48) = 0;
    }
  }
  sub_10026BB6C(*(void **)(v0 + 72), *(void *)(*(void *)(v0 + 72) + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v7;
  void *v7 = v0;
  v7[1] = sub_1006EE55C;
  return sub_1004F74C0((uint64_t)v4);
}

uint64_t sub_1006EE55C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1006EE658, 0, 0);
}

uint64_t sub_1006EE658()
{
  sub_10000A7E8(v0 + 16, (uint64_t *)&unk_1009778D8);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006EE6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a1;
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_100974F20);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = type metadata accessor for RegistrationState(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v33 = (uint64_t)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v34 = (uint64_t)&v32 - v14;
  uint64_t v15 = type metadata accessor for DispatchPredicate();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (uint64_t *)((char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v18 = v19;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  id v20 = v19;
  LOBYTE(v19) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  if (v19)
  {
    uint64_t v22 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID);
    swift_beginAccess();
    uint64_t v23 = *v22;
    if (!*(void *)(*v22 + 16))
    {
      id v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v27(v9, 1, 1, v10);
      uint64_t v24 = v35;
LABEL_8:
      sub_10000A7E8((uint64_t)v9, (uint64_t *)&unk_100974F20);
      swift_endAccess();
      uint64_t v28 = type metadata accessor for Date();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v7, 1, 1, v28);
      v7[*(int *)(v10 + 20)] = 1;
      v27(v7, 0, 1, v10);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_100467314((uint64_t)v7, v24, a2);
      return swift_endAccess();
    }
    swift_bridgeObjectRetain();
    uint64_t v24 = v35;
    uint64_t v25 = sub_1005838BC(v35, a2);
    if (v26)
    {
      sub_10070F0FC(*(void *)(v23 + 56) + *(void *)(v11 + 72) * v25, (uint64_t)v9, type metadata accessor for RegistrationState);
      id v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v27(v9, 0, 1, v10);
    }
    else
    {
      id v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v27(v9, 1, 1, v10);
    }
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
      goto LABEL_8;
    }
    uint64_t v29 = v34;
    sub_10070F174((uint64_t)v9, v34, type metadata accessor for RegistrationState);
    swift_endAccess();
    uint64_t v30 = v33;
    sub_10024A330(v29, v33, (uint64_t *)&unk_100975040);
    *(unsigned char *)(v30 + *(int *)(v10 + 20)) = 1;
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v36 = *v22;
    uint64_t *v22 = 0x8000000000000000;
    sub_100707B9C(v30, v24, a2, isUniquelyReferenced_nonNull_native, (uint64_t)v7);
    uint64_t *v22 = v36;
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_10000A7E8((uint64_t)v7, (uint64_t *)&unk_100974F20);
    return sub_10070EE60(v29, type metadata accessor for RegistrationState);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1006EEB94(uint64_t a1, unint64_t a2, void *a3)
{
  int64_t v119 = a3;
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_100974F20);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v9 - 8);
  uint64_t v117 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v117 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = type metadata accessor for UUID();
  uint64_t v121 = *(void *)(v122 - 8);
  uint64_t v14 = __chkstk_darwin(v122);
  unint64_t v118 = (char *)&v117 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v117 - v17;
  __chkstk_darwin(v16);
  uint64_t v123 = (uint64_t)&v117 - v19;
  id v20 = (void *)type metadata accessor for DispatchPredicate();
  uint64_t v21 = *(v20 - 1);
  __chkstk_darwin(v20);
  uint64_t v23 = (char **)((char *)&v117 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v120 = v3;
  uint64_t v24 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v23 = v24;
  (*(void (**)(void *, void, void *))(v21 + 104))(v23, enum case for DispatchPredicate.onQueue(_:), v20);
  id v25 = v24;
  LOBYTE(v24) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, void *))(v21 + 8))(v23, v20);
  if ((v24 & 1) == 0)
  {
    __break(1u);
    goto LABEL_86;
  }
  id v26 = objc_allocWithZone((Class)SDAuthenticationPairingResponse);
  sub_10025ADCC(a1, a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100250CC4(a1, a2);
  id v20 = [v26 initWithData:isa];

  if (!v20)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    sub_10000B47C(v36, (uint64_t)qword_10097F520);
    sub_10025ADCC(a1, a2);
    sub_10025ADCC(a1, a2);
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v37))
    {
      unint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v135 = swift_slowAlloc();
      *(_DWORD *)unint64_t v38 = 136315138;
      sub_10025ADCC(a1, a2);
      uint64_t v39 = Data.description.getter();
      unint64_t v41 = v40;
      sub_100250CC4(a1, a2);
      *(void *)&long long v132 = sub_100254634(v39, v41, (uint64_t *)&v135);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100250CC4(a1, a2);
      sub_100250CC4(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v33, v37, "Failed to unwrap SDAuthenticationPairingResponse (data: %s)", v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100250CC4(a1, a2);
      sub_100250CC4(a1, a2);
    }
LABEL_22:

    return;
  }
  id v28 = [v20 sessionID];
  if (!v28)
  {
LABEL_6:
    if (qword_10096A190 == -1)
    {
LABEL_7:
      uint64_t v32 = type metadata accessor for Logger();
      sub_10000B47C(v32, (uint64_t)qword_10097F520);
      uint64_t v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v35 = 0;
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "Message does not have a session ID", v35, 2u);
        swift_slowDealloc();

        return;
      }

      goto LABEL_22;
    }
LABEL_86:
    swift_once();
    goto LABEL_7;
  }
  uint64_t v29 = v28;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  uint64_t v30 = v121;
  uint64_t v31 = v122;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v13, 1, v122) == 1)
  {
    sub_10000A7E8((uint64_t)v13, &qword_100974EA0);
    goto LABEL_6;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v123, v13, v31);
  if (![v20 hasType])
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v55 = type metadata accessor for Logger();
    sub_10000B47C(v55, (uint64_t)qword_10097F520);
    char v56 = Logger.logObject.getter();
    os_log_type_t v57 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "PairingResponse does not have an authentication type", v58, 2u);
      swift_slowDealloc();
    }

    uint64_t v117 = 0;
    goto LABEL_29;
  }
  unint64_t v42 = sub_10050A7B4([v20 type]);
  uint64_t v43 = v42;
  if (v44)
  {
    uint64_t v117 = (char *)v42;
LABEL_29:
    char v59 = 1;
    goto LABEL_30;
  }
  if (v42 <= 7 && ((1 << v42) & 0xC4) != 0 || v42 >= 9)
  {
    unint64_t v45 = (uint64_t *)(v120 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions);
    swift_beginAccess();
    uint64_t v46 = *v45;
    uint64_t v47 = v123;
    if (*(void *)(*v45 + 16) && (unint64_t v48 = sub_100583A00(v123), (v49 & 1) != 0))
    {
      sub_100278C8C(*(void *)(v46 + 56) + 40 * v48, (uint64_t)&v132);
      sub_1002AF688(&v132, (uint64_t)&v135);
      swift_endAccess();
      uint64_t v50 = type metadata accessor for TaskPriority();
      uint64_t v51 = (uint64_t)v117;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v117, 1, 1, v50);
      sub_100278C8C((uint64_t)&v135, (uint64_t)&v132);
      os_log_type_t v52 = (void *)swift_allocObject();
      v52[2] = 0;
      v52[3] = 0;
      sub_1002AF688(&v132, (uint64_t)(v52 + 4));
      v52[9] = v20;
      uint64_t v53 = v20;
      uint64_t v54 = &unk_10097F910;
    }
    else
    {
      swift_endAccess();
      id v98 = [objc_allocWithZone((Class)SFAuthenticationOptions) init];
      *((void *)&v133 + 1) = sub_10000B740(0, &qword_10097F7D0);
      int64_t v134 = &off_1008DE258;
      *(void *)&long long v132 = v98;
      sub_1006DC7AC(v47, (uint64_t)v119, v43, 0, (uint64_t)&v132, (uint64_t)&v135);
      sub_10000A7E8((uint64_t)&v132, &qword_10097F7D8);
      uint64_t v99 = type metadata accessor for TaskPriority();
      uint64_t v51 = (uint64_t)v117;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v117, 1, 1, v99);
      sub_100278C8C((uint64_t)&v135, (uint64_t)&v132);
      os_log_type_t v52 = (void *)swift_allocObject();
      v52[2] = 0;
      v52[3] = 0;
      sub_1002AF688(&v132, (uint64_t)(v52 + 4));
      v52[9] = v20;
      uint64_t v53 = v20;
      uint64_t v54 = &unk_10097F900;
    }
    sub_10028CFA8(v51, (uint64_t)v54, (uint64_t)v52);
    swift_release();

    goto LABEL_64;
  }
  uint64_t v117 = (char *)v42;
  char v59 = 0;
LABEL_30:
  uint64_t v60 = v119[3];
  uint64_t v61 = v119[4];
  sub_10026BB6C(v119, v60);
  uint64_t v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8))(v60, v61);
  if (v63)
  {
    uint64_t v64 = v62;
    uint64_t v65 = v63;
    uint64_t v66 = (uint64_t *)(v120 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID);
    swift_beginAccess();
    uint64_t v67 = *v66;
    if (*(void *)(*v66 + 16) && (uint64_t v68 = sub_1005838BC(v64, v65), (v69 & 1) != 0))
    {
      uint64_t v70 = v68;
      uint64_t v71 = *(void *)(v67 + 56);
      uint64_t v72 = type metadata accessor for RegistrationState(0);
      uint64_t v73 = *(void *)(v72 - 8);
      sub_10070F0FC(v71 + *(void *)(v73 + 72) * v70, (uint64_t)v8, type metadata accessor for RegistrationState);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v8, 0, 1, v72);
    }
    else
    {
      uint64_t v72 = type metadata accessor for RegistrationState(0);
      uint64_t v73 = *(void *)(v72 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56))(v8, 1, 1, v72);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for RegistrationState(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v8, 1, v72))
    {
      sub_10000A7E8((uint64_t)v8, (uint64_t *)&unk_100974F20);
      swift_endAccess();
      int v74 = 0;
    }
    else
    {
      int v74 = v8[*(int *)(v72 + 20)];
      sub_10000A7E8((uint64_t)v8, (uint64_t *)&unk_100974F20);
      swift_endAccess();
    }
    unsigned int v75 = [v20 requestArmingUI:v117];
    uint64_t v47 = v123;
    if ((v59 & 1) == 0 && v117 == (char *)8 && v74 ^ 1 | v75)
    {
      sub_1006DCBA4(v123, (uint64_t)v119, 0, 0xE000000000000000, 8, &v135);
      sub_10026BB6C(&v135, v136);
      sub_10035DBD8(v20);

LABEL_64:
      sub_10024D338((uint64_t)&v135);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v47, v122);
      return;
    }
    uint64_t v76 = v120 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions;
    swift_beginAccess();
    uint64_t v77 = *(void *)(*(void *)v76 + 16);
    if (v77)
    {
      uint64_t v78 = *(void *)v76 + 32;
      swift_bridgeObjectRetain();
      uint64_t v79 = v122;
      while (1)
      {
        sub_100278C8C(v78, (uint64_t)&v135);
        uint64_t v80 = v136;
        uint64_t v81 = v137;
        sub_10026BB6C(&v135, v136);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v81 + 8) + 8) + 32))(v80);
        LOBYTE(v80) = static UUID.== infix(_:_:)();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v79);
        if (v80) {
          break;
        }
        sub_10024D338((uint64_t)&v135);
        v78 += 40;
        if (!--v77) {
          goto LABEL_48;
        }
      }
      sub_1002AF688(&v135, (uint64_t)&v132);
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v79 = v122;
LABEL_48:
      int64_t v134 = 0;
      long long v132 = 0u;
      long long v133 = 0u;
    }
    swift_bridgeObjectRelease();
    uint64_t v82 = v123;
    if (*((void *)&v133 + 1))
    {
      sub_1002AF688(&v132, (uint64_t)&v135);
      if (qword_10096A190 != -1) {
        swift_once();
      }
      uint64_t v83 = type metadata accessor for Logger();
      sub_10000B47C(v83, (uint64_t)qword_10097F520);
      sub_100278C8C((uint64_t)&v135, (uint64_t)&v129);
      uint64_t v84 = Logger.logObject.getter();
      os_log_type_t v85 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v84, v85))
      {
        uint64_t v86 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v125 = swift_slowAlloc();
        *(_DWORD *)uint64_t v86 = 136315138;
        uint64_t v87 = *((void *)&v130 + 1);
        uint64_t v88 = v131;
        sub_10026BB6C(&v129, *((uint64_t *)&v130 + 1));
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v88 + 8) + 8) + 32))(v87);
        sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v89 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v91 = v90;
        (*(void (**)(char *, uint64_t))(v121 + 8))(v18, v122);
        uint64_t v128 = sub_100254634(v89, v91, (uint64_t *)&v125);
        uint64_t v79 = v122;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10024D338((uint64_t)&v129);
        _os_log_impl((void *)&_mh_execute_header, v84, v85, "Handling with existing lock session: %s", v86, 0xCu);
        swift_arrayDestroy();
        uint64_t v82 = v123;
        swift_slowDealloc();
        uint64_t v30 = v121;
        swift_slowDealloc();
      }
      else
      {
        sub_10024D338((uint64_t)&v129);
      }

      sub_10026BB6C(&v135, v136);
      sub_10035DBD8(v20);
    }
    else
    {
      sub_10000A7E8((uint64_t)&v132, &qword_10097F8F0);
      uint64_t v92 = v120 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions;
      swift_beginAccess();
      uint64_t v93 = *(void *)(*(void *)v92 + 16);
      if (v93)
      {
        uint64_t v94 = *(void *)v92 + 32;
        uint64_t v95 = (void (**)(char *, uint64_t))(v121 + 8);
        swift_bridgeObjectRetain();
        while (1)
        {
          sub_100278C8C(v94, (uint64_t)&v125);
          uint64_t v96 = v126;
          uint64_t v97 = v127;
          sub_10026BB6C(&v125, v126);
          (*(void (**)(uint64_t))(*(void *)(*(void *)(v97 + 8) + 8) + 32))(v96);
          LOBYTE(v96) = static UUID.== infix(_:_:)();
          (*v95)(v18, v79);
          if (v96) {
            break;
          }
          sub_10024D338((uint64_t)&v125);
          v94 += 40;
          if (!--v93) {
            goto LABEL_66;
          }
        }
        sub_1002AF688(&v125, (uint64_t)&v129);
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_66:
        uint64_t v131 = 0;
        long long v129 = 0u;
        long long v130 = 0u;
      }
      swift_bridgeObjectRelease();
      uint64_t v30 = v121;
      unint64_t v100 = v118;
      if (!*((void *)&v130 + 1))
      {
        sub_10000A7E8((uint64_t)&v129, &qword_10097F8C8);
        if (qword_10096A190 != -1) {
          swift_once();
        }
        uint64_t v110 = type metadata accessor for Logger();
        sub_10000B47C(v110, (uint64_t)qword_10097F520);
        (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v100, v82, v79);
        uint64_t v111 = Logger.logObject.getter();
        uint64_t v112 = v30;
        os_log_type_t v113 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v111, v113))
        {
          unint64_t v114 = (uint8_t *)swift_slowAlloc();
          *(void *)&long long v135 = swift_slowAlloc();
          *(_DWORD *)unint64_t v114 = 136315138;
          uint64_t v122 = (uint64_t)(v114 + 4);
          sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v115 = dispatch thunk of CustomStringConvertible.description.getter();
          *(void *)&long long v129 = sub_100254634(v115, v116, (uint64_t *)&v135);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v112 + 8))(v100, v79);
          _os_log_impl((void *)&_mh_execute_header, v111, v113, "Could not find existing session for %s", v114, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v112 + 8))(v100, v79);
        }
        uint64_t v30 = v112;
        uint64_t v82 = v123;
        goto LABEL_80;
      }
      sub_1002AF688(&v129, (uint64_t)&v135);
      if (qword_10096A190 != -1) {
        swift_once();
      }
      uint64_t v101 = type metadata accessor for Logger();
      sub_10000B47C(v101, (uint64_t)qword_10097F520);
      sub_100278C8C((uint64_t)&v135, (uint64_t)&v129);
      unint64_t v102 = Logger.logObject.getter();
      os_log_type_t v103 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v102, v103))
      {
        BOOL v104 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v125 = swift_slowAlloc();
        *(_DWORD *)BOOL v104 = 136315138;
        uint64_t v105 = *((void *)&v130 + 1);
        uint64_t v106 = v131;
        sub_10026BB6C(&v129, *((uint64_t *)&v130 + 1));
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v106 + 8) + 8) + 32))(v105);
        sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v107 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v109 = v108;
        (*(void (**)(char *, uint64_t))(v121 + 8))(v18, v122);
        uint64_t v124 = sub_100254634(v107, v109, (uint64_t *)&v125);
        uint64_t v79 = v122;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10024D338((uint64_t)&v129);
        _os_log_impl((void *)&_mh_execute_header, v102, v103, "Handling with existing key session: %s", v104, 0xCu);
        swift_arrayDestroy();
        uint64_t v82 = v123;
        swift_slowDealloc();
        uint64_t v30 = v121;
        swift_slowDealloc();
      }
      else
      {
        sub_10024D338((uint64_t)&v129);
      }

      sub_10026BB6C(&v135, v136);
      sub_1005C8724(v20);
    }

    sub_10024D338((uint64_t)&v135);
LABEL_80:
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v82, v79);
    return;
  }
  __break(1u);
}

uint64_t sub_1006F013C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return _swift_task_switch(sub_1006F015C, 0, 0);
}

uint64_t sub_1006F015C()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10026BB6C(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24));
  *(void *)(v0 + 40) = sub_10000B740(0, &qword_100979080);
  *(void *)(v0 + 48) = &off_1008D8838;
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  void *v3 = v0;
  v3[1] = sub_100713464;
  return sub_1004F74C0(v0 + 16);
}

uint64_t sub_1006F023C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return _swift_task_switch(sub_1006F025C, 0, 0);
}

uint64_t sub_1006F025C()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10026BB6C(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24));
  *(void *)(v0 + 40) = sub_10000B740(0, &qword_100979088);
  *(void *)(v0 + 48) = &off_1008D8848;
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  void *v3 = v0;
  v3[1] = sub_100713464;
  return sub_1004F74C0(v0 + 16);
}

void sub_1006F033C(uint64_t a1, unint64_t a2, uint64_t a3, Class *a4, uint64_t a5, uint64_t a6, void *a7, void (*a8)(long long *, long long *), void (*a9)(Class *), uint64_t *a10, const char *a11)
{
  uint64_t v79 = a8;
  uint64_t v80 = a7;
  uint64_t v78 = a6;
  uint64_t v77 = a5;
  uint64_t v13 = v11;
  uint64_t v16 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v16 - 8);
  uint64_t v76 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v18 - 8);
  id v20 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for UUID();
  uint64_t v22 = *(const char **)(v21 - 8);
  uint64_t v83 = v21;
  uint64_t v84 = v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v81 = (char *)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  id v27 = (char *)&v75 - v26;
  __chkstk_darwin(v25);
  uint64_t v82 = (char *)&v75 - v28;
  uint64_t v29 = type metadata accessor for DispatchPredicate();
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v32 = (uint64_t *)((char *)&v75 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = *(void **)(v13 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v32 = v33;
  (*(void (**)(void *, void, uint64_t))(v30 + 104))(v32, enum case for DispatchPredicate.onQueue(_:), v29);
  id v34 = v33;
  LOBYTE(v33) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v30 + 8))(v32, v29);
  if ((v33 & 1) == 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  id v35 = objc_allocWithZone(*a4);
  sub_10025ADCC(a1, a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100250CC4(a1, a2);
  a4 = (Class *)[v35 initWithData:isa];

  if (!a4)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v45 = type metadata accessor for Logger();
    sub_10000B47C(v45, (uint64_t)qword_10097F520);
    sub_10025ADCC(a1, a2);
    sub_10025ADCC(a1, a2);
    unint64_t v42 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v42, v46))
    {
      uint64_t v84 = a11;
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      v91[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136315138;
      sub_10025ADCC(a1, a2);
      uint64_t v48 = Data.description.getter();
      unint64_t v50 = v49;
      sub_100250CC4(a1, a2);
      *(void *)&long long v88 = sub_100254634(v48, v50, v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100250CC4(a1, a2);
      sub_100250CC4(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v42, v46, v84, v47, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100250CC4(a1, a2);
      sub_100250CC4(a1, a2);
    }
LABEL_18:

    return;
  }
  id v37 = [(Class *)a4 sessionID];
  if (!v37)
  {
LABEL_6:
    if (qword_10096A190 == -1)
    {
LABEL_7:
      uint64_t v41 = type metadata accessor for Logger();
      sub_10000B47C(v41, (uint64_t)qword_10097F520);
      unint64_t v42 = Logger.logObject.getter();
      os_log_type_t v43 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v42, v43))
      {

        return;
      }
      char v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Message does not have a session ID", v44, 2u);
      swift_slowDealloc();

      goto LABEL_18;
    }
LABEL_36:
    swift_once();
    goto LABEL_7;
  }
  unint64_t v38 = v37;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  uint64_t v40 = v83;
  uint64_t v39 = v84;
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v84 + 6))(v20, 1, v83) == 1)
  {
    sub_10000A7E8((uint64_t)v20, &qword_100974EA0);
    goto LABEL_6;
  }
  uint64_t v51 = (uint64_t)v82;
  (*((void (**)(char *, char *, uint64_t))v39 + 4))(v82, v20, v40);
  os_log_type_t v52 = (uint64_t *)(v13 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions);
  swift_beginAccess();
  uint64_t v53 = *v52;
  if (*(void *)(*v52 + 16) && (unint64_t v54 = sub_100583A00(v51), (v55 & 1) != 0))
  {
    sub_100278C8C(*(void *)(v53 + 56) + 40 * v54, (uint64_t)&v88);
    sub_1002AF688(&v88, (uint64_t)v91);
    swift_endAccess();
    uint64_t v56 = type metadata accessor for TaskPriority();
    uint64_t v57 = (uint64_t)v76;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v76, 1, 1, v56);
    sub_100278C8C((uint64_t)v91, (uint64_t)&v88);
    uint64_t v58 = (void *)swift_allocObject();
    v58[2] = 0;
    v58[3] = 0;
    sub_1002AF688(&v88, (uint64_t)(v58 + 4));
    v58[9] = a4;
    char v59 = a4;
    sub_10028CFA8(v57, v78, (uint64_t)v58);

    swift_release();
    sub_10024D338((uint64_t)v91);
    (*((void (**)(uint64_t, uint64_t))v39 + 1))(v51, v40);
  }
  else
  {
    swift_endAccess();
    uint64_t v60 = v13 + *v80;
    swift_beginAccess();
    uint64_t v61 = *(void *)(*(void *)v60 + 16);
    if (v61)
    {
      uint64_t v62 = *(void *)v60 + 32;
      uint64_t v63 = (void (**)(char *, uint64_t))(v39 + 8);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_100278C8C(v62, (uint64_t)v85);
        uint64_t v64 = v86;
        uint64_t v65 = v87;
        sub_10026BB6C(v85, v86);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v65 + 8) + 8) + 32))(v64);
        LOBYTE(v64) = static UUID.== infix(_:_:)();
        (*v63)(v27, v40);
        if (v64) {
          break;
        }
        sub_10024D338((uint64_t)v85);
        v62 += 40;
        if (!--v61) {
          goto LABEL_25;
        }
      }
      v79((long long *)v85, &v88);
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_25:
      uint64_t v90 = 0;
      long long v88 = 0u;
      long long v89 = 0u;
    }
    swift_bridgeObjectRelease();
    uint64_t v66 = v84;
    uint64_t v67 = v81;
    if (*((void *)&v89 + 1))
    {
      v79(&v88, (long long *)v91);
      sub_10026BB6C(v91, v91[3]);
      a9(a4);

      (*((void (**)(uint64_t, uint64_t))v66 + 1))(v51, v40);
      sub_10024D338((uint64_t)v91);
    }
    else
    {
      sub_10000A7E8((uint64_t)&v88, a10);
      if (qword_10096A190 != -1) {
        swift_once();
      }
      uint64_t v68 = type metadata accessor for Logger();
      sub_10000B47C(v68, (uint64_t)qword_10097F520);
      (*((void (**)(char *, uint64_t, uint64_t))v66 + 2))(v67, v51, v40);
      char v69 = Logger.logObject.getter();
      os_log_type_t v70 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v69, v70))
      {
        uint64_t v71 = (uint8_t *)swift_slowAlloc();
        v91[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v71 = 136315138;
        uint64_t v80 = v71 + 4;
        sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v72 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)&long long v88 = sub_100254634(v72, v73, v91);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        int v74 = (void (*)(char *, uint64_t))*((void *)v66 + 1);
        v74(v67, v40);
        _os_log_impl((void *)&_mh_execute_header, v69, v70, "Could not find existing session for %s", v71, 0xCu);
        swift_arrayDestroy();
        uint64_t v51 = (uint64_t)v82;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        int v74 = (void (*)(char *, uint64_t))*((void *)v66 + 1);
        v74(v67, v40);
      }

      v74((char *)v51, v40);
    }
  }
}

uint64_t sub_1006F0E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return _swift_task_switch(sub_1006F0E40, 0, 0);
}

uint64_t sub_1006F0E40()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10026BB6C(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24));
  *(void *)(v0 + 40) = sub_10000B740(0, &qword_100979090);
  *(void *)(v0 + 48) = &off_1008D8840;
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  void *v3 = v0;
  v3[1] = sub_100713464;
  return sub_1004F74C0(v0 + 16);
}

void sub_1006F0F20(uint64_t a1, unint64_t a2, uint64_t a3)
{
  v165 = (void *)a3;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v158 = *(void *)(v6 - 8);
  uint64_t v159 = v6;
  __chkstk_darwin(v6);
  v157 = (char *)&v154 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = type metadata accessor for SFPlatform();
  uint64_t v156 = *(void *)(v160 - 8);
  __chkstk_darwin(v160);
  uint64_t v161 = (char *)&v154 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v9 - 8);
  char v162 = (char *)&v154 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000A844(&qword_100974EA0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v164 = (char *)&v154 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v154 - v14;
  uint64_t v169 = type metadata accessor for UUID();
  uint64_t v167 = *(void *)(v169 - 8);
  uint64_t v16 = __chkstk_darwin(v169);
  uint64_t v18 = (char *)&v154 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  v168 = (char *)&v154 - v20;
  __chkstk_darwin(v19);
  unint64_t v163 = (unint64_t)&v154 - v21;
  uint64_t v22 = type metadata accessor for DispatchPredicate();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (uint64_t *)((char *)&v154 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v166 = v3;
  uint64_t v26 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  void *v25 = v26;
  (*(void (**)(void *, void, uint64_t))(v23 + 104))(v25, enum case for DispatchPredicate.onQueue(_:), v22);
  id v27 = v26;
  LOBYTE(v26) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v23 + 8))(v25, v22);
  if ((v26 & 1) == 0)
  {
    __break(1u);
LABEL_97:
    swift_once();
LABEL_8:
    uint64_t v39 = type metadata accessor for Logger();
    sub_10000B47C(v39, (uint64_t)qword_10097F520);
    sub_10025ADCC(a1, a2);
    sub_10025ADCC(a1, a2);
    uint64_t v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v40, v41))
    {
      unint64_t v42 = (uint8_t *)swift_slowAlloc();
      v184[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v42 = 136315138;
      uint64_t v169 = (uint64_t)(v42 + 4);
      sub_10025ADCC(a1, a2);
      uint64_t v43 = Data.description.getter();
      unint64_t v45 = v44;
      sub_100250CC4(a1, a2);
      *(void *)&long long v181 = sub_100254634(v43, v45, v184);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100250CC4(a1, a2);
      sub_100250CC4(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Failed to unwrap SDAuthenticationPairingDisable (data: %s)", v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100250CC4(a1, a2);
      sub_100250CC4(a1, a2);
    }
    goto LABEL_77;
  }
  id v28 = objc_allocWithZone((Class)SDAuthenticationPairingDisable);
  sub_10025ADCC(a1, a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100250CC4(a1, a2);
  id v30 = [v28 initWithData:isa];

  if (!v30)
  {
    if (qword_10096A190 == -1) {
      goto LABEL_8;
    }
    goto LABEL_97;
  }
  unint64_t v31 = sub_10050A7B4([v30 type]);
  if (v32)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v46 = type metadata accessor for Logger();
    sub_10000B47C(v46, (uint64_t)qword_10097F520);
    uint64_t v40 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v40, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v48 = 0;
      unint64_t v49 = "Message does not have authentication type";
LABEL_14:
      _os_log_impl((void *)&_mh_execute_header, v40, v47, v49, v48, 2u);
      swift_slowDealloc();

      return;
    }
    goto LABEL_76;
  }
  unint64_t v33 = v31;
  id v34 = [v30 sessionID];
  uint64_t v35 = v166;
  if (v34)
  {
    uint64_t v36 = v34;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    UUID.init(uuidString:)();
    swift_bridgeObjectRelease();
    uint64_t v37 = v167;
    uint64_t v38 = v169;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v167 + 48))(v15, 1, v169) == 1)
    {
      sub_10000A7E8((uint64_t)v15, &qword_100974EA0);
      goto LABEL_24;
    }
    uint64_t v50 = v163;
    (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v163, v15, v38);
    uint64_t v51 = (uint64_t *)(v35 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions);
    swift_beginAccess();
    uint64_t v52 = *v51;
    if (*(void *)(v52 + 16))
    {
      unint64_t v53 = sub_100583A00(v50);
      if (v54)
      {
        sub_100278C8C(*(void *)(v52 + 56) + 40 * v53, (uint64_t)&v181);
        sub_1002AF688(&v181, (uint64_t)v184);
        swift_endAccess();
        uint64_t v55 = type metadata accessor for TaskPriority();
        uint64_t v56 = (uint64_t)v162;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v162, 1, 1, v55);
        sub_100278C8C((uint64_t)v184, (uint64_t)&v181);
        uint64_t v57 = (void *)swift_allocObject();
        _OWORD v57[2] = 0;
        void v57[3] = 0;
        sub_1002AF688(&v181, (uint64_t)(v57 + 4));
        v57[9] = v30;
        uint64_t v58 = v50;
        id v59 = v30;
        uint64_t v60 = &unk_10097F950;
LABEL_22:
        sub_10028CFA8(v56, (uint64_t)v60, (uint64_t)v57);
        swift_release();

        sub_10024D338((uint64_t)v184);
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v58, v38);
        return;
      }
    }
    swift_endAccess();
    if (v33 - 9 <= 5 && (v33 & 0xFFFFFFFFFFFFFFFELL) == 0xC)
    {
      uint64_t v58 = v50;
      id v61 = [objc_allocWithZone((Class)SFAuthenticationOptions) init];
      *((void *)&v182 + 1) = sub_10000B740(0, &qword_10097F7D0);
      unint64_t v183 = &off_1008DE258;
      *(void *)&long long v181 = v61;
      sub_1006DC7AC(v50, (uint64_t)v165, v33, v33 == 13, (uint64_t)&v181, (uint64_t)v184);
      sub_10000A7E8((uint64_t)&v181, &qword_10097F7D8);
      uint64_t v62 = type metadata accessor for TaskPriority();
      uint64_t v56 = (uint64_t)v162;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v162, 1, 1, v62);
      sub_100278C8C((uint64_t)v184, (uint64_t)&v181);
      uint64_t v57 = (void *)swift_allocObject();
      _OWORD v57[2] = 0;
      void v57[3] = 0;
      sub_1002AF688(&v181, (uint64_t)(v57 + 4));
      v57[9] = v30;
      id v59 = v30;
      uint64_t v60 = &unk_10097F940;
      goto LABEL_22;
    }
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v50, v38);
  }
LABEL_24:
  id v63 = [v30 pairingID];
  if (!v63)
  {
LABEL_27:
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v68 = type metadata accessor for Logger();
    sub_10000B47C(v68, (uint64_t)qword_10097F520);
    char v69 = Logger.logObject.getter();
    os_log_type_t v70 = static os_log_type_t.info.getter();
    BOOL v71 = os_log_type_enabled(v69, v70);
    uint64_t v72 = v165;
    if (v71)
    {
      unint64_t v73 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v73 = 0;
      _os_log_impl((void *)&_mh_execute_header, v69, v70, "Message does not have a session ID", v73, 2u);
      swift_slowDealloc();
    }

    goto LABEL_64;
  }
  uint64_t v64 = v63;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v65 = (uint64_t)v164;
  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  uint64_t v66 = v167;
  uint64_t v67 = v169;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48))(v65, 1, v169) == 1)
  {
    sub_10000A7E8(v65, &qword_100974EA0);
    goto LABEL_27;
  }
  unint64_t v163 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 32))(v168, v65, v67);
  uint64_t v74 = v35 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions;
  swift_beginAccess();
  uint64_t v75 = *(void *)(*(void *)v74 + 16);
  if (v75)
  {
    uint64_t v76 = *(void *)v74 + 32;
    uint64_t v77 = (void (**)(char *, uint64_t))(v66 + 8);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100278C8C(v76, (uint64_t)&v178);
      uint64_t v79 = v179;
      uint64_t v78 = v180;
      sub_10026BB6C(&v178, v179);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v78 + 8) + 8) + 32))(v79);
      LOBYTE(v78) = static UUID.== infix(_:_:)();
      (*v77)(v18, v169);
      if (v78) {
        break;
      }
      sub_10024D338((uint64_t)&v178);
      v76 += 40;
      if (!--v75) {
        goto LABEL_38;
      }
    }
    sub_1002AF688(&v178, (uint64_t)&v181);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_38:
    unint64_t v183 = 0;
    long long v181 = 0u;
    long long v182 = 0u;
  }
  swift_bridgeObjectRelease();
  id v155 = v30;
  if (*((void *)&v182 + 1))
  {
    sub_1002AF688(&v181, (uint64_t)v184);
    uint64_t v81 = v185;
    uint64_t v80 = v186;
    sub_10026BB6C(v184, v185);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v80 + 8) + 8) + 88))(v81);
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v82 = type metadata accessor for Logger();
    sub_10000B47C(v82, (uint64_t)qword_10097F520);
    sub_100278C8C((uint64_t)v184, (uint64_t)&v178);
    uint64_t v83 = Logger.logObject.getter();
    os_log_type_t v84 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v83, v84))
    {
      os_log_type_t v85 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v175 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v85 = 136315138;
      uint64_t v164 = (char *)(v85 + 4);
      uint64_t v87 = v179;
      uint64_t v86 = v180;
      sub_10026BB6C(&v178, v179);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v86 + 8) + 8) + 32))(v87);
      sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v88 = v169;
      uint64_t v89 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v91 = v90;
      (*(void (**)(char *, uint64_t))(v167 + 8))(v18, v88);
      *(void *)&long long v172 = sub_100254634(v89, v91, (uint64_t *)&v175);
      uint64_t v35 = v166;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10024D338((uint64_t)&v178);
      _os_log_impl((void *)&_mh_execute_header, v83, v84, "Invalidated lock session with ID: %s", v85, 0xCu);
      swift_arrayDestroy();
      id v30 = v155;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10024D338((uint64_t)&v178);
    }

    sub_10024D338((uint64_t)v184);
  }
  else
  {
    sub_10000A7E8((uint64_t)&v181, &qword_10097F8F0);
  }
  uint64_t v92 = v35 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions;
  swift_beginAccess();
  uint64_t v93 = *(void *)(*(void *)v92 + 16);
  if (v93)
  {
    uint64_t v94 = *(void *)v92 + 32;
    uint64_t v95 = (void (**)(char *, uint64_t))(v167 + 8);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100278C8C(v94, (uint64_t)&v172);
      uint64_t v97 = v173;
      uint64_t v96 = v174;
      sub_10026BB6C(&v172, v173);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v96 + 8) + 8) + 32))(v97);
      LOBYTE(v96) = static UUID.== infix(_:_:)();
      (*v95)(v18, v169);
      if (v96) {
        break;
      }
      sub_10024D338((uint64_t)&v172);
      v94 += 40;
      if (!--v93) {
        goto LABEL_54;
      }
    }
    sub_1002AF688(&v172, (uint64_t)&v175);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_54:
    uint64_t v177 = 0;
    long long v175 = 0u;
    long long v176 = 0u;
  }
  swift_bridgeObjectRelease();
  unint64_t v33 = v163;
  uint64_t v98 = v169;
  uint64_t v99 = v167;
  if (*((void *)&v176 + 1))
  {
    sub_1002AF688(&v175, (uint64_t)&v178);
    uint64_t v101 = v179;
    uint64_t v100 = v180;
    sub_10026BB6C(&v178, v179);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v100 + 8) + 8) + 88))(v101);
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v102 = type metadata accessor for Logger();
    sub_10000B47C(v102, (uint64_t)qword_10097F520);
    sub_100278C8C((uint64_t)&v178, (uint64_t)&v172);
    os_log_type_t v103 = Logger.logObject.getter();
    os_log_type_t v104 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v103, v104))
    {
      uint64_t v105 = (uint8_t *)swift_slowAlloc();
      uint64_t v164 = (char *)swift_slowAlloc();
      uint64_t v171 = v164;
      *(_DWORD *)uint64_t v105 = 136315138;
      char v162 = (char *)(v105 + 4);
      uint64_t v107 = v173;
      uint64_t v106 = v174;
      sub_10026BB6C(&v172, v173);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v106 + 8) + 8) + 32))(v107);
      sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v108 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v110 = v109;
      uint64_t v111 = *(void (**)(char *, uint64_t))(v99 + 8);
      v111(v18, v169);
      uint64_t v170 = sub_100254634(v108, v110, (uint64_t *)&v171);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10024D338((uint64_t)&v172);
      _os_log_impl((void *)&_mh_execute_header, v103, v104, "Invalidated key session with ID: %s", v105, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v98 = v169;
      swift_slowDealloc();
    }
    else
    {
      sub_10024D338((uint64_t)&v172);

      uint64_t v111 = *(void (**)(char *, uint64_t))(v99 + 8);
    }
    uint64_t v72 = v165;
    unint64_t v33 = v163;
    v111(v168, v98);
    sub_10024D338((uint64_t)&v178);
    id v30 = v155;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v167 + 8))(v168, v169);
    sub_10000A7E8((uint64_t)&v175, &qword_10097F8C8);
    uint64_t v72 = v165;
  }
LABEL_64:
  uint64_t v112 = v72[3];
  uint64_t v113 = v72[4];
  sub_10026BB6C(v72, v112);
  (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v112, v113);
  if (!v114)
  {
    __break(1u);
    goto LABEL_99;
  }
  char v115 = sub_1006B1ABC(v30);
  swift_bridgeObjectRelease();
  if ((v115 & 1) == 0)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v131 = type metadata accessor for Logger();
    sub_10000B47C(v131, (uint64_t)qword_10097F520);
    uint64_t v40 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v40, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v48 = 0;
      unint64_t v49 = "Not unpairing, disable message not valid";
      goto LABEL_14;
    }
LABEL_76:

LABEL_77:
    return;
  }
  char v116 = sub_1005097B4(v33);
  uint64_t v117 = v72[3];
  uint64_t v118 = v72[4];
  sub_10026BB6C(v72, v117);
  uint64_t v119 = (*(uint64_t (**)(uint64_t, uint64_t))(v118 + 8))(v117, v118);
  if (!v120)
  {
LABEL_99:
    __break(1u);
    return;
  }
  sub_1006B0F4C(v116 & 1, v119, v120);
  swift_bridgeObjectRelease();
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v121 = type metadata accessor for Logger();
  sub_10000B47C(v121, (uint64_t)qword_10097F520);
  sub_100278C8C((uint64_t)v72, (uint64_t)v184);
  uint64_t v122 = Logger.logObject.getter();
  os_log_type_t v123 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v122, v123))
  {
    unint64_t v163 = v33;
    uint64_t v124 = swift_slowAlloc();
    *(void *)&long long v178 = swift_slowAlloc();
    *(_DWORD *)uint64_t v124 = 136315394;
    uint64_t v125 = v185;
    uint64_t v126 = v186;
    sub_10026BB6C(v184, v185);
    uint64_t v127 = (*(uint64_t (**)(uint64_t, uint64_t))(v126 + 8))(v125, v126);
    if (v128)
    {
      uint64_t v129 = v127;
      unint64_t v130 = v128;
    }
    else
    {
      uint64_t v129 = 0xD000000000000015;
      *(void *)&long long v181 = 0;
      *((void *)&v181 + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v130 = 0x80000001007B7770;
    }
    *(void *)&long long v181 = sub_100254634(v129, v130, (uint64_t *)&v178);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)v184);
    *(_WORD *)(v124 + 12) = 2080;
    char v132 = sub_1005097B4(v163);
    BOOL v133 = (v132 & 1) == 0;
    if (v132) {
      uint64_t v134 = 7955787;
    }
    else {
      uint64_t v134 = 1801678668;
    }
    if (v133) {
      unint64_t v135 = 0xE400000000000000;
    }
    else {
      unint64_t v135 = 0xE300000000000000;
    }
    *(void *)&long long v181 = sub_100254634(v134, v135, (uint64_t *)&v178);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v122, v123, "Disabled pairing with: %s for role: %s", (uint8_t *)v124, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10024D338((uint64_t)v184);
  }

  uint64_t v137 = v160;
  uint64_t v136 = v161;
  static SFPlatform.iOS.getter();
  char v138 = static SFPlatform.isPlatform(_:)();
  uint64_t v139 = *(void (**)(char *, uint64_t))(v156 + 8);
  v139(v136, v137);
  if (v138)
  {
    uint64_t v140 = sub_1006E9654();
    uint64_t v141 = sub_100707E2C(1, (uint64_t)v140);
    swift_bridgeObjectRelease();
    uint64_t v142 = v141[2];
    swift_bridgeObjectRelease();
    if (!v142)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v143 = String._bridgeToObjectiveC()();
      NSString v144 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      sub_1000D289C(0, v143, v144);

      uint64_t v137 = v160;
    }
    uint64_t v145 = sub_1006DF990(4, "eligible mac devices: %s");
    v146 = sub_100707E2C(0, v145);
    swift_bridgeObjectRelease();
    uint64_t v147 = v146[2];
    swift_bridgeObjectRelease();
    if (!v147) {
      sub_1006CD9D4();
    }
  }
  v148 = v161;
  static SFPlatform.macOS.getter();
  char v149 = static SFPlatform.isPlatform(_:)();
  v139(v148, v137);
  if (v149)
  {
    uint64_t v150 = sub_1006DF990(2, "eligible iPhone devices: %s");
    v151 = sub_100707E2C(1, v150);
    swift_bridgeObjectRelease();
    uint64_t v152 = v151[2];
    swift_bridgeObjectRelease();
    if (!v152) {
      sub_1006CD9D4();
    }
  }
  sub_1006E9424();
  uint64_t v153 = (uint64_t)v157;
  Date.init()();
  sub_1006D5DAC(v153);

  (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v153, v159);
}

uint64_t sub_1006F2868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return _swift_task_switch(sub_1006F2888, 0, 0);
}

uint64_t sub_1006F2888()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10026BB6C(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24));
  *(void *)(v0 + 40) = sub_10000B740(0, &qword_100972A78);
  *(void *)(v0 + 48) = &off_1008D8880;
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  void *v3 = v0;
  v3[1] = sub_100713464;
  return sub_1004F74C0(v0 + 16);
}

uint64_t sub_1006F2968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return _swift_task_switch(sub_1006F2988, 0, 0);
}

uint64_t sub_1006F2988()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10026BB6C(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24));
  *(void *)(v0 + 40) = sub_10000B740(0, &qword_100972A78);
  *(void *)(v0 + 48) = &off_1008D8880;
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  void *v3 = v0;
  v3[1] = sub_1006F2A68;
  return sub_1004F74C0(v0 + 16);
}

uint64_t sub_1006F2A68()
{
  uint64_t v1 = *v0 + 16;
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_10000A7E8(v1, (uint64_t *)&unk_1009778D8);
  id v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_1006F2B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)((char *)v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  id v12 = v11;
  unint64_t v13 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (v13)
  {
    uint64_t v14 = *(uint64_t (**)(uint64_t))((char *)v3
                                            + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo);
    uint64_t v15 = swift_retain();
    uint64_t v7 = v14(v15);
    unint64_t v13 = v16;
    swift_release();
    uint64_t v17 = *(void (**)(uint64_t, unint64_t, uint64_t))((char *)v3
                                                                    + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessionGenerator);
    swift_retain();
    v17(v7, v13, a1);
    swift_release();
    uint64_t v37 = ObjectType;
    uint64_t v38 = &off_1008E6078;
    v36[0] = v3;
    uint64_t v18 = *(void *)(a2 + 24);
    uint64_t v19 = *(void *)(a2 + 32);
    sub_1002AF758(a2, v18);
    uint64_t v20 = *(void *)(*(void *)(v19 + 8) + 8);
    uint64_t v21 = *(void (**)(void *, uint64_t, uint64_t))(v20 + 16);
    uint64_t v22 = v3;
    v21(v36, v18, v20);
    sub_100278C8C(a2, (uint64_t)v36);
    uint64_t v3 = (void *)((char *)v22 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions);
    swift_beginAccess();
    uint64_t v10 = (void *)*v3;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    void *v3 = v10;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t v10 = sub_100253DD4(0, v10[2] + 1, 1, v10);
  void *v3 = v10;
LABEL_3:
  unint64_t v25 = v10[2];
  unint64_t v24 = v10[3];
  if (v25 >= v24 >> 1)
  {
    uint64_t v10 = sub_100253DD4((void *)(v24 > 1), v25 + 1, 1, v10);
    void *v3 = v10;
  }
  uint64_t v26 = sub_1002AF758((uint64_t)v36, v37);
  __chkstk_darwin(v26);
  id v28 = (uint64_t *)((char *)&v32 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v29 + 16))(v28);
  uint64_t v30 = *v28;
  uint64_t v34 = type metadata accessor for SDAuthenticationKeySession();
  uint64_t v35 = &off_1008DB5E0;
  *(void *)&long long v33 = v30;
  long long v10[2] = v25 + 1;
  sub_1002AF688(&v33, (uint64_t)&v10[5 * v25 + 4]);
  sub_10024D338((uint64_t)v36);
  swift_endAccess();
  return sub_100250CC4(v7, v13);
}

void sub_1006F2EF0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v52 = a3;
  uint64_t v6 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v6 - 8);
  unint64_t v53 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  unint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (void *)type metadata accessor for DispatchPredicate();
  uint64_t v15 = *(v14 - 1);
  __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t *)((char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v17 = v18;
  (*(void (**)(void *, void, void *))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  id v19 = v18;
  LOBYTE(v18) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, void *))(v15 + 8))(v17, v14);
  if ((v18 & 1) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  id v20 = objc_allocWithZone((Class)SDAuthenticationApprovePrompt);
  sub_10025ADCC(a1, a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100250CC4(a1, a2);
  uint64_t v14 = [v20 initWithData:isa];

  if (!v14)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v31 = type metadata accessor for Logger();
    sub_10000B47C(v31, (uint64_t)qword_10097F520);
    sub_10025ADCC(a1, a2);
    sub_10025ADCC(a1, a2);
    id v28 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v32))
    {
      long long v33 = (uint8_t *)swift_slowAlloc();
      v58[0] = swift_slowAlloc();
      *(_DWORD *)long long v33 = 136315138;
      sub_10025ADCC(a1, a2);
      uint64_t v34 = Data.description.getter();
      unint64_t v36 = v35;
      sub_100250CC4(a1, a2);
      *(void *)&long long v55 = sub_100254634(v34, v36, v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100250CC4(a1, a2);
      sub_100250CC4(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v28, v32, "Failed to unwrap SDAuthenticationRequest (data: %s)", v33, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100250CC4(a1, a2);
      sub_100250CC4(a1, a2);
    }
LABEL_17:

    return;
  }
  id v22 = [v14 sessionID];
  if (!v22)
  {
LABEL_6:
    if (qword_10096A190 == -1)
    {
LABEL_7:
      uint64_t v27 = type metadata accessor for Logger();
      sub_10000B47C(v27, (uint64_t)qword_10097F520);
      id v28 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v30 = 0;
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "Message does not have a session ID", v30, 2u);
        swift_slowDealloc();

        return;
      }

      goto LABEL_17;
    }
LABEL_24:
    swift_once();
    goto LABEL_7;
  }
  uint64_t v23 = v22;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  uint64_t v24 = v11;
  unint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v26 = v54;
  if (v25(v10, 1, v54) == 1)
  {
    sub_10000A7E8((uint64_t)v10, &qword_100974EA0);
    goto LABEL_6;
  }
  uint64_t v37 = v13;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v13, v10, v26);
  unint64_t v38 = sub_10050A7B4([v14 type]);
  if (v39)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    sub_10000B47C(v47, (uint64_t)qword_10097F520);
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Message does not have authentication type", v50, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v54);
  }
  else
  {
    uint64_t v40 = v38;
    unsigned int v41 = (v38 < 0xF) & (0x658Eu >> v38);
    id v42 = [objc_allocWithZone((Class)SFAuthenticationOptions) init];
    uint64_t v56 = sub_10000B740(0, &qword_10097F7D0);
    uint64_t v57 = &off_1008DE258;
    *(void *)&long long v55 = v42;
    sub_1006DC7AC((uint64_t)v13, v52, v40, v41, (uint64_t)&v55, (uint64_t)v58);
    sub_10000A7E8((uint64_t)&v55, &qword_10097F7D8);
    uint64_t v43 = type metadata accessor for TaskPriority();
    uint64_t v44 = (uint64_t)v53;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v53, 1, 1, v43);
    sub_100278C8C((uint64_t)v58, (uint64_t)&v55);
    unint64_t v45 = (void *)swift_allocObject();
    v45[2] = 0;
    v45[3] = 0;
    sub_1002AF688(&v55, (uint64_t)(v45 + 4));
    v45[9] = v14;
    uint64_t v46 = v14;
    sub_10028CFA8(v44, (uint64_t)&unk_10097F960, (uint64_t)v45);
    swift_release();

    sub_10024D338((uint64_t)v58);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v37, v26);
  }
}

uint64_t sub_1006F36F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return _swift_task_switch(sub_1006F3710, 0, 0);
}

uint64_t sub_1006F3710()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10026BB6C(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24));
  *(void *)(v0 + 40) = sub_10000B740(0, &qword_10096BDC8);
  *(void *)(v0 + 48) = &off_1008D8850;
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  void *v3 = v0;
  v3[1] = sub_100713464;
  return sub_1004F74C0(v0 + 16);
}

void sub_1006F37F0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v57 = a3;
  uint64_t v6 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v6 - 8);
  uint64_t v58 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v60 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (void *)type metadata accessor for DispatchPredicate();
  uint64_t v15 = *(v14 - 1);
  __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t *)((char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v59 = v3;
  uint64_t v18 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v17 = v18;
  (*(void (**)(void *, void, void *))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  id v19 = v18;
  LOBYTE(v18) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, void *))(v15 + 8))(v17, v14);
  if ((v18 & 1) == 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  id v20 = objc_allocWithZone((Class)SDAuthenticationPreRequest);
  sub_10025ADCC(a1, a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100250CC4(a1, a2);
  uint64_t v14 = [v20 initWithData:isa];

  if (!v14)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_10000B47C(v29, (uint64_t)qword_10097F520);
    sub_10025ADCC(a1, a2);
    sub_10025ADCC(a1, a2);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      v64[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136315138;
      sub_10025ADCC(a1, a2);
      uint64_t v32 = Data.description.getter();
      unint64_t v34 = v33;
      sub_100250CC4(a1, a2);
      *(void *)&long long v61 = sub_100254634(v32, v34, v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100250CC4(a1, a2);
      sub_100250CC4(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v26, v30, "Failed to unwrap SDAuthenticationPreRequest (data: %s)", v31, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100250CC4(a1, a2);
      sub_100250CC4(a1, a2);
    }
LABEL_19:

    return;
  }
  id v22 = [v14 sessionID];
  if (!v22)
  {
LABEL_6:
    if (qword_10096A190 == -1)
    {
LABEL_7:
      uint64_t v25 = type metadata accessor for Logger();
      sub_10000B47C(v25, (uint64_t)qword_10097F520);
      uint64_t v26 = Logger.logObject.getter();
      os_log_type_t v27 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v26, v27))
      {
        id v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v28 = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "Message does not have a session ID", v28, 2u);
        swift_slowDealloc();

        return;
      }

      goto LABEL_19;
    }
LABEL_28:
    swift_once();
    goto LABEL_7;
  }
  uint64_t v23 = v22;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  uint64_t v24 = v12;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10000A7E8((uint64_t)v10, &qword_100974EA0);
    goto LABEL_6;
  }
  uint64_t v35 = (uint64_t)v60;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v60, v10, v11);
  unint64_t v36 = sub_10050A7B4([v14 type]);
  if (v37)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    sub_10000B47C(v47, (uint64_t)qword_10097F520);
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Message does not have authentication type", v50, 2u);
      swift_slowDealloc();
    }

    goto LABEL_25;
  }
  unint64_t v38 = v36;
  char v39 = (uint64_t *)(v59 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions);
  swift_beginAccess();
  uint64_t v40 = *v39;
  if (*(void *)(v40 + 16))
  {
    unint64_t v41 = sub_100583A00(v35);
    if (v42)
    {
      sub_100278C8C(*(void *)(v40 + 56) + 40 * v41, (uint64_t)&v61);
      sub_1002AF688(&v61, (uint64_t)v64);
      swift_endAccess();
      uint64_t v43 = type metadata accessor for TaskPriority();
      uint64_t v44 = (uint64_t)v58;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v58, 1, 1, v43);
      sub_100278C8C((uint64_t)v64, (uint64_t)&v61);
      unint64_t v45 = (void *)swift_allocObject();
      v45[2] = 0;
      v45[3] = 0;
      sub_1002AF688(&v61, (uint64_t)(v45 + 4));
      v45[9] = v14;
      uint64_t v46 = v14;
      sub_10028CFA8(v44, (uint64_t)&unk_10097F9E0, (uint64_t)v45);
      swift_release();

      sub_10024D338((uint64_t)v64);
LABEL_25:
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v35, v11);
      return;
    }
  }
  swift_endAccess();
  id v51 = [objc_allocWithZone((Class)SFAuthenticationOptions) init];
  uint64_t v62 = sub_10000B740(0, &qword_10097F7D0);
  id v63 = &off_1008DE258;
  *(void *)&long long v61 = v51;
  sub_1006DC7AC(v35, v57, v38, (v38 < 0xF) & (0x658Eu >> v38), (uint64_t)&v61, (uint64_t)v64);
  sub_10000A7E8((uint64_t)&v61, &qword_10097F7D8);
  uint64_t v52 = type metadata accessor for TaskPriority();
  uint64_t v53 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v58, 1, 1, v52);
  sub_100278C8C((uint64_t)v64, (uint64_t)&v61);
  uint64_t v54 = (void *)swift_allocObject();
  v54[2] = 0;
  v54[3] = 0;
  sub_1002AF688(&v61, (uint64_t)(v54 + 4));
  v54[9] = v14;
  long long v55 = v14;
  sub_10028CFA8(v53, (uint64_t)&unk_10097F9D0, (uint64_t)v54);
  swift_release();

  sub_10024D338((uint64_t)v64);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v35, v11);
}

uint64_t sub_1006F4120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return _swift_task_switch(sub_1006F4140, 0, 0);
}

uint64_t sub_1006F4140()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10026BB6C(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24));
  *(void *)(v0 + 40) = sub_10000B740(0, &qword_10097F9E8);
  *(void *)(v0 + 48) = &off_1008D8858;
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  void *v3 = v0;
  v3[1] = sub_100713464;
  return sub_1004F74C0(v0 + 16);
}

void sub_1006F4220(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v74 = a3;
  uint64_t v7 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v75 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (void *)type metadata accessor for DispatchPredicate();
  uint64_t v16 = *(v15 - 1);
  __chkstk_darwin(v15);
  uint64_t v18 = (void **)((char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v19 = *(void **)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v18 = v19;
  (*(void (**)(void *, void, void *))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  id v20 = v19;
  LOBYTE(v19) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, void *))(v16 + 8))(v18, v15);
  if ((v19 & 1) == 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  id v21 = objc_allocWithZone((Class)SDAuthenticationRequest);
  sub_10025ADCC(a1, a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100250CC4(a1, a2);
  uint64_t v15 = [v21 initWithData:isa];

  if (!v15)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v31 = type metadata accessor for Logger();
    sub_10000B47C(v31, (uint64_t)qword_10097F520);
    sub_10025ADCC(a1, a2);
    sub_10025ADCC(a1, a2);
    id v28 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v32))
    {
      unint64_t v33 = (uint8_t *)swift_slowAlloc();
      v80[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v33 = 136315138;
      sub_10025ADCC(a1, a2);
      uint64_t v34 = Data.description.getter();
      unint64_t v36 = v35;
      sub_100250CC4(a1, a2);
      *(void *)&long long v77 = sub_100254634(v34, v36, v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100250CC4(a1, a2);
      sub_100250CC4(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v28, v32, "Failed to unwrap SDAuthenticationRequest (data: %s)", v33, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100250CC4(a1, a2);
      sub_100250CC4(a1, a2);
    }
LABEL_21:

    return;
  }
  id v23 = [v15 sessionID];
  if (!v23)
  {
LABEL_6:
    if (qword_10096A190 == -1)
    {
LABEL_7:
      uint64_t v27 = type metadata accessor for Logger();
      sub_10000B47C(v27, (uint64_t)qword_10097F520);
      id v28 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v28, v29))
      {
        os_log_type_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v30 = 0;
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "Message does not have a session ID", v30, 2u);
        swift_slowDealloc();

        return;
      }

      goto LABEL_21;
    }
LABEL_35:
    swift_once();
    goto LABEL_7;
  }
  uint64_t v24 = v23;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  uint64_t v25 = v13;
  uint64_t v26 = v76;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v76) == 1)
  {
    sub_10000A7E8((uint64_t)v12, &qword_100974EA0);
    goto LABEL_6;
  }
  char v37 = v75;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v75, v12, v26);
  unint64_t v38 = sub_10050A7B4([v15 type]);
  if (v39)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v48 = type metadata accessor for Logger();
    sub_10000B47C(v48, (uint64_t)qword_10097F520);
    os_log_type_t v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v49, v50))
    {
      id v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v51 = 0;
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "Message does not have authentication type", v51, 2u);
      swift_slowDealloc();
    }

    goto LABEL_27;
  }
  Swift::UInt v40 = v38;
  if (v38 <= 7 && ((1 << v38) & 0xC4) != 0 || v38 > 8)
  {
    unint64_t v41 = (uint64_t *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions);
    swift_beginAccess();
    uint64_t v42 = *v41;
    if (!*(void *)(v42 + 16) || (unint64_t v43 = sub_100583A00((uint64_t)v37), (v44 & 1) == 0))
    {
      swift_endAccess();
      id v52 = [objc_allocWithZone((Class)SFAuthenticationOptions) init];
      uint64_t v78 = sub_10000B740(0, &qword_10097F7D0);
      uint64_t v79 = &off_1008DE258;
      *(void *)&long long v77 = v52;
      sub_1006DC7AC((uint64_t)v37, (uint64_t)v74, v40, (v40 < 0xF) & (0x658Cu >> v40), (uint64_t)&v77, (uint64_t)v80);
      sub_10000A7E8((uint64_t)&v77, &qword_10097F7D8);
      uint64_t v53 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v9, 1, 1, v53);
      sub_100278C8C((uint64_t)v80, (uint64_t)&v77);
      uint64_t v54 = (void *)swift_allocObject();
      v54[2] = 0;
      v54[3] = 0;
      sub_1002AF688(&v77, (uint64_t)(v54 + 4));
      v54[9] = v15;
      long long v55 = v15;
      sub_10028CFA8((uint64_t)v9, (uint64_t)&unk_10097F970, (uint64_t)v54);
      swift_release();

      sub_10024D338((uint64_t)v80);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v37, v26);
      return;
    }
    sub_100278C8C(*(void *)(v42 + 56) + 40 * v43, (uint64_t)&v77);
    sub_1002AF688(&v77, (uint64_t)v80);
    swift_endAccess();
    uint64_t v45 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v9, 1, 1, v45);
    sub_100278C8C((uint64_t)v80, (uint64_t)&v77);
    uint64_t v46 = (void *)swift_allocObject();
    v46[2] = 0;
    v46[3] = 0;
    sub_1002AF688(&v77, (uint64_t)(v46 + 4));
    v46[9] = v15;
    uint64_t v47 = v15;
    sub_10028CFA8((uint64_t)v9, (uint64_t)&unk_10097F980, (uint64_t)v46);
    swift_release();

    sub_10024D338((uint64_t)v80);
LABEL_27:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v37, v26);
    return;
  }
  if (((1 << v38) & 0x18E) != 0)
  {
    sub_1006F2B70((uint64_t)v37, (uint64_t)&v77);
  }
  else
  {
    uint64_t v62 = v74;
    uint64_t v63 = v74[3];
    uint64_t v64 = v74[4];
    sub_10026BB6C(v74, v63);
    uint64_t v65 = (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 16))(v63, v64);
    uint64_t v67 = v66;
    swift_beginAccess();
    type metadata accessor for StateMetrics(0);
    sub_100467C70(v65, v67, v40);
    swift_endAccess();
    uint64_t v68 = v62[3];
    uint64_t v69 = v62[4];
    sub_10026BB6C(v62, v68);
    uint64_t v70 = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 24))(v68, v69);
    uint64_t v72 = v71;
    swift_beginAccess();
    char v37 = v75;
    uint64_t v73 = v70;
    uint64_t v25 = v13;
    sub_100467C70(v73, v72, v40);
    swift_endAccess();
    sub_100278C8C((uint64_t)v62, (uint64_t)v80);
    sub_1006E98F8(v40, v37, (uint64_t)v80, &v77);
    sub_10000A7E8((uint64_t)v80, &qword_10097BB50);
  }
  uint64_t v56 = v78;
  uint64_t v57 = v79;
  uint64_t v58 = sub_10026BB6C(&v77, v78);
  uint64_t v81 = v56;
  uint64_t v82 = (void (**)(void *, uint64_t, void *))v57[1];
  uint64_t v59 = sub_100278AE4(v80);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v56 - 8) + 16))(v59, v58, v56);
  sub_10024D338((uint64_t)&v77);
  uint64_t v60 = v81;
  long long v61 = v82;
  sub_10026BB6C(v80, v81);
  v61[6](v15, v60, v61);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v37, v76);
  sub_10024D338((uint64_t)v80);
}

uint64_t sub_1006F4D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return _swift_task_switch(sub_1006F4D8C, 0, 0);
}

uint64_t sub_1006F4D8C()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10026BB6C(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24));
  *(void *)(v0 + 40) = sub_10000B740(0, &qword_10096BDD0);
  *(void *)(v0 + 48) = &off_1008D8860;
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  void *v3 = v0;
  v3[1] = sub_100713464;
  return sub_1004F74C0(v0 + 16);
}

void sub_1006F4E6C(uint64_t a1, id a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v6 - 8);
  uint64_t v68 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v70 = *(uint8_t **)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v69 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v67 - v15;
  __chkstk_darwin(v14);
  uint64_t v71 = (char *)&v67 - v17;
  uint64_t v18 = type metadata accessor for DispatchPredicate();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v21 = (uint64_t *)((char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v22 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *id v21 = v22;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
  id v23 = v22;
  LOBYTE(v22) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v19 + 8))(v21, v18);
  if ((v22 & 1) == 0)
  {
    __break(1u);
LABEL_34:
    swift_once();
    goto LABEL_7;
  }
  id v24 = objc_allocWithZone((Class)SDAuthenticationResponse);
  sub_10025ADCC(a1, (unint64_t)a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100250CC4(a1, (unint64_t)a2);
  a2 = [v24 initWithData:isa];

  if (!a2)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    sub_10000B47C(v34, (uint64_t)qword_10097F520);
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v35))
    {
      unint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v35, "Failed to unwrap to SDAuthenticationResponse", v36, 2u);
      swift_slowDealloc();
    }
    goto LABEL_13;
  }
  id v26 = [a2 sessionID];
  if (v26)
  {
    uint64_t v27 = v26;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    UUID.init(uuidString:)();
    swift_bridgeObjectRelease();
    id v28 = v70;
    uint64_t v29 = v11;
    if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v70 + 6))(v10, 1, v11) != 1)
    {
      uint64_t v37 = (uint64_t)v71;
      (*((void (**)(char *, char *, uint64_t))v28 + 4))(v71, v10, v11);
      unint64_t v38 = (uint64_t *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions);
      swift_beginAccess();
      uint64_t v39 = *v38;
      if (*(void *)(v39 + 16) && (unint64_t v40 = sub_100583A00(v37), (v41 & 1) != 0))
      {
        sub_100278C8C(*(void *)(v39 + 56) + 40 * v40, (uint64_t)&v75);
        sub_1002AF688(&v75, (uint64_t)v78);
        swift_endAccess();
        uint64_t v42 = type metadata accessor for TaskPriority();
        uint64_t v43 = (uint64_t)v68;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v68, 1, 1, v42);
        sub_100278C8C((uint64_t)v78, (uint64_t)&v75);
        char v44 = (void *)swift_allocObject();
        v44[2] = 0;
        v44[3] = 0;
        sub_1002AF688(&v75, (uint64_t)(v44 + 4));
        v44[9] = a2;
        id v45 = a2;
        sub_10028CFA8(v43, (uint64_t)&unk_10097F990, (uint64_t)v44);

        swift_release();
        sub_10024D338((uint64_t)v78);
        (*((void (**)(uint64_t, uint64_t))v28 + 1))(v37, v11);
      }
      else
      {
        swift_endAccess();
        swift_beginAccess();
        uint64_t v46 = swift_bridgeObjectRetain();
        uint64_t v47 = sub_10045F128(v46);
        swift_bridgeObjectRelease();
        swift_beginAccess();
        uint64_t v48 = swift_bridgeObjectRetain();
        os_log_type_t v49 = sub_10045F164(v48);
        swift_bridgeObjectRelease();
        v78[0] = (uint64_t)v47;
        sub_1003D56FC((uint64_t)v49);
        uint64_t v50 = *(void *)(v78[0] + 16);
        if (v50)
        {
          uint64_t v51 = v78[0] + 32;
          id v52 = (void (**)(char *, uint64_t))(v28 + 8);
          swift_bridgeObjectRetain();
          while (1)
          {
            sub_100278C8C(v51, (uint64_t)&v72);
            uint64_t v54 = v73;
            uint64_t v53 = v74;
            sub_10026BB6C(&v72, v73);
            uint64_t v55 = *(void *)(v53 + 8);
            uint64_t v37 = (uint64_t)v71;
            (*(void (**)(uint64_t))(v55 + 32))(v54);
            char v56 = static UUID.== infix(_:_:)();
            (*v52)(v16, v11);
            if (v56) {
              break;
            }
            sub_10024D338((uint64_t)&v72);
            v51 += 40;
            if (!--v50)
            {
              swift_bridgeObjectRelease();
              id v28 = v70;
              goto LABEL_23;
            }
          }
          swift_bridgeObjectRelease();
          sub_1002AF688(&v72, (uint64_t)&v75);
          swift_bridgeObjectRelease();
          id v28 = v70;
        }
        else
        {
LABEL_23:
          uint64_t v77 = 0;
          long long v75 = 0u;
          long long v76 = 0u;
          swift_bridgeObjectRelease();
        }
        uint64_t v57 = v69;
        if (*((void *)&v76 + 1))
        {
          sub_1002AF688(&v75, (uint64_t)v78);
          uint64_t v58 = v79;
          uint64_t v59 = v80;
          sub_10026BB6C(v78, v79);
          (*(void (**)(id, uint64_t, uint64_t))(v59 + 56))(a2, v58, v59);

          (*((void (**)(uint64_t, uint64_t))v28 + 1))(v37, v11);
          sub_10024D338((uint64_t)v78);
        }
        else
        {
          sub_10000A7E8((uint64_t)&v75, &qword_100976A10);
          if (qword_10096A190 != -1) {
            swift_once();
          }
          uint64_t v60 = type metadata accessor for Logger();
          sub_10000B47C(v60, (uint64_t)qword_10097F520);
          (*((void (**)(char *, uint64_t, uint64_t))v28 + 2))(v57, v37, v11);
          long long v61 = Logger.logObject.getter();
          os_log_type_t v62 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v61, v62))
          {
            uint64_t v63 = (uint8_t *)swift_slowAlloc();
            v78[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v63 = 136315138;
            uint64_t v37 = (uint64_t)v71;
            uint64_t v70 = v63 + 4;
            sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
            uint64_t v64 = dispatch thunk of CustomStringConvertible.description.getter();
            *(void *)&long long v75 = sub_100254634(v64, v65, v78);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            uint64_t v66 = (void (*)(char *, uint64_t))*((void *)v28 + 1);
            v66(v69, v29);
            _os_log_impl((void *)&_mh_execute_header, v61, v62, "Could not find existing session for %s", v63, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            uint64_t v66 = (void (*)(char *, uint64_t))*((void *)v28 + 1);
            v66(v57, v11);
          }

          v66((char *)v37, v29);
        }
      }
      return;
    }
    sub_10000A7E8((uint64_t)v10, &qword_100974EA0);
  }
  if (qword_10096A190 != -1) {
    goto LABEL_34;
  }
LABEL_7:
  uint64_t v30 = type metadata accessor for Logger();
  sub_10000B47C(v30, (uint64_t)qword_10097F520);
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v31, v32))
  {
    unint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Message does not have a session ID", v33, 2u);
    swift_slowDealloc();

LABEL_13:
    return;
  }
}

uint64_t sub_1006F58D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return _swift_task_switch(sub_1006F58F8, 0, 0);
}

uint64_t sub_1006F58F8()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10026BB6C(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24));
  *(void *)(v0 + 40) = sub_10000B740(0, &qword_10096BDD8);
  *(void *)(v0 + 48) = &off_1008D8868;
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  void *v3 = v0;
  v3[1] = sub_100713464;
  return sub_1004F74C0(v0 + 16);
}

void sub_1006F59D8(uint64_t a1, id a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v6 - 8);
  uint64_t v63 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v65 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v64 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v63 - v15;
  __chkstk_darwin(v14);
  uint64_t v66 = (char *)&v63 - v17;
  uint64_t v18 = type metadata accessor for DispatchPredicate();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v21 = (char **)((char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v22 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *id v21 = v22;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
  id v23 = v22;
  LOBYTE(v22) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v19 + 8))(v21, v18);
  if ((v22 & 1) == 0)
  {
    __break(1u);
LABEL_35:
    swift_once();
    goto LABEL_7;
  }
  id v24 = objc_allocWithZone((Class)SDAuthenticationToken);
  sub_10025ADCC(a1, (unint64_t)a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100250CC4(a1, (unint64_t)a2);
  a2 = [v24 initWithData:isa];

  if (!a2)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    sub_10000B47C(v34, (uint64_t)qword_10097F520);
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v35))
    {
      unint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v35, "Failed to unwrap to SDAuthenticationToken", v36, 2u);
      swift_slowDealloc();
    }
    goto LABEL_13;
  }
  id v26 = [a2 sessionID];
  if (v26)
  {
    uint64_t v27 = v26;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    UUID.init(uuidString:)();
    swift_bridgeObjectRelease();
    uint64_t v28 = v65;
    uint64_t v29 = v11;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v10, 1, v11) != 1)
    {
      uint64_t v37 = (uint64_t)v66;
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v66, v10, v11);
      unint64_t v38 = (uint64_t *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions);
      swift_beginAccess();
      uint64_t v39 = *v38;
      if (*(void *)(v39 + 16) && (unint64_t v40 = sub_100583A00(v37), (v41 & 1) != 0))
      {
        sub_100278C8C(*(void *)(v39 + 56) + 40 * v40, (uint64_t)&v70);
        sub_1002AF688(&v70, (uint64_t)v73);
        swift_endAccess();
        uint64_t v42 = type metadata accessor for TaskPriority();
        uint64_t v43 = (uint64_t)v63;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v63, 1, 1, v42);
        sub_100278C8C((uint64_t)v73, (uint64_t)&v70);
        char v44 = (void *)swift_allocObject();
        v44[2] = 0;
        v44[3] = 0;
        sub_1002AF688(&v70, (uint64_t)(v44 + 4));
        v44[9] = a2;
        id v45 = a2;
        sub_10028CFA8(v43, (uint64_t)&unk_10097F9A8, (uint64_t)v44);

        swift_release();
        sub_10024D338((uint64_t)v73);
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v37, v11);
      }
      else
      {
        swift_endAccess();
        uint64_t v46 = v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions;
        swift_beginAccess();
        uint64_t v47 = *(void *)(*(void *)v46 + 16);
        if (v47)
        {
          uint64_t v48 = *(void *)v46 + 32;
          os_log_type_t v49 = (void (**)(char *, uint64_t))(v28 + 8);
          swift_bridgeObjectRetain();
          while (1)
          {
            sub_100278C8C(v48, (uint64_t)&v67);
            uint64_t v51 = v68;
            uint64_t v50 = v69;
            sub_10026BB6C(&v67, v68);
            uint64_t v52 = *(void *)(v50 + 8);
            uint64_t v37 = (uint64_t)v66;
            (*(void (**)(uint64_t))(*(void *)(v52 + 8) + 32))(v51);
            char v53 = static UUID.== infix(_:_:)();
            (*v49)(v16, v11);
            if (v53) {
              break;
            }
            sub_10024D338((uint64_t)&v67);
            v48 += 40;
            if (!--v47) {
              goto LABEL_24;
            }
          }
          sub_1002AF688(&v67, (uint64_t)&v70);
        }
        else
        {
          swift_bridgeObjectRetain();
LABEL_24:
          uint64_t v72 = 0;
          long long v70 = 0u;
          long long v71 = 0u;
        }
        swift_bridgeObjectRelease();
        uint64_t v54 = v65;
        uint64_t v55 = v64;
        if (*((void *)&v71 + 1))
        {
          sub_1002AF688(&v70, (uint64_t)v73);
          sub_10026BB6C(v73, v73[3]);
          sub_1004DB548(a2);

          (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v37, v11);
          sub_10024D338((uint64_t)v73);
        }
        else
        {
          sub_10000A7E8((uint64_t)&v70, &qword_10097F998);
          if (qword_10096A190 != -1) {
            swift_once();
          }
          uint64_t v56 = type metadata accessor for Logger();
          sub_10000B47C(v56, (uint64_t)qword_10097F520);
          (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v55, v37, v11);
          uint64_t v57 = Logger.logObject.getter();
          os_log_type_t v58 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v57, v58))
          {
            uint64_t v59 = (uint8_t *)swift_slowAlloc();
            v73[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v59 = 136315138;
            uint64_t v37 = (uint64_t)v66;
            uint64_t v63 = (char *)(v59 + 4);
            sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
            uint64_t v60 = dispatch thunk of CustomStringConvertible.description.getter();
            *(void *)&long long v70 = sub_100254634(v60, v61, v73);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            os_log_type_t v62 = *(void (**)(char *, uint64_t))(v54 + 8);
            v62(v64, v29);
            _os_log_impl((void *)&_mh_execute_header, v57, v58, "Could not find existing session for %s", v59, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            os_log_type_t v62 = *(void (**)(char *, uint64_t))(v54 + 8);
            v62(v55, v29);
          }

          v62((char *)v37, v29);
        }
      }
      return;
    }
    sub_10000A7E8((uint64_t)v10, &qword_100974EA0);
  }
  if (qword_10096A190 != -1) {
    goto LABEL_35;
  }
LABEL_7:
  uint64_t v30 = type metadata accessor for Logger();
  sub_10000B47C(v30, (uint64_t)qword_10097F520);
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v31, v32))
  {
    unint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Message does not have a session ID", v33, 2u);
    swift_slowDealloc();

LABEL_13:
    return;
  }
}

uint64_t sub_1006F638C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return _swift_task_switch(sub_1006F63AC, 0, 0);
}

uint64_t sub_1006F63AC()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10026BB6C(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24));
  *(void *)(v0 + 40) = sub_10000B740(0, &qword_10096BDE0);
  *(void *)(v0 + 48) = &off_1008D8870;
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  void *v3 = v0;
  v3[1] = sub_100713464;
  return sub_1004F74C0(v0 + 16);
}

void sub_1006F648C(uint64_t a1, id a2)
{
  uint64_t v5 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v5 - 8);
  long long v70 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v72 = *(void *)(v10 - 8);
  uint64_t v73 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v69 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v69 - v14;
  __chkstk_darwin(v13);
  uint64_t v74 = (char *)&v69 - v16;
  uint64_t v17 = type metadata accessor for DispatchPredicate();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char **)((char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v71 = v2;
  id v21 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v20 = v21;
  (*(void (**)(void *, void, uint64_t))(v18 + 104))(v20, enum case for DispatchPredicate.onQueue(_:), v17);
  id v22 = v21;
  LOBYTE(v21) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v18 + 8))(v20, v17);
  if ((v21 & 1) == 0)
  {
    __break(1u);
LABEL_45:
    swift_once();
    goto LABEL_7;
  }
  id v23 = objc_allocWithZone((Class)SDAuthenticationConfirmation);
  sub_10025ADCC(a1, (unint64_t)a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100250CC4(a1, (unint64_t)a2);
  a2 = [v23 initWithData:isa];

  if (!a2)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    sub_10000B47C(v33, (uint64_t)qword_10097F520);
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v34))
    {
      os_log_type_t v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v35 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v34, "Failed to unwrap to SDAuthenticationConfirmation", v35, 2u);
      swift_slowDealloc();
    }
    goto LABEL_13;
  }
  id v25 = [a2 sessionID];
  if (v25)
  {
    id v26 = v25;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    UUID.init(uuidString:)();
    swift_bridgeObjectRelease();
    uint64_t v27 = v72;
    uint64_t v28 = v73;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v9, 1, v73) != 1)
    {
      uint64_t v36 = (uint64_t)v74;
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v74, v9, v28);
      uint64_t v37 = (uint64_t *)(v71 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions);
      swift_beginAccess();
      uint64_t v38 = *v37;
      if (*(void *)(v38 + 16) && (unint64_t v39 = sub_100583A00(v36), (v40 & 1) != 0))
      {
        sub_100278C8C(*(void *)(v38 + 56) + 40 * v39, (uint64_t)&v84);
        sub_1002AF688(&v84, (uint64_t)v87);
        swift_endAccess();
        uint64_t v41 = type metadata accessor for TaskPriority();
        uint64_t v42 = (uint64_t)v70;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v70, 1, 1, v41);
        sub_100278C8C((uint64_t)v87, (uint64_t)&v84);
        uint64_t v43 = (void *)swift_allocObject();
        v43[2] = 0;
        v43[3] = 0;
        sub_1002AF688(&v84, (uint64_t)(v43 + 4));
        v43[9] = a2;
        id v44 = a2;
        sub_10028CFA8(v42, (uint64_t)&unk_10097F9C0, (uint64_t)v43);

        swift_release();
        sub_10024D338((uint64_t)v87);
        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v36, v28);
      }
      else
      {
        swift_endAccess();
        uint64_t v45 = v71 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions;
        swift_beginAccess();
        uint64_t v46 = *(void *)(*(void *)v45 + 16);
        if (v46)
        {
          uint64_t v47 = *(void *)v45 + 32;
          uint64_t v48 = (void (**)(char *, uint64_t))(v27 + 8);
          swift_bridgeObjectRetain();
          while (1)
          {
            sub_100278C8C(v47, (uint64_t)&v81);
            uint64_t v50 = v82;
            uint64_t v49 = v83;
            sub_10026BB6C(&v81, v82);
            (*(void (**)(uint64_t))(*(void *)(*(void *)(v49 + 8) + 8) + 32))(v50);
            LOBYTE(v49) = static UUID.== infix(_:_:)();
            (*v48)(v15, v28);
            if (v49) {
              break;
            }
            sub_10024D338((uint64_t)&v81);
            v47 += 40;
            if (!--v46) {
              goto LABEL_24;
            }
          }
          sub_1002AF688(&v81, (uint64_t)&v84);
        }
        else
        {
          swift_bridgeObjectRetain();
LABEL_24:
          uint64_t v86 = 0;
          long long v84 = 0u;
          long long v85 = 0u;
        }
        swift_bridgeObjectRelease();
        uint64_t v51 = v74;
        uint64_t v52 = v72;
        if (*((void *)&v85 + 1))
        {
          sub_1002AF688(&v84, (uint64_t)v87);
          sub_10026BB6C(v87, v87[3]);
          sub_100450E78(a2);

          (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v28);
          sub_10024D338((uint64_t)v87);
        }
        else
        {
          sub_10000A7E8((uint64_t)&v84, &qword_10097F9B0);
          uint64_t v53 = v71 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions;
          swift_beginAccess();
          uint64_t v54 = *(void *)(*(void *)v53 + 16);
          if (v54)
          {
            uint64_t v55 = *(void *)v53 + 32;
            uint64_t v56 = (void (**)(char *, uint64_t))(v52 + 8);
            swift_bridgeObjectRetain();
            while (1)
            {
              sub_100278C8C(v55, (uint64_t)&v75);
              uint64_t v58 = v76;
              uint64_t v57 = v77;
              sub_10026BB6C(&v75, v76);
              (*(void (**)(uint64_t))(*(void *)(*(void *)(v57 + 8) + 8) + 32))(v58);
              LOBYTE(v57) = static UUID.== infix(_:_:)();
              (*v56)(v15, v73);
              if (v57) {
                break;
              }
              sub_10024D338((uint64_t)&v75);
              v55 += 40;
              if (!--v54) {
                goto LABEL_34;
              }
            }
            sub_1002AF688(&v75, (uint64_t)&v78);
          }
          else
          {
            swift_bridgeObjectRetain();
LABEL_34:
            uint64_t v80 = 0;
            long long v78 = 0u;
            long long v79 = 0u;
          }
          swift_bridgeObjectRelease();
          uint64_t v60 = v72;
          uint64_t v59 = v73;
          unint64_t v61 = v69;
          if (*((void *)&v79 + 1))
          {
            sub_1002AF688(&v78, (uint64_t)&v81);
            sub_10026BB6C(&v81, v82);
            sub_1005CA258();

            (*(void (**)(char *, uint64_t))(v60 + 8))(v51, v59);
            sub_10024D338((uint64_t)&v81);
          }
          else
          {
            sub_10000A7E8((uint64_t)&v78, &qword_10097F8C8);
            if (qword_10096A190 != -1) {
              swift_once();
            }
            uint64_t v62 = type metadata accessor for Logger();
            sub_10000B47C(v62, (uint64_t)qword_10097F520);
            (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v61, v51, v59);
            uint64_t v63 = Logger.logObject.getter();
            os_log_type_t v64 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v63, v64))
            {
              uint64_t v65 = (uint8_t *)swift_slowAlloc();
              v87[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v65 = 136315138;
              sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
              uint64_t v66 = dispatch thunk of CustomStringConvertible.description.getter();
              *(void *)&long long v84 = sub_100254634(v66, v67, v87);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              uint64_t v68 = *(void (**)(char *, uint64_t))(v60 + 8);
              v68(v69, v73);
              _os_log_impl((void *)&_mh_execute_header, v63, v64, "Could not find existing session for %s", v65, 0xCu);
              swift_arrayDestroy();
              uint64_t v51 = v74;
              swift_slowDealloc();
              uint64_t v59 = v73;
              swift_slowDealloc();
            }
            else
            {

              uint64_t v68 = *(void (**)(char *, uint64_t))(v60 + 8);
              v68(v61, v59);
            }

            v68(v51, v59);
          }
        }
      }
      return;
    }
    sub_10000A7E8((uint64_t)v9, &qword_100974EA0);
  }
  if (qword_10096A190 != -1) {
    goto LABEL_45;
  }
LABEL_7:
  uint64_t v29 = type metadata accessor for Logger();
  sub_10000B47C(v29, (uint64_t)qword_10097F520);
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v30, v31))
  {
    os_log_type_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Message does not have a session ID", v32, 2u);
    swift_slowDealloc();

LABEL_13:
    return;
  }
}

uint64_t sub_1006F6F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  return _swift_task_switch(sub_1006F6F9C, 0, 0);
}

uint64_t sub_1006F6F9C()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10026BB6C(*(void **)(v0 + 56), *(void *)(*(void *)(v0 + 56) + 24));
  *(void *)(v0 + 40) = sub_10000B740(0, &qword_10096BDE8);
  *(void *)(v0 + 48) = &off_1008D8878;
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  void *v3 = v0;
  v3[1] = sub_100713464;
  return sub_1004F74C0(v0 + 16);
}

void sub_1006F707C(char *a1, uint64_t a2)
{
  sub_100278C8C(a2, (uint64_t)v39);
  uint64_t v3 = &a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lastMacThatDidMacUnlockPhone];
  swift_beginAccess();
  sub_10026B410((uint64_t)v39, (uint64_t)v3, &qword_10097BB50);
  swift_endAccess();
  uint64_t v4 = self;
  id v5 = [v4 standardUserDefaults];
  uint64_t v6 = *((void *)v3 + 3);
  if (!v6) {
    goto LABEL_4;
  }
  uint64_t v7 = *((void *)v3 + 4);
  uint64_t v8 = sub_10026BB6C(v3, *((void *)v3 + 3));
  uint64_t v9 = *(void *)(v6 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v11);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v6);
  if (v13)
  {
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_4:
    NSString v14 = 0;
  }
  NSString v15 = String._bridgeToObjectiveC()();
  [v5 setObject:v14 forKey:v15];

  swift_unknownObjectRelease();
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = sub_10000B47C(v16, (uint64_t)qword_10097F520);
  uint64_t v18 = a1;
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v37 = v4;
    id v21 = (uint8_t *)swift_slowAlloc();
    v39[0] = swift_slowAlloc();
    *(_DWORD *)id v21 = 136315138;
    uint64_t v22 = *((void *)v3 + 3);
    if (!v22) {
      goto LABEL_10;
    }
    uint64_t v23 = *((void *)v3 + 4);
    id v24 = sub_10026BB6C(v3, *((void *)v3 + 3));
    v36[1] = v36;
    v36[2] = v17;
    uint64_t v25 = *(void *)(v22 - 8);
    __chkstk_darwin(v24);
    uint64_t v27 = (char *)v36 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v25 + 16))(v27);
    uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
    unint64_t v30 = v29;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v22);
    if (!v30)
    {
LABEL_10:
      swift_bridgeObjectRelease();
      unint64_t v30 = 0xE90000000000003ELL;
      uint64_t v28 = 0x676E697373696D3CLL;
    }
    uint64_t v4 = v37;
    uint64_t v38 = sub_100254634(v28, v30, v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Recorded last mac that put phone into assert delay: %s", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v31 = [v4 standardUserDefaults];
  NSString v32 = String._bridgeToObjectiveC()();
  [v31 setBool:1 forKey:v32];

  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v33, v34))
  {
    os_log_type_t v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v35 = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Recorded Oneness unlock, showing notification on next phone unlock", v35, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1006F75D4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_10000A844(&qword_10096BAF0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    if (a2) {
      uint64_t v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else {
      uint64_t v8 = 0;
    }
    uint64_t v10 = v8;
    sub_10024D388((uint64_t)&v10, *(void *)(*(void *)(v3 + 64) + 40), &qword_10097F878);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1006F76CC()
{
  uint64_t v1 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TaskPriority();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10000A7E8((uint64_t)v3, &qword_10096C920);
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v8 = v9;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v7 = 0;
      uint64_t v8 = 0;
    }
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = &unk_10097F860;
  *(void *)(v10 + 24) = v6;
  if (v8 | v7)
  {
    v12[0] = 0;
    v12[1] = 0;
    v12[2] = v7;
    v12[3] = v8;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1006F78FC()
{
  uint64_t v1 = type metadata accessor for ContinuousClock();
  v0[2] = v1;
  v0[3] = *(void *)(v1 - 8);
  v0[4] = swift_task_alloc();
  return _swift_task_switch(sub_1006F79B8, 0, 0);
}

uint64_t sub_1006F79B8()
{
  if (SFDeviceClassCodeGet() == 1)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    v0[5] = sub_10000B47C(v1, (uint64_t)qword_10097F520);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Showing arming UI as requested", v4, 2u);
      swift_slowDealloc();
    }

    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = (id)SFLocalizedStringForKey();

    if (v6)
    {
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v9 = v8;
    }
    else
    {
      uint64_t v7 = 0;
      uint64_t v9 = 0;
    }
    v0[6] = v9;
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = (id)SFLocalizedStringForKey();

    if (v13)
    {
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v16 = v15;
    }
    else
    {
      unint64_t v16 = 0x80000001007C80B0;
      uint64_t v14 = 0xD000000000000010;
    }
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = (id)SFLocalizedStringForKey();

    if (v18)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10000A844((uint64_t *)&unk_10096EE60);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_10076E7A0;
      *(void *)(v22 + 56) = &type metadata for String;
      *(void *)(v22 + 64) = sub_1002E695C();
      *(void *)(v22 + 32) = v14;
      *(void *)(v22 + 40) = v16;
      uint64_t v23 = static String.localizedStringWithFormat(_:_:)();
      uint64_t v25 = v24;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v0[7] = v25;
      uint64_t v26 = swift_task_alloc();
      v0[8] = v26;
      *(void *)uint64_t v26 = v0;
      *(void *)(v26 + 8) = sub_1006F7D10;
      *(unsigned char *)(v26 + 584) = 1;
      *(void *)(v26 + 544) = v25;
      *(void *)(v26 + 536) = v23;
      *(void *)(v26 + 528) = v9;
      *(void *)(v26 + 520) = v7;
      uint64_t v19 = sub_10070F704;
      uint64_t v20 = 0;
      uint64_t v21 = 0;
    }
    else
    {
      __break(1u);
    }
    return _swift_task_switch(v19, v20, v21);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_1006F7D10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[11] = v2;
  swift_task_dealloc();
  if (v2)
  {
    NSString v5 = sub_1006F8020;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NSString v5 = sub_1006F7E38;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1006F7E38()
{
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Got passcode, unlocking device", v3, 2u);
    swift_slowDealloc();
  }

  Class isa = Data._bridgeToObjectiveC()().super.isa;
  int v5 = MKBUnlockDevice();

  if (v5)
  {
    id v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Could not unlock keybag to arm device", v8, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v9 = static Duration.seconds(_:)();
  uint64_t v11 = v10;
  ContinuousClock.init()();
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
  NSString v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v12;
  *NSString v12 = v0;
  v12[1] = sub_1006F8114;
  return v14(v9, v11, 0, 0, 1);
}

uint64_t sub_1006F8020()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "User canceled passcode entry or it timed out, arming did not occur", v3, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1006F8114()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 32);
  uint64_t v3 = *(void *)(*(void *)v1 + 24);
  uint64_t v4 = *(void *)(*(void *)v1 + 16);
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    int v5 = sub_1006F8284;
  }
  else {
    int v5 = sub_1006F8370;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1006F8284()
{
  sub_100250CC4(v0[9], v0[10]);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "User canceled passcode entry or it timed out, arming did not occur", v3, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1006F8370()
{
  uint64_t v1 = v0[9];
  unint64_t v2 = v0[10];
  sub_100246BE8((uint64_t)&off_1008D3928);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  MKBLockDevice();

  sub_100250CC4(v1, v2);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_1006F842C()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (void *)((char *)&v14[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v5 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    sub_1006CE38C((uint64_t)v14);
    uint64_t v7 = v15;
    if (v15)
    {
      uint64_t v8 = v16;
      sub_10026BB6C(v14, v15);
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
      uint64_t v10 = v9;
      sub_10024D338((uint64_t)v14);
      if (v10)
      {
        id v11 = [self sharedManager];
        NSString v12 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v11 showAuthenticatedSiriForDeviceID:v12];
      }
    }
    else
    {
      sub_10000A7E8((uint64_t)v14, &qword_10097BB50);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1006F8600@<X0>(void (**a1)(uint64_t, uint64_t)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v55 = a1;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v54 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v53 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_10000A844(&qword_10096C4F0);
  __chkstk_darwin(v57);
  uint64_t v59 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A844(&qword_100974EA0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v56 = (uint64_t)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  id v13 = (char *)&v50 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v50 - v14;
  uint64_t v16 = type metadata accessor for DispatchPredicate();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (uint64_t *)((char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v19 = v20;
  (*(void (**)(void *, void, uint64_t))(v17 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v16);
  id v21 = v20;
  LOBYTE(v20) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v58 = v15;
  UUID.init(uuidString:)();
  swift_beginAccess();
  uint64_t v23 = swift_bridgeObjectRetain();
  uint64_t v24 = sub_10045ECF0(v23);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v25 = swift_bridgeObjectRetain();
  uint64_t v26 = sub_10045ED2C(v25);
  swift_bridgeObjectRelease();
  *(void *)&long long v60 = v24;
  sub_1003D4B80((uint64_t)v26);
  uint64_t v27 = v60;
  swift_beginAccess();
  uint64_t v28 = swift_bridgeObjectRetain();
  unint64_t v29 = sub_10045EEBC(v28);
  swift_bridgeObjectRelease();
  *(void *)&long long v60 = v27;
  sub_1003D4B80((uint64_t)v29);
  uint64_t v30 = v60;
  swift_beginAccess();
  uint64_t v31 = swift_bridgeObjectRetain();
  NSString v32 = sub_10045EEF8(v31);
  swift_bridgeObjectRelease();
  *(void *)&long long v60 = v30;
  sub_1003D4B80((uint64_t)v32);
  uint64_t v33 = *(void *)(v60 + 16);
  if (!v33)
  {
LABEL_13:
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    goto LABEL_16;
  }
  uint64_t v51 = a2;
  uint64_t v34 = v60 + 32;
  os_log_type_t v35 = (void (**)(char *, void, uint64_t, uint64_t))(v54 + 56);
  uint64_t v36 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  uint64_t v52 = (void (**)(char *, uint64_t, uint64_t))(v54 + 32);
  uint64_t v55 = (void (**)(uint64_t, uint64_t))(v54 + 8);
  uint64_t v50 = v60;
  swift_bridgeObjectRetain();
  uint64_t v37 = &qword_100974EA0;
  while (1)
  {
    sub_100278C8C(v34, (uint64_t)&v60);
    uint64_t v38 = v37;
    uint64_t v39 = v61;
    uint64_t v40 = v62;
    sub_10026BB6C(&v60, v61);
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v40 + 32);
    uint64_t v42 = v40;
    uint64_t v37 = v38;
    v41(v39, v42);
    (*v35)(v13, 0, 1, v5);
    uint64_t v43 = v59;
    uint64_t v44 = v59 + *(int *)(v57 + 48);
    sub_10024A330((uint64_t)v13, v59, v37);
    sub_10024A330((uint64_t)v58, v44, v37);
    uint64_t v45 = *v36;
    if ((*v36)(v43, 1, v5) == 1) {
      break;
    }
    uint64_t v46 = v37;
    uint64_t v47 = v56;
    sub_10024A330(v59, v56, v46);
    if (v45(v44, 1, v5) == 1)
    {
      sub_10000A7E8((uint64_t)v13, v46);
      (*v55)(v47, v5);
      uint64_t v37 = v46;
      goto LABEL_5;
    }
    uint64_t v48 = v53;
    (*v52)(v53, v44, v5);
    sub_10000BBC0((unint64_t *)&unk_10096D460, (void (*)(uint64_t))&type metadata accessor for UUID);
    LODWORD(v54) = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v49 = *v55;
    (*v55)((uint64_t)v48, v5);
    sub_10000A7E8((uint64_t)v13, v46);
    v49(v56, v5);
    sub_10000A7E8(v59, v46);
    uint64_t v37 = v46;
    if (v54) {
      goto LABEL_15;
    }
LABEL_6:
    sub_10024D338((uint64_t)&v60);
    v34 += 40;
    if (!--v33)
    {
      swift_bridgeObjectRelease();
      a2 = v51;
      goto LABEL_13;
    }
  }
  sub_10000A7E8((uint64_t)v13, v37);
  if (v45(v44, 1, v5) != 1)
  {
LABEL_5:
    sub_10000A7E8(v59, &qword_10096C4F0);
    goto LABEL_6;
  }
  sub_10000A7E8(v59, &qword_100974EA0);
LABEL_15:
  swift_bridgeObjectRelease();
  sub_1002AF688(&v60, v51);
LABEL_16:
  sub_10000A7E8((uint64_t)v58, &qword_100974EA0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1006F901C()
{
  return type metadata accessor for SDAuthenticationManager(0);
}

uint64_t type metadata accessor for SDAuthenticationManager(uint64_t a1)
{
  return sub_10000B93C(a1, (uint64_t *)&unk_10097F678);
}

void sub_1006F9044()
{
  type metadata accessor for StateMetrics(319);
  if (v0 <= 0x3F)
  {
    sub_10062BD0C(319, (unint64_t *)&qword_10096C2B0, (void (*)(uint64_t))&type metadata accessor for UUID);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for StateMetrics(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10097F770);
}

uint64_t sub_1006F9214(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a1;
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_100974F20);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RegistrationState(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchPredicate();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (uint64_t *)((char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  id v16 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if (v15)
  {
    uint64_t v18 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID);
    swift_beginAccess();
    uint64_t v19 = *v18;
    if (*(void *)(v19 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1005838BC(v24, a2);
      if (v21)
      {
        sub_10070F0FC(*(void *)(v19 + 56) + *(void *)(v8 + 72) * v20, (uint64_t)v6, type metadata accessor for RegistrationState);
        uint64_t v22 = 0;
      }
      else
      {
        uint64_t v22 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v22, 1, v7);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
      {
        sub_10070F174((uint64_t)v6, (uint64_t)v10, type metadata accessor for RegistrationState);
        swift_endAccess();
        uint64_t v23 = v10[*(int *)(v7 + 20)];
        sub_10070EE60((uint64_t)v10, type metadata accessor for RegistrationState);
        return v23;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    }
    sub_10000A7E8((uint64_t)v6, (uint64_t *)&unk_100974F20);
    swift_endAccess();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006F9558(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v3 = sub_10000A844((uint64_t *)&unk_100974F20);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v9 = type metadata accessor for RegistrationState(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v34 = (uint64_t)&v33 - v14;
  uint64_t v15 = type metadata accessor for DispatchPredicate();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (uint64_t *)((char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v18 = v19;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  id v20 = v19;
  LOBYTE(v19) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  if (v19)
  {
    uint64_t v22 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID);
    swift_beginAccess();
    uint64_t v23 = *v22;
    if (!*(void *)(*v22 + 16))
    {
      uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v28(v8, 1, 1, v9);
      uint64_t v25 = v35;
      uint64_t v24 = v36;
LABEL_8:
      sub_10000A7E8((uint64_t)v8, (uint64_t *)&unk_100974F20);
      swift_endAccess();
      swift_bridgeObjectRetain();
      Date.init()();
      uint64_t v29 = type metadata accessor for Date();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v6, 0, 1, v29);
      v6[*(int *)(v9 + 20)] = 0;
      v28(v6, 0, 1, v9);
      swift_beginAccess();
      sub_100467314((uint64_t)v6, v25, v24);
      return swift_endAccess();
    }
    uint64_t v24 = v36;
    swift_bridgeObjectRetain();
    uint64_t v25 = v35;
    uint64_t v26 = sub_1005838BC(v35, v24);
    if (v27)
    {
      sub_10070F0FC(*(void *)(v23 + 56) + *(void *)(v10 + 72) * v26, (uint64_t)v8, type metadata accessor for RegistrationState);
      uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v28(v8, 0, 1, v9);
    }
    else
    {
      uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v28(v8, 1, 1, v9);
    }
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
      goto LABEL_8;
    }
    uint64_t v30 = v34;
    sub_10070F174((uint64_t)v8, v34, type metadata accessor for RegistrationState);
    swift_endAccess();
    Date.init()();
    uint64_t v31 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v13, 0, 1, v31);
    v13[*(int *)(v9 + 20)] = *(unsigned char *)(v30 + *(int *)(v9 + 20));
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v37 = *v22;
    uint64_t *v22 = 0x8000000000000000;
    sub_100707B9C((uint64_t)v13, v25, v24, isUniquelyReferenced_nonNull_native, (uint64_t)v6);
    uint64_t *v22 = v37;
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_10000A7E8((uint64_t)v6, (uint64_t *)&unk_100974F20);
    return sub_10070EE60(v30, type metadata accessor for RegistrationState);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006F9A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v31 = a1;
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_100974F20);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = type metadata accessor for RegistrationState(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v30 = (uint64_t)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  id v18 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if (v17)
  {
    id v20 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID);
    swift_beginAccess();
    uint64_t v21 = *v20;
    if (!*(void *)(*v20 + 16))
    {
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v25(v9, 1, 1, v10);
      uint64_t v22 = v31;
LABEL_8:
      sub_10000A7E8((uint64_t)v9, (uint64_t *)&unk_100974F20);
      swift_endAccess();
      uint64_t v26 = type metadata accessor for Date();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v7, 1, 1, v26);
      v7[*(int *)(v10 + 20)] = 0;
      v25(v7, 0, 1, v10);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_100467314((uint64_t)v7, v22, a2);
      return swift_endAccess();
    }
    swift_bridgeObjectRetain();
    uint64_t v22 = v31;
    uint64_t v23 = sub_1005838BC(v31, a2);
    if (v24)
    {
      sub_10070F0FC(*(void *)(v21 + 56) + *(void *)(v11 + 72) * v23, (uint64_t)v9, type metadata accessor for RegistrationState);
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v25(v9, 0, 1, v10);
    }
    else
    {
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v25(v9, 1, 1, v10);
    }
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
      goto LABEL_8;
    }
    uint64_t v27 = v30;
    sub_10070F174((uint64_t)v9, v30, type metadata accessor for RegistrationState);
    swift_endAccess();
    uint64_t v28 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v7, 1, 1, v28);
    v7[*(int *)(v10 + 20)] = *(unsigned char *)(v27 + *(int *)(v10 + 20));
    v25(v7, 0, 1, v10);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_100467314((uint64_t)v7, v22, a2);
    swift_endAccess();
    return sub_10070EE60(v27, type metadata accessor for RegistrationState);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006F9F18()
{
  if (SFDeviceClassCodeGet() != 1) {
    goto LABEL_7;
  }
  sub_1006CE38C((uint64_t)&v12);
  if (!v13)
  {
    sub_10000A7E8((uint64_t)&v12, &qword_10097BB50);
LABEL_7:
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000B47C(v8, (uint64_t)qword_10097F520);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "No active device", v11, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  sub_1002AF688(&v12, (uint64_t)v14);
  uint64_t v0 = v15;
  uint64_t v1 = v16;
  sub_10026BB6C(v14, v15);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(v0, v1);
  if (v3)
  {
    uint64_t v4 = result;
    uint64_t v5 = v15;
    uint64_t v6 = v16;
    sub_10026BB6C(v14, v15);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
    if (v7)
    {
      sub_10024D338((uint64_t)v14);
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1006FA0E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000B47C(v5, (uint64_t)qword_10097F520);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Set pairing date as lastUnlockDate", v8, 2u);
    swift_slowDealloc();
  }

  Date.init()();
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 0, 1, v9);
  uint64_t v10 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager;
  swift_beginAccess();
  uint64_t v11 = *(void *)(v10 + 24);
  uint64_t v12 = *(void *)(v10 + 32);
  sub_1002AF758(v10, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v4, v11, v12);
  return swift_endAccess();
}

void sub_1006FA2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = (void *)Strong;
    uint64_t v30 = a2;
    uint64_t v31 = a1;
    if (qword_10096A190 != -1) {
      swift_once();
    }
    NSString v32 = v3;
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000B47C(v12, (uint64_t)qword_10097F520);
    id v13 = v2;
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v34 = v29;
      *(_DWORD *)uint64_t v16 = 136315138;
      uint64_t v28 = v16 + 4;
      uint64_t v33 = swift_unknownObjectWeakLoadStrong();
      sub_10000A844(&qword_10097FAE8);
      uint64_t v17 = Optional.debugDescription.getter();
      unint64_t v19 = v18;
      swift_unknownObjectRelease();
      uint64_t v33 = sub_100254634(v17, v19, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Notifying delegate %s of approve request", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    [v11 manager:v13 didReceiveApproveRequestFor:isa info:v30];
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_10000B47C(v20, (uint64_t)qword_10097F520);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      NSString v32 = v23 + 4;
      sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v33 = sub_100254634(v24, v25, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "No delegate to approve request: %s", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }

    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v27 = 31;
    *(void *)(v27 + 8) = 0xD000000000000022;
    *(void *)(v27 + 16) = 0x80000001007C82E0;
    swift_willThrow();
  }
}

unint64_t sub_1006FA798(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (void *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v13 = *(void **)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  id v14 = v13;
  LOBYTE(v13) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    swift_once();
    goto LABEL_5;
  }
  sub_1006CE38C((uint64_t)&v24);
  if (v25)
  {
    sub_1002AF688(&v24, (uint64_t)v26);
    unint64_t v15 = sub_1006DF18C(a1, a2, (uint64_t)v26, a3, a4);
    unsigned int v16 = v15;
    uint64_t v17 = HIDWORD(v15) & 1;
    sub_10024D338((uint64_t)v26);
    uint64_t v18 = v16;
    goto LABEL_8;
  }
  sub_10000A7E8((uint64_t)&v24, &qword_10097BB50);
  if (qword_10096A190 != -1) {
    goto LABEL_10;
  }
LABEL_5:
  uint64_t v19 = type metadata accessor for Logger();
  sub_10000B47C(v19, (uint64_t)qword_10097F520);
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v20, v21))
  {
    os_log_type_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "No active device", v22, 2u);
    swift_slowDealloc();
  }

  LOBYTE(v17) = 0;
  uint64_t v18 = 10;
LABEL_8:
  v26[0] = v17;
  return v18 | ((unint64_t)v17 << 32);
}

uint64_t sub_1006FA9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000B47C(v10, (uint64_t)qword_10097F520);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    unsigned int v18 = a4;
    id v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)id v13 = 136315138;
    unint64_t v14 = 0xEB00000000746E65;
    uint64_t v15 = 0x674179627261656ELL;
    switch(a5)
    {
      case 1:
        unint64_t v14 = 0xE800000000000000;
        uint64_t v15 = 0x6C61636F4C736469;
        break;
      case 2:
        uint64_t v15 = 0x7265746E49736469;
        unint64_t v14 = 0xEB0000000074656ELL;
        break;
      case 3:
        unint64_t v14 = 0xE900000000000054;
        uint64_t v15 = 0x4274726F70706172;
        break;
      case 4:
        unint64_t v14 = 0xEB000000004C4457;
        uint64_t v15 = 0x4174726F70706172;
        break;
      case 5:
        unint64_t v14 = 0x80000001007B5F90;
        uint64_t v15 = 0xD000000000000010;
        break;
      case 6:
        unint64_t v14 = 0xED000068746F6F74;
        uint64_t v15 = 0x65756C4265726F63;
        break;
      default:
        break;
    }
    sub_100254634(v15, v14, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Using transport type %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a4 = v18;
  }
  else
  {
  }
  unint64_t v16 = sub_1005EA6AC(a1, a2, a3, a4, a5);
  return v16 | ((HIDWORD(v16) & 1) << 32);
}

uint64_t sub_1006FACD0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v20 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  v17[1] = *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v13 + v12, (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_100713198;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008E6D00;
  unint64_t v14 = _Block_copy(aBlock);
  uint64_t v15 = v1;
  static DispatchQoS.unspecified.getter();
  os_log_type_t v21 = _swiftEmptyArrayStorage;
  sub_10000BBC0((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v19);
  return swift_release();
}

void sub_1006FB058(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A844(&qword_10097F888);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000A844(&qword_10096C6B0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v38 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1002A9A80(a2, (uint64_t)&v41);
  swift_endAccess();
  if (v42)
  {
    sub_1002AF688(&v41, (uint64_t)v43);
    swift_beginAccess();
    sub_1002A9BB4(a2);
    swift_endAccess();
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_10000B47C(v17, (uint64_t)qword_10097F520);
    sub_100278C8C((uint64_t)v43, (uint64_t)&v41);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v36 = a2;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v37 = v6;
      os_log_type_t v21 = (uint8_t *)v20;
      uint64_t v40 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v21 = 136315138;
      uint64_t v35 = v10;
      sub_100278C8C((uint64_t)&v41, (uint64_t)v39);
      sub_10000A844(&qword_10097FAD0);
      uint64_t v22 = String.init<A>(describing:)();
      v39[0] = sub_100254634(v22, v23, &v40);
      uint64_t v10 = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      a2 = v36;
      swift_bridgeObjectRelease();
      sub_10024D338((uint64_t)&v41);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Session did complete: %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v6 = v37;
      swift_slowDealloc();
    }
    else
    {
      sub_10024D338((uint64_t)&v41);
    }

    swift_beginAccess();
    sub_1002AA4E4(a2, (uint64_t)v9);
    swift_endAccess();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      sub_10000A7E8((uint64_t)v9, &qword_10097F888);
    }
    else
    {
      uint64_t v30 = v38;
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v38, v9, v10);
      LOBYTE(v41) = 1;
      SFProgressContinuation.finish(with:)();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v30, v10);
    }
    uint64_t v31 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v6, 1, 1, v31);
    sub_100278C8C((uint64_t)v43, (uint64_t)&v41);
    NSString v32 = (void *)swift_allocObject();
    v32[2] = 0;
    v32[3] = 0;
    v32[4] = a1;
    sub_1002AF688(&v41, (uint64_t)(v32 + 5));
    id v33 = a1;
    sub_10028CFA8((uint64_t)v6, (uint64_t)&unk_10097FAC8, (uint64_t)v32);
    swift_release();
    sub_10024D338((uint64_t)v43);
  }
  else
  {
    sub_10000A7E8((uint64_t)&v41, &qword_100974F18);
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_10000B47C(v24, (uint64_t)qword_10097F520);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      v43[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315138;
      sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&long long v41 = sub_100254634(v28, v29, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Could not find session matching sessionID %s", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
  }
}

uint64_t sub_1006FB790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  v5[17] = a4;
  v5[18] = a5;
  uint64_t v8 = type metadata accessor for UUID();
  v5[19] = v8;
  v5[20] = *(void *)(v8 - 8);
  v5[21] = swift_task_alloc();
  sub_10000A844(&qword_10096C920);
  v5[22] = swift_task_alloc();
  v5[23] = type metadata accessor for SDAuthenticationCommonOperationInput();
  v5[24] = swift_task_alloc();
  uint64_t v9 = *sub_10026BB6C(a5, a5[3]);
  uint64_t v10 = (void *)swift_task_alloc();
  v5[25] = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1006FB900;
  return sub_10070CD64(v9, 1, a4);
}

uint64_t sub_1006FB900()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1006FB9FC, 0, 0);
}

uint64_t sub_1006FB9FC()
{
  uint64_t v1 = sub_10026BB6C(*(void **)(v0 + 144), *(void *)(*(void *)(v0 + 144) + 24));
  *(void *)(v0 + 208) = v1;
  uint64_t v2 = *v1;
  return _swift_task_switch(sub_1006FBA6C, v2, 0);
}

uint64_t sub_1006FBA6C()
{
  sub_100278C8C(**(void **)(v0 + 208) + 112, v0 + 16);
  return _swift_task_switch(sub_1006FBAE0, 0, 0);
}

uint64_t sub_1006FBAE0()
{
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v19 = *(void *)(v0 + 176);
  uint64_t v23 = *(void *)(v0 + 152);
  uint64_t v24 = *(void *)(v0 + 168);
  uint64_t v25 = *(void **)(v0 + 144);
  os_log_type_t v21 = *(void **)(v0 + 136);
  uint64_t v22 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  sub_10026BB6C((void *)(v0 + 16), v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 24))(v4, v3);
  uint64_t v5 = v2;
  uint64_t v20 = v2;
  uint64_t v6 = *(void *)(v1 + *(int *)(v2 + 28));
  *(void *)(v0 + 216) = v6;
  sub_10070EE60(v1, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
  uint64_t v8 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  sub_10026BB6C((void *)(v0 + 16), v8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v8, v7);
  LOBYTE(v5) = *(unsigned char *)(v1 + *(int *)(v5 + 32));
  sub_10070EE60(v1, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
  uint64_t v9 = *(void *)(v0 + 40);
  uint64_t v10 = *(void *)(v0 + 48);
  sub_10026BB6C((void *)(v0 + 16), v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
  sub_100278C8C(v1 + 40, v0 + 56);
  sub_10070EE60(v1, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v19, 1, 1, v11);
  sub_100278C8C(v0 + 56, v0 + 96);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = 0;
  *(unsigned char *)(v12 + 32) = (v5 & 1) == 0;
  *(void *)(v12 + 40) = v6;
  *(void *)(v12 + 48) = v21;
  sub_1002AF688((long long *)(v0 + 96), v12 + 56);
  id v13 = v21;
  sub_10028CAC4(v19, (uint64_t)&unk_10097FAE0, v12);
  swift_release();
  uint64_t v14 = *(void *)(v0 + 40);
  uint64_t v15 = *(void *)(v0 + 48);
  sub_10026BB6C((void *)(v0 + 16), v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v24, v1 + *(int *)(v20 + 24), v23);
  sub_10070EE60(v1, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
  unint64_t v16 = sub_10026BB6C(v25, v25[3]);
  *(void *)(v0 + 224) = v16;
  uint64_t v17 = *v16;
  return _swift_task_switch(sub_1006FBDC4, v17, 0);
}

uint64_t sub_1006FBDC4()
{
  sub_1004F9CDC();
  return _swift_task_switch(sub_1006FBE30, 0, 0);
}

uint64_t sub_1006FBE30()
{
  unint64_t v1 = *(void *)(v0 + 216);
  if ((v1 & 0xFFFFFFFFFFFFFFFDLL) == 8)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000B47C(v2, (uint64_t)qword_10097F520);
    Class isa = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(isa, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      uint64_t v6 = "Registration type does not have a delegate to call back";
      uint64_t v7 = isa;
      os_log_type_t v8 = v4;
      uint64_t v9 = v5;
      uint32_t v10 = 2;
LABEL_25:
      _os_log_impl((void *)&_mh_execute_header, v7, v8, v6, v9, v10);
      swift_slowDealloc();
      goto LABEL_33;
    }
    goto LABEL_33;
  }
  Swift::UInt8 v11 = SFDeviceClassCodeGet();
  Swift::Int v12 = sub_1005095A0(v1);
  BOOL v13 = sub_10057C25C(8u, v12);
  swift_bridgeObjectRelease();
  if (v13)
  {
    if (SFDeviceIsRealityDevice()) {
      goto LABEL_12;
    }
  }
  else
  {
    Swift::Int v14 = sub_1005095A0(*(void *)(v0 + 216));
    BOOL v15 = sub_10057C25C(v11, v14);
    swift_bridgeObjectRelease();
    if (v15)
    {
LABEL_12:
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v18 = (void *)Strong;
        unint64_t v19 = *(void *)(v0 + 216);
        if (v19 <= 9 && ((1 << v19) & 0x228) != 0)
        {
          if (qword_10096A190 != -1) {
            swift_once();
          }
          uint64_t v20 = type metadata accessor for Logger();
          sub_10000B47C(v20, (uint64_t)qword_10097F520);
          os_log_type_t v21 = Logger.logObject.getter();
          os_log_type_t v22 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v21, v22))
          {
            uint64_t v23 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v23 = 0;
            _os_log_impl((void *)&_mh_execute_header, v21, v22, "Calling back to delegate didEnableAuthenticationFor", v23, 2u);
            swift_slowDealloc();
          }
          uint64_t v24 = *(void *)(v0 + 136);

          Class isa = UUID._bridgeToObjectiveC()().super.isa;
          [v18 manager:v24 didEnableAuthenticationFor:isa];
        }
        else
        {
          if (qword_10096A190 != -1) {
            swift_once();
          }
          uint64_t v33 = type metadata accessor for Logger();
          sub_10000B47C(v33, (uint64_t)qword_10097F520);
          uint64_t v34 = Logger.logObject.getter();
          os_log_type_t v35 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v34, v35))
          {
            uint64_t v36 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v36 = 0;
            _os_log_impl((void *)&_mh_execute_header, v34, v35, "Calling back to delegate didCompleteAuthenticationFor", v36, 2u);
            swift_slowDealloc();
          }
          uint64_t v37 = *(void *)(v0 + 136);

          Class isa = UUID._bridgeToObjectiveC()().super.isa;
          [v18 manager:v37 didCompleteAuthenticationFor:isa];
        }
        swift_unknownObjectRelease();
        goto LABEL_33;
      }
      int v16 = 1;
      goto LABEL_21;
    }
  }
  if ((unint64_t)(*(void *)(v0 + 216) - 9) <= 1) {
    goto LABEL_12;
  }
  int v16 = 0;
LABEL_21:
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v25 = *(void **)(v0 + 136);
  uint64_t v26 = type metadata accessor for Logger();
  sub_10000B47C(v26, (uint64_t)qword_10097F520);
  id v27 = v25;
  Class isa = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  BOOL v29 = os_log_type_enabled(isa, v28);
  uint64_t v30 = *(void **)(v0 + 136);
  if (v29)
  {
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 67109376;
    *(_DWORD *)(v0 + 232) = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 8) = 1024;
    uint64_t v32 = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();

    *(_DWORD *)(v0 + 236) = v32 == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v6 = "Not calling back to delegate (isInitiator: %{BOOL}d, delegate is nil: %{BOOL}d)";
    uint64_t v7 = isa;
    os_log_type_t v8 = v28;
    uint64_t v9 = (uint8_t *)v31;
    uint32_t v10 = 14;
    goto LABEL_25;
  }

  Class isa = *(NSObject **)(v0 + 136);
LABEL_33:
  uint64_t v38 = *(void *)(v0 + 168);
  uint64_t v39 = *(void *)(v0 + 152);
  uint64_t v40 = *(void *)(v0 + 160);

  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
  sub_10024D338(v0 + 56);
  sub_10024D338(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v41 = *(uint64_t (**)(void))(v0 + 8);
  return v41();
}

uint64_t sub_1006FC364(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 104) = a6;
  *(void *)(v7 + 112) = a7;
  *(void *)(v7 + 96) = a5;
  *(unsigned char *)(v7 + 160) = a4;
  uint64_t v8 = type metadata accessor for ContinuousClock();
  *(void *)(v7 + 120) = v8;
  *(void *)(v7 + 128) = *(void *)(v8 - 8);
  *(void *)(v7 + 136) = swift_task_alloc();
  return _swift_task_switch(sub_1006FC42C, 0, 0);
}

uint64_t sub_1006FC42C()
{
  ContinuousClock.init()();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_1006FC4F4;
  return v3(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_1006FC4F4()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 136);
  uint64_t v3 = *(void *)(*(void *)v1 + 128);
  uint64_t v4 = *(void *)(*(void *)v1 + 120);
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_1006FC904;
  }
  else {
    uint64_t v5 = sub_1006FC664;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1006FC664()
{
  unint64_t v1 = *(void *)(v0 + 96);
  if (*(unsigned char *)(v0 + 160) == 1)
  {
    if (v1 > 0xE || ((1 << v1) & 0x658E) == 0) {
      goto LABEL_18;
    }
    uint64_t v3 = v0 + 56;
    uint64_t v4 = *(void *)(v0 + 152);
    uint64_t v5 = *(void *)(v0 + 112);
    uint64_t v6 = *(void *)(*(void *)(v0 + 104) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
    char v7 = sub_100508B74(v1);
    sub_100278C8C(v5, v0 + 56);
    uint64_t v8 = sub_1005EA4B4(v7, v0 + 56);
    uint64_t v10 = v9;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v10 + 56))(ObjectType, v10);
    Swift::Int v12 = *(os_unfair_lock_s **)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_transportLock);
    BOOL v13 = (void *)swift_task_alloc();
    void v13[2] = v8;
    v13[3] = v10;
    v13[4] = v0 + 56;
    void v13[5] = v6;
    uint64_t v14 = swift_task_alloc();
    *(void *)(v14 + 16) = sub_10045AFA8;
    *(void *)(v14 + 24) = v13;
    BOOL v15 = v12 + 4;
    os_unfair_lock_lock(v12 + 4);
    sub_10030F73C(v16);
  }
  else
  {
    if (v1 <= 0xE && ((1 << v1) & 0x658E) != 0) {
      goto LABEL_18;
    }
    uint64_t v3 = v0 + 16;
    uint64_t v4 = *(void *)(v0 + 152);
    uint64_t v19 = *(void *)(v0 + 112);
    uint64_t v20 = *(void *)(*(void *)(v0 + 104)
                    + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
    char v21 = sub_100508B74(v1);
    sub_100278C8C(v19, v0 + 16);
    uint64_t v22 = sub_1005EA4B4(v21, v0 + 16);
    uint64_t v24 = v23;
    uint64_t v25 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v24 + 56))(v25, v24);
    uint64_t v26 = *(os_unfair_lock_s **)(v20 + OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_transportLock);
    id v27 = (void *)swift_task_alloc();
    void v27[2] = v22;
    v27[3] = v24;
    v27[4] = v0 + 16;
    v27[5] = v20;
    uint64_t v28 = swift_task_alloc();
    *(void *)(v28 + 16) = sub_10045AFA8;
    *(void *)(v28 + 24) = v27;
    BOOL v15 = v26 + 4;
    os_unfair_lock_lock(v26 + 4);
    sub_10030F73C(v29);
  }
  os_unfair_lock_unlock(v15);
  if (v4)
  {
    return swift_task_dealloc();
  }
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10000A7E8(v3, &qword_10097BB50);
LABEL_18:
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_1006FC904()
{
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006FC968(void *a1, void *a2)
{
  return sub_1006FC984(a1, a2) & 1;
}

uint64_t sub_1006FC984(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v17 - v9;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  sub_10026BB6C(a1, v11);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v12 + 8) + 8) + 32))(v11);
  uint64_t v14 = a2[3];
  uint64_t v13 = a2[4];
  sub_10026BB6C(a2, v14);
  (*(void (**)(uint64_t))(*(void *)(v13 + 8) + 32))(v14);
  LOBYTE(v13) = static UUID.== infix(_:_:)();
  BOOL v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return v13 & 1;
}

uint64_t sub_1006FCB18(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  int v29 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v34 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v37 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v33 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v35 = *(void *)(v8 - 8);
  uint64_t v36 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = *(void *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v16 = (v13 + v15 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v17 = (v16 + 11) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v5;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v19 + v15, v14, v11);
  *(_DWORD *)(v19 + v16) = v29;
  uint64_t v20 = (void *)(v19 + v17);
  uint64_t v21 = v31;
  *uint64_t v20 = v30;
  v20[1] = v21;
  *(void *)(v19 + v18) = ObjectType;
  aBlock[4] = sub_100710108;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008E64B8;
  uint64_t v22 = _Block_copy(aBlock);
  uint64_t v23 = v5;
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  uint64_t v38 = _swiftEmptyArrayStorage;
  sub_10000BBC0((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  uint64_t v25 = v33;
  uint64_t v24 = v34;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v25, v24);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v36);
  return swift_release();
}

void sub_1006FCF00(void *a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v72 = a4;
  unsigned int v71 = a3;
  uint64_t v10 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000A844(&qword_10097F888);
  uint64_t v66 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v69 = (uint64_t)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = v15;
  __chkstk_darwin(v14);
  uint64_t v73 = (uint64_t)&v57 - v16;
  uint64_t v74 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v74 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  uint64_t v19 = __chkstk_darwin(v74);
  uint64_t v68 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v57 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v57 - v23;
  swift_beginAccess();
  sub_1002A9A80(a2, (uint64_t)&v76);
  swift_endAccess();
  if (v77)
  {
    long long v70 = v12;
    uint64_t v64 = a6;
    sub_1002AF688(&v76, (uint64_t)v78);
    swift_beginAccess();
    sub_1002A9BB4(a2);
    swift_endAccess();
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_10000B47C(v25, (uint64_t)qword_10097F520);
    uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    v63(v22, a2, v74);
    swift_bridgeObjectRetain_n();
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    BOOL v28 = os_log_type_enabled(v26, v27);
    uint64_t v65 = a5;
    if (v28)
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v61 = v17 + 16;
      uint64_t v30 = v29;
      uint64_t v58 = (void *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      *(void *)&long long v76 = v59;
      *(_DWORD *)uint64_t v30 = 136315394;
      uint64_t v31 = v74;
      uint64_t v57 = v30 + 4;
      sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v75 = sub_100254634(v32, v33, (uint64_t *)&v76);
      uint64_t v60 = a2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v31);
      *(_WORD *)(v30 + 12) = 2112;
      id v34 = sub_10070E650(v71, v72, v65);
      uint64_t v75 = (uint64_t)v34;
      a2 = v60;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v58 = v34;
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Session %s failed with error: %@", (uint8_t *)v30, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v74);
      swift_bridgeObjectRelease_n();
    }

    uint64_t v62 = a1;
    swift_beginAccess();
    uint64_t v42 = v73;
    sub_1002AA4E4(a2, v73);
    swift_endAccess();
    uint64_t v43 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v70, 1, 1, v43);
    uint64_t v44 = v69;
    sub_10024A330(v42, v69, &qword_10097F888);
    sub_100278C8C((uint64_t)v78, (uint64_t)&v76);
    uint64_t v45 = v68;
    uint64_t v46 = v74;
    v63(v68, a2, v74);
    unint64_t v47 = (*(unsigned __int8 *)(v66 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
    unint64_t v48 = (v67 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v49 = (v48 + 47) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v50 = (*(unsigned __int8 *)(v17 + 80) + v49 + 8) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v51 = v17;
    uint64_t v52 = swift_allocObject();
    *(void *)(v52 + 16) = 0;
    *(void *)(v52 + 24) = 0;
    *(_DWORD *)(v52 + 32) = v71;
    uint64_t v53 = v52 + v47;
    uint64_t v54 = v65;
    *(void *)(v52 + 40) = v72;
    *(void *)(v52 + 48) = v54;
    sub_10024D388(v44, v53, &qword_10097F888);
    sub_1002AF688(&v76, v52 + v48);
    uint64_t v55 = v62;
    *(void *)(v52 + v49) = v62;
    (*(void (**)(unint64_t, char *, uint64_t))(v51 + 32))(v52 + v50, v45, v46);
    *(void *)(v52 + ((v18 + v50 + 7) & 0xFFFFFFFFFFFFFFF8)) = v64;
    swift_bridgeObjectRetain();
    id v56 = v55;
    sub_10028CFA8((uint64_t)v70, (uint64_t)&unk_10097F898, v52);
    swift_release();
    sub_10000A7E8(v73, &qword_10097F888);
    sub_10024D338((uint64_t)v78);
  }
  else
  {
    sub_10000A7E8((uint64_t)&v76, &qword_100974F18);
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    sub_10000B47C(v35, (uint64_t)qword_10097F520);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v24, a2, v74);
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      v78[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 136315138;
      uint64_t v39 = v74;
      sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&long long v76 = sub_100254634(v40, v41, v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v39);
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Could not find session matching sessionID %s", v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v74);
    }
  }
}

uint64_t sub_1006FD83C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 472) = v16;
  *(_OWORD *)(v8 + 456) = v15;
  *(void *)(v8 + 440) = a7;
  *(void *)(v8 + 448) = a8;
  *(void *)(v8 + 424) = a5;
  *(void *)(v8 + 432) = a6;
  *(_DWORD *)(v8 + 680) = a4;
  sub_10000A844(&qword_10096C920);
  *(void *)(v8 + 480) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  *(void *)(v8 + 488) = v9;
  *(void *)(v8 + 496) = *(void *)(v9 - 8);
  *(void *)(v8 + 504) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for DispatchQoS();
  *(void *)(v8 + 512) = v10;
  *(void *)(v8 + 520) = *(void *)(v10 - 8);
  *(void *)(v8 + 528) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for UUID();
  *(void *)(v8 + 536) = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  *(void *)(v8 + 544) = v12;
  *(void *)(v8 + 552) = *(void *)(v12 + 64);
  *(void *)(v8 + 560) = swift_task_alloc();
  *(void *)(v8 + 568) = swift_task_alloc();
  *(void *)(v8 + 576) = swift_task_alloc();
  *(void *)(v8 + 584) = type metadata accessor for SDAuthenticationCommonOperationInput();
  *(void *)(v8 + 592) = swift_task_alloc();
  sub_10000A844(&qword_10097F888);
  *(void *)(v8 + 600) = swift_task_alloc();
  return _swift_task_switch(sub_1006FDA88, 0, 0);
}

uint64_t sub_1006FDA88()
{
  uint64_t v1 = *(void *)(v0 + 600);
  uint64_t v2 = *(void *)(v0 + 440);
  id v3 = sub_10070E650(*(_DWORD *)(v0 + 680), *(void *)(v0 + 424), *(void *)(v0 + 432));
  *(void *)(v0 + 608) = v3;
  sub_10024A330(v2, v1, &qword_10097F888);
  uint64_t v4 = sub_10000A844(&qword_10096C6B0);
  uint64_t v5 = *(void *)(v4 - 8);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v1, 1, v4);
  uint64_t v7 = *(void *)(v0 + 600);
  if (v6 == 1)
  {
    sub_10000A7E8(*(void *)(v0 + 600), &qword_10097F888);
  }
  else
  {
    id v8 = v3;
    SFProgressContinuation.fail(with:)();

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v9 = sub_10026BB6C(*(void **)(v0 + 448), *(void *)(*(void *)(v0 + 448) + 24));
  *(void *)(v0 + 616) = v9;
  uint64_t v10 = *v9;
  return _swift_task_switch(sub_1006FDBE4, v10, 0);
}

uint64_t sub_1006FDBE4()
{
  sub_1004F9CDC();
  return _swift_task_switch(sub_1006FDC50, 0, 0);
}

uint64_t sub_1006FDC50()
{
  uint64_t v1 = sub_10026BB6C(*(void **)(v0 + 448), *(void *)(*(void *)(v0 + 448) + 24));
  *(void *)(v0 + 624) = v1;
  uint64_t v2 = *v1;
  return _swift_task_switch(sub_1006FDCC0, v2, 0);
}

uint64_t sub_1006FDCC0()
{
  sub_100278C8C(**(void **)(v0 + 624) + 112, v0 + 320);
  return _swift_task_switch(sub_1006FDD34, 0, 0);
}

uint64_t sub_1006FDD34()
{
  uint64_t v1 = v0[74];
  uint64_t v2 = v0[73];
  id v3 = (void *)v0[56];
  uint64_t v4 = v0[43];
  uint64_t v5 = v0[44];
  sub_10026BB6C(v0 + 40, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  v0[79] = *(void *)(v1 + *(int *)(v2 + 28));
  sub_10070EE60(v1, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
  sub_10024D338((uint64_t)(v0 + 40));
  int v6 = sub_10026BB6C(v3, v3[3]);
  v0[80] = v6;
  uint64_t v7 = *v6;
  return _swift_task_switch(sub_1006FDE30, v7, 0);
}

uint64_t sub_1006FDE30()
{
  sub_100278C8C(**(void **)(v0 + 640) + 112, v0 + 240);
  return _swift_task_switch(sub_1006FDEA4, 0, 0);
}

uint64_t sub_1006FDEA4()
{
  uint64_t v1 = *(void *)(v0 + 592);
  uint64_t v2 = *(void *)(v0 + 584);
  id v3 = *(void **)(v0 + 448);
  uint64_t v4 = *(void *)(v0 + 264);
  uint64_t v5 = *(void *)(v0 + 272);
  sub_10026BB6C((void *)(v0 + 240), v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  *(unsigned char *)(v0 + 684) = *(unsigned char *)(v1 + *(int *)(v2 + 32));
  sub_10070EE60(v1, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
  sub_10024D338(v0 + 240);
  int v6 = sub_10026BB6C(v3, v3[3]);
  *(void *)(v0 + 648) = v6;
  uint64_t v7 = *v6;
  return _swift_task_switch(sub_1006FDFA0, v7, 0);
}

uint64_t sub_1006FDFA0()
{
  sub_100278C8C(**(void **)(v0 + 648) + 112, v0 + 160);
  return _swift_task_switch(sub_1006FE014, 0, 0);
}

uint64_t sub_1006FE014()
{
  uint64_t v83 = *(void *)(v0 + 632);
  uint64_t v1 = *(void *)(v0 + 592);
  uint64_t v2 = *(void *)(v0 + 576);
  uint64_t v78 = *(void *)(v0 + 568);
  uint64_t v3 = *(void *)(v0 + 544);
  uint64_t v4 = *(void *)(v0 + 536);
  uint64_t v74 = *(void *)(v0 + 464);
  uint64_t v80 = *(void *)(v0 + 456);
  int v85 = *(_DWORD *)(v0 + 680);
  uint64_t v6 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 192);
  sub_10026BB6C((void *)(v0 + 160), v6);
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v6, v5);
  sub_100278C8C(v1 + 40, v0 + 280);
  sub_10070EE60(v1, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
  sub_10024D338(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 304);
  uint64_t v8 = *(void *)(v0 + 312);
  sub_10026BB6C((void *)(v0 + 280), v7);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  uint64_t v11 = v10;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v12(v2, v74, v4);
  v12(v78, v2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v79 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v0 + 656) = v14;
  *(void *)(v14 + 16) = v83;
  *(void *)(v14 + 24) = v80;
  long long v81 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32);
  v81(v14 + v13, v2, v4);
  uint64_t v89 = v11;
  if (v85 == 33)
  {
    uint64_t v15 = *(void *)(v0 + 632);
    uint64_t v16 = *(void **)(v0 + 608);
    uint64_t v64 = *(void *)(v0 + 528);
    uint64_t v73 = v9;
    uint64_t v75 = *(void *)(v0 + 512);
    uint64_t v65 = *(void *)(v0 + 504);
    uint64_t v17 = *(void *)(v0 + 488);
    uint64_t v68 = *(void *)(v0 + 496);
    uint64_t v70 = *(void *)(v0 + 520);
    uint64_t v86 = v12;
    uint64_t v18 = *(void **)(v0 + 456);
    uint64_t v19 = (void *)swift_allocObject();
    void v19[2] = v9;
    void v19[3] = v11;
    v19[4] = v18;
    v19[5] = v15;
    v19[6] = sub_100710654;
    v19[7] = v14;
    v19[8] = v16;
    *(void *)(v0 + 96) = sub_100710A0C;
    *(void *)(v0 + 104) = v19;
    *(void *)(v0 + 64) = _NSConcreteStackBlock;
    *(void *)(v0 + 72) = 1107296256;
    *(void *)(v0 + 80) = sub_100296520;
    *(void *)(v0 + 88) = &unk_1008E6620;
    uint64_t v20 = _Block_copy((const void *)(v0 + 64));
    swift_bridgeObjectRetain();
    swift_retain();
    id v21 = v18;
    id v22 = v16;
    id v23 = v21;
    static DispatchQoS.unspecified.getter();
    *(void *)(v0 + 416) = _swiftEmptyArrayStorage;
    sub_10000BBC0((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
    uint64_t v12 = v86;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v20);
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v65, v17);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v64, v75);
    swift_release();
    uint64_t v24 = v73;
  }
  else
  {
    id v25 = *(id *)(v0 + 456);
    uint64_t v24 = v9;
  }
  unint64_t v26 = *(void *)(v0 + 632);
  if (v26 == 6)
  {
    int v35 = *(_DWORD *)(v0 + 680);
    if (v35 == 34 || v35 == 11)
    {
      uint64_t v36 = *(void *)(v0 + 560);
      uint64_t v61 = *(void *)(v0 + 552);
      uint64_t v37 = *(void *)(v0 + 536);
      uint64_t v66 = *(void *)(v0 + 528);
      uint64_t v77 = *(void *)(v0 + 520);
      uint64_t v88 = *(void *)(v0 + 512);
      uint64_t v67 = *(void *)(v0 + 504);
      uint64_t v72 = *(void *)(v0 + 496);
      uint64_t v69 = *(void *)(v0 + 488);
      uint64_t v38 = *(void *)(v0 + 464);
      uint64_t v63 = *(void *)(v0 + 472);
      uint64_t v62 = *(void **)(v0 + 456);
      (*(void (**)(void, uint64_t))(*(void *)(v0 + 544) + 8))(*(void *)(v0 + 568), v37);
      v12(v36, v38, v37);
      uint64_t v39 = (v79 + 56) & ~v79;
      unint64_t v40 = (v39 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v24;
      *(void *)(v41 + 24) = v89;
      *(_DWORD *)(v41 + 32) = v35;
      *(void *)(v41 + 40) = v62;
      *(void *)(v41 + 48) = 6;
      v81(v41 + v39, v36, v37);
      uint64_t v42 = (void (**)(uint64_t))(v41 + v40);
      uint8_t *v42 = sub_100710654;
      v42[1] = (void (*)(uint64_t))v14;
      *(void *)(v41 + ((v40 + 23) & 0xFFFFFFFFFFFFFFF8)) = v63;
      *(void *)(v0 + 48) = sub_1007108A0;
      *(void *)(v0 + 56) = v41;
      *(void *)(v0 + 16) = _NSConcreteStackBlock;
      *(void *)(v0 + 24) = 1107296256;
      *(void *)(v0 + 32) = sub_100296520;
      *(void *)(v0 + 40) = &unk_1008E6580;
      uint64_t v43 = _Block_copy((const void *)(v0 + 16));
      id v44 = v62;
      swift_retain();
      static DispatchQoS.unspecified.getter();
      *(void *)(v0 + 400) = _swiftEmptyArrayStorage;
      sub_10000BBC0((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10000A844((uint64_t *)&unk_10096C490);
      sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v43);
      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v67, v69);
      (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v66, v88);
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v35 == 36)
      {
        if (qword_10096A190 != -1) {
          swift_once();
        }
        uint64_t v50 = type metadata accessor for Logger();
        sub_10000B47C(v50, (uint64_t)qword_10097F520);
        uint64_t v51 = Logger.logObject.getter();
        os_log_type_t v52 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v51, v52))
        {
          uint64_t v53 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v53 = 0;
          _os_log_impl((void *)&_mh_execute_header, v51, v52, "Lock device unarmed, requesting manual arm", v53, 2u);
          swift_slowDealloc();
        }

        sub_1006F76CC();
      }
      uint64_t v54 = *(void *)(v0 + 568);
      uint64_t v55 = *(void *)(v0 + 544);
      uint64_t v56 = *(void *)(v0 + 536);
      sub_1006FF274(*(void *)(v0 + 608), 6uLL, *(void **)(v0 + 456));
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
    }
  }
  else if (v26 == 4)
  {
    os_log_type_t v27 = *(void **)(v0 + 608);
    uint64_t v71 = *(void *)(v0 + 528);
    uint64_t v84 = *(void *)(v0 + 520);
    uint64_t v87 = *(void *)(v0 + 512);
    uint64_t v76 = *(void *)(v0 + 504);
    uint64_t v28 = *(void *)(v0 + 488);
    uint64_t v82 = *(void *)(v0 + 496);
    uint64_t v29 = *(void **)(v0 + 456);
    int v30 = *(_DWORD *)(v0 + 680);
    (*(void (**)(void, void))(*(void *)(v0 + 544) + 8))(*(void *)(v0 + 568), *(void *)(v0 + 536));
    sub_100278C8C(v0 + 280, v0 + 360);
    uint64_t v31 = swift_allocObject();
    *(_DWORD *)(v31 + 16) = v30;
    *(void *)(v31 + 24) = v29;
    sub_1002AF688((long long *)(v0 + 360), v31 + 32);
    *(void *)(v31 + 72) = v24;
    *(void *)(v31 + 80) = v89;
    *(void *)(v31 + 88) = sub_100710654;
    *(void *)(v31 + 96) = v14;
    *(void *)(v31 + 104) = v27;
    *(void *)(v0 + 144) = sub_1007109A0;
    *(void *)(v0 + 152) = v31;
    *(void *)(v0 + 112) = _NSConcreteStackBlock;
    *(void *)(v0 + 120) = 1107296256;
    *(void *)(v0 + 128) = sub_100296520;
    *(void *)(v0 + 136) = &unk_1008E65D0;
    uint64_t v32 = _Block_copy((const void *)(v0 + 112));
    id v33 = v27;
    id v34 = v29;
    swift_retain();
    static DispatchQoS.unspecified.getter();
    *(void *)(v0 + 408) = _swiftEmptyArrayStorage;
    sub_10000BBC0((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v32);
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v76, v28);
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v71, v87);
    swift_release();
  }
  else
  {
    uint64_t v45 = *(void *)(v0 + 608);
    uint64_t v46 = *(void *)(v0 + 568);
    uint64_t v47 = *(void *)(v0 + 544);
    uint64_t v48 = *(void *)(v0 + 536);
    unint64_t v49 = *(void **)(v0 + 456);
    swift_bridgeObjectRelease();
    sub_1006FF274(v45, v26, v49);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
  }
  uint64_t v57 = *sub_10026BB6C(*(void **)(v0 + 448), *(void *)(*(void *)(v0 + 448) + 24));
  uint64_t v58 = (void *)swift_task_alloc();
  *(void *)(v0 + 664) = v58;
  void *v58 = v0;
  v58[1] = sub_1006FEAE8;
  uint64_t v59 = *(void *)(v0 + 456);
  return sub_10070CD64(v57, 0, v59);
}

uint64_t sub_1006FEAE8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1006FEBE4, 0, 0);
}

uint64_t sub_1006FEBE4()
{
  char v1 = *(unsigned char *)(v0 + 684);
  uint64_t v2 = *(void *)(v0 + 632);
  uint64_t v3 = *(void *)(v0 + 480);
  uint64_t v4 = *(void **)(v0 + 456);
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 1, 1, v5);
  sub_100278C8C(v0 + 280, v0 + 200);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0;
  *(void *)(v6 + 24) = 0;
  *(unsigned char *)(v6 + 32) = (v1 & 1) == 0;
  *(void *)(v6 + 40) = v2;
  *(void *)(v6 + 48) = v4;
  sub_1002AF688((long long *)(v0 + 200), v6 + 56);
  id v7 = v4;
  sub_10028CAC4(v3, (uint64_t)&unk_10097F8B0, v6);
  swift_release();
  if ((v2 & 0xFFFFFFFFFFFFFFFDLL) == 8)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000B47C(v8, (uint64_t)qword_10097F520);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = *(void **)(v0 + 608);
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      unint64_t v13 = "Registration type does not have a delegate to call back";
      uint64_t v14 = v9;
      os_log_type_t v15 = v10;
      uint64_t v16 = v12;
      uint32_t v17 = 2;
LABEL_26:
      _os_log_impl((void *)&_mh_execute_header, v14, v15, v13, v16, v17);
      swift_slowDealloc();
      swift_release();

      goto LABEL_34;
    }

    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v0 + 632);
  Swift::UInt8 v19 = SFDeviceClassCodeGet();
  Swift::Int v20 = sub_1005095A0(v18);
  BOOL v21 = sub_10057C25C(8u, v20);
  swift_bridgeObjectRelease();
  if (v21)
  {
    if (SFDeviceIsRealityDevice()) {
      goto LABEL_13;
    }
  }
  else
  {
    Swift::Int v22 = sub_1005095A0(*(void *)(v0 + 632));
    BOOL v23 = sub_10057C25C(v19, v22);
    swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_13;
    }
  }
  if ((unint64_t)(*(void *)(v0 + 632) - 9) > 1)
  {
    int v24 = 0;
    goto LABEL_22;
  }
LABEL_13:
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v26 = (void *)Strong;
    unint64_t v27 = *(void *)(v0 + 632);
    if (v27 <= 9 && ((1 << v27) & 0x228) != 0)
    {
      if (qword_10096A190 != -1) {
        swift_once();
      }
      uint64_t v28 = type metadata accessor for Logger();
      sub_10000B47C(v28, (uint64_t)qword_10097F520);
      uint64_t v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v31 = 0;
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "Calling back to delegate didFailToEnableDeviceFor", v31, 2u);
        swift_slowDealloc();
      }
      uint64_t v32 = *(void *)(v0 + 608);
      uint64_t v33 = *(void *)(v0 + 456);

      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      [v26 manager:v33 didFailToEnableDeviceFor:isa error:v32];

      swift_unknownObjectRelease();
    }
    else
    {
      if (qword_10096A190 != -1) {
        swift_once();
      }
      uint64_t v43 = type metadata accessor for Logger();
      sub_10000B47C(v43, (uint64_t)qword_10097F520);
      id v44 = Logger.logObject.getter();
      os_log_type_t v45 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v46 = 0;
        _os_log_impl((void *)&_mh_execute_header, v44, v45, "Calling back to delegate didFailAuthenticationFor", v46, 2u);
        swift_slowDealloc();
      }
      uint64_t v47 = *(void *)(v0 + 608);
      uint64_t v48 = *(void *)(v0 + 456);

      Class v49 = UUID._bridgeToObjectiveC()().super.isa;
      [v26 manager:v48 didFailAuthenticationFor:v49 error:v47];
      swift_unknownObjectRelease();
    }
LABEL_33:
    swift_release();
    uint64_t v9 = *(NSObject **)(v0 + 608);
    goto LABEL_34;
  }
  int v24 = 1;
LABEL_22:
  if (qword_10096A190 != -1) {
    swift_once();
  }
  int v35 = *(void **)(v0 + 456);
  uint64_t v36 = type metadata accessor for Logger();
  sub_10000B47C(v36, (uint64_t)qword_10097F520);
  id v37 = v35;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.default.getter();
  BOOL v39 = os_log_type_enabled(v9, v38);
  uint64_t v11 = *(void **)(v0 + 608);
  unint64_t v40 = *(void **)(v0 + 456);
  if (v39)
  {
    uint64_t v41 = swift_slowAlloc();
    *(_DWORD *)uint64_t v41 = 67109376;
    *(_DWORD *)(v0 + 676) = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v41 + 8) = 1024;
    uint64_t v42 = swift_unknownObjectWeakLoadStrong();

    swift_unknownObjectRelease();
    *(_DWORD *)(v0 + 672) = v42 == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    unint64_t v13 = "Not calling back to delegate (isInitiator: %{BOOL}d, delegate is nil: %{BOOL}d)";
    uint64_t v14 = v9;
    os_log_type_t v15 = v38;
    uint64_t v16 = (uint8_t *)v41;
    uint32_t v17 = 14;
    goto LABEL_26;
  }

  swift_release();
  uint64_t v9 = *(NSObject **)(v0 + 456);
LABEL_34:

  sub_10024D338(v0 + 280);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v50 = *(uint64_t (**)(void))(v0 + 8);
  return v50();
}

void sub_1006FF274(uint64_t a1, unint64_t a2, void *a3)
{
  Swift::UInt8 v6 = SFDeviceClassCodeGet();
  Swift::Int v7 = sub_1005095A0(a2);
  BOOL v8 = sub_10057C25C(8u, v7);
  swift_bridgeObjectRelease();
  if (v8)
  {
    if (!SFDeviceIsRealityDevice()) {
      goto LABEL_11;
    }
  }
  else
  {
    Swift::Int v9 = sub_1005095A0(a2);
    BOOL v10 = sub_10057C25C(v6, v9);
    swift_bridgeObjectRelease();
    if (!v10) {
      goto LABEL_11;
    }
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = (void *)Strong;
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000B47C(v13, (uint64_t)qword_10097F520);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Calling back to delegate", v16, 2u);
      swift_slowDealloc();
    }

    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    [v12 manager:a3 didFailAuthenticationFor:isa error:a1];
    swift_unknownObjectRelease();
    goto LABEL_16;
  }
LABEL_11:
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_10000B47C(v17, (uint64_t)qword_10097F520);
  Class isa = a3;
  unint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 67109376;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 8) = 1024;
    swift_unknownObjectWeakLoadStrong();

    swift_unknownObjectRelease();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Not calling back to delegate (isInitiator: %{BOOL}d, delegate is nil: %{BOOL}d)", (uint8_t *)v20, 0xEu);
    swift_slowDealloc();

    return;
  }

LABEL_16:
}

uint64_t sub_1006FF5AC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  os_log_type_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v16 = sub_100508E74(a4);
    UUID.init()();
    sub_1006DDD14(v16, a1, a2, (uint64_t)v15);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_10000B47C(v17, (uint64_t)qword_10097F520);
    unint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Got notEnabled but coudln't determine who to disable pairing with", v20, 2u);
      swift_slowDealloc();
    }
  }
  return a5(a7);
}

uint64_t sub_1006FF78C(int a1, uint64_t a2, uint64_t a3, Swift::Int a4, Swift::Int a5, uint64_t (*a6)(uint64_t), uint64_t a7, uint64_t a8)
{
  Swift::Int v19 = a4;
  uint64_t v20 = a6;
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 22)
  {
    sub_1006E7B5C();
    sub_100278C8C(a3, (uint64_t)v22);
    uint64_t v17 = a2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_previousUnlockClassCLockDevice;
    swift_beginAccess();
    sub_10026B410((uint64_t)v22, v17, &qword_10097BB50);
    swift_endAccess();
  }
  if (a5)
  {
    if (a1 == 24 || a1 == 9)
    {
      if (*(void *)(*(void *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator)
                     + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner))
      {
        swift_beginAccess();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_100596448(&v21, v19, a5);
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
      }
    }
    else if (*(void *)(*(void *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator) {
                        + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner))
    }
    {
      swift_beginAccess();
      swift_retain();
      swift_retain();
      sub_1005A1914(v19, a5);
      swift_endAccess();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  static Date.distantPast.getter();
  sub_1006D5DAC((uint64_t)v16);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return v20(a8);
}

void sub_1006FFA0C(uint64_t a1, unint64_t a2, int a3, uint64_t a4, unint64_t a5, uint64_t a6, void (*a7)(id), uint64_t a8)
{
  v74[1] = a8;
  uint64_t v75 = a7;
  uint64_t v81 = type metadata accessor for UUID();
  uint64_t v14 = *(void (***)(char *, uint64_t))(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v80 = (char *)v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v16 - 8);
  unint64_t v18 = (char *)v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Int v19 = &qword_10096A000;
  if (!a2)
  {
    char v24 = sub_1005097B4(a5);
    sub_1006CCB14(v24 & 1);
    int v25 = 1;
    goto LABEL_32;
  }
  if (a3 == 34)
  {
    uint64_t v79 = a6;
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_10000B47C(v20, (uint64_t)qword_10097F520);
    swift_bridgeObjectRetain_n();
    Swift::Int v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      BOOL v23 = (uint8_t *)swift_slowAlloc();
      v86[0] = swift_slowAlloc();
      uint64_t v78 = v14;
      *(_DWORD *)BOOL v23 = 136315138;
      *(void *)&long long v77 = v23 + 4;
      swift_bridgeObjectRetain();
      v83[0] = sub_100254634(a1, a2, v86);
      Swift::Int v19 = &qword_10096A000;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Clearing Last Registration Date for %s", v23, 0xCu);
      swift_arrayDestroy();
      uint64_t v14 = v78;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    a6 = v79;
    sub_1006F9A5C(a1, a2);
  }
  char v26 = sub_1005097B4(a5);
  char v27 = sub_1007004B0(v26 & 1, a1, a2, 1);
  if (SFDeviceClassCodeGet() == 1)
  {
    if ((v27 & 1) == 0)
    {
      if (v19[50] != -1) {
        swift_once();
      }
      uint64_t v28 = type metadata accessor for Logger();
      sub_10000B47C(v28, (uint64_t)qword_10097F520);
      uint64_t v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v31 = 0;
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "Registration not necessary, requesting manual arm", v31, 2u);
        swift_slowDealloc();
      }

      sub_1006F76CC();
      int v25 = 1;
      goto LABEL_32;
    }
  }
  else if ((v27 & 1) == 0)
  {
    int v25 = 1;
    goto LABEL_32;
  }
  if (v19[50] != -1) {
    swift_once();
  }
  uint64_t v32 = type metadata accessor for Logger();
  uint64_t v33 = sub_10000B47C(v32, (uint64_t)qword_10097F520);
  id v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Delaying callback", v36, 2u);
    swift_slowDealloc();
  }

  uint64_t v37 = v81;
  ((void (*)(char *, uint64_t, uint64_t))v14[2])(v18, a6, v81);
  ((void (*)(char *, void, uint64_t, uint64_t))v14[7])(v18, 0, 1, v37);
  uint64_t v38 = a4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI;
  swift_beginAccess();
  sub_10026B410((uint64_t)v18, v38, &qword_100974EA0);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v39 = swift_bridgeObjectRetain();
  unint64_t v40 = sub_10045F2A8(v39);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v41 = swift_bridgeObjectRetain();
  uint64_t v42 = sub_10045F2E4(v41);
  swift_bridgeObjectRelease();
  v86[0] = (uint64_t)v40;
  sub_1003D5E88((uint64_t)v42);
  uint64_t v44 = *(void *)(v86[0] + 16);
  if (v44)
  {
    v74[0] = v86[0];
    uint64_t v45 = v86[0] + 32;
    uint64_t v78 = v14 + 1;
    *(void *)&long long v43 = 136315138;
    long long v77 = v43;
    uint64_t v76 = (char *)&type metadata for Any + 8;
    uint64_t v79 = v33;
    uint64_t v46 = v80;
    uint64_t v47 = v81;
    do
    {
      sub_100278C8C(v45, (uint64_t)v86);
      uint64_t v50 = v87;
      uint64_t v51 = v88;
      sub_10026BB6C(v86, v87);
      if ((*(uint64_t (**)(uint64_t))(*(void *)(v51 + 8) + 40))(v50) == 8)
      {
        sub_100278C8C((uint64_t)v86, (uint64_t)v83);
        uint64_t v52 = Logger.logObject.getter();
        os_log_type_t v53 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v52, v53))
        {
          uint64_t v54 = swift_slowAlloc();
          v82[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v54 = v77;
          swift_beginAccess();
          uint64_t v56 = v84;
          uint64_t v55 = v85;
          sub_10026BB6C(v83, v84);
          (*(void (**)(uint64_t))(*(void *)(v55 + 8) + 32))(v56);
          sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter();
          unint64_t v59 = v58;
          (*v78)(v46, v47);
          *(void *)(v54 + 4) = sub_100254634(v57, v59, v82);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v52, v53, "Setting requestArmingUI to true for pairingSession %s", (uint8_t *)v54, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        swift_beginAccess();
        uint64_t v48 = v84;
        uint64_t v49 = v85;
        sub_1002AF758((uint64_t)v83, v84);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 24))(1, v48, v49);
        swift_endAccess();
        sub_10024D338((uint64_t)v83);
      }
      sub_10024D338((uint64_t)v86);
      v45 += 40;
      --v44;
    }
    while (v44);
    swift_bridgeObjectRelease();
    int v25 = 0;
    Swift::Int v19 = &qword_10096A000;
  }
  else
  {
    swift_bridgeObjectRelease();
    int v25 = 0;
  }
LABEL_32:
  if (v19[50] != -1) {
    swift_once();
  }
  uint64_t v60 = type metadata accessor for Logger();
  sub_10000B47C(v60, (uint64_t)qword_10097F520);
  uint64_t v61 = Logger.logObject.getter();
  os_log_type_t v62 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v61, v62))
  {
    uint64_t v63 = swift_slowAlloc();
    LODWORD(v81) = v25;
    uint64_t v64 = (uint8_t *)v63;
    v86[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v64 = 136315138;
    id v65 = (id)SFAuthenticationErrorToString();
    uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v68 = v67;

    v83[0] = sub_100254634(v66, v68, v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v61, v62, "Error occurred during or after lock was supposed to consume auth token, reregistering to sync secrets and reporting error to client as %s", v64, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    int v25 = v81;
    swift_slowDealloc();
  }

  id v69 = sub_10070E650(0xBu, 0, 0xE000000000000000);
  uint64_t v70 = v69;
  if (v25)
  {
    v75(v69);
  }
  else
  {
    uint64_t v71 = Logger.logObject.getter();
    int v72 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v71, (os_log_type_t)v72))
    {
      uint64_t v73 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v73 = 0;
      _os_log_impl((void *)&_mh_execute_header, v71, (os_log_type_t)v72, "Not calling back to delegate until after manual arm requested", v73, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1007004B0(int a1, uint64_t a2, unint64_t a3, int a4)
{
  void (*v25)(long long *__return_ptr, uint64_t, unint64_t);
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  unsigned int v36;
  uint64_t v37;
  void *v38;
  id v39;
  NSString v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t result;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  os_log_type_t v74;
  uint8_t *v75;
  id v76;
  char v77;
  char *v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  os_log_type_t v87;
  uint8_t *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  id v93;
  void (*v94)(char *, uint64_t);
  uint64_t v95;
  uint64_t v96;
  unsigned int (*v97)(char *, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  os_log_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  long long v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112[3];
  uint64_t v113;
  uint64_t v114;

  uint64_t v5 = v4;
  LODWORD(v105) = a4;
  LODWORD(v104) = a1;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v102 = *(void *)(v8 - 8);
  os_log_type_t v103 = v8;
  __chkstk_darwin(v8);
  uint64_t v101 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v94 - v15;
  __chkstk_darwin(v14);
  unint64_t v18 = (char *)&v94 - v17;
  uint64_t v19 = type metadata accessor for DispatchPredicate();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  os_log_type_t v22 = (void (**)(char *, uint64_t))((char *)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  BOOL v23 = *(void **)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  void *v22 = v23;
  (*(void (**)(void *, void, uint64_t))(v20 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v19);
  id v24 = v23;
  LOBYTE(v23) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v20 + 8))(v22, v19);
  if ((v23 & 1) == 0)
  {
    __break(1u);
    goto LABEL_79;
  }
  int v25 = *(void (**)(long long *__return_ptr, uint64_t, unint64_t))&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsDeviceForUniqueID];
  swift_retain();
  v25(&v109, a2, a3);
  swift_release();
  if (!v110)
  {
    sub_10000A7E8((uint64_t)&v109, &qword_10097BB50);
    if (qword_10096A190 == -1)
    {
LABEL_10:
      os_log_type_t v30 = type metadata accessor for Logger();
      sub_10000B47C(v30, (uint64_t)qword_10097F520);
      swift_bridgeObjectRetain_n();
      uint64_t v31 = Logger.logObject.getter();
      uint64_t v32 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        v112[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v33 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)&unint64_t v109 = sub_100254634(a2, a3, v112);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Could not find idsDevice %s for registration", v33, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      return 0;
    }
LABEL_79:
    swift_once();
    goto LABEL_10;
  }
  sub_1002AF688(&v109, (uint64_t)v112);
  if (sub_1006F9214(a2, a3))
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    char v26 = type metadata accessor for Logger();
    sub_10000B47C(v26, (uint64_t)qword_10097F520);
    swift_bridgeObjectRetain_n();
    char v27 = Logger.logObject.getter();
    uint64_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(void *)&unint64_t v109 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v108 = sub_100254634(a2, a3, (uint64_t *)&v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Already in a registration session for (%s), not attempting again", v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    goto LABEL_54;
  }
  sub_1006D4404(a2, a3, (uint64_t)v18);
  id v34 = type metadata accessor for Date();
  uint64_t v100 = *(void *)(v34 - 8);
  os_log_type_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48);
  uint64_t v36 = v35(v18, 1, v34);
  sub_10000A7E8((uint64_t)v18, (uint64_t *)&unk_100975040);
  if (v36 != 1)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v52 = type metadata accessor for Logger();
    sub_10000B47C(v52, (uint64_t)qword_10097F520);
    swift_bridgeObjectRetain_n();
    os_log_type_t v53 = Logger.logObject.getter();
    uint64_t v54 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      *(void *)&unint64_t v109 = swift_slowAlloc();
      *(_DWORD *)uint64_t v55 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v108 = sub_100254634(a2, a3, (uint64_t *)&v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "Already Registered Device %s, not reregistering", v55, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
LABEL_32:

LABEL_76:
      sub_10024D338((uint64_t)v112);
      return 0;
    }
LABEL_31:
    swift_bridgeObjectRelease_n();
    goto LABEL_32;
  }
  uint64_t v97 = v35;
  uint64_t v37 = *(void *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationManager];
  if (!v37)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v56 = type metadata accessor for Logger();
    sub_10000B47C(v56, (uint64_t)qword_10097F520);
    uint64_t v57 = Logger.logObject.getter();
    unint64_t v58 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v57, v58))
    {
      unint64_t v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v59 = 0;
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "No registration manager, not reregistering", v59, 2u);
      swift_slowDealloc();
    }
    goto LABEL_75;
  }
  uint64_t v95 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationManager;
  uint64_t v96 = v34;
  uint64_t v38 = self;
  swift_retain();
  uint64_t v39 = [v38 standardUserDefaults];
  unint64_t v40 = String._bridgeToObjectiveC()();
  LODWORD(v98) = [v39 BOOLForKey:v40];

  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v41 = type metadata accessor for Logger();
  uint64_t v99 = sub_10000B47C(v41, (uint64_t)qword_10097F520);
  uint64_t v42 = Logger.logObject.getter();
  long long v43 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v44 = 67109120;
    LODWORD(v109) = v98;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "mockDeviceNotUsed: %{BOOL}d", v44, 8u);
    swift_slowDealloc();
  }

  if (v98) {
    uint64_t v45 = 0;
  }
  else {
    uint64_t v45 = 7;
  }
  swift_beginAccess();
  uint64_t v46 = *(void *)(v37 + 16);
  uint64_t v47 = v96;
  if (*(void *)(v46 + 16))
  {
    uint64_t v98 = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_1005838BC(a2, a3);
    uint64_t v49 = v100;
    if (v50)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v16, *(void *)(v46 + 56) + *(void *)(v100 + 72) * v48, v47);
      uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56);
      v51(v16, 0, 1, v47);
    }
    else
    {
      uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v100 + 56);
      v51(v16, 1, 1, v47);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v97(v16, 1, v47) == 1) {
      goto LABEL_40;
    }
    long long v77 = sub_1007041C8(v98);
    uint64_t v94 = *(void (**)(char *, uint64_t))(v100 + 8);
    v94(v16, v47);
    if (v77 & 1) != 0 || (v105) {
      goto LABEL_41;
    }
    uint64_t v105 = v37;
    swift_bridgeObjectRetain_n();
    uint64_t v78 = v5;
    os_log_type_t v53 = Logger.logObject.getter();
    uint64_t v79 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v53, (os_log_type_t)v79))
    {
      LODWORD(v103) = v79;
      os_log_type_t v104 = v53;
      uint64_t v80 = 0x676E697373696DLL;
      uint64_t v81 = swift_slowAlloc();
      uint64_t v102 = swift_slowAlloc();
      uint64_t v107 = v102;
      *(_DWORD *)uint64_t v81 = 136315906;
      uint64_t v82 = *(void *)&v5[v95];
      uint64_t v101 = v78;
      if (v82)
      {
        swift_beginAccess();
        uint64_t v83 = *(void *)(v82 + 16);
        if (!*(void *)(v83 + 16))
        {
          v51(v13, 1, 1, v96);
LABEL_70:
          sub_10000A7E8((uint64_t)v13, (uint64_t *)&unk_100975040);
          uint64_t v89 = 0xE700000000000000;
          unint64_t v91 = v98;
          uint64_t v80 = 0x676E697373696DLL;
LABEL_73:
          uint64_t v106 = sub_100254634(v80, v89, &v107);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v93 = v101;

          swift_bridgeObjectRelease_n();
          *(_WORD *)(v81 + 12) = 2048;
          uint64_t v106 = v91;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v81 + 22) = 1024;
          LODWORD(v106) = 0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v81 + 28) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v106 = sub_100254634(a2, a3, &v107);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          uint64_t v57 = v104;
          _os_log_impl((void *)&_mh_execute_header, v104, (os_log_type_t)v103, "Device has not been used since  %s which is older than %ld ago and requestArmingUI is %{BOOL}d, not reregistering %s", (uint8_t *)v81, 0x26u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
LABEL_74:
          swift_release();
LABEL_75:

          goto LABEL_76;
        }
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v84 = sub_1005838BC(a2, a3);
        if (v85)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v13, *(void *)(v83 + 56) + *(void *)(v100 + 72) * v84, v96);
          uint64_t v86 = 0;
        }
        else
        {
          uint64_t v86 = 1;
        }
        uint64_t v90 = v96;
        v51(v13, v86, 1, v96);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        if (v97(v13, 1, v90) == 1) {
          goto LABEL_70;
        }
        uint64_t v80 = Date.description.getter();
        uint64_t v89 = v92;
        v94(v13, v90);
      }
      else
      {
        uint64_t v89 = 0xE700000000000000;
      }
      unint64_t v91 = v98;
      goto LABEL_73;
    }
    swift_release();

    goto LABEL_31;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v100 + 56))(v16, 1, 1, v96);
LABEL_40:
  sub_10000A7E8((uint64_t)v16, (uint64_t *)&unk_100975040);
LABEL_41:
  swift_bridgeObjectRetain_n();
  uint64_t v60 = Logger.logObject.getter();
  uint64_t v61 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v60, v61))
  {
    os_log_type_t v62 = (uint8_t *)swift_slowAlloc();
    *(void *)&unint64_t v109 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v62 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v107 = sub_100254634(a2, a3, (uint64_t *)&v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v60, v61, "Queuing Registration for device: %s", v62, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v63 = v113;
  uint64_t v64 = v114;
  sub_10026BB6C(v112, v113);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 8))(v63, v64);
  if (v66)
  {
    sub_1006EE6C0(result, v66);
    swift_bridgeObjectRelease();
    if ((v104 & 1) == 0)
    {
      unint64_t v67 = Logger.logObject.getter();
      unint64_t v68 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v67, v68))
      {
        id v69 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v69 = 0;
        _os_log_impl((void *)&_mh_execute_header, v67, v68, "Starting PairingLockSession with type .registration", v69, 2u);
        swift_slowDealloc();
      }

      uint64_t v70 = v101;
      UUID.init()();
      sub_1006DCBA4((uint64_t)v70, (uint64_t)v112, 0, 0xE000000000000000, 8, &v109);
      (*(void (**)(id, uint64_t))(v102 + 8))(v70, v103);
      uint64_t v71 = v110;
      int v72 = v111;
      sub_1002AF758((uint64_t)&v109, v110);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v72 + 8) + 24))(v105 & 1, v71);
      sub_10026BB6C(&v109, v110);
      sub_10035BF70();
LABEL_53:
      swift_release();
      sub_10024D338((uint64_t)&v109);
LABEL_54:
      sub_10024D338((uint64_t)v112);
      return 1;
    }
    uint64_t v73 = [objc_allocWithZone((Class)SDAuthenticationPairingRequest) init];
    uint64_t v57 = Logger.logObject.getter();
    if (v73)
    {
      uint64_t v74 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v57, v74))
      {
        uint64_t v75 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v75 = 0;
        _os_log_impl((void *)&_mh_execute_header, v57, v74, "Starting PairingKeySession with type .registration", v75, 2u);
        swift_slowDealloc();
      }

      uint64_t v76 = v101;
      UUID.init()();
      sub_1006EA524((uint64_t)v76, (uint64_t)v112, 8, v105 & 1, &v109);
      (*(void (**)(id, uint64_t))(v102 + 8))(v76, v103);
      sub_10026BB6C(&v109, v110);
      sub_1005C2108(v73);

      goto LABEL_53;
    }
    uint64_t v87 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v57, v87))
    {
      uint64_t v88 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v88 = 0;
      _os_log_impl((void *)&_mh_execute_header, v57, v87, "Could not create pairing request, this shouldn't happen", v88, 2u);
      swift_slowDealloc();
    }
    goto LABEL_74;
  }
  __break(1u);
  return result;
}

uint64_t sub_100701764(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 112) = a6;
  *(void *)(v7 + 120) = a7;
  *(void *)(v7 + 104) = a5;
  *(unsigned char *)(v7 + 168) = a4;
  uint64_t v8 = type metadata accessor for ContinuousClock();
  *(void *)(v7 + 128) = v8;
  *(void *)(v7 + 136) = *(void *)(v8 - 8);
  *(void *)(v7 + 144) = swift_task_alloc();
  return _swift_task_switch(sub_10070182C, 0, 0);
}

uint64_t sub_10070182C()
{
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097F520);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134217984;
    *(void *)(v0 + 96) = 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Waiting for %ld seconds before disconnecting", v4, 0xCu);
    swift_slowDealloc();
  }

  ContinuousClock.init()();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1007019E4;
  return v7(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_1007019E4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[17] + 8))(v2[18], v2[16]);
  if (v0) {
    os_log_type_t v3 = sub_100701DEC;
  }
  else {
    os_log_type_t v3 = sub_100701B4C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100701B4C()
{
  unint64_t v1 = *(void *)(v0 + 104);
  if (*(unsigned char *)(v0 + 168) == 1)
  {
    if (v1 > 0xE || ((1 << v1) & 0x658E) == 0) {
      goto LABEL_18;
    }
    uint64_t v3 = v0 + 56;
    uint64_t v4 = *(void *)(v0 + 160);
    uint64_t v5 = *(void *)(v0 + 120);
    uint64_t v6 = *(void *)(*(void *)(v0 + 112) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
    char v7 = sub_100508B74(v1);
    sub_100278C8C(v5, v0 + 56);
    uint64_t v8 = sub_1005EA4B4(v7, v0 + 56);
    uint64_t v10 = v9;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v10 + 56))(ObjectType, v10);
    uint64_t v12 = *(os_unfair_lock_s **)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_transportLock);
    uint64_t v13 = (void *)swift_task_alloc();
    void v13[2] = v8;
    v13[3] = v10;
    v13[4] = v0 + 56;
    void v13[5] = v6;
    uint64_t v14 = swift_task_alloc();
    *(void *)(v14 + 16) = sub_10045AFA8;
    *(void *)(v14 + 24) = v13;
    uint64_t v15 = v12 + 4;
    os_unfair_lock_lock(v12 + 4);
    sub_10030F73C(v16);
  }
  else
  {
    if (v1 <= 0xE && ((1 << v1) & 0x658E) != 0) {
      goto LABEL_18;
    }
    uint64_t v3 = v0 + 16;
    uint64_t v4 = *(void *)(v0 + 160);
    uint64_t v19 = *(void *)(v0 + 120);
    uint64_t v20 = *(void *)(*(void *)(v0 + 112)
                    + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
    char v21 = sub_100508B74(v1);
    sub_100278C8C(v19, v0 + 16);
    uint64_t v22 = sub_1005EA4B4(v21, v0 + 16);
    uint64_t v24 = v23;
    uint64_t v25 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v24 + 56))(v25, v24);
    char v26 = *(os_unfair_lock_s **)(v20 + OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_transportLock);
    char v27 = (void *)swift_task_alloc();
    void v27[2] = v22;
    v27[3] = v24;
    v27[4] = v0 + 16;
    v27[5] = v20;
    uint64_t v28 = swift_task_alloc();
    *(void *)(v28 + 16) = sub_10045AFA8;
    *(void *)(v28 + 24) = v27;
    uint64_t v15 = v26 + 4;
    os_unfair_lock_lock(v26 + 4);
    sub_10030F73C(v29);
  }
  os_unfair_lock_unlock(v15);
  if (v4)
  {
    return swift_task_dealloc();
  }
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_10000A7E8(v3, &qword_10097BB50);
LABEL_18:
  swift_task_dealloc();
  os_log_type_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_100701DEC()
{
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100701E50(void *a1, void *a2)
{
  return sub_100701E6C(a1, a2) & 1;
}

uint64_t sub_100701E6C(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v17 - v9;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  sub_10026BB6C(a1, v11);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v12 + 8) + 8) + 32))(v11);
  uint64_t v13 = a2[3];
  uint64_t v14 = a2[4];
  sub_10026BB6C(a2, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 32))(v13, v14);
  LOBYTE(a1) = static UUID.== infix(_:_:)();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return a1 & 1;
}

uint64_t *sub_100702064(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_1007021DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_1007022AC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_1007023D4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_100702560(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_100702688(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100702814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100702828);
}

uint64_t sub_100702828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1007028FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100702910);
}

uint64_t sub_100702910(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for RegistrationState(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10097F6E0);
}

void sub_1007029F0()
{
  sub_10062BD0C(319, (unint64_t *)&qword_100973960, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_100702AA0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v15 = a3[6];
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (char *)a2 + v15;
    if (v12((char *)a2 + v15, 1, v10))
    {
      uint64_t v18 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v17, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
    }
    uint64_t v19 = a3[7];
    uint64_t v20 = (char *)v4 + v19;
    char v21 = (char *)a2 + v19;
    if (v12((char *)a2 + v19, 1, v10))
    {
      uint64_t v22 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v20, v21, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
    }
    uint64_t v23 = a3[8];
    uint64_t v24 = (char *)v4 + v23;
    uint64_t v25 = (char *)a2 + v23;
    if (v12((char *)a2 + v23, 1, v10))
    {
      uint64_t v26 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v24, v25, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v24, 0, 1, v10);
    }
    uint64_t v27 = a3[10];
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)v4 + v27) = *(uint64_t *)((char *)a2 + v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100702E10(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = a1 + a2[6];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v9 = a1 + a2[7];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = a1 + a2[8];
  if (!v7(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

unsigned char *sub_100702FC0(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  if (v11(&a2[v13], 1, v9))
  {
    uint64_t v16 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v14, v15, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  if (v11(&a2[v17], 1, v9))
  {
    uint64_t v20 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v18, v19, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
  }
  uint64_t v21 = a3[8];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  if (v11(&a2[v21], 1, v9))
  {
    uint64_t v24 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v22, v23, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
  }
  uint64_t v25 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v25] = *(void *)&a2[v25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *sub_1007032E0(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = a3[7];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  int v24 = v11(&a1[v21], 1, v9);
  int v25 = v11(v23, 1, v9);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v22, v23, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v25)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v22, v9);
LABEL_18:
    uint64_t v26 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v22, v23, v9);
LABEL_19:
  uint64_t v27 = a3[8];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  int v30 = v11(&a1[v27], 1, v9);
  int v31 = v11(v29, 1, v9);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v28, v29, v9);
      goto LABEL_25;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v28, v9);
    goto LABEL_24;
  }
  if (v31)
  {
LABEL_24:
    uint64_t v32 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v28, v29, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v9);
LABEL_25:
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *sub_100703794(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  if (v11(&a2[v13], 1, v9))
  {
    uint64_t v16 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[7];
  int v18 = &a1[v17];
  int v19 = &a2[v17];
  if (v11(&a2[v17], 1, v9))
  {
    uint64_t v20 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v18, v19, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
  }
  uint64_t v21 = a3[8];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  if (v11(&a2[v21], 1, v9))
  {
    uint64_t v24 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v22, v23, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
  }
  uint64_t v25 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v25] = *(void *)&a2[v25];
  return a1;
}

unsigned char *sub_100703AA8(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v16, v17, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = a3[7];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  int v24 = v11(&a1[v21], 1, v9);
  int v25 = v11(v23, 1, v9);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v22, v23, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v25)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v22, v9);
LABEL_18:
    uint64_t v26 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v22, v23, v9);
LABEL_19:
  uint64_t v27 = a3[8];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  int v30 = v11(&a1[v27], 1, v9);
  int v31 = v11(v29, 1, v9);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v28, v29, v9);
      goto LABEL_25;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v28, v9);
    goto LABEL_24;
  }
  if (v31)
  {
LABEL_24:
    uint64_t v32 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v28, v29, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v9);
LABEL_25:
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100703F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100703F60);
}

uint64_t sub_100703F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_100704028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10070403C);
}

uint64_t sub_10070403C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
  return result;
}

void sub_100704100()
{
  sub_10062BD0C(319, (unint64_t *)&qword_100973960, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1007041C8(uint64_t a1)
{
  uint64_t v31 = a1;
  uint64_t v1 = type metadata accessor for Calendar.Component();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v28 = (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v27 - v8;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v27 = (char *)&v27 - v16;
  __chkstk_darwin(v15);
  int v18 = (char *)&v27 - v17;
  uint64_t v19 = type metadata accessor for Calendar();
  uint64_t v29 = *(void *)(v19 - 8);
  uint64_t v30 = v19;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  Date.init()();
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for Calendar.Component.day(_:), v1);
  if (v31 == 0x8000000000000000)
  {
    __break(1u);
  }
  else
  {
    Calendar.date(byAdding:value:to:wrappingComponents:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    uint64_t v23 = v28;
    sub_10024A330((uint64_t)v9, v28, (uint64_t *)&unk_100975040);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v18, v10);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v23, 1, v10) == 1)
    {
      int v24 = v27;
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v27, v14, v10);
      sub_10000A7E8(v23, (uint64_t *)&unk_100975040);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      int v24 = v27;
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v27, v23, v10);
    }
    sub_10000BBC0((unint64_t *)&unk_100974490, (void (*)(uint64_t))&type metadata accessor for Date);
    char v25 = dispatch thunk of static Comparable.< infix(_:_:)();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v11 + 8);
    v26(v24, v10);
    sub_10000A7E8((uint64_t)v9, (uint64_t *)&unk_100975040);
    v26(v18, v10);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v30);
    return (v25 & 1) == 0;
  }
  return result;
}

void sub_100704628(uint64_t a1, void *a2, char a3, uint64_t a4)
{
  uint64_t v8 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)type metadata accessor for UUID();
  uint64_t v12 = *(v11 - 1);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v57 - v16;
  if ((unint64_t)(a1 - 9) <= 5
    && (id v18 = [a2 uniqueIDOverride]) != 0)
  {
    uint64_t v19 = v18;
    uint64_t v62 = v12;
    uint64_t v63 = a1;
    uint64_t v61 = a4;
    id v64 = v11;
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v22 = v21;

    if (qword_100969D50 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1003B5358(3, a3 & 1, v20, v22, 0, 0);
    int v59 = a3 & 1;
    swift_bridgeObjectRelease();
    uint64_t v32 = (uint64_t)v17;
    uint64_t v33 = UUID.init()();
    uint64_t v34 = __chkstk_darwin(v33);
    uint64_t v60 = v31;
    v57[-4] = v31;
    v57[-3] = v20;
    v57[-2] = v22;
    v57[-1] = v17;
    __chkstk_darwin(v34);
    v57[-2] = sub_1003D1EE8;
    v57[-1] = v35;
    uint64_t v37 = v36 + 4;
    os_unfair_lock_lock(v36 + 4);
    sub_10030F73C(v38);
    os_unfair_lock_unlock(v37);
    swift_bridgeObjectRelease();
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v40 = type metadata accessor for Logger();
    sub_10000B47C(v40, (uint64_t)qword_10097F520);
    uint64_t v41 = v62;
    id v42 = v64;
    (*(void (**)(char *, char *))(v62 + 16))(v15, v17);
    long long v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      v69[0] = v58;
      *(_DWORD *)uint64_t v45 = 136315138;
      v57[1] = v45 + 4;
      sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&long long v66 = sub_100254634(v46, v47, v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v48 = *(void (**)(char *, id))(v41 + 8);
      v48(v15, v64);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Starting executor for sessionID %s", v45, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v49 = v48;
      id v50 = v64;
      swift_slowDealloc();
    }
    else
    {
      uint64_t v49 = *(void (**)(char *, id))(v41 + 8);
      uint64_t v51 = v15;
      id v50 = v42;
      v49(v51, v42);
    }

    uint64_t v67 = sub_10000B740(0, &qword_10097BB60);
    unint64_t v68 = &off_1008E2510;
    *(void *)&long long v66 = a2;
    id v52 = objc_allocWithZone((Class)SFAuthenticationOptions);
    id v53 = a2;
    id v54 = [v52 init];
    v65[3] = sub_10000B740(0, &qword_10097F7D0);
    v65[4] = &off_1008DE258;
    v65[0] = v54;
    sub_1006DC7AC(v32, (uint64_t)&v66, v63, v59, (uint64_t)v65, (uint64_t)v69);
    sub_10000A7E8((uint64_t)v65, &qword_10097F7D8);
    sub_10024D338((uint64_t)&v66);
    uint64_t v55 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v10, 1, 1, v55);
    sub_100278C8C((uint64_t)v69, (uint64_t)&v66);
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = 0;
    *(void *)(v56 + 24) = 0;
    sub_1002AF688(&v66, v56 + 32);
    sub_10028CFA8((uint64_t)v10, (uint64_t)&unk_10097FAB8, v56);
    swift_release();
    swift_release();
    sub_10024D338((uint64_t)v69);
    v49((char *)v32, v50);
  }
  else
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_10000B47C(v23, (uint64_t)qword_10097F520);
    id v64 = a2;
    int v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = (void *)swift_slowAlloc();
      v69[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136315394;
      uint64_t v28 = sub_10050938C();
      *(void *)&long long v66 = sub_100254634(v28, v29, v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2112;
      *(void *)&long long v66 = v64;
      id v30 = v64;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v27 = v64;

      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Skipping registration for %s with %@ as feature is not enabled or no remoteDeviceID", (uint8_t *)v26, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      id v39 = v64;
    }
  }
}

uint64_t sub_1007052E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportsReady) = 1;
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000B47C(v8, (uint64_t)qword_10097F520);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "All transports are ready", v11, 2u);
    swift_slowDealloc();
  }

  return sub_1006E5BC0();
}

void sub_1007054C8(uint64_t a1, void *a2, char a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(void **)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  id v15 = v14;
  char v16 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if (v16)
  {
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v17 = type metadata accessor for Logger();
  sub_10000B47C(v17, (uint64_t)qword_10097F520);
  id v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v24 = v5;
    uint64_t v25 = a1;
    uint64_t v27 = v21;
    *(_DWORD *)uint64_t v20 = 136315138;
    unint64_t v22 = sub_100509B38(a3);
    uint64_t v26 = sub_100254634(v22, v23, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Handling: %s", v20, 0xCu);
    swift_arrayDestroy();
    a1 = v25;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  switch(a3)
  {
    case 1:
      sub_1006F4E6C(a1, a2);
      break;
    case 2:
      sub_1006F648C(a1, a2);
      break;
    case 3:
      sub_1006ED4D8(a1, (unint64_t)a2, a4);
      break;
    case 4:
      sub_1006EEB94(a1, (unint64_t)a2, a4);
      break;
    case 5:
      sub_1006F033C(a1, (unint64_t)a2, (uint64_t)a4, (Class *)off_1008C68E8, (uint64_t)&unk_1008E6860, (uint64_t)&unk_10097F930, &OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions, (void (*)(long long *, long long *))sub_1002AF688, (void (*)(Class *))sub_10035ED64, &qword_10097F8F0, "Failed to unwrap SDAuthenticationPairingCreateRecord (data: %s)");
      break;
    case 6:
      sub_1006F033C(a1, (unint64_t)a2, (uint64_t)a4, (Class *)off_1008C68F0, (uint64_t)&unk_1008E6838, (uint64_t)&unk_10097F920, &OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions, (void (*)(long long *, long long *))sub_1002AF688, (void (*)(Class *))sub_1005C759C, &qword_10097F8C8, "Failed to unwrap SDAuthenticationPairingCreateSecret (data: %s)");
      break;
    case 7:
      sub_1006F59D8(a1, a2);
      break;
    case 8:
      sub_1006F0F20(a1, (unint64_t)a2, (uint64_t)a4);
      break;
    case 9:
      sub_1006EA8B0(a1, (unint64_t)a2, (uint64_t)a4);
      break;
    case 10:
      sub_1006F2EF0(a1, (unint64_t)a2, (uint64_t)a4);
      break;
    case 11:
      sub_1006F37F0(a1, (unint64_t)a2, (uint64_t)a4);
      break;
    default:
      sub_1006F4220(a1, (unint64_t)a2, a4);
      break;
  }
}

void sub_100705990(unsigned int a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t v7 = v6;
  uint64_t v85 = a2;
  uint64_t v86 = a3;
  unsigned int v84 = a1;
  uint64_t v11 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v83 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v82 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchPredicate();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  os_log_type_t v19 = (char **)((char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = *(void **)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *os_log_type_t v19 = v20;
  (*(void (**)(void *, void, uint64_t))(v17 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v16);
  id v21 = v20;
  LOBYTE(v20) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v17 + 8))(v19, v16);
  if (v20)
  {
    switch(a6)
    {
      case 1:
        id v25 = objc_allocWithZone((Class)SDAuthenticationResponse);
        sub_10025ADCC(a4, a5);
        Class isa = Data._bridgeToObjectiveC()().super.isa;
        sub_100250CC4(a4, a5);
        id v24 = [v25 initWithData:isa];

        if (v24) {
          goto LABEL_28;
        }
        goto LABEL_31;
      case 2:
        id v27 = objc_allocWithZone((Class)SDAuthenticationConfirmation);
        sub_10025ADCC(a4, a5);
        Class v28 = Data._bridgeToObjectiveC()().super.isa;
        sub_100250CC4(a4, a5);
        id v24 = [v27 initWithData:v28];

        if (v24) {
          goto LABEL_28;
        }
        goto LABEL_31;
      case 3:
        id v29 = objc_allocWithZone((Class)SDAuthenticationPairingRequest);
        sub_10025ADCC(a4, a5);
        Class v30 = Data._bridgeToObjectiveC()().super.isa;
        sub_100250CC4(a4, a5);
        id v24 = [v29 initWithData:v30];

        if (v24) {
          goto LABEL_28;
        }
        goto LABEL_31;
      case 4:
        id v31 = objc_allocWithZone((Class)SDAuthenticationPairingResponse);
        sub_10025ADCC(a4, a5);
        Class v32 = Data._bridgeToObjectiveC()().super.isa;
        sub_100250CC4(a4, a5);
        id v24 = [v31 initWithData:v32];

        if (v24) {
          goto LABEL_28;
        }
        goto LABEL_31;
      case 5:
        id v33 = objc_allocWithZone((Class)SDAuthenticationPairingCreateRecord);
        sub_10025ADCC(a4, a5);
        Class v34 = Data._bridgeToObjectiveC()().super.isa;
        sub_100250CC4(a4, a5);
        id v24 = [v33 initWithData:v34];

        if (v24) {
          goto LABEL_28;
        }
        goto LABEL_31;
      case 6:
        id v35 = objc_allocWithZone((Class)SDAuthenticationPairingCreateSecret);
        sub_10025ADCC(a4, a5);
        Class v36 = Data._bridgeToObjectiveC()().super.isa;
        sub_100250CC4(a4, a5);
        id v24 = [v35 initWithData:v36];

        if (v24) {
          goto LABEL_28;
        }
        goto LABEL_31;
      case 7:
        id v37 = objc_allocWithZone((Class)SDAuthenticationToken);
        sub_10025ADCC(a4, a5);
        Class v38 = Data._bridgeToObjectiveC()().super.isa;
        sub_100250CC4(a4, a5);
        id v24 = [v37 initWithData:v38];

        if (v24) {
          goto LABEL_28;
        }
        goto LABEL_31;
      case 8:
        if (qword_10096A190 != -1) {
          swift_once();
        }
        uint64_t v39 = type metadata accessor for Logger();
        sub_10000B47C(v39, (uint64_t)qword_10097F520);
        uint64_t v40 = v86;
        swift_bridgeObjectRetain_n();
        uint64_t v41 = Logger.logObject.getter();
        os_log_type_t v42 = static os_log_type_t.info.getter();
        if (!os_log_type_enabled(v41, v42)) {
          goto LABEL_35;
        }
        uint64_t v43 = swift_slowAlloc();
        os_log_type_t v44 = (void *)swift_slowAlloc();
        *(void *)&long long v89 = swift_slowAlloc();
        *(_DWORD *)uint64_t v43 = 136315394;
        unint64_t v45 = sub_100509B38(8);
        *(void *)&long long v87 = sub_100254634(v45, v46, (uint64_t *)&v89);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v43 + 12) = 2112;
        sub_10024D280();
        swift_allocError();
        *(_DWORD *)uint64_t v47 = v84;
        *(void *)(v47 + 8) = v85;
        *(void *)(v47 + 16) = v40;
        swift_bridgeObjectRetain();
        uint64_t v48 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)&long long v87 = v48;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *os_log_type_t v44 = v48;
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v41, v42, "%s failed to send with error %@", (uint8_t *)v43, 0x16u);
        sub_10000A844(&qword_10096B850);
        swift_arrayDestroy();
        goto LABEL_34;
      case 9:
        id v49 = objc_allocWithZone((Class)SDAuthenticationPrePairingRequest);
        sub_10025ADCC(a4, a5);
        Class v50 = Data._bridgeToObjectiveC()().super.isa;
        sub_100250CC4(a4, a5);
        id v24 = [v49 initWithData:v50];

        if (v24) {
          goto LABEL_28;
        }
        goto LABEL_31;
      case 10:
        id v51 = objc_allocWithZone((Class)SDAuthenticationApprovePrompt);
        sub_10025ADCC(a4, a5);
        Class v52 = Data._bridgeToObjectiveC()().super.isa;
        sub_100250CC4(a4, a5);
        id v24 = [v51 initWithData:v52];

        if (v24) {
          goto LABEL_28;
        }
        goto LABEL_31;
      case 11:
        id v53 = objc_allocWithZone((Class)SDAuthenticationPreRequest);
        sub_10025ADCC(a4, a5);
        Class v54 = Data._bridgeToObjectiveC()().super.isa;
        sub_100250CC4(a4, a5);
        id v24 = [v53 initWithData:v54];

        if (v24) {
          goto LABEL_28;
        }
        goto LABEL_31;
      default:
        id v22 = objc_allocWithZone((Class)SDAuthenticationRequest);
        sub_10025ADCC(a4, a5);
        Class v23 = Data._bridgeToObjectiveC()().super.isa;
        sub_100250CC4(a4, a5);
        id v24 = [v22 initWithData:v23];

        if (!v24) {
          goto LABEL_31;
        }
LABEL_28:
        id v55 = [v24 sessionID];

        if (!v55)
        {
LABEL_31:
          if (qword_10096A190 != -1) {
            goto LABEL_53;
          }
          goto LABEL_32;
        }
        uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v58 = v57;

        UUID.init(uuidString:)();
        uint64_t v59 = v83;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v13, 1, v14) == 1)
        {
          swift_bridgeObjectRelease();
          sub_10000A7E8((uint64_t)v13, &qword_100974EA0);
          return;
        }
        uint64_t v69 = (uint64_t)v82;
        (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v82, v13, v14);
        uint64_t v70 = (uint64_t *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions);
        swift_beginAccess();
        uint64_t v71 = *v70;
        if (*(void *)(v71 + 16))
        {
          unint64_t v72 = sub_100583A00(v69);
          uint64_t v73 = v86;
          if (v74)
          {
            sub_100278C8C(*(void *)(v71 + 56) + 40 * v72, (uint64_t)&v89);
          }
          else
          {
            uint64_t v91 = 0;
            long long v89 = 0u;
            long long v90 = 0u;
          }
        }
        else
        {
          uint64_t v91 = 0;
          long long v89 = 0u;
          long long v90 = 0u;
          uint64_t v73 = v86;
        }
        swift_endAccess();
        if (*((void *)&v90 + 1))
        {
          swift_bridgeObjectRelease();
          sub_10000A7E8((uint64_t)&v89, &qword_100974F18);
          sub_1006FCB18(v69, v84, v85, (uint64_t)v73);
        }
        else
        {
          sub_10000A7E8((uint64_t)&v89, &qword_100974F18);
          sub_1006F8600(v58, (uint64_t)&v87);
          if (v88)
          {
            swift_bridgeObjectRelease();
            sub_1002AF688(&v87, (uint64_t)&v89);
            uint64_t v75 = *((void *)&v90 + 1);
            uint64_t v76 = v91;
            long long v77 = sub_10026BB6C(&v89, *((uint64_t *)&v90 + 1));
            sub_10070853C((uint64_t)v77, v84, v85, v73, v7, v75, v76);
            sub_10024D338((uint64_t)&v89);
          }
          else
          {
            sub_10000A7E8((uint64_t)&v87, &qword_10097F880);
            if (qword_10096A190 != -1) {
              swift_once();
            }
            uint64_t v78 = type metadata accessor for Logger();
            sub_10000B47C(v78, (uint64_t)qword_10097F520);
            swift_bridgeObjectRetain();
            uint64_t v79 = Logger.logObject.getter();
            os_log_type_t v80 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v79, v80))
            {
              uint64_t v81 = (uint8_t *)swift_slowAlloc();
              *(void *)&long long v89 = swift_slowAlloc();
              *(_DWORD *)uint64_t v81 = 136315138;
              swift_bridgeObjectRetain();
              *(void *)&long long v87 = sub_100254634(v56, (unint64_t)v58, (uint64_t *)&v89);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              _os_log_impl((void *)&_mh_execute_header, v79, v80, "Could not find session corresponding to %s", v81, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              (*(void (**)(char *, uint64_t))(v59 + 8))(v82, v14);
              return;
            }

            swift_bridgeObjectRelease_n();
          }
        }
        (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v69, v14);
        break;
    }
  }
  else
  {
    __break(1u);
LABEL_53:
    swift_once();
LABEL_32:
    uint64_t v60 = type metadata accessor for Logger();
    sub_10000B47C(v60, (uint64_t)qword_10097F520);
    uint64_t v61 = v86;
    swift_bridgeObjectRetain_n();
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v41, v62))
    {
      uint64_t v63 = swift_slowAlloc();
      id v64 = (void *)swift_slowAlloc();
      *(void *)&long long v89 = swift_slowAlloc();
      *(_DWORD *)uint64_t v63 = 136315394;
      unint64_t v65 = sub_100509B38(a6);
      *(void *)&long long v87 = sub_100254634(v65, v66, (uint64_t *)&v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v63 + 12) = 2112;
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v67 = v84;
      *(void *)(v67 + 8) = v85;
      *(void *)(v67 + 16) = v61;
      swift_bridgeObjectRetain();
      uint64_t v68 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)&long long v87 = v68;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v64 = v68;
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v41, v62, "%s failed to send with error %@ but sessionID was missing", (uint8_t *)v63, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
LABEL_34:
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
LABEL_35:
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1007067E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_10000A6F0;
  return v6();
}

uint64_t sub_1007068B0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_10000A6F0;
  return v7();
}

uint64_t sub_10070697C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10000A7E8(a1, &qword_10096C920);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

Swift::Int sub_100706B28(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4, char a5)
{
  uint64_t v6 = a4;
  uint64_t v8 = a5 & 1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v9 = &_swiftEmptySetSingleton;
    Class v30 = &_swiftEmptySetSingleton;
    id v10 = a3;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      sub_10000B740(0, &qword_10096B3E8);
      uint64_t v11 = a2;
      do
      {
        swift_dynamicCast();
        sub_1006DA918(&v29, v11, (uint64_t)v10, v6, v8);
        if (v5)
        {
          swift_release();

          swift_release();
          return (Swift::Int)v9;
        }
        id v9 = v29;
        if (v12)
        {
          id v13 = v10;
          uint64_t v14 = v8;
          uint64_t v15 = v6;
          uint64_t v16 = v30;
          unint64_t v17 = v30[2];
          if (v30[3] <= v17)
          {
            sub_100599C4C(v17 + 1);
            uint64_t v16 = v30;
          }
          Swift::Int result = NSObject._rawHashValue(seed:)(v16[5]);
          os_log_type_t v19 = v16 + 7;
          uint64_t v20 = -1 << *((unsigned char *)v16 + 32);
          unint64_t v21 = result & ~v20;
          unint64_t v22 = v21 >> 6;
          if (((-1 << v21) & ~v16[(v21 >> 6) + 7]) != 0)
          {
            unint64_t v23 = __clz(__rbit64((-1 << v21) & ~v16[(v21 >> 6) + 7])) | v21 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            char v24 = 0;
            unint64_t v25 = (unint64_t)(63 - v20) >> 6;
            do
            {
              if (++v22 == v25 && (v24 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              BOOL v26 = v22 == v25;
              if (v22 == v25) {
                unint64_t v22 = 0;
              }
              v24 |= v26;
              uint64_t v27 = v19[v22];
            }
            while (v27 == -1);
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          }
          *(void *)((char *)v19 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
          *(void *)(v16[6] + 8 * v23) = v9;
          ++v16[2];
          uint64_t v6 = v15;
          uint64_t v8 = v14;
          id v10 = v13;
          uint64_t v11 = a2;
        }
        else
        {
        }
      }
      while (__CocoaSet.Iterator.next()());
      id v9 = v30;
    }

    swift_release();
  }
  else
  {
    id v9 = (id)sub_10070F4EC(a1, a2, a3, a4, a5 & 1);
  }
  return (Swift::Int)v9;
}

uint64_t sub_100706DCC(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v4 = isStackAllocationSafe;
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    uint64_t v8 = a2((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4);
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    id v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    uint64_t v8 = a2((char *)v9, v6, v4);
    swift_release();
    swift_slowDealloc();
  }
  return v8;
}

uint64_t sub_100706F44(uint64_t isStackAllocationSafe, float a2)
{
  uint64_t v4 = isStackAllocationSafe;
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v13 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    sub_10070740C((unint64_t *)((char *)&v13 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v4, a2);
    uint64_t v9 = v8;
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    id v10 = (void *)swift_slowAlloc();
    bzero(v10, v7);
    sub_10070740C((unint64_t *)v10, v6, v4, a2);
    uint64_t v9 = v11;
    swift_release();
    swift_slowDealloc();
  }
  return v9;
}

unint64_t *sub_1007070BC(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      int64_t v6 = v14 + 1;
      if (v14 + 1 >= v11) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v6);
      if (!v15)
      {
        int64_t v6 = v14 + 2;
        if (v14 + 2 >= v11) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    Swift::Int result = (unint64_t *)[*(id *)(*(void *)(a3 + 48) + 8 * v13) type];
    if (result == (unint64_t *)2)
    {
      *(unint64_t *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return (unint64_t *)sub_100707600(v4, a2, v5, a3, &qword_100979EB0);
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v11) {
    goto LABEL_24;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v6 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t *sub_100707264(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      int64_t v6 = v14 + 1;
      if (v14 + 1 >= v11) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v7 + 8 * v6);
      if (!v15)
      {
        int64_t v6 = v14 + 2;
        if (v14 + 2 >= v11) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v7 + 8 * v6);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    Swift::Int result = (unint64_t *)[*(id *)(*(void *)(a3 + 48) + 8 * v13) type];
    if (result == (unint64_t *)4)
    {
      *(unint64_t *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return (unint64_t *)sub_100707600(v4, a2, v5, a3, &qword_100979EB0);
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v11) {
    goto LABEL_24;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v6 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_10070740C(unint64_t *a1, uint64_t a2, uint64_t a3, float a4)
{
  uint64_t v22 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    unint64_t v13 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v14 = v13 | (v7 << 6);
LABEL_17:
    id v23 = *(id *)(*(void *)(a3 + 48) + 8 * v14);
    id v18 = v23;
    unsigned __int8 v19 = sub_1006DA11C(&v23, a4);

    if (v4) {
      return;
    }
    if (v19)
    {
      *(unint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      BOOL v15 = __OFADD__(v22++, 1);
      if (v15) {
        goto LABEL_30;
      }
    }
  }
  BOOL v15 = __OFADD__(v7++, 1);
  if (v15)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v7 >= v12) {
    goto LABEL_27;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v7);
  if (v16)
  {
LABEL_16:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v7 << 6);
    goto LABEL_17;
  }
  int64_t v17 = v7 + 1;
  if (v7 + 1 >= v12) {
    goto LABEL_27;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v7 + 2;
  if (v7 + 2 >= v12) {
    goto LABEL_27;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v7 + 3;
  if (v7 + 3 >= v12)
  {
LABEL_27:
    swift_retain();
    sub_100707600(a1, a2, v22, a3, &qword_100979EB0);
    return;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16)
  {
LABEL_15:
    int64_t v7 = v17;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_27;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    ++v17;
    if (v16) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_1007075F4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100707600(a1, a2, a3, a4, &qword_10096D4D0);
}

uint64_t sub_100707600(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a4;
  if (!a3)
  {
    uint64_t v10 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v10;
  }
  uint64_t v6 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v5;
  }
  sub_10000A844(a5);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v10 = (void *)result;
  Class v30 = a1;
  if (a2 < 1) {
    unint64_t v11 = 0;
  }
  else {
    unint64_t v11 = *a1;
  }
  uint64_t v12 = 0;
  uint64_t v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    uint64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_39;
    }
    if (v16 >= a2) {
      goto LABEL_36;
    }
    unint64_t v17 = v30[v16];
    ++v12;
    if (!v17)
    {
      uint64_t v12 = v16 + 1;
      if (v16 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v17 = v30[v12];
      if (!v17)
      {
        uint64_t v12 = v16 + 2;
        if (v16 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v17 = v30[v12];
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    Swift::Int v19 = v10[5];
    id v20 = *(id *)(*(void *)(v5 + 48) + 8 * v15);
    uint64_t result = NSObject._rawHashValue(seed:)(v19);
    uint64_t v21 = -1 << *((unsigned char *)v10 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v13 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v13 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    *(void *)(v10[6] + 8 * v24) = v20;
    ++v10[2];
    if (__OFSUB__(v6--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v6) {
      goto LABEL_36;
    }
  }
  uint64_t v18 = v16 + 3;
  if (v18 >= a2) {
    goto LABEL_36;
  }
  unint64_t v17 = v30[v18];
  if (v17)
  {
    uint64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= a2) {
      goto LABEL_36;
    }
    unint64_t v17 = v30[v12];
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}