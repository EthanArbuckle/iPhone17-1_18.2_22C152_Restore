uint64_t sub_1004564DC()
{
  uint64_t v0;
  uint64_t vars8;

  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10045652C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_100450198(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1004565F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100456608()
{
  return swift_release();
}

uint64_t sub_100456610()
{
  return _swift_deallocObject(v0, 37, 7);
}

uint64_t sub_100456650()
{
  return sub_10045160C(*(void **)(v0 + 16), *(char **)(v0 + 24), *(unsigned int *)(v0 + 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 36) << 32));
}

uint64_t sub_100456674(void *a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v240 = (id)a4;
  uint64_t v9 = sub_10000A844(&qword_100974EA0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  v231 = (char *)v227 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v232 = (char *)v227 - v12;
  uint64_t v13 = sub_10000A844((uint64_t *)&unk_100974F20);
  __chkstk_darwin(v13 - 8);
  uint64_t v229 = (uint64_t)v227 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v235 = (os_log_t)type metadata accessor for Date();
  Class isa = v235[-1].isa;
  __chkstk_darwin(v235);
  v233 = (char *)v227 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v243 = type metadata accessor for UUID();
  uint64_t v242 = *(void *)(v243 - 8);
  uint64_t v16 = __chkstk_darwin(v243);
  v230 = (char *)v227 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  v236 = (char *)v227 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v22 = (char *)v227 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)v227 - v23;
  v25 = (void *)type metadata accessor for DispatchPredicate();
  uint64_t v26 = *(v25 - 1);
  __chkstk_darwin(v25);
  v28 = (void *)((char *)v227 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v252 = type metadata accessor for SDAuthenticationLockSession(0);
  v253 = &off_1008DE398;
  v251 = a1;
  v29 = *(void **)(a5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  void *v28 = v29;
  (*(void (**)(void *, void, void *))(v26 + 104))(v28, enum case for DispatchPredicate.onQueue(_:), v25);
  id v30 = a1;
  id v31 = v29;
  LOBYTE(v29) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, void *))(v26 + 8))(v28, v25);
  if (v29)
  {
    v25 = sub_10070E650(a2, a3, (uint64_t)v240);
    LODWORD(v28) = a2;
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v32 = type metadata accessor for Logger();
  uint64_t v33 = sub_10000B47C(v32, (uint64_t)qword_10097F520);
  sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
  v34 = v25;
  uint64_t v237 = v33;
  v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.error.getter();
  BOOL v37 = os_log_type_enabled(v35, v36);
  uint64_t v241 = a5;
  LODWORD(v238) = v28;
  if (v37)
  {
    uint64_t v38 = swift_slowAlloc();
    v228 = (void *)swift_slowAlloc();
    id v239 = (id)swift_slowAlloc();
    uint64_t v245 = (uint64_t)v239;
    *(_DWORD *)uint64_t v38 = 136315394;
    v227[1] = v38 + 4;
    uint64_t v39 = v249;
    uint64_t v40 = v250;
    sub_10026BB6C(&v248, v249);
    (*(void (**)(uint64_t, uint64_t))(v40 + 32))(v39, v40);
    sub_10045A8BC((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v41 = v243;
    uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v44 = v43;
    (*(void (**)(char *, uint64_t))(v242 + 8))(v24, v41);
    v244[0] = sub_100254634(v42, v44, &v245);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)&v248);
    *(_WORD *)(v38 + 12) = 2112;
    v244[0] = v34;
    v45 = v34;
    a5 = v241;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v228 = v34;

    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Session %s failed with error: %@", (uint8_t *)v38, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10024D338((uint64_t)&v248);
  }
  uint64_t v46 = v252;
  v47 = v253;
  sub_10026BB6C(&v251, v252);
  id v239 = (id)((uint64_t (*)(uint64_t, _UNKNOWN **))v47[5])(v46, v47);
  v48 = (uint64_t *)(a5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions);
  uint64_t v49 = swift_beginAccess();
  uint64_t v50 = *v48;
  uint64_t v51 = *(void *)(*v48 + 16);
  id v240 = v34;
  if (v51)
  {
    v52 = (void *)(v50 + 32);
    v53 = (void (**)(char *, uint64_t))(v242 + 8);
    swift_bridgeObjectRetain();
    uint64_t v54 = v51 - 1;
    do
    {
      uint64_t v55 = v54;
      uint64_t v57 = v52[3];
      uint64_t v56 = v52[4];
      sub_10026BB6C(v52, v57);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v56 + 8) + 8) + 32))(v57);
      uint64_t v58 = v252;
      v59 = v253;
      sub_10026BB6C(&v251, v252);
      ((void (*)(uint64_t, _UNKNOWN **))v59[4])(v58, v59);
      char v60 = static UUID.== infix(_:_:)();
      v61 = *v53;
      uint64_t v62 = v243;
      (*v53)(v22, v243);
      v61(v24, v62);
      if (v60) {
        break;
      }
      uint64_t v54 = v55 - 1;
      v52 += 5;
    }
    while (v55);
    uint64_t v49 = swift_bridgeObjectRelease();
  }
  else
  {
    char v60 = 0;
  }
  __chkstk_darwin(v49);
  v227[-2] = &v251;
  swift_beginAccess();
  uint64_t result = sub_100451FEC((uint64_t (*)(uint64_t))sub_10045AF68, (uint64_t)&v227[-4], (uint64_t (*)(uint64_t))sub_1002AD4C4, (uint64_t (*)(void, void))sub_1002AF688);
  uint64_t v64 = *(void *)(*v48 + 16);
  uint64_t v65 = v243;
  if (v64 < result)
  {
    __break(1u);
    goto LABEL_95;
  }
  sub_1005A5820(result, v64);
  uint64_t v66 = swift_endAccess();
  __chkstk_darwin(v66);
  v227[-2] = &v251;
  uint64_t v67 = v241;
  uint64_t v68 = v241 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions;
  swift_beginAccess();
  uint64_t result = sub_100451FEC((uint64_t (*)(uint64_t))sub_10045AF68, (uint64_t)&v227[-4], (uint64_t (*)(uint64_t))sub_1002AD4B0, (uint64_t (*)(void, void))sub_1002AF688);
  uint64_t v69 = *(void *)(*(void *)v68 + 16);
  uint64_t v70 = v242;
  if (v69 < result)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  sub_1005A5840(result, v69);
  uint64_t v71 = swift_endAccess();
  __chkstk_darwin(v71);
  v227[-2] = &v251;
  uint64_t v72 = v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions;
  swift_beginAccess();
  uint64_t result = sub_100451FEC((uint64_t (*)(uint64_t))sub_10045AF68, (uint64_t)&v227[-4], (uint64_t (*)(uint64_t))sub_1002AD49C, (uint64_t (*)(void, void))sub_1002AF688);
  uint64_t v73 = *(void *)(*(void *)v72 + 16);
  if (v73 < result)
  {
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  sub_1005A5860(result, v73);
  uint64_t v74 = swift_endAccess();
  __chkstk_darwin(v74);
  v227[-2] = &v251;
  uint64_t v75 = v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions;
  swift_beginAccess();
  uint64_t result = sub_100451FEC((uint64_t (*)(uint64_t))sub_10045AF68, (uint64_t)&v227[-4], (uint64_t (*)(uint64_t))sub_1002AD488, (uint64_t (*)(void, void))sub_1002AF688);
  uint64_t v76 = *(void *)(*(void *)v75 + 16);
  if (v76 >= result)
  {
    sub_1005A5880(result, v76);
    swift_endAccess();
    uint64_t v77 = v252;
    v78 = v253;
    sub_10026BB6C(&v251, v252);
    ((void (*)(uint64_t, _UNKNOWN **))v78[11])(v77, v78);
    int v79 = (int)v238;
    if (v238 != 33) {
      goto LABEL_24;
    }
    uint64_t v80 = v252;
    v81 = v253;
    sub_10026BB6C(&v251, v252);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v81[8])(&v248, v80, v81);
    uint64_t v82 = v249;
    if (v249)
    {
      uint64_t v83 = v250;
      sub_10026BB6C(&v248, v249);
      uint64_t v84 = (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 8))(v82, v83);
      v86 = v85;
      sub_10024D338((uint64_t)&v248);
      if (v86)
      {
        uint64_t v87 = sub_100508E74((uint64_t)v239);
        UUID.init()();
        sub_1006DDD14(v87, v84, v86, (uint64_t)v24);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v65);
        goto LABEL_24;
      }
    }
    else
    {
      sub_10000A7E8((uint64_t)&v248, &qword_10097BB50);
    }
    v88 = Logger.logObject.getter();
    os_log_type_t v89 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v88, v89))
    {
      v90 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v90 = 0;
      _os_log_impl((void *)&_mh_execute_header, v88, v89, "Got notEnabled error but coudln't determine who to disable pairing with", v90, 2u);
      swift_slowDealloc();
    }

LABEL_24:
    if (v239 != (id)8)
    {
      if (v239 != (id)5)
      {
        if (v239 != (id)4) {
          goto LABEL_74;
        }
        if (v79 == 22)
        {
          sub_1006E7B5C();
          uint64_t v91 = v252;
          v92 = v253;
          sub_10026BB6C(&v251, v252);
          ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v92[8])(&v248, v91, v92);
          uint64_t v93 = v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_previousUnlockClassCLockDevice;
          swift_beginAccess();
          sub_10026B410((uint64_t)&v248, v93, &qword_10097BB50);
          swift_endAccess();
        }
        uint64_t v94 = v252;
        v95 = v253;
        sub_10026BB6C(&v251, v252);
        ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v95[8])(&v248, v94, v95);
        uint64_t v96 = v249;
        if (v249)
        {
          uint64_t v97 = v250;
          sub_10026BB6C(&v248, v249);
          Swift::Int v98 = (*(uint64_t (**)(uint64_t, uint64_t))(v97 + 8))(v96, v97);
          Swift::Int v100 = v99;
          sub_10024D338((uint64_t)&v248);
          if (v100)
          {
            if (v79 == 9 || v79 == 24)
            {
              if (*(void *)(*(void *)(v67
                                         + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator)
                             + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner))
              {
                v228 = 0;
                swift_beginAccess();
                swift_retain();
                swift_retain();
                swift_bridgeObjectRetain();
                sub_100596448(&v245, v98, v100);
                swift_endAccess();
LABEL_71:
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
              }
            }
            else if (*(void *)(*(void *)(v67 {
                                            + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator)
            }
                                + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner))
            {
              v228 = 0;
              swift_beginAccess();
              swift_retain();
              swift_retain();
              sub_1005A1914(v98, v100);
              swift_endAccess();
              goto LABEL_71;
            }
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          sub_10000A7E8((uint64_t)&v248, &qword_10097BB50);
        }
        uint64_t v176 = (uint64_t)v233;
        static Date.distantPast.getter();
        sub_1006D5DAC(v176);
        (*((void (**)(uint64_t, os_log_t))isa + 1))(v176, v235);
        goto LABEL_74;
      }
      if (v79 != 10) {
        goto LABEL_74;
      }
      uint64_t v121 = v252;
      v122 = v253;
      sub_10026BB6C(&v251, v252);
      ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v122[8])(&v248, v121, v122);
      uint64_t v123 = v249;
      if (v249)
      {
        uint64_t v124 = v250;
        sub_10026BB6C(&v248, v249);
        uint64_t v125 = (*(uint64_t (**)(uint64_t, uint64_t))(v124 + 8))(v123, v124);
        uint64_t v127 = v126;
        sub_10024D338((uint64_t)&v248);
        if (v127)
        {
          swift_beginAccess();
          uint64_t v128 = v229;
          sub_1002A965C(v125, v127, v229);
          swift_endAccess();
          sub_10000A7E8(v128, (uint64_t *)&unk_100974F20);
          swift_bridgeObjectRelease();
          goto LABEL_74;
        }
      }
      else
      {
        sub_10000A7E8((uint64_t)&v248, &qword_10097BB50);
      }
      v228 = 0;
      sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
      v159 = Logger.logObject.getter();
      os_log_type_t v160 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v159, v160))
      {
        v161 = (uint8_t *)swift_slowAlloc();
        id v239 = (id)swift_slowAlloc();
        uint64_t v245 = (uint64_t)v239;
        *(_DWORD *)v161 = 136315138;
        v238 = v161 + 4;
        uint64_t v162 = v249;
        uint64_t v163 = v250;
        sub_10026BB6C(&v248, v249);
        v164 = *(void (**)(uint64_t, uint64_t))(v163 + 32);
        uint64_t v165 = v163;
        uint64_t v70 = v242;
        v164(v162, v165);
        sub_10045A8BC((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v166 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v168 = v167;
        (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v65);
        v244[0] = sub_100254634(v166, v168, &v245);
        uint64_t v67 = v241;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10024D338((uint64_t)&v248);
        _os_log_impl((void *)&_mh_execute_header, v159, v160, "Could not find peer device for %s", v161, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10024D338((uint64_t)&v248);
      }

LABEL_74:
      sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
      sub_10000A844((uint64_t *)&unk_10096B440);
      sub_10000A844((uint64_t *)&unk_100972440);
      if (swift_dynamicCast())
      {
        sub_10024D338((uint64_t)&v245);
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (!Strong) {
          goto LABEL_81;
        }
        v178 = (void *)Strong;
        uint64_t v179 = v252;
        v180 = v253;
        sub_10026BB6C(&v251, v252);
        ((void (*)(uint64_t, _UNKNOWN **))v180[4])(v179, v180);
        v181.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v65);
        [v178 manager:v67 didFailAuthenticationFor:v181.super.isa error:v240];
      }
      else
      {
        sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
        sub_10000A844(&qword_10096B430);
        if ((swift_dynamicCast() & 1) == 0
          || (sub_10024D338((uint64_t)&v245), (uint64_t v182 = swift_unknownObjectWeakLoadStrong()) == 0))
        {
LABEL_81:
          sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
          if (v60)
          {
            uint64_t v186 = v249;
            uint64_t v187 = v250;
            sub_10026BB6C(&v248, v249);
            unint64_t v188 = (*(uint64_t (**)(uint64_t, uint64_t))(v187 + 40))(v186, v187);
            v189 = v240;
            if (v188 > 0xE || ((1 << v188) & 0x658E) == 0)
            {
              sub_10024D338((uint64_t)&v248);
              sub_100278C8C((uint64_t)&v251, (uint64_t)&v245);

              sub_10024D338((uint64_t)&v245);
              return sub_10024D338((uint64_t)&v251);
            }
            sub_10024D338((uint64_t)&v248);
            uint64_t v190 = *(void *)(v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
            uint64_t v191 = v252;
            v192 = v253;
            sub_10026BB6C(&v251, v252);
            unint64_t v193 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v192[5])(v191, v192);
            LOBYTE(v191) = sub_100508B74(v193);
            uint64_t v194 = v252;
            v195 = v253;
            sub_10026BB6C(&v251, v252);
            ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v195[8])(&v245, v194, v195);
            uint64_t v196 = sub_1005EA4B4(v191, (uint64_t)&v245);
            uint64_t v198 = v197;
            uint64_t ObjectType = swift_getObjectType();
            uint64_t v200 = (*(uint64_t (**)(uint64_t, uint64_t))(v198 + 56))(ObjectType, v198);
            uint64_t v201 = __chkstk_darwin(v200);
            v227[-4] = v196;
            v227[-3] = v198;
            v227[-2] = &v245;
            v227[-1] = v190;
            __chkstk_darwin(v201);
            v227[-2] = sub_10045AFA8;
            v227[-1] = v202;
            v204 = v203 + 4;
            os_unfair_lock_lock(v203 + 4);
            sub_10030F73C(v205);
            os_unfair_lock_unlock(v204);

            swift_unknownObjectRelease();
            v206 = (id *)&v245;
          }
          else
          {
            sub_10024D338((uint64_t)&v248);
            sub_100278C8C((uint64_t)&v251, (uint64_t)&v245);
            uint64_t v207 = v246;
            uint64_t v208 = v247;
            sub_10026BB6C(&v245, v246);
            unint64_t v209 = (*(uint64_t (**)(uint64_t, uint64_t))(v208 + 40))(v207, v208);
            v210 = v240;
            if (v209 <= 0xE && ((1 << v209) & 0x658E) != 0)
            {
              sub_10024D338((uint64_t)&v245);

              return sub_10024D338((uint64_t)&v251);
            }
            sub_10024D338((uint64_t)&v245);
            uint64_t v211 = *(void *)(v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
            uint64_t v212 = v252;
            v213 = v253;
            sub_10026BB6C(&v251, v252);
            unint64_t v214 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v213[5])(v212, v213);
            LOBYTE(v212) = sub_100508B74(v214);
            uint64_t v215 = v252;
            v216 = v253;
            sub_10026BB6C(&v251, v252);
            ((void (*)(void *__return_ptr, uint64_t, _UNKNOWN **))v216[8])(v244, v215, v216);
            uint64_t v217 = sub_1005EA4B4(v212, (uint64_t)v244);
            uint64_t v219 = v218;
            uint64_t v220 = swift_getObjectType();
            uint64_t v221 = (*(uint64_t (**)(uint64_t, uint64_t))(v219 + 56))(v220, v219);
            uint64_t v222 = __chkstk_darwin(v221);
            v227[-4] = v217;
            v227[-3] = v219;
            v227[-2] = v244;
            v227[-1] = v211;
            __chkstk_darwin(v222);
            v227[-2] = sub_10045AFA8;
            v227[-1] = v223;
            v225 = v224 + 4;
            os_unfair_lock_lock(v224 + 4);
            sub_10030F73C(v226);
            os_unfair_lock_unlock(v225);

            swift_unknownObjectRelease();
            v206 = (id *)v244;
          }
          sub_10000A7E8((uint64_t)v206, &qword_10097BB50);
          return sub_10024D338((uint64_t)&v251);
        }
        v183 = (void *)v182;
        uint64_t v184 = v252;
        v185 = v253;
        sub_10026BB6C(&v251, v252);
        ((void (*)(uint64_t, _UNKNOWN **))v185[4])(v184, v185);
        v181.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v65);
        [v183 manager:v67 didFailToEnableDeviceFor:v181.super.isa error:v240];
      }

      swift_unknownObjectRelease();
      goto LABEL_81;
    }
    uint64_t v101 = v252;
    v102 = v253;
    sub_10026BB6C(&v251, v252);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v102[8])(&v248, v101, v102);
    uint64_t v103 = v249;
    v228 = 0;
    if (v249)
    {
      uint64_t v104 = v250;
      sub_10026BB6C(&v248, v249);
      uint64_t v105 = (*(uint64_t (**)(uint64_t, uint64_t))(v104 + 8))(v103, v104);
      uint64_t v107 = v106;
      sub_10024D338((uint64_t)&v248);
      if (v107)
      {
        v108 = Logger.logObject.getter();
        os_log_type_t v109 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v108, v109))
        {
          v110 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v110 = 0;
          _os_log_impl((void *)&_mh_execute_header, v108, v109, "Registration failed, clearing registration date", v110, 2u);
          swift_slowDealloc();
        }

        swift_beginAccess();
        swift_bridgeObjectRetain();
        v111 = sub_1005803EC(&v248, v105, v107);
        uint64_t v113 = v112;
        uint64_t v114 = type metadata accessor for RegistrationState(0);
        v115 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 48);
        v116 = *v115;
        if (!(*v115)(v113, 1, v114)) {
          *(unsigned char *)(v113 + *(int *)(v114 + 20)) = 0;
        }
        ((void (*)(uint64_t *, void))v111)(&v248, 0);
        swift_endAccess();
        uint64_t v70 = v242;
        swift_bridgeObjectRelease();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v117 = sub_1005803EC(&v248, v105, v107);
        uint64_t v119 = v118;
        unsigned int v120 = v116(v118, 1, v114);
        uint64_t v65 = v243;
        if (!v120)
        {
          sub_10000A7E8(v119, (uint64_t *)&unk_100975040);
          (*((void (**)(uint64_t, uint64_t, uint64_t, os_log_t))isa + 7))(v119, 1, 1, v235);
        }
        ((void (*)(uint64_t *, void))v117)(&v248, 0);
        swift_endAccess();
        swift_bridgeObjectRelease_n();
        uint64_t v67 = v241;
        goto LABEL_54;
      }
    }
    else
    {
      sub_10000A7E8((uint64_t)&v248, &qword_10097BB50);
    }
    sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
    v129 = Logger.logObject.getter();
    os_log_type_t v130 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v129, v130))
    {
      uint64_t v131 = swift_slowAlloc();
      id v239 = (id)swift_slowAlloc();
      uint64_t v245 = (uint64_t)v239;
      *(_DWORD *)uint64_t v131 = 136315138;
      os_log_t v235 = (os_log_t)(v131 + 4);
      uint64_t v132 = v249;
      uint64_t v133 = v250;
      sub_10026BB6C(&v248, v249);
      v134 = *(void (**)(uint64_t, uint64_t))(v133 + 32);
      uint64_t v135 = v133;
      uint64_t v70 = v242;
      v134(v132, v135);
      sub_10045A8BC((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v136 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v138 = v137;
      (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v65);
      v244[0] = sub_100254634(v136, v138, &v245);
      uint64_t v67 = v241;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10024D338((uint64_t)&v248);
      _os_log_impl((void *)&_mh_execute_header, v129, v130, "Could not find peer device for %s", (uint8_t *)v131, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10024D338((uint64_t)&v248);
    }

LABEL_54:
    v139 = v236;
    uint64_t v140 = (uint64_t)v232;
    uint64_t v141 = v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI;
    swift_beginAccess();
    sub_10024A330(v141, v140, &qword_100974EA0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v140, 1, v65) == 1)
    {
      sub_10000A7E8(v140, &qword_100974EA0);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v70 + 32))(v139, v140, v65);
      v142 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v142)
      {
        uint64_t v143 = v70;
        id v239 = v142;
        v144 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
        v145 = v230;
        v144(v230, v139, v65);
        v146 = Logger.logObject.getter();
        os_log_type_t v147 = static os_log_type_t.default.getter();
        int v148 = v147;
        if (os_log_type_enabled(v146, v147))
        {
          uint64_t v149 = swift_slowAlloc();
          v150 = (char *)swift_slowAlloc();
          v233 = v150;
          uint64_t v237 = swift_slowAlloc();
          uint64_t v248 = v237;
          *(_DWORD *)uint64_t v149 = 138412546;
          os_log_t v235 = v146;
          type metadata accessor for SFAuthenticationError(0);
          LODWORD(isa) = v148;
          sub_10045A8BC(&qword_100977FB0, type metadata accessor for SFAuthenticationError);
          swift_allocError();
          _DWORD *v151 = v238;
          uint64_t v152 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v245 = v152;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(void *)v150 = v152;
          *(_WORD *)(v149 + 12) = 2080;
          sub_10045A8BC((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v153 = v243;
          uint64_t v154 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v245 = sub_100254634(v154, v155, &v248);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v156 = *(void (**)(char *, uint64_t))(v143 + 8);
          v156(v145, v153);
          os_log_t v157 = v235;
          _os_log_impl((void *)&_mh_execute_header, v235, (os_log_type_t)isa, "Calling back to delegate with registration error %@ for sessionID %s", (uint8_t *)v149, 0x16u);
          sub_10000A844(&qword_10096B850);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          unsigned int v158 = v238;
          swift_slowDealloc();
          uint64_t v67 = v241;
          swift_slowDealloc();
        }
        else
        {
          v156 = *(void (**)(char *, uint64_t))(v143 + 8);
          v156(v145, v243);

          unsigned int v158 = v238;
        }
        v172 = v236;
        Class v173 = UUID._bridgeToObjectiveC()().super.isa;
        id v174 = sub_10070E650(v158, 0, 0xE000000000000000);
        [v239 manager:v67 didFailAuthenticationFor:v173 error:v174];
        swift_unknownObjectRelease();

        uint64_t v65 = v243;
        v156(v172, v243);
        uint64_t v70 = v242;
        uint64_t v175 = (uint64_t)v231;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v242 + 56))(v231, 1, 1, v65);
        swift_beginAccess();
        sub_10026B410(v175, v141, &qword_100974EA0);
        swift_endAccess();
      }
      else
      {
        v169 = Logger.logObject.getter();
        os_log_type_t v170 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v169, v170))
        {
          v171 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v171 = 0;
          _os_log_impl((void *)&_mh_execute_header, v169, v170, "Have session that is waiting but no delegate to report it to. This is bad.", v171, 2u);
          swift_slowDealloc();
        }

        uint64_t v70 = v242;
        (*(void (**)(char *, uint64_t))(v242 + 8))(v139, v65);
      }
    }
    goto LABEL_74;
  }
LABEL_97:
  __break(1u);
  return result;
}

uint64_t sub_100458778(void *a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v240 = (id)a4;
  uint64_t v9 = sub_10000A844(&qword_100974EA0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  v231 = (char *)v227 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v232 = (char *)v227 - v12;
  uint64_t v13 = sub_10000A844((uint64_t *)&unk_100974F20);
  __chkstk_darwin(v13 - 8);
  uint64_t v229 = (uint64_t)v227 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v235 = (os_log_t)type metadata accessor for Date();
  Class isa = v235[-1].isa;
  __chkstk_darwin(v235);
  v233 = (char *)v227 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v243 = type metadata accessor for UUID();
  uint64_t v242 = *(void *)(v243 - 8);
  uint64_t v16 = __chkstk_darwin(v243);
  v230 = (char *)v227 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  v236 = (char *)v227 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v22 = (char *)v227 - v21;
  __chkstk_darwin(v20);
  v24 = (char *)v227 - v23;
  v25 = (void *)type metadata accessor for DispatchPredicate();
  uint64_t v26 = *(v25 - 1);
  __chkstk_darwin(v25);
  v28 = (void *)((char *)v227 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v252 = type metadata accessor for SDAuthenticationPairingKeySession();
  v253 = &off_1008DE398;
  v251 = a1;
  v29 = *(void **)(a5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  void *v28 = v29;
  (*(void (**)(void *, void, void *))(v26 + 104))(v28, enum case for DispatchPredicate.onQueue(_:), v25);
  id v30 = a1;
  id v31 = v29;
  LOBYTE(v29) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, void *))(v26 + 8))(v28, v25);
  if (v29)
  {
    v25 = sub_10070E650(a2, a3, (uint64_t)v240);
    LODWORD(v28) = a2;
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v32 = type metadata accessor for Logger();
  uint64_t v33 = sub_10000B47C(v32, (uint64_t)qword_10097F520);
  sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
  v34 = v25;
  uint64_t v237 = v33;
  v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.error.getter();
  BOOL v37 = os_log_type_enabled(v35, v36);
  uint64_t v241 = a5;
  LODWORD(v238) = v28;
  if (v37)
  {
    uint64_t v38 = swift_slowAlloc();
    v228 = (void *)swift_slowAlloc();
    id v239 = (id)swift_slowAlloc();
    uint64_t v245 = (uint64_t)v239;
    *(_DWORD *)uint64_t v38 = 136315394;
    v227[1] = v38 + 4;
    uint64_t v39 = v249;
    uint64_t v40 = v250;
    sub_10026BB6C(&v248, v249);
    (*(void (**)(uint64_t, uint64_t))(v40 + 32))(v39, v40);
    sub_10045A8BC((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v41 = v243;
    uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v44 = v43;
    (*(void (**)(char *, uint64_t))(v242 + 8))(v24, v41);
    v244[0] = sub_100254634(v42, v44, &v245);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)&v248);
    *(_WORD *)(v38 + 12) = 2112;
    v244[0] = v34;
    v45 = v34;
    a5 = v241;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v228 = v34;

    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Session %s failed with error: %@", (uint8_t *)v38, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10024D338((uint64_t)&v248);
  }
  uint64_t v46 = v252;
  v47 = v253;
  sub_10026BB6C(&v251, v252);
  id v239 = (id)((uint64_t (*)(uint64_t, _UNKNOWN **))v47[5])(v46, v47);
  v48 = (uint64_t *)(a5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions);
  uint64_t v49 = swift_beginAccess();
  uint64_t v50 = *v48;
  uint64_t v51 = *(void *)(*v48 + 16);
  id v240 = v34;
  if (v51)
  {
    v52 = (void *)(v50 + 32);
    v53 = (void (**)(char *, uint64_t))(v242 + 8);
    swift_bridgeObjectRetain();
    uint64_t v54 = v51 - 1;
    do
    {
      uint64_t v55 = v54;
      uint64_t v57 = v52[3];
      uint64_t v56 = v52[4];
      sub_10026BB6C(v52, v57);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v56 + 8) + 8) + 32))(v57);
      uint64_t v58 = v252;
      v59 = v253;
      sub_10026BB6C(&v251, v252);
      ((void (*)(uint64_t, _UNKNOWN **))v59[4])(v58, v59);
      char v60 = static UUID.== infix(_:_:)();
      v61 = *v53;
      uint64_t v62 = v243;
      (*v53)(v22, v243);
      v61(v24, v62);
      if (v60) {
        break;
      }
      uint64_t v54 = v55 - 1;
      v52 += 5;
    }
    while (v55);
    uint64_t v49 = swift_bridgeObjectRelease();
  }
  else
  {
    char v60 = 0;
  }
  __chkstk_darwin(v49);
  v227[-2] = &v251;
  swift_beginAccess();
  uint64_t result = sub_100451FEC((uint64_t (*)(uint64_t))sub_10045AF68, (uint64_t)&v227[-4], (uint64_t (*)(uint64_t))sub_1002AD4C4, (uint64_t (*)(void, void))sub_1002AF688);
  uint64_t v64 = *(void *)(*v48 + 16);
  uint64_t v65 = v243;
  if (v64 < result)
  {
    __break(1u);
    goto LABEL_95;
  }
  sub_1005A5820(result, v64);
  uint64_t v66 = swift_endAccess();
  __chkstk_darwin(v66);
  v227[-2] = &v251;
  uint64_t v67 = v241;
  uint64_t v68 = v241 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions;
  swift_beginAccess();
  uint64_t result = sub_100451FEC((uint64_t (*)(uint64_t))sub_10045AF68, (uint64_t)&v227[-4], (uint64_t (*)(uint64_t))sub_1002AD4B0, (uint64_t (*)(void, void))sub_1002AF688);
  uint64_t v69 = *(void *)(*(void *)v68 + 16);
  uint64_t v70 = v242;
  if (v69 < result)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  sub_1005A5840(result, v69);
  uint64_t v71 = swift_endAccess();
  __chkstk_darwin(v71);
  v227[-2] = &v251;
  uint64_t v72 = v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions;
  swift_beginAccess();
  uint64_t result = sub_100451FEC((uint64_t (*)(uint64_t))sub_10045AF68, (uint64_t)&v227[-4], (uint64_t (*)(uint64_t))sub_1002AD49C, (uint64_t (*)(void, void))sub_1002AF688);
  uint64_t v73 = *(void *)(*(void *)v72 + 16);
  if (v73 < result)
  {
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  sub_1005A5860(result, v73);
  uint64_t v74 = swift_endAccess();
  __chkstk_darwin(v74);
  v227[-2] = &v251;
  uint64_t v75 = v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions;
  swift_beginAccess();
  uint64_t result = sub_100451FEC((uint64_t (*)(uint64_t))sub_10045AF68, (uint64_t)&v227[-4], (uint64_t (*)(uint64_t))sub_1002AD488, (uint64_t (*)(void, void))sub_1002AF688);
  uint64_t v76 = *(void *)(*(void *)v75 + 16);
  if (v76 >= result)
  {
    sub_1005A5880(result, v76);
    swift_endAccess();
    uint64_t v77 = v252;
    v78 = v253;
    sub_10026BB6C(&v251, v252);
    ((void (*)(uint64_t, _UNKNOWN **))v78[11])(v77, v78);
    int v79 = (int)v238;
    if (v238 != 33) {
      goto LABEL_24;
    }
    uint64_t v80 = v252;
    v81 = v253;
    sub_10026BB6C(&v251, v252);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v81[8])(&v248, v80, v81);
    uint64_t v82 = v249;
    if (v249)
    {
      uint64_t v83 = v250;
      sub_10026BB6C(&v248, v249);
      uint64_t v84 = (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 8))(v82, v83);
      v86 = v85;
      sub_10024D338((uint64_t)&v248);
      if (v86)
      {
        uint64_t v87 = sub_100508E74((uint64_t)v239);
        UUID.init()();
        sub_1006DDD14(v87, v84, v86, (uint64_t)v24);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v65);
        goto LABEL_24;
      }
    }
    else
    {
      sub_10000A7E8((uint64_t)&v248, &qword_10097BB50);
    }
    v88 = Logger.logObject.getter();
    os_log_type_t v89 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v88, v89))
    {
      v90 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v90 = 0;
      _os_log_impl((void *)&_mh_execute_header, v88, v89, "Got notEnabled error but coudln't determine who to disable pairing with", v90, 2u);
      swift_slowDealloc();
    }

LABEL_24:
    if (v239 != (id)8)
    {
      if (v239 != (id)5)
      {
        if (v239 != (id)4) {
          goto LABEL_74;
        }
        if (v79 == 22)
        {
          sub_1006E7B5C();
          uint64_t v91 = v252;
          v92 = v253;
          sub_10026BB6C(&v251, v252);
          ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v92[8])(&v248, v91, v92);
          uint64_t v93 = v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_previousUnlockClassCLockDevice;
          swift_beginAccess();
          sub_10026B410((uint64_t)&v248, v93, &qword_10097BB50);
          swift_endAccess();
        }
        uint64_t v94 = v252;
        v95 = v253;
        sub_10026BB6C(&v251, v252);
        ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v95[8])(&v248, v94, v95);
        uint64_t v96 = v249;
        if (v249)
        {
          uint64_t v97 = v250;
          sub_10026BB6C(&v248, v249);
          Swift::Int v98 = (*(uint64_t (**)(uint64_t, uint64_t))(v97 + 8))(v96, v97);
          Swift::Int v100 = v99;
          sub_10024D338((uint64_t)&v248);
          if (v100)
          {
            if (v79 == 9 || v79 == 24)
            {
              if (*(void *)(*(void *)(v67
                                         + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator)
                             + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner))
              {
                v228 = 0;
                swift_beginAccess();
                swift_retain();
                swift_retain();
                swift_bridgeObjectRetain();
                sub_100596448(&v245, v98, v100);
                swift_endAccess();
LABEL_71:
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
              }
            }
            else if (*(void *)(*(void *)(v67 {
                                            + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator)
            }
                                + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner))
            {
              v228 = 0;
              swift_beginAccess();
              swift_retain();
              swift_retain();
              sub_1005A1914(v98, v100);
              swift_endAccess();
              goto LABEL_71;
            }
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          sub_10000A7E8((uint64_t)&v248, &qword_10097BB50);
        }
        uint64_t v176 = (uint64_t)v233;
        static Date.distantPast.getter();
        sub_1006D5DAC(v176);
        (*((void (**)(uint64_t, os_log_t))isa + 1))(v176, v235);
        goto LABEL_74;
      }
      if (v79 != 10) {
        goto LABEL_74;
      }
      uint64_t v121 = v252;
      v122 = v253;
      sub_10026BB6C(&v251, v252);
      ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v122[8])(&v248, v121, v122);
      uint64_t v123 = v249;
      if (v249)
      {
        uint64_t v124 = v250;
        sub_10026BB6C(&v248, v249);
        uint64_t v125 = (*(uint64_t (**)(uint64_t, uint64_t))(v124 + 8))(v123, v124);
        uint64_t v127 = v126;
        sub_10024D338((uint64_t)&v248);
        if (v127)
        {
          swift_beginAccess();
          uint64_t v128 = v229;
          sub_1002A965C(v125, v127, v229);
          swift_endAccess();
          sub_10000A7E8(v128, (uint64_t *)&unk_100974F20);
          swift_bridgeObjectRelease();
          goto LABEL_74;
        }
      }
      else
      {
        sub_10000A7E8((uint64_t)&v248, &qword_10097BB50);
      }
      v228 = 0;
      sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
      v159 = Logger.logObject.getter();
      os_log_type_t v160 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v159, v160))
      {
        v161 = (uint8_t *)swift_slowAlloc();
        id v239 = (id)swift_slowAlloc();
        uint64_t v245 = (uint64_t)v239;
        *(_DWORD *)v161 = 136315138;
        v238 = v161 + 4;
        uint64_t v162 = v249;
        uint64_t v163 = v250;
        sub_10026BB6C(&v248, v249);
        v164 = *(void (**)(uint64_t, uint64_t))(v163 + 32);
        uint64_t v165 = v163;
        uint64_t v70 = v242;
        v164(v162, v165);
        sub_10045A8BC((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v166 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v168 = v167;
        (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v65);
        v244[0] = sub_100254634(v166, v168, &v245);
        uint64_t v67 = v241;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10024D338((uint64_t)&v248);
        _os_log_impl((void *)&_mh_execute_header, v159, v160, "Could not find peer device for %s", v161, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10024D338((uint64_t)&v248);
      }

LABEL_74:
      sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
      sub_10000A844((uint64_t *)&unk_10096B440);
      sub_10000A844((uint64_t *)&unk_100972440);
      if (swift_dynamicCast())
      {
        sub_10024D338((uint64_t)&v245);
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (!Strong) {
          goto LABEL_81;
        }
        v178 = (void *)Strong;
        uint64_t v179 = v252;
        v180 = v253;
        sub_10026BB6C(&v251, v252);
        ((void (*)(uint64_t, _UNKNOWN **))v180[4])(v179, v180);
        v181.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v65);
        [v178 manager:v67 didFailAuthenticationFor:v181.super.isa error:v240];
      }
      else
      {
        sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
        sub_10000A844(&qword_10096B430);
        if ((swift_dynamicCast() & 1) == 0
          || (sub_10024D338((uint64_t)&v245), (uint64_t v182 = swift_unknownObjectWeakLoadStrong()) == 0))
        {
LABEL_81:
          sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
          if (v60)
          {
            uint64_t v186 = v249;
            uint64_t v187 = v250;
            sub_10026BB6C(&v248, v249);
            unint64_t v188 = (*(uint64_t (**)(uint64_t, uint64_t))(v187 + 40))(v186, v187);
            v189 = v240;
            if (v188 > 0xE || ((1 << v188) & 0x658E) == 0)
            {
              sub_10024D338((uint64_t)&v248);
              sub_100278C8C((uint64_t)&v251, (uint64_t)&v245);

              sub_10024D338((uint64_t)&v245);
              return sub_10024D338((uint64_t)&v251);
            }
            sub_10024D338((uint64_t)&v248);
            uint64_t v190 = *(void *)(v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
            uint64_t v191 = v252;
            v192 = v253;
            sub_10026BB6C(&v251, v252);
            unint64_t v193 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v192[5])(v191, v192);
            LOBYTE(v191) = sub_100508B74(v193);
            uint64_t v194 = v252;
            v195 = v253;
            sub_10026BB6C(&v251, v252);
            ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v195[8])(&v245, v194, v195);
            uint64_t v196 = sub_1005EA4B4(v191, (uint64_t)&v245);
            uint64_t v198 = v197;
            uint64_t ObjectType = swift_getObjectType();
            uint64_t v200 = (*(uint64_t (**)(uint64_t, uint64_t))(v198 + 56))(ObjectType, v198);
            uint64_t v201 = __chkstk_darwin(v200);
            v227[-4] = v196;
            v227[-3] = v198;
            v227[-2] = &v245;
            v227[-1] = v190;
            __chkstk_darwin(v201);
            v227[-2] = sub_10045AFA8;
            v227[-1] = v202;
            v204 = v203 + 4;
            os_unfair_lock_lock(v203 + 4);
            sub_10030F73C(v205);
            os_unfair_lock_unlock(v204);

            swift_unknownObjectRelease();
            v206 = (id *)&v245;
          }
          else
          {
            sub_10024D338((uint64_t)&v248);
            sub_100278C8C((uint64_t)&v251, (uint64_t)&v245);
            uint64_t v207 = v246;
            uint64_t v208 = v247;
            sub_10026BB6C(&v245, v246);
            unint64_t v209 = (*(uint64_t (**)(uint64_t, uint64_t))(v208 + 40))(v207, v208);
            v210 = v240;
            if (v209 <= 0xE && ((1 << v209) & 0x658E) != 0)
            {
              sub_10024D338((uint64_t)&v245);

              return sub_10024D338((uint64_t)&v251);
            }
            sub_10024D338((uint64_t)&v245);
            uint64_t v211 = *(void *)(v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
            uint64_t v212 = v252;
            v213 = v253;
            sub_10026BB6C(&v251, v252);
            unint64_t v214 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v213[5])(v212, v213);
            LOBYTE(v212) = sub_100508B74(v214);
            uint64_t v215 = v252;
            v216 = v253;
            sub_10026BB6C(&v251, v252);
            ((void (*)(void *__return_ptr, uint64_t, _UNKNOWN **))v216[8])(v244, v215, v216);
            uint64_t v217 = sub_1005EA4B4(v212, (uint64_t)v244);
            uint64_t v219 = v218;
            uint64_t v220 = swift_getObjectType();
            uint64_t v221 = (*(uint64_t (**)(uint64_t, uint64_t))(v219 + 56))(v220, v219);
            uint64_t v222 = __chkstk_darwin(v221);
            v227[-4] = v217;
            v227[-3] = v219;
            v227[-2] = v244;
            v227[-1] = v211;
            __chkstk_darwin(v222);
            v227[-2] = sub_10045AFA8;
            v227[-1] = v223;
            v225 = v224 + 4;
            os_unfair_lock_lock(v224 + 4);
            sub_10030F73C(v226);
            os_unfair_lock_unlock(v225);

            swift_unknownObjectRelease();
            v206 = (id *)v244;
          }
          sub_10000A7E8((uint64_t)v206, &qword_10097BB50);
          return sub_10024D338((uint64_t)&v251);
        }
        v183 = (void *)v182;
        uint64_t v184 = v252;
        v185 = v253;
        sub_10026BB6C(&v251, v252);
        ((void (*)(uint64_t, _UNKNOWN **))v185[4])(v184, v185);
        v181.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v65);
        [v183 manager:v67 didFailToEnableDeviceFor:v181.super.isa error:v240];
      }

      swift_unknownObjectRelease();
      goto LABEL_81;
    }
    uint64_t v101 = v252;
    v102 = v253;
    sub_10026BB6C(&v251, v252);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v102[8])(&v248, v101, v102);
    uint64_t v103 = v249;
    v228 = 0;
    if (v249)
    {
      uint64_t v104 = v250;
      sub_10026BB6C(&v248, v249);
      uint64_t v105 = (*(uint64_t (**)(uint64_t, uint64_t))(v104 + 8))(v103, v104);
      uint64_t v107 = v106;
      sub_10024D338((uint64_t)&v248);
      if (v107)
      {
        v108 = Logger.logObject.getter();
        os_log_type_t v109 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v108, v109))
        {
          v110 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v110 = 0;
          _os_log_impl((void *)&_mh_execute_header, v108, v109, "Registration failed, clearing registration date", v110, 2u);
          swift_slowDealloc();
        }

        swift_beginAccess();
        swift_bridgeObjectRetain();
        v111 = sub_1005803EC(&v248, v105, v107);
        uint64_t v113 = v112;
        uint64_t v114 = type metadata accessor for RegistrationState(0);
        v115 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 48);
        v116 = *v115;
        if (!(*v115)(v113, 1, v114)) {
          *(unsigned char *)(v113 + *(int *)(v114 + 20)) = 0;
        }
        ((void (*)(uint64_t *, void))v111)(&v248, 0);
        swift_endAccess();
        uint64_t v70 = v242;
        swift_bridgeObjectRelease();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v117 = sub_1005803EC(&v248, v105, v107);
        uint64_t v119 = v118;
        unsigned int v120 = v116(v118, 1, v114);
        uint64_t v65 = v243;
        if (!v120)
        {
          sub_10000A7E8(v119, (uint64_t *)&unk_100975040);
          (*((void (**)(uint64_t, uint64_t, uint64_t, os_log_t))isa + 7))(v119, 1, 1, v235);
        }
        ((void (*)(uint64_t *, void))v117)(&v248, 0);
        swift_endAccess();
        swift_bridgeObjectRelease_n();
        uint64_t v67 = v241;
        goto LABEL_54;
      }
    }
    else
    {
      sub_10000A7E8((uint64_t)&v248, &qword_10097BB50);
    }
    sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
    v129 = Logger.logObject.getter();
    os_log_type_t v130 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v129, v130))
    {
      uint64_t v131 = swift_slowAlloc();
      id v239 = (id)swift_slowAlloc();
      uint64_t v245 = (uint64_t)v239;
      *(_DWORD *)uint64_t v131 = 136315138;
      os_log_t v235 = (os_log_t)(v131 + 4);
      uint64_t v132 = v249;
      uint64_t v133 = v250;
      sub_10026BB6C(&v248, v249);
      v134 = *(void (**)(uint64_t, uint64_t))(v133 + 32);
      uint64_t v135 = v133;
      uint64_t v70 = v242;
      v134(v132, v135);
      sub_10045A8BC((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v136 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v138 = v137;
      (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v65);
      v244[0] = sub_100254634(v136, v138, &v245);
      uint64_t v67 = v241;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10024D338((uint64_t)&v248);
      _os_log_impl((void *)&_mh_execute_header, v129, v130, "Could not find peer device for %s", (uint8_t *)v131, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10024D338((uint64_t)&v248);
    }

LABEL_54:
    v139 = v236;
    uint64_t v140 = (uint64_t)v232;
    uint64_t v141 = v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI;
    swift_beginAccess();
    sub_10024A330(v141, v140, &qword_100974EA0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v140, 1, v65) == 1)
    {
      sub_10000A7E8(v140, &qword_100974EA0);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v70 + 32))(v139, v140, v65);
      v142 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v142)
      {
        uint64_t v143 = v70;
        id v239 = v142;
        v144 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
        v145 = v230;
        v144(v230, v139, v65);
        v146 = Logger.logObject.getter();
        os_log_type_t v147 = static os_log_type_t.default.getter();
        int v148 = v147;
        if (os_log_type_enabled(v146, v147))
        {
          uint64_t v149 = swift_slowAlloc();
          v150 = (char *)swift_slowAlloc();
          v233 = v150;
          uint64_t v237 = swift_slowAlloc();
          uint64_t v248 = v237;
          *(_DWORD *)uint64_t v149 = 138412546;
          os_log_t v235 = v146;
          type metadata accessor for SFAuthenticationError(0);
          LODWORD(isa) = v148;
          sub_10045A8BC(&qword_100977FB0, type metadata accessor for SFAuthenticationError);
          swift_allocError();
          _DWORD *v151 = v238;
          uint64_t v152 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v245 = v152;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(void *)v150 = v152;
          *(_WORD *)(v149 + 12) = 2080;
          sub_10045A8BC((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v153 = v243;
          uint64_t v154 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v245 = sub_100254634(v154, v155, &v248);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v156 = *(void (**)(char *, uint64_t))(v143 + 8);
          v156(v145, v153);
          os_log_t v157 = v235;
          _os_log_impl((void *)&_mh_execute_header, v235, (os_log_type_t)isa, "Calling back to delegate with registration error %@ for sessionID %s", (uint8_t *)v149, 0x16u);
          sub_10000A844(&qword_10096B850);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          unsigned int v158 = v238;
          swift_slowDealloc();
          uint64_t v67 = v241;
          swift_slowDealloc();
        }
        else
        {
          v156 = *(void (**)(char *, uint64_t))(v143 + 8);
          v156(v145, v243);

          unsigned int v158 = v238;
        }
        v172 = v236;
        Class v173 = UUID._bridgeToObjectiveC()().super.isa;
        id v174 = sub_10070E650(v158, 0, 0xE000000000000000);
        [v239 manager:v67 didFailAuthenticationFor:v173 error:v174];
        swift_unknownObjectRelease();

        uint64_t v65 = v243;
        v156(v172, v243);
        uint64_t v70 = v242;
        uint64_t v175 = (uint64_t)v231;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v242 + 56))(v231, 1, 1, v65);
        swift_beginAccess();
        sub_10026B410(v175, v141, &qword_100974EA0);
        swift_endAccess();
      }
      else
      {
        v169 = Logger.logObject.getter();
        os_log_type_t v170 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v169, v170))
        {
          v171 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v171 = 0;
          _os_log_impl((void *)&_mh_execute_header, v169, v170, "Have session that is waiting but no delegate to report it to. This is bad.", v171, 2u);
          swift_slowDealloc();
        }

        uint64_t v70 = v242;
        (*(void (**)(char *, uint64_t))(v242 + 8))(v139, v65);
      }
    }
    goto LABEL_74;
  }
LABEL_97:
  __break(1u);
  return result;
}

uint64_t sub_10045A87C(void *a1)
{
  return sub_100701E50(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t sub_10045A89C()
{
  return sub_1005EB494(v0[2], v0[3], v0[4]);
}

uint64_t sub_10045A8BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10045A904()
{
  uint64_t v1 = (int *)(type metadata accessor for AuthenticationSecurityRequest(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (((((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  uint64_t v6 = v0 + v1[7] + v3;
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100250CC4(*(void *)(v0 + v5), *(void *)(v0 + v5 + 8));

  return _swift_deallocObject(v0, v5 + 16, v4);
}

uint64_t sub_10045AA40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuthenticationSecurityRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10045AAA4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AuthenticationSecurityRequest(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[4];
  uint64_t v11 = *(void *)((char *)v1 + v6);
  uint64_t v12 = *(void *)((char *)v1 + v7);
  uint64_t v13 = (uint64_t)v1 + v5;
  uint64_t v14 = *(void *)((char *)v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  *uint64_t v15 = v2;
  v15[1] = sub_10000A6F0;
  return sub_10044DFFC(a1, v8, v9, v10, v13, v11, v12, v14);
}

uint64_t sub_10045AC0C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10045AC44()
{
  return sub_10044F164(*(char **)(v0 + 16));
}

uint64_t sub_10045AC4C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10045AC8C()
{
  return sub_10044D890(*(unsigned int *)(v0 + 24));
}

uint64_t sub_10045ACCC()
{
  return sub_10044D890(0x100000000);
}

uint64_t sub_10045AD08()
{
  uint64_t v1 = (int *)(type metadata accessor for AuthenticationSecurityRequest(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();

  uint64_t v6 = v0 + v1[7] + v3;
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_10045AE04(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AuthenticationSecurityRequest(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10000A6F4;
  return sub_10044B20C(a1, v5, v6, v7, v8);
}

uint64_t sub_10045AF00()
{
  return sub_10044BD74(*(char **)(v0 + 16));
}

uint64_t sub_10045AF0C()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10045AF4C()
{
  return sub_100450B48(*(void *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_10045AF68(void *a1)
{
  return sub_10045A87C(a1) & 1;
}

uint64_t sub_10045AFA8()
{
  return sub_10045A89C();
}

void *sub_10045AFDC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unsigned __int8 v33 = BYTE6(a2);
  uint64_t v6 = 0;
  unint64_t v31 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v7) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_52;
      }
      uint64_t v7 = (int)v7;
LABEL_6:
      if ((unint64_t)(v7 - 0x1000000000000000) >> 61 != 7) {
        goto LABEL_51;
      }
      if ((v7 & 7) != 0)
      {
        sub_10000A844(&qword_10096D478);
        sub_10045D600();
        swift_allocError();
        swift_willThrow();
        return v3;
      }
      if (v31)
      {
        if (v31 == 1) {
          uint64_t v6 = (int)a1;
        }
        else {
          uint64_t v6 = *(void *)(a1 + 16);
        }
      }
      else
      {
        uint64_t v6 = 0;
      }
LABEL_14:
      uint64_t v11 = _swiftEmptyArrayStorage;
      break;
    case 2uLL:
      uint64_t v9 = *(void *)(a1 + 16);
      uint64_t v8 = *(void *)(a1 + 24);
      BOOL v10 = __OFSUB__(v8, v9);
      uint64_t v7 = v8 - v9;
      if (!v10) {
        goto LABEL_6;
      }
      goto LABEL_53;
    case 3uLL:
      goto LABEL_14;
    default:
      uint64_t v7 = BYTE6(a2);
      goto LABEL_6;
  }
  while (2)
  {
    uint64_t v12 = v33;
    switch(v33)
    {
      case 1u:
        uint64_t v12 = a1 >> 32;
        goto LABEL_17;
      case 2u:
        if (v6 < *(void *)(a1 + 24)) {
          goto LABEL_20;
        }
        goto LABEL_37;
      case 3u:
        if ((v6 & 0x8000000000000000) == 0) {
          goto LABEL_37;
        }
        uint64_t v13 = v6 + a3;
        if (__OFADD__(v6, a3)) {
          goto LABEL_50;
        }
        uint64_t v14 = 0;
        uint64_t v15 = 0;
        goto LABEL_29;
      default:
LABEL_17:
        if (v6 < v12)
        {
LABEL_20:
          uint64_t v13 = v6 + a3;
          if (__OFADD__(v6, a3)) {
            goto LABEL_49;
          }
          if (v31)
          {
            if (v31 == 1)
            {
              uint64_t v15 = (int)a1;
              uint64_t v14 = a1 >> 32;
            }
            else
            {
              uint64_t v15 = *(void *)(a1 + 16);
              uint64_t v14 = *(void *)(a1 + 24);
            }
          }
          else
          {
            uint64_t v14 = v33;
            uint64_t v15 = 0;
          }
LABEL_29:
          if (v13 < v15 || v14 < v13)
          {
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
            JUMPOUT(0x10045B37CLL);
          }
          if (v13 < v6) {
            goto LABEL_48;
          }
          uint64_t v16 = Data._Representation.subscript.getter();
          unint64_t v18 = v17;
          sub_10025ADCC(v16, v17);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v11 = sub_100254118(0, v11[2] + 1, 1, v11);
          }
          unint64_t v20 = v11[2];
          unint64_t v19 = v11[3];
          if (v20 >= v19 >> 1) {
            uint64_t v11 = sub_100254118((void *)(v19 > 1), v20 + 1, 1, v11);
          }
          v11[2] = v20 + 1;
          uint64_t v21 = &v11[2 * v20];
          v21[4] = v16;
          v21[5] = v18;
          sub_100250CC4(v16, v18);
          uint64_t v6 = v13;
          continue;
        }
LABEL_37:
        int64_t v22 = v11[2];
        if (v22)
        {
          sub_100255720(0, v22, 0);
          uint64_t v3 = _swiftEmptyArrayStorage;
          uint64_t v23 = v11 + 5;
          while (1)
          {
            uint64_t v24 = *(v23 - 1);
            unint64_t v25 = *v23;
            sub_10025ADCC(v24, *v23);
            uint64_t v26 = sub_1002C9698(v24, v25);
            if (v4) {
              break;
            }
            uint64_t v27 = v26;
            sub_100250CC4(v24, v25);
            unint64_t v29 = _swiftEmptyArrayStorage[2];
            unint64_t v28 = _swiftEmptyArrayStorage[3];
            if (v29 >= v28 >> 1) {
              sub_100255720(v28 > 1, v29 + 1, 1);
            }
            v23 += 2;
            _swiftEmptyArrayStorage[2] = v29 + 1;
            _swiftEmptyArrayStorage[v29 + 4] = v27;
            if (!--v22)
            {
              swift_bridgeObjectRelease();
              return v3;
            }
          }
          sub_100250CC4(v24, v25);
          swift_bridgeObjectRelease();
          swift_release();
        }
        else
        {
          swift_bridgeObjectRelease();
          return _swiftEmptyArrayStorage;
        }
        return v3;
    }
  }
}

uint64_t sub_10045B39C(uint64_t a1, unint64_t a2)
{
  int v2 = 1;
  int v3 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (!((a1 ^ (unint64_t)(a1 << 32)) >> 32)) {
        goto LABEL_5;
      }
      goto LABEL_16;
    case 2uLL:
      uint64_t v5 = *(void *)(a1 + 16);
      uint64_t v4 = *(void *)(a1 + 24);
      if (v5 != v4)
      {
        if (a2 >> 62 == 2)
        {
          uint64_t v6 = v4 - 1;
          if (__OFSUB__(v4, 1))
          {
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
          if (v6 < v5)
          {
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
          }
          if (v6 >= v4) {
            goto LABEL_25;
          }
          uint64_t v7 = __DataStorage._bytes.getter();
          if (!v7) {
            goto LABEL_27;
          }
          uint64_t v8 = v7;
          a1 = __DataStorage._offset.getter();
          uint64_t v9 = v6 - a1;
          if (!__OFSUB__(v6, a1)) {
            goto LABEL_19;
          }
          __break(1u);
        }
LABEL_16:
        uint64_t v10 = a1 >> 32;
        if (a1 >> 32 <= (int)a1)
        {
          __break(1u);
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
        uint64_t v11 = __DataStorage._bytes.getter();
        if (v11)
        {
          uint64_t v8 = v11;
          uint64_t v12 = v10 - 1;
          uint64_t v13 = __DataStorage._offset.getter();
          uint64_t v9 = v12 - v13;
          if (!__OFSUB__(v12, v13))
          {
LABEL_19:
            int v2 = 0;
            int v3 = *(unsigned __int8 *)(v8 + v9);
            return v3 | (v2 << 8);
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_27:
        __break(1u);
        JUMPOUT(0x10045B56CLL);
      }
      int v3 = 0;
      int v2 = 1;
      return v3 | (v2 << 8);
    case 3uLL:
      return v3 | (v2 << 8);
    default:
      if ((a2 & 0xFF000000000000) != 0)
      {
        int v2 = 0;
        uint64_t v15 = a1;
        __int16 v16 = a2;
        char v17 = BYTE2(a2);
        char v18 = BYTE3(a2);
        char v19 = BYTE4(a2);
        char v20 = BYTE5(a2);
        int v3 = *((unsigned __int8 *)&v15 + BYTE6(a2) - 1);
      }
      else
      {
LABEL_5:
        int v3 = 0;
      }
      return v3 | (v2 << 8);
  }
}

uint64_t sub_10045B57C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v50 = a3;
  uint64_t v5 = 0;
  uint64_t v53 = sub_10000A844(&qword_100974AD8);
  __chkstk_darwin(v53);
  uint64_t v7 = (uint64_t *)((char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for SHA256();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for SHA256Digest();
  uint64_t v57 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v56 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for String.Encoding();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  __int16 v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String.Encoding.utf8.getter();
  uint64_t v51 = a1;
  uint64_t v52 = a2;
  uint64_t v17 = String.data(using:allowLossyConversion:)();
  unint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v61 = v17;
  unint64_t v62 = v19;
  sub_10000A844(&qword_10096B260);
  Optional.unwrap(_:file:line:)();
  sub_100250CB0(v17, v19);
  unint64_t v20 = *((void *)&v58 + 1);
  uint64_t v21 = v58;
  sub_10045D4BC((unint64_t *)&unk_100974C20, (void (*)(uint64_t))&type metadata accessor for SHA256);
  dispatch thunk of HashFunction.init()();
  unint64_t v55 = v20;
  switch(v20 >> 62)
  {
    case 1uLL:
      if (v21 >> 32 < (int)v21) {
        goto LABEL_14;
      }
      uint64_t v49 = v9;
      unint64_t v28 = v55;
      sub_10025ADCC(v21, v55);
      sub_1006661F0((int)v21, v21 >> 32);
      uint64_t v26 = v21;
      unint64_t v27 = v28;
      uint64_t v9 = v49;
      break;
    case 2uLL:
      uint64_t v49 = 0;
      uint64_t v22 = v9;
      uint64_t v23 = *(void *)(v21 + 16);
      uint64_t v24 = *(void *)(v21 + 24);
      sub_10025ADCC(v21, v20);
      swift_retain();
      swift_retain();
      uint64_t v25 = v23;
      uint64_t v9 = v22;
      uint64_t v5 = v49;
      sub_1006661F0(v25, v24);
      swift_release();
      swift_release();
      goto LABEL_6;
    case 3uLL:
      *(void *)((char *)&v58 + 6) = 0;
      *(void *)&long long v58 = 0;
      goto LABEL_5;
    default:
      *(void *)&long long v58 = v21;
      WORD4(v58) = v20;
      BYTE10(v58) = BYTE2(v20);
      BYTE11(v58) = BYTE3(v20);
      BYTE12(v58) = BYTE4(v20);
      BYTE13(v58) = BYTE5(v20);
LABEL_5:
      dispatch thunk of HashFunction.update(bufferPointer:)();
LABEL_6:
      uint64_t v26 = v21;
      unint64_t v27 = v20;
      break;
  }
  sub_100250CC4(v26, v27);
  unint64_t v29 = (unint64_t)v56;
  dispatch thunk of HashFunction.finalize()();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v30 = v57 + 16;
  unint64_t v31 = *(void (**)(uint64_t *, unint64_t, uint64_t))(v57 + 16);
  uint64_t v32 = v54;
  v31(v7, v29, v54);
  *(uint64_t *)((char *)v7 + *(int *)(v53 + 36)) = 3;
  uint64_t v33 = sub_100666378(v7);
  sub_10045D408((uint64_t)v7);
  if (*(void *)(v33 + 16) != 3)
  {
    __break(1u);
LABEL_14:
    __break(1u);
  }
  uint64_t v53 = v21;
  sub_10045D468(v33);
  int v35 = v34;
  swift_release();
  if (v5)
  {
    swift_unexpectedError();
    __break(1u);
    sub_100250CC4(v30, v29);
    swift_unexpectedError();
    __break(1u);
    JUMPOUT(0x10045BC34);
  }
  uint64_t v59 = v32;
  uint64_t v60 = sub_10045D4BC(&qword_100974AE0, (void (*)(uint64_t))&type metadata accessor for SHA256Digest);
  os_log_type_t v36 = sub_100278AE4((uint64_t *)&v58);
  BOOL v37 = v56;
  v31(v36, (unint64_t)v56, v32);
  sub_10026BB6C(&v58, v59);
  dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
  uint64_t v39 = v61;
  unint64_t v38 = v62;
  sub_10024D338((uint64_t)&v58);
  uint64_t v40 = sub_10045D504(v39, v38);
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  sub_100250CC4(v39, v38);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v37, v32);
  sub_100250CC4(v53, v55);
  uint64_t result = swift_bridgeObjectRetain();
  v48 = v50;
  *uint64_t v50 = v51;
  v48[1] = result;
  v48[2] = v40;
  v48[3] = v42;
  v48[4] = v44;
  v48[5] = v46;
  *((unsigned char *)v48 + 50) = BYTE2(v35);
  *((_WORD *)v48 + 24) = v35;
  *((unsigned char *)v48 + 51) = 0;
  return result;
}

unint64_t sub_10045BC44()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_10045BC60(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v5) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      uint64_t v5 = (int)v5;
LABEL_6:
      if (v5 != 3) {
        goto LABEL_34;
      }
      sub_10025ADCC(a1, a2);
      sub_1005474E0(2, a1, a2, &v22);
      uint64_t v9 = v22;
      unint64_t v10 = v23;
      unint64_t v11 = v23 >> 62;
      switch(v23 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(v22) - v22;
          if (__OFSUB__(HIDWORD(v22), v22)) {
            goto LABEL_29;
          }
          uint64_t v12 = (int)v12;
LABEL_12:
          if (v12 != 2) {
            goto LABEL_35;
          }
          if (!v11)
          {
            uint64_t v15 = BYTE6(v23);
            goto LABEL_21;
          }
          if (v11 != 1)
          {
            uint64_t v17 = *(void *)(v22 + 16);
            uint64_t v16 = *(void *)(v22 + 24);
            uint64_t v15 = v16 - v17;
            if (!__OFSUB__(v16, v17))
            {
              swift_retain();
              goto LABEL_20;
            }
LABEL_32:
            __break(1u);
LABEL_33:
            __break(1u);
LABEL_34:
            __break(1u);
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
            JUMPOUT(0x10045BE70);
          }
          if (__OFSUB__(HIDWORD(v22), v22)) {
            goto LABEL_31;
          }
          uint64_t v15 = HIDWORD(v22) - (int)v22;
LABEL_20:
          swift_retain();
LABEL_21:
          if (v15 != 2) {
            goto LABEL_36;
          }
          unsigned __int16 v18 = sub_1002C8C2C(v9, v10);
          sub_100250CC4(v9, v10);
          if (v2)
          {
            sub_100250CC4(a1, a2);
            return sub_100250CC4(v9, v10);
          }
          __int16 v20 = sub_10045B39C(a1, a2);
          if ((v20 & 0x100) != 0) {
            goto LABEL_33;
          }
          unsigned __int8 v21 = v20;
          sub_100250CC4(a1, a2);
          sub_100250CC4(v9, v10);
          return v18 | (v21 << 16);
        case 2uLL:
          uint64_t v14 = *(void *)(v22 + 16);
          uint64_t v13 = *(void *)(v22 + 24);
          BOOL v8 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v8) {
            goto LABEL_12;
          }
          goto LABEL_30;
        case 3uLL:
          goto LABEL_35;
        default:
          uint64_t v12 = BYTE6(v23);
          goto LABEL_12;
      }
    case 2uLL:
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      BOOL v8 = __OFSUB__(v6, v7);
      uint64_t v5 = v6 - v7;
      if (!v8) {
        goto LABEL_6;
      }
      goto LABEL_28;
    case 3uLL:
      goto LABEL_34;
    default:
      uint64_t v5 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t LongHash.init<A>(data:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  unint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a2);
  uint64_t v11 = *(void *)(a3 + 8);
  uint64_t v12 = dispatch thunk of Collection.count.getter();
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t result = v13(v10, a2);
  if (v12 != 32)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  unint64_t v15 = sub_10045C068();
  unint64_t v16 = sub_10045C0BC();
  uint64_t result = sub_1002C1484(a1, 8, (uint64_t)&type metadata for UInt8, &type metadata for UInt64, a2, v15, v16, v11);
  if (v3)
  {
    v13((char *)a1, a2);
    return v4;
  }
  unint64_t v17 = *(void *)(result + 16);
  if (!v17) {
    goto LABEL_11;
  }
  if (v17 == 1)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v17 < 3)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v17 != 3)
  {
    uint64_t v4 = *(void *)(result + 32);
    swift_bridgeObjectRelease();
    v13((char *)a1, a2);
    return v4;
  }
LABEL_14:
  __break(1u);
  return result;
}

unint64_t sub_10045C068()
{
  unint64_t result = qword_100974AA8;
  if (!qword_100974AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100974AA8);
  }
  return result;
}

unint64_t sub_10045C0BC()
{
  unint64_t result = qword_100974AB0;
  if (!qword_100974AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100974AB0);
  }
  return result;
}

void ShortHash.hash(into:)(int a1, Swift::UInt16 a2)
{
}

BOOL static ShortHash.__derived_struct_equals(_:_:)(__int16 a1, __int16 a2)
{
  return a1 == a2;
}

Swift::Int ShortHash.hashValue.getter(Swift::UInt16 a1)
{
  return Hasher._finalize()();
}

Swift::Int sub_10045C190()
{
  Swift::UInt16 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10045C1D8()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10045C204()
{
  Swift::UInt16 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

BOOL sub_10045C248(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 == *a2;
}

void MediumHash.hash(into:)(int a1, unsigned int a2)
{
  unsigned int v2 = HIWORD(a2);
  Hasher._combine(_:)(a2);
  Hasher._combine(_:)(v2);
}

BOOL static MediumHash.__derived_struct_equals(_:_:)(int a1, int a2)
{
  return (a1 & 0xFFFFFF) == (a2 & 0xFFFFFF);
}

Swift::Int MediumHash.hashValue.getter(unsigned int a1)
{
  Swift::UInt16 v1 = a1;
  unsigned int v2 = HIWORD(a1);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

Swift::Int sub_10045C304()
{
  Swift::UInt16 v1 = *(_WORD *)v0;
  Swift::UInt8 v2 = *(unsigned char *)(v0 + 2);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_10045C364()
{
  Swift::UInt8 v1 = *(unsigned char *)(v0 + 2);
  Hasher._combine(_:)(*(_WORD *)v0);
  Hasher._combine(_:)(v1);
}

Swift::Int sub_10045C3A4()
{
  Swift::UInt16 v1 = *(_WORD *)v0;
  Swift::UInt8 v2 = *(unsigned char *)(v0 + 2);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

BOOL sub_10045C400(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 == *a2 && *((unsigned __int8 *)a1 + 2) == *((unsigned __int8 *)a2 + 2);
}

void LongHash.hash(into:)(int a1, Swift::UInt64 a2, Swift::UInt64 a3, Swift::UInt64 a4, Swift::UInt64 a5)
{
}

Swift::Int LongHash.hashValue.getter(Swift::UInt64 a1, Swift::UInt64 a2, Swift::UInt64 a3, Swift::UInt64 a4)
{
  return Hasher._finalize()();
}

void *sub_10045C500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v29 = a4;
  for (uint64_t i = 32; i != 64; i += 8)
  {
    uint64_t v5 = *(void *)&v25[i];
    uint64_t v6 = sub_100253724(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v8 = *((void *)v6 + 2);
    unint64_t v7 = *((void *)v6 + 3);
    unint64_t v9 = v8 + 1;
    if (v8 >= v7 >> 1) {
      uint64_t v6 = sub_100253724((char *)(v7 > 1), v8 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v9;
    v6[v8 + 32] = v5;
    unint64_t v10 = *((void *)v6 + 3);
    unint64_t v11 = v8 + 2;
    if (v9 >= v10 >> 1) {
      uint64_t v6 = sub_100253724((char *)(v10 > 1), v9 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v11;
    v6[v9 + 32] = BYTE1(v5);
    unint64_t v12 = *((void *)v6 + 3);
    unint64_t v13 = v9 + 2;
    if (v11 >= v12 >> 1) {
      uint64_t v6 = sub_100253724((char *)(v12 > 1), v11 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v13;
    v6[v11 + 32] = BYTE2(v5);
    unint64_t v14 = *((void *)v6 + 3);
    unint64_t v15 = v11 + 2;
    if (v13 >= v14 >> 1) {
      uint64_t v6 = sub_100253724((char *)(v14 > 1), v13 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v15;
    v6[v13 + 32] = BYTE3(v5);
    unint64_t v16 = *((void *)v6 + 3);
    unint64_t v17 = v13 + 2;
    if (v15 >= v16 >> 1) {
      uint64_t v6 = sub_100253724((char *)(v16 > 1), v15 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v17;
    v6[v15 + 32] = BYTE4(v5);
    unint64_t v18 = *((void *)v6 + 3);
    unint64_t v19 = v15 + 2;
    if (v17 >= v18 >> 1) {
      uint64_t v6 = sub_100253724((char *)(v18 > 1), v17 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v19;
    v6[v17 + 32] = BYTE5(v5);
    unint64_t v20 = *((void *)v6 + 3);
    unint64_t v21 = v17 + 2;
    if (v19 >= v20 >> 1) {
      uint64_t v6 = sub_100253724((char *)(v20 > 1), v19 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v21;
    v6[v19 + 32] = BYTE6(v5);
    unint64_t v22 = *((void *)v6 + 3);
    unint64_t v23 = v19 + 2;
    if (v21 >= v22 >> 1) {
      uint64_t v6 = sub_100253724((char *)(v22 > 1), v21 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v23;
    v6[v21 + 32] = HIBYTE(v5);
    sub_1003D4A38((uint64_t)v6);
  }
  return _swiftEmptyArrayStorage;
}

Swift::Int sub_10045C768()
{
  Swift::UInt64 v1 = *v0;
  Swift::UInt64 v2 = v0[1];
  Swift::UInt64 v3 = v0[2];
  Swift::UInt64 v4 = v0[3];
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

void sub_10045C7E8()
{
  Swift::UInt64 v1 = v0[1];
  Swift::UInt64 v2 = v0[2];
  Swift::UInt64 v3 = v0[3];
  Hasher._combine(_:)(*v0);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
}

Swift::Int sub_10045C840()
{
  Swift::UInt64 v1 = *v0;
  Swift::UInt64 v2 = v0[1];
  Swift::UInt64 v3 = v0[2];
  Swift::UInt64 v4 = v0[3];
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

BOOL sub_10045C8BC(Swift::UInt64 *a1, Swift::UInt64 *a2)
{
  return _s16DaemoniOSLibrary8LongHashV2eeoiySbAC_ACtFZ_0(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t static SDHashStoreContact.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 == a5 && a2 == a6 || (char v12 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v12 & 1) != 0))
  {
    if (a3 == a7 && a4 == a8)
    {
      return 1;
    }
    else
    {
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  return result;
}

uint64_t SDHashStoreContact.hash(into:)()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int SDHashStoreContact.hashValue.getter()
{
  return Hasher._finalize()();
}

Swift::Int sub_10045CA9C()
{
  return Hasher._finalize()();
}

uint64_t sub_10045CB24()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10045CBA8()
{
  return Hasher._finalize()();
}

uint64_t sub_10045CC2C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  return result;
}

BOOL _s16DaemoniOSLibrary8LongHashV2eeoiySbAC_ACtFZ_0(Swift::UInt64 a1, Swift::UInt64 a2, Swift::UInt64 a3, Swift::UInt64 a4, Swift::UInt64 a5, Swift::UInt64 a6, Swift::UInt64 a7, Swift::UInt64 a8)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Hasher._combine(_:)(a2);
  Hasher._combine(_:)(a3);
  Hasher._combine(_:)(a4);
  Swift::Int v16 = Hasher._finalize()();
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a5);
  Hasher._combine(_:)(a6);
  Hasher._combine(_:)(a7);
  Hasher._combine(_:)(a8);
  return v16 == Hasher._finalize()();
}

unint64_t sub_10045CDCC()
{
  unint64_t result = qword_100974AB8;
  if (!qword_100974AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100974AB8);
  }
  return result;
}

unint64_t sub_10045CE24()
{
  unint64_t result = qword_100974AC0;
  if (!qword_100974AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100974AC0);
  }
  return result;
}

unint64_t sub_10045CE7C()
{
  unint64_t result = qword_100974AC8;
  if (!qword_100974AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100974AC8);
  }
  return result;
}

unint64_t sub_10045CED4()
{
  unint64_t result = qword_100974AD0;
  if (!qword_100974AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100974AD0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShortHash()
{
  return &type metadata for ShortHash;
}

uint64_t initializeBufferWithCopyOfBuffer for MediumHash(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for MediumHash(unsigned __int16 *a1, int a2)
{
  if (a2)
  {
    if ((a2 + 0x1FFFFFF) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 0xFFFFFF;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 0xFFFFFF;
      }
    }
  }
  return 0;
}

uint64_t storeEnumTagSinglePayload for MediumHash(uint64_t result, int a2, int a3)
{
  if ((a3 + 0x1FFFFFF) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (!a3) {
    int v3 = 0;
  }
  if (a2)
  {
    *(_WORD *)unint64_t result = a2 - 1;
    *(unsigned char *)(result + 2) = (a2 - 1) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 1) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else if (v3)
  {
    if (v3 == 2) {
      *(_WORD *)(result + 3) = 0;
    }
    else {
      *(unsigned char *)(result + 3) = 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediumHash()
{
  return &type metadata for MediumHash;
}

ValueMetadata *type metadata accessor for LongHash()
{
  return &type metadata for LongHash;
}

void *initializeWithCopy for UserProfile(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for UserProfile(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for UserProfile(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UserProfile(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserProfile(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDHashStoreContact()
{
  return &type metadata for SDHashStoreContact;
}

uint64_t destroy for UserProfile()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SDAirDropHashStoreEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SDAirDropHashStoreEntry(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  return a1;
}

__n128 initializeWithTake for SDAirDropHashStoreEntry(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SDAirDropHashStoreEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDAirDropHashStoreEntry(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 68)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDAirDropHashStoreEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 68) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 68) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropHashStoreEntry()
{
  return &type metadata for SDAirDropHashStoreEntry;
}

uint64_t sub_10045D408(uint64_t a1)
{
  uint64_t v2 = sub_10000A844(&qword_100974AD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10045D468(uint64_t a1)
{
  if (*(void *)(a1 + 16) == 3) {
    sub_1002C9A80(a1, a1 + 32, 0, 5uLL);
  }
  else {
    __break(1u);
  }
}

uint64_t sub_10045D4BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10045D504(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v4) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_18;
      }
      uint64_t v4 = (int)v4;
LABEL_6:
      if (v4 != 32) {
        goto LABEL_20;
      }
      unint64_t v8 = sub_10045AFDC(a1, a2, 8);
      if (v3) {
        return v2;
      }
      unint64_t v9 = v8[2];
      if (!v9)
      {
        __break(1u);
        goto LABEL_15;
      }
      if (v9 == 1)
      {
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
      if (v9 < 3)
      {
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
        JUMPOUT(0x10045D5F0);
      }
      if (v9 == 3) {
        goto LABEL_17;
      }
      uint64_t v2 = v8[4];
      swift_bridgeObjectRelease();
      return v2;
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v4 = v5 - v6;
      if (!v7) {
        goto LABEL_6;
      }
      goto LABEL_19;
    case 3uLL:
      goto LABEL_20;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

unint64_t sub_10045D600()
{
  unint64_t result = qword_10096D480;
  if (!qword_10096D480)
  {
    sub_100247840(&qword_10096D478);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096D480);
  }
  return result;
}

BOOL sub_10045D660()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v16 - v9;
  swift_beginAccess();
  if (*(void *)(*(void *)(v0 + 40) + 16) < 3uLL) {
    return 0;
  }
  uint64_t v11 = swift_bridgeObjectRetain();
  sub_10043F15C(v11, v3);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10033FEB0((uint64_t)v3);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
  Date.init()();
  Date.timeIntervalSince(_:)();
  double v14 = v13;
  unint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return v14 <= 30.0;
}

id sub_10045D868()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v28 - v10;
  __chkstk_darwin(v9);
  double v13 = (char *)&v28 - v12;
  double v14 = (unint64_t *)(v0 + 40);
  swift_beginAccess();
  if (*(void *)(*(void *)(v0 + 40) + 16) >= 3uLL)
  {
    uint64_t v15 = swift_bridgeObjectRetain();
    sub_10043F15C(v15, v3);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_10033FEB0((uint64_t)v3);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v13, v3, v4);
      Date.init()();
      Date.timeIntervalSince(_:)();
      double v17 = v16;
      unint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
      v18(v11, v4);
      id result = (id)((uint64_t (*)(char *, uint64_t))v18)(v13, v4);
      if (v17 <= 30.0) {
        return result;
      }
    }
  }
  uint64_t v20 = swift_bridgeObjectRetain();
  *double v14 = sub_10045DC74(v20);
  swift_bridgeObjectRelease();
  Date.init()();
  swift_beginAccess();
  unint64_t v21 = *v14;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *double v14 = v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v21 = sub_100253C50(0, *(void *)(v21 + 16) + 1, 1, v21);
    *double v14 = v21;
  }
  unint64_t v24 = *(void *)(v21 + 16);
  unint64_t v23 = *(void *)(v21 + 24);
  if (v24 >= v23 >> 1)
  {
    unint64_t v21 = sub_100253C50(v23 > 1, v24 + 1, 1, v21);
    *double v14 = v21;
  }
  *(void *)(v21 + 16) = v24 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v21+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v24, v8, v4);
  swift_endAccess();
  id result = (id)airdrop_log();
  if (result)
  {
    uint64_t v25 = result;
    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_10076E7A0;
    unint64_t v27 = *v14;
    *(void *)(v26 + 56) = sub_10000A844(&qword_100974BD0);
    *(void *)(v26 + 64) = sub_10045E058();
    *(void *)(v26 + 32) = v27;
    swift_bridgeObjectRetain();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10045DC18()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDAirDropRateLimiter()
{
  return self;
}

uint64_t sub_10045DC74(uint64_t a1)
{
  uint64_t v2 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v2 - 8);
  uint64_t v43 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v42 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v41 = (char *)v31 - v9;
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v31 - v11;
  uint64_t v45 = _swiftEmptyArrayStorage;
  uint64_t v13 = a1;
  uint64_t v40 = *(void *)(a1 + 16);
  if (v40)
  {
    unint64_t v14 = 0;
    uint64_t v36 = v5;
    uint64_t v37 = v5 + 48;
    uint64_t v15 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
    int v34 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
    int v35 = (char *)v31 - v11;
    uint64_t v38 = v5 + 56;
    uint64_t v39 = v5 + 16;
    v31[1] = (v5 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v32 = a1;
    uint64_t v16 = (uint64_t)v43;
    while (v14 < *(void *)(v13 + 16))
    {
      unint64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v18 = *(void *)(v5 + 72);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))(v16, v13 + v17 + v18 * v14, v4);
      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v33(v16, 0, 1, v4);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v16, 1, v4) == 1) {
        goto LABEL_15;
      }
      unint64_t v44 = v17;
      unint64_t v19 = *v15;
      (*v15)(v12, v16, v4);
      uint64_t v20 = v41;
      Date.init()();
      Date.timeIntervalSince(_:)();
      double v22 = v21;
      unint64_t v23 = v15;
      unint64_t v24 = v12;
      uint64_t v25 = *v34;
      (*v34)(v20, v4);
      if (v22 > 10.0)
      {
        uint64_t result = v25(v24, v4);
        uint64_t v15 = v23;
      }
      else
      {
        v19(v42, (uint64_t)v24, v4);
        uint64_t v26 = v45;
        uint64_t v15 = v23;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1002555F0(0, v26[2] + 1, 1);
          uint64_t v26 = v45;
        }
        unint64_t v27 = v44;
        unint64_t v29 = v26[2];
        unint64_t v28 = v26[3];
        unint64_t v30 = v29 + 1;
        if (v29 >= v28 >> 1)
        {
          sub_1002555F0(v28 > 1, v29 + 1, 1);
          unint64_t v30 = v29 + 1;
          uint64_t v26 = v45;
        }
        v26[2] = v30;
        uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v19)((char *)v26 + v27 + v29 * v18, v42, v4);
        uint64_t v45 = v26;
        uint64_t v13 = v32;
      }
      ++v14;
      uint64_t v16 = (uint64_t)v43;
      uint64_t v12 = v35;
      uint64_t v5 = v36;
      if (v40 == v14)
      {
        v33((uint64_t)v43, 1, 1, v4);
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v16 = (uint64_t)v43;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v43, 1, 1, v4);
LABEL_15:
    swift_bridgeObjectRelease();
    sub_10033FEB0(v16);
    return (uint64_t)v45;
  }
  return result;
}

unint64_t sub_10045E058()
{
  unint64_t result = qword_100974BD8;
  if (!qword_100974BD8)
  {
    sub_100247840(&qword_100974BD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100974BD8);
  }
  return result;
}

void *sub_10045E0B4(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2 >> 62;
  uint64_t v3 = _swiftEmptyArrayStorage;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_43;
      }
      uint64_t v4 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (!v4) {
        return v3;
      }
      unint64_t v29 = _swiftEmptyArrayStorage;
      int64_t v7 = v4 & ~(v4 >> 63);
      sub_100255510(0, v7, 0);
      uint64_t v3 = _swiftEmptyArrayStorage;
      if (v2)
      {
        if (v2 == 1) {
          uint64_t v8 = (int)a1;
        }
        else {
          uint64_t v8 = *(void *)(a1 + 16);
        }
        if (v4 < 0)
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
        }
      }
      else
      {
        if (v4 < 0) {
          goto LABEL_45;
        }
        uint64_t v8 = 0;
      }
      int v25 = v2;
      do
      {
        if (!v7)
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        if (v2)
        {
          if (v2 == 1)
          {
            if (v8 < (int)a1 || v8 >= a1 >> 32) {
              goto LABEL_36;
            }
            uint64_t v9 = __DataStorage._bytes.getter();
            if (!v9) {
              goto LABEL_46;
            }
            uint64_t v10 = v9;
            uint64_t v11 = __DataStorage._offset.getter();
            uint64_t v12 = v8 - v11;
            if (__OFSUB__(v8, v11)) {
              goto LABEL_39;
            }
          }
          else
          {
            if (v8 < *(void *)(a1 + 16)) {
              goto LABEL_38;
            }
            if (v8 >= *(void *)(a1 + 24)) {
              goto LABEL_40;
            }
            uint64_t v14 = __DataStorage._bytes.getter();
            if (!v14) {
              goto LABEL_47;
            }
            uint64_t v10 = v14;
            uint64_t v15 = __DataStorage._offset.getter();
            uint64_t v12 = v8 - v15;
            if (__OFSUB__(v8, v15)) {
              goto LABEL_41;
            }
          }
          char v13 = *(unsigned char *)(v10 + v12);
        }
        else
        {
          if (v8 >= BYTE6(a2)) {
            goto LABEL_37;
          }
          uint64_t v26 = a1;
          int v27 = a2;
          __int16 v28 = WORD2(a2);
          char v13 = *((unsigned char *)&v26 + v8);
        }
        sub_10000A844((uint64_t *)&unk_10096EE60);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_10076E7A0;
        *(void *)(v16 + 56) = &type metadata for UInt8;
        *(void *)(v16 + 64) = &protocol witness table for UInt8;
        *(unsigned char *)(v16 + 32) = v13;
        unint64_t v2 = String.init(format:_:)();
        uint64_t v18 = v17;
        unint64_t v29 = v3;
        unint64_t v20 = v3[2];
        unint64_t v19 = v3[3];
        if (v20 >= v19 >> 1)
        {
          sub_100255510(v19 > 1, v20 + 1, 1);
          uint64_t v3 = v29;
        }
        v3[2] = v20 + 1;
        double v21 = &v3[2 * v20];
        v21[4] = v2;
        v21[5] = v18;
        ++v8;
        --v7;
        --v4;
        LODWORD(v2) = v25;
      }
      while (v4);
      return v3;
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      uint64_t v4 = v5 - v6;
      if (!__OFSUB__(v5, v6)) {
        goto LABEL_6;
      }
      goto LABEL_44;
    case 3uLL:
      return v3;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

void *sub_10045E458(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  int64_t v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v17 = _swiftEmptyArrayStorage;
    sub_100255444(0, v6, 0);
    uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v8 = v3 + 16;
    uint64_t v15 = v9;
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
    uint64_t v11 = *(void *)(v8 + 56);
    do
    {
      v15(v5, v10, v2);
      swift_dynamicCast();
      int64_t v7 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100255444(0, v7[2] + 1, 1);
        int64_t v7 = v17;
      }
      unint64_t v13 = v7[2];
      unint64_t v12 = v7[3];
      if (v13 >= v12 >> 1)
      {
        sub_100255444(v12 > 1, v13 + 1, 1);
        int64_t v7 = v17;
      }
      v7[2] = v13 + 1;
      sub_100249444(&v16, &v7[4 * v13 + 4]);
      v10 += v11;
      --v6;
    }
    while (v6);
  }
  return v7;
}

void *sub_10045E628(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    sub_100255444(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = _swiftEmptyArrayStorage;
    do
    {
      swift_bridgeObjectRetain();
      sub_10000A844((uint64_t *)&unk_10096B2A0);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100255444(0, v2[2] + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_100255444(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v2[2] = v6 + 1;
      sub_100249444(&v8, &v2[4 * v6 + 4]);
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_10045E758(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  unint64_t v13 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100255444(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_10000B740(0, (unint64_t *)&qword_100974C50);
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100255444(0, v3[2] + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = v3[2];
        unint64_t v6 = v3[3];
        if (v7 >= v6 >> 1)
        {
          sub_100255444(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        v3[2] = v7 + 1;
        sub_100249444(v12, &v3[4 * v7 + 4]);
      }
    }
    else
    {
      long long v8 = (id *)(a1 + 32);
      sub_10000B740(0, (unint64_t *)&qword_100974C50);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100255444(0, v3[2] + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = v3[2];
        unint64_t v10 = v3[3];
        if (v11 >= v10 >> 1)
        {
          sub_100255444(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        v3[2] = v11 + 1;
        sub_100249444(v12, &v3[4 * v11 + 4]);
        ++v8;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

void *sub_10045E9BC(uint64_t a1)
{
  return sub_10045F1B4(a1, (unint64_t *)&qword_100974C50);
}

void *sub_10045E9D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    unint64_t v6 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v4 = a1 + 32;
    do
    {
      sub_10024D2D4(v4, (uint64_t)&v5);
      sub_10000A844(&qword_100972450);
      swift_dynamicCast();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v4 += 32;
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t sub_10045EABC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  unint64_t v13 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100255444(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        type metadata accessor for SecCertificate(0);
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100255444(0, v3[2] + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = v3[2];
        unint64_t v6 = v3[3];
        if (v7 >= v6 >> 1)
        {
          sub_100255444(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        v3[2] = v7 + 1;
        sub_100249444(v12, &v3[4 * v7 + 4]);
      }
    }
    else
    {
      long long v8 = (id *)(a1 + 32);
      type metadata accessor for SecCertificate(0);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100255444(0, v3[2] + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = v3[2];
        unint64_t v10 = v3[3];
        if (v11 >= v10 >> 1)
        {
          sub_100255444(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        v3[2] = v11 + 1;
        sub_100249444(v12, &v3[4 * v11 + 4]);
        ++v8;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

void *sub_10045ECF0(uint64_t a1)
{
  return sub_10045ED68(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_100255570, &qword_10096B400, (uint64_t *)&unk_10096B440, (void (*)(unsigned char *, void *))sub_1002AF688);
}

void *sub_10045ED2C(uint64_t a1)
{
  return sub_10045ED68(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_100255570, (uint64_t *)&unk_10096B410, (uint64_t *)&unk_10096B440, (void (*)(unsigned char *, void *))sub_1002AF688);
}

void *sub_10045ED68(uint64_t a1, void (*a2)(BOOL, uint64_t, uint64_t), uint64_t *a3, uint64_t *a4, void (*a5)(unsigned char *, void *))
{
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    a2(0, v5, 0);
    uint64_t v12 = a1 + 32;
    unint64_t v6 = _swiftEmptyArrayStorage;
    do
    {
      sub_100278C8C(v12, (uint64_t)v16);
      sub_10000A844(a3);
      sub_10000A844(a4);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        a2(0, v6[2] + 1, 1);
        unint64_t v6 = v18;
      }
      unint64_t v14 = v6[2];
      unint64_t v13 = v6[3];
      if (v14 >= v13 >> 1)
      {
        a2(v13 > 1, v14 + 1, 1);
        unint64_t v6 = v18;
      }
      v6[2] = v14 + 1;
      a5(v17, &v6[5 * v14 + 4]);
      v12 += 40;
      --v5;
    }
    while (v5);
  }
  return v6;
}

void *sub_10045EEBC(uint64_t a1)
{
  return sub_10045ED68(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_100255570, &qword_10096B3A8, (uint64_t *)&unk_10096B440, (void (*)(unsigned char *, void *))sub_1002AF688);
}

void *sub_10045EEF8(uint64_t a1)
{
  return sub_10045ED68(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_100255570, &qword_10096B3B8, (uint64_t *)&unk_10096B440, (void (*)(unsigned char *, void *))sub_1002AF688);
}

uint64_t sub_10045EF34(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  uint64_t v17 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1002555C0(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v17 = v3;
        unint64_t v8 = v3[2];
        unint64_t v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_1002555C0(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v17;
        }
        ++v5;
        uint64_t v15 = sub_10000B740(0, &qword_10097BB60);
        long long v16 = &off_1008E2510;
        *(void *)&long long v14 = v6;
        v3[2] = v8 + 1;
        sub_1002AF688(&v14, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      id v9 = (void **)(a1 + 32);
      do
      {
        unint64_t v10 = *v9;
        uint64_t v17 = v3;
        unint64_t v12 = v3[2];
        unint64_t v11 = v3[3];
        id v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_1002555C0(v11 > 1, v12 + 1, 1);
          uint64_t v3 = v17;
        }
        uint64_t v15 = sub_10000B740(0, &qword_10097BB60);
        long long v16 = &off_1008E2510;
        *(void *)&long long v14 = v13;
        v3[2] = v12 + 1;
        sub_1002AF688(&v14, (uint64_t)&v3[5 * v12 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

void *sub_10045F128(uint64_t a1)
{
  return sub_10045ED68(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_10025587C, &qword_10096B3A8, (uint64_t *)&unk_100972440, (void (*)(unsigned char *, void *))sub_1002AF688);
}

void *sub_10045F164(uint64_t a1)
{
  return sub_10045ED68(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_10025587C, &qword_10096B3B8, (uint64_t *)&unk_100972440, (void (*)(unsigned char *, void *))sub_1002AF688);
}

void *sub_10045F1A0(uint64_t a1)
{
  return sub_10045F1B4(a1, (unint64_t *)&unk_100974C40);
}

void *sub_10045F1B4(uint64_t a1, unint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v3)
  {
    unint64_t v8 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v6 = a1 + 32;
    do
    {
      sub_10024D2D4(v6, (uint64_t)&v7);
      sub_10000B740(0, a2);
      swift_dynamicCast();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v6 += 32;
      --v3;
    }
    while (v3);
    return v8;
  }
  return result;
}

void *sub_10045F2A8(uint64_t a1)
{
  return sub_10045ED68(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_1002558E8, (uint64_t *)&unk_10096B410, &qword_10096B430, (void (*)(unsigned char *, void *))sub_1002AF688);
}

void *sub_10045F2E4(uint64_t a1)
{
  return sub_10045ED68(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_1002558E8, &qword_10096B400, &qword_10096B430, (void (*)(unsigned char *, void *))sub_1002AF688);
}

sec_identity_t sub_10045F320()
{
  id v1 = [v0 copyMyAppleIDSecIdentity];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = [v0 copyMyAppleIDIntermediateCertificate];
  if (!v3)
  {

    return 0;
  }
  uint64_t v4 = v3;
  sub_10000A844(&qword_10096B3E0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100773BD0;
  *(void *)(v5 + 32) = v4;
  specialized Array._endMutation()();
  type metadata accessor for SecCertificate(0);
  id v6 = v4;
  CFArrayRef isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sec_identity_t v8 = sec_identity_create_with_certificates((SecIdentityRef)v2, isa);

  return v8;
}

uint64_t sub_10045F40C(uint64_t a1, uint64_t a2, __SecTrust *a3)
{
  id v3 = sub_100051754(a3);
  if (!v3) {
    __break(1u);
  }
  uint64_t v4 = v3;
  static Array._conditionallyBridgeFromObjectiveC(_:result:)();

  return 0;
}

uint64_t sub_10045F6E0()
{
  return sub_100460B34(&kSFOperationDiscoverableModeEveryone);
}

uint64_t sub_10045F6EC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!a4)
  {
    if (!a2) {
      return 0;
    }
    goto LABEL_8;
  }
  if (a4 == 1)
  {
    if (a2 == 1) {
      return 0;
    }
    goto LABEL_8;
  }
  if (a2 < 2)
  {
LABEL_8:
    BOOL v4 = a4 == 0;
    if (a2 != 1) {
      BOOL v4 = a4 < 2;
    }
    return a2 && v4;
  }
  if (a3 == a1 && a4 == a2) {
    return 0;
  }
  char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t result = 0;
  if ((v6 & 1) == 0)
  {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  return result;
}

unint64_t sub_10045F7D8()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v56 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v3 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SHA256();
  unint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SHA256Digest();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [v0 nextAirDropID];
  if (v12)
  {
    id v13 = v12;
    if (qword_100969E28 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10000B47C(v14, (uint64_t)qword_100974BE0);
    id v15 = v13;
    long long v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      unint64_t v19 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 138412290;
      uint64_t v59 = (uint64_t)v15;
      id v20 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v19 = v13;

      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Returning cached AirDropID %@", v18, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    unint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    unint64_t v53 = v5;
    uint64_t v54 = v3;
    id v52 = v0;
    id v21 = [v0 bluetoothAddress];
    if (v21)
    {
      double v22 = v21;
      uint64_t v51 = v9;
      unint64_t v55 = (uint64_t *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v24 = v23;

      unint64_t object = v24;
      unint64_t v26 = v24 >> 62;
      unint64_t v5 = (unint64_t)v11;
      uint64_t v27 = v8;
      id v3 = v7;
      switch(v26)
      {
        case 1uLL:
          if ((int)v55 == (uint64_t)v55 >> 32) {
            goto LABEL_16;
          }
          goto LABEL_13;
        case 2uLL:
          if (v55[2] == v55[3]) {
            goto LABEL_16;
          }
LABEL_13:
          sub_1004633EC((unint64_t *)&unk_100974C20, (void (*)(uint64_t))&type metadata accessor for SHA256);
          dispatch thunk of HashFunction.init()();
          if (v26 == 2)
          {
            uint64_t v30 = (uint64_t)v55;
            uint64_t v31 = v55[2];
            uint64_t v32 = v55[3];
            sub_10025ADCC((uint64_t)v55, object);
            swift_retain();
            swift_retain();
            sub_1006661F0(v31, v32);
            swift_release();
            swift_release();
          }
          else
          {
            uint64_t v30 = (uint64_t)v55;
            if (v30 >> 32 < (int)v30) {
              __break(1u);
            }
            sub_10025ADCC((uint64_t)v55, object);
            sub_1006661F0((int)v30, v30 >> 32);
          }
          sub_100250CC4(v30, object);
          goto LABEL_26;
        case 3uLL:
          goto LABEL_16;
        default:
          if ((object & 0xFF000000000000) == 0)
          {
LABEL_16:
            sub_100250CC4((uint64_t)v55, object);
            break;
          }
          sub_1004633EC((unint64_t *)&unk_100974C20, (void (*)(uint64_t))&type metadata accessor for SHA256);
          dispatch thunk of HashFunction.init()();
          uint64_t v28 = (uint64_t)v55;
          uint64_t v59 = (uint64_t)v55;
          __int16 v60 = object;
          char v61 = BYTE2(object);
          char v62 = BYTE3(object);
          char v63 = BYTE4(object);
          char v64 = BYTE5(object);
          dispatch thunk of HashFunction.update(bufferPointer:)();
          sub_100250CC4(v28, object);
LABEL_26:
          dispatch thunk of HashFunction.finalize()();
          (*(void (**)(char *, uint64_t))(v53 + 8))(v3, v4);
          uint64_t v65 = v27;
          uint64_t v66 = sub_1004633EC(&qword_100974AE0, (void (*)(uint64_t))&type metadata accessor for SHA256Digest);
          uint64_t v40 = sub_100278AE4(&v59);
          uint64_t v41 = v51;
          (*(void (**)(uint64_t *, unint64_t, uint64_t))(v51 + 16))(v40, v5, v27);
          sub_10026BB6C(&v59, v65);
          dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
          (*(void (**)(unint64_t, uint64_t))(v41 + 8))(v5, v27);
          uint64_t v38 = v57;
          unint64_t v5 = v58;
          sub_10024D338((uint64_t)&v59);
          uint64_t v59 = (uint64_t)sub_10045E0B4(v38, v5);
          sub_10000A844((uint64_t *)&unk_100974C30);
          sub_1002FE630();
          BidirectionalCollection<>.joined(separator:)();
          swift_bridgeObjectRelease();
          String.index(_:offsetBy:)();
          String.subscript.getter();
          swift_bridgeObjectRelease();
          unint64_t v29 = static String._fromSubstring(_:)();
          id v3 = v42;
          swift_bridgeObjectRelease();
          if (qword_100969E28 == -1) {
            goto LABEL_27;
          }
          goto LABEL_34;
      }
    }
    if (qword_100969E28 != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    sub_10000B47C(v33, (uint64_t)qword_100974BE0);
    int v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    BOOL v36 = os_log_type_enabled(v34, v35);
    uint64_t v37 = v56;
    uint64_t v38 = (uint64_t)v54;
    if (v36)
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Bluetooth Address missing - using random UUID", v39, 2u);
      swift_slowDealloc();
    }

    UUID.init()();
    UUID.uuidString.getter();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v1);
    unint64_t object = (unint64_t)String.lowercased()()._object;
    swift_bridgeObjectRelease();
    unint64_t v29 = String.index(_:offsetBy:)();
    if ((unint64_t)String.index(_:offsetBy:)() >> 14 < v29 >> 14)
    {
      __break(1u);
LABEL_34:
      swift_once();
LABEL_27:
      uint64_t v43 = type metadata accessor for Logger();
      sub_10000B47C(v43, (uint64_t)qword_100974BE0);
      swift_bridgeObjectRetain_n();
      unint64_t v44 = Logger.logObject.getter();
      os_log_type_t v45 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = swift_slowAlloc();
        uint64_t v56 = v38;
        v47 = (uint8_t *)v46;
        uint64_t v59 = swift_slowAlloc();
        *(_DWORD *)v47 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v57 = sub_100254634(v29, (unint64_t)v3, &v59);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v44, v45, "Writing AirDropID %s to preferences", v47, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v38 = v56;
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      if (!@"AirDropID")
      {
        __break(1u);
        JUMPOUT(0x10046032CLL);
      }
      NSString v48 = String._bridgeToObjectiveC()();
      CFPreferencesSetValue(@"AirDropID", v48, kCFPreferencesCurrentApplication, kCFPreferencesCurrentUser, kCFPreferencesCurrentHost);
      swift_unknownObjectRelease();
      NSString v49 = String._bridgeToObjectiveC()();
      [v52 setNextAirDropID:v49];

      sub_100250CC4(v38, v5);
      sub_100250CC4((uint64_t)v55, object);
    }
    else
    {
      String.subscript.getter();
      swift_bridgeObjectRelease();
      unint64_t v29 = static String._fromSubstring(_:)();
      swift_bridgeObjectRelease();
    }
  }
  return v29;
}

uint64_t sub_10046033C()
{
  v1[7] = v0;
  sub_10000A844(&qword_100974C10);
  v1[8] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for NSNotificationCenter.Notifications.Iterator();
  v1[9] = v2;
  v1[10] = *(void *)(v2 - 8);
  v1[11] = swift_task_alloc();
  return _swift_task_switch(sub_10046042C, 0, 0);
}

uint64_t sub_10046042C()
{
  uint64_t v20 = v0;
  if ([*(id *)(v0 + 56) deviceWasUnlockedOnce])
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    if (qword_100969E28 != -1) {
      swift_once();
    }
    id v3 = *(void **)(v0 + 56);
    uint64_t v4 = type metadata accessor for Logger();
    *(void *)(v0 + 96) = sub_10000B47C(v4, (uint64_t)qword_100974BE0);
    id v5 = v3;
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    BOOL v8 = os_log_type_enabled(v6, v7);
    uint64_t v9 = *(void **)(v0 + 56);
    if (v8)
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      *(void *)(v0 + 40) = v9;
      sub_10000B740(0, &qword_100974C18);
      id v11 = v9;
      uint64_t v12 = String.init<A>(describing:)();
      *(void *)(v0 + 48) = sub_100254634(v12, v13, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s: Waiting for first unlock to start", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v14 = [self defaultCenter];
    if (qword_100969C00 != -1) {
      swift_once();
    }
    *(void *)(v0 + 104) = NSNotificationCenter.notifications(named:object:)();

    swift_retain();
    NSNotificationCenter.Notifications.makeAsyncIterator()();
    uint64_t v15 = sub_1004633EC(&qword_10096FCB0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator);
    long long v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v16;
    *long long v16 = v0;
    v16[1] = sub_1004607B4;
    uint64_t v17 = *(void *)(v0 + 64);
    uint64_t v18 = *(void *)(v0 + 72);
    return dispatch thunk of AsyncIteratorProtocol.next()(v17, v18, v15);
  }
}

uint64_t sub_1004607B4()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10032E0FC;
  }
  else {
    uint64_t v2 = sub_1004608C8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1004608C8()
{
  uint64_t v15 = v0;
  uint64_t v1 = *(void *)(v0 + 64);
  (*(void (**)(void, void))(*(void *)(v0 + 80) + 8))(*(void *)(v0 + 88), *(void *)(v0 + 72));
  uint64_t v2 = type metadata accessor for Notification();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) != 1) {
    sub_10000A7E8(*(void *)(v0 + 64), &qword_100974C10);
  }
  id v3 = *(id *)(v0 + 56);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  os_log_type_t v7 = *(void **)(v0 + 56);
  if (v6)
  {
    BOOL v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)BOOL v8 = 136315138;
    *(void *)(v0 + 24) = v7;
    sub_10000B740(0, &qword_100974C18);
    id v9 = v7;
    uint64_t v10 = String.init<A>(describing:)();
    *(void *)(v0 + 32) = sub_100254634(v10, v11, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s: Finished waiting for first unlock", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
  }
  else
  {
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_100460B28()
{
  return sub_100460B34(&kSFOperationDiscoverableModeContactsOnly);
}

uint64_t sub_100460B34(void *a1)
{
  id v3 = [v1 discoverableMode];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    if (*a1) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = 0;
  uint64_t v7 = 0;
  if (!*a1) {
    goto LABEL_8;
  }
LABEL_3:
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!v7)
  {
LABEL_9:
    char v10 = 0;
    goto LABEL_12;
  }
  if (v5 == v8 && v7 == v9) {
    char v10 = 1;
  }
  else {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
LABEL_12:
  swift_bridgeObjectRelease();
  return v10 & 1;
}

__SecIdentity *sub_100460C0C()
{
  uint64_t v1 = (__SecIdentity *)[v0 copyMyAppleIDSecIdentity];
  if (v1)
  {
    id v2 = [v0 copyMyAppleIDIntermediateCertificate];
    if (v2)
    {
      id v3 = v2;
      sub_10000A844(&qword_10096B3E0);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_100773BD0;
      *(void *)(v4 + 32) = v3;
      specialized Array._endMutation()();
      type metadata accessor for SecCertificate(0);
      id v5 = v3;
      CFArrayRef isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      uint64_t v7 = sec_identity_create_with_certificates(v1, isa);

      if (v7)
      {
        uint64_t v1 = sec_identity_copy_ref(v7);
        swift_unknownObjectRelease();
        return v1;
      }
    }
    else
    {
    }
    return 0;
  }
  return v1;
}

void sub_100460D10(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  id v8 = [v4 idSelfIdentity];
  uint64_t v9 = v8;
  if (!a2 || !v8) {
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  id v10 = [v9 idsDeviceID];
  if (!v10) {
    goto LABEL_8;
  }
  unint64_t v11 = v10;
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  id v15 = [v9 deviceIRKData];
  if (!v15)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v16 = v15;
  uint64_t v17 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v19 = v18;

  id v20 = [v9 edPKData];
  if (v20)
  {
    uint64_t v21 = v20;
    id v31 = v9;
    uint64_t v22 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;

    id v25 = [v31 featureFlags];
    unint64_t v26 = 0xF000000000000000;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CC4(v17, v19);
LABEL_9:
  if (qword_100969E28 != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  sub_10000B47C(v27, (uint64_t)qword_100974BE0);
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Missing data for identity update to generate identity share request", v30, 2u);
    swift_slowDealloc();
  }
  else
  {
  }
  a1 = 0;
  a2 = 0;
  unint64_t v26 = 0;
  uint64_t v17 = 0;
  unint64_t v19 = 0;
  uint64_t v22 = 0;
  uint64_t v24 = 0;
  uint64_t v12 = 0;
  uint64_t v14 = 0;
  id v25 = 0;
LABEL_15:
  *a3 = a1;
  a3[1] = a2;
  a3[2] = 0;
  a3[3] = v26;
  a3[4] = v17;
  a3[5] = v19;
  a3[6] = v22;
  a3[7] = v24;
  a3[8] = v12;
  a3[9] = v14;
  a3[10] = v25;
}

uint64_t sub_100460F7C()
{
  uint64_t v1 = v0;
  id v2 = [v0 myAppleIDCommonName];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v6 = v5;

    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v1 verifiedIdentityForAppleID:v7];

    if (v8)
    {
      id v9 = [v8 accountIdentifier];

      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v12 = v11;

      uint64_t v13 = HIBYTE(v6) & 0xF;
      if ((v6 & 0x2000000000000000) == 0) {
        uint64_t v13 = v4 & 0xFFFFFFFFFFFFLL;
      }
      if (!v13) {
        goto LABEL_14;
      }
      uint64_t v14 = HIBYTE(v12) & 0xF;
      if ((v12 & 0x2000000000000000) == 0) {
        uint64_t v14 = v10 & 0xFFFFFFFFFFFFLL;
      }
      if (v14)
      {
        if (v10 == v4 && v12 == v6) {
          char v15 = 1;
        }
        else {
          char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
      }
      else
      {
LABEL_14:
        char v15 = 0;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      char v15 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

id sub_1004610EC()
{
  id v1 = [v0 copyMyAppleIDSecIdentity];

  if (v1)
  {
    id result = [v0 myAppleIDValidationRecord];
    if (!result) {
      return result;
    }
    id v3 = result;
    uint64_t v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    AnyHashable.init<A>(_:)();
    if (*(void *)(v4 + 16) && (unint64_t v5 = sub_100583878((uint64_t)v7), (v6 & 1) != 0))
    {
      sub_10024D2D4(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v8);
    }
    else
    {
      long long v8 = 0u;
      long long v9 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10025B0A8((uint64_t)v7);
    if (*((void *)&v9 + 1))
    {
      if (swift_dynamicCast()) {
        return (id)0xD000000000000022;
      }
    }
    else
    {
      sub_10000A7E8((uint64_t)&v8, (uint64_t *)&unk_10096AC20);
    }
  }
  return 0;
}

BOOL sub_10046123C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!a4)
  {
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_8;
  }
  if (a4 == 1)
  {
    if (a2 == 1)
    {
LABEL_15:
      char v5 = 0;
      return (v5 & 1) == 0;
    }
    goto LABEL_8;
  }
  if (a2 < 2)
  {
LABEL_8:
    BOOL v4 = a4 == 0;
    if (a2 != 1) {
      BOOL v4 = a4 < 2;
    }
    if (a2) {
      char v5 = v4;
    }
    else {
      char v5 = 0;
    }
    return (v5 & 1) == 0;
  }
  if (a3 == a1 && a4 == a2) {
    goto LABEL_15;
  }
  char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  char v5 = 0;
  if ((v7 & 1) == 0) {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  return (v5 & 1) == 0;
}

uint64_t sub_100461318()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100974BE0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100974BE0);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1004613E0(uint64_t a1, void *a2)
{
  sub_10000B740(0, (unint64_t *)&qword_100977CD0);
  sub_100463298();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  id v4 = [a2 contactWithPreferredIdentifierForContacts:isa];

  if (v4)
  {
    id v5 = [v4 identifier];
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v7 = [objc_allocWithZone((Class)CNContactFormatter) init];
    id v8 = [v7 stringFromContact:v4];

    if (v8)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
  }
  else
  {
    if (qword_100969E28 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000B47C(v9, (uint64_t)qword_100974BE0);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "No matching contacts found", v12, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  return v6;
}

uint64_t sub_1004615D4(void *a1)
{
  id v2 = [objc_allocWithZone((Class)NSDictionary) init];
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  *(void *)&long long v24 = v2;
  unsigned int v4 = [a1 verifyAndParseValidationRecordData:isa intoDictionary:&v24];

  id v5 = (id)v24;
  if (!v4)
  {

    return 0;
  }
  if (qword_100969E28 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_100974BE0);
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Sender validation record verified", v9, 2u);
    swift_slowDealloc();
  }

  if (v5)
  {
    *(void *)&long long v22 = 0xD000000000000014;
    *((void *)&v22 + 1) = 0x80000001007BE050;
    id v10 = v5;
    id v11 = [v10 __swift_objectForKeyedSubscript:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)() v22];
    swift_unknownObjectRelease();

    if (v11)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v22 = 0u;
      long long v23 = 0u;
    }
    sub_10024A250((uint64_t)&v22, (uint64_t)&v24);
    if (*((void *)&v25 + 1))
    {
      sub_10000A844(&qword_100974C00);
      swift_dynamicCast();
    }
    else
    {
      sub_10000A7E8((uint64_t)&v24, (uint64_t *)&unk_10096AC20);
    }
    *(void *)&long long v22 = 0xD000000000000014;
    *((void *)&v22 + 1) = 0x80000001007BE070;
    id v13 = v10;
    id v14 = [v13 __swift_objectForKeyedSubscript:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
    swift_unknownObjectRelease();

    if (v14)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v22 = 0u;
      long long v23 = 0u;
    }
    sub_10024A250((uint64_t)&v22, (uint64_t)&v24);
    if (*((void *)&v25 + 1))
    {
      sub_10000A844(&qword_100974C00);
      swift_dynamicCast();
      goto LABEL_21;
    }
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
    sub_10000A7E8((uint64_t)&v24, (uint64_t *)&unk_10096AC20);
    long long v24 = 0u;
    long long v25 = 0u;
  }
  sub_10000A7E8((uint64_t)&v24, (uint64_t *)&unk_10096AC20);
LABEL_21:
  Class v15 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v16 = (id)SFCombinedHashFromArray();

  Class v17 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v18 = (id)SFCombinedHashFromArray();

  id v19 = [a1 contactsForEmailHash:v16 phoneHash:v18];
  if (v19)
  {
    sub_10000B740(0, (unint64_t *)&qword_100977CD0);
    sub_100463298();
    uint64_t v20 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v12 = sub_1004613E0(v20, a1);
    swift_bridgeObjectRelease();
  }
  else
  {

    return 0;
  }
  return v12;
}

__SecTrust *sub_100461A7C@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  id result = sub_10065EC34();
  if (!result)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    id v14 = 0;
    id v15 = 0;
    goto LABEL_18;
  }
  id v5 = result;
  sub_100461E14(result, v32);
  uint64_t v6 = v32[0];
  uint64_t v7 = v33;
  if (v32[2])
  {
    swift_bridgeObjectRetain();
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    if (v7)
    {
LABEL_4:
      swift_bridgeObjectRetain();
      NSString v9 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
  }
  else
  {
    NSString v8 = 0;
    if (v33) {
      goto LABEL_4;
    }
  }
  NSString v9 = 0;
LABEL_8:
  id v15 = [a1 emailOrPhoneForEmailHash:v8 phoneHash:v9];

  if (v15)
  {
    uint64_t v31 = v6;
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v17;
    id v14 = [a1 verifiedIdentityForAppleID:v15];

    if (v14)
    {
      if (qword_100969E28 != -1) {
        swift_once();
      }
      uint64_t v18 = type metadata accessor for Logger();
      sub_10000B47C(v18, (uint64_t)qword_100974BE0);
      uint64_t v30 = v14;
      id v19 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.default.getter();
      uint64_t v29 = v16;
      if (os_log_type_enabled(v19, v20))
      {
        os_log_type_t type = v20;
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        long long v22 = (void *)swift_slowAlloc();
        uint64_t v27 = v21;
        *(_DWORD *)uint64_t v21 = 138412290;
        v32[0] = v30;
        long long v23 = v30;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v22 = v14;

        _os_log_impl((void *)&_mh_execute_header, v19, type, "Sender validation record verified %@", v27, 0xCu);
        sub_10000A844(&qword_10096B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        id v19 = v30;
      }

      uint64_t v12 = sub_1004613E0(v31, a1);
      uint64_t v13 = v24;
      id v14 = v25;
      id v15 = v26;
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      id result = (__SecTrust *)swift_bridgeObjectRelease();
      uint64_t v10 = v29;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      id result = (__SecTrust *)swift_bridgeObjectRelease();
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      id v15 = 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    id result = (__SecTrust *)swift_bridgeObjectRelease();
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    id v14 = 0;
  }
LABEL_18:
  *a2 = v10;
  a2[1] = v11;
  a2[2] = v12;
  a2[3] = v13;
  a2[4] = (uint64_t)v14;
  a2[5] = (uint64_t)v15;
  return result;
}

void sub_100461E14(__SecTrust *a1@<X2>, void *a2@<X8>)
{
  id v3 = v2;
  id v6 = [objc_allocWithZone((Class)NSString) init];
  id v7 = [objc_allocWithZone((Class)NSString) init];
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v22 = v7;
  id v23 = v6;
  sub_1000518D0(isa, a1, 0, &v23, &v22);

  id v9 = v22;
  id v10 = v23;

  if (v10 && (uint64_t)[v10 length] >= 1)
  {
    Swift::String v11 = String.init(_:)(v10);
    uint64_t countAndFlagsBits = v11._countAndFlagsBits;
    unint64_t object = v11._object;
    if (!v9) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t countAndFlagsBits = 0;
    unint64_t object = 0;
    if (!v9) {
      goto LABEL_10;
    }
  }
  if ((uint64_t)[v9 length] >= 1)
  {
    Swift::String v14 = String.init(_:)(v9);
    uint64_t v15 = v14._countAndFlagsBits;
    uint64_t v16 = v14._object;
    if (object) {
      goto LABEL_11;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  if (object)
  {
LABEL_11:
    swift_bridgeObjectRetain();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_12;
    }
LABEL_9:
    NSString v18 = 0;
    goto LABEL_13;
  }
LABEL_8:
  NSString v17 = 0;
  if (!v16) {
    goto LABEL_9;
  }
LABEL_12:
  swift_bridgeObjectRetain();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_13:
  id v19 = [v3 contactsForEmailHash:v17 phoneHash:v18];

  if (v19)
  {
    sub_10000B740(0, (unint64_t *)&qword_100977CD0);
    sub_100463298();
    os_log_type_t v20 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)();

    id v10 = v9;
    id v9 = v19;
  }
  else if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 {
         && _CocoaArrayWrapper.endIndex.getter())
  }
  {
    sub_1002CC130((unint64_t)_swiftEmptyArrayStorage);
    os_log_type_t v20 = v21;
  }
  else
  {
    os_log_type_t v20 = &_swiftEmptySetSingleton;
  }

  *a2 = v20;
  a2[1] = countAndFlagsBits;
  a2[2] = object;
  a2[3] = v15;
  a2[4] = v16;
}

uint64_t sub_1004620A0(void *a1)
{
  id v2 = [objc_allocWithZone((Class)NSDictionary) init];
  id v3 = sub_1004610EC();
  if (v4 >> 60 == 15)
  {

LABEL_56:
    char v28 = 0;
    return v28 & 1;
  }
  uint64_t v5 = (uint64_t)v3;
  unint64_t v30 = v4;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  *(void *)&long long v35 = v2;
  unsigned int v7 = [a1 verifyAndParseValidationRecordData:isa intoDictionary:&v35];

  id v8 = (id)v35;
  id v9 = [objc_allocWithZone((Class)NSDictionary) init];
  Class v10 = Data._bridgeToObjectiveC()().super.isa;
  *(void *)&long long v35 = v9;
  unsigned __int8 v11 = [a1 verifyAndParseValidationRecordData:v10 intoDictionary:&v35];

  id v12 = (id)v35;
  if (!v7)
  {
    uint64_t v15 = v5;
LABEL_10:
    sub_100250CB0(v15, v30);
LABEL_55:

    goto LABEL_56;
  }
  if ((v11 & 1) == 0)
  {
    uint64_t v15 = v5;
    goto LABEL_10;
  }
  if (!v8)
  {
    long long v35 = 0u;
    long long v36 = 0u;
    sub_10000A7E8((uint64_t)&v35, (uint64_t *)&unk_10096AC20);
    long long v35 = 0u;
    long long v36 = 0u;
LABEL_27:
    sub_10000A7E8((uint64_t)&v35, (uint64_t *)&unk_10096AC20);
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    goto LABEL_28;
  }
  *(void *)&long long v33 = 0x44497344746C61;
  *((void *)&v33 + 1) = 0xE700000000000000;
  id v13 = v8;
  id v14 = [v13 __swift_objectForKeyedSubscript:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
  swift_unknownObjectRelease();

  if (v14)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v33 = 0u;
    long long v34 = 0u;
  }
  sub_10024A250((uint64_t)&v33, (uint64_t)&v35);
  if (*((void *)&v36 + 1))
  {
    if (swift_dynamicCast())
    {
      uint64_t v16 = *((void *)&v33 + 1);
      uint64_t v17 = v33;
      goto LABEL_28;
    }
  }
  else
  {
    sub_10000A7E8((uint64_t)&v35, (uint64_t *)&unk_10096AC20);
  }
  *(void *)&long long v33 = 0x44497344636E65;
  *((void *)&v33 + 1) = 0xE700000000000000;
  id v18 = v13;
  id v19 = [v18 __swift_objectForKeyedSubscript:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
  swift_unknownObjectRelease();

  if (v19)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v33 = 0u;
    long long v34 = 0u;
  }
  sub_10024A250((uint64_t)&v33, (uint64_t)&v35);
  if (!*((void *)&v36 + 1)) {
    goto LABEL_27;
  }
  int v20 = swift_dynamicCast();
  if (v20) {
    uint64_t v16 = *((void *)&v33 + 1);
  }
  else {
    uint64_t v16 = 0;
  }
  if (v20) {
    uint64_t v17 = v33;
  }
  else {
    uint64_t v17 = 0;
  }
LABEL_28:
  if (!v12)
  {
    long long v35 = 0u;
    long long v36 = 0u;
    sub_10000A7E8((uint64_t)&v35, (uint64_t *)&unk_10096AC20);
    long long v35 = 0u;
    long long v36 = 0u;
    goto LABEL_53;
  }
  *(void *)&long long v33 = 0x44497344746C61;
  *((void *)&v33 + 1) = 0xE700000000000000;
  id v21 = v12;
  id v22 = [v21 __swift_objectForKeyedSubscript:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
  swift_unknownObjectRelease();

  if (v22)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v33 = 0u;
    long long v34 = 0u;
  }
  sub_10024A250((uint64_t)&v33, (uint64_t)&v35);
  if (!*((void *)&v36 + 1))
  {
    sub_10000A7E8((uint64_t)&v35, (uint64_t *)&unk_10096AC20);
LABEL_38:
    *(void *)&long long v33 = 0x44497344636E65;
    *((void *)&v33 + 1) = 0xE700000000000000;
    id v25 = v21;
    id v26 = [v25 __swift_objectForKeyedSubscript:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
    swift_unknownObjectRelease();

    if (v26)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v33 = 0u;
      long long v34 = 0u;
    }
    sub_10024A250((uint64_t)&v33, (uint64_t)&v35);
    if (*((void *)&v36 + 1))
    {
      int v27 = swift_dynamicCast();
      if (v27) {
        uint64_t v23 = v32;
      }
      else {
        uint64_t v23 = 0;
      }
      if (v27) {
        uint64_t v24 = v31;
      }
      else {
        uint64_t v24 = 0;
      }
      if (!v16) {
        goto LABEL_54;
      }
      goto LABEL_49;
    }
LABEL_53:
    sub_10000A7E8((uint64_t)&v35, (uint64_t *)&unk_10096AC20);
    goto LABEL_54;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_38;
  }
  uint64_t v23 = *((void *)&v33 + 1);
  if (!v16)
  {
LABEL_54:
    sub_100250CB0(v5, v30);
    swift_bridgeObjectRelease();
    goto LABEL_55;
  }
  uint64_t v24 = v33;
LABEL_49:
  if (!v23) {
    goto LABEL_54;
  }
  if (v17 == v24 && v16 == v23) {
    char v28 = 1;
  }
  else {
    char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  sub_100250CB0(v5, v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v28 & 1;
}

uint64_t sub_100462654()
{
  SecTrustRef v0 = sub_10065EC34();
  if (v0)
  {
    uint64_t v1 = v0;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    id v3 = sub_10005247C(isa, v1, 0);

    if (v3)
    {
      uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v6 = v5;

      if (qword_100969E28 != -1) {
        swift_once();
      }
      uint64_t v7 = type metadata accessor for Logger();
      sub_10000B47C(v7, (uint64_t)qword_100974BE0);
      swift_bridgeObjectRetain();
      id v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v8, v9))
      {
        Class v10 = (uint8_t *)swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(_DWORD *)Class v10 = 136315138;
        swift_bridgeObjectRetain();
        sub_100254634(v4, v6, &v12);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Confirmed Bonjour Sender: %s", v10, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      LOBYTE(v3) = sub_100462878(v1);
    }
  }
  else
  {
    LOBYTE(v3) = 0;
  }
  return v3 & 1;
}

uint64_t sub_100462878(__SecTrust *a1)
{
  uint64_t v1 = sub_100051754(a1);
  if (!v1) {
    __break(1u);
  }
  id v2 = v1;
  type metadata accessor for SecCertificate(0);
  static Array._conditionallyBridgeFromObjectiveC(_:result:)();

  return 0;
}

void sub_100462B24(uint64_t a1, uint64_t a2, __SecTrust *a3)
{
  sub_100461E14(a3, v22);
  uint64_t v4 = v22[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v4 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_10000B740(0, (unint64_t *)&qword_100977CD0);
    sub_100463298();
    Set.Iterator.init(_cocoa:)();
    uint64_t v4 = v22[0];
    uint64_t v20 = v22[1];
    uint64_t v5 = v22[2];
    uint64_t v6 = v22[3];
    unint64_t v7 = v22[4];
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = -1 << *(unsigned char *)(v4 + 32);
    uint64_t v20 = v4 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v4 + 56);
  }
  int64_t v19 = (unint64_t)(v5 + 64) >> 6;
  while (1)
  {
    uint64_t v15 = v6;
    if ((v4 & 0x8000000000000000) == 0) {
      break;
    }
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_29;
    }
    sub_10000B740(0, (unint64_t *)&qword_100977CD0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v13 = v21;
    swift_unknownObjectRelease();
    if (!v21) {
      goto LABEL_29;
    }
LABEL_10:
    unsigned int v14 = [v3 contactIsBlocked:v13];

    if (v14) {
      goto LABEL_29;
    }
  }
  if (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v6 << 6);
LABEL_9:
    id v13 = *(id *)(*(void *)(v4 + 48) + 8 * v12);
    if (!v13) {
      goto LABEL_29;
    }
    goto LABEL_10;
  }
  int64_t v16 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v16 >= v19) {
      goto LABEL_29;
    }
    unint64_t v17 = *(void *)(v20 + 8 * v16);
    ++v6;
    if (!v17)
    {
      uint64_t v6 = v15 + 2;
      if (v15 + 2 >= v19) {
        goto LABEL_29;
      }
      unint64_t v17 = *(void *)(v20 + 8 * v6);
      if (!v17)
      {
        uint64_t v6 = v15 + 3;
        if (v15 + 3 >= v19) {
          goto LABEL_29;
        }
        unint64_t v17 = *(void *)(v20 + 8 * v6);
        if (!v17)
        {
          uint64_t v6 = v15 + 4;
          if (v15 + 4 >= v19) {
            goto LABEL_29;
          }
          unint64_t v17 = *(void *)(v20 + 8 * v6);
          if (!v17)
          {
            uint64_t v18 = v15 + 5;
            while (v19 != v18)
            {
              unint64_t v17 = *(void *)(v20 + 8 * v18++);
              if (v17)
              {
                uint64_t v6 = v18 - 1;
                goto LABEL_26;
              }
            }
LABEL_29:
            sub_10024D330();
            return;
          }
        }
      }
    }
LABEL_26:
    unint64_t v7 = (v17 - 1) & v17;
    unint64_t v12 = __clz(__rbit64(v17)) + (v6 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

unint64_t destroy for SDAirDropAppleIDState(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s16DaemoniOSLibrary21SDAirDropAppleIDStateOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for SDAirDropAppleIDState(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SDAirDropAppleIDState(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SDAirDropAppleIDState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SDAirDropAppleIDState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_10046306C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_100463084(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropAppleIDState()
{
  return &type metadata for SDAirDropAppleIDState;
}

uint64_t sub_1004630B4(uint64_t a1, uint64_t a2)
{
  return sub_100463300(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

BOOL sub_1004630C8(uint64_t a1, uint64_t a2)
{
  return sub_10046123C(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

BOOL sub_1004630DC(uint64_t a1, uint64_t a2)
{
  return sub_1004630F0(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

BOOL sub_1004630F0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!a2)
  {
    if (!a4) {
      goto LABEL_15;
    }
    goto LABEL_8;
  }
  if (a2 == 1)
  {
    if (a4 == 1)
    {
LABEL_15:
      char v5 = 0;
      return (v5 & 1) == 0;
    }
    goto LABEL_8;
  }
  if (a4 < 2)
  {
LABEL_8:
    BOOL v4 = a2 == 0;
    if (a4 != 1) {
      BOOL v4 = a2 < 2;
    }
    if (a4) {
      char v5 = v4;
    }
    else {
      char v5 = 0;
    }
    return (v5 & 1) == 0;
  }
  if (a1 == a3 && a2 == a4) {
    goto LABEL_15;
  }
  char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  char v5 = 0;
  if ((v7 & 1) == 0) {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  return (v5 & 1) == 0;
}

uint64_t sub_1004631CC(uint64_t a1, uint64_t a2)
{
  return sub_10045F6EC(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

uint64_t sub_1004631E0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  unint64_t v4 = a2[1];
  if (!v3) {
    return !v4;
  }
  if (v3 == 1) {
    return v4 == 1;
  }
  if (v4 < 2) {
    return 0;
  }
  if (*a1 != *a2 || v3 != v4) {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  return 1;
}

unint64_t sub_100463244()
{
  unint64_t result = qword_100974BF8;
  if (!qword_100974BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100974BF8);
  }
  return result;
}

unint64_t sub_100463298()
{
  unint64_t result = qword_10096B4D0;
  if (!qword_10096B4D0)
  {
    sub_10000B740(255, (unint64_t *)&qword_100977CD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096B4D0);
  }
  return result;
}

uint64_t sub_100463300(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!a2)
  {
    if (!a4) {
      return 0;
    }
    goto LABEL_8;
  }
  if (a2 == 1)
  {
    if (a4 == 1) {
      return 0;
    }
    goto LABEL_8;
  }
  if (a4 < 2)
  {
LABEL_8:
    BOOL v4 = a2 == 0;
    if (a4 != 1) {
      BOOL v4 = a2 < 2;
    }
    return a4 && v4;
  }
  if (a1 == a3 && a2 == a4) {
    return 0;
  }
  char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t result = 0;
  if ((v6 & 1) == 0)
  {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  return result;
}

uint64_t sub_1004633EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_100463434(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for SFAirDrop.TransferIdentifier();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_10000A844((uint64_t *)&unk_10096DFB0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    unint64_t v12 = (uint64_t *)((char *)a1 + v11);
    id v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = v13[1];
    *unint64_t v12 = *v13;
    v12[1] = v14;
    uint64_t v15 = a3[7];
    int64_t v16 = (char *)a1 + v15;
    unint64_t v17 = (_OWORD *)((char *)a2 + v15);
    unint64_t v18 = *(uint64_t *)((char *)a2 + v15 + 8);
    swift_bridgeObjectRetain();
    if (v18 >> 60 == 15)
    {
      *(_OWORD *)int64_t v16 = *v17;
    }
    else
    {
      uint64_t v19 = *(void *)v17;
      sub_10025ADCC(v19, v18);
      *(void *)int64_t v16 = v19;
      *((void *)v16 + 1) = v18;
    }
    uint64_t v20 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    id v21 = (uint64_t *)((char *)a1 + v20);
    id v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *id v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[10];
    id v25 = (uint64_t *)((char *)a1 + v24);
    id v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    void *v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100463638(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  swift_bridgeObjectRelease();
  char v6 = (uint64_t *)(a1 + *(int *)(a2 + 28));
  unint64_t v7 = v6[1];
  if (v7 >> 60 != 15) {
    sub_100250CC4(*v6, v7);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *sub_100463748(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10000A844((uint64_t *)&unk_10096DFB0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *((void *)v11 + 1);
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = v12;
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  unint64_t v16 = *(void *)&a2[v13 + 8];
  swift_bridgeObjectRetain();
  if (v16 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  }
  else
  {
    uint64_t v17 = *(void *)v15;
    sub_10025ADCC(v17, v16);
    *(void *)uint64_t v14 = v17;
    *((void *)v14 + 1) = v16;
  }
  uint64_t v18 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  uint64_t v22 = a3[10];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_1004638FC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_10000A844((uint64_t *)&unk_10096DFB0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  unint64_t v16 = (uint64_t *)&a1[v15];
  uint64_t v17 = (uint64_t *)&a2[v15];
  unint64_t v18 = *(void *)&a2[v15 + 8];
  if (*(void *)&a1[v15 + 8] >> 60 != 15)
  {
    if (v18 >> 60 != 15)
    {
      uint64_t v20 = *v17;
      sub_10025ADCC(v20, v18);
      uint64_t v21 = *v16;
      unint64_t v22 = v16[1];
      *unint64_t v16 = v20;
      v16[1] = v18;
      sub_100250CC4(v21, v22);
      goto LABEL_14;
    }
    sub_10026F904((uint64_t)v16);
    goto LABEL_12;
  }
  if (v18 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)unint64_t v16 = *(_OWORD *)v17;
    goto LABEL_14;
  }
  uint64_t v19 = *v17;
  sub_10025ADCC(v19, v18);
  *unint64_t v16 = v19;
  v16[1] = v18;
LABEL_14:
  a1[a3[8]] = a2[a3[8]];
  uint64_t v23 = a3[9];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  *(void *)uint64_t v24 = *(void *)v25;
  *((void *)v24 + 1) = *((void *)v25 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[10];
  uint64_t v27 = &a1[v26];
  char v28 = &a2[v26];
  *(void *)uint64_t v27 = *(void *)v28;
  *((void *)v27 + 1) = *((void *)v28 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_100463B98(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10000A844((uint64_t *)&unk_10096DFB0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  uint64_t v10 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  a1[v10] = a2[v10];
  uint64_t v11 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v11] = *(_OWORD *)&a2[v11];
  return a1;
}

char *sub_100463CF0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_10000A844((uint64_t *)&unk_10096DFB0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  unint64_t v18 = (uint64_t *)&a1[v17];
  uint64_t v19 = (uint64_t *)&a2[v17];
  unint64_t v20 = *(void *)&a1[v17 + 8];
  if (v20 >> 60 != 15)
  {
    unint64_t v21 = v19[1];
    if (v21 >> 60 != 15)
    {
      uint64_t v22 = *v18;
      *unint64_t v18 = *v19;
      v18[1] = v21;
      sub_100250CC4(v22, v20);
      goto LABEL_12;
    }
    sub_10026F904((uint64_t)v18);
  }
  *(_OWORD *)unint64_t v18 = *(_OWORD *)v19;
LABEL_12:
  uint64_t v23 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v27 = *(void *)v25;
  uint64_t v26 = *((void *)v25 + 1);
  *(void *)uint64_t v24 = v27;
  *((void *)v24 + 1) = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[10];
  uint64_t v29 = &a1[v28];
  unint64_t v30 = &a2[v28];
  uint64_t v32 = *(void *)v30;
  uint64_t v31 = *((void *)v30 + 1);
  *(void *)uint64_t v29 = v32;
  *((void *)v29 + 1) = v31;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100463F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100463F38);
}

uint64_t sub_100463F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_10096DFB0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100464000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100464014);
}

uint64_t sub_100464014(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10000A844((uint64_t *)&unk_10096DFB0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t _s14descr1008C92C9V13UploadRequestVMa()
{
  uint64_t result = qword_100974CB0;
  if (!qword_100974CB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100464124()
{
  sub_1004641E8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1004641E8()
{
  if (!qword_100974CC0)
  {
    type metadata accessor for SFAirDrop.TransferIdentifier();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100974CC0);
    }
  }
}

uint64_t sub_100464240(unsigned __int8 *a1, char *a2)
{
  return sub_1005E87E8(*a1, *a2);
}

Swift::Int sub_10046424C()
{
  return sub_1005E9DC8();
}

uint64_t sub_100464258()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10046439C()
{
  return sub_1005E9DC8();
}

unint64_t sub_1004643A4@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100465914(*a1);
  *a2 = result;
  return result;
}

void sub_1004643D4(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEA00000000004449;
  uint64_t v3 = 0x726566736E617254;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA00000000007365;
      uint64_t v3 = 0x7479426C61746F54;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "Content-Type");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 3:
      *(void *)a1 = 1635017028;
      *(void *)(a1 + 8) = 0xE400000000000000;
      break;
    case 4:
      strcpy((char *)a1, "UploadComplete");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 5:
      *(void *)a1 = 0x73507265646E6553;
      *(void *)(a1 + 8) = 0xEF6D796E6F647565;
      break;
    case 6:
      *(void *)a1 = 0x75507265646E6553;
      *(void *)(a1 + 8) = 0xEF6E656B6F546873;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1004644FC()
{
  uint64_t result = 0x726566736E617254;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7479426C61746F54;
      break;
    case 2:
      uint64_t result = 0x2D746E65746E6F43;
      break;
    case 3:
      uint64_t result = 1635017028;
      break;
    case 4:
      uint64_t result = 0x6F4364616F6C7055;
      break;
    case 5:
      uint64_t result = 0x73507265646E6553;
      break;
    case 6:
      uint64_t result = 0x75507265646E6553;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10046460C@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100465914(a1);
  *a2 = result;
  return result;
}

void sub_100464634(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_100464640(uint64_t a1)
{
  unint64_t v2 = sub_100465454();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10046467C(uint64_t a1)
{
  unint64_t v2 = sub_100465454();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004646B8()
{
  uint64_t v40 = type metadata accessor for ByteCountFormatStyle.Units();
  uint64_t v37 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  unint64_t v2 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ByteCountFormatStyle.Style();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ByteCountFormatStyle();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v38 = v7;
  uint64_t v39 = v8;
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = 0;
  unint64_t v44 = 0xE000000000000000;
  _StringGuts.grow(_:)(116);
  v11._unint64_t object = (void *)0x80000001007BE090;
  v11._uint64_t countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v11);
  type metadata accessor for SFAirDrop.TransferIdentifier();
  sub_100465630(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  v12._uint64_t countAndFlagsBits = 0x746E65746E6F4320;
  v12._unint64_t object = (void *)0xEE0020657079542DLL;
  String.append(_:)(v12);
  uint64_t v13 = (int *)_s14descr1008C92C9V13UploadRequestVMa();
  uint64_t v14 = (uint64_t *)(v0 + v13[6]);
  uint64_t v16 = *v14;
  uint64_t v15 = (void *)v14[1];
  swift_bridgeObjectRetain();
  v17._uint64_t countAndFlagsBits = v16;
  v17._unint64_t object = v15;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  v18._uint64_t countAndFlagsBits = 0x426C61746F74202CLL;
  v18._unint64_t object = (void *)0xEE00203A73657479;
  String.append(_:)(v18);
  v42._uint64_t countAndFlagsBits = *(void *)(v0 + v13[5]);
  uint64_t countAndFlagsBits = v42._countAndFlagsBits;
  v20._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  v21._uint64_t countAndFlagsBits = 23328;
  v21._unint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v21);
  uint64_t v41 = countAndFlagsBits;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for ByteCountFormatStyle.Style.file(_:), v3);
  static ByteCountFormatStyle.Units.all.getter();
  static FormatStyle<>.byteCount(style:allowedUnits:spellsOutZero:includesActualByteCount:)();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v2, v40);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1002CE960();
  sub_100465630(&qword_100974D08, (void (*)(uint64_t))&type metadata accessor for ByteCountFormatStyle);
  sub_100465400();
  uint64_t v22 = v38;
  BinaryInteger.formatted<A>(_:)();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v22);
  String.append(_:)(v42);
  swift_bridgeObjectRelease();
  v23._uint64_t countAndFlagsBits = 0x203A61746164202CLL;
  v23._unint64_t object = (void *)0xE800000000000000;
  String.append(_:)(v23);
  uint64_t v24 = 0;
  uint64_t v25 = (uint64_t *)(v0 + v13[7]);
  unint64_t v26 = v25[1];
  unint64_t v27 = v26 >> 60;
  if (v26 >> 60 != 15)
  {
    uint64_t v28 = *v25;
    uint64_t v24 = 0;
    switch(v26 >> 62)
    {
      case 1uLL:
        LODWORD(v24) = HIDWORD(v28) - v28;
        if (__OFSUB__(HIDWORD(v28), v28))
        {
          __break(1u);
LABEL_9:
          __break(1u);
          JUMPOUT(0x100464C5CLL);
        }
        uint64_t v24 = (int)v24;
        break;
      case 2uLL:
        uint64_t v30 = *(void *)(v28 + 16);
        uint64_t v29 = *(void *)(v28 + 24);
        BOOL v31 = __OFSUB__(v29, v30);
        uint64_t v24 = v29 - v30;
        if (!v31) {
          break;
        }
        goto LABEL_9;
      case 3uLL:
        break;
      default:
        uint64_t v24 = BYTE6(v26);
        break;
    }
  }
  v42._uint64_t countAndFlagsBits = v24;
  LOBYTE(v42._object) = v27 > 0xE;
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  v32._unint64_t object = (void *)0x80000001007BE0B0;
  v32._uint64_t countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v32);
  LOBYTE(v42._countAndFlagsBits) = *(unsigned char *)(v0 + v13[8]);
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  v33._uint64_t countAndFlagsBits = 0x6F6475657370202CLL;
  v33._unint64_t object = (void *)0xED0000203A6D796ELL;
  String.append(_:)(v33);
  Swift::String v42 = *(Swift::String *)(v0 + v13[9]);
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  v34._uint64_t countAndFlagsBits = 0x6F5468737570202CLL;
  v34._unint64_t object = (void *)0xED0000203A6E656BLL;
  String.append(_:)(v34);
  Swift::String v42 = *(Swift::String *)(v0 + v13[10]);
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  return v43;
}

uint64_t sub_100464C6C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000A844(&qword_100974D30);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10026BB6C(a1, a1[3]);
  sub_100465454();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v12) = 0;
  type metadata accessor for SFAirDrop.TransferIdentifier();
  sub_100465630(&qword_100974D38, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v9 = _s14descr1008C92C9V13UploadRequestVMa();
    LOBYTE(v12) = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    long long v12 = *(_OWORD *)(v3 + *(int *)(v9 + 28));
    v11[15] = 3;
    sub_1002CC290();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v12) = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v12) = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v12) = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100464F24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_10096DFB0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10000A844(&qword_100974D18);
  uint64_t v7 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = (int *)_s14descr1008C92C9V13UploadRequestVMa();
  __chkstk_darwin(v10);
  long long v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  Swift::String v32 = a1;
  sub_10026BB6C(a1, v13);
  sub_100465454();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_10024D338((uint64_t)v32);
  }
  uint64_t v14 = v7;
  type metadata accessor for SFAirDrop.TransferIdentifier();
  LOBYTE(v33) = 0;
  sub_100465630(&qword_100974D28, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
  uint64_t v15 = v31;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v16 = (uint64_t)v12;
  sub_100465508((uint64_t)v6, (uint64_t)v12);
  LOBYTE(v33) = 1;
  Swift::String v17 = v10;
  *(void *)(v16 + v10[5]) = KeyedDecodingContainer.decode(_:forKey:)();
  LOBYTE(v33) = 2;
  uint64_t v18 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v19 = (uint64_t *)(v16 + v10[6]);
  *uint64_t v19 = v18;
  v19[1] = v20;
  char v34 = 3;
  sub_1002CC1F4();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  *(_OWORD *)(v16 + v10[7]) = v33;
  LOBYTE(v33) = 4;
  *(unsigned char *)(v16 + v10[8]) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  LOBYTE(v33) = 5;
  uint64_t v21 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v22 = (uint64_t *)(v16 + v10[9]);
  uint64_t *v22 = v21;
  v22[1] = v23;
  LOBYTE(v33) = 6;
  uint64_t v24 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v26 = v25;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v15);
  unint64_t v27 = (uint64_t *)(v16 + v17[10]);
  *unint64_t v27 = v24;
  v27[1] = v26;
  sub_100465570(v16, v30);
  sub_10024D338((uint64_t)v32);
  return sub_1004655D4(v16);
}

uint64_t sub_1004653CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100464F24(a1, a2);
}

uint64_t sub_1004653E4(void *a1)
{
  return sub_100464C6C(a1);
}

unint64_t sub_100465400()
{
  unint64_t result = qword_100974D10;
  if (!qword_100974D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100974D10);
  }
  return result;
}

unint64_t sub_100465454()
{
  unint64_t result = qword_100974D20;
  if (!qword_100974D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100974D20);
  }
  return result;
}

uint64_t sub_1004654A8(uint64_t a1)
{
  uint64_t v2 = sub_10000A844((uint64_t *)&unk_10096DFB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100465508(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_10096DFB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100465570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14descr1008C92C9V13UploadRequestVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004655D4(uint64_t a1)
{
  uint64_t v2 = _s14descr1008C92C9V13UploadRequestVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100465630(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SDAuthenticationTransportType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14descr1008C92C9V13UploadRequestV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004657D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr1008C92C9V13UploadRequestV10CodingKeysOMa()
{
  return &_s14descr1008C92C9V13UploadRequestV10CodingKeysON;
}

unint64_t sub_100465810()
{
  unint64_t result = qword_100974D40;
  if (!qword_100974D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100974D40);
  }
  return result;
}

unint64_t sub_100465868()
{
  unint64_t result = qword_100974D48;
  if (!qword_100974D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100974D48);
  }
  return result;
}

unint64_t sub_1004658C0()
{
  unint64_t result = qword_100974D50;
  if (!qword_100974D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100974D50);
  }
  return result;
}

unint64_t sub_100465914(Swift::String string)
{
  unint64_t object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._unint64_t object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008D30B8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 7) {
    return 7;
  }
  else {
    return v3;
  }
}

id sub_100465960()
{
  id v1 = [*v0 devices];
  if (v1)
  {
    sub_100465B54();
    unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v1 = (id)sub_10045EF34(v2);
    swift_bridgeObjectRelease();
  }
  return v1;
}

id sub_1004659D0(uint64_t a1, uint64_t a2)
{
  return [*v2 addDelegate:a1 queue:a2];
}

id sub_1004659E8(uint64_t a1, uint64_t a2, uint64_t a3, objc_class *a4, uint64_t a5)
{
  return sub_100465A0C(a1, a2, a3, a4, a5);
}

id sub_100465A0C(uint64_t a1, uint64_t a2, uint64_t a3, objc_class *a4, uint64_t a5)
{
  unsigned int v6 = v5;
  Class isa = a4;
  if (a2)
  {
    v11.super.Class isa = Set._bridgeToObjectiveC()().super.isa;
    if (!isa) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  v11.super.Class isa = 0;
  if (a4) {
LABEL_3:
  }
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
LABEL_4:
  id v15 = 0;
  unsigned int v12 = [v6 sendProtobuf:a1 toDestinations:v11.super.isa priority:a3 options:isa identifier:a5 error:&v15];

  if (v12) {
    return v15;
  }
  id v14 = v15;
  _convertNSErrorToError(_:)();

  return (id)swift_willThrow();
}

unint64_t sub_100465B54()
{
  unint64_t result = qword_10097BB60;
  if (!qword_10097BB60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_10097BB60);
  }
  return result;
}

uint64_t sub_100465B94(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_10000A6F0;
  v4[2] = a2;
  return _swift_task_switch(sub_100465C5C, a2, 0);
}

uint64_t sub_100465C3C()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_100465C5C, v0, 0);
}

uint64_t sub_100465C5C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v1 + 112);
  *(void *)(v0 + 24) = v2;
  if (v2)
  {
    uint64_t v3 = qword_100969B90;
    id v4 = v2;
    if (v3 != -1) {
      swift_once();
    }
    uint64_t v5 = static AirDropActor.shared;
    uint64_t v6 = sub_100465D58;
  }
  else
  {
    *(void *)(v1 + 112) = 0;
    if (qword_100969B90 != -1) {
      swift_once();
    }
    uint64_t v5 = static AirDropActor.shared;
    uint64_t v6 = sub_100465E6C;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100465D58()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  sub_10042A208();

  return _swift_task_switch(sub_100465DC4, v1, 0);
}

uint64_t sub_100465DC4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v1 + 112);
  *(void *)(v1 + 112) = 0;

  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v3 = static AirDropActor.shared;
  return _swift_task_switch(sub_100465E6C, v3, 0);
}

uint64_t sub_100465E6C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 32) = [objc_allocWithZone((Class)type metadata accessor for SDAirDropService()) init];
  return _swift_task_switch(sub_100465EEC, v1, 0);
}

uint64_t sub_100465EEC()
{
  uint64_t v1 = *(void **)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void **)(v2 + 112);
  *(void *)(v2 + 112) = v1;
  id v4 = v1;

  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_100465F6C, v5, 0);
}

uint64_t sub_100465F6C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_10042A014();
  return _swift_task_switch(sub_100465FD8, v1, 0);
}

uint64_t sub_100465FD8()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100466138(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_100466154, a2, 0);
}

uint64_t sub_100466154()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 24) + 112);
  *(void *)(v0 + 32) = v1;
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = sub_1004661E0;
  }
  else
  {
    uint64_t v3 = sub_100466278;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1004661E0()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v0 = static AirDropActor.shared;
  return _swift_task_switch(sub_1004662A0, v0, 0);
}

uint64_t sub_100466278()
{
  **(unsigned char **)(v0 + 16) = *(void *)(v0 + 32) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004662A0()
{
  uint64_t v1 = *(void **)(v0 + 32);
  sub_10042A208();

  return _swift_task_switch(sub_100466658, 0, 0);
}

id sub_100466410()
{
  uint64_t v1 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  v1[14] = 0;
  v3.receiver = v1;
  v3.super_class = v0;
  return [super init];
}

uint64_t sub_1004664B4()
{
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for SDAirDropService_objc()
{
  return self;
}

uint64_t sub_100466510(uint64_t a1)
{
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *id v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_10000A6F4;
  return _swift_task_switch(sub_100466154, v1, 0);
}

uint64_t sub_1004665BC(uint64_t a1)
{
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *id v4 = v2;
  v4[1] = sub_10000A6F0;
  return sub_100465B94(a1, v1);
}

uint64_t sub_10046665C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_100249444((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *objc_super v3 = 0x8000000000000000;
    sub_100591338(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *objc_super v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000A7E8(a1, (uint64_t *)&unk_10096AC20);
    sub_1002A82C8(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_10000A7E8((uint64_t)v9, (uint64_t *)&unk_10096AC20);
  }
}

uint64_t sub_100466734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_1002AD354((long long *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *objc_super v3 = 0x8000000000000000;
    sub_1005916B4(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *objc_super v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_10000A7E8(a1, &qword_100974E88);
    sub_1002A8508(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_10000A7E8((uint64_t)v9, &qword_100974E88);
  }
}

uint64_t sub_10046680C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10046752C(a1, a2, a3, (uint64_t *)&unk_10096C4D0, (uint64_t (*)(void))&type metadata accessor for SFClientIdentity, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_100591BBC, (void (*)(uint64_t, uint64_t))sub_1002A8B7C);
}

uint64_t sub_100466854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v8 = sub_10000A844(&qword_10096C908);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SDAirDropReceiveClassroomHandler.Continuation();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_10000A7E8(a1, &qword_10096C908);
    sub_1002A8BBC(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_10000A7E8((uint64_t)v10, &qword_10096C908);
  }
  else
  {
    sub_100484D20(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SDAirDropReceiveClassroomHandler.Continuation);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *id v4 = 0x8000000000000000;
    sub_100591BF0((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *id v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100466A24(uint64_t a1, uint64_t a2)
{
  return sub_100466A6C(a1, a2, &qword_100970920, (uint64_t (*)(void))&type metadata accessor for SFAirDropReceive.Transfer, (void (*)(char *, uint64_t, uint64_t))sub_1005920C0, (void (*)(uint64_t))sub_1002A8C50);
}

uint64_t sub_100466A6C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void), void (*a5)(char *, uint64_t, uint64_t), void (*a6)(uint64_t))
{
  uint64_t v11 = v6;
  uint64_t v14 = sub_10000A844(a3);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a4(0);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v25 - v19;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(a1, 1, v17) == 1)
  {
    sub_10000A7E8(a1, a3);
    a6(a2);
    uint64_t v21 = type metadata accessor for SFAirDrop.TransferIdentifier();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(a2, v21);
    return sub_10000A7E8((uint64_t)v16, a3);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v20, a1, v17);
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = *v11;
    *uint64_t v11 = 0x8000000000000000;
    a5(v20, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v11 = v26;
    swift_bridgeObjectRelease();
    uint64_t v24 = type metadata accessor for SFAirDrop.TransferIdentifier();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(a2, v24);
  }
}

uint64_t sub_100466CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v8 = sub_10000A844(&qword_10096D8B8);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_10000A7E8(a1, &qword_10096D8B8);
    sub_1002A8F04(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_10000A7E8((uint64_t)v10, &qword_10096D8B8);
  }
  else
  {
    sub_100484D20(a1, (uint64_t)v13, type metadata accessor for SDAirDropDiscoveredEndpoint);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *id v4 = 0x8000000000000000;
    sub_1005926D8((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *id v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100466E7C(uint64_t a1, uint64_t a2)
{
  objc_super v3 = v2;
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_100975078);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A844((uint64_t *)&unk_10096C7C0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_10000A7E8(a1, (uint64_t *)&unk_100975078);
    sub_1002A9040(a2, (uint64_t)v8);
    uint64_t v13 = type metadata accessor for SFAirDrop.TransferIdentifier();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_10000A7E8((uint64_t)v8, (uint64_t *)&unk_100975078);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *objc_super v3 = 0x8000000000000000;
    sub_100592B28((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *objc_super v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = type metadata accessor for SFAirDrop.TransferIdentifier();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_1004670AC(uint64_t a1, uint64_t a2)
{
  objc_super v3 = v2;
  uint64_t v6 = sub_10000A844(&qword_100974EE0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SDAirDropLegacySessionLogger.Transfer(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_10000A7E8(a1, &qword_100974EE0);
    sub_1002A9218(a2, (uint64_t)v8);
    uint64_t v13 = type metadata accessor for SFAirDrop.TransferIdentifier();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_10000A7E8((uint64_t)v8, &qword_100974EE0);
  }
  else
  {
    sub_100484D20(a1, (uint64_t)v11, type metadata accessor for SDAirDropLegacySessionLogger.Transfer);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *objc_super v3 = 0x8000000000000000;
    sub_100592D54((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *objc_super v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = type metadata accessor for SFAirDrop.TransferIdentifier();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_1004672CC(uint64_t a1, uint64_t a2)
{
  return sub_100466A6C(a1, a2, &qword_100975070, (uint64_t (*)(void))&type metadata accessor for SFAirDropSend.Transfer, (void (*)(char *, uint64_t, uint64_t))sub_100592F28, (void (*)(uint64_t))sub_1002A9410);
}

uint64_t sub_100467314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v8 = sub_10000A844((uint64_t *)&unk_100974F20);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for RegistrationState(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_10000A7E8(a1, (uint64_t *)&unk_100974F20);
    sub_1002A965C(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_10000A7E8((uint64_t)v10, (uint64_t *)&unk_100974F20);
  }
  else
  {
    sub_100484D20(a1, (uint64_t)v13, type metadata accessor for RegistrationState);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *id v4 = 0x8000000000000000;
    sub_10059334C((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *id v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1004674E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10046752C(a1, a2, a3, (uint64_t *)&unk_100975040, (uint64_t (*)(void))&type metadata accessor for Date, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1005935B8, (void (*)(uint64_t, uint64_t))sub_1002A9874);
}

uint64_t sub_10046752C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void), void (*a6)(char *, uint64_t, uint64_t, uint64_t), void (*a7)(uint64_t, uint64_t))
{
  uint64_t v24 = a6;
  uint64_t v11 = v7;
  uint64_t v15 = sub_10000A844(a4);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a5(0);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v24 - v20;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(a1, 1, v18) == 1)
  {
    sub_10000A7E8(a1, a4);
    a7(a2, a3);
    swift_bridgeObjectRelease();
    return sub_10000A7E8((uint64_t)v17, a4);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v21, a1, v18);
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = *v11;
    *uint64_t v11 = 0x8000000000000000;
    v24(v21, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v11 = v25;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100467720(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1002AF688((long long *)a1, (uint64_t)v13);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    uint64_t v5 = sub_1002AF758((uint64_t)v13, v14);
    __chkstk_darwin(v5);
    uint64_t v7 = (uint64_t *)&v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *))(v8 + 16))(v7);
    sub_10048324C(*v7, a2, isUniquelyReferenced_nonNull_native, &v12);
    sub_10024D338((uint64_t)v13);
    *uint64_t v2 = v12;
    swift_bridgeObjectRelease();
    uint64_t v9 = type metadata accessor for UUID();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a2, v9);
  }
  else
  {
    sub_10000A7E8(a1, &qword_100974F18);
    sub_1002A9A80(a2, (uint64_t)v13);
    uint64_t v11 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a2, v11);
    return sub_10000A7E8((uint64_t)v13, &qword_100974F18);
  }
}

uint64_t sub_1004678EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v8 = sub_10000A844(&qword_100975008);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000A844(&qword_10096C6C8);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_10000A7E8(a1, &qword_100975008);
    sub_1002A9E88(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_10000A7E8((uint64_t)v10, &qword_100975008);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, a1, v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *id v4 = 0x8000000000000000;
    sub_100593F04((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    *id v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100467ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10046752C(a1, a2, a3, &qword_100975010, (uint64_t (*)(void))&type metadata accessor for NWBrowser.Result, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1005940E4, (void (*)(uint64_t, uint64_t))sub_1002AA150);
}

uint64_t sub_100467B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  if (a1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    *objc_super v3 = 0x8000000000000000;
    sub_100594118(a1, a2, a3, isUniquelyReferenced_nonNull_native);
    *objc_super v3 = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_1005838BC(a2, a3);
    char v11 = v10;
    swift_bridgeObjectRelease();
    if (v11)
    {
      char v12 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v13 = *v3;
      uint64_t v16 = *v4;
      *id v4 = 0x8000000000000000;
      if ((v12 & 1) == 0)
      {
        sub_10058FC3C();
        uint64_t v13 = v16;
      }
      swift_bridgeObjectRelease();
      sub_1002ACC60(v9, v13);
      *id v4 = v13;
      swift_release();
      swift_bridgeObjectRelease();
    }
    else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
    {
      __break(0xC471u);
    }
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_100467C70(uint64_t a1, uint64_t a2, Swift::UInt a3)
{
  id v4 = v3;
  if (a2)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *objc_super v3 = 0x8000000000000000;
    sub_100594850(a1, a2, a3, isUniquelyReferenced_nonNull_native);
    *objc_super v3 = v14;
  }
  else
  {
    unint64_t result = sub_100583C14(a3);
    if ((v10 & 1) == 0) {
      return result;
    }
    unint64_t v11 = result;
    int v12 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v3;
    uint64_t v15 = *v4;
    *id v4 = 0x8000000000000000;
    if (!v12)
    {
      sub_100590408();
      uint64_t v13 = v15;
    }
    sub_1002ACE4C(v11, v13);
    *id v4 = v13;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100467D68(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NWEndpoint();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v21 - v7;
  unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v22 = a1 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  uint64_t v25 = v3 + 32;
  uint64_t v26 = v3 + 16;
  int64_t v23 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v24 = v3 + 8;
  uint64_t v27 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (v12)
  {
    unint64_t v15 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v16 = v15 | (v14 << 6);
LABEL_22:
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v8, *(void *)(v27 + 56) + *(void *)(v3 + 72) * v16, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    uint64_t v20 = NWEndpoint.nw.getter();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    if (v20)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      uint64_t result = specialized Array._endMutation()();
    }
  }
  int64_t v17 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v17 >= v23) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v22 + 8 * v17);
  ++v14;
  if (v18) {
    goto LABEL_21;
  }
  int64_t v14 = v17 + 1;
  if (v17 + 1 >= v23) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v22 + 8 * v14);
  if (v18) {
    goto LABEL_21;
  }
  int64_t v14 = v17 + 2;
  if (v17 + 2 >= v23) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v22 + 8 * v14);
  if (v18) {
    goto LABEL_21;
  }
  int64_t v14 = v17 + 3;
  if (v17 + 3 >= v23) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v22 + 8 * v14);
  if (v18)
  {
LABEL_21:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
    goto LABEL_22;
  }
  int64_t v19 = v17 + 4;
  if (v19 >= v23)
  {
LABEL_26:
    swift_release();
    return v28;
  }
  unint64_t v18 = *(void *)(v22 + 8 * v19);
  if (v18)
  {
    int64_t v14 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v23) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v22 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_21;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100468078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v27 = a4;
  uint64_t v28 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = __chkstk_darwin(v28);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v26 - v11;
  uint64_t v13 = a1 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(a1 + 56);
  int64_t v29 = (unint64_t)(v14 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  if (!v16) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    sub_1004849EC(*(void *)(a1 + 48) + *(void *)(v7 + 72) * i, (uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100484D20((uint64_t)v12, (uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (sub_10031A69C(a2, a3))
    {
      swift_release();
      uint64_t v24 = v27;
      sub_100484D20((uint64_t)v10, v27, type metadata accessor for SDAirDropDiscoveredEndpoint);
      uint64_t v25 = 0;
LABEL_26:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v24, v25, 1, v28);
      return swift_bridgeObjectRelease();
    }
    uint64_t result = sub_1004838E8((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v21 >= v29) {
      goto LABEL_25;
    }
    unint64_t v22 = *(void *)(v13 + 8 * v21);
    ++v18;
    if (v22) {
      goto LABEL_20;
    }
    int64_t v18 = v21 + 1;
    if (v21 + 1 >= v29) {
      goto LABEL_25;
    }
    unint64_t v22 = *(void *)(v13 + 8 * v18);
    if (v22) {
      goto LABEL_20;
    }
    int64_t v18 = v21 + 2;
    if (v21 + 2 >= v29) {
      goto LABEL_25;
    }
    unint64_t v22 = *(void *)(v13 + 8 * v18);
    if (v22) {
      goto LABEL_20;
    }
    int64_t v18 = v21 + 3;
    if (v21 + 3 >= v29) {
      goto LABEL_25;
    }
    unint64_t v22 = *(void *)(v13 + 8 * v18);
    if (v22) {
      goto LABEL_20;
    }
    int64_t v23 = v21 + 4;
    if (v23 >= v29)
    {
LABEL_25:
      swift_release();
      uint64_t v25 = 1;
      uint64_t v24 = v27;
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v13 + 8 * v23);
    if (!v22)
    {
      while (1)
      {
        int64_t v18 = v23 + 1;
        if (__OFADD__(v23, 1)) {
          goto LABEL_28;
        }
        if (v18 >= v29) {
          goto LABEL_25;
        }
        unint64_t v22 = *(void *)(v13 + 8 * v18);
        ++v23;
        if (v22) {
          goto LABEL_20;
        }
      }
    }
    int64_t v18 = v23;
LABEL_20:
    unint64_t v16 = (v22 - 1) & v22;
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100468370(uint64_t a1)
{
  v2[29] = a1;
  v2[30] = v1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[31] = v3;
  v2[32] = *(void *)(v3 - 8);
  v2[33] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  v2[34] = static AirDropActor.shared;
  return _swift_task_switch(sub_10046846C, v4, 0);
}

uint64_t sub_10046846C()
{
  uint64_t v1 = (uint64_t *)(*(void *)(v0 + 240)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_100583A00(*(void *)(v0 + 232)), (v4 & 1) != 0))
  {
    sub_100278C8C(*(void *)(v2 + 56) + 40 * v3, v0 + 144);
  }
  else
  {
    *(void *)(v0 + 176) = 0;
    *(_OWORD *)(v0 + 144) = 0u;
    *(_OWORD *)(v0 + 160) = 0u;
  }
  uint64_t v6 = *(void *)(v0 + 256);
  uint64_t v5 = *(void *)(v0 + 264);
  uint64_t v7 = *(void *)(v0 + 248);
  uint64_t v8 = *(void *)(v0 + 232);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
  if (*(void *)(v0 + 168))
  {
    (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    sub_1002AF688((long long *)(v0 + 144), v0 + 104);
LABEL_15:
    sub_1002AF688((long long *)(v0 + 104), v0 + 64);
    uint64_t v24 = *(void *)(v0 + 88);
    uint64_t v25 = *(void *)(v0 + 96);
    sub_10026BB6C((void *)(v0 + 64), v24);
    int64_t v29 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v25 + 40) + **(int **)(v25 + 40));
    uint64_t v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 280) = v26;
    *uint64_t v26 = v0;
    v26[1] = sub_10046881C;
    return v29(v24, v25);
  }
  uint64_t v9 = *(void *)(v0 + 240);
  uint64_t v10 = UUID.uuidString.getter();
  uint64_t v12 = v11;
  uint64_t v13 = (uint64_t *)(v9 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
  swift_beginAccess();
  uint64_t v14 = *v13;
  if (*(void *)(v14 + 16) && (uint64_t v15 = sub_1005838BC(v10, v12), (v16 & 1) != 0))
  {
    sub_1003CF0DC(*(void *)(v14 + 56) + 48 * v15, v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 32) = 0u;
    *(_OWORD *)(v0 + 48) = 0u;
    *(_OWORD *)(v0 + 16) = 0u;
  }
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v17 = *(void *)(v0 + 40);
  uint64_t v19 = *(void *)(v0 + 256);
  uint64_t v18 = *(void *)(v0 + 264);
  uint64_t v20 = *(void *)(v0 + 248);
  if (v17)
  {
    uint64_t v21 = *(void *)(v0 + 48);
    unint64_t v22 = sub_10026BB6C((void *)(v0 + 16), *(void *)(v0 + 40));
    *(void *)(v0 + 128) = v17;
    *(void *)(v0 + 136) = v21;
    int64_t v23 = sub_100278AE4((uint64_t *)(v0 + 104));
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v23, v22, v17);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    sub_10024D338(v0 + 16);
  }
  else
  {
    (*(void (**)(void, void))(v19 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    sub_10000A7E8(v0 + 16, &qword_100974E88);
    *(_OWORD *)(v0 + 104) = 0u;
    *(_OWORD *)(v0 + 120) = 0u;
    *(void *)(v0 + 136) = 0;
  }
  sub_10000A7E8(v0 + 144, &qword_100974FE0);
  if (*(void *)(v0 + 128)) {
    goto LABEL_15;
  }
  sub_10000A7E8(v0 + 104, &qword_100974FE0);
  swift_task_dealloc();
  uint64_t v28 = *(uint64_t (**)(void *))(v0 + 8);
  return v28(&_swiftEmptySetSingleton);
}

uint64_t sub_10046881C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 272);
  *(void *)(*(void *)v1 + 288) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100468934, v2, 0);
}

uint64_t sub_100468934()
{
  sub_10024D338(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 288);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1004689A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  NSString v48 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v46 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v46 - v13;
  if (qword_100969E30 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  char v16 = (uint8_t *)sub_10000B47C(v15, (uint64_t)qword_100974DB0);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v52 = a1;
  v17(v14, a1, v6);
  v47 = v16;
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  BOOL v20 = os_log_type_enabled(v18, v19);
  NSString v49 = v12;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v50 = v3;
    unint64_t v22 = (uint8_t *)v21;
    v58[0] = swift_slowAlloc();
    uint64_t v51 = v7;
    *(_DWORD *)unint64_t v22 = 136315138;
    sub_10000BAA0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&long long v54 = sub_100254634(v23, v24, v58);
    uint64_t v7 = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void (**)(char *, uint64_t))(v7 + 8);
    v25(v14, v6);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Adding transferring endpointID: %s", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v3 = v50;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v25 = *(void (**)(char *, uint64_t))(v7 + 8);
    v25(v14, v6);
  }

  uint64_t v26 = (uint64_t *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID);
  swift_beginAccess();
  uint64_t v27 = *v26;
  if (*(void *)(*v26 + 16) && (unint64_t v28 = sub_100583A00(v52), (v29 & 1) != 0))
  {
    uint64_t v50 = v3;
    uint64_t v51 = v7;
    sub_100278C8C(*(void *)(v27 + 56) + 40 * v28, (uint64_t)&v54);
    sub_1002AF688(&v54, (uint64_t)v58);
    swift_endAccess();
    sub_100278C8C((uint64_t)v58, (uint64_t)&v54);
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v30, v31))
    {
      Swift::String v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      v57[0] = v52;
      v47 = v32;
      *(_DWORD *)Swift::String v32 = 136315138;
      uint64_t v46 = v32 + 4;
      uint64_t v33 = a2;
      uint64_t v34 = v55;
      uint64_t v35 = v56;
      sub_10026BB6C(&v54, v55);
      uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v35 + 32);
      uint64_t v37 = (uint64_t)v49;
      uint64_t v38 = v35;
      a2 = v33;
      v36(v34, v38);
      sub_10000BAA0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v41 = v40;
      v25((char *)v37, v6);
      uint64_t v53 = sub_100254634(v39, v41, v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10024D338((uint64_t)&v54);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Adding connectable to transferringConnectables: %s", v47, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10024D338((uint64_t)&v54);

      uint64_t v37 = (uint64_t)v49;
    }
    uint64_t v43 = v59;
    uint64_t v44 = v60;
    sub_10026BB6C(v58, v59);
    os_log_type_t v45 = v48;
    (*(void (**)(uint64_t, uint64_t))(v44 + 32))(v43, v44);
    swift_beginAccess();
    sub_100596028(v37, v45);
    swift_endAccess();
    v25((char *)v37, v6);
    sub_100278C8C((uint64_t)v58, a2);
    return sub_10024D338((uint64_t)v58);
  }
  else
  {
    uint64_t result = swift_endAccess();
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_100468F98(uint64_t a1)
{
  v2[40] = a1;
  v2[41] = v1;
  sub_10000A844(&qword_100974EA0);
  v2[42] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UUID();
  v2[43] = v3;
  v2[44] = *(void *)(v3 - 8);
  v2[45] = swift_task_alloc();
  v2[46] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  v2[47] = static AirDropActor.shared;
  return _swift_task_switch(sub_1004690D4, v4, 0);
}

uint64_t sub_1004690D4()
{
  uint64_t v47 = v0;
  if (qword_100969E30 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 368);
  uint64_t v2 = *(void *)(v0 + 344);
  uint64_t v3 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 320);
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000B47C(v5, (uint64_t)qword_100974DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = *(void *)(v0 + 368);
  uint64_t v11 = *(void *)(v0 + 344);
  uint64_t v10 = *(void *)(v0 + 352);
  if (v8)
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    sub_10000BAA0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 312) = sub_100254634(v13, v14, &v46);
    uint64_t v15 = (uint64_t *)(v0 + 320);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    char v16 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v16(v9, v11);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Removing transferring endpointID: %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    char v16 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v16(v9, v11);

    uint64_t v15 = (uint64_t *)(v0 + 320);
  }
  uint64_t v17 = (uint64_t *)(*(void *)(v0 + 328)
                  + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID);
  swift_beginAccess();
  uint64_t v18 = *v17;
  if (*(void *)(v18 + 16) && (unint64_t v19 = sub_100583A00(*v15), (v20 & 1) != 0))
  {
    os_log_type_t v45 = v16;
    sub_100278C8C(*(void *)(v18 + 56) + 40 * v19, v0 + 104);
    sub_1002AF688((long long *)(v0 + 104), v0 + 64);
    swift_endAccess();
    Swift::String v42 = (void *)(v0 + 64);
    sub_100278C8C(v0 + 64, v0 + 144);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = *(void *)(v0 + 360);
      uint64_t v41 = *(void *)(v0 + 344);
      unint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)unint64_t v24 = 136315138;
      uint64_t v26 = *(void *)(v0 + 168);
      uint64_t v25 = *(void *)(v0 + 176);
      sub_10026BB6C((void *)(v0 + 144), v26);
      (*(void (**)(uint64_t, uint64_t))(v25 + 32))(v26, v25);
      sub_10000BAA0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v29 = v28;
      v45(v23, v41);
      *(void *)(v0 + 304) = sub_100254634(v27, v29, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10024D338(v0 + 144);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Removing connectable from transferringConnectables: %s", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10024D338(v0 + 144);
    }

    uint64_t v32 = *(void *)(v0 + 360);
    uint64_t v33 = *(void *)(v0 + 336);
    uint64_t v43 = *(void *)(v0 + 344);
    uint64_t v34 = *(void *)(v0 + 88);
    uint64_t v35 = *(void *)(v0 + 96);
    sub_10026BB6C(v42, v34);
    (*(void (**)(uint64_t, uint64_t))(v35 + 32))(v34, v35);
    swift_beginAccess();
    sub_1005A1618(v32, v33);
    swift_endAccess();
    v45(v32, v43);
    sub_10000A7E8(v33, &qword_100974EA0);
    uint64_t v36 = *(void *)(v0 + 88);
    uint64_t v37 = *(void *)(v0 + 96);
    sub_10026BB6C(v42, v36);
    (*(void (**)(uint64_t, uint64_t))(v37 + 32))(v36, v37);
    swift_beginAccess();
    sub_1002A93F8(v32);
    v45(v32, v43);
    swift_endAccess();
    swift_unknownObjectRelease();
    uint64_t v38 = *(void *)(v0 + 88);
    uint64_t v39 = *(void *)(v0 + 96);
    sub_10026BB6C(v42, v38);
    uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v39 + 40) + **(int **)(v39 + 40));
    unint64_t v40 = (void *)swift_task_alloc();
    *(void *)(v0 + 384) = v40;
    *unint64_t v40 = v0;
    v40[1] = sub_1004697EC;
    return v44(v38, v39);
  }
  else
  {
    swift_endAccess();
    sub_10046B384();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
    return v30();
  }
}

uint64_t sub_1004697EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 376);
  *(void *)(*(void *)v1 + 392) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100469904, v2, 0);
}

uint64_t sub_100469904()
{
  uint64_t v1 = (uint64_t)(v0 + 8);
  uint64_t v2 = *(void *)(v0[49] + 16);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v3 = v0 + 2;
    unint64_t v28 = v0;
    uint64_t v4 = (uint64_t *)(v0[41] + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
    swift_beginAccess();
    uint64_t v5 = *v4;
    uint64_t v6 = swift_task_alloc();
    uint64_t v27 = v0 + 8;
    *(void *)(v6 + 16) = v1;
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_100482488((uint64_t)sub_100484D88, v6, v5);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v29 = v7 + 64;
    uint64_t v8 = -1;
    uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
    if (-v9 < 64) {
      uint64_t v8 = ~(-1 << -(char)v9);
    }
    unint64_t v10 = v8 & *(void *)(v7 + 64);
    int64_t v30 = (unint64_t)(63 - v9) >> 6;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v13 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v14 = v13 | (v12 << 6);
      }
      else
      {
        int64_t v15 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_38:
          __break(1u);
          return result;
        }
        if (v15 >= v30) {
          goto LABEL_31;
        }
        unint64_t v16 = *(void *)(v29 + 8 * v15);
        ++v12;
        if (!v16)
        {
          int64_t v12 = v15 + 1;
          if (v15 + 1 >= v30) {
            goto LABEL_31;
          }
          unint64_t v16 = *(void *)(v29 + 8 * v12);
          if (!v16)
          {
            int64_t v12 = v15 + 2;
            if (v15 + 2 >= v30) {
              goto LABEL_31;
            }
            unint64_t v16 = *(void *)(v29 + 8 * v12);
            if (!v16)
            {
              int64_t v12 = v15 + 3;
              if (v15 + 3 >= v30) {
                goto LABEL_31;
              }
              unint64_t v16 = *(void *)(v29 + 8 * v12);
              if (!v16)
              {
                int64_t v12 = v15 + 4;
                if (v15 + 4 >= v30) {
                  goto LABEL_31;
                }
                unint64_t v16 = *(void *)(v29 + 8 * v12);
                if (!v16)
                {
                  int64_t v17 = v15 + 5;
                  if (v17 >= v30)
                  {
LABEL_31:
                    swift_release();
                    uint64_t v0 = v28;
                    if (*(void *)(v7 + 16)) {
                      sub_10046F034();
                    }
                    swift_release();
                    uint64_t v1 = (uint64_t)v27;
                    break;
                  }
                  unint64_t v16 = *(void *)(v29 + 8 * v17);
                  if (!v16)
                  {
                    while (1)
                    {
                      int64_t v12 = v17 + 1;
                      if (__OFADD__(v17, 1)) {
                        goto LABEL_38;
                      }
                      if (v12 >= v30) {
                        goto LABEL_31;
                      }
                      unint64_t v16 = *(void *)(v29 + 8 * v12);
                      ++v17;
                      if (v16) {
                        goto LABEL_26;
                      }
                    }
                  }
                  int64_t v12 = v17;
                }
              }
            }
          }
        }
LABEL_26:
        unint64_t v10 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
      }
      uint64_t v18 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v14);
      uint64_t v20 = *v18;
      uint64_t v19 = v18[1];
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v21 = sub_1005838BC(v20, v19);
      char v23 = v22;
      swift_bridgeObjectRelease();
      if (v23)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v25 = *v4;
        uint64_t v31 = *v4;
        *uint64_t v4 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10058CE40();
          uint64_t v25 = v31;
        }
        swift_bridgeObjectRelease();
        sub_1002AD354((long long *)(*(void *)(v25 + 56) + 48 * v21), v3);
        sub_1002AAA60(v21, v25);
        *uint64_t v4 = v25;
        swift_bridgeObjectRelease();
      }
      else
      {
        v3[1] = 0u;
        v3[2] = 0u;
        *uint64_t v3 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_10000A7E8((uint64_t)v3, &qword_100974E88);
      uint64_t result = swift_endAccess();
    }
  }
  sub_10024D338(v1);
  sub_10046B384();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(void))v0[1];
  return v26();
}

uint64_t sub_100469CB8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for SFAirDropReceive.AskRequest();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropReceive.Transfer.State();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SFPlatform();
  v2[10] = v5;
  v2[11] = *(void *)(v5 - 8);
  v2[12] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  return _swift_task_switch(sub_100469E68, v6, 0);
}

uint64_t sub_100469E68()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  static SFPlatform.macOS.getter();
  char v4 = static SFPlatform.isPlatform(_:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v4)
  {
    uint64_t v6 = v0[8];
    uint64_t v5 = v0[9];
    uint64_t v7 = v0[7];
    SFAirDropReceive.Transfer.state.getter();
    int v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v5, v7);
    if (v8 == enum case for SFAirDropReceive.Transfer.State.waitingForOpenResponse(_:))
    {
      uint64_t v9 = v0[9];
      (*(void (**)(uint64_t, void))(v0[8] + 96))(v9, v0[7]);
      uint64_t v10 = sub_10000A844((uint64_t *)&unk_100972400);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = v9 + *(int *)(v10 + 80);
      uint64_t v12 = sub_10000A844(&qword_10096B2C0);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
      uint64_t v13 = type metadata accessor for SFAirDropReceive.ItemDestination();
LABEL_9:
      (*(void (**)(void))(*(void *)(v13 - 8) + 8))(v0[9]);
      SFAirDropReceive.Transfer.askRequest.getter();
      char v22 = (void *)swift_task_alloc();
      v0[13] = v22;
      void *v22 = v0;
      v22[1] = sub_10046A1EC;
      uint64_t v23 = v0[6];
      return sub_10046A374(v23);
    }
    if (v8 == enum case for SFAirDropReceive.Transfer.State.completedSuccessfully(_:))
    {
      uint64_t v14 = v0[9];
      (*(void (**)(uint64_t, void))(v0[8] + 96))(v14, v0[7]);
      uint64_t v15 = v14 + *(int *)(sub_10000A844((uint64_t *)&unk_100974550) + 48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = type metadata accessor for SFAirDropReceive.ItemDestination();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
LABEL_8:
      uint64_t v13 = type metadata accessor for SFAirDropReceive.Transfer.Metrics();
      goto LABEL_9;
    }
    uint64_t v17 = v0[8];
    uint64_t v18 = v0[9];
    uint64_t v19 = v0[7];
    if (v8 == enum case for SFAirDropReceive.Transfer.State.transferFailed(_:))
    {
      (*(void (**)(void, uint64_t))(v17 + 96))(v0[9], v19);
      uint64_t v20 = v18 + *(int *)(sub_10000A844(&qword_100970340) + 48);
      uint64_t v21 = type metadata accessor for SFAirDropReceive.Failure();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
      goto LABEL_8;
    }
    (*(void (**)(void, uint64_t))(v17 + 8))(v0[9], v19);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_10046A1EC()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v1[5] + 8))(v1[6], v1[4]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v2[1];
  return v3();
}

uint64_t sub_10046A374(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  sub_10000A844(&qword_100974E98);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFPlatform();
  v2[16] = v4;
  v2[17] = *(void *)(v4 - 8);
  v2[18] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_10046A518, v5, 0);
}

uint64_t sub_10046A518()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[16];
  static SFPlatform.macOS.getter();
  char v4 = static SFPlatform.isPlatform(_:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v4)
  {
    uint64_t v5 = v0[9];
    SFAirDropReceive.AskRequest.id.getter();
    uint64_t v6 = (uint64_t *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_receivingDisplayables);
    swift_beginAccess();
    uint64_t v7 = *v6;
    if (*(void *)(*v6 + 16) && (unint64_t v8 = sub_10058392C(v0[15]), (v9 & 1) != 0))
    {
      unint64_t v10 = v8;
      uint64_t v11 = v0[13];
      uint64_t v35 = v0[14];
      uint64_t v12 = v0[11];
      uint64_t v33 = v0[12];
      uint64_t v13 = v0[10];
      uint64_t v34 = v0[15];
      uint64_t v14 = *(void *)(v7 + 56);
      uint64_t v15 = type metadata accessor for NWEndpoint();
      uint64_t v16 = *(void *)(v15 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v16 + 16))(v12, v14 + *(void *)(v16 + 72) * v10, v15);
      uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
      v17(v12, 0, 1, v15);
      sub_10000A7E8(v12, &qword_100974E98);
      swift_endAccess();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v34, v33);
      SFAirDropReceive.AskRequest.id.getter();
      v17(v13, 1, 1, v15);
      swift_beginAccess();
      sub_100466A6C(v13, v35, &qword_100974E98, (uint64_t (*)(void))&type metadata accessor for NWEndpoint, (void (*)(char *, uint64_t, uint64_t))sub_100591E5C, (void (*)(uint64_t))sub_1002A8C10);
      swift_endAccess();
      unint64_t v18 = sub_1004734E0();
      if (v18 >> 62) {
        uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
      }
      else {
        uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v20 = v0[9];
      swift_bridgeObjectRelease();
      sub_10056D604(v19);
      uint64_t v21 = *(void (**)(void))(v20 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler);
      if (v21)
      {
        swift_retain();
        sub_1004734E0();
        v21();
        sub_1002CA430((uint64_t)v21);
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v22 = v0[15];
      uint64_t v23 = v0[12];
      uint64_t v24 = v0[13];
      uint64_t v25 = v0[11];
      uint64_t v26 = type metadata accessor for NWEndpoint();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
      sub_10000A7E8(v25, &qword_100974E98);
      swift_endAccess();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
      if (qword_100969E30 != -1) {
        swift_once();
      }
      uint64_t v27 = type metadata accessor for Logger();
      sub_10000B47C(v27, (uint64_t)qword_100974DB0);
      unint64_t v28 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v28, v29))
      {
        int64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int64_t v30 = 0;
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "No receive displayable present, skipping remove", v30, 2u);
        swift_slowDealloc();
      }
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_10046A9A8(uint64_t a1)
{
  v2[21] = a1;
  v2[22] = v1;
  sub_10000A844(&qword_100974E98);
  v2[23] = swift_task_alloc();
  type metadata accessor for SFAirDrop.TransferIdentifier();
  v2[24] = swift_task_alloc();
  sub_10000A844(&qword_100974EA0);
  v2[25] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UUID();
  v2[26] = v3;
  v2[27] = *(void *)(v3 - 8);
  v2[28] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFPlatform();
  v2[29] = v4;
  v2[30] = *(void *)(v4 - 8);
  v2[31] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  v2[32] = static AirDropActor.shared;
  return _swift_task_switch(sub_10046AB8C, v5, 0);
}

uint64_t sub_10046AB8C()
{
  uint64_t v2 = v0[30];
  uint64_t v1 = v0[31];
  uint64_t v3 = v0[29];
  static SFPlatform.macOS.getter();
  char v4 = static SFPlatform.isPlatform(_:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if ((v4 & 1) != 0
    && (uint64_t v5 = v0[22] + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_browseClientIDs,
        swift_beginAccess(),
        *(void *)(*(void *)v5 + 16)))
  {
    uint64_t v6 = SFAirDropReceive.AskRequest.senderID.getter();
    uint64_t v8 = v7;
    v0[33] = v7;
    uint64_t v9 = SFAirDropReceive.AskRequest.contactIdentifier.getter();
    uint64_t v11 = v10;
    v0[34] = v10;
    uint64_t v12 = (void *)swift_task_alloc();
    v0[35] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_10046AD3C;
    uint64_t v13 = v0[25];
    return sub_10047CD08(v13, v6, v8, v9, v11);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
}

uint64_t sub_10046AD3C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 256);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10046AE8C, v1, 0);
}

uint64_t sub_10046AE8C()
{
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 200);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000A7E8(v3, &qword_100974EA0);
LABEL_12:
    if (qword_100969E30 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_10000B47C(v21, (uint64_t)qword_100974DB0);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "No matching AirDropable endpoint found, adding to receiving displayables", v24, 2u);
      swift_slowDealloc();
    }
    uint64_t v26 = *(void *)(v0 + 184);
    uint64_t v25 = *(void *)(v0 + 192);

    SFAirDropReceive.AskRequest.id.getter();
    sub_10065F820(v26);
    uint64_t v27 = type metadata accessor for NWEndpoint();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 0, 1, v27);
    swift_beginAccess();
    sub_100466A6C(v26, v25, &qword_100974E98, (uint64_t (*)(void))&type metadata accessor for NWEndpoint, (void (*)(char *, uint64_t, uint64_t))sub_100591E5C, (void (*)(uint64_t))sub_1002A8C10);
    swift_endAccess();
    unint64_t v28 = sub_1004734E0();
    if (v28 >> 62) {
      uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    }
    else {
      uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v30 = *(void *)(v0 + 176);
    swift_bridgeObjectRelease();
    sub_10056D604(v29);
    uint64_t v31 = *(void (**)(void))(v30 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler);
    if (v31)
    {
      swift_retain();
      sub_1004734E0();
      v31();
      sub_1002CA430((uint64_t)v31);
      swift_bridgeObjectRelease();
    }
    goto LABEL_20;
  }
  uint64_t v4 = *(void *)(v0 + 176);
  (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(*(void *)(v0 + 224), v3, v1);
  uint64_t v5 = (uint64_t *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID);
  swift_beginAccess();
  uint64_t v6 = *v5;
  if (!*(void *)(v6 + 16) || (unint64_t v7 = sub_100583A00(*(void *)(v0 + 224)), (v8 & 1) == 0))
  {
    uint64_t v19 = *(void *)(v0 + 216);
    uint64_t v18 = *(void *)(v0 + 224);
    uint64_t v20 = *(void *)(v0 + 208);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    goto LABEL_12;
  }
  sub_100278C8C(*(void *)(v6 + 56) + 40 * v7, v0 + 56);
  sub_1002AF688((long long *)(v0 + 56), v0 + 16);
  swift_endAccess();
  uint64_t v9 = *(void *)(v0 + 40);
  uint64_t v10 = *(void *)(v0 + 48);
  sub_10026BB6C((void *)(v0 + 16), v9);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10) & 1) == 0)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 216) + 8))(*(void *)(v0 + 224), *(void *)(v0 + 208));
    sub_10024D338(v0 + 16);
    goto LABEL_12;
  }
  if (qword_100969E30 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10000B47C(v11, (uint64_t)qword_100974DB0);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Connectable endpoint present, skipping receiving displayable addition", v14, 2u);
    swift_slowDealloc();
  }
  uint64_t v16 = *(void *)(v0 + 216);
  uint64_t v15 = *(void *)(v0 + 224);
  uint64_t v17 = *(void *)(v0 + 208);

  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  sub_10024D338(v0 + 16);
LABEL_20:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

void sub_10046B384()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_10046CB78())
  {
    if (qword_100969E30 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_100974DB0);
    unint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "No AirDrop browse clients present, stopping all browsing", v9, 2u);
      swift_slowDealloc();
    }

    sub_10046E980();
    UUID.init()();
    uint64_t v10 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionID];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v3 + 40))(v10, v5, v2);
    swift_endAccess();
    uint64_t v11 = v1;
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      v19[1] = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      v20[0] = v15;
      v19[0] = v14 + 4;
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v10, v2);
      sub_10000BAA0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v18 = v17;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v19[2] = sub_100254634(v16, v18, v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Rolled service sessionID with new ID %s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

uint64_t sub_10046B6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  uint64_t v6 = type metadata accessor for UUID();
  v5[12] = v6;
  v5[13] = *(void *)(v6 - 8);
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  v5[16] = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  v5[17] = swift_task_alloc();
  v5[18] = type metadata accessor for SDNearFieldTap();
  v5[19] = swift_task_alloc();
  v5[20] = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v5[21] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  v5[22] = static AirDropActor.shared;
  return _swift_task_switch(sub_10046B8A0, v7, 0);
}

uint64_t sub_10046B8A0()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = (uint64_t *)v0[17];
  uint64_t v3 = (int *)v0[18];
  uint64_t v4 = (int *)v0[16];
  uint64_t v25 = v0[15];
  uint64_t v6 = v0[12];
  uint64_t v5 = v0[13];
  uint64_t v22 = v6;
  uint64_t v23 = v0[21];
  uint64_t v21 = v0[9];
  uint64_t v24 = v0[8];
  sub_1004849EC(v0[10], v1, (uint64_t (*)(void))type metadata accessor for SDNearFieldTap);
  uint64_t v7 = (uint64_t *)(v1 + v3[13]);
  uint64_t v9 = *v7;
  unint64_t v8 = v7[1];
  *uint64_t v2 = *v7;
  v2[1] = v8;
  uint64_t v10 = v1 + v3[14];
  uint64_t v11 = (char *)v2 + v4[5];
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v0[23] = v12;
  v0[24] = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v12(v11, v10, v6);
  os_log_type_t v13 = (uint64_t *)(v1 + v3[6]);
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];
  uint64_t v16 = (uint64_t *)((char *)v2 + v4[7]);
  *uint64_t v16 = v14;
  v16[1] = v15;
  *((unsigned char *)v2 + v4[8]) = *(unsigned char *)(v1 + v3[12]);
  char v20 = *(unsigned char *)(v1 + v3[19]);
  swift_unknownObjectRetain();
  sub_10025ADCC(v9, v8);
  swift_bridgeObjectRetain();
  sub_1004838E8(v1, (uint64_t (*)(void))type metadata accessor for SDNearFieldTap);
  *((unsigned char *)v2 + v4[9]) = v20;
  *(uint64_t *)((char *)v2 + v4[6]) = v21;
  sub_100484D20((uint64_t)v2, v23, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  swift_storeEnumTagMultiPayload();
  v12((char *)v25, v24, v22);
  v0[25] = type metadata accessor for SDAirDropDiscoveredNearFieldDevice();
  swift_allocObject();
  v0[26] = sub_100656594(v25);
  unint64_t v17 = (void *)swift_task_alloc();
  v0[27] = v17;
  *unint64_t v17 = v0;
  v17[1] = sub_10046BADC;
  uint64_t v18 = v0[21];
  return sub_1006562A8(v18);
}

uint64_t sub_10046BADC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  swift_task_dealloc();
  return _swift_task_switch(sub_10046BBEC, v1, 0);
}

uint64_t sub_10046BBEC()
{
  uint64_t v37 = v0;
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v3 = UUID.uuidString.getter();
  uint64_t v5 = v4;
  uint64_t v33 = v2;
  uint64_t v34 = sub_10000BAA0((unint64_t *)&unk_100974F08, (void (*)(uint64_t))type metadata accessor for SDAirDropDiscoveredNearFieldDevice);
  uint64_t v35 = &off_1008E3F18;
  uint64_t v31 = v1;
  swift_beginAccess();
  swift_retain();
  sub_100466734((uint64_t)&v31, v3, v5);
  swift_endAccess();
  if (qword_100969E30 != -1) {
    swift_once();
  }
  uint64_t v6 = (void (*)(uint64_t, uint64_t, uint64_t))v0[23];
  uint64_t v7 = v0[14];
  uint64_t v8 = v0[12];
  uint64_t v9 = v0[8];
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000B47C(v10, (uint64_t)qword_100974DB0);
  v6(v7, v9, v8);
  swift_retain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v14 = v0[26];
  uint64_t v15 = v0[21];
  uint64_t v17 = v0[13];
  uint64_t v16 = v0[14];
  uint64_t v18 = v0[12];
  if (v13)
  {
    uint64_t v30 = v0[21];
    os_log_type_t type = v12;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315394;
    sub_10000BAA0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[5] = sub_100254634(v20, v21, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
    swift_retain();
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease();
    uint64_t v31 = 0xD000000000000010;
    unint64_t v32 = 0x80000001007BE280;
    uint64_t v22 = *(void *)(v14 + 16);
    uint64_t v23 = *(void **)(v14 + 24);
    swift_bridgeObjectRetain();
    v24._uint64_t countAndFlagsBits = v22;
    v24._unint64_t object = v23;
    String.append(_:)(v24);
    swift_bridgeObjectRelease();
    v25._uint64_t countAndFlagsBits = 41;
    v25._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v25);
    swift_release();
    v0[6] = sub_100254634(v31, v32, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v11, type, "Created near field endpoint for transaction %s: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    uint64_t v26 = v30;
  }
  else
  {

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    swift_release();
    uint64_t v26 = v15;
  }
  sub_1004838E8(v26, type metadata accessor for SDAirDropDiscoveredEndpoint);
  ((void (*)(void, void, void))v0[23])(v0[7], v0[8], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = (uint64_t (*)(void))v0[1];
  return v27();
}

void sub_10046C064(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v34 - v8;
  uint64_t v10 = UUID.uuidString.getter();
  uint64_t v12 = v11;
  BOOL v13 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
  swift_beginAccess();
  uint64_t v14 = *v13;
  if (*(void *)(*v13 + 16) && (uint64_t v15 = sub_1005838BC(v10, v12), (v16 & 1) != 0))
  {
    sub_1003CF0DC(*(void *)(v14 + 56) + 48 * v15, (uint64_t)&v35);
  }
  else
  {
    long long v36 = 0u;
    long long v37 = 0u;
    long long v35 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v17 = *((void *)&v36 + 1);
  sub_10000A7E8((uint64_t)&v35, &qword_100974E88);
  if (v17)
  {
    if (qword_100969E30 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_10000B47C(v18, (uint64_t)qword_100974DB0);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, a1, v3);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v34[1] = a1;
      *(void *)&long long v35 = v22;
      *(_DWORD *)unint64_t v21 = 136315138;
      v34[0] = v21 + 4;
      sub_10000BAA0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v38 = sub_100254634(v23, v24, (uint64_t *)&v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Removing endpoint for near field transaction: %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    }

    uint64_t v31 = UUID.uuidString.getter();
    uint64_t v33 = v32;
    long long v36 = 0u;
    long long v37 = 0u;
    long long v35 = 0u;
    swift_beginAccess();
    sub_100466734((uint64_t)&v35, v31, v33);
    swift_endAccess();
  }
  else
  {
    if (qword_100969E30 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_10000B47C(v25, (uint64_t)qword_100974DB0);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a1, v3);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      unint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v35 = swift_slowAlloc();
      *(_DWORD *)unint64_t v28 = 136315138;
      sub_10000BAA0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v38 = sub_100254634(v29, v30, (uint64_t *)&v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Not tracking endpoint for transaction ID %s", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
  }
}

uint64_t sub_10046C5C4(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v2[3] = v4;
  v2[4] = *(void *)(v4 - 8);
  v2[5] = swift_task_alloc();
  v2[6] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  v2[7] = static AirDropActor.shared;
  uint64_t v5 = (void *)swift_task_alloc();
  v2[8] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10046C710;
  return sub_100468370(a2);
}

uint64_t sub_10046C710(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 56);
  *(void *)(*(void *)v1 + 72) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10046C828, v2, 0);
}

void sub_10046C828()
{
  int64_t v1 = 0;
  uint64_t v2 = v0[9];
  uint64_t v4 = v2 + 56;
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v5 = v0[4];
  uint64_t v6 = -1;
  uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
  if (-v7 < 64) {
    uint64_t v6 = ~(-1 << -(char)v7);
  }
  unint64_t v8 = v6 & v3;
  int64_t v9 = (unint64_t)(63 - v7) >> 6;
  if ((v6 & v3) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v10 | (v1 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v1 << 6))
  {
    uint64_t v15 = v0[5];
    uint64_t v16 = v0[6];
    sub_1004849EC(*(void *)(v2 + 48) + *(void *)(v5 + 72) * i, v16, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100484D20(v16, v15, type metadata accessor for SDAirDropDiscoveredEndpoint);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v18 = (id *)v0[5];
    if (EnumCaseMultiPayload == 3) {
      break;
    }
    sub_1004838E8((uint64_t)v18, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
LABEL_30:
      __break(1u);
      return;
    }
    if (v12 >= v9) {
      goto LABEL_24;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v12);
    ++v1;
    if (!v13)
    {
      int64_t v1 = v12 + 1;
      if (v12 + 1 >= v9) {
        goto LABEL_24;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v1);
      if (!v13)
      {
        int64_t v1 = v12 + 2;
        if (v12 + 2 >= v9) {
          goto LABEL_24;
        }
        unint64_t v13 = *(void *)(v4 + 8 * v1);
        if (!v13)
        {
          int64_t v14 = v12 + 3;
          if (v14 >= v9)
          {
LABEL_24:
            swift_release();
            SFAirDrop.EndpointMetadata.init(imageData:)();
            goto LABEL_26;
          }
          unint64_t v13 = *(void *)(v4 + 8 * v14);
          if (!v13)
          {
            while (1)
            {
              int64_t v1 = v14 + 1;
              if (__OFADD__(v14, 1)) {
                goto LABEL_30;
              }
              if (v1 >= v9) {
                goto LABEL_24;
              }
              unint64_t v13 = *(void *)(v4 + 8 * v1);
              ++v14;
              if (v13) {
                goto LABEL_18;
              }
            }
          }
          int64_t v1 = v14;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v13 - 1) & v13;
  }
  id v19 = *v18;
  id v20 = [*v18 iconImageData];
  if (v20)
  {
    unint64_t v21 = v20;
    static Data._unconditionallyBridgeFromObjectiveC(_:)();
  }
  SFAirDrop.EndpointMetadata.init(imageData:)();

  swift_release();
LABEL_26:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (void (*)(void))v0[1];
  v22();
}

uint64_t sub_10046CAB0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100974DB0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100974DB0);
  if (qword_100969C68 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994588);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10046CB78()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_browseClientIDs;
  swift_beginAccess();
  if (*(void *)(*(void *)v1 + 16))
  {
    if (qword_100969E30 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000B47C(v2, (uint64_t)qword_100974DB0);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v3, v4)) {
      goto LABEL_12;
    }
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    uint64_t v6 = "Keeping browsers alive, browse client still present";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, v3, v4, v6, v5, 2u);
    swift_slowDealloc();
LABEL_12:

    return 0;
  }
  uint64_t v7 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables;
  swift_beginAccess();
  if (*(void *)(*(void *)v7 + 16))
  {
    if (qword_100969E30 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000B47C(v8, (uint64_t)qword_100974DB0);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v3, v4)) {
      goto LABEL_12;
    }
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    uint64_t v6 = "Keeping browsers alive, transfer ongoing";
    goto LABEL_11;
  }
  return 1;
}

uint64_t sub_10046CE14(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_10000A844(&qword_100972420);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_10046CF14(uint64_t a1, uint64_t a2)
{
  sub_10000A844(&qword_100972420);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, objc_class *))(a2 + 16))(a2, isa);
}

id sub_10046CF84(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_applicationServiceBrowser] = 0;
  *(void *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser] = 0;
  uint64_t v11 = &v5[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_classroomBrowser];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  int64_t v12 = v5;
  UUID.init()();
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscoveredEndpoints] = &_swiftEmptySetSingleton;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered] = &_swiftEmptyDictionarySingleton;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_browseClientIDs] = &_swiftEmptySetSingleton;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_displayableIDs] = &_swiftEmptySetSingleton;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID] = &_swiftEmptyDictionarySingleton;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables] = &_swiftEmptySetSingleton;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_receivingDisplayables] = &_swiftEmptyDictionarySingleton;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegateByConnectableID] = &_swiftEmptyDictionarySingleton;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourDiscoveryContinuations] = &_swiftEmptyDictionarySingleton;
  unint64_t v13 = &v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler];
  *(void *)unint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus] = a1;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_nearbyAgent] = a2;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bleController] = a3;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionLogger] = a4;
  id v14 = a1;
  id v15 = a2;
  id v16 = a3;
  swift_retain();

  v22.receiver = v12;
  v22.super_class = ObjectType;
  id v17 = [super init];
  uint64_t v18 = self;
  id v19 = v17;
  id v20 = [v18 defaultCenter];
  [v20 addObserver:v19 selector:"screenStateChangedWithNotification:" name:@"com.apple.sharingd.ScreenStateChanged" object:0];
  if (qword_100969B08 != -1) {
    swift_once();
  }
  [v20 addObserver:v19 selector:"nearFieldDidTap" name:qword_100994300 object:0];

  swift_release();
  return v19;
}

id sub_10046D208(void *a1)
{
  uint64_t v3 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = qword_100969B90;
  id v8 = v1;
  id v9 = a1;
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v10 = static AirDropActor.shared;
  uint64_t v11 = sub_10000BAA0((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  int64_t v12 = (void *)swift_allocObject();
  _OWORD v12[2] = v10;
  v12[3] = v11;
  v12[4] = v8;
  v12[5] = v9;
  swift_retain();
  uint64_t v13 = sub_10028D188((uint64_t)v5, (uint64_t)&unk_100974F88, (uint64_t)v12);
  id v14 = (objc_class *)type metadata accessor for SDAirDropAgentClientToken();
  id v15 = (char *)objc_allocWithZone(v14);
  *(void *)&v15[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropAgentClientToken_agentClient] = v9;
  *(void *)&v15[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropAgentClientToken_task] = v13;
  v18.receiver = v15;
  v18.super_class = v14;
  id v16 = v9;
  return [super init];
}

uint64_t sub_10046D3E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  return _swift_task_switch(sub_10046D484, v6, 0);
}

uint64_t sub_10046D484()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  sub_10046D4F0(*(char **)(v0 + 32));
  unsigned char *v1 = 1;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_10046D4F0(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v4 - 8);
  os_log_t v54 = (os_log_t)((char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  int64_t v12 = (char *)&v46 - v11;
  uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus];
  if ([v13 currentConsoleUser])
  {
    uint64_t v51 = v10;
    uint64_t v52 = v13;
    uint64_t v53 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionLogger];
    sub_10056CAAC(a1);
    if (qword_100969E30 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10000B47C(v14, (uint64_t)qword_100974DB0);
    id v15 = a1;
    id v16 = v2;
    id v17 = v15;
    objc_super v18 = v16;
    id v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    int v21 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v22 = swift_slowAlloc();
      int v49 = v21;
      uint64_t v23 = v22;
      uint64_t v50 = swift_slowAlloc();
      v57[0] = v50;
      *(_DWORD *)uint64_t v23 = 136315394;
      os_log_t v48 = v19;
      sub_10000BAA0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v56 = sub_100254634(v24, v25, v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v26 = &v18[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionID];
      swift_beginAccess();
      uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v47(v12, v26, v6);
      uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v29 = v28;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      uint64_t v55 = sub_100254634(v27, v29, v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      os_log_t v30 = v48;
      _os_log_impl((void *)&_mh_execute_header, v48, (os_log_type_t)v49, "Adding AirDrop browse client %s for session %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v31 = v47;
    }
    else
    {

      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    }
    long long v36 = v51;
    v31(v51, &v17[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_id], v6);
    swift_beginAccess();
    sub_100596028((uint64_t)v12, v36);
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    char v37 = v17[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_applicationServiceEndpointsOnly];
    sub_10046E528();
    sub_10045F7D8();
    swift_bridgeObjectRelease();
    if ((v37 & 1) == 0)
    {
      sub_10046E734();
      if (!*(void *)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_classroomBrowser])
      {
        uint64_t v38 = type metadata accessor for TaskPriority();
        os_log_t v39 = v54;
        (*(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v54, 1, 1, v38);
        uint64_t v40 = swift_allocObject();
        swift_unknownObjectWeakInit();
        type metadata accessor for MainActor();
        swift_retain();
        uint64_t v41 = static MainActor.shared.getter();
        Swift::String v42 = (void *)swift_allocObject();
        v42[2] = v41;
        v42[3] = &protocol witness table for MainActor;
        v42[4] = v40;
        swift_release();
        sub_10028CFA8((uint64_t)v39, (uint64_t)&unk_100974F98, (uint64_t)v42);
        swift_release();
      }
    }
    unint64_t v43 = sub_1004734E0();
    if (v43 >> 62) {
      uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
    }
    else {
      uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    sub_10056D604(v44);
    os_log_type_t v45 = *(void (**)(void))&v18[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler];
    if (v45)
    {
      swift_retain();
      sub_1004734E0();
      v45();
      sub_1002CA430((uint64_t)v45);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (qword_100969E30 != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    sub_10000B47C(v32, (uint64_t)qword_100974DB0);
    os_log_t v54 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v54, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v54, v33, "Browse is intended for different user, ignoring", v34, 2u);
      swift_slowDealloc();
    }
    os_log_t v35 = v54;
  }
}

uint64_t sub_10046DC74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v5[4] = static AirDropActor.shared;
  return _swift_task_switch(sub_10046DD14, v6, 0);
}

uint64_t sub_10046DD14()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropAgentClientToken_task);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10046DDE0;
  return Task.result.getter(v0 + 48, v1, &type metadata for Bool, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_10046DDE0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_task_dealloc();
  return _swift_task_switch(sub_10046DEF0, v1, 0);
}

uint64_t sub_10046DEF0()
{
  sub_10046DF60(*(char **)(*(void *)(v0 + 16)
                         + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropAgentClientToken_agentClient));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10046DF60(char *a1)
{
  uint64_t v3 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([*(id *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus] currentConsoleUser])
  {
    sub_10056CC70(a1);
    if (qword_100969E30 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000B47C(v10, (uint64_t)qword_100974DB0);
    uint64_t v11 = a1;
    int64_t v12 = v1;
    uint64_t v13 = v11;
    uint64_t v14 = v12;
    id v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    int v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v18 = swift_slowAlloc();
      int v28 = v17;
      uint64_t v19 = v18;
      uint64_t v29 = swift_slowAlloc();
      v32[0] = v29;
      *(_DWORD *)uint64_t v19 = 136315394;
      os_log_t v27 = v15;
      sub_10000BAA0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v31 = sub_100254634(v20, v21, v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      *(_WORD *)(v19 + 12) = 2080;
      uint64_t v22 = &v14[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionID];
      swift_beginAccess();
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v22, v6);
      uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v25 = v24;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      uint64_t v30 = sub_100254634(v23, v25, v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      id v15 = v27;
      _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v28, "Removing AirDrop browse client %s for session %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v26 = (uint64_t)&v13[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_id];
    swift_beginAccess();
    sub_1005A1618(v26, (uint64_t)v5);
    swift_endAccess();
    sub_10000A7E8((uint64_t)v5, &qword_100974EA0);
    sub_10046B384();
  }
}

void sub_10046E528()
{
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_applicationServiceBrowser;
  if (!*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_applicationServiceBrowser))
  {
    uint64_t v2 = v0;
    if ([*(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus) isAirDropAllowed])
    {
      if (qword_100969E30 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_10000B47C(v3, (uint64_t)qword_100974DB0);
      uint64_t v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "Starting application service browser", v6, 2u);
        swift_slowDealloc();
      }

      uint64_t v7 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v8 = objc_allocWithZone((Class)type metadata accessor for SDAirDropApplicationServiceBrowser());
      uint64_t v9 = swift_retain();
      id v10 = sub_100491614(v9, (uint64_t)sub_100484B5C, v7);
      swift_release();
      swift_release();
      uint64_t v11 = *(void **)(v2 + v1);
      *(void *)(v2 + v1) = v10;

      uint64_t v12 = *(void *)(v2 + v1);
      if (v12)
      {
        *(void *)(v12 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_delegate + 8) = &off_1008DBC18;
        swift_unknownObjectWeakAssign();
        uint64_t v13 = *(void **)(v2 + v1);
        if (v13)
        {
          id v14 = v13;
          sub_1004902C0();
        }
      }
    }
  }
}

void sub_10046E734()
{
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser;
  if (!*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser))
  {
    uint64_t v2 = v0;
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus);
    if ([v3 isAirDropAllowed])
    {
      if (qword_100969E30 != -1) {
        swift_once();
      }
      uint64_t v4 = type metadata accessor for Logger();
      sub_10000B47C(v4, (uint64_t)qword_100974DB0);
      os_log_type_t v5 = Logger.logObject.getter();
      os_log_type_t v6 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v7 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, v6, "Starting bonjour browser", v7, 2u);
        swift_slowDealloc();
      }

      id v8 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_nearbyAgent);
      uint64_t v9 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bleController);
      uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionLogger);
      uint64_t v11 = swift_allocObject();
      swift_unknownObjectWeakInit();
      objc_allocWithZone((Class)type metadata accessor for SDAirDropBonjourBrowser());
      id v12 = v3;
      id v13 = v8;
      id v14 = v9;
      swift_retain();
      id v15 = sub_1004C8D00(v12, v13, v14, v10, (uint64_t)sub_100484A54, v11);
      os_log_type_t v16 = *(void **)(v2 + v1);
      *(void *)(v2 + v1) = v15;

      uint64_t v17 = *(void *)(v2 + v1);
      if (v17)
      {
        *(void *)(v17 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_delegate + 8) = &off_1008DBC18;
        swift_unknownObjectWeakAssign();
        uint64_t v18 = *(void **)(v2 + v1);
        if (v18)
        {
          id v19 = v18;
          sub_1004C8304();
        }
      }
    }
  }
}

uint64_t sub_10046E980()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844(&qword_10096C6C8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  os_log_type_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  os_log_t v54 = (char *)&v47 - v7;
  uint64_t v8 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100969E30 != -1) {
LABEL_37:
  }
    swift_once();
  uint64_t v11 = type metadata accessor for Logger();
  sub_10000B47C(v11, (uint64_t)qword_100974DB0);
  id v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    id v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Stopping SDAirDropEndpointService", v14, 2u);
    swift_slowDealloc();
  }

  if (sub_10046CB78())
  {
    uint64_t v15 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_applicationServiceBrowser;
    os_log_type_t v16 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_applicationServiceBrowser);
    if (v16)
    {
      id v17 = v16;
      sub_100490800();

      os_log_type_t v16 = *(void **)(v1 + v15);
    }
    *(void *)(v1 + v15) = 0;
  }
  if (sub_10046CB78())
  {
    uint64_t v18 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser;
    id v19 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser);
    if (v19)
    {
      id v20 = v19;
      sub_1004C8748();

      id v19 = *(void **)(v1 + v18);
    }
    *(void *)(v1 + v18) = 0;
  }
  uint64_t v21 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v10, 1, 1, v21);
  uint64_t v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v23 = static MainActor.shared.getter();
  unint64_t v24 = (void *)swift_allocObject();
  v24[2] = v23;
  v24[3] = &protocol witness table for MainActor;
  v24[4] = v22;
  swift_release();
  sub_10028CFA8((uint64_t)v10, (uint64_t)&unk_10096D898, (uint64_t)v24);
  swift_release();
  unint64_t v25 = (void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscoveredEndpoints);
  swift_beginAccess();
  void *v25 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  uint64_t v26 = (void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
  swift_beginAccess();
  *uint64_t v26 = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  sub_10046F034();
  uint64_t v49 = v1;
  os_log_t v27 = (void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourDiscoveryContinuations);
  swift_beginAccess();
  os_log_t v48 = v27;
  uint64_t v28 = *v27;
  uint64_t v29 = *(void *)(*v27 + 64);
  uint64_t v50 = *v27 + 64;
  uint64_t v30 = 1 << *(unsigned char *)(v28 + 32);
  uint64_t v31 = -1;
  if (v30 < 64) {
    uint64_t v31 = ~(-1 << v30);
  }
  unint64_t v32 = v31 & v29;
  uint64_t v53 = v3 + 16;
  int64_t v51 = (unint64_t)(v30 + 63) >> 6;
  uint64_t v52 = v3 + 32;
  uint64_t v33 = enum case for SFAirDropSend.Failure.resolveFailure(_:);
  uint64_t v1 = v3 + 8;
  swift_bridgeObjectRetain();
  int64_t v34 = 0;
  while (1)
  {
    if (v32)
    {
      unint64_t v35 = __clz(__rbit64(v32));
      v32 &= v32 - 1;
      unint64_t v36 = v35 | (v34 << 6);
      goto LABEL_16;
    }
    int64_t v40 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v40 >= v51) {
      goto LABEL_34;
    }
    unint64_t v41 = *(void *)(v50 + 8 * v40);
    ++v34;
    if (!v41)
    {
      int64_t v34 = v40 + 1;
      if (v40 + 1 >= v51) {
        goto LABEL_34;
      }
      unint64_t v41 = *(void *)(v50 + 8 * v34);
      if (!v41)
      {
        int64_t v34 = v40 + 2;
        if (v40 + 2 >= v51) {
          goto LABEL_34;
        }
        unint64_t v41 = *(void *)(v50 + 8 * v34);
        if (!v41)
        {
          int64_t v34 = v40 + 3;
          if (v40 + 3 >= v51) {
            goto LABEL_34;
          }
          unint64_t v41 = *(void *)(v50 + 8 * v34);
          if (!v41) {
            break;
          }
        }
      }
    }
LABEL_33:
    unint64_t v32 = (v41 - 1) & v41;
    unint64_t v36 = __clz(__rbit64(v41)) + (v34 << 6);
LABEL_16:
    char v37 = v54;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v54, *(void *)(v28 + 56) + *(void *)(v3 + 72) * v36, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v37, v2);
    uint64_t v38 = type metadata accessor for SFAirDropSend.Failure();
    sub_10000BAA0(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
    uint64_t v10 = (char *)swift_allocError();
    *os_log_t v39 = 1;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104))(v39, v33, v38);
    uint64_t v55 = v10;
    CheckedContinuation.resume(throwing:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  int64_t v42 = v40 + 4;
  if (v42 < v51)
  {
    unint64_t v41 = *(void *)(v50 + 8 * v42);
    if (!v41)
    {
      while (1)
      {
        int64_t v34 = v42 + 1;
        if (__OFADD__(v42, 1)) {
          goto LABEL_36;
        }
        if (v34 >= v51) {
          goto LABEL_34;
        }
        unint64_t v41 = *(void *)(v50 + 8 * v34);
        ++v42;
        if (v41) {
          goto LABEL_33;
        }
      }
    }
    int64_t v34 = v42;
    goto LABEL_33;
  }
LABEL_34:
  swift_release();
  uint64_t v43 = v49;
  uint64_t v44 = (void *)(v49 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables);
  swift_beginAccess();
  *uint64_t v44 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  void *v48 = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  os_log_type_t v45 = (void *)(v43 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_receivingDisplayables);
  swift_beginAccess();
  void *v45 = &_swiftEmptyDictionarySingleton;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10046F034()
{
  uint64_t v1 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v1 - 8);
  uint64_t v65 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v60 - 8);
  uint64_t v4 = __chkstk_darwin(v60);
  char v64 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v59 = (char *)&v53 - v7;
  __chkstk_darwin(v6);
  uint64_t v63 = (uint64_t)&v53 - v8;
  uint64_t v9 = (void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_displayableIDs);
  swift_beginAccess();
  char v62 = v9;
  void *v9 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
  swift_beginAccess();
  uint64_t v11 = *v10;
  os_log_type_t v13 = (void *)(*v10 + 64);
  uint64_t v12 = *v13;
  uint64_t v54 = v0;
  uint64_t v55 = v13;
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v12;
  uint64_t v17 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionID;
  uint64_t v66 = v11;
  swift_bridgeObjectRetain();
  uint64_t v61 = v17;
  swift_beginAccess();
  int64_t v18 = 0;
  uint64_t v71 = (void (**)(uint64_t, uint64_t))(v3 + 8);
  unint64_t v58 = (void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  int64_t v56 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v57 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56);
  id v19 = &_swiftEmptyDictionarySingleton;
  uint64_t v20 = (uint64_t)v59;
  uint64_t v21 = v60;
  while (1)
  {
    uint64_t v72 = v19;
    if (v16)
    {
      uint64_t v67 = (v16 - 1) & v16;
      int64_t v68 = v18;
      unint64_t v22 = __clz(__rbit64(v16)) | (v18 << 6);
      goto LABEL_5;
    }
    int64_t v44 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    if (v44 >= v56) {
      goto LABEL_23;
    }
    unint64_t v45 = v55[v44];
    int64_t v46 = v18 + 1;
    if (!v45)
    {
      int64_t v46 = v18 + 2;
      if (v18 + 2 >= v56) {
        goto LABEL_23;
      }
      unint64_t v45 = v55[v46];
      if (!v45)
      {
        int64_t v46 = v18 + 3;
        if (v18 + 3 >= v56) {
          goto LABEL_23;
        }
        unint64_t v45 = v55[v46];
        if (!v45)
        {
          int64_t v46 = v18 + 4;
          if (v18 + 4 >= v56) {
            goto LABEL_23;
          }
          unint64_t v45 = v55[v46];
          if (!v45) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v67 = (v45 - 1) & v45;
    int64_t v68 = v46;
    unint64_t v22 = __clz(__rbit64(v45)) + (v46 << 6);
LABEL_5:
    sub_1003CF0DC(*(void *)(v66 + 56) + 48 * v22, (uint64_t)v80);
    sub_1002AD354(v80, &v78);
    uint64_t v24 = *((void *)&v79 + 1);
    uint64_t v23 = v79;
    sub_10026BB6C(&v78, v79);
    (*(void (**)(uint64_t, uint64_t))(v24 + 32))(v23, v24);
    uint64_t v25 = UUID.uuidString.getter();
    uint64_t v27 = v26;
    uint64_t v28 = *v71;
    (*v71)(v20, v21);
    uint64_t v70 = v28;
    uint64_t v29 = *v58;
    uint64_t v30 = (uint64_t)v65;
    (*v58)(v65, v61, v21);
    (*v57)(v30, 0, 1, v21);
    uint64_t v31 = v63;
    sub_10065ECDC(v30, v25, v27, v63);
    swift_bridgeObjectRelease();
    sub_10000A7E8(v30, &qword_100974EA0);
    unint64_t v32 = v64;
    v29(v64, v31, v21);
    swift_beginAccess();
    sub_100596028(v20, v32);
    swift_endAccess();
    v28(v20, v21);
    v29((char *)v20, v31, v21);
    long long v69 = v79;
    uint64_t v33 = v79;
    int64_t v34 = sub_10026BB6C(&v78, v79);
    *(_OWORD *)&v77[3] = v69;
    unint64_t v35 = sub_100278AE4(v77);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v35, v34, v33);
    sub_1002AF688((long long *)v77, (uint64_t)v74);
    unint64_t v36 = v72;
    LOBYTE(v33) = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v73 = v36;
    uint64_t v37 = v75;
    uint64_t v38 = v76;
    uint64_t v39 = sub_1002AF758((uint64_t)v74, v75);
    __chkstk_darwin(v39);
    unint64_t v41 = (char *)&v53 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v42 + 16))(v41);
    sub_100482DB4((uint64_t)v41, v20, v33, &v73, v37, v38);
    sub_10024D338((uint64_t)v74);
    id v19 = v73;
    swift_bridgeObjectRelease();
    uint64_t v43 = v70;
    v70(v20, v21);
    v43(v31, v21);
    sub_10024D338((uint64_t)&v78);
    unint64_t v16 = v67;
    int64_t v18 = v68;
  }
  uint64_t v47 = v18 + 5;
  if (v18 + 5 < v56)
  {
    unint64_t v45 = v55[v47];
    if (!v45)
    {
      while (1)
      {
        int64_t v46 = v47 + 1;
        if (__OFADD__(v47, 1)) {
          goto LABEL_29;
        }
        if (v46 >= v56) {
          goto LABEL_23;
        }
        unint64_t v45 = v55[v46];
        ++v47;
        if (v45) {
          goto LABEL_22;
        }
      }
    }
    int64_t v46 = v18 + 5;
    goto LABEL_22;
  }
LABEL_23:
  swift_release();
  uint64_t v20 = v54;
  os_log_t v48 = (void *)(v54 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID);
  swift_beginAccess();
  void *v48 = v19;
  swift_bridgeObjectRelease();
  unint64_t v49 = sub_1004734E0();
  if (!(v49 >> 62))
  {
    uint64_t v50 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_25;
  }
LABEL_30:
  uint64_t v50 = _CocoaArrayWrapper.endIndex.getter();
LABEL_25:
  swift_bridgeObjectRelease();
  uint64_t result = sub_10056D604(v50);
  uint64_t v52 = *(void (**)(void))(v20 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler);
  if (v52)
  {
    swift_retain();
    sub_1004734E0();
    v52();
    sub_1002CA430((uint64_t)v52);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10046F760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return _swift_task_switch(sub_10046F784, 0, 0);
}

uint64_t sub_10046F784()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 64) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10046F888;
    uint64_t v3 = *(void *)(v0 + 56);
    return sub_10046F99C(v3, 0);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_10046F888()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 64);
  swift_task_dealloc();

  return _swift_task_switch(sub_1002D1768, 0, 0);
}

uint64_t sub_10046F99C(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 368) = a2;
  *(void *)(v3 + 152) = a1;
  *(void *)(v3 + 160) = v2;
  sub_10000A844(&qword_10096D8B8);
  *(void *)(v3 + 168) = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  *(void *)(v3 + 176) = v4;
  *(void *)(v3 + 184) = *(void *)(v4 - 8);
  *(void *)(v3 + 192) = swift_task_alloc();
  *(void *)(v3 + 200) = swift_task_alloc();
  *(void *)(v3 + 208) = swift_task_alloc();
  *(void *)(v3 + 216) = swift_task_alloc();
  *(void *)(v3 + 224) = swift_task_alloc();
  *(void *)(v3 + 232) = swift_task_alloc();
  *(void *)(v3 + 240) = swift_task_alloc();
  *(void *)(v3 + 248) = swift_task_alloc();
  *(void *)(v3 + 256) = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  *(void *)(v3 + 264) = static AirDropActor.shared;
  return _swift_task_switch(sub_10046FB30, v5, 0);
}

uint64_t sub_10046FB30()
{
  uint64_t v87 = v0;
  if (qword_100969E30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 272) = sub_10000B47C(v1, (uint64_t)qword_100974DB0);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    v86[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v5 = Array.description.getter();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 144) = sub_100254634(v5, v7, v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Endpoints discovered %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v8 = *(void *)(v0 + 152);
  uint64_t v9 = *(void **)(v0 + 160);
  int v10 = *(unsigned __int8 *)(v0 + 368);
  swift_bridgeObjectRetain();
  id v11 = v9;
  uint64_t v12 = sub_100484268(v8, (uint64_t)v11);

  swift_bridgeObjectRelease();
  uint64_t v13 = sub_100259800((uint64_t)v12);
  *(void *)(v0 + 280) = v13;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 288) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscoveredEndpoints;
  swift_beginAccess();
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_100482804(v14, v10);
  *(void *)(v0 + 296) = v15;
  *(void *)(v0 + 128) = v13;
  char v16 = *(unsigned char *)(v15 + 32);
  *(unsigned char *)(v0 + 369) = v16;
  uint64_t v17 = -1;
  uint64_t v18 = -1 << v16;
  if (-(-1 << v16) < 64) {
    uint64_t v17 = ~(-1 << -(char)v18);
  }
  unint64_t v19 = v17 & *(void *)(v15 + 56);
  swift_bridgeObjectRetain();
  if (v19)
  {
    uint64_t v20 = 0;
    unint64_t v21 = __clz(__rbit64(v19));
    uint64_t v22 = (v19 - 1) & v19;
    goto LABEL_10;
  }
  unint64_t v42 = 63 - v18;
  if ((unint64_t)(63 - v18) > 0x7F)
  {
    unint64_t v43 = *(void *)(v15 + 64);
    if (v43)
    {
      uint64_t v20 = 1;
LABEL_18:
      uint64_t v22 = (v43 - 1) & v43;
      unint64_t v21 = __clz(__rbit64(v43)) + (v20 << 6);
LABEL_10:
      *(void *)(v0 + 304) = v20;
      *(void *)(v0 + 312) = v22;
      uint64_t v23 = *(void *)(v0 + 280);
      uint64_t v25 = *(void *)(v0 + 248);
      uint64_t v24 = *(void *)(v0 + 256);
      sub_1004849EC(*(void *)(v15 + 48) + *(void *)(*(void *)(v0 + 184) + 72) * v21, v24, type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_100484D20(v24, v25, type metadata accessor for SDAirDropDiscoveredEndpoint);
      char v26 = sub_10057C34C(v25, v23);
      uint64_t v27 = *(void *)(v0 + 248);
      if (v26)
      {
        sub_1004849EC(v27, *(void *)(v0 + 240), type metadata accessor for SDAirDropDiscoveredEndpoint);
        uint64_t v28 = Logger.logObject.getter();
        os_log_type_t v29 = static os_log_type_t.default.getter();
        BOOL v30 = os_log_type_enabled(v28, v29);
        uint64_t v31 = *(void *)(v0 + 240);
        if (v30)
        {
          unint64_t v32 = (uint8_t *)swift_slowAlloc();
          v86[0] = swift_slowAlloc();
          *(_DWORD *)unint64_t v32 = 136315138;
          uint64_t v33 = sub_100315DA0();
          *(void *)(v0 + 120) = sub_100254634(v33, v34, v86);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_1004838E8(v31, type metadata accessor for SDAirDropDiscoveredEndpoint);
          _os_log_impl((void *)&_mh_execute_header, v28, v29, "Endpoint updated %s", v32, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_1004838E8(*(void *)(v0 + 240), type metadata accessor for SDAirDropDiscoveredEndpoint);
        }

        uint64_t v44 = *(void *)(v0 + 224);
        uint64_t v45 = *(void *)(v0 + 232);
        sub_1004849EC(*(void *)(v0 + 248), v44, type metadata accessor for SDAirDropDiscoveredEndpoint);
        swift_beginAccess();
        sub_100595DA4(v45, v44);
        swift_endAccess();
        sub_1004838E8(v45, type metadata accessor for SDAirDropDiscoveredEndpoint);
        int64_t v46 = (void *)swift_task_alloc();
        *(void *)(v0 + 320) = v46;
        *int64_t v46 = v0;
        v46[1] = sub_1004707F0;
        uint64_t v47 = *(void *)(v0 + 248);
        char v48 = *(unsigned char *)(v0 + 368);
        return sub_100473E04(v47, v48);
      }
      else
      {
        sub_1004849EC(v27, *(void *)(v0 + 216), type metadata accessor for SDAirDropDiscoveredEndpoint);
        unint64_t v35 = Logger.logObject.getter();
        os_log_type_t v36 = static os_log_type_t.default.getter();
        BOOL v37 = os_log_type_enabled(v35, v36);
        uint64_t v38 = *(void *)(v0 + 216);
        if (v37)
        {
          uint64_t v39 = (uint8_t *)swift_slowAlloc();
          v86[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v39 = 136315138;
          uint64_t v40 = sub_100315DA0();
          *(void *)(v0 + 112) = sub_100254634(v40, v41, v86);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_1004838E8(v38, type metadata accessor for SDAirDropDiscoveredEndpoint);
          _os_log_impl((void *)&_mh_execute_header, v35, v36, "Endpoint disappeared %s", v39, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_1004838E8(*(void *)(v0 + 216), type metadata accessor for SDAirDropDiscoveredEndpoint);
        }

        uint64_t v50 = *(void *)(v0 + 248);
        uint64_t v51 = *(void *)(v0 + 168);
        swift_beginAccess();
        sub_1005A29BC(v50, v51);
        swift_endAccess();
        sub_10000A7E8(v51, &qword_10096D8B8);
        uint64_t v52 = (void *)swift_task_alloc();
        *(void *)(v0 + 328) = v52;
        void *v52 = v0;
        v52[1] = sub_1004713A4;
        uint64_t v53 = *(void *)(v0 + 248);
        return sub_10047545C(v53);
      }
    }
    if (v42 >= 0xC0)
    {
      unint64_t v43 = *(void *)(v15 + 72);
      if (v43)
      {
        uint64_t v20 = 2;
        goto LABEL_18;
      }
      if (v42 >= 0x100)
      {
        unint64_t v43 = *(void *)(v15 + 80);
        if (v43)
        {
          uint64_t v20 = 3;
          goto LABEL_18;
        }
        if (v42 >= 0x140)
        {
          unint64_t v43 = *(void *)(v15 + 88);
          if (v43)
          {
            uint64_t v20 = 4;
            goto LABEL_18;
          }
          uint64_t v54 = 0;
          uint64_t v55 = v42 >> 6;
          if (v55 <= 5) {
            uint64_t v55 = 5;
          }
          uint64_t v56 = v55 - 5;
          while (v56 != v54)
          {
            unint64_t v43 = *(void *)(v15 + 96 + 8 * v54++);
            if (v43)
            {
              uint64_t v20 = v54 + 4;
              goto LABEL_18;
            }
          }
        }
      }
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v57 = *(void *)(v0 + 128);
  *(void *)(v0 + 336) = v57;
  char v58 = *(unsigned char *)(v57 + 32);
  *(unsigned char *)(v0 + 370) = v58;
  uint64_t v59 = -1;
  uint64_t v60 = -1 << v58;
  if (-v60 < 64) {
    uint64_t v59 = ~(-1 << -(char)v60);
  }
  unint64_t v61 = v59 & *(void *)(v57 + 56);
  if (v61)
  {
    uint64_t v62 = 0;
    unint64_t v63 = __clz(__rbit64(v61));
    uint64_t v64 = (v61 - 1) & v61;
LABEL_46:
    *(void *)(v0 + 344) = v62;
    *(void *)(v0 + 352) = v64;
    uint64_t v66 = *(void *)(v0 + 200);
    uint64_t v65 = *(void *)(v0 + 208);
    uint64_t v67 = *(void *)(v0 + 192);
    sub_1004849EC(*(void *)(v57 + 48) + *(void *)(*(void *)(v0 + 184) + 72) * v63, v65, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100484D20(v65, v66, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1004849EC(v66, v67, type metadata accessor for SDAirDropDiscoveredEndpoint);
    int64_t v68 = Logger.logObject.getter();
    os_log_type_t v69 = static os_log_type_t.default.getter();
    BOOL v70 = os_log_type_enabled(v68, v69);
    uint64_t v71 = *(void *)(v0 + 192);
    if (v70)
    {
      uint64_t v72 = (uint8_t *)swift_slowAlloc();
      v86[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v72 = 136315138;
      uint64_t v73 = sub_100315DA0();
      *(void *)(v0 + 136) = sub_100254634(v73, v74, v86);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1004838E8(v71, type metadata accessor for SDAirDropDiscoveredEndpoint);
      _os_log_impl((void *)&_mh_execute_header, v68, v69, "Endpoint discovered %s", v72, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1004838E8(*(void *)(v0 + 192), type metadata accessor for SDAirDropDiscoveredEndpoint);
    }

    uint64_t v75 = *(void *)(v0 + 224);
    uint64_t v76 = *(void *)(v0 + 232);
    sub_1004849EC(*(void *)(v0 + 200), v75, type metadata accessor for SDAirDropDiscoveredEndpoint);
    swift_beginAccess();
    sub_100595DA4(v76, v75);
    swift_endAccess();
    sub_1004838E8(v76, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v77 = (void *)swift_task_alloc();
    *(void *)(v0 + 360) = v77;
    *uint64_t v77 = v0;
    v77[1] = sub_1004714B4;
    uint64_t v78 = *(void *)(v0 + 200);
    char v79 = *(unsigned char *)(v0 + 368);
    return sub_100477064(v78, v79);
  }
  unint64_t v80 = 63 - v60;
  if (v80 > 0x7F)
  {
    unint64_t v81 = *(void *)(v57 + 64);
    if (v81)
    {
      uint64_t v62 = 1;
LABEL_55:
      uint64_t v64 = (v81 - 1) & v81;
      unint64_t v63 = __clz(__rbit64(v81)) + (v62 << 6);
      goto LABEL_46;
    }
    if (v80 >= 0xC0)
    {
      unint64_t v81 = *(void *)(v57 + 72);
      if (v81)
      {
        uint64_t v62 = 2;
        goto LABEL_55;
      }
      if (v80 >= 0x100)
      {
        unint64_t v81 = *(void *)(v57 + 80);
        if (v81)
        {
          uint64_t v62 = 3;
          goto LABEL_55;
        }
        if (v80 >= 0x140)
        {
          unint64_t v81 = *(void *)(v57 + 88);
          if (v81)
          {
            uint64_t v62 = 4;
            goto LABEL_55;
          }
          uint64_t v82 = 0;
          uint64_t v83 = v80 >> 6;
          if (v83 <= 5) {
            uint64_t v83 = 5;
          }
          uint64_t v84 = v83 - 5;
          while (v84 != v82)
          {
            unint64_t v81 = *(void *)(v57 + 96 + 8 * v82++);
            if (v81)
            {
              uint64_t v62 = v82 + 4;
              goto LABEL_55;
            }
          }
        }
      }
    }
  }
  swift_release();
  sub_10046F034();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v85 = *(uint64_t (**)(void))(v0 + 8);
  return v85();
}

uint64_t sub_1004707F0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 264);
  swift_task_dealloc();
  return _swift_task_switch(sub_100470900, v1, 0);
}

uint64_t sub_100470900()
{
  uint64_t v70 = v0;
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v2 = *(void *)(v0 + 168);
  sub_1005A29BC(v1, v2);
  sub_10000A7E8(v2, &qword_10096D8B8);
  uint64_t v3 = sub_1004838E8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint);
  unint64_t v4 = *(void *)(v0 + 304);
  unint64_t v5 = *(void *)(v0 + 312);
  if (v5)
  {
    uint64_t v6 = (v5 - 1) & v5;
    unint64_t v7 = __clz(__rbit64(v5)) | (v4 << 6);
    uint64_t result = *(void *)(v0 + 296);
    goto LABEL_3;
  }
  int64_t v28 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_54;
  }
  int64_t v29 = (unint64_t)((1 << *(unsigned char *)(v0 + 369)) + 63) >> 6;
  uint64_t result = *(void *)(v0 + 296);
  if (v28 >= v29) {
    goto LABEL_30;
  }
  uint64_t v30 = result + 56;
  unint64_t v31 = *(void *)(result + 56 + 8 * v28);
  ++v4;
  if (v31)
  {
LABEL_11:
    uint64_t v6 = (v31 - 1) & v31;
    unint64_t v7 = __clz(__rbit64(v31)) + (v4 << 6);
LABEL_3:
    *(void *)(v0 + 304) = v4;
    *(void *)(v0 + 312) = v6;
    uint64_t v9 = *(void *)(v0 + 280);
    uint64_t v11 = *(void *)(v0 + 248);
    uint64_t v10 = *(void *)(v0 + 256);
    sub_1004849EC(*(void *)(result + 48) + *(void *)(*(void *)(v0 + 184) + 72) * v7, v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100484D20(v10, v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
    char v12 = sub_10057C34C(v11, v9);
    uint64_t v13 = *(void *)(v0 + 248);
    if (v12)
    {
      sub_1004849EC(v13, *(void *)(v0 + 240), type metadata accessor for SDAirDropDiscoveredEndpoint);
      uint64_t v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.default.getter();
      BOOL v16 = os_log_type_enabled(v14, v15);
      uint64_t v17 = *(void *)(v0 + 240);
      if (v16)
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        uint64_t v69 = swift_slowAlloc();
        *(_DWORD *)uint64_t v18 = 136315138;
        uint64_t v19 = sub_100315DA0();
        *(void *)(v0 + 120) = sub_100254634(v19, v20, &v69);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1004838E8(v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "Endpoint updated %s", v18, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_1004838E8(*(void *)(v0 + 240), type metadata accessor for SDAirDropDiscoveredEndpoint);
      }

      uint64_t v32 = *(void *)(v0 + 224);
      uint64_t v33 = *(void *)(v0 + 232);
      sub_1004849EC(*(void *)(v0 + 248), v32, type metadata accessor for SDAirDropDiscoveredEndpoint);
      swift_beginAccess();
      sub_100595DA4(v33, v32);
      swift_endAccess();
      sub_1004838E8(v33, type metadata accessor for SDAirDropDiscoveredEndpoint);
      unint64_t v34 = (void *)swift_task_alloc();
      *(void *)(v0 + 320) = v34;
      void *v34 = v0;
      v34[1] = sub_1004707F0;
      uint64_t v35 = *(void *)(v0 + 248);
      char v36 = *(unsigned char *)(v0 + 368);
      return sub_100473E04(v35, v36);
    }
    else
    {
      sub_1004849EC(v13, *(void *)(v0 + 216), type metadata accessor for SDAirDropDiscoveredEndpoint);
      unint64_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.default.getter();
      BOOL v23 = os_log_type_enabled(v21, v22);
      uint64_t v24 = *(void *)(v0 + 216);
      if (v23)
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        uint64_t v69 = swift_slowAlloc();
        *(_DWORD *)uint64_t v25 = 136315138;
        uint64_t v26 = sub_100315DA0();
        *(void *)(v0 + 112) = sub_100254634(v26, v27, &v69);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1004838E8(v24, type metadata accessor for SDAirDropDiscoveredEndpoint);
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "Endpoint disappeared %s", v25, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_1004838E8(*(void *)(v0 + 216), type metadata accessor for SDAirDropDiscoveredEndpoint);
      }

      uint64_t v37 = *(void *)(v0 + 248);
      uint64_t v38 = *(void *)(v0 + 168);
      swift_beginAccess();
      sub_1005A29BC(v37, v38);
      swift_endAccess();
      sub_10000A7E8(v38, &qword_10096D8B8);
      uint64_t v39 = (void *)swift_task_alloc();
      *(void *)(v0 + 328) = v39;
      *uint64_t v39 = v0;
      v39[1] = sub_1004713A4;
      uint64_t v40 = *(void *)(v0 + 248);
      return sub_10047545C(v40);
    }
  }
  unint64_t v4 = v28 + 1;
  if (v28 + 1 >= v29) {
    goto LABEL_30;
  }
  unint64_t v31 = *(void *)(v30 + 8 * v4);
  if (v31) {
    goto LABEL_11;
  }
  unint64_t v4 = v28 + 2;
  if (v28 + 2 >= v29) {
    goto LABEL_30;
  }
  unint64_t v31 = *(void *)(v30 + 8 * v4);
  if (v31) {
    goto LABEL_11;
  }
  int64_t v41 = v28 + 3;
  if (v41 >= v29)
  {
LABEL_30:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v0 + 128);
    *(void *)(v0 + 336) = v3;
    char v42 = *(unsigned char *)(v3 + 32);
    *(unsigned char *)(v0 + 370) = v42;
    uint64_t v43 = -1;
    uint64_t v44 = -1 << v42;
    if (-v44 < 64) {
      uint64_t v43 = ~(-1 << -(char)v44);
    }
    unint64_t v45 = v43 & *(void *)(v3 + 56);
    if (v45)
    {
      uint64_t v46 = 0;
      unint64_t v47 = __clz(__rbit64(v45));
      uint64_t v48 = (v45 - 1) & v45;
LABEL_34:
      *(void *)(v0 + 344) = v46;
      *(void *)(v0 + 352) = v48;
      uint64_t v50 = *(void *)(v0 + 200);
      uint64_t v49 = *(void *)(v0 + 208);
      uint64_t v51 = *(void *)(v0 + 192);
      sub_1004849EC(*(void *)(v3 + 48) + *(void *)(*(void *)(v0 + 184) + 72) * v47, v49, type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_100484D20(v49, v50, type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_1004849EC(v50, v51, type metadata accessor for SDAirDropDiscoveredEndpoint);
      uint64_t v52 = Logger.logObject.getter();
      os_log_type_t v53 = static os_log_type_t.default.getter();
      BOOL v54 = os_log_type_enabled(v52, v53);
      uint64_t v55 = *(void *)(v0 + 192);
      if (v54)
      {
        uint64_t v56 = (uint8_t *)swift_slowAlloc();
        uint64_t v69 = swift_slowAlloc();
        *(_DWORD *)uint64_t v56 = 136315138;
        uint64_t v57 = sub_100315DA0();
        *(void *)(v0 + 136) = sub_100254634(v57, v58, &v69);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1004838E8(v55, type metadata accessor for SDAirDropDiscoveredEndpoint);
        _os_log_impl((void *)&_mh_execute_header, v52, v53, "Endpoint discovered %s", v56, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_1004838E8(*(void *)(v0 + 192), type metadata accessor for SDAirDropDiscoveredEndpoint);
      }

      uint64_t v59 = *(void *)(v0 + 224);
      uint64_t v60 = *(void *)(v0 + 232);
      sub_1004849EC(*(void *)(v0 + 200), v59, type metadata accessor for SDAirDropDiscoveredEndpoint);
      swift_beginAccess();
      sub_100595DA4(v60, v59);
      swift_endAccess();
      sub_1004838E8(v60, type metadata accessor for SDAirDropDiscoveredEndpoint);
      unint64_t v61 = (void *)swift_task_alloc();
      *(void *)(v0 + 360) = v61;
      *unint64_t v61 = v0;
      v61[1] = sub_1004714B4;
      uint64_t v62 = *(void *)(v0 + 200);
      char v63 = *(unsigned char *)(v0 + 368);
      return sub_100477064(v62, v63);
    }
    unint64_t v4 = 63 - v44;
    if (v4 <= 0x7F) {
      goto LABEL_60;
    }
    unint64_t v64 = *(void *)(v3 + 64);
    if (v64)
    {
      uint64_t v46 = 1;
LABEL_43:
      uint64_t v48 = (v64 - 1) & v64;
      unint64_t v47 = __clz(__rbit64(v64)) + (v46 << 6);
      goto LABEL_34;
    }
    if (v4 < 0xC0) {
      goto LABEL_60;
    }
    unint64_t v64 = *(void *)(v3 + 72);
    if (v64)
    {
      uint64_t v46 = 2;
      goto LABEL_43;
    }
    if (v4 < 0x100) {
      goto LABEL_60;
    }
    unint64_t v64 = *(void *)(v3 + 80);
    if (v64)
    {
      uint64_t v46 = 3;
      goto LABEL_43;
    }
    if (v4 < 0x140)
    {
LABEL_60:
      swift_release();
      sub_10046F034();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      int64_t v68 = *(uint64_t (**)(void))(v0 + 8);
      return v68();
    }
    unint64_t v64 = *(void *)(v3 + 88);
    if (v64)
    {
      uint64_t v46 = 4;
      goto LABEL_43;
    }
LABEL_54:
    uint64_t v65 = 0;
    uint64_t v66 = v4 >> 6;
    if (v66 <= 5) {
      uint64_t v66 = 5;
    }
    uint64_t v67 = v66 - 5;
    while (v67 != v65)
    {
      unint64_t v64 = *(void *)(v3 + 96 + 8 * v65++);
      if (v64)
      {
        uint64_t v46 = v65 + 4;
        goto LABEL_43;
      }
    }
    goto LABEL_60;
  }
  unint64_t v31 = *(void *)(v30 + 8 * v41);
  if (v31)
  {
    unint64_t v4 = v41;
    goto LABEL_11;
  }
  while (1)
  {
    unint64_t v4 = v41 + 1;
    if (__OFADD__(v41, 1)) {
      break;
    }
    if ((uint64_t)v4 >= v29) {
      goto LABEL_30;
    }
    unint64_t v31 = *(void *)(v30 + 8 * v4);
    ++v41;
    if (v31) {
      goto LABEL_11;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1004713A4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 264);
  swift_task_dealloc();
  return _swift_task_switch(sub_100484FF4, v1, 0);
}

uint64_t sub_1004714B4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 264);
  swift_task_dealloc();
  return _swift_task_switch(sub_1004715C4, v1, 0);
}

uint64_t sub_1004715C4()
{
  uint64_t v28 = v0;
  uint64_t result = sub_1004838E8(*(void *)(v0 + 200), type metadata accessor for SDAirDropDiscoveredEndpoint);
  int64_t v2 = *(void *)(v0 + 344);
  unint64_t v3 = *(void *)(v0 + 352);
  if (v3)
  {
    uint64_t v4 = (v3 - 1) & v3;
    unint64_t v5 = __clz(__rbit64(v3)) | (v2 << 6);
    uint64_t result = *(void *)(v0 + 336);
LABEL_3:
    *(void *)(v0 + 344) = v2;
    *(void *)(v0 + 352) = v4;
    uint64_t v7 = *(void *)(v0 + 200);
    uint64_t v6 = *(void *)(v0 + 208);
    uint64_t v8 = *(void *)(v0 + 192);
    sub_1004849EC(*(void *)(result + 48) + *(void *)(*(void *)(v0 + 184) + 72) * v5, v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100484D20(v6, v7, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1004849EC(v7, v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    BOOL v11 = os_log_type_enabled(v9, v10);
    uint64_t v12 = *(void *)(v0 + 192);
    if (v11)
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v14 = sub_100315DA0();
      *(void *)(v0 + 136) = sub_100254634(v14, v15, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1004838E8(v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Endpoint discovered %s", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1004838E8(*(void *)(v0 + 192), type metadata accessor for SDAirDropDiscoveredEndpoint);
    }

    uint64_t v16 = *(void *)(v0 + 224);
    uint64_t v17 = *(void *)(v0 + 232);
    sub_1004849EC(*(void *)(v0 + 200), v16, type metadata accessor for SDAirDropDiscoveredEndpoint);
    swift_beginAccess();
    sub_100595DA4(v17, v16);
    swift_endAccess();
    sub_1004838E8(v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 360) = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1004714B4;
    uint64_t v19 = *(void *)(v0 + 200);
    char v20 = *(unsigned char *)(v0 + 368);
    return sub_100477064(v19, v20);
  }
  int64_t v21 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  int64_t v22 = (unint64_t)((1 << *(unsigned char *)(v0 + 370)) + 63) >> 6;
  uint64_t result = *(void *)(v0 + 336);
  if (v21 < v22)
  {
    uint64_t v23 = result + 56;
    unint64_t v24 = *(void *)(result + 56 + 8 * v21);
    ++v2;
    if (v24)
    {
LABEL_12:
      uint64_t v4 = (v24 - 1) & v24;
      unint64_t v5 = __clz(__rbit64(v24)) + (v2 << 6);
      goto LABEL_3;
    }
    int64_t v2 = v21 + 1;
    if (v21 + 1 < v22)
    {
      unint64_t v24 = *(void *)(v23 + 8 * v2);
      if (v24) {
        goto LABEL_12;
      }
      int64_t v2 = v21 + 2;
      if (v21 + 2 < v22)
      {
        unint64_t v24 = *(void *)(v23 + 8 * v2);
        if (v24) {
          goto LABEL_12;
        }
        int64_t v25 = v21 + 3;
        if (v25 < v22)
        {
          unint64_t v24 = *(void *)(v23 + 8 * v25);
          if (v24)
          {
            int64_t v2 = v25;
            goto LABEL_12;
          }
          while (1)
          {
            int64_t v2 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              break;
            }
            if (v2 >= v22) {
              goto LABEL_23;
            }
            unint64_t v24 = *(void *)(v23 + 8 * v2);
            ++v25;
            if (v24) {
              goto LABEL_12;
            }
          }
LABEL_27:
          __break(1u);
          return result;
        }
      }
    }
  }
LABEL_23:
  swift_release();
  sub_10046F034();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  return v26();
}

uint64_t sub_100471A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return _swift_task_switch(sub_100471A6C, 0, 0);
}

uint64_t sub_100471A6C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 64) = Strong;
  if (Strong)
  {
    int64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v2;
    *int64_t v2 = v0;
    v2[1] = sub_100471B70;
    uint64_t v3 = *(void *)(v0 + 56);
    return sub_10046F99C(v3, 1);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    unint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_100471B70()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 64);
  swift_task_dealloc();

  return _swift_task_switch(sub_1002D33E4, 0, 0);
}

uint64_t sub_100471C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a4;
  sub_10000A844(&qword_10096C920);
  v4[9] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[10] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100471D4C, v6, v5);
}

uint64_t sub_100471D4C()
{
  swift_release();
  if (qword_100969E30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_100974DB0);
  int64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Starting classroom browser", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 72);

  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  id v9 = objc_allocWithZone((Class)type metadata accessor for SDAirDropClassroomBrowser());
  swift_retain();
  os_log_type_t v10 = (char *)sub_1002D2604((uint64_t)sub_100483DE4, v7);
  BOOL v11 = &off_1008DBC18;
  if (!Strong) {
    BOOL v11 = 0;
  }
  *(void *)&v10[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropClassroomBrowser_delegate + 8] = v11;
  swift_unknownObjectWeakAssign();

  swift_release_n();
  uint64_t v12 = v10;
  sub_1002D0BBC();

  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 1, 1, v13);
  uint64_t v14 = swift_allocObject();
  swift_beginAccess();
  unint64_t v15 = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v16 = qword_100969B90;
  uint64_t v17 = v12;
  swift_retain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v18 = *(void *)(v0 + 72);
  uint64_t v19 = static AirDropActor.shared;
  uint64_t v20 = sub_10000BAA0((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  int64_t v21 = (void *)swift_allocObject();
  v21[2] = v19;
  v21[3] = v20;
  v21[4] = v14;
  v21[5] = v17;
  v21[6] = &off_1008D5BC8;
  swift_retain();
  swift_release();
  sub_10028CFD4(v18, (uint64_t)&unk_100974FA8, (uint64_t)v21);
  swift_release();

  swift_task_dealloc();
  int64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_1004720E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v12 = (void *)swift_allocObject();
  _OWORD v12[2] = 0;
  v12[3] = 0;
  v12[4] = v10;
  v12[5] = a1;
  swift_bridgeObjectRetain();
  sub_10028CFD4((uint64_t)v8, a4, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_100472244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return _swift_task_switch(sub_100472268, 0, 0);
}

uint64_t sub_100472268()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 64) = Strong;
  if (Strong)
  {
    int64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v2;
    *int64_t v2 = v0;
    v2[1] = sub_100471B70;
    uint64_t v3 = *(void *)(v0 + 56);
    return sub_10046F99C(v3, 2);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_10047236C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a1;
  v6[6] = a4;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  return _swift_task_switch(sub_10047240C, v7, 0);
}

uint64_t sub_10047240C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  int64_t v2 = (void *)Strong;
  if (Strong)
  {
    *(_OWORD *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_classroomBrowser) = *(_OWORD *)(v0 + 56);
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  **(unsigned char **)(v0 + 40) = v2 == 0;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1004724C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a4;
  sub_10000A844(&qword_10096C920);
  v4[9] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[10] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[11] = v6;
  v4[12] = v5;
  return _swift_task_switch(sub_100472590, v6, v5);
}

uint64_t sub_100472590()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[13] = Strong;
  if (Strong)
  {
    v0[14] = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_classroomBrowser;
    if (qword_100969B90 != -1) {
      swift_once();
    }
    uint64_t v2 = static AirDropActor.shared;
    return _swift_task_switch(sub_100472824, v2, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = v0[9];
    uint64_t v4 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
    uint64_t v5 = swift_allocObject();
    swift_beginAccess();
    uint64_t v6 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    uint64_t v7 = qword_100969B90;
    swift_retain();
    if (v7 != -1) {
      swift_once();
    }
    uint64_t v8 = v0[9];
    uint64_t v9 = static AirDropActor.shared;
    uint64_t v10 = sub_10000BAA0((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    BOOL v11 = (void *)swift_allocObject();
    v11[2] = v9;
    v11[3] = v10;
    v11[4] = v5;
    swift_retain();
    swift_release();
    sub_10028CFD4(v8, (uint64_t)&unk_100974F68, (uint64_t)v11);
    swift_release();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_100472824()
{
  uint64_t v1 = *(void *)(v0[13] + v0[14]);
  v0[15] = v1;
  if (v1)
  {
    uint64_t v2 = v0[11];
    uint64_t v3 = v0[12];
    swift_unknownObjectRetain();
    uint64_t v4 = sub_1004728C0;
    uint64_t v5 = v2;
    uint64_t v6 = v3;
  }
  else
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[12];
    uint64_t v4 = sub_100472AF4;
  }
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_1004728C0()
{
  uint64_t v1 = *(void *)(v0 + 120);

  swift_release();
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropClassroomBrowser_browser;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropClassroomBrowser_browser);
  if (v3)
  {
    [v3 invalidate];
    uint64_t v4 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = 0;
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
  }
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v9 = qword_100969B90;
  swift_retain();
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v10 = *(void *)(v0 + 72);
  uint64_t v11 = static AirDropActor.shared;
  uint64_t v12 = sub_10000BAA0((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v11;
  v13[3] = v12;
  v13[4] = v7;
  swift_retain();
  swift_release();
  sub_10028CFD4(v10, (uint64_t)&unk_100974F68, (uint64_t)v13);
  swift_release();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_100472AF4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v5 = qword_100969B90;
  swift_retain();
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = *(void *)(v0 + 72);
  uint64_t v7 = static AirDropActor.shared;
  uint64_t v8 = sub_10000BAA0((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = v7;
  long long v9[3] = v8;
  v9[4] = v3;
  swift_retain();
  swift_release();
  sub_10028CFD4(v6, (uint64_t)&unk_100974F68, (uint64_t)v9);
  swift_release();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_100472CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a1;
  *(void *)(v4 + 48) = a4;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_100472D80, v5, 0);
}

uint64_t sub_100472D80()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v2 = (void *)Strong;
  if (Strong)
  {
    uint64_t v3 = (void *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_classroomBrowser);
    *uint64_t v3 = 0;
    v3[1] = 0;
    swift_unknownObjectRelease();
  }
  **(unsigned char **)(v0 + 40) = v2 == 0;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_100472E30()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v59 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v44 - v5;
  uint64_t v7 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus);
  if ([v10 screenOn]) {
    return;
  }
  uint64_t v11 = (uint64_t *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_browseClientIDs);
  swift_beginAccess();
  unint64_t v45 = v11;
  if (!*(void *)(*v11 + 16) || ![v10 currentConsoleUser]) {
    return;
  }
  v44[1] = v0;
  uint64_t v12 = *v45;
  uint64_t v13 = *(void *)(*v45 + 56);
  uint64_t v50 = *v45 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  uint64_t v55 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
  uint64_t v56 = v12;
  uint64_t v17 = v2 + 48;
  uint64_t v18 = (void (**)(char *, char *, uint64_t))(v2 + 32);
  int64_t v51 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v52 = (void (**)(char *, uint64_t))(v2 + 8);
  swift_bridgeObjectRetain_n();
  int64_t v19 = 0;
  *(void *)&long long v20 = 136315138;
  long long v47 = v20;
  uint64_t v46 = (char *)&type metadata for Any + 8;
  uint64_t v48 = v2;
  uint64_t v49 = v6;
  uint64_t v53 = v2 + 16;
  BOOL v54 = v9;
  while (1)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      uint64_t v23 = (v16 - 1) & v16;
      unint64_t v24 = v22 | (v19 << 6);
      goto LABEL_29;
    }
    int64_t v25 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v25 >= v51) {
      goto LABEL_34;
    }
    unint64_t v26 = *(void *)(v50 + 8 * v25);
    ++v19;
    if (v26) {
      goto LABEL_28;
    }
    int64_t v19 = v25 + 1;
    if (v25 + 1 >= v51) {
      goto LABEL_34;
    }
    unint64_t v26 = *(void *)(v50 + 8 * v19);
    if (v26) {
      goto LABEL_28;
    }
    int64_t v19 = v25 + 2;
    if (v25 + 2 >= v51) {
      goto LABEL_34;
    }
    unint64_t v26 = *(void *)(v50 + 8 * v19);
    if (v26) {
      goto LABEL_28;
    }
    int64_t v19 = v25 + 3;
    if (v25 + 3 >= v51) {
      goto LABEL_34;
    }
    unint64_t v26 = *(void *)(v50 + 8 * v19);
    if (v26) {
      goto LABEL_28;
    }
    int64_t v19 = v25 + 4;
    if (v25 + 4 >= v51) {
      goto LABEL_34;
    }
    unint64_t v26 = *(void *)(v50 + 8 * v19);
    if (v26) {
      goto LABEL_28;
    }
    int64_t v27 = v25 + 5;
    if (v27 >= v51)
    {
LABEL_34:
      (*v55)(v9, 1, 1, v1);
LABEL_35:
      swift_release();
      swift_bridgeObjectRelease();
      if (qword_100969E30 == -1)
      {
LABEL_36:
        uint64_t v40 = type metadata accessor for Logger();
        sub_10000B47C(v40, (uint64_t)qword_100974DB0);
        int64_t v41 = Logger.logObject.getter();
        os_log_type_t v42 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v41, v42))
        {
          uint64_t v43 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v43 = 0;
          _os_log_impl((void *)&_mh_execute_header, v41, v42, "Removing delinquent browsers", v43, 2u);
          swift_slowDealloc();
        }

        uint64_t *v45 = (uint64_t)&_swiftEmptySetSingleton;
        swift_bridgeObjectRelease();
        sub_10046B384();
        return;
      }
LABEL_41:
      swift_once();
      goto LABEL_36;
    }
    unint64_t v26 = *(void *)(v50 + 8 * v27);
    if (!v26) {
      break;
    }
    int64_t v19 = v27;
LABEL_28:
    uint64_t v23 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v19 << 6);
LABEL_29:
    uint64_t v28 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
    v28(v9, *(void *)(v56 + 48) + *(void *)(v2 + 72) * v24, v1);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v9, 0, 1, v1);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v9, 1, v1) == 1) {
      goto LABEL_35;
    }
    unint64_t v57 = v23;
    int64_t v58 = v19;
    (*v18)(v6, v9, v1);
    if (qword_100969E30 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_10000B47C(v29, (uint64_t)qword_100974DB0);
    v28(v59, (unint64_t)v6, v1);
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      unint64_t v34 = v18;
      uint64_t v35 = v17;
      char v36 = v59;
      uint64_t v60 = v33;
      *(_DWORD *)uint64_t v32 = v47;
      sub_10000BAA0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v37 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v32 + 4) = sub_100254634(v37, v38, &v60);
      swift_bridgeObjectRelease();
      int64_t v21 = *v52;
      uint64_t v39 = v36;
      uint64_t v17 = v35;
      uint64_t v18 = v34;
      (*v52)(v39, v1);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Browse client %s still present after screen off", (uint8_t *)v32, 0xCu);
      swift_arrayDestroy();
      uint64_t v2 = v48;
      uint64_t v6 = v49;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      int64_t v21 = *v52;
      (*v52)(v59, v1);
    }

    v21(v6, v1);
    uint64_t v9 = v54;
    unint64_t v16 = v57;
    int64_t v19 = v58;
  }
  while (1)
  {
    int64_t v19 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v19 >= v51) {
      goto LABEL_34;
    }
    unint64_t v26 = *(void *)(v50 + 8 * v19);
    ++v27;
    if (v26) {
      goto LABEL_28;
    }
  }
  __break(1u);
}

uint64_t sub_1004734E0()
{
  uint64_t v69 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  int64_t v68 = (char *)v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for NWEndpoint();
  uint64_t v3 = *(void *)(v70 - 8);
  uint64_t v4 = __chkstk_darwin(v70);
  uint64_t v67 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v66 = (void *)((char *)v61 - v6);
  uint64_t v7 = &v0[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered];
  swift_beginAccess();
  uint64_t v8 = v0;
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = (void *)sub_1004834C4(v9, (uint64_t)v8);

  unint64_t v74 = v10;
  swift_bridgeObjectRetain();
  sub_100480CDC(&v74);
  char v63 = v7;
  swift_bridgeObjectRelease();
  uint64_t v11 = v74;
  unint64_t v73 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v12 = v74[2];
  if (v12)
  {
    v61[1] = 0;
    uint64_t v13 = &v8[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionID];
    uint64_t v62 = v8;
    uint64_t v14 = v8;
    swift_retain();
    uint64_t v65 = v13;
    swift_beginAccess();
    unint64_t v64 = (void (**)(char *, char *, uint64_t))(v1 + 16);
    uint64_t v15 = (void (**)(uint64_t, uint64_t))(v1 + 8);
    unint64_t v16 = (void (**)(char *, uint64_t))(v3 + 8);
    v61[0] = v11;
    uint64_t v17 = v11 + 9;
    uint64_t v18 = v66;
    int64_t v19 = v67;
    do
    {
      uint64_t v20 = *(v17 - 2);
      uint64_t v21 = *v17;
      sub_10026BB6C(v17 - 5, v20);
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
      uint64_t v23 = (uint64_t)v68;
      uint64_t v22 = v69;
      (*v64)(v68, v65, v69);
      sub_10065F49C(v23, v18);
      (*v15)(v23, v22);
      unint64_t v24 = *v16;
      uint64_t v25 = v70;
      (*v16)(v19, v70);
      uint64_t v26 = NWEndpoint.nw.getter();
      v24((char *)v18, v25);
      if (v26)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v17 += 6;
      --v12;
    }
    while (v12);
    swift_release();
    int64_t v27 = (void *)v73;
    uint64_t v8 = v62;
  }
  else
  {
    uint64_t v28 = v8;
    int64_t v27 = _swiftEmptyArrayStorage;
  }
  swift_release();

  swift_beginAccess();
  uint64_t v29 = swift_bridgeObjectRetain();
  unint64_t v30 = sub_100467D68(v29);
  swift_bridgeObjectRelease();
  uint64_t v72 = v27;
  swift_bridgeObjectRetain();
  sub_1003D47B4(v30);
  uint64_t v31 = (uint64_t)v72;
  if (v30 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  p_inst_meths = &OBJC_PROTOCOL___NSNetServiceBrowserDelegate.inst_meths;
  if (v32)
  {
    if (qword_100969E30 != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    sub_10000B47C(v34, (uint64_t)qword_100974DB0);
    uint64_t v35 = v8;
    char v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      unint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v69 = v31;
      uint64_t v72 = (void *)v39;
      *(_DWORD *)unint64_t v38 = 136315138;
      int64_t v68 = (char *)(v38 + 4);
      type metadata accessor for SFAirDrop.TransferIdentifier();
      sub_10000BAA0(&qword_10096C610, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
      swift_bridgeObjectRetain();
      uint64_t v40 = Dictionary.Values.description.getter();
      int64_t v41 = v8;
      unint64_t v43 = v42;
      swift_bridgeObjectRelease();
      uint64_t v44 = v40;
      p_inst_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___NSNetServiceBrowserDelegate + 24);
      uint64_t v71 = sub_100254634(v44, v43, (uint64_t *)&v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v8 = v41;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Additional receive display endpoints %s", v38, 0xCu);
      swift_arrayDestroy();
      uint64_t v31 = v69;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
  if (p_inst_meths[454] != (__objc2_meth_list *)-1) {
    swift_once();
  }
  uint64_t v45 = type metadata accessor for Logger();
  uint64_t v46 = sub_10000B47C(v45, (uint64_t)qword_100974DB0);
  long long v47 = v8;
  uint64_t v70 = v46;
  uint64_t v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    uint64_t v72 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v50 = 136315138;
    uint64_t v69 = (uint64_t)(v50 + 4);
    swift_bridgeObjectRetain();
    sub_10000A844(&qword_10096B310);
    uint64_t v51 = Dictionary.description.getter();
    unint64_t v53 = v52;
    swift_bridgeObjectRelease();
    uint64_t v71 = sub_100254634(v51, v53, (uint64_t *)&v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "All unfiltered endpoints: %s", v50, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  swift_bridgeObjectRetain_n();
  BOOL v54 = Logger.logObject.getter();
  os_log_type_t v55 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v54, v55))
  {
    uint64_t v56 = (uint8_t *)swift_slowAlloc();
    uint64_t v72 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v56 = 136315138;
    swift_bridgeObjectRetain();
    sub_10000A844(&qword_100972420);
    uint64_t v57 = Array.description.getter();
    unint64_t v59 = v58;
    swift_bridgeObjectRelease();
    uint64_t v71 = sub_100254634(v57, v59, (uint64_t *)&v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "Returning validated endpoints: %s", v56, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v31;
}

uint64_t sub_100473E04(uint64_t a1, char a2)
{
  *(void *)(v3 + 752) = v2;
  *(unsigned char *)(v3 + 848) = a2;
  *(void *)(v3 + 744) = a1;
  *(void *)(v3 + 760) = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  *(void *)(v3 + 768) = swift_task_alloc();
  *(void *)(v3 + 776) = swift_task_alloc();
  *(void *)(v3 + 784) = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  *(void *)(v3 + 792) = static AirDropActor.shared;
  return _swift_task_switch(sub_100473EF8, v4, 0);
}

id sub_100473EF8()
{
  uint64_t v89 = v0;
  if (qword_100969E30 != -1) {
    swift_once();
  }
  uint64_t v1 = v0 + 472;
  uint64_t v2 = *(void *)(v0 + 784);
  uint64_t v3 = *(void *)(v0 + 744);
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_100974DB0);
  sub_1004849EC(v3, v2, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 784);
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v86 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v10 = sub_100315DA0();
    *(void *)(v0 + 736) = sub_100254634(v10, v11, (uint64_t *)&v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v1 = v0 + 472;
    swift_bridgeObjectRelease();
    sub_1004838E8(v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Updating discovered endpoint: %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1004838E8(v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }

  *(_OWORD *)uint64_t v1 = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(void *)(v1 + 32) = 0;
  uint64_t v12 = sub_100316F00();
  uint64_t v14 = &OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_bleController;
  if (v13)
  {
    uint64_t v15 = v12;
    uint64_t v16 = v13;
    uint64_t v17 = (uint64_t *)(*(void *)(v0 + 752) + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
    swift_beginAccess();
    uint64_t v18 = *v17;
    if (!*(void *)(v18 + 16) || (uint64_t v19 = sub_1005838BC(v15, v16), (v20 & 1) == 0))
    {
      swift_endAccess();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    uint64_t v83 = v1;
    uint64_t v21 = *(void *)(v0 + 752);
    sub_1003CF0DC(*(void *)(v18 + 56) + 48 * v19, v0 + 64);
    sub_1002AD354((long long *)(v0 + 64), (_OWORD *)(v0 + 160));
    swift_endAccess();
    id v22 = [*(id *)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus) meCard];
    if (v22)
    {
      uint64_t v23 = v22;
      id v24 = [v22 identifier];
      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v27 = v26;

      if (v15 == v25 && v16 == v27)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        uint64_t v1 = v83;
LABEL_49:
        sub_10024D338(v0 + 160);
        uint64_t v14 = &OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_bleController;
        goto LABEL_14;
      }
      char v82 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      uint64_t v1 = v83;
      if (v82) {
        goto LABEL_49;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v55 = *(void *)(v0 + 184);
    uint64_t v56 = *(void *)(v0 + 192);
    sub_10026BB6C((void *)(v0 + 160), v55);
    v85 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 + 48) + **(int **)(v56 + 48));
    uint64_t v57 = (void *)swift_task_alloc();
    *(void *)(v0 + 800) = v57;
    *uint64_t v57 = v0;
    unint64_t v58 = sub_100474A04;
    goto LABEL_51;
  }
LABEL_14:
  uint64_t v28 = sub_100316C8C();
  if (v29)
  {
    uint64_t v30 = v28;
    uint64_t v31 = v29;
    uint64_t v32 = (uint64_t *)(*(void *)(v0 + 752) + v14[449]);
    swift_beginAccess();
    uint64_t v33 = *v32;
    if (*(void *)(v33 + 16))
    {
      uint64_t v34 = sub_1005838BC(v30, v31);
      if (v35)
      {
        sub_1003CF0DC(*(void *)(v33 + 56) + 48 * v34, v0 + 208);
        sub_1002AD354((long long *)(v0 + 208), (_OWORD *)(v0 + 256));
        swift_endAccess();
        swift_bridgeObjectRelease();
        uint64_t v36 = *(void *)(v0 + 280);
        uint64_t v37 = *(void *)(v0 + 288);
        sub_10026BB6C((void *)(v0 + 256), v36);
        v85 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 + 48) + **(int **)(v37 + 48));
        unint64_t v38 = (void *)swift_task_alloc();
        *(void *)(v0 + 816) = v38;
        *unint64_t v38 = v0;
        v38[1] = sub_100474E20;
        uint64_t v39 = *(void *)(v0 + 744);
        uint64_t v40 = v36;
        uint64_t v41 = v37;
LABEL_52:
        return (id)v85(v39, v40, v41);
      }
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  sub_1004849EC(*(void *)(v0 + 744), *(void *)(v0 + 776), type metadata accessor for SDAirDropDiscoveredEndpoint);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t v43 = *(void ***)(v0 + 776);
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v44 = *v43;
    *(void *)(v0 + 832) = *v43;
    id result = [v44 identifier];
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v46 = result;
    uint64_t v47 = *(void *)(v0 + 752);
    uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v50 = v49;

    uint64_t v51 = (uint64_t *)(v47 + v14[449]);
    swift_beginAccess();
    uint64_t v52 = *v51;
    if (*(void *)(v52 + 16) && (uint64_t v53 = sub_1005838BC(v48, v50), (v54 & 1) != 0))
    {
      sub_1003CF0DC(*(void *)(v52 + 56) + 48 * v53, v0 + 16);
    }
    else
    {
      *(_OWORD *)(v0 + 32) = 0u;
      *(_OWORD *)(v0 + 48) = 0u;
      *(_OWORD *)(v0 + 16) = 0u;
    }
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 40))
    {
      sub_1002AD354((long long *)(v0 + 16), (_OWORD *)(v0 + 304));
      swift_endAccess();
      uint64_t v55 = *(void *)(v0 + 328);
      uint64_t v56 = *(void *)(v0 + 336);
      sub_10026BB6C((void *)(v0 + 304), v55);
      v85 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 + 48) + **(int **)(v56 + 48));
      uint64_t v57 = (void *)swift_task_alloc();
      *(void *)(v0 + 840) = v57;
      *uint64_t v57 = v0;
      unint64_t v58 = sub_100475234;
LABEL_51:
      v57[1] = v58;
      uint64_t v39 = *(void *)(v0 + 744);
      uint64_t v40 = v55;
      uint64_t v41 = v56;
      goto LABEL_52;
    }
    sub_10000A7E8(v0 + 16, &qword_100974E88);
    swift_endAccess();
  }
  else
  {
    sub_1004838E8((uint64_t)v43, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  uint64_t v59 = *(void *)(v0 + 752);
  uint64_t v60 = sub_100313BE0();
  uint64_t v62 = v61;
  char v63 = (uint64_t *)(v59 + v14[449]);
  swift_beginAccess();
  uint64_t v64 = *v63;
  if (*(void *)(*v63 + 16) && (uint64_t v65 = sub_1005838BC(v60, v62), (v66 & 1) != 0))
  {
    sub_1003CF0DC(*(void *)(v64 + 56) + 48 * v65, v0 + 112);
  }
  else
  {
    *(_OWORD *)(v0 + 128) = 0u;
    *(_OWORD *)(v0 + 144) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
  }
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v67 = *(void *)(v0 + 136);
  sub_10000A7E8(v0 + 112, &qword_100974E88);
  if (v67)
  {
    uint64_t v84 = v1;
    uint64_t v68 = sub_100313BE0();
    uint64_t v70 = v69;
    sub_100316798();
    uint64_t v72 = v71;
    swift_bridgeObjectRelease();
    if (!v72)
    {
      uint64_t v78 = Logger.logObject.getter();
      os_log_type_t v79 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v78, v79))
      {
        unint64_t v80 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v80 = 0;
        _os_log_impl((void *)&_mh_execute_header, v78, v79, "Discovered endpoint no longer has a device name, removing", v80, 2u);
        swift_slowDealloc();
      }

      long long v87 = 0u;
      long long v88 = 0u;
      long long v86 = 0u;
      swift_beginAccess();
      sub_100466734((uint64_t)&v86, v68, v70);
      swift_endAccess();
      uint64_t v77 = v84;
      goto LABEL_45;
    }
    uint64_t v73 = *(void *)(v0 + 768);
    sub_1004849EC(*(void *)(v0 + 744), v73, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v74 = type metadata accessor for SDAirDropDiscoveredDevice();
    swift_allocObject();
    uint64_t v75 = sub_100492954(v73);
    *((void *)&v87 + 1) = v74;
    uint64_t v76 = sub_10000BAA0(&qword_100974FE8, (void (*)(uint64_t))type metadata accessor for SDAirDropDiscoveredDevice);
    *(void *)&long long v88 = v76;
    *((void *)&v88 + 1) = &off_1008DC208;
    *(void *)&long long v86 = v75;
    swift_beginAccess();
    swift_retain();
    sub_100466734((uint64_t)&v86, v68, v70);
    swift_endAccess();
    *(void *)(v0 + 376) = v74;
    *(void *)(v0 + 384) = v76;
    *(void *)(v0 + 352) = v75;
    uint64_t v1 = v84;
    sub_10000A7E8(v84, &qword_100974FE0);
    sub_10024D388(v0 + 352, v84, &qword_100974FE0);
  }
  if (*(unsigned char *)(v0 + 848) == 1)
  {
    sub_10024A330(v1, v0 + 552, &qword_100974FE0);
    if (!*(void *)(v0 + 576))
    {
      sub_10000A7E8(v1, &qword_100974FE0);
      uint64_t v77 = v0 + 552;
      goto LABEL_45;
    }
    sub_1002AF688((long long *)(v0 + 552), v0 + 512);
    sub_100478F44((void *)(v0 + 512));
    sub_10024D338(v0 + 512);
  }
  uint64_t v77 = v1;
LABEL_45:
  sub_10000A7E8(v77, &qword_100974FE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v81 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v81();
}

uint64_t sub_100474A04()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 808) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_100474B68;
  uint64_t v4 = *(void *)(v1 + 744);
  return sub_100478CC8(v1 + 160, v4);
}

uint64_t sub_100474B68()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 792);
  swift_task_dealloc();
  return _swift_task_switch(sub_100474C78, v1, 0);
}

uint64_t sub_100474C78()
{
  long long v7 = *(_OWORD *)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = sub_10026BB6C((void *)(v0 + 160), v1);
  *(_OWORD *)(v0 + 456) = v7;
  uint64_t v3 = sub_100278AE4((uint64_t *)(v0 + 432));
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v1 - 8) + 16))(v3, v2, v1);
  sub_10000A7E8(v0 + 472, &qword_100974FE0);
  sub_10024D388(v0 + 432, v0 + 472, &qword_100974FE0);
  sub_10024D338(v0 + 160);
  if (*(unsigned char *)(v0 + 848) != 1) {
    goto LABEL_4;
  }
  sub_10024A330(v0 + 472, v0 + 552, &qword_100974FE0);
  if (*(void *)(v0 + 576))
  {
    sub_1002AF688((long long *)(v0 + 552), v0 + 512);
    sub_100478F44((void *)(v0 + 512));
    sub_10024D338(v0 + 512);
LABEL_4:
    uint64_t v4 = v0 + 472;
    goto LABEL_6;
  }
  sub_10000A7E8(v0 + 472, &qword_100974FE0);
  uint64_t v4 = v0 + 552;
LABEL_6:
  sub_10000A7E8(v4, &qword_100974FE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100474E20()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 824) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_100474F84;
  uint64_t v4 = *(void *)(v1 + 744);
  return sub_100478CC8(v1 + 256, v4);
}

uint64_t sub_100474F84()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 792);
  swift_task_dealloc();
  return _swift_task_switch(sub_100475094, v1, 0);
}

uint64_t sub_100475094()
{
  long long v7 = *(_OWORD *)(v0 + 280);
  uint64_t v1 = *(void *)(v0 + 280);
  uint64_t v2 = sub_10026BB6C((void *)(v0 + 256), v1);
  *(_OWORD *)(v0 + 416) = v7;
  uint64_t v3 = sub_100278AE4((uint64_t *)(v0 + 392));
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v1 - 8) + 16))(v3, v2, v1);
  sub_10000A7E8(v0 + 472, &qword_100974FE0);
  sub_10024D388(v0 + 392, v0 + 472, &qword_100974FE0);
  sub_10024D338(v0 + 256);
  if (*(unsigned char *)(v0 + 848) != 1) {
    goto LABEL_4;
  }
  sub_10024A330(v0 + 472, v0 + 552, &qword_100974FE0);
  if (*(void *)(v0 + 576))
  {
    sub_1002AF688((long long *)(v0 + 552), v0 + 512);
    sub_100478F44((void *)(v0 + 512));
    sub_10024D338(v0 + 512);
LABEL_4:
    uint64_t v4 = v0 + 472;
    goto LABEL_6;
  }
  sub_10000A7E8(v0 + 472, &qword_100974FE0);
  uint64_t v4 = v0 + 552;
LABEL_6:
  sub_10000A7E8(v4, &qword_100974FE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100475234()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 792);
  swift_task_dealloc();
  return _swift_task_switch(sub_100475344, v1, 0);
}

uint64_t sub_100475344()
{
  sub_10024D338(v0 + 304);
  if (*(unsigned char *)(v0 + 848) != 1) {
    goto LABEL_4;
  }
  sub_10024A330(v0 + 472, v0 + 552, &qword_100974FE0);
  if (*(void *)(v0 + 576))
  {
    sub_1002AF688((long long *)(v0 + 552), v0 + 512);
    sub_100478F44((void *)(v0 + 512));
    sub_10024D338(v0 + 512);
LABEL_4:
    uint64_t v1 = v0 + 472;
    goto LABEL_6;
  }
  sub_10000A7E8(v0 + 472, &qword_100974FE0);
  uint64_t v1 = v0 + 552;
LABEL_6:
  sub_10000A7E8(v1, &qword_100974FE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10047545C(uint64_t a1)
{
  v2[88] = v1;
  v2[87] = a1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[89] = v3;
  v2[90] = *(void *)(v3 - 8);
  v2[91] = swift_task_alloc();
  v2[92] = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v2[93] = swift_task_alloc();
  v2[94] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  v2[95] = static AirDropActor.shared;
  return _swift_task_switch(sub_10047559C, v4, 0);
}

id sub_10047559C()
{
  uint64_t v87 = v0;
  if (qword_100969E30 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 752);
  uint64_t v2 = *(void *)(v0 + 696);
  uint64_t v3 = type metadata accessor for Logger();
  *(void *)(v0 + 768) = sub_10000B47C(v3, (uint64_t)qword_100974DB0);
  sub_1004849EC(v2, v1, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 752);
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(void *)&v86[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v9 = sub_100315DA0();
    *(void *)(v0 + 688) = sub_100254634(v9, v10, (uint64_t *)v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1004838E8(v7, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Removing discovered endpoint: %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1004838E8(v7, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }

  uint64_t v11 = sub_100316F00();
  *(void *)(v0 + 776) = v11;
  *(void *)(v0 + 784) = v12;
  if (v12)
  {
    uint64_t v13 = v11;
    uint64_t v14 = v12;
    uint64_t v15 = (_OWORD *)(v0 + 64);
    uint64_t v16 = *(void *)(v0 + 704);
    uint64_t v17 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    *(void *)(v0 + 792) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    uint64_t v18 = (uint64_t *)(v16 + v17);
    swift_beginAccess();
    uint64_t v19 = *v18;
    if (*(void *)(v19 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1005838BC(v13, v14);
      if (v21)
      {
        sub_1003CF0DC(*(void *)(v19 + 56) + 48 * v20, v0 + 64);
      }
      else
      {
        *(_OWORD *)(v0 + 80) = 0u;
        *(_OWORD *)(v0 + 96) = 0u;
        *uint64_t v15 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*(void *)(v0 + 88))
      {
        uint64_t v22 = *(void *)(v0 + 704);
        sub_1002AD354((long long *)(v0 + 64), (_OWORD *)(v0 + 160));
        swift_endAccess();
        id v23 = [*(id *)(v22 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus) meCard];
        if (v23)
        {
          id v24 = v23;
          id v25 = [v23 identifier];
          uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v28 = v27;

          if (v13 == v26 && v14 == v28)
          {
            swift_bridgeObjectRelease();

LABEL_19:
            swift_bridgeObjectRelease();
            sub_10024D338(v0 + 160);
            goto LABEL_20;
          }
          char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();

          if (v29) {
            goto LABEL_19;
          }
        }
        uint64_t v41 = *(void *)(v0 + 184);
        uint64_t v42 = *(void *)(v0 + 192);
        sub_10026BB6C((void *)(v0 + 160), v41);
        v85 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 + 56) + **(int **)(v42 + 56));
        unint64_t v43 = (void *)swift_task_alloc();
        *(void *)(v0 + 800) = v43;
        *unint64_t v43 = v0;
        uint64_t v44 = sub_10047600C;
        goto LABEL_39;
      }
    }
    else
    {
      *(_OWORD *)(v0 + 80) = 0u;
      *(_OWORD *)(v0 + 96) = 0u;
      *uint64_t v15 = 0u;
    }
    sub_10000A7E8(v0 + 64, &qword_100974E88);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
LABEL_20:
  uint64_t v30 = sub_100316C8C();
  *(void *)(v0 + 824) = v30;
  *(void *)(v0 + 832) = v31;
  if (v31)
  {
    uint64_t v32 = v30;
    uint64_t v33 = v31;
    uint64_t v34 = (_OWORD *)(v0 + 208);
    uint64_t v35 = *(void *)(v0 + 704);
    uint64_t v36 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    *(void *)(v0 + 840) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    uint64_t v37 = (uint64_t *)(v35 + v36);
    swift_beginAccess();
    uint64_t v38 = *v37;
    if (*(void *)(v38 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_1005838BC(v32, v33);
      if (v40)
      {
        sub_1003CF0DC(*(void *)(v38 + 56) + 48 * v39, v0 + 208);
      }
      else
      {
        *(_OWORD *)(v0 + 224) = 0u;
        *(_OWORD *)(v0 + 240) = 0u;
        _OWORD *v34 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*(void *)(v0 + 232))
      {
        sub_1002AD354((long long *)(v0 + 208), (_OWORD *)(v0 + 304));
        swift_endAccess();
        uint64_t v41 = *(void *)(v0 + 328);
        uint64_t v42 = *(void *)(v0 + 336);
        sub_10026BB6C((void *)(v0 + 304), v41);
        v85 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 + 56) + **(int **)(v42 + 56));
        unint64_t v43 = (void *)swift_task_alloc();
        *(void *)(v0 + 848) = v43;
        *unint64_t v43 = v0;
        uint64_t v44 = sub_10047656C;
LABEL_39:
        v43[1] = v44;
        uint64_t v59 = *(void *)(v0 + 696);
        return (id)v85(v59, v41, v42);
      }
    }
    else
    {
      *(_OWORD *)(v0 + 224) = 0u;
      *(_OWORD *)(v0 + 240) = 0u;
      _OWORD *v34 = 0u;
    }
    sub_10000A7E8(v0 + 208, &qword_100974E88);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  sub_1004849EC(*(void *)(v0 + 696), *(void *)(v0 + 744), type metadata accessor for SDAirDropDiscoveredEndpoint);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v46 = *(void ***)(v0 + 744);
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v47 = *v46;
    *(void *)(v0 + 872) = *v46;
    id result = [v47 identifier];
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v49 = result;
    uint64_t v50 = *(void *)(v0 + 704);
    uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v53 = v52;

    uint64_t v54 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    *(void *)(v0 + 880) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    uint64_t v55 = (uint64_t *)(v50 + v54);
    swift_beginAccess();
    uint64_t v56 = *v55;
    if (*(void *)(v56 + 16) && (uint64_t v57 = sub_1005838BC(v51, v53), (v58 & 1) != 0))
    {
      sub_1003CF0DC(*(void *)(v56 + 56) + 48 * v57, v0 + 352);
    }
    else
    {
      *(_OWORD *)(v0 + 368) = 0u;
      *(_OWORD *)(v0 + 384) = 0u;
      *(_OWORD *)(v0 + 352) = 0u;
    }
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 376))
    {
      sub_1002AD354((long long *)(v0 + 352), (_OWORD *)(v0 + 256));
      swift_endAccess();
      uint64_t v41 = *(void *)(v0 + 280);
      uint64_t v42 = *(void *)(v0 + 288);
      sub_10026BB6C((void *)(v0 + 256), v41);
      v85 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 + 56) + **(int **)(v42 + 56));
      unint64_t v43 = (void *)swift_task_alloc();
      *(void *)(v0 + 888) = v43;
      *unint64_t v43 = v0;
      uint64_t v44 = sub_100476ACC;
      goto LABEL_39;
    }
    sub_10000A7E8(v0 + 352, &qword_100974E88);
    swift_endAccess();
  }
  else
  {
    sub_1004838E8((uint64_t)v46, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  uint64_t v60 = *(void *)(v0 + 704);
  uint64_t v61 = sub_100313BE0();
  uint64_t v63 = v62;
  uint64_t v64 = (uint64_t *)(v60 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
  swift_beginAccess();
  uint64_t v65 = *v64;
  if (*(void *)(*v64 + 16) && (uint64_t v66 = sub_1005838BC(v61, v63), (v67 & 1) != 0))
  {
    sub_1003CF0DC(*(void *)(v65 + 56) + 48 * v66, v0 + 112);
  }
  else
  {
    *(_OWORD *)(v0 + 128) = 0u;
    *(_OWORD *)(v0 + 144) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 136))
  {
    uint64_t v68 = *(void *)(v0 + 728);
    uint64_t v69 = *(void *)(v0 + 720);
    uint64_t v84 = *(void *)(v0 + 712);
    uint64_t v70 = *(void *)(v0 + 704);
    sub_1002AD354((long long *)(v0 + 112), (_OWORD *)(v0 + 16));
    swift_endAccess();
    uint64_t v71 = (uint64_t *)(v70 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables);
    swift_beginAccess();
    uint64_t v72 = *v71;
    uint64_t v74 = *(void *)(v0 + 40);
    uint64_t v73 = *(void *)(v0 + 48);
    sub_10026BB6C((void *)(v0 + 16), v74);
    uint64_t v75 = *(void (**)(uint64_t, uint64_t))(v73 + 32);
    swift_bridgeObjectRetain();
    v75(v74, v73);
    char v76 = sub_10057BC0C(v68, v72);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v68, v84);
    if (v76)
    {
      uint64_t v77 = Logger.logObject.getter();
      os_log_type_t v78 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v77, v78))
      {
        os_log_type_t v79 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v79 = 0;
        _os_log_impl((void *)&_mh_execute_header, v77, v78, "Skipping remove from allDiscovered endpoints because it's in a transfer", v79, 2u);
        swift_slowDealloc();
      }
    }
    else
    {
      uint64_t v80 = sub_100313BE0();
      uint64_t v82 = v81;
      memset(v86, 0, sizeof(v86));
      swift_beginAccess();
      sub_100466734((uint64_t)v86, v80, v82);
      swift_endAccess();
    }
    sub_10024D338(v0 + 16);
  }
  else
  {
    sub_10000A7E8(v0 + 112, &qword_100974E88);
    swift_endAccess();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v83 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v83();
}

uint64_t sub_10047600C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 760);
  swift_task_dealloc();
  return _swift_task_switch(sub_10047611C, v1, 0);
}

uint64_t sub_10047611C()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  sub_10026BB6C(v0 + 20, v1);
  os_log_type_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v2 + 40) + **(int **)(v2 + 40));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[101] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10047621C;
  return v5(v1, v2);
}

uint64_t sub_10047621C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 760);
  *(void *)(*(void *)v1 + 816) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100476334, v2, 0);
}

uint64_t sub_100476334()
{
  uint64_t v18 = v0;
  uint64_t v1 = *(void *)(v0[102] + 16);
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = v0[91];
    uint64_t v3 = v0[90];
    uint64_t v16 = v0[89];
    uint64_t v4 = (uint64_t *)(v0[88] + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables);
    swift_beginAccess();
    uint64_t v5 = *v4;
    uint64_t v6 = v0[23];
    uint64_t v7 = v0[24];
    sub_10026BB6C(v0 + 20, v6);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 32);
    swift_bridgeObjectRetain();
    v8(v6, v7);
    LOBYTE(v4) = sub_10057BC0C(v2, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v16);
    if (v4)
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v11 = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "Skipping remove from allDiscovered endpoints because it's in a transfer", v11, 2u);
        swift_slowDealloc();
      }
    }
    else
    {
      uint64_t v12 = v0[98];
      uint64_t v13 = v0[97];
      memset(v17, 0, sizeof(v17));
      swift_beginAccess();
      sub_100466734((uint64_t)v17, v13, v12);
      swift_endAccess();
    }
  }
  sub_10024D338((uint64_t)(v0 + 20));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_10047656C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 760);
  swift_task_dealloc();
  return _swift_task_switch(sub_10047667C, v1, 0);
}

uint64_t sub_10047667C()
{
  uint64_t v1 = v0[41];
  uint64_t v2 = v0[42];
  sub_10026BB6C(v0 + 38, v1);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v2 + 40) + **(int **)(v2 + 40));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[107] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10047677C;
  return v5(v1, v2);
}

uint64_t sub_10047677C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 760);
  *(void *)(*(void *)v1 + 864) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100476894, v2, 0);
}

uint64_t sub_100476894()
{
  uint64_t v18 = v0;
  uint64_t v1 = *(void *)(v0[108] + 16);
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = v0[91];
    uint64_t v3 = v0[90];
    uint64_t v16 = v0[89];
    uint64_t v4 = (uint64_t *)(v0[88] + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables);
    swift_beginAccess();
    uint64_t v5 = *v4;
    uint64_t v6 = v0[41];
    uint64_t v7 = v0[42];
    sub_10026BB6C(v0 + 38, v6);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 32);
    swift_bridgeObjectRetain();
    v8(v6, v7);
    LOBYTE(v4) = sub_10057BC0C(v2, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v16);
    if (v4)
    {
      swift_bridgeObjectRelease();
      uint64_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v11 = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "Skipping remove from allDiscovered endpoints because it's in a transfer", v11, 2u);
        swift_slowDealloc();
      }
    }
    else
    {
      uint64_t v12 = v0[104];
      uint64_t v13 = v0[103];
      memset(v17, 0, sizeof(v17));
      swift_beginAccess();
      sub_100466734((uint64_t)v17, v13, v12);
      swift_endAccess();
    }
  }
  sub_10024D338((uint64_t)(v0 + 38));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_100476ACC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 760);
  swift_task_dealloc();
  return _swift_task_switch(sub_100476BDC, v1, 0);
}

uint64_t sub_100476BDC()
{
  uint64_t v1 = v0[35];
  uint64_t v2 = v0[36];
  sub_10026BB6C(v0 + 32, v1);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v2 + 40) + **(int **)(v2 + 40));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[112] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100476CDC;
  return v5(v1, v2);
}

uint64_t sub_100476CDC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 760);
  *(void *)(*(void *)v1 + 904) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100476DF4, v2, 0);
}

id sub_100476DF4()
{
  uint64_t v24 = v0;
  uint64_t v1 = v0 + 256;
  uint64_t v2 = *(void *)(*(void *)(v0 + 904) + 16);
  swift_bridgeObjectRelease();
  if (v2)
  {
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 728);
    uint64_t v4 = *(void *)(v0 + 720);
    uint64_t v5 = *(void *)(v0 + 712);
    uint64_t v6 = (uint64_t *)(*(void *)(v0 + 704)
                   + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables);
    swift_beginAccess();
    uint64_t v7 = *v6;
    uint64_t v8 = *(void *)(v0 + 280);
    uint64_t v9 = *(void *)(v0 + 288);
    sub_10026BB6C((void *)(v0 + 256), v8);
    os_log_type_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 32);
    swift_bridgeObjectRetain();
    v10(v8, v9);
    LOBYTE(v6) = sub_10057BC0C(v3, v7);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    if (v6)
    {
      uint64_t v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.default.getter();
      BOOL v13 = os_log_type_enabled(v11, v12);
      uint64_t v14 = *(void **)(v0 + 872);
      if (v13)
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v15 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "Skipping remove from allDiscovered endpoints because it's in a transfer", v15, 2u);
        swift_slowDealloc();
      }
    }
    else
    {
      id result = [*(id *)(v0 + 872) identifier];
      if (!result)
      {
        __break(1u);
        return result;
      }
      uint64_t v17 = result;
      uint64_t v18 = *(void **)(v0 + 872);
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;

      memset(v23, 0, sizeof(v23));
      swift_beginAccess();
      sub_100466734((uint64_t)v23, v19, v21);
      swift_endAccess();
    }
    uint64_t v1 = v0 + 256;
  }
  sub_10024D338(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v22();
}

uint64_t sub_100477064(uint64_t a1, char a2)
{
  *(void *)(v3 + 1064) = v2;
  *(unsigned char *)(v3 + 1224) = a2;
  *(void *)(v3 + 1056) = a1;
  *(void *)(v3 + 1072) = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  *(void *)(v3 + 1080) = swift_task_alloc();
  *(void *)(v3 + 1088) = swift_task_alloc();
  *(void *)(v3 + 1096) = swift_task_alloc();
  *(void *)(v3 + 1104) = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  *(void *)(v3 + 1112) = static AirDropActor.shared;
  return _swift_task_switch(sub_100477164, v4, 0);
}

id sub_100477164()
{
  uint64_t v105 = v0;
  id v1 = [*(id *)(*(void *)(v0 + 1064) + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_nearbyAgent) idSelfIdentity];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 idsDeviceID];

    if (v3)
    {
      uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v6 = v5;

      uint64_t v7 = sub_100316C8C();
      if (v8)
      {
        if (v4 == v7 && v8 == v6)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_37:
          if (qword_100969E30 != -1) {
            swift_once();
          }
          uint64_t v65 = *(void *)(v0 + 1104);
          uint64_t v66 = *(void *)(v0 + 1056);
          uint64_t v67 = type metadata accessor for Logger();
          sub_10000B47C(v67, (uint64_t)qword_100974DB0);
          sub_1004849EC(v66, v65, type metadata accessor for SDAirDropDiscoveredEndpoint);
          uint64_t v68 = Logger.logObject.getter();
          os_log_type_t v69 = static os_log_type_t.default.getter();
          BOOL v70 = os_log_type_enabled(v68, v69);
          uint64_t v71 = *(void *)(v0 + 1104);
          if (v70)
          {
            uint64_t v72 = (uint8_t *)swift_slowAlloc();
            v104[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v72 = 136315138;
            uint64_t v73 = sub_100315DA0();
            *(void *)(v0 + 1048) = sub_100254634(v73, v74, v104);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_1004838E8(v71, type metadata accessor for SDAirDropDiscoveredEndpoint);
            _os_log_impl((void *)&_mh_execute_header, v68, v69, "Discovered endpoint is current device, ignoring %s", v72, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            sub_1004838E8(*(void *)(v0 + 1104), type metadata accessor for SDAirDropDiscoveredEndpoint);
          }

          goto LABEL_56;
        }
        char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v10) {
          goto LABEL_37;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  if (qword_100969E30 != -1) {
    swift_once();
  }
  uint64_t v11 = v0 + 672;
  uint64_t v12 = *(void *)(v0 + 1096);
  uint64_t v13 = *(void *)(v0 + 1056);
  uint64_t v14 = type metadata accessor for Logger();
  sub_10000B47C(v14, (uint64_t)qword_100974DB0);
  sub_1004849EC(v13, v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v18 = *(void *)(v0 + 1096);
  if (v17)
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    v104[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315138;
    uint64_t v20 = sub_100315DA0();
    *(void *)(v0 + 1040) = sub_100254634(v20, v21, v104);
    uint64_t v11 = v0 + 672;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1004838E8(v18, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Adding discovered endpoint: %s", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1004838E8(*(void *)(v0 + 1096), type metadata accessor for SDAirDropDiscoveredEndpoint);
  }

  *(_OWORD *)uint64_t v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  *(void *)(v11 + 32) = 0;
  uint64_t v22 = sub_100316F00();
  *(void *)(v0 + 1120) = v22;
  *(void *)(v0 + 1128) = v23;
  if (v23)
  {
    uint64_t v24 = v22;
    uint64_t v25 = v23;
    id v26 = [*(id *)(*(void *)(v0 + 1064) + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus) meCard];
    if (v26)
    {
      uint64_t v27 = v26;
      id v28 = [v26 identifier];
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v31 = v30;

      if (v24 == v29 && v25 == v31)
      {
        swift_bridgeObjectRelease();

LABEL_22:
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
      char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();

      if (v32) {
        goto LABEL_22;
      }
    }
    uint64_t v44 = (_OWORD *)(v0 + 160);
    uint64_t v45 = *(void *)(v0 + 1064);
    uint64_t v46 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    *(void *)(v0 + 1136) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    uint64_t v47 = (uint64_t *)(v45 + v46);
    swift_beginAccess();
    uint64_t v48 = *v47;
    if (*(void *)(v48 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_1005838BC(v24, v25);
      if (v50)
      {
        sub_1003CF0DC(*(void *)(v48 + 56) + 48 * v49, v0 + 160);
      }
      else
      {
        *(_OWORD *)(v0 + 176) = 0u;
        *(_OWORD *)(v0 + 192) = 0u;
        *uint64_t v44 = 0u;
      }
    }
    else
    {
      *(_OWORD *)(v0 + 176) = 0u;
      *(_OWORD *)(v0 + 192) = 0u;
      *uint64_t v44 = 0u;
      swift_bridgeObjectRetain();
    }
    sub_10024D388(v0 + 160, v0 + 112, &qword_100974E88);
    if (*(void *)(v0 + 136))
    {
      sub_1002AD354((long long *)(v0 + 112), (_OWORD *)(v0 + 208));
    }
    else
    {
      uint64_t v94 = type metadata accessor for SDAirDropDiscoveredPerson();
      swift_allocObject();
      swift_bridgeObjectRetain();
      uint64_t v95 = sub_1003D9488(v24, v25);
      *(void *)(v0 + 232) = v94;
      *(void *)(v0 + 240) = sub_10000BAA0(&qword_100975000, (void (*)(uint64_t))type metadata accessor for SDAirDropDiscoveredPerson);
      *(void *)(v0 + 248) = &off_1008D93B0;
      *(void *)(v0 + 208) = v95;
      sub_10000A7E8(v0 + 112, &qword_100974E88);
    }
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v78 = *(void *)(v0 + 232);
    uint64_t v79 = *(void *)(v0 + 240);
    sub_10026BB6C((void *)(v0 + 208), v78);
    uint64_t v103 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 + 48) + **(int **)(v79 + 48));
    uint64_t v80 = (void *)swift_task_alloc();
    *(void *)(v0 + 1144) = v80;
    *uint64_t v80 = v0;
    uint64_t v81 = sub_100477FE0;
    goto LABEL_70;
  }
LABEL_23:
  uint64_t v33 = sub_100316C8C();
  *(void *)(v0 + 1160) = v33;
  *(void *)(v0 + 1168) = v34;
  if (v34)
  {
    uint64_t v35 = v33;
    uint64_t v36 = v34;
    uint64_t v37 = (_OWORD *)(v0 + 16);
    uint64_t v38 = *(void *)(v0 + 1064);
    uint64_t v39 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    *(void *)(v0 + 1176) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    char v40 = (uint64_t *)(v38 + v39);
    swift_beginAccess();
    uint64_t v41 = *v40;
    if (*(void *)(v41 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_1005838BC(v35, v36);
      if (v43)
      {
        sub_1003CF0DC(*(void *)(v41 + 56) + 48 * v42, v0 + 16);
      }
      else
      {
        *(_OWORD *)(v0 + 32) = 0u;
        *(_OWORD *)(v0 + 48) = 0u;
        *uint64_t v37 = 0u;
      }
    }
    else
    {
      *(_OWORD *)(v0 + 32) = 0u;
      *(_OWORD *)(v0 + 48) = 0u;
      *uint64_t v37 = 0u;
      swift_bridgeObjectRetain();
    }
    sub_10024D388(v0 + 16, v0 + 496, &qword_100974E88);
    if (*(void *)(v0 + 520))
    {
      sub_1002AD354((long long *)(v0 + 496), (_OWORD *)(v0 + 544));
    }
    else
    {
      uint64_t v75 = *(void *)(v0 + 1088);
      sub_1004849EC(*(void *)(v0 + 1056), v75, type metadata accessor for SDAirDropDiscoveredEndpoint);
      uint64_t v76 = type metadata accessor for SDAirDropDiscoveredDevice();
      swift_allocObject();
      uint64_t v77 = sub_100492954(v75);
      *(void *)(v0 + 568) = v76;
      *(void *)(v0 + 576) = sub_10000BAA0(&qword_100974FE8, (void (*)(uint64_t))type metadata accessor for SDAirDropDiscoveredDevice);
      *(void *)(v0 + 584) = &off_1008DC208;
      *(void *)(v0 + 544) = v77;
      sub_10000A7E8(v0 + 496, &qword_100974E88);
    }
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v78 = *(void *)(v0 + 568);
    uint64_t v79 = *(void *)(v0 + 576);
    sub_10026BB6C((void *)(v0 + 544), v78);
    uint64_t v103 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 + 48) + **(int **)(v79 + 48));
    uint64_t v80 = (void *)swift_task_alloc();
    *(void *)(v0 + 1184) = v80;
    *uint64_t v80 = v0;
    uint64_t v81 = sub_1004784AC;
    goto LABEL_70;
  }
  sub_1004849EC(*(void *)(v0 + 1056), *(void *)(v0 + 1080), type metadata accessor for SDAirDropDiscoveredEndpoint);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v52 = *(void ***)(v0 + 1080);
  if (EnumCaseMultiPayload != 3)
  {
    sub_1004838E8((uint64_t)v52, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100316798();
    if (v82)
    {
      uint64_t v83 = *(void *)(v0 + 1088);
      uint64_t v84 = *(void *)(v0 + 1056);
      swift_bridgeObjectRelease();
      uint64_t v85 = sub_100313BE0();
      uint64_t v87 = v86;
      sub_1004849EC(v84, v83, type metadata accessor for SDAirDropDiscoveredEndpoint);
      uint64_t v88 = type metadata accessor for SDAirDropDiscoveredDevice();
      swift_allocObject();
      uint64_t v89 = sub_100492954(v83);
      v104[3] = v88;
      uint64_t v90 = v11;
      uint64_t v91 = sub_10000BAA0(&qword_100974FE8, (void (*)(uint64_t))type metadata accessor for SDAirDropDiscoveredDevice);
      v104[4] = v91;
      v104[5] = (uint64_t)&off_1008DC208;
      v104[0] = v89;
      swift_beginAccess();
      swift_retain();
      sub_100466734((uint64_t)v104, v85, v87);
      swift_endAccess();
      *(void *)(v0 + 816) = v88;
      *(void *)(v0 + 824) = v91;
      uint64_t v11 = v90;
      *(void *)(v0 + 792) = v89;
      sub_10000A7E8(v90, &qword_100974FE0);
      sub_10024D388(v0 + 792, v90, &qword_100974FE0);
    }
    if (*(unsigned char *)(v0 + 1224) == 1)
    {
      sub_10024A330(v11, v0 + 752, &qword_100974FE0);
      if (!*(void *)(v0 + 776))
      {
        sub_10000A7E8(v11, &qword_100974FE0);
        uint64_t v92 = v0 + 752;
        goto LABEL_52;
      }
      sub_1002AF688((long long *)(v0 + 752), v0 + 712);
      sub_100478F44((void *)(v0 + 712));
      sub_10024D338(v0 + 712);
    }
    uint64_t v92 = v11;
LABEL_52:
    sub_10000A7E8(v92, &qword_100974FE0);
LABEL_56:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v93 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v93();
  }
  uint64_t v53 = *v52;
  *(void *)(v0 + 1200) = *v52;
  id result = [v53 identifier];
  if (!result)
  {
    __break(1u);
    goto LABEL_75;
  }
  uint64_t v55 = result;
  uint64_t v56 = *(void *)(v0 + 1064);
  uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v59 = v58;

  uint64_t v60 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
  *(void *)(v0 + 1208) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
  uint64_t v61 = (uint64_t *)(v56 + v60);
  swift_beginAccess();
  uint64_t v62 = *v61;
  if (*(void *)(v62 + 16) && (uint64_t v63 = sub_1005838BC(v57, v59), (v64 & 1) != 0))
  {
    sub_1003CF0DC(*(void *)(v62 + 56) + 48 * v63, v0 + 352);
  }
  else
  {
    *(_OWORD *)(v0 + 368) = 0u;
    *(_OWORD *)(v0 + 384) = 0u;
    *(_OWORD *)(v0 + 352) = 0u;
  }
  sub_10024D388(v0 + 352, v0 + 400, &qword_100974E88);
  if (!*(void *)(v0 + 424))
  {
    id result = [v53 identifier];
    if (result)
    {
      uint64_t v96 = result;
      uint64_t v97 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v99 = v98;

      uint64_t v100 = type metadata accessor for SDAirDropDiscoveredClassroom();
      swift_allocObject();
      uint64_t v101 = sub_100567C88(v97, v99);
      *(void *)(v0 + 280) = v100;
      *(void *)(v0 + 288) = sub_10000BAA0(&qword_100974FF0, (void (*)(uint64_t))type metadata accessor for SDAirDropDiscoveredClassroom);
      *(void *)(v0 + 296) = &off_1008DF648;
      *(void *)(v0 + 256) = v101;
      sub_10000A7E8(v0 + 400, &qword_100974E88);
      goto LABEL_69;
    }
LABEL_75:
    __break(1u);
    return result;
  }
  sub_1002AD354((long long *)(v0 + 400), (_OWORD *)(v0 + 256));
LABEL_69:
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v78 = *(void *)(v0 + 280);
  uint64_t v79 = *(void *)(v0 + 288);
  sub_10026BB6C((void *)(v0 + 256), v78);
  uint64_t v103 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 + 48) + **(int **)(v79 + 48));
  uint64_t v80 = (void *)swift_task_alloc();
  *(void *)(v0 + 1216) = v80;
  *uint64_t v80 = v0;
  uint64_t v81 = sub_100478974;
LABEL_70:
  v80[1] = v81;
  uint64_t v102 = *(void *)(v0 + 1056);
  return (id)v103(v102, v78, v79);
}

uint64_t sub_100477FE0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1112);
  swift_task_dealloc();
  return _swift_task_switch(sub_1004780F0, v1, 0);
}

uint64_t sub_1004780F0()
{
  uint64_t v1 = v0[141];
  uint64_t v2 = v0[140];
  sub_1003CF0DC((uint64_t)(v0 + 26), (uint64_t)(v0 + 8));
  swift_beginAccess();
  sub_100466734((uint64_t)(v0 + 8), v2, v1);
  swift_endAccess();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[144] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1004781F4;
  uint64_t v4 = v0[132];
  return sub_100478CC8((uint64_t)(v0 + 26), v4);
}

uint64_t sub_1004781F4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1112);
  swift_task_dealloc();
  return _swift_task_switch(sub_100478304, v1, 0);
}

uint64_t sub_100478304()
{
  long long v7 = *(_OWORD *)(v0 + 232);
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = sub_10026BB6C((void *)(v0 + 208), v1);
  *(_OWORD *)(v0 + 656) = v7;
  uint64_t v3 = sub_100278AE4((uint64_t *)(v0 + 632));
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v1 - 8) + 16))(v3, v2, v1);
  sub_10000A7E8(v0 + 672, &qword_100974FE0);
  sub_10024D388(v0 + 632, v0 + 672, &qword_100974FE0);
  sub_10024D338(v0 + 208);
  if (*(unsigned char *)(v0 + 1224) != 1) {
    goto LABEL_4;
  }
  sub_10024A330(v0 + 672, v0 + 752, &qword_100974FE0);
  if (*(void *)(v0 + 776))
  {
    sub_1002AF688((long long *)(v0 + 752), v0 + 712);
    sub_100478F44((void *)(v0 + 712));
    sub_10024D338(v0 + 712);
LABEL_4:
    uint64_t v4 = v0 + 672;
    goto LABEL_6;
  }
  sub_10000A7E8(v0 + 672, &qword_100974FE0);
  uint64_t v4 = v0 + 752;
LABEL_6:
  sub_10000A7E8(v4, &qword_100974FE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1004784AC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1112);
  swift_task_dealloc();
  return _swift_task_switch(sub_1004785BC, v1, 0);
}

uint64_t sub_1004785BC()
{
  uint64_t v1 = v0[146];
  uint64_t v2 = v0[145];
  sub_1003CF0DC((uint64_t)(v0 + 68), (uint64_t)(v0 + 38));
  swift_beginAccess();
  sub_100466734((uint64_t)(v0 + 38), v2, v1);
  swift_endAccess();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[149] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1004786C0;
  uint64_t v4 = v0[132];
  return sub_100478CC8((uint64_t)(v0 + 68), v4);
}

uint64_t sub_1004786C0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1112);
  swift_task_dealloc();
  return _swift_task_switch(sub_1004787D0, v1, 0);
}

uint64_t sub_1004787D0()
{
  uint64_t v1 = *(void *)(v0 + 568);
  uint64_t v2 = *(void *)(v0 + 576);
  uint64_t v3 = sub_10026BB6C((void *)(v0 + 544), v1);
  *(void *)(v0 + 856) = v1;
  *(void *)(v0 + 864) = v2;
  uint64_t v4 = sub_100278AE4((uint64_t *)(v0 + 832));
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v1 - 8) + 16))(v4, v3, v1);
  sub_10000A7E8(v0 + 672, &qword_100974FE0);
  sub_10024D388(v0 + 832, v0 + 672, &qword_100974FE0);
  sub_10024D338(v0 + 544);
  if (*(unsigned char *)(v0 + 1224) != 1) {
    goto LABEL_4;
  }
  sub_10024A330(v0 + 672, v0 + 752, &qword_100974FE0);
  if (*(void *)(v0 + 776))
  {
    sub_1002AF688((long long *)(v0 + 752), v0 + 712);
    sub_100478F44((void *)(v0 + 712));
    sub_10024D338(v0 + 712);
LABEL_4:
    uint64_t v5 = v0 + 672;
    goto LABEL_6;
  }
  sub_10000A7E8(v0 + 672, &qword_100974FE0);
  uint64_t v5 = v0 + 752;
LABEL_6:
  sub_10000A7E8(v5, &qword_100974FE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100478974()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1112);
  swift_task_dealloc();
  return _swift_task_switch(sub_100478A84, v1, 0);
}

id sub_100478A84()
{
  id result = [*(id *)(v0 + 1200) identifier];
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v2 = result;
  uint64_t v12 = *(void **)(v0 + 1200);
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  sub_1003CF0DC(v0 + 256, v0 + 448);
  swift_beginAccess();
  sub_100466734(v0 + 448, v3, v5);
  swift_endAccess();
  uint64_t v6 = *(void *)(v0 + 280);
  uint64_t v7 = *(void *)(v0 + 288);
  uint64_t v8 = sub_10026BB6C((void *)(v0 + 256), v6);
  *(void *)(v0 + 616) = v6;
  *(void *)(v0 + 624) = v7;
  uint64_t v9 = sub_100278AE4((uint64_t *)(v0 + 592));
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(v9, v8, v6);

  sub_10000A7E8(v0 + 672, &qword_100974FE0);
  sub_10024D388(v0 + 592, v0 + 672, &qword_100974FE0);
  sub_10024D338(v0 + 256);
  if (*(unsigned char *)(v0 + 1224) == 1)
  {
    sub_10024A330(v0 + 672, v0 + 752, &qword_100974FE0);
    if (!*(void *)(v0 + 776))
    {
      sub_10000A7E8(v0 + 672, &qword_100974FE0);
      uint64_t v10 = v0 + 752;
      goto LABEL_6;
    }
    sub_1002AF688((long long *)(v0 + 752), v0 + 712);
    sub_100478F44((void *)(v0 + 712));
    sub_10024D338(v0 + 712);
  }
  uint64_t v10 = v0 + 672;
LABEL_6:
  sub_10000A7E8(v10, &qword_100974FE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v11();
}

uint64_t sub_100478CC8(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = type metadata accessor for UUID();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_100478DC4, v5, 0);
}

uint64_t sub_100478DC4()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = (void *)v0[5];
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_10026BB6C(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
  uint64_t v5 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegateByConnectableID;
  swift_beginAccess();
  if (*(void *)(*(void *)v5 + 16) && (sub_100583A00(v0[10]), (v6 & 1) != 0))
  {
    uint64_t v8 = v0[9];
    uint64_t v7 = v0[10];
    uint64_t v9 = v0[8];
    uint64_t v10 = v0[6];
    swift_endAccess();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    swift_unknownObjectRetain();
    v11(v7, v9);
    if (sub_100479408(v10)) {
      sub_1003920E0(v0[6]);
    }
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_100478F44(void *a1)
{
  uint64_t v3 = sub_10000A844(&qword_100975008);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  char v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v37 - v7;
  uint64_t v9 = sub_10000A844(&qword_10096C6C8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  sub_10026BB6C(a1, v13);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
  uint64_t v17 = v16;
  uint64_t v18 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourDiscoveryContinuations);
  swift_beginAccess();
  uint64_t v19 = *v18;
  if (*(void *)(*v18 + 16) && (uint64_t v20 = sub_1005838BC(v15, v17), (v21 & 1) != 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, *(void *)(v19 + 56) + *(void *)(v10 + 72) * v20, v9);
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v22(v8, 0, 1, v9);
  }
  else
  {
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v22(v8, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10000A7E8((uint64_t)v8, &qword_100975008);
    return swift_endAccess();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    swift_endAccess();
    if (qword_100969E30 != -1) {
      swift_once();
    }
    char v40 = v12;
    uint64_t v24 = type metadata accessor for Logger();
    sub_10000B47C(v24, (uint64_t)qword_100974DB0);
    sub_100278C8C((uint64_t)a1, (uint64_t)v43);
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v38 = v22;
      uint64_t v42 = v28;
      uint64_t v39 = v6;
      *(_DWORD *)uint64_t v27 = 136315138;
      v37[1] = v27 + 4;
      sub_100278C8C((uint64_t)v43, (uint64_t)v41);
      sub_10000A844((uint64_t *)&unk_100974ED0);
      uint64_t v29 = String.init<A>(describing:)();
      v41[0] = sub_100254634(v29, v30, &v42);
      char v6 = v39;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10024D338((uint64_t)v43);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Bonjour discovery completed for waiting connectable: %s", v27, 0xCu);
      swift_arrayDestroy();
      uint64_t v22 = v38;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10024D338((uint64_t)v43);
    }

    uint64_t v31 = a1[3];
    uint64_t v32 = a1[4];
    sub_10026BB6C(a1, v31);
    uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
    uint64_t v35 = v34;
    v22(v6, 1, 1, v9);
    swift_beginAccess();
    sub_1004678EC((uint64_t)v6, v33, v35);
    swift_endAccess();
    sub_100278C8C((uint64_t)a1, (uint64_t)v43);
    uint64_t v36 = v40;
    CheckedContinuation.resume(returning:)();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v36, v9);
  }
}

uint64_t sub_100479408(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v35 - v12 + 16;
  sub_1004849EC(a1, (uint64_t)v35 - v12 + 16, type metadata accessor for SDAirDropDiscoveredEndpoint);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100484D20((uint64_t)v13, (uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      char v31 = v4[*(int *)(v2 + 64)];
      sub_1004838E8((uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      if ((v31 & 1) == 0) {
        goto LABEL_3;
      }
      return 1;
    case 2u:
      uint64_t v32 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint;
      goto LABEL_14;
    case 3u:
      uint64_t v32 = type metadata accessor for SDAirDropDiscoveredEndpoint;
LABEL_14:
      sub_1004838E8((uint64_t)v13, v32);
      return 1;
    default:
      sub_100484D20((uint64_t)v13, (uint64_t)v7, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      char v14 = sub_100314A78();
      sub_1004838E8((uint64_t)v7, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      if (v14) {
        return 1;
      }
LABEL_3:
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (!Strong) {
        return 0;
      }
      uint64_t v16 = Strong;
      uint64_t v17 = sub_100316F00();
      if (!v18) {
        goto LABEL_15;
      }
      uint64_t v19 = v17;
      uint64_t v20 = v18;
      uint64_t v21 = v16 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
      swift_beginAccess();
      sub_100278C8C(v21, (uint64_t)v35);
      uint64_t v22 = v36;
      uint64_t v23 = v37;
      sub_10026BB6C(v35, v36);
      LOBYTE(v19) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 104))(v19, v20, v22, v23);
      swift_bridgeObjectRelease();
      sub_10024D338((uint64_t)v35);
      if (v19)
      {
        if (qword_100969E30 != -1) {
          swift_once();
        }
        uint64_t v24 = type metadata accessor for Logger();
        sub_10000B47C(v24, (uint64_t)qword_100974DB0);
        sub_1004849EC(a1, (uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
        uint64_t v25 = Logger.logObject.getter();
        os_log_type_t v26 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v25, v26))
        {
          uint64_t v27 = (uint8_t *)swift_slowAlloc();
          v35[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v27 = 136315138;
          uint64_t v28 = sub_100315DA0();
          uint64_t v38 = sub_100254634(v28, v29, v35);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_1004838E8((uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
          _os_log_impl((void *)&_mh_execute_header, v25, v26, "endpoint.isConnectable is false. Treating endpoint as connectable due to delegate: %s", v27, 0xCu);
          uint64_t v30 = 1;
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          swift_unknownObjectRelease();
        }
        else
        {
          sub_1004838E8((uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);

          swift_unknownObjectRelease();
          return 1;
        }
      }
      else
      {
LABEL_15:
        swift_unknownObjectRelease();
        return 0;
      }
      return v30;
  }
}

uint64_t sub_1004798F8(uint64_t a1)
{
  v2[34] = a1;
  v2[35] = v1;
  sub_10000A844(&qword_10096D8B8);
  v2[36] = swift_task_alloc();
  v2[37] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v2[38] = v3;
  v2[39] = *(void *)(v3 - 8);
  v2[40] = swift_task_alloc();
  v2[41] = swift_task_alloc();
  v2[42] = swift_task_alloc();
  v2[43] = swift_task_alloc();
  v2[44] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v2[45] = v4;
  v2[46] = *(void *)(v4 - 8);
  v2[47] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  v2[48] = static AirDropActor.shared;
  return _swift_task_switch(sub_100479AC4, v5, 0);
}

uint64_t sub_100479AC4()
{
  uint64_t v1 = (uint64_t *)(*(void *)(v0 + 280)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_100583A00(*(void *)(v0 + 272)), (v4 & 1) != 0))
  {
    sub_100278C8C(*(void *)(v2 + 56) + 40 * v3, v0 + 104);
  }
  else
  {
    *(void *)(v0 + 136) = 0;
    *(_OWORD *)(v0 + 104) = 0u;
    *(_OWORD *)(v0 + 120) = 0u;
  }
  uint64_t v6 = *(void *)(v0 + 368);
  uint64_t v5 = *(void *)(v0 + 376);
  uint64_t v7 = *(void *)(v0 + 360);
  uint64_t v8 = *(void *)(v0 + 272);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
  if (*(void *)(v0 + 128))
  {
    (*(void (**)(void, void))(*(void *)(v0 + 368) + 8))(*(void *)(v0 + 376), *(void *)(v0 + 360));
    sub_1002AF688((long long *)(v0 + 104), v0 + 64);
LABEL_15:
    sub_1002AF688((long long *)(v0 + 64), v0 + 144);
    uint64_t v24 = *(void *)(v0 + 168);
    uint64_t v25 = *(void **)(v0 + 176);
    sub_10026BB6C((void *)(v0 + 144), v24);
    char v31 = (uint64_t (*)(void *, void *))(v25[5] + *(int *)v25[5]);
    os_log_type_t v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 392) = v26;
    *os_log_type_t v26 = v0;
    v26[1] = sub_100479EC0;
    uint64_t v27 = (void *)v24;
    uint64_t v28 = v25;
    unint64_t v29 = v31;
    return v29(v27, v28);
  }
  uint64_t v9 = *(void *)(v0 + 280);
  uint64_t v10 = UUID.uuidString.getter();
  uint64_t v12 = v11;
  uint64_t v13 = (uint64_t *)(v9 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
  swift_beginAccess();
  uint64_t v14 = *v13;
  if (*(void *)(v14 + 16) && (uint64_t v15 = sub_1005838BC(v10, v12), (v16 & 1) != 0))
  {
    sub_1003CF0DC(*(void *)(v14 + 56) + 48 * v15, v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 32) = 0u;
    *(_OWORD *)(v0 + 48) = 0u;
    *(_OWORD *)(v0 + 16) = 0u;
  }
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v17 = *(void *)(v0 + 40);
  uint64_t v19 = *(void *)(v0 + 368);
  uint64_t v18 = *(void *)(v0 + 376);
  uint64_t v20 = *(void *)(v0 + 360);
  if (v17)
  {
    uint64_t v21 = *(void *)(v0 + 48);
    uint64_t v22 = sub_10026BB6C((void *)(v0 + 16), *(void *)(v0 + 40));
    *(void *)(v0 + 88) = v17;
    *(void *)(v0 + 96) = v21;
    uint64_t v23 = sub_100278AE4((uint64_t *)(v0 + 64));
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v23, v22, v17);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    sub_10024D338(v0 + 16);
  }
  else
  {
    (*(void (**)(void, void))(v19 + 8))(*(void *)(v0 + 376), *(void *)(v0 + 360));
    sub_10000A7E8(v0 + 16, &qword_100974E88);
    *(_OWORD *)(v0 + 64) = 0u;
    *(_OWORD *)(v0 + 80) = 0u;
    *(void *)(v0 + 96) = 0;
  }
  sub_10000A7E8(v0 + 104, &qword_100974FE0);
  if (*(void *)(v0 + 88)) {
    goto LABEL_15;
  }
  sub_10000A7E8(v0 + 64, &qword_100974FE0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v29 = *(uint64_t (**)(void *, void *))(v0 + 8);
  uint64_t v27 = &_swiftEmptySetSingleton;
  uint64_t v28 = &_swiftEmptySetSingleton;
  return v29(v27, v28);
}

uint64_t sub_100479EC0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 384);
  *(void *)(*(void *)v1 + 400) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100479FD8, v2, 0);
}

uint64_t sub_100479FD8()
{
  id v1 = *(id *)(v0 + 280);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  char v4 = sub_100483FD0(v2);

  uint64_t result = swift_bridgeObjectRelease();
  if (v4)
  {
    int64_t v6 = 0;
    uint64_t v7 = *(void *)(v0 + 400);
    uint64_t v46 = v7 + 56;
    uint64_t v8 = -1 << *(unsigned char *)(v7 + 32);
    uint64_t v9 = *(void *)(v0 + 312);
    if (-v8 < 64) {
      uint64_t v10 = ~(-1 << -(char)v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v7 + 56);
    int64_t v47 = (unint64_t)(63 - v8) >> 6;
    uint64_t v44 = *(void *)(v0 + 400);
    uint64_t v45 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    uint64_t v43 = *(void *)(v0 + 312);
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v6 << 6);
      }
      else
      {
        if (__OFADD__(v6++, 1))
        {
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        uint64_t result = v3;
        if (v6 >= v47) {
          goto LABEL_35;
        }
        unint64_t v20 = *(void *)(v46 + 8 * v6);
        if (!v20)
        {
          int64_t v21 = v6 + 1;
          if (v6 + 1 >= v47) {
            goto LABEL_35;
          }
          unint64_t v20 = *(void *)(v46 + 8 * v21);
          if (!v20)
          {
            int64_t v21 = v6 + 2;
            if (v6 + 2 >= v47) {
              goto LABEL_35;
            }
            unint64_t v20 = *(void *)(v46 + 8 * v21);
            if (!v20)
            {
              int64_t v21 = v6 + 3;
              if (v6 + 3 >= v47)
              {
LABEL_35:
                swift_release();
                sub_10024D338(v0 + 144);
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                swift_task_dealloc();
                uint64_t v41 = *(uint64_t (**)(void *, void *))(v0 + 8);
                return v41(&_swiftEmptySetSingleton, &_swiftEmptySetSingleton);
              }
              unint64_t v20 = *(void *)(v46 + 8 * v21);
              if (!v20)
              {
                while (1)
                {
                  int64_t v6 = v21 + 1;
                  if (__OFADD__(v21, 1)) {
                    goto LABEL_39;
                  }
                  if (v6 >= v47) {
                    goto LABEL_35;
                  }
                  unint64_t v20 = *(void *)(v46 + 8 * v6);
                  ++v21;
                  if (v20) {
                    goto LABEL_21;
                  }
                }
              }
            }
          }
          int64_t v6 = v21;
        }
LABEL_21:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v6 << 6);
      }
      uint64_t v22 = *(void *)(v0 + 344);
      uint64_t v23 = *(void *)(v0 + 352);
      sub_1004849EC(*(void *)(v7 + 48) + *(void *)(v9 + 72) * v18, v23, type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_100484D20(v23, v22, type metadata accessor for SDAirDropDiscoveredEndpoint);
      if (sub_100479408(v22))
      {
        uint64_t v24 = *(void *)(v0 + 344);
        uint64_t v26 = *(void *)(v0 + 296);
        uint64_t v25 = *(void *)(v0 + 304);
        *(void *)(swift_task_alloc() + 16) = v24;
        swift_bridgeObjectRetain();
        sub_1003D8D24((uint64_t (*)(char *))sub_100484DA8, (uint64_t)&_swiftEmptySetSingleton, v26);
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        int v27 = (*v45)(v26, 1, v25);
        uint64_t v28 = *(void *)(v0 + 344);
        if (v27 == 1)
        {
          uint64_t v13 = *(void *)(v0 + 320);
          uint64_t v12 = *(void *)(v0 + 328);
          sub_10000A7E8(*(void *)(v0 + 296), &qword_10096D8B8);
          sub_1004849EC(v28, v13, type metadata accessor for SDAirDropDiscoveredEndpoint);
          uint64_t v14 = v12;
          uint64_t v15 = v13;
          uint64_t v9 = v43;
          uint64_t v7 = v44;
          sub_100595DA4(v14, v15);
          char v16 = (uint64_t *)(v0 + 328);
        }
        else
        {
          sub_100484D20(*(void *)(v0 + 296), *(void *)(v0 + 336), type metadata accessor for SDAirDropDiscoveredEndpoint);
          uint64_t v29 = sub_10031B09C();
          uint64_t v30 = sub_10031B09C();
          uint64_t v31 = *(void *)(v0 + 344);
          if (v30 >= v29)
          {
            uint64_t v39 = *(void *)(v0 + 320);
            uint64_t v38 = *(void *)(v0 + 328);
            sub_1004849EC(*(void *)(v0 + 344), v39, type metadata accessor for SDAirDropDiscoveredEndpoint);
            sub_100595DA4(v38, v39);
            uint64_t v37 = v38;
          }
          else
          {
            uint64_t v33 = *(void *)(v0 + 328);
            uint64_t v32 = *(void *)(v0 + 336);
            uint64_t v42 = v3;
            uint64_t v34 = *(void *)(v0 + 320);
            uint64_t v35 = *(void *)(v0 + 288);
            sub_1004849EC(v32, v34, type metadata accessor for SDAirDropDiscoveredEndpoint);
            sub_100595DA4(v33, v34);
            sub_1004838E8(v33, type metadata accessor for SDAirDropDiscoveredEndpoint);
            sub_1005A29BC(v32, v35);
            sub_10000A7E8(v35, &qword_10096D8B8);
            sub_1004849EC(v31, v34, type metadata accessor for SDAirDropDiscoveredEndpoint);
            uint64_t v36 = v34;
            uint64_t v3 = v42;
            sub_100595DA4(v33, v36);
            uint64_t v37 = v33;
          }
          sub_1004838E8(v37, type metadata accessor for SDAirDropDiscoveredEndpoint);
          char v16 = (uint64_t *)(v0 + 336);
          uint64_t v9 = v43;
          uint64_t v7 = v44;
        }
        sub_1004838E8(*v16, type metadata accessor for SDAirDropDiscoveredEndpoint);
      }
      uint64_t result = sub_1004838E8(*(void *)(v0 + 344), type metadata accessor for SDAirDropDiscoveredEndpoint);
    }
  }
  swift_bridgeObjectRelease();
  char v40 = (void *)swift_task_alloc();
  *(void *)(v0 + 408) = v40;
  *char v40 = v0;
  v40[1] = sub_10047A594;
  return sub_10047B2A8(v0 + 184, v0 + 144);
}

uint64_t sub_10047A594()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 416) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 384);
  if (v0) {
    char v4 = sub_10047ADC4;
  }
  else {
    char v4 = sub_10047A6C0;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10047A6C0()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[27];
  sub_10026BB6C(v0 + 23, v1);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v2 + 40) + **(int **)(v2 + 40));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[53] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10047A7C0;
  return v5(v1, v2);
}

uint64_t sub_10047A7C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 384);
  *(void *)(*(void *)v1 + 432) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10047A8D8, v2, 0);
}

uint64_t sub_10047A8D8()
{
  uint64_t result = sub_10024D338((uint64_t)(v0 + 23));
  int64_t v2 = 0;
  uint64_t v3 = v0[54];
  uint64_t v4 = v0[52];
  uint64_t v42 = v3 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  uint64_t v6 = v0[39];
  if (-v5 < 64) {
    uint64_t v7 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v3 + 56);
  int64_t v43 = (unint64_t)(63 - v5) >> 6;
  uint64_t v40 = v0[54];
  uint64_t v41 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v39 = v0[39];
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v2 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v2++, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v2 >= v43) {
      goto LABEL_31;
    }
    unint64_t v17 = *(void *)(v42 + 8 * v2);
    if (!v17) {
      break;
    }
LABEL_20:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v2 << 6);
LABEL_21:
    uint64_t v19 = v0[43];
    uint64_t v20 = v0[44];
    sub_1004849EC(*(void *)(v3 + 48) + *(void *)(v6 + 72) * v15, v20, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100484D20(v20, v19, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (sub_100479408(v19))
    {
      uint64_t v21 = v0[43];
      uint64_t v23 = v0[37];
      uint64_t v22 = v0[38];
      *(void *)(swift_task_alloc() + 16) = v21;
      swift_bridgeObjectRetain();
      sub_1003D8D24((uint64_t (*)(char *))sub_100484DA8, (uint64_t)&_swiftEmptySetSingleton, v23);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      int v24 = (*v41)(v23, 1, v22);
      uint64_t v25 = v0[43];
      if (v24 == 1)
      {
        uint64_t v10 = v0[40];
        uint64_t v9 = v0[41];
        sub_10000A7E8(v0[37], &qword_10096D8B8);
        sub_1004849EC(v25, v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
        uint64_t v11 = v9;
        uint64_t v12 = v10;
        uint64_t v6 = v39;
        uint64_t v3 = v40;
        sub_100595DA4(v11, v12);
        uint64_t v13 = v0 + 41;
      }
      else
      {
        sub_100484D20(v0[37], v0[42], type metadata accessor for SDAirDropDiscoveredEndpoint);
        uint64_t v26 = sub_10031B09C();
        uint64_t v27 = sub_10031B09C();
        uint64_t v28 = v0[43];
        if (v27 >= v26)
        {
          uint64_t v36 = v0[40];
          uint64_t v35 = v0[41];
          sub_1004849EC(v0[43], v36, type metadata accessor for SDAirDropDiscoveredEndpoint);
          sub_100595DA4(v35, v36);
          uint64_t v34 = v35;
        }
        else
        {
          uint64_t v30 = v0[41];
          uint64_t v29 = v0[42];
          uint64_t v38 = v4;
          uint64_t v31 = v0[40];
          uint64_t v32 = v0[36];
          sub_1004849EC(v29, v31, type metadata accessor for SDAirDropDiscoveredEndpoint);
          sub_100595DA4(v30, v31);
          sub_1004838E8(v30, type metadata accessor for SDAirDropDiscoveredEndpoint);
          sub_1005A29BC(v29, v32);
          sub_10000A7E8(v32, &qword_10096D8B8);
          sub_1004849EC(v28, v31, type metadata accessor for SDAirDropDiscoveredEndpoint);
          uint64_t v33 = v31;
          uint64_t v4 = v38;
          sub_100595DA4(v30, v33);
          uint64_t v34 = v30;
        }
        sub_1004838E8(v34, type metadata accessor for SDAirDropDiscoveredEndpoint);
        uint64_t v13 = v0 + 42;
        uint64_t v6 = v39;
        uint64_t v3 = v40;
      }
      sub_1004838E8(*v13, type metadata accessor for SDAirDropDiscoveredEndpoint);
    }
    uint64_t result = sub_1004838E8(v0[43], type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  int64_t v18 = v2 + 1;
  if (v2 + 1 >= v43) {
    goto LABEL_31;
  }
  unint64_t v17 = *(void *)(v42 + 8 * v18);
  if (v17) {
    goto LABEL_19;
  }
  int64_t v18 = v2 + 2;
  if (v2 + 2 >= v43) {
    goto LABEL_31;
  }
  unint64_t v17 = *(void *)(v42 + 8 * v18);
  if (v17)
  {
LABEL_19:
    int64_t v2 = v18;
    goto LABEL_20;
  }
  int64_t v18 = v2 + 3;
  if (v2 + 3 < v43)
  {
    unint64_t v17 = *(void *)(v42 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        int64_t v2 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          goto LABEL_35;
        }
        if (v2 >= v43) {
          goto LABEL_31;
        }
        unint64_t v17 = *(void *)(v42 + 8 * v2);
        ++v18;
        if (v17) {
          goto LABEL_20;
        }
      }
    }
    goto LABEL_19;
  }
LABEL_31:
  swift_release();
  sub_10024D338((uint64_t)(v0 + 18));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v37 = (uint64_t (*)(void *, void *))v0[1];
  return v37(&_swiftEmptySetSingleton, &_swiftEmptySetSingleton);
}

uint64_t sub_10047ADC4()
{
  uint64_t result = swift_errorRelease();
  uint64_t v2 = 0;
  int64_t v3 = 0;
  uint64_t v4 = v0[39];
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *((void *)&_swiftEmptySetSingleton + 7);
  uint64_t v38 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  int64_t v39 = (unint64_t)(63 - v6) >> 6;
  uint64_t v36 = v0[39];
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v3 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v3++, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      return result;
    }
    if (v3 >= v39) {
      goto LABEL_30;
    }
    unint64_t v14 = *((void *)&_swiftEmptySetSingleton + v3 + 7);
    if (!v14) {
      break;
    }
LABEL_19:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v3 << 6);
LABEL_20:
    uint64_t v16 = v0[43];
    uint64_t v17 = v0[44];
    sub_1004849EC(*((void *)&_swiftEmptySetSingleton + 6) + *(void *)(v4 + 72) * v12, v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100484D20(v17, v16, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (sub_100479408(v16))
    {
      uint64_t v18 = v0[43];
      uint64_t v20 = v0[37];
      uint64_t v19 = v0[38];
      *(void *)(swift_task_alloc() + 16) = v18;
      swift_bridgeObjectRetain();
      sub_1003D8D24((uint64_t (*)(char *))sub_100484DA8, (uint64_t)&_swiftEmptySetSingleton, v20);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      int v21 = (*v38)(v20, 1, v19);
      uint64_t v22 = v0[43];
      if (v21 == 1)
      {
        uint64_t v9 = v0[40];
        uint64_t v8 = v0[41];
        sub_10000A7E8(v0[37], &qword_10096D8B8);
        sub_1004849EC(v22, v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
        sub_100595DA4(v8, v9);
        uint64_t v10 = v0 + 41;
      }
      else
      {
        sub_100484D20(v0[37], v0[42], type metadata accessor for SDAirDropDiscoveredEndpoint);
        uint64_t v23 = sub_10031B09C();
        uint64_t v24 = sub_10031B09C();
        uint64_t v25 = v0[43];
        if (v24 >= v23)
        {
          uint64_t v34 = v0[40];
          uint64_t v33 = v0[41];
          sub_1004849EC(v0[43], v34, type metadata accessor for SDAirDropDiscoveredEndpoint);
          sub_100595DA4(v33, v34);
          uint64_t v32 = v33;
        }
        else
        {
          uint64_t v27 = v0[41];
          uint64_t v26 = v0[42];
          uint64_t v28 = v0[40];
          uint64_t v37 = v2;
          uint64_t v29 = v0[36];
          sub_1004849EC(v26, v28, type metadata accessor for SDAirDropDiscoveredEndpoint);
          sub_100595DA4(v27, v28);
          sub_1004838E8(v27, type metadata accessor for SDAirDropDiscoveredEndpoint);
          sub_1005A29BC(v26, v29);
          uint64_t v30 = v29;
          uint64_t v2 = v37;
          sub_10000A7E8(v30, &qword_10096D8B8);
          sub_1004849EC(v25, v28, type metadata accessor for SDAirDropDiscoveredEndpoint);
          uint64_t v31 = v28;
          uint64_t v4 = v36;
          sub_100595DA4(v27, v31);
          uint64_t v32 = v27;
        }
        sub_1004838E8(v32, type metadata accessor for SDAirDropDiscoveredEndpoint);
        uint64_t v10 = v0 + 42;
      }
      sub_1004838E8(*v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
    }
    uint64_t result = sub_1004838E8(v0[43], type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  int64_t v15 = v3 + 1;
  if (v3 + 1 >= v39) {
    goto LABEL_30;
  }
  unint64_t v14 = *((void *)&_swiftEmptySetSingleton + v15 + 7);
  if (v14) {
    goto LABEL_18;
  }
  int64_t v15 = v3 + 2;
  if (v3 + 2 >= v39) {
    goto LABEL_30;
  }
  unint64_t v14 = *((void *)&_swiftEmptySetSingleton + v15 + 7);
  if (v14)
  {
LABEL_18:
    int64_t v3 = v15;
    goto LABEL_19;
  }
  int64_t v15 = v3 + 3;
  if (v3 + 3 < v39)
  {
    unint64_t v14 = *((void *)&_swiftEmptySetSingleton + v15 + 7);
    if (!v14)
    {
      while (1)
      {
        int64_t v3 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_34;
        }
        if (v3 >= v39) {
          goto LABEL_30;
        }
        unint64_t v14 = *((void *)&_swiftEmptySetSingleton + v3 + 7);
        ++v15;
        if (v14) {
          goto LABEL_19;
        }
      }
    }
    goto LABEL_18;
  }
LABEL_30:
  swift_release();
  sub_10024D338((uint64_t)(v0 + 18));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = (uint64_t (*)(void *, void *))v0[1];
  return v35(&_swiftEmptySetSingleton, &_swiftEmptySetSingleton);
}

uint64_t sub_10047B2A8(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = swift_getObjectType();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  v3[6] = static AirDropActor.shared;
  return _swift_task_switch(sub_10047B358, v4, 0);
}

uint64_t sub_10047B358()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[3];
  uint64_t v3 = static AirDropActor.shared;
  uint64_t v4 = sub_10000BAA0((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v5 = swift_allocObject();
  v0[7] = v5;
  swift_unknownObjectWeakInit();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[8] = v6;
  v6[2] = v2;
  v6[3] = v5;
  v6[4] = v1;
  unint64_t v7 = (void *)swift_task_alloc();
  v0[9] = v7;
  uint64_t v8 = sub_10000A844((uint64_t *)&unk_100974ED0);
  *unint64_t v7 = v0;
  v7[1] = sub_10047B4D4;
  uint64_t v9 = v0[2];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v9, v3, v4, 0xD000000000000024, 0x80000001007BE2D0, sub_100484DC8, v6, v8);
}

uint64_t sub_10047B4D4()
{
  uint64_t v2 = (void *)*v1;
  v2[10] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[6];
    return _swift_task_switch(sub_10047B61C, v3, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_10047B61C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10047B688(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v31 - v11;
  uint64_t v13 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (id *)((char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v18 = (id *)((char *)&v31 - v17);
  sub_1004849EC(a1, (uint64_t)&v31 - v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100484D20((uint64_t)v18, (uint64_t)v6, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      uint64_t v22 = (uint64_t *)&v6[*(int *)(v4 + 28)];
      uint64_t device_id = *v22;
      uint64_t v21 = v22[1];
      swift_bridgeObjectRetain();
      uint64_t v23 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
      uint64_t v24 = (uint64_t)v6;
      goto LABEL_11;
    case 2u:
      sub_1004838E8((uint64_t)v18, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      goto LABEL_7;
    case 3u:

LABEL_7:
      uint64_t device_id = 0;
      uint64_t v21 = 0;
      break;
    default:
      sub_100484D20((uint64_t)v18, (uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      if (!NWEndpoint.nw.getter())
      {
        __break(1u);
LABEL_35:
        __break(1u);
        JUMPOUT(0x10047BB1CLL);
      }
      uint64_t device_id = nw_endpoint_get_device_id();
      swift_unknownObjectRelease();
      if (device_id)
      {
        uint64_t device_id = String.init(cString:)();
        uint64_t v21 = v20;
      }
      else
      {
        uint64_t v21 = 0;
      }
      uint64_t v23 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
      uint64_t v24 = (uint64_t)v12;
LABEL_11:
      sub_1004838E8(v24, v23);
      break;
  }
  sub_1004849EC(a2, (uint64_t)v16, type metadata accessor for SDAirDropDiscoveredEndpoint);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100484D20((uint64_t)v16, (uint64_t)v6, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      uint64_t v28 = (uint64_t *)&v6[*(int *)(v4 + 28)];
      uint64_t v25 = *v28;
      uint64_t v27 = v28[1];
      swift_bridgeObjectRetain();
      sub_1004838E8((uint64_t)v6, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      if (v21) {
        goto LABEL_21;
      }
      goto LABEL_29;
    case 2u:
      sub_1004838E8((uint64_t)v16, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      goto LABEL_18;
    case 3u:

LABEL_18:
      uint64_t v25 = 0;
      uint64_t v27 = 0;
      if (!v21) {
        goto LABEL_29;
      }
      goto LABEL_21;
    default:
      sub_100484D20((uint64_t)v16, (uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      if (!NWEndpoint.nw.getter()) {
        goto LABEL_35;
      }
      uint64_t v25 = nw_endpoint_get_device_id();
      swift_unknownObjectRelease();
      if (v25)
      {
        uint64_t v25 = String.init(cString:)();
        uint64_t v27 = v26;
      }
      else
      {
        uint64_t v27 = 0;
      }
      sub_1004838E8((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      if (v21)
      {
LABEL_21:
        if (v27)
        {
          if (device_id == v25 && v21 == v27)
          {
            swift_bridgeObjectRelease();
            char v29 = 1;
          }
          else
          {
            char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          char v29 = 0;
        }
        goto LABEL_31;
      }
LABEL_29:
      if (v27)
      {
        char v29 = 0;
LABEL_31:
        swift_bridgeObjectRelease();
        return v29 & 1;
      }
      char v29 = 1;
      return v29 & 1;
  }
}

uint64_t sub_10047BB3C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v37 = a1;
  uint64_t v6 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v6 - 8);
  uint64_t v38 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A844(&qword_100975008);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100969E30 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10000B47C(v11, (uint64_t)qword_100974DB0);
  sub_100278C8C((uint64_t)a2, (uint64_t)v41);
  unint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v36 = a4;
    v40[0] = v15;
    *(_DWORD *)uint64_t v14 = 136315138;
    sub_100278C8C((uint64_t)v41, (uint64_t)v39);
    sub_10000A844((uint64_t *)&unk_100974ED0);
    uint64_t v16 = String.init<A>(describing:)();
    v39[0] = sub_100254634(v16, v17, v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)v41);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Connectable (%s) requires Bonjour discovery", v14, 0xCu);
    swift_arrayDestroy();
    a4 = v36;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10024D338((uint64_t)v41);
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v19 = (void *)Strong;
    uint64_t v20 = a2[3];
    uint64_t v21 = a2[4];
    sub_10026BB6C(a2, v20);
    uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
    uint64_t v24 = v23;
    uint64_t v25 = sub_10000A844(&qword_10096C6C8);
    uint64_t v26 = *(void *)(v25 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v10, v37, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v10, 0, 1, v25);
    swift_beginAccess();
    sub_1004678EC((uint64_t)v10, v22, v24);
    swift_endAccess();
  }
  uint64_t v27 = type metadata accessor for TaskPriority();
  uint64_t v28 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v38, 1, 1, v27);
  uint64_t v29 = swift_allocObject();
  swift_beginAccess();
  uint64_t v30 = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  sub_100278C8C((uint64_t)a2, (uint64_t)v41);
  uint64_t v31 = qword_100969B90;
  swift_retain();
  if (v31 != -1) {
    swift_once();
  }
  uint64_t v32 = static AirDropActor.shared;
  uint64_t v33 = sub_10000BAA0((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v34 = (void *)swift_allocObject();
  void v34[2] = v32;
  v34[3] = v33;
  v34[4] = v29;
  sub_1002AF688(v41, (uint64_t)(v34 + 5));
  v34[10] = a4;
  swift_retain();
  swift_release();
  sub_10028CAC4(v28, (uint64_t)&unk_1009750A0, (uint64_t)v34);
  return swift_release();
}

uint64_t sub_10047C03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[13] = a4;
  v5[14] = a5;
  sub_10000A844(&qword_10096C920);
  v5[15] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for ContinuousClock();
  v5[16] = v6;
  v5[17] = *(void *)(v6 - 8);
  v5[18] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  v5[19] = static AirDropActor.shared;
  return _swift_task_switch(sub_10047C168, v7, 0);
}

uint64_t sub_10047C168()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    sub_10046E734();
  }
  ContinuousClock.init()();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10047C264;
  return v5(0x70801D946C940000, 2, 0, 0, 1);
}

uint64_t sub_10047C264()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 144);
  uint64_t v4 = *(void *)(*v1 + 136);
  uint64_t v5 = *(void *)(*v1 + 128);
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 152);
  if (v0) {
    uint64_t v7 = sub_10047C5BC;
  }
  else {
    uint64_t v7 = sub_10047C3EC;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_10047C3EC()
{
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  sub_100278C8C(v2, v0 + 16);
  uint64_t v6 = static AirDropActor.shared;
  uint64_t v7 = sub_10000BAA0((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v6;
  v8[3] = v7;
  sub_1002AF688((long long *)(v0 + 16), (uint64_t)(v8 + 4));
  v8[9] = v4;
  swift_retain();
  sub_10028CFA8(v1, (uint64_t)&unk_1009750B0, (uint64_t)v8);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_10047C5BC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10047C62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[26] = a4;
  v5[27] = a5;
  sub_10000A844(&qword_100975008);
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  uint64_t v6 = sub_10000A844(&qword_10096C6C8);
  v5[30] = v6;
  v5[31] = *(void *)(v6 - 8);
  v5[32] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  return _swift_task_switch(sub_10047C768, v7, 0);
}

uint64_t sub_10047C768()
{
  uint64_t v46 = v0;
  if (qword_100969E30 != -1) {
    swift_once();
  }
  uint64_t v2 = v0 + 26;
  uint64_t v1 = v0[26];
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000B47C(v3, (uint64_t)qword_100974DB0);
  sub_100278C8C(v1, (uint64_t)(v0 + 2));
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    sub_100278C8C((uint64_t)(v0 + 2), (uint64_t)(v0 + 7));
    sub_10000A844((uint64_t *)&unk_100974ED0);
    uint64_t v7 = String.init<A>(describing:)();
    v0[25] = sub_100254634(v7, v8, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)(v0 + 2));
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Bonjour discovery timed out for (%s)", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10024D338((uint64_t)(v0 + 2));
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[31] + 56))(v0[29], 1, 1, v0[30]);
LABEL_14:
    sub_10000A7E8(v0[29], &qword_100975008);
    goto LABEL_18;
  }
  uint64_t v10 = (char *)Strong;
  uint64_t v11 = (void *)*v2;
  uint64_t v12 = *(void *)(*v2 + 24);
  uint64_t v13 = v11[4];
  sub_10026BB6C(v11, v12);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  uint64_t v16 = v15;
  unint64_t v17 = &v10[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourDiscoveryContinuations];
  swift_beginAccess();
  uint64_t v18 = *(void *)v17;
  if (*(void *)(v18 + 16))
  {
    uint64_t v19 = sub_1005838BC(v14, v16);
    uint64_t v20 = v0[30];
    uint64_t v21 = v0[31];
    uint64_t v22 = v0[29];
    if (v23)
    {
      (*(void (**)(void, uint64_t, void))(v21 + 16))(v0[29], *(void *)(v18 + 56) + *(void *)(v21 + 72) * v19, v0[30]);
      uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
      v24(v22, 0, 1, v20);
    }
    else
    {
      uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
      v24(v0[29], 1, 1, v20);
    }
  }
  else
  {
    uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[31] + 56);
    v24(v0[29], 1, 1, v0[30]);
  }
  uint64_t v25 = v0[30];
  uint64_t v26 = v0[31];
  uint64_t v27 = v0[29];
  swift_bridgeObjectRelease();
  swift_endAccess();

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v27, 1, v25) == 1) {
    goto LABEL_14;
  }
  (*(void (**)(void, void, void))(v0[31] + 32))(v0[32], v0[29], v0[30]);
  swift_beginAccess();
  uint64_t v28 = swift_unknownObjectWeakLoadStrong();
  if (v28)
  {
    uint64_t v29 = (void *)v28;
    uint64_t v30 = v0[30];
    uint64_t v31 = v0[28];
    uint64_t v33 = v11[3];
    uint64_t v32 = v11[4];
    sub_10026BB6C((void *)v0[26], v33);
    uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v33, v32);
    uint64_t v36 = v35;
    v24(v31, 1, 1, v30);
    swift_beginAccess();
    sub_1004678EC(v31, v34, v36);
    swift_endAccess();
  }
  uint64_t v38 = v0[31];
  uint64_t v37 = v0[32];
  uint64_t v39 = v0[30];
  uint64_t v40 = type metadata accessor for SFAirDropSend.Failure();
  sub_10000BAA0(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
  uint64_t v41 = swift_allocError();
  *uint64_t v42 = 1;
  (*(void (**)(unsigned char *, void, uint64_t))(*(void *)(v40 - 8) + 104))(v42, enum case for SFAirDropSend.Failure.resolveFailure(_:), v40);
  v0[24] = v41;
  CheckedContinuation.resume(throwing:)();
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
LABEL_18:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v43 = (uint64_t (*)(void))v0[1];
  return v43();
}

uint64_t sub_10047CD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[12] = a5;
  v6[13] = v5;
  v6[10] = a3;
  v6[11] = a4;
  v6[8] = a1;
  v6[9] = a2;
  sub_10000A844(&qword_100974EA0);
  v6[14] = swift_task_alloc();
  uint64_t v9 = swift_task_alloc();
  v6[15] = v9;
  uint64_t v10 = type metadata accessor for UUID();
  v6[16] = v10;
  v6[17] = *(void *)(v10 - 8);
  v6[18] = swift_task_alloc();
  v6[19] = swift_task_alloc();
  v6[20] = swift_task_alloc();
  v6[21] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  v6[22] = static AirDropActor.shared;
  uint64_t v11 = (void *)swift_task_alloc();
  v6[23] = v11;
  *uint64_t v11 = v6;
  v11[1] = sub_10047CED0;
  return sub_10047DCEC(v9, a2, a3);
}

uint64_t sub_10047CED0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  swift_task_dealloc();
  return _swift_task_switch(sub_10047CFE0, v1, 0);
}

uint64_t sub_10047CFE0()
{
  int64_t v43 = v0;
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[15];
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  v0[24] = v4;
  v0[25] = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v3, 1, v1) == 1)
  {
    uint64_t v5 = v0[12];
    sub_10000A7E8(v3, &qword_100974EA0);
    if (v5)
    {
      uint64_t v6 = v0[12];
      uint64_t v7 = (void *)swift_task_alloc();
      v0[26] = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_10047D62C;
      uint64_t v8 = v0[14];
      uint64_t v9 = v0[11];
      return sub_10047DCEC(v8, v9, v6);
    }
    if (qword_100969E30 != -1) {
      swift_once();
    }
    unint64_t v29 = v0[12];
    uint64_t v30 = type metadata accessor for Logger();
    sub_10000B47C(v30, (uint64_t)qword_100974DB0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      os_log_t log = (os_log_t)v0[12];
      unint64_t v33 = v0[10];
      uint64_t v41 = v0[11];
      uint64_t v34 = v0[9];
      uint64_t v35 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315394;
      swift_bridgeObjectRetain();
      v0[2] = sub_100254634(v34, v33, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v35 + 12) = 2080;
      if (log) {
        uint64_t v36 = v41;
      }
      else {
        uint64_t v36 = 7104878;
      }
      if (log) {
        unint64_t v37 = v29;
      }
      else {
        unint64_t v37 = 0xE300000000000000;
      }
      swift_bridgeObjectRetain();
      v0[3] = sub_100254634(v36, v37, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Unable to match sender with existing connectable endpoints senderID: %s - contactID: %s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    uint64_t v28 = 1;
  }
  else
  {
    uint64_t v11 = *(void (**)(void, uint64_t, uint64_t))(v2 + 32);
    v11(v0[21], v3, v1);
    if (qword_100969E30 != -1) {
      swift_once();
    }
    uint64_t v12 = v0[20];
    uint64_t v13 = v0[21];
    uint64_t v14 = v0[16];
    uint64_t v15 = v0[17];
    uint64_t v16 = type metadata accessor for Logger();
    sub_10000B47C(v16, (uint64_t)qword_100974DB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v12, v13, v14);
    swift_bridgeObjectRetain_n();
    unint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v20 = v0[20];
    uint64_t v22 = v0[16];
    uint64_t v21 = v0[17];
    unint64_t v23 = v0[10];
    if (v19)
    {
      uint64_t v24 = v0[9];
      uint64_t v39 = v0[20];
      uint64_t v25 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_bridgeObjectRetain();
      v0[6] = sub_100254634(v24, v23, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 12) = 2080;
      sub_10000BAA0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[7] = sub_100254634(v26, v27, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v39, v22);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Matched senderID %s to %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    }

    v11(v0[8], v0[21], v0[16]);
    uint64_t v28 = 0;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[17] + 56))(v0[8], v28, 1, v0[16]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v38 = (uint64_t (*)(void))v0[1];
  return v38();
}

uint64_t sub_10047D62C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  swift_task_dealloc();
  return _swift_task_switch(sub_10047D73C, v1, 0);
}

uint64_t sub_10047D73C()
{
  uint64_t v36 = v0;
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 192))(v2, 1, v1) == 1)
  {
    sub_10000A7E8(v2, &qword_100974EA0);
    if (qword_100969E30 != -1) {
      swift_once();
    }
    unint64_t v3 = *(void *)(v0 + 96);
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_100974DB0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      os_log_t log = *(os_log_t *)(v0 + 96);
      uint64_t v33 = *(void *)(v0 + 88);
      uint64_t v8 = *(void *)(v0 + 72);
      unint64_t v7 = *(void *)(v0 + 80);
      uint64_t v9 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 16) = sub_100254634(v8, v7, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v9 + 12) = 2080;
      if (log) {
        uint64_t v10 = v33;
      }
      else {
        uint64_t v10 = 7104878;
      }
      if (log) {
        unint64_t v11 = v3;
      }
      else {
        unint64_t v11 = 0xE300000000000000;
      }
      swift_bridgeObjectRetain();
      *(void *)(v0 + 24) = sub_100254634(v10, v11, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Unable to match sender with existing connectable endpoints senderID: %s - contactID: %s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    uint64_t v28 = 1;
  }
  else
  {
    uint64_t v34 = *(void (**)(void, uint64_t, uint64_t))(*(void *)(v0 + 136) + 32);
    v34(*(void *)(v0 + 152), v2, v1);
    if (qword_100969E30 != -1) {
      swift_once();
    }
    uint64_t v13 = *(void *)(v0 + 144);
    uint64_t v12 = *(void *)(v0 + 152);
    uint64_t v15 = *(void *)(v0 + 128);
    uint64_t v14 = *(void *)(v0 + 136);
    uint64_t v16 = type metadata accessor for Logger();
    sub_10000B47C(v16, (uint64_t)qword_100974DB0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v13, v12, v15);
    swift_bridgeObjectRetain_n();
    unint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v21 = *(void *)(v0 + 136);
    uint64_t v20 = *(void *)(v0 + 144);
    uint64_t v22 = *(void *)(v0 + 128);
    unint64_t v23 = *(void *)(v0 + 80);
    if (v19)
    {
      uint64_t v31 = *(void *)(v0 + 144);
      uint64_t v24 = *(void *)(v0 + 72);
      uint64_t v25 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 32) = sub_100254634(v24, v23, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 12) = 2080;
      sub_10000BAA0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 40) = sub_100254634(v26, v27, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v31, v22);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Matched contactID %s to %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    }
    v34(*(void *)(v0 + 64), *(void *)(v0 + 152), *(void *)(v0 + 128));
    uint64_t v28 = 0;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 136) + 56))(*(void *)(v0 + 64), v28, 1, *(void *)(v0 + 128));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
  return v29();
}

uint64_t sub_10047DCEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[31] = a3;
  v4[32] = v3;
  v4[29] = a1;
  v4[30] = a2;
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v4[33] = v5;
  v4[34] = *(void *)(v5 - 8);
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  sub_10000A844(&qword_10096D8B8);
  v4[37] = swift_task_alloc();
  v4[38] = swift_task_alloc();
  sub_10000A844(&qword_100974EA0);
  v4[39] = swift_task_alloc();
  v4[40] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v4[41] = v6;
  v4[42] = *(void *)(v6 - 8);
  v4[43] = swift_task_alloc();
  v4[44] = swift_task_alloc();
  v4[45] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  v4[46] = static AirDropActor.shared;
  return _swift_task_switch(sub_10047DEF4, v7, 0);
}

uint64_t sub_10047DEF4()
{
  uint64_t v95 = v0;
  uint64_t v2 = *(void *)(v0 + 328);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v4 = *(void *)(v0 + 320);
  UUID.init(uuidString:)();
  uint64_t v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  *(void *)(v0 + 376) = v5;
  *(void *)(v0 + 384) = (v3 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v5(v4, 1, v2) == 1)
  {
    sub_10000A7E8(*(void *)(v0 + 320), &qword_100974EA0);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 360);
    uint64_t v7 = *(void *)(v0 + 256);
    uint64_t v8 = *(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 336) + 32);
    v8(v6, *(void *)(v0 + 320), *(void *)(v0 + 328));
    uint64_t v9 = (uint64_t *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_displayableIDs);
    swift_beginAccess();
    uint64_t v10 = *v9;
    swift_bridgeObjectRetain();
    LOBYTE(v6) = sub_10057BC0C(v6, v10);
    swift_bridgeObjectRelease();
    if (v6)
    {
      if (qword_100969E30 != -1) {
        swift_once();
      }
      uint64_t v11 = *(void *)(v0 + 352);
      uint64_t v12 = *(void *)(v0 + 360);
      uint64_t v13 = *(void *)(v0 + 328);
      uint64_t v14 = *(void *)(v0 + 336);
      uint64_t v15 = type metadata accessor for Logger();
      sub_10000B47C(v15, (uint64_t)qword_100974DB0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v11, v12, v13);
      uint64_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.default.getter();
      BOOL v18 = os_log_type_enabled(v16, v17);
      uint64_t v19 = *(void *)(v0 + 352);
      uint64_t v20 = *(void *)(v0 + 328);
      uint64_t v21 = *(void *)(v0 + 336);
      if (v18)
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        uint64_t v94 = swift_slowAlloc();
        *(_DWORD *)uint64_t v22 = 136315138;
        sub_10000BAA0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 224) = sub_100254634(v23, v24, &v94);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "Direct match to displayable found %s", v22, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(void, void))(v21 + 8))(*(void *)(v0 + 352), *(void *)(v0 + 328));
      }

      uint64_t v87 = *(void *)(v0 + 328);
      uint64_t v88 = *(void *)(v0 + 336);
      uint64_t v89 = *(void *)(v0 + 232);
      v8(v89, *(void *)(v0 + 360), v87);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v88 + 56))(v89, 0, 1, v87);
      goto LABEL_51;
    }
    (*(void (**)(void, void))(*(void *)(v0 + 336) + 8))(*(void *)(v0 + 360), *(void *)(v0 + 328));
  }
  uint64_t v91 = (long long *)(v0 + 56);
  uint64_t v92 = (void *)(v0 + 16);
  uint64_t v25 = *(void *)(v0 + 256);
  uint64_t v26 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_displayableIDs;
  *(void *)(v0 + 392) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_displayableIDs;
  unint64_t v27 = (uint64_t *)(v25 + v26);
  swift_beginAccess();
  uint64_t v28 = *v27;
  *(void *)(v0 + 400) = *v27;
  char v29 = *(unsigned char *)(v28 + 32);
  *(unsigned char *)(v0 + 488) = v29;
  uint64_t v30 = 1 << v29;
  if (v30 < 64) {
    uint64_t v31 = ~(-1 << v30);
  }
  else {
    uint64_t v31 = -1;
  }
  unint64_t v32 = v31 & *(void *)(v28 + 56);
  *(void *)(v0 + 408) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID;
  *(void *)(v0 + 416) = 0;
  swift_bridgeObjectRetain();
  int64_t v33 = 0;
  while (1)
  {
    if (v32)
    {
      unint64_t v37 = __clz(__rbit64(v32));
      v32 &= v32 - 1;
      unint64_t v38 = v37 | (v33 << 6);
      uint64_t v39 = *(void *)(v0 + 400);
      goto LABEL_30;
    }
    int64_t v40 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    int64_t v41 = (unint64_t)((1 << *(unsigned char *)(v0 + 488)) + 63) >> 6;
    uint64_t v39 = *(void *)(v0 + 400);
    if (v40 >= v41) {
      goto LABEL_37;
    }
    uint64_t v42 = v39 + 56;
    unint64_t v43 = *(void *)(v39 + 56 + 8 * v40);
    ++v33;
    if (!v43)
    {
      int64_t v33 = v40 + 1;
      if (v40 + 1 >= v41) {
        goto LABEL_37;
      }
      unint64_t v43 = *(void *)(v42 + 8 * v33);
      if (!v43)
      {
        int64_t v33 = v40 + 2;
        if (v40 + 2 >= v41) {
          goto LABEL_37;
        }
        unint64_t v43 = *(void *)(v42 + 8 * v33);
        if (!v43) {
          break;
        }
      }
    }
LABEL_29:
    unint64_t v32 = (v43 - 1) & v43;
    unint64_t v38 = __clz(__rbit64(v43)) + (v33 << 6);
LABEL_30:
    *(void *)(v0 + 424) = v33;
    *(void *)(v0 + 432) = v32;
    uint64_t v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 376);
    uint64_t v46 = *(void *)(v0 + 328);
    uint64_t v47 = *(void *)(v0 + 336);
    uint64_t v48 = *(void *)(v0 + 312);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v47 + 16))(v48, *(void *)(v39 + 48) + *(void *)(v47 + 72) * v38, v46);
    uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
    *(void *)(v0 + 440) = v1;
    *(void *)(v0 + 448) = (v47 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v1(v48, 0, 1, v46);
    if (v45(v48, 1, v46) == 1) {
      goto LABEL_38;
    }
    uint64_t v50 = *(void *)(v0 + 336);
    uint64_t v49 = *(void *)(v0 + 344);
    uint64_t v51 = *(void *)(v0 + 328);
    uint64_t v52 = *(void *)(v0 + 312);
    uint64_t v53 = (uint64_t *)(*(void *)(v0 + 256) + *(void *)(v0 + 408));
    uint64_t v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32);
    *(void *)(v0 + 456) = v54;
    *(void *)(v0 + 464) = (v50 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v54(v49, v52, v51);
    swift_beginAccess();
    uint64_t v55 = *v53;
    if (*(void *)(v55 + 16))
    {
      unint64_t v56 = sub_100583A00(*(void *)(v0 + 344));
      if (v57)
      {
        sub_100278C8C(*(void *)(v55 + 56) + 40 * v56, (uint64_t)v91);
        sub_1002AF688(v91, (uint64_t)v92);
        swift_endAccess();
        uint64_t v58 = *(void *)(v0 + 40);
        uint64_t v59 = *(void *)(v0 + 48);
        sub_10026BB6C(v92, v58);
        uint64_t v93 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v59 + 40) + **(int **)(v59 + 40));
        uint64_t v60 = (void *)swift_task_alloc();
        *(void *)(v0 + 472) = v60;
        *uint64_t v60 = v0;
        v60[1] = sub_10047EB48;
        return v93(v58, v59);
      }
    }
    uint64_t v35 = *(void *)(v0 + 336);
    uint64_t v34 = *(void *)(v0 + 344);
    uint64_t v36 = *(void *)(v0 + 328);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
  }
  int64_t v44 = v40 + 3;
  if (v44 < v41)
  {
    unint64_t v43 = *(void *)(v42 + 8 * v44);
    if (!v43)
    {
      while (1)
      {
        int64_t v33 = v44 + 1;
        if (__OFADD__(v44, 1)) {
          goto LABEL_55;
        }
        if (v33 >= v41) {
          goto LABEL_37;
        }
        unint64_t v43 = *(void *)(v42 + 8 * v33);
        ++v44;
        if (v43) {
          goto LABEL_29;
        }
      }
    }
    int64_t v33 = v44;
    goto LABEL_29;
  }
LABEL_37:
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 336) + 56);
  v1(*(void *)(v0 + 312), 1, 1, *(void *)(v0 + 328));
LABEL_38:
  swift_release();
  if (qword_100969E30 == -1) {
    goto LABEL_39;
  }
LABEL_56:
  swift_once();
LABEL_39:
  uint64_t v62 = type metadata accessor for Logger();
  sub_10000B47C(v62, (uint64_t)qword_100974DB0);
  swift_bridgeObjectRetain_n();
  uint64_t v63 = Logger.logObject.getter();
  os_log_type_t v64 = static os_log_type_t.error.getter();
  BOOL v65 = os_log_type_enabled(v63, v64);
  unint64_t v66 = *(void *)(v0 + 248);
  if (v65)
  {
    uint64_t v67 = *(void *)(v0 + 240);
    uint64_t v68 = (uint8_t *)swift_slowAlloc();
    uint64_t v94 = swift_slowAlloc();
    *(_DWORD *)uint64_t v68 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 216) = sub_100254634(v67, v66, &v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v63, v64, "No matching connectables for %s", v68, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  id v69 = *(id *)(v0 + 256);
  BOOL v70 = Logger.logObject.getter();
  os_log_type_t v71 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v70, v71))
  {
    uint64_t v72 = *(void **)(v0 + 256);
    uint64_t v73 = (uint8_t *)swift_slowAlloc();
    uint64_t v94 = swift_slowAlloc();
    *(_DWORD *)uint64_t v73 = 136315138;
    sub_10000BAA0(&qword_10096C4C8, (void (*)(uint64_t))&type metadata accessor for UUID);
    swift_bridgeObjectRetain();
    uint64_t v74 = Set.description.getter();
    unint64_t v76 = v75;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 200) = sub_100254634(v74, v76, &v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v70, v71, "Current displayableIDs %s", v73, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v77 = *(void **)(v0 + 256);
  }
  id v78 = *(id *)(v0 + 256);
  uint64_t v79 = Logger.logObject.getter();
  os_log_type_t v80 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v79, v80))
  {
    uint64_t v81 = *(void **)(v0 + 256);
    uint64_t v82 = (uint8_t *)swift_slowAlloc();
    uint64_t v94 = swift_slowAlloc();
    *(_DWORD *)uint64_t v82 = 136315138;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_10000A844((uint64_t *)&unk_100974ED0);
    sub_10000BAA0(&qword_10096C4C8, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v83 = Dictionary.Keys.description.getter();
    unint64_t v85 = v84;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 192) = sub_100254634(v83, v85, &v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v79, v80, "Current connectable mapping %s", v82, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v86 = *(void **)(v0 + 256);
  }
  v1(*(void *)(v0 + 232), 1, 1, *(void *)(v0 + 328));
LABEL_51:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v90 = *(uint64_t (**)(void))(v0 + 8);
  return v90();
}

uint64_t sub_10047EB48(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 368);
  *(void *)(*(void *)v1 + 480) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10047EC60, v2, 0);
}

uint64_t sub_10047EC60()
{
  uint64_t v89 = v0;
  uint64_t v1 = *(void *)(v0 + 480);
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v4 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 264);
  uint64_t v6 = *(void *)(v0 + 272);
  uint64_t v8 = *(void *)(v0 + 240);
  uint64_t v7 = *(void *)(v0 + 248);
  swift_bridgeObjectRetain();
  sub_100468078(v1, v8, v7, v3);
  swift_bridgeObjectRelease();
  sub_10024A330(v3, v4, &qword_10096D8B8);
  unint64_t v85 = (void *)(v0 + 16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    unint64_t v84 = (long long *)(v0 + 56);
    uint64_t v9 = *(void *)(v0 + 336);
    uint64_t v10 = *(void *)(v0 + 344);
    uint64_t v11 = *(void *)(v0 + 328);
    uint64_t v12 = *(void *)(v0 + 296);
    sub_10000A7E8(*(void *)(v0 + 304), &qword_10096D8B8);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v11);
    sub_10000A7E8(v12, &qword_10096D8B8);
    sub_10024D338(v0 + 16);
    int64_t v13 = *(void *)(v0 + 424);
    unint64_t v14 = *(void *)(v0 + 432);
    *(void *)(v0 + 416) = v2;
    while (1)
    {
      if (v14)
      {
        unint64_t v18 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v19 = v18 | (v13 << 6);
        uint64_t v20 = *(void *)(v0 + 400);
      }
      else
      {
        int64_t v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        int64_t v22 = (unint64_t)((1 << *(unsigned char *)(v0 + 488)) + 63) >> 6;
        uint64_t v20 = *(void *)(v0 + 400);
        if (v21 >= v22) {
          goto LABEL_32;
        }
        uint64_t v23 = v20 + 56;
        unint64_t v24 = *(void *)(v20 + 56 + 8 * v21);
        ++v13;
        if (!v24)
        {
          int64_t v13 = v21 + 1;
          if (v21 + 1 >= v22) {
            goto LABEL_32;
          }
          unint64_t v24 = *(void *)(v23 + 8 * v13);
          if (!v24)
          {
            int64_t v13 = v21 + 2;
            if (v21 + 2 >= v22) {
              goto LABEL_32;
            }
            unint64_t v24 = *(void *)(v23 + 8 * v13);
            if (!v24)
            {
              int64_t v25 = v21 + 3;
              if (v25 >= v22)
              {
LABEL_32:
                uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 336) + 56);
                v30(*(void *)(v0 + 312), 1, 1, *(void *)(v0 + 328));
LABEL_33:
                swift_release();
                if (qword_100969E30 != -1) {
                  swift_once();
                }
                uint64_t v59 = type metadata accessor for Logger();
                sub_10000B47C(v59, (uint64_t)qword_100974DB0);
                swift_bridgeObjectRetain_n();
                uint64_t v60 = Logger.logObject.getter();
                os_log_type_t v61 = static os_log_type_t.error.getter();
                BOOL v62 = os_log_type_enabled(v60, v61);
                unint64_t v63 = *(void *)(v0 + 248);
                if (v62)
                {
                  uint64_t v87 = *(void *)(v0 + 240);
                  os_log_type_t v64 = (uint8_t *)swift_slowAlloc();
                  v88[0] = swift_slowAlloc();
                  *(_DWORD *)os_log_type_t v64 = 136315138;
                  swift_bridgeObjectRetain();
                  *(void *)(v0 + 216) = sub_100254634(v87, v63, v88);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease_n();
                  _os_log_impl((void *)&_mh_execute_header, v60, v61, "No matching connectables for %s", v64, 0xCu);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }
                else
                {
                  swift_bridgeObjectRelease_n();
                }

                id v65 = *(id *)(v0 + 256);
                unint64_t v66 = Logger.logObject.getter();
                os_log_type_t v67 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v66, v67))
                {
                  uint64_t v68 = *(void **)(v0 + 256);
                  id v69 = (uint8_t *)swift_slowAlloc();
                  v88[0] = swift_slowAlloc();
                  *(_DWORD *)id v69 = 136315138;
                  sub_10000BAA0(&qword_10096C4C8, (void (*)(uint64_t))&type metadata accessor for UUID);
                  swift_bridgeObjectRetain();
                  uint64_t v70 = Set.description.getter();
                  unint64_t v72 = v71;
                  swift_bridgeObjectRelease();
                  *(void *)(v0 + 200) = sub_100254634(v70, v72, v88);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease();

                  _os_log_impl((void *)&_mh_execute_header, v66, v67, "Current displayableIDs %s", v69, 0xCu);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }
                else
                {
                  uint64_t v73 = *(void **)(v0 + 256);
                }
                id v74 = *(id *)(v0 + 256);
                unint64_t v75 = Logger.logObject.getter();
                os_log_type_t v76 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v75, v76))
                {
                  uint64_t v77 = *(void **)(v0 + 256);
                  id v78 = (uint8_t *)swift_slowAlloc();
                  v88[0] = swift_slowAlloc();
                  *(_DWORD *)id v78 = 136315138;
                  swift_beginAccess();
                  swift_bridgeObjectRetain();
                  sub_10000A844((uint64_t *)&unk_100974ED0);
                  sub_10000BAA0(&qword_10096C4C8, (void (*)(uint64_t))&type metadata accessor for UUID);
                  uint64_t v79 = Dictionary.Keys.description.getter();
                  unint64_t v81 = v80;
                  swift_bridgeObjectRelease();
                  *(void *)(v0 + 192) = sub_100254634(v79, v81, v88);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease();

                  _os_log_impl((void *)&_mh_execute_header, v75, v76, "Current connectable mapping %s", v78, 0xCu);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }
                else
                {
                  uint64_t v82 = *(void **)(v0 + 256);
                }
                v30(*(void *)(v0 + 232), 1, 1, *(void *)(v0 + 328));
                goto LABEL_45;
              }
              unint64_t v24 = *(void *)(v23 + 8 * v25);
              if (!v24)
              {
                while (1)
                {
                  int64_t v13 = v25 + 1;
                  if (__OFADD__(v25, 1)) {
                    goto LABEL_49;
                  }
                  if (v13 >= v22) {
                    goto LABEL_32;
                  }
                  unint64_t v24 = *(void *)(v23 + 8 * v13);
                  ++v25;
                  if (v24) {
                    goto LABEL_19;
                  }
                }
              }
              int64_t v13 = v25;
            }
          }
        }
LABEL_19:
        unint64_t v14 = (v24 - 1) & v24;
        unint64_t v19 = __clz(__rbit64(v24)) + (v13 << 6);
      }
      *(void *)(v0 + 424) = v13;
      *(void *)(v0 + 432) = v14;
      uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 376);
      uint64_t v27 = *(void *)(v0 + 328);
      uint64_t v28 = *(void *)(v0 + 336);
      uint64_t v29 = *(void *)(v0 + 312);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v28 + 16))(v29, *(void *)(v20 + 48) + *(void *)(v28 + 72) * v19, v27);
      uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
      *(void *)(v0 + 440) = v30;
      *(void *)(v0 + 448) = (v28 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      v30(v29, 0, 1, v27);
      if (v26(v29, 1, v27) == 1) {
        goto LABEL_33;
      }
      uint64_t v32 = *(void *)(v0 + 336);
      uint64_t v31 = *(void *)(v0 + 344);
      uint64_t v33 = *(void *)(v0 + 328);
      uint64_t v34 = *(void *)(v0 + 312);
      uint64_t v35 = (uint64_t *)(*(void *)(v0 + 256) + *(void *)(v0 + 408));
      uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32);
      *(void *)(v0 + 456) = v36;
      *(void *)(v0 + 464) = (v32 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      v36(v31, v34, v33);
      swift_beginAccess();
      uint64_t v37 = *v35;
      if (*(void *)(v37 + 16))
      {
        unint64_t v38 = sub_100583A00(*(void *)(v0 + 344));
        if (v39)
        {
          sub_100278C8C(*(void *)(v37 + 56) + 40 * v38, (uint64_t)v84);
          sub_1002AF688(v84, (uint64_t)v85);
          swift_endAccess();
          uint64_t v40 = *(void *)(v0 + 40);
          uint64_t v41 = *(void *)(v0 + 48);
          sub_10026BB6C(v85, v40);
          uint64_t v86 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v41 + 40) + **(int **)(v41 + 40));
          uint64_t v42 = (void *)swift_task_alloc();
          *(void *)(v0 + 472) = v42;
          *uint64_t v42 = v0;
          v42[1] = sub_10047EB48;
          return v86(v40, v41);
        }
      }
      uint64_t v15 = *(void *)(v0 + 336);
      uint64_t v16 = *(void *)(v0 + 344);
      uint64_t v17 = *(void *)(v0 + 328);
      swift_endAccess();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v17);
    }
  }
  sub_100484D20(*(void *)(v0 + 296), *(void *)(v0 + 288), type metadata accessor for SDAirDropDiscoveredEndpoint);
  if (qword_100969E30 != -1) {
LABEL_50:
  }
    swift_once();
  uint64_t v44 = *(void *)(v0 + 280);
  uint64_t v45 = *(void *)(v0 + 288);
  uint64_t v46 = type metadata accessor for Logger();
  sub_10000B47C(v46, (uint64_t)qword_100974DB0);
  sub_1004849EC(v45, v44, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v47 = Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.default.getter();
  BOOL v49 = os_log_type_enabled(v47, v48);
  uint64_t v50 = *(void *)(v0 + 304);
  uint64_t v51 = *(void *)(v0 + 280);
  uint64_t v52 = *(void *)(v0 + 288);
  if (v49)
  {
    uint64_t v53 = (uint8_t *)swift_slowAlloc();
    v88[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v53 = 136315138;
    uint64_t v54 = sub_100313BE0();
    *(void *)(v0 + 208) = sub_100254634(v54, v55, v88);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1004838E8(v51, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "Matching endpoint found %s", v53, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_1004838E8(v52, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_10000A7E8(v50, &qword_10096D8B8);
  }
  else
  {

    sub_1004838E8(v51, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1004838E8(v52, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_10000A7E8(v50, &qword_10096D8B8);
  }
  swift_release();
  unint64_t v56 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 440);
  uint64_t v57 = *(void *)(v0 + 328);
  uint64_t v58 = *(void *)(v0 + 232);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 456))(v58, *(void *)(v0 + 344), v57);
  v56(v58, 0, 1, v57);
  sub_10024D338((uint64_t)v85);
LABEL_45:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v83 = *(uint64_t (**)(void))(v0 + 8);
  return v83();
}

uint64_t sub_10047F858(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v24 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v24 - 8);
  uint64_t v7 = __chkstk_darwin(v24);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v23 - v10;
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  v25[0] = v12;
  v25[1] = v13;
  sub_1003CF0DC(a2, (uint64_t)v26);
  uint64_t v15 = v27;
  uint64_t v14 = v28;
  sub_10026BB6C(v26, v27);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v14 + 32);
  swift_bridgeObjectRetain();
  v16(v15, v14);
  uint64_t v17 = a3[3];
  uint64_t v18 = a3[4];
  sub_10026BB6C(a3, v17);
  (*(void (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18);
  LOBYTE(v17) = static UUID.== infix(_:_:)();
  unint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v20 = v9;
  uint64_t v21 = v24;
  v19(v20, v24);
  v19(v11, v21);
  sub_10000A7E8((uint64_t)v25, &qword_100975068);
  return v17 & 1;
}

uint64_t sub_10047FA28()
{
  unint64_t v1 = sub_1004734E0();
  if (v1 >> 62) {
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t result = sub_10056D604(v2);
  uint64_t v4 = *(void (**)(void))(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler);
  if (v4)
  {
    swift_retain();
    sub_1004734E0();
    v4();
    sub_1002CA430((uint64_t)v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10047FB50()
{
  uint64_t v1 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TaskPriority();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  id v8 = v0;
  if (v7 == 1)
  {
    sub_10000A7E8((uint64_t)v3, &qword_10096C920);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_100974F38;
  *(void *)(v12 + 24) = v6;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_10047FD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_10047FDB0, 0, 0);
}

uint64_t sub_10047FDB0()
{
  if (qword_100969E30 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_100974DB0);
  id v3 = v1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  int v7 = *(char **)(v0 + 16);
  if (v6)
  {
    id v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v8 = 67109120;
    *(_DWORD *)(v0 + 24) = [*(id *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus] screenOn];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Screen state changed %{BOOL}d", v8, 8u);
    swift_slowDealloc();
  }
  else
  {
  }
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v9 = static AirDropActor.shared;
  return _swift_task_switch(sub_10047FF70, v9, 0);
}

uint64_t sub_10047FF70()
{
  sub_100472E30();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100480278()
{
  return type metadata accessor for SDAirDropEndpointService();
}

uint64_t type metadata accessor for SDAirDropEndpointService()
{
  uint64_t result = qword_100974E78;
  if (!qword_100974E78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1004802CC()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_1004803B8(uint64_t a1, uint64_t a2)
{
  uint64_t v73 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v73);
  os_log_type_t v5 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v70 = (uint64_t)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v67 - v9;
  uint64_t v11 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v78 = *(void *)(v11 - 8);
  uint64_t v79 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v68 = (uint64_t)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v72 = (void **)((char *)&v67 - v15);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (id *)((char *)&v67 - v17);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v67 - v20;
  __chkstk_darwin(v19);
  uint64_t v77 = (uint64_t)&v67 - v22;
  uint64_t v23 = *(void *)(a1 + 56);
  uint64_t v74 = a1 + 56;
  uint64_t v24 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v25 = -1;
  if (v24 < 64) {
    uint64_t v25 = ~(-1 << v24);
  }
  unint64_t v26 = v25 & v23;
  uint64_t v76 = a2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegate;
  int64_t v75 = (unint64_t)(v24 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v27 = 0;
  uint64_t v71 = a1;
  id v69 = v10;
  while (v26)
  {
    unint64_t v29 = __clz(__rbit64(v26));
    v26 &= v26 - 1;
    unint64_t v30 = v29 | (v27 << 6);
LABEL_22:
    uint64_t v34 = v77;
    sub_1004849EC(*(void *)(a1 + 48) + *(void *)(v78 + 72) * v30, v77, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100484D20(v34, (uint64_t)v21, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1004849EC((uint64_t)v21, (uint64_t)v18, type metadata accessor for SDAirDropDiscoveredEndpoint);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_100484D20((uint64_t)v18, (uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
        char v36 = v5[*(int *)(v73 + 60)];
        sub_1004838E8((uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
        if (v36) {
          goto LABEL_38;
        }
        goto LABEL_27;
      case 2u:
        unint64_t v56 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint;
        uint64_t v57 = (uint64_t)v18;
        goto LABEL_37;
      case 3u:

        goto LABEL_38;
      default:
        sub_100484D20((uint64_t)v18, (uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        if ((sub_100314A58() & 0x4000000000) != 0)
        {
          unint64_t v56 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
          uint64_t v57 = (uint64_t)v10;
LABEL_37:
          sub_1004838E8(v57, v56);
LABEL_38:
          uint64_t v58 = (uint64_t)v21;
LABEL_39:
          sub_1004838E8(v58, type metadata accessor for SDAirDropDiscoveredEndpoint);
          swift_release();
          return 1;
        }
        uint64_t v35 = sub_100314A58();
        sub_1004838E8((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        if ((v35 & 0x8000000000) != 0) {
          goto LABEL_38;
        }
LABEL_27:
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v38 = Strong;
          char v39 = v72;
          sub_1004849EC((uint64_t)v21, (uint64_t)v72, type metadata accessor for SDAirDropDiscoveredEndpoint);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              sub_100484D20((uint64_t)v39, (uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
              uint64_t v50 = v38 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
              swift_beginAccess();
              sub_100278C8C(v50, (uint64_t)v80);
              uint64_t v51 = v81;
              uint64_t v52 = v82;
              sub_10026BB6C(v80, v81);
              uint64_t v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 112);
              uint64_t v54 = v52;
              a1 = v71;
              char v47 = v53(&v5[*(int *)(v73 + 20)], v51, v54);
              os_log_type_t v48 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
              uint64_t v49 = (uint64_t)v5;
              goto LABEL_31;
            case 2u:
              sub_1004838E8((uint64_t)v39, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
              swift_unknownObjectRelease();
              goto LABEL_42;
            case 3u:
              uint64_t v28 = *v39;
              swift_unknownObjectRelease();

              break;
            default:
              uint64_t v40 = v5;
              uint64_t v41 = v70;
              sub_100484D20((uint64_t)v39, v70, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
              uint64_t v42 = v38 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
              swift_beginAccess();
              sub_100278C8C(v42, (uint64_t)v80);
              uint64_t v43 = v81;
              uint64_t v44 = v82;
              sub_10026BB6C(v80, v81);
              uint64_t v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 112);
              uint64_t v46 = v44;
              a1 = v71;
              char v47 = v45(v41, v43, v46);
              os_log_type_t v48 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
              uint64_t v49 = v41;
              os_log_type_t v5 = v40;
              uint64_t v10 = v69;
LABEL_31:
              sub_1004838E8(v49, v48);
              sub_10024D338((uint64_t)v80);
              swift_unknownObjectRelease();
              if ((v47 & 1) == 0) {
                break;
              }
LABEL_42:
              if (qword_100969E30 == -1) {
                goto LABEL_43;
              }
              goto LABEL_48;
          }
        }
        sub_1004838E8((uint64_t)v21, type metadata accessor for SDAirDropDiscoveredEndpoint);
        break;
    }
  }
  int64_t v31 = v27 + 1;
  if (__OFADD__(v27, 1))
  {
    __break(1u);
    goto LABEL_47;
  }
  if (v31 >= v75) {
    goto LABEL_33;
  }
  unint64_t v32 = *(void *)(v74 + 8 * v31);
  ++v27;
  if (v32) {
    goto LABEL_21;
  }
  int64_t v27 = v31 + 1;
  if (v31 + 1 >= v75) {
    goto LABEL_33;
  }
  unint64_t v32 = *(void *)(v74 + 8 * v27);
  if (v32) {
    goto LABEL_21;
  }
  int64_t v27 = v31 + 2;
  if (v31 + 2 >= v75) {
    goto LABEL_33;
  }
  unint64_t v32 = *(void *)(v74 + 8 * v27);
  if (v32)
  {
LABEL_21:
    unint64_t v26 = (v32 - 1) & v32;
    unint64_t v30 = __clz(__rbit64(v32)) + (v27 << 6);
    goto LABEL_22;
  }
  int64_t v33 = v31 + 3;
  if (v33 >= v75)
  {
LABEL_33:
    swift_release();
    return 0;
  }
  unint64_t v32 = *(void *)(v74 + 8 * v33);
  if (v32)
  {
    int64_t v27 = v33;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v27 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v27 >= v75) {
      goto LABEL_33;
    }
    unint64_t v32 = *(void *)(v74 + 8 * v27);
    ++v33;
    if (v32) {
      goto LABEL_21;
    }
  }
LABEL_47:
  __break(1u);
LABEL_48:
  swift_once();
LABEL_43:
  uint64_t v60 = type metadata accessor for Logger();
  sub_10000B47C(v60, (uint64_t)qword_100974DB0);
  uint64_t v61 = v68;
  sub_1004849EC((uint64_t)v21, v68, type metadata accessor for SDAirDropDiscoveredEndpoint);
  BOOL v62 = Logger.logObject.getter();
  os_log_type_t v63 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v62, v63))
  {

    sub_1004838E8(v61, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v58 = (uint64_t)v21;
    goto LABEL_39;
  }
  os_log_type_t v64 = (uint8_t *)swift_slowAlloc();
  v80[0] = swift_slowAlloc();
  *(_DWORD *)os_log_type_t v64 = 136315138;
  uint64_t v65 = sub_100315DA0();
  uint64_t v83 = sub_100254634(v65, v66, v80);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  sub_1004838E8(v61, type metadata accessor for SDAirDropDiscoveredEndpoint);
  _os_log_impl((void *)&_mh_execute_header, v62, v63, "endpoint.isAirDropable is false. Treating endpoint as AirDropUsable due to delegate: %s", v64, 0xCu);
  uint64_t v55 = 1;
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  sub_1004838E8((uint64_t)v21, type metadata accessor for SDAirDropDiscoveredEndpoint);
  swift_release();
  return v55;
}

Swift::Int sub_100480CDC(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_100482D50(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  Swift::Int result = sub_100480D48(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_100480D48(uint64_t *a1)
{
  uint64_t v146 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v146 - 8);
  uint64_t v3 = __chkstk_darwin(v146);
  v139 = (char *)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  unint64_t v138 = (char *)&v127 - v5;
  Swift::Int v6 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v6);
  if (result >= v6)
  {
    if (v6 < 0) {
      goto LABEL_138;
    }
    if (v6) {
      return sub_100481808(0, v6, 1, a1);
    }
    return result;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_146;
  }
  Swift::Int v129 = result;
  if (v6 < 2)
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
    uint64_t v135 = (char *)&_swiftEmptyArrayStorage[4];
    if (v6 != 1)
    {
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      uint64_t v13 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      uint64_t v128 = v11;
      uint64_t v118 = v136;
      if (v14 >= 2)
      {
        uint64_t v119 = *a1;
        do
        {
          unint64_t v120 = v14 - 2;
          if (v14 < 2) {
            goto LABEL_133;
          }
          if (!v119) {
            goto LABEL_145;
          }
          uint64_t v121 = v13;
          v122 = v13 + 32;
          uint64_t v123 = *(void *)&v13[16 * v120 + 32];
          uint64_t v124 = *(void *)&v13[16 * v14 + 24];
          sub_100481A78((char *)(v119 + 48 * v123), (char *)(v119 + 48 * *(void *)&v122[16 * v14 - 16]), (char *)(v119 + 48 * v124), v135);
          if (v118) {
            goto LABEL_100;
          }
          if (v124 < v123) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v121 = sub_100482474((uint64_t)v121);
          }
          if (v120 >= *((void *)v121 + 2)) {
            goto LABEL_135;
          }
          uint64_t v125 = &v121[16 * v120 + 32];
          *(void *)uint64_t v125 = v123;
          *((void *)v125 + 1) = v124;
          unint64_t v126 = *((void *)v121 + 2);
          if (v14 > v126) {
            goto LABEL_136;
          }
          uint64_t v13 = v121;
          memmove(&v121[16 * v14 + 16], &v121[16 * v14 + 32], 16 * (v126 - v14));
          *((void *)v121 + 2) = v126 - 1;
          unint64_t v14 = v126 - 1;
        }
        while (v126 > 2);
      }
      swift_bridgeObjectRelease();
      v128[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v128 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    sub_10000A844(&qword_10096B310);
    uint64_t v10 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v10 + 16) = v9;
    uint64_t v128 = (void *)v10;
    uint64_t v135 = (char *)(v10 + 32);
  }
  Swift::Int v12 = 0;
  unint64_t v137 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v13 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    Swift::Int v15 = v12++;
    Swift::Int v133 = v15;
    if (v12 < v6)
    {
      os_log_type_t v130 = v13;
      uint64_t v16 = *a1;
      sub_1003CF0DC(*a1 + 48 * v12, (uint64_t)&v143);
      sub_1003CF0DC(v16 + 48 * v15, (uint64_t)v140);
      Swift::Int v134 = v6;
      uint64_t v18 = v144;
      uint64_t v17 = v145;
      sub_10026BB6C(&v143, v144);
      uint64_t v19 = v138;
      (*(void (**)(uint64_t, uint64_t))(v17 + 32))(v18, v17);
      uint64_t v20 = v141;
      uint64_t v21 = v142;
      sub_10026BB6C(v140, v141);
      uint64_t v22 = v139;
      uint64_t v23 = v20;
      Swift::Int v6 = v134;
      (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v23, v21);
      LODWORD(v132) = static UUID.< infix(_:_:)();
      uint64_t v24 = *v137;
      uint64_t v25 = v22;
      uint64_t v26 = v146;
      (*v137)(v25, v146);
      int64_t v27 = v19;
      Swift::Int v15 = v133;
      v24(v27, v26);
      sub_10024D338((uint64_t)v140);
      sub_10024D338((uint64_t)&v143);
      Swift::Int v12 = v15 + 2;
      uint64_t v131 = v16;
      if (v15 + 2 < v6)
      {
        uint64_t v28 = v16 + 48 * v15 + 48;
        while (1)
        {
          sub_1003CF0DC(v28 + 48, (uint64_t)&v143);
          sub_1003CF0DC(v28, (uint64_t)v140);
          uint64_t v30 = v144;
          uint64_t v29 = v145;
          sub_10026BB6C(&v143, v144);
          int64_t v31 = v138;
          (*(void (**)(uint64_t, uint64_t))(v29 + 32))(v30, v29);
          uint64_t v32 = v141;
          uint64_t v33 = v142;
          sub_10026BB6C(v140, v141);
          uint64_t v34 = v139;
          (*(void (**)(uint64_t, uint64_t))(v33 + 32))(v32, v33);
          LODWORD(v32) = static UUID.< infix(_:_:)();
          uint64_t v35 = v146;
          v24(v34, v146);
          v24(v31, v35);
          sub_10024D338((uint64_t)v140);
          sub_10024D338((uint64_t)&v143);
          if ((v132 ^ v32)) {
            break;
          }
          ++v12;
          v28 += 48;
          Swift::Int v6 = v134;
          if (v134 == v12)
          {
            Swift::Int v12 = v134;
            Swift::Int v15 = v133;
            goto LABEL_23;
          }
        }
        Swift::Int v15 = v133;
        Swift::Int v6 = v134;
      }
LABEL_23:
      uint64_t v13 = v130;
      if (v132)
      {
        if (v12 < v15) {
          goto LABEL_139;
        }
        if (v15 < v12) {
          break;
        }
      }
    }
    if (v12 < v6) {
      goto LABEL_33;
    }
LABEL_52:
    if (v12 < v15) {
      goto LABEL_132;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_100481FEC(0, *((void *)v13 + 2) + 1, 1, v13);
    }
    unint64_t v63 = *((void *)v13 + 2);
    unint64_t v62 = *((void *)v13 + 3);
    unint64_t v14 = v63 + 1;
    if (v63 >= v62 >> 1) {
      uint64_t v13 = sub_100481FEC((char *)(v62 > 1), v63 + 1, 1, v13);
    }
    *((void *)v13 + 2) = v14;
    os_log_type_t v64 = v13 + 32;
    uint64_t v65 = &v13[16 * v63 + 32];
    *(void *)uint64_t v65 = v15;
    *((void *)v65 + 1) = v12;
    if (v63)
    {
      Swift::Int v134 = v12;
      while (1)
      {
        unint64_t v66 = v14 - 1;
        if (v14 >= 4)
        {
          uint64_t v71 = &v64[16 * v14];
          uint64_t v72 = *((void *)v71 - 8);
          uint64_t v73 = *((void *)v71 - 7);
          BOOL v77 = __OFSUB__(v73, v72);
          uint64_t v74 = v73 - v72;
          if (v77) {
            goto LABEL_121;
          }
          uint64_t v76 = *((void *)v71 - 6);
          uint64_t v75 = *((void *)v71 - 5);
          BOOL v77 = __OFSUB__(v75, v76);
          uint64_t v69 = v75 - v76;
          char v70 = v77;
          if (v77) {
            goto LABEL_122;
          }
          unint64_t v78 = v14 - 2;
          uint64_t v79 = &v64[16 * v14 - 32];
          uint64_t v81 = *(void *)v79;
          uint64_t v80 = *((void *)v79 + 1);
          BOOL v77 = __OFSUB__(v80, v81);
          uint64_t v82 = v80 - v81;
          if (v77) {
            goto LABEL_124;
          }
          BOOL v77 = __OFADD__(v69, v82);
          uint64_t v83 = v69 + v82;
          if (v77) {
            goto LABEL_127;
          }
          if (v83 >= v74)
          {
            uint64_t v101 = &v64[16 * v66];
            uint64_t v103 = *(void *)v101;
            uint64_t v102 = *((void *)v101 + 1);
            BOOL v77 = __OFSUB__(v102, v103);
            uint64_t v104 = v102 - v103;
            if (v77) {
              goto LABEL_131;
            }
            BOOL v94 = v69 < v104;
            goto LABEL_90;
          }
        }
        else
        {
          if (v14 != 3)
          {
            uint64_t v95 = *((void *)v13 + 4);
            uint64_t v96 = *((void *)v13 + 5);
            BOOL v77 = __OFSUB__(v96, v95);
            uint64_t v88 = v96 - v95;
            char v89 = v77;
            goto LABEL_84;
          }
          uint64_t v68 = *((void *)v13 + 4);
          uint64_t v67 = *((void *)v13 + 5);
          BOOL v77 = __OFSUB__(v67, v68);
          uint64_t v69 = v67 - v68;
          char v70 = v77;
        }
        if (v70) {
          goto LABEL_123;
        }
        unint64_t v78 = v14 - 2;
        unint64_t v84 = &v64[16 * v14 - 32];
        uint64_t v86 = *(void *)v84;
        uint64_t v85 = *((void *)v84 + 1);
        BOOL v87 = __OFSUB__(v85, v86);
        uint64_t v88 = v85 - v86;
        char v89 = v87;
        if (v87) {
          goto LABEL_126;
        }
        uint64_t v90 = &v64[16 * v66];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v77 = __OFSUB__(v91, v92);
        uint64_t v93 = v91 - v92;
        if (v77) {
          goto LABEL_129;
        }
        if (__OFADD__(v88, v93)) {
          goto LABEL_130;
        }
        if (v88 + v93 >= v69)
        {
          BOOL v94 = v69 < v93;
LABEL_90:
          if (v94) {
            unint64_t v66 = v78;
          }
          goto LABEL_92;
        }
LABEL_84:
        if (v89) {
          goto LABEL_125;
        }
        uint64_t v97 = &v64[16 * v66];
        uint64_t v99 = *(void *)v97;
        uint64_t v98 = *((void *)v97 + 1);
        BOOL v77 = __OFSUB__(v98, v99);
        uint64_t v100 = v98 - v99;
        if (v77) {
          goto LABEL_128;
        }
        if (v100 < v88) {
          goto LABEL_15;
        }
LABEL_92:
        unint64_t v105 = v66 - 1;
        if (v66 - 1 >= v14)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        uint64_t v106 = a1;
        uint64_t v107 = *a1;
        if (!*a1) {
          goto LABEL_143;
        }
        v108 = v13;
        os_log_type_t v109 = &v64[16 * v105];
        uint64_t v110 = *(void *)v109;
        v111 = v64;
        unint64_t v112 = v66;
        uint64_t v113 = &v64[16 * v66];
        uint64_t v114 = *((void *)v113 + 1);
        uint64_t v115 = v136;
        sub_100481A78((char *)(v107 + 48 * *(void *)v109), (char *)(v107 + 48 * *(void *)v113), (char *)(v107 + 48 * v114), v135);
        uint64_t v136 = v115;
        if (v115)
        {
LABEL_100:
          v117 = v128;
          swift_bridgeObjectRelease();
          v117[2] = 0;
          return swift_bridgeObjectRelease();
        }
        if (v114 < v110) {
          goto LABEL_118;
        }
        if (v112 > *((void *)v108 + 2)) {
          goto LABEL_119;
        }
        *(void *)os_log_type_t v109 = v110;
        *(void *)&v111[16 * v105 + 8] = v114;
        unint64_t v116 = *((void *)v108 + 2);
        if (v112 >= v116) {
          goto LABEL_120;
        }
        uint64_t v13 = v108;
        unint64_t v14 = v116 - 1;
        memmove(v113, v113 + 16, 16 * (v116 - 1 - v112));
        os_log_type_t v64 = v111;
        *((void *)v108 + 2) = v116 - 1;
        a1 = v106;
        Swift::Int v12 = v134;
        if (v116 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v14 = 1;
LABEL_15:
    Swift::Int v6 = a1[1];
    if (v12 >= v6)
    {
      uint64_t v11 = v128;
      goto LABEL_103;
    }
  }
  Swift::Int v36 = v12;
  uint64_t v132 = a1;
  uint64_t v37 = v130;
  uint64_t v38 = 48 * v12 - 48;
  uint64_t v39 = 48 * v15;
  do
  {
    if (v15 != --v36)
    {
      if (!v131) {
        goto LABEL_144;
      }
      uint64_t v40 = (_OWORD *)(v131 + v39);
      uint64_t v41 = (_OWORD *)(v131 + v38);
      sub_1002AD354((long long *)(v131 + v39), &v143);
      long long v43 = v41[1];
      long long v42 = v41[2];
      *uint64_t v40 = *v41;
      v40[1] = v43;
      v40[2] = v42;
      sub_1002AD354(&v143, v41);
    }
    ++v15;
    v38 -= 48;
    v39 += 48;
  }
  while (v15 < v36);
  uint64_t v13 = v37;
  a1 = v132;
  Swift::Int v15 = v133;
  Swift::Int v6 = v134;
  if (v12 >= v134) {
    goto LABEL_52;
  }
LABEL_33:
  if (__OFSUB__(v12, v15)) {
    goto LABEL_137;
  }
  if (v12 - v15 >= v129) {
    goto LABEL_52;
  }
  if (__OFADD__(v15, v129)) {
    goto LABEL_140;
  }
  if (v15 + v129 >= v6) {
    Swift::Int v44 = v6;
  }
  else {
    Swift::Int v44 = v15 + v129;
  }
  if (v44 >= v15)
  {
    if (v12 != v44)
    {
      os_log_type_t v130 = v13;
      uint64_t v45 = 48 * v12 - 48;
      uint64_t v132 = (uint64_t *)v44;
      do
      {
        Swift::Int v46 = v15;
        Swift::Int v134 = v45;
        while (1)
        {
          Swift::Int v47 = v12;
          uint64_t v48 = *a1 + v45;
          sub_1003CF0DC(v48 + 48, (uint64_t)&v143);
          sub_1003CF0DC(v48, (uint64_t)v140);
          uint64_t v49 = v144;
          uint64_t v50 = v145;
          sub_10026BB6C(&v143, v144);
          uint64_t v51 = a1;
          uint64_t v52 = v138;
          (*(void (**)(uint64_t, uint64_t))(v50 + 32))(v49, v50);
          uint64_t v53 = v141;
          uint64_t v54 = v142;
          sub_10026BB6C(v140, v141);
          uint64_t v55 = v139;
          (*(void (**)(uint64_t, uint64_t))(v54 + 32))(v53, v54);
          LOBYTE(v53) = static UUID.< infix(_:_:)();
          unint64_t v56 = *v137;
          uint64_t v57 = v55;
          uint64_t v58 = v146;
          (*v137)(v57, v146);
          v56(v52, v58);
          sub_10024D338((uint64_t)v140);
          sub_10024D338((uint64_t)&v143);
          if ((v53 & 1) == 0) {
            break;
          }
          uint64_t v59 = *v51;
          if (!*v51) {
            goto LABEL_142;
          }
          a1 = v51;
          uint64_t v60 = (_OWORD *)(v59 + v45);
          sub_1002AD354((long long *)(v59 + v45 + 48), &v143);
          long long v61 = v60[1];
          v60[3] = *v60;
          v60[4] = v61;
          v60[5] = v60[2];
          sub_1002AD354(&v143, v60);
          v45 -= 48;
          ++v46;
          Swift::Int v12 = v47;
          if (v47 == v46) {
            goto LABEL_43;
          }
        }
        a1 = v51;
        Swift::Int v12 = v47;
LABEL_43:
        ++v12;
        Swift::Int v15 = v133;
        uint64_t v45 = v134 + 48;
      }
      while ((uint64_t *)v12 != v132);
      Swift::Int v12 = (Swift::Int)v132;
      uint64_t v13 = v130;
    }
    goto LABEL_52;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100481808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v29 = a1;
  uint64_t v31 = type metadata accessor for UUID();
  uint64_t v7 = __chkstk_darwin(v31);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v7);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v38 = a3;
  uint64_t v28 = a2;
  if (a3 != a2)
  {
    unint64_t v14 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v15 = 48 * v38 - 48;
LABEL_5:
    uint64_t v16 = v29;
    uint64_t v30 = v15;
    while (1)
    {
      uint64_t v17 = *a4 + v15;
      sub_1003CF0DC(v17 + 48, (uint64_t)&v35);
      sub_1003CF0DC(v17, (uint64_t)v32);
      uint64_t v18 = v36;
      uint64_t v19 = v37;
      sub_10026BB6C(&v35, v36);
      (*(void (**)(uint64_t, uint64_t))(v19 + 32))(v18, v19);
      uint64_t v20 = v33;
      uint64_t v21 = v34;
      sub_10026BB6C(v32, v33);
      (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v20, v21);
      LOBYTE(v20) = static UUID.< infix(_:_:)();
      uint64_t v22 = *v14;
      uint64_t v23 = v31;
      (*v14)(v9, v31);
      v22(v13, v23);
      sub_10024D338((uint64_t)v32);
      uint64_t result = sub_10024D338((uint64_t)&v35);
      if ((v20 & 1) == 0)
      {
LABEL_4:
        uint64_t v15 = v30 + 48;
        if (++v38 == v28) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v24 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v25 = (_OWORD *)(v24 + v15);
      sub_1002AD354((long long *)(v24 + v15 + 48), &v35);
      long long v26 = v25[1];
      v25[3] = *v25;
      v25[4] = v26;
      v25[5] = v25[2];
      uint64_t result = (uint64_t)sub_1002AD354(&v35, v25);
      v15 -= 48;
      if (v38 == ++v16) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100481A78(char *a1, char *a2, char *a3, char *a4)
{
  uint64_t v63 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v63 - 8);
  uint64_t v9 = __chkstk_darwin(v63);
  unint64_t v62 = (char *)v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v60 = a3;
  long long v61 = (char *)v57 - v11;
  uint64_t v12 = a2 - a1;
  uint64_t v13 = (a2 - a1) / 48;
  uint64_t v14 = a3 - a2;
  uint64_t v15 = v14 / 48;
  uint64_t v72 = a1;
  uint64_t v71 = a4;
  if (v13 >= v14 / 48)
  {
    if (v14 < -47) {
      goto LABEL_43;
    }
    if (a4 != a2 || &a2[48 * v15] <= a4) {
      memmove(a4, a2, 48 * v15);
    }
    long long v35 = &a4[48 * v15];
    char v70 = v35;
    uint64_t v72 = a2;
    if (v14 < 48 || a1 >= a2) {
      goto LABEL_42;
    }
    v57[2] = v8 + 8;
    uint64_t v58 = a1;
    uint64_t v36 = v60 - 48;
    uint64_t v59 = a4;
    uint64_t v37 = v62;
    uint64_t v38 = (void (**)(char *, uint64_t))(v8 + 8);
    while (1)
    {
      uint64_t v60 = v36 + 48;
      sub_1003CF0DC((uint64_t)(v35 - 48), (uint64_t)v67);
      uint64_t v41 = a2 - 48;
      sub_1003CF0DC((uint64_t)(a2 - 48), (uint64_t)v64);
      uint64_t v43 = v68;
      uint64_t v44 = v69;
      sub_10026BB6C(v67, v68);
      uint64_t v45 = v61;
      (*(void (**)(uint64_t, uint64_t))(v44 + 32))(v43, v44);
      uint64_t v46 = v65;
      uint64_t v47 = v66;
      sub_10026BB6C(v64, v65);
      (*(void (**)(uint64_t, uint64_t))(v47 + 32))(v46, v47);
      LOBYTE(v46) = static UUID.< infix(_:_:)();
      uint64_t v48 = *v38;
      uint64_t v49 = v63;
      (*v38)(v37, v63);
      v48(v45, v49);
      sub_10024D338((uint64_t)v64);
      sub_10024D338((uint64_t)v67);
      if (v46) {
        break;
      }
      unint64_t v52 = (unint64_t)v70;
      long long v35 = v70 - 48;
      v70 -= 48;
      if ((unint64_t)v60 < v52 || (unint64_t)v36 >= v52)
      {
        long long v39 = *(_OWORD *)v35;
        long long v40 = *(_OWORD *)(v52 - 16);
        *((_OWORD *)v36 + 1) = *(_OWORD *)(v52 - 32);
        *((_OWORD *)v36 + 2) = v40;
        *(_OWORD *)uint64_t v36 = v39;
        uint64_t v41 = a2;
        goto LABEL_30;
      }
      unint64_t v42 = (unint64_t)v58;
      unint64_t v53 = (unint64_t)v59;
      if (v60 != (char *)v52)
      {
        long long v54 = *(_OWORD *)v35;
        long long v55 = *(_OWORD *)(v52 - 16);
        *((_OWORD *)v36 + 1) = *(_OWORD *)(v52 - 32);
        *((_OWORD *)v36 + 2) = v55;
        *(_OWORD *)uint64_t v36 = v54;
      }
      uint64_t v41 = a2;
      if ((unint64_t)v35 <= v53) {
        goto LABEL_42;
      }
LABEL_31:
      v36 -= 48;
      a2 = v41;
      if ((unint64_t)v41 <= v42) {
        goto LABEL_42;
      }
    }
    if (v60 != a2 || v36 >= a2)
    {
      long long v50 = *(_OWORD *)v41;
      long long v51 = *((_OWORD *)a2 - 1);
      *((_OWORD *)v36 + 1) = *((_OWORD *)a2 - 2);
      *((_OWORD *)v36 + 2) = v51;
      *(_OWORD *)uint64_t v36 = v50;
    }
    v72 -= 48;
    long long v35 = v70;
LABEL_30:
    unint64_t v42 = (unint64_t)v58;
    if (v35 <= v59) {
      goto LABEL_42;
    }
    goto LABEL_31;
  }
  if (v12 >= -47)
  {
    if (a4 != a1 || &a1[48 * v13] <= a4) {
      memmove(a4, a1, 48 * v13);
    }
    unint64_t v16 = (unint64_t)&a4[48 * v13];
    char v70 = (char *)v16;
    if (v12 >= 48 && a2 < v60)
    {
      uint64_t v17 = (void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v18 = v61;
      do
      {
        sub_1003CF0DC((uint64_t)a2, (uint64_t)v67);
        sub_1003CF0DC((uint64_t)a4, (uint64_t)v64);
        uint64_t v19 = v68;
        uint64_t v20 = v69;
        sub_10026BB6C(v67, v68);
        (*(void (**)(uint64_t, uint64_t))(v20 + 32))(v19, v20);
        uint64_t v21 = v65;
        uint64_t v22 = v66;
        sub_10026BB6C(v64, v65);
        uint64_t v23 = v62;
        (*(void (**)(uint64_t, uint64_t))(v22 + 32))(v21, v22);
        char v24 = static UUID.< infix(_:_:)();
        uint64_t v25 = *v17;
        long long v26 = v23;
        uint64_t v27 = v63;
        (*v17)(v26, v63);
        v25(v18, v27);
        sub_10024D338((uint64_t)v64);
        sub_10024D338((uint64_t)v67);
        uint64_t v28 = v72;
        if (v24)
        {
          unint64_t v29 = (unint64_t)(a2 + 48);
          if (v72 >= a2 && (unint64_t)v72 < v29 && v72 == a2)
          {
            uint64_t v28 = a2;
          }
          else
          {
            long long v30 = *(_OWORD *)a2;
            long long v31 = *((_OWORD *)a2 + 2);
            *((_OWORD *)v72 + 1) = *((_OWORD *)a2 + 1);
            *((_OWORD *)v28 + 2) = v31;
            *(_OWORD *)uint64_t v28 = v30;
          }
        }
        else
        {
          uint64_t v32 = v71 + 48;
          if (v72 != v71 || v72 >= v32)
          {
            long long v33 = *(_OWORD *)v71;
            long long v34 = *((_OWORD *)v71 + 2);
            *((_OWORD *)v72 + 1) = *((_OWORD *)v71 + 1);
            *((_OWORD *)v28 + 2) = v34;
            *(_OWORD *)uint64_t v28 = v33;
          }
          uint64_t v71 = v32;
          unint64_t v29 = (unint64_t)a2;
        }
        uint64_t v72 = v28 + 48;
        a4 = v71;
        if ((unint64_t)v71 >= v16) {
          break;
        }
        a2 = (char *)v29;
      }
      while (v29 < (unint64_t)v60);
    }
LABEL_42:
    sub_1004820E8((void **)&v72, (const void **)&v71, &v70);
    return 1;
  }
LABEL_43:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100481FEC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10000A844(&qword_100974EB8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1004820E8(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -48)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 48;
    if (result != v3 || result >= &v3[48 * v6])
    {
      return (char *)memmove(result, v3, 48 * v6);
    }
  }
  return result;
}

char *sub_1004821B8(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

uint64_t sub_100482274(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_10000A844(&qword_10096B510);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1004823B8(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_100482474(uint64_t a1)
{
  return sub_100481FEC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100482488(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (uint64_t (*)(void *, unsigned char *))isStackAllocationSafe;
  char v7 = *(unsigned char *)(a3 + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_100482600((uint64_t)&v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, a3, v6);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    int64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a2 = sub_100482600((uint64_t)v11, v8, a3, v6);
    swift_slowDealloc();
  }
  return a2;
}

uint64_t sub_100482600(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, unsigned char *))
{
  uint64_t v22 = (unint64_t *)result;
  uint64_t v23 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 64);
  int64_t v26 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    unint64_t v12 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v13 = v12 | (v7 << 6);
LABEL_17:
    uint64_t v17 = *(void *)(a3 + 56);
    uint64_t v18 = (void *)(*(void *)(a3 + 48) + 16 * v13);
    uint64_t v19 = v18[1];
    v25[0] = *v18;
    v25[1] = v19;
    sub_1003CF0DC(v17 + 48 * v13, (uint64_t)v24);
    swift_bridgeObjectRetain();
    char v20 = a4(v25, v24);
    sub_10024D338((uint64_t)v24);
    uint64_t result = swift_bridgeObjectRelease();
    if (v4) {
      return result;
    }
    if (v20)
    {
      *(unint64_t *)((char *)v22 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      BOOL v14 = __OFADD__(v23++, 1);
      if (v14) {
        goto LABEL_30;
      }
    }
  }
  BOOL v14 = __OFADD__(v7++, 1);
  if (v14)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v7 >= v26) {
    return sub_10064F3C0(v22, a2, v23, a3);
  }
  unint64_t v15 = *(void *)(v8 + 8 * v7);
  if (v15)
  {
LABEL_16:
    unint64_t v11 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v7 << 6);
    goto LABEL_17;
  }
  int64_t v16 = v7 + 1;
  if (v7 + 1 >= v26) {
    return sub_10064F3C0(v22, a2, v23, a3);
  }
  unint64_t v15 = *(void *)(v8 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v7 + 2;
  if (v7 + 2 >= v26) {
    return sub_10064F3C0(v22, a2, v23, a3);
  }
  unint64_t v15 = *(void *)(v8 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v7 + 3;
  if (v7 + 3 >= v26) {
    return sub_10064F3C0(v22, a2, v23, a3);
  }
  unint64_t v15 = *(void *)(v8 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v7 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v7 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v7 >= v26) {
      return sub_10064F3C0(v22, a2, v23, a3);
    }
    unint64_t v15 = *(void *)(v8 + 8 * v7);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100482804(uint64_t isStackAllocationSafe, int a2)
{
  uint64_t v4 = isStackAllocationSafe;
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    uint64_t v8 = sub_10048297C((unint64_t *)((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v4, a2);
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    uint64_t v8 = sub_10048297C((unint64_t *)v9, v6, v4, a2);
    swift_release();
    swift_slowDealloc();
  }
  return v8;
}

uint64_t sub_10048297C(unint64_t *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v27 = a2;
  int v32 = a4;
  uint64_t v28 = a1;
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (id *)((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v27 - v10;
  int64_t v12 = 0;
  uint64_t v13 = *(void *)(a3 + 56);
  uint64_t v29 = 0;
  uint64_t v30 = a3 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v31 = (unint64_t)(v14 + 63) >> 6;
  while (2)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_21;
    }
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v19 >= v31) {
      break;
    }
    unint64_t v20 = *(void *)(v30 + 8 * v19);
    ++v12;
    if (v20) {
      goto LABEL_20;
    }
    int64_t v12 = v19 + 1;
    if (v19 + 1 >= v31) {
      break;
    }
    unint64_t v20 = *(void *)(v30 + 8 * v12);
    if (v20) {
      goto LABEL_20;
    }
    int64_t v12 = v19 + 2;
    if (v19 + 2 >= v31) {
      break;
    }
    unint64_t v20 = *(void *)(v30 + 8 * v12);
    if (v20) {
      goto LABEL_20;
    }
    int64_t v21 = v19 + 3;
    if (v21 >= v31) {
      break;
    }
    unint64_t v20 = *(void *)(v30 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        int64_t v12 = v21 + 1;
        if (__OFADD__(v21, 1)) {
          break;
        }
        if (v12 >= v31) {
          goto LABEL_30;
        }
        unint64_t v20 = *(void *)(v30 + 8 * v12);
        ++v21;
        if (v20) {
          goto LABEL_20;
        }
      }
LABEL_32:
      __break(1u);
      JUMPOUT(0x100482D40);
    }
    int64_t v12 = v21;
LABEL_20:
    unint64_t v16 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_21:
    sub_1004849EC(*(void *)(a3 + 48) + *(void *)(v6 + 72) * v18, (uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1004849EC((uint64_t)v11, (uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        int v23 = v32;
        sub_1004838E8((uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
        sub_1004838E8((uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
        if (v23 == 1) {
          goto LABEL_27;
        }
        continue;
      case 2u:
        sub_1004838E8((uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
        sub_1004838E8((uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
        continue;
      case 3u:
        int v24 = v32;

        sub_1004838E8((uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
        if (v24 == 2) {
          goto LABEL_27;
        }
        continue;
      default:
        int v22 = v32;
        sub_1004838E8((uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        sub_1004838E8((uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
        if (v22) {
          continue;
        }
LABEL_27:
        *(unint64_t *)((char *)v28 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
        if (!__OFADD__(v29++, 1)) {
          continue;
        }
        __break(1u);
        break;
    }
    break;
  }
LABEL_30:
  swift_retain();
  return sub_10070785C(v28, v27, v29, a3);
}

uint64_t sub_100482D50(void *a1)
{
  return sub_100255C18(0, a1[2], 0, a1);
}

uint64_t sub_100482D64(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100482D78(void *a1)
{
  return sub_1002567D0(0, a1[2], 0, a1);
}

uint64_t sub_100482D8C(uint64_t a1)
{
  return sub_100255F20(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100482DA0(uint64_t a1)
{
  return sub_100257578(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100482DB4(uint64_t a1, uint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = a5;
  uint64_t v37 = a6;
  uint64_t v34 = a6;
  unint64_t v16 = sub_100278AE4((uint64_t *)&v35);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(v16, a1, a5);
  unint64_t v17 = (void *)*a4;
  unint64_t v19 = sub_100583A00(a2);
  uint64_t v20 = v17[2];
  BOOL v21 = (v18 & 1) == 0;
  uint64_t v22 = v20 + v21;
  if (__OFADD__(v20, v21))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v23 = v18;
  uint64_t v24 = v17[3];
  if (v24 >= v22 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v25 = (void *)*a4;
    if (v23)
    {
LABEL_8:
      uint64_t v26 = v25[7] + 40 * v19;
      sub_10024D338(v26);
      return sub_1002AF688(&v35, v26);
    }
    goto LABEL_11;
  }
  if (v24 >= v22 && (a3 & 1) == 0)
  {
    sub_10058E044();
    goto LABEL_7;
  }
  sub_100588244(v22, a3 & 1);
  unint64_t v28 = sub_100583A00(a2);
  if ((v23 & 1) != (v29 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v19 = v28;
  uint64_t v25 = (void *)*a4;
  if (v23) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  uint64_t v30 = sub_1002AF758((uint64_t)&v35, v36);
  __chkstk_darwin(v30);
  int v32 = (char *)&v34 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v33 + 16))(v32);
  sub_100483064(v19, (uint64_t)v15, (uint64_t)v32, v25, a5, v34);
  return sub_10024D338((uint64_t)&v35);
}

uint64_t sub_100483064(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v19 = a5;
  uint64_t v20 = a6;
  uint64_t v11 = sub_100278AE4((uint64_t *)&v18);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(v11, a3, a5);
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v12 = a4[6];
  uint64_t v13 = type metadata accessor for UUID();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12 + *(void *)(*(void *)(v13 - 8) + 72) * a1, a2, v13);
  uint64_t result = sub_1002AF688(&v18, a4[7] + 40 * a1);
  uint64_t v15 = a4[2];
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    a4[2] = v17;
  }
  return result;
}

uint64_t sub_100483170(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v15 = type metadata accessor for SDAuthenticationSessionExecutor();
  BOOL v16 = &off_1008DDF60;
  *(void *)&long long v14 = a3;
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t result = sub_1002AF688(&v14, a4[7] + 40 * a1);
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_10048324C(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for SDAuthenticationSessionExecutor();
  int v32 = &off_1008DDF60;
  *(void *)&long long v30 = a1;
  BOOL v12 = (void *)*a4;
  unint64_t v14 = sub_100583A00(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = (void *)*a4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 40 * v14;
      sub_10024D338(v21);
      return sub_1002AF688(&v30, v21);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_10058E94C();
    goto LABEL_7;
  }
  sub_100588EF8(v17, a3 & 1);
  unint64_t v23 = sub_100583A00(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*a4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  uint64_t v25 = sub_1002AF758((uint64_t)&v30, v31);
  __chkstk_darwin(v25);
  uint64_t v27 = (uint64_t *)((char *)&v29 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v28 + 16))(v27);
  sub_100483170(v14, (uint64_t)v11, *v27, v20);
  return sub_10024D338((uint64_t)&v30);
}

uint64_t sub_1004834C4(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a2;
  uint64_t v3 = type metadata accessor for SFPlatform();
  uint64_t result = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = 0;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v27 = a1 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v31 = _swiftEmptyArrayStorage;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v9;
  int64_t v28 = (unint64_t)(v10 + 63) >> 6;
  char v13 = (void (**)(char *, uint64_t))(v5 + 8);
  if ((v11 & v9) != 0) {
    goto LABEL_35;
  }
LABEL_7:
  int64_t v14 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v14 < v28)
    {
      unint64_t v15 = *(void *)(v27 + 8 * v14);
      ++v8;
      if (v15) {
        goto LABEL_22;
      }
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v28) {
        goto LABEL_36;
      }
      unint64_t v15 = *(void *)(v27 + 8 * v8);
      if (v15) {
        goto LABEL_22;
      }
      int64_t v8 = v14 + 2;
      if (v14 + 2 >= v28) {
        goto LABEL_36;
      }
      unint64_t v15 = *(void *)(v27 + 8 * v8);
      if (v15) {
        goto LABEL_22;
      }
      int64_t v8 = v14 + 3;
      if (v14 + 3 >= v28) {
        goto LABEL_36;
      }
      unint64_t v15 = *(void *)(v27 + 8 * v8);
      if (v15)
      {
LABEL_22:
        unint64_t v12 = (v15 - 1) & v15;
        for (unint64_t i = __clz(__rbit64(v15)) + (v8 << 6); ; unint64_t i = v24 | (v8 << 6))
        {
          sub_1003CF0DC(*(void *)(a1 + 56) + 48 * i, (uint64_t)v29);
          sub_1002AD354(v29, v30);
          static SFPlatform.watchOS.getter();
          char v18 = static SFPlatform.isPlatform(_:)();
          (*v13)(v7, v3);
          if ((v18 & 1) == 0)
          {
            sub_1003CF0DC((uint64_t)v30, (uint64_t)v29);
            sub_10000A844(&qword_10096B310);
            type metadata accessor for SDAirDropDiscoveredDevice();
            if (swift_dynamicCast()
              || (sub_1003CF0DC((uint64_t)v30, (uint64_t)v29),
                  type metadata accessor for SDAirDropDiscoveredPerson(),
                  swift_dynamicCast()))
            {
              swift_beginAccess();
              uint64_t v19 = swift_bridgeObjectRetain();
              char v20 = sub_1004803B8(v19, v26);
              swift_release();
              swift_bridgeObjectRelease();
              if ((v20 & 1) == 0) {
                goto LABEL_6;
              }
            }
            else
            {
              sub_1003CF0DC((uint64_t)v30, (uint64_t)v29);
              type metadata accessor for SDAirDropDiscoveredClassroom();
              if (!swift_dynamicCast())
              {
LABEL_6:
                uint64_t result = sub_10024D338((uint64_t)v30);
                if (!v12) {
                  goto LABEL_7;
                }
                goto LABEL_35;
              }
              swift_release();
            }
          }
          sub_1002AD354(v30, v29);
          uint64_t v21 = v31;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100255494(0, v21[2] + 1, 1);
            uint64_t v21 = v31;
          }
          unint64_t v23 = v21[2];
          unint64_t v22 = v21[3];
          if (v23 >= v22 >> 1)
          {
            sub_100255494(v22 > 1, v23 + 1, 1);
            uint64_t v21 = v31;
          }
          v21[2] = v23 + 1;
          uint64_t result = (uint64_t)sub_1002AD354(v29, &v21[6 * v23 + 4]);
          if (!v12) {
            goto LABEL_7;
          }
LABEL_35:
          unint64_t v24 = __clz(__rbit64(v12));
          v12 &= v12 - 1;
        }
      }
      int64_t v16 = v14 + 4;
      if (v16 < v28)
      {
        unint64_t v15 = *(void *)(v27 + 8 * v16);
        if (v15)
        {
          int64_t v8 = v16;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v8 = v16 + 1;
          if (__OFADD__(v16, 1)) {
            goto LABEL_38;
          }
          if (v8 >= v28) {
            break;
          }
          unint64_t v15 = *(void *)(v27 + 8 * v8);
          ++v16;
          if (v15) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_36:
    swift_release();
    return (uint64_t)v31;
  }
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1004838E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100483948()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100483988()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000A6F0;
  v3[2] = v2;
  return _swift_task_switch(sub_10047FDB0, 0, 0);
}

uint64_t sub_100483A30()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100483A68()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100483AA8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F0;
  return sub_100472CE4(a1, v4, v5, v6);
}

uint64_t sub_100483B60(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  int64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *int64_t v8 = v2;
  v8[1] = sub_10000A6F0;
  return sub_10046DC74(a1, v4, v5, v7, v6);
}

uint64_t sub_100483C24()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100483C6C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  int64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *int64_t v8 = v2;
  v8[1] = sub_10000A6F0;
  return sub_10046D3E4(a1, v4, v5, v7, v6);
}

uint64_t sub_100483D30(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F0;
  return sub_100471C84(a1, v4, v5, v6);
}

uint64_t sub_100483DE4(uint64_t a1)
{
  return sub_1004720E8(a1, v1, (uint64_t)&unk_1008DBDA8, (uint64_t)&unk_100974FB8);
}

uint64_t sub_100483E1C()
{
  return sub_100484BB0((void (*)(void))&_swift_unknownObjectRelease, 56);
}

uint64_t sub_100483E38(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_10047236C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100483F00()
{
  return sub_100484BB0((void (*)(void))&_swift_bridgeObjectRelease, 48);
}

uint64_t sub_100483F1C(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_10000A6F0;
  *(_OWORD *)(v4 + 48) = v5;
  *(void *)(v4 + 40) = a1;
  return _swift_task_switch(sub_100472268, 0, 0);
}

uint64_t sub_100483FD0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = a1 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(a1 + 56);
  int64_t v23 = (unint64_t)(v10 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v14 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v18 >= v23) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v9 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v23) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v9 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v23) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v9 + 8 * v14);
        if (!v19)
        {
          int64_t v14 = v18 + 3;
          if (v18 + 3 >= v23) {
            goto LABEL_24;
          }
          unint64_t v19 = *(void *)(v9 + 8 * v14);
          if (!v19)
          {
            int64_t v20 = v18 + 4;
            if (v20 >= v23)
            {
LABEL_24:
              uint64_t v21 = 0;
              goto LABEL_25;
            }
            unint64_t v19 = *(void *)(v9 + 8 * v20);
            if (!v19)
            {
              while (1)
              {
                int64_t v14 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_27;
                }
                if (v14 >= v23) {
                  goto LABEL_24;
                }
                unint64_t v19 = *(void *)(v9 + 8 * v14);
                ++v20;
                if (v19) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v14 = v20;
          }
        }
      }
    }
LABEL_22:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_5:
    sub_1004849EC(*(void *)(a1 + 48) + *(void *)(v3 + 72) * v16, (uint64_t)v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100484D20((uint64_t)v8, (uint64_t)v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
    char v17 = sub_100479408((uint64_t)v6);
    uint64_t result = sub_1004838E8((uint64_t)v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (v17)
    {
      uint64_t v21 = 1;
LABEL_25:
      swift_release();
      return v21;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void *sub_100484268(uint64_t a1, uint64_t a2)
{
  uint64_t v56 = a2;
  uint64_t v54 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v54);
  uint64_t v53 = (uint64_t)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v52);
  uint64_t v51 = (uint64_t)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v58 = (uint64_t)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v49 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  int64_t v14 = (char *)v49 - v13;
  __chkstk_darwin(v12);
  unint64_t v16 = (char *)v49 - v15;
  uint64_t v63 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v17 = __chkstk_darwin(v63);
  uint64_t v62 = (uint64_t)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (id *)((char *)v49 - v20);
  uint64_t v22 = __chkstk_darwin(v19);
  unint64_t v24 = (id *)((char *)v49 - v23);
  __chkstk_darwin(v22);
  uint64_t v27 = (char *)v49 - v26;
  uint64_t result = _swiftEmptyArrayStorage;
  os_log_type_t v64 = _swiftEmptyArrayStorage;
  uint64_t v29 = *(void *)(a1 + 16);
  if (v29)
  {
    v49[1] = v2;
    long long v50 = v14;
    uint64_t v55 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus;
    uint64_t v30 = *(void *)(v25 + 72);
    unint64_t v59 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    uint64_t v60 = v30;
    uint64_t v31 = a1 + v59;
    uint64_t v57 = v11;
    long long v61 = v16;
    while (2)
    {
      sub_1004849EC(v31, (uint64_t)v27, type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_1004849EC((uint64_t)v27, (uint64_t)v24, type metadata accessor for SDAirDropDiscoveredEndpoint);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v37 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
          goto LABEL_12;
        case 2u:
          uint64_t v37 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint;
LABEL_12:
          sub_1004838E8((uint64_t)v24, v37);
          LOBYTE(v36) = 0;
          break;
        case 3u:

          LOBYTE(v36) = 0;
          break;
        default:
          sub_100484D20((uint64_t)v24, (uint64_t)v16, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          __int16 v33 = sub_100314A58();
          uint64_t v34 = (uint64_t)v50;
          sub_1004849EC((uint64_t)v16, (uint64_t)v50, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          if ((v33 & 0x4000) != 0)
          {
            sub_1004838E8(v34, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            sub_1004849EC((uint64_t)v16, (uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          }
          else
          {
            __int16 v35 = sub_100314A58();
            sub_1004838E8(v34, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            sub_1004849EC((uint64_t)v16, (uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            if ((v35 & 0x2000) == 0)
            {
              unint64_t v36 = ((unint64_t)sub_100314A58() >> 17) & 1;
              goto LABEL_15;
            }
          }
          LOBYTE(v36) = 1;
LABEL_15:
          sub_1004838E8((uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          sub_1004838E8((uint64_t)v16, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          break;
      }
      sub_1004849EC((uint64_t)v27, (uint64_t)v21, type metadata accessor for SDAirDropDiscoveredEndpoint);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v39 = v51;
          sub_100484D20((uint64_t)v21, v51, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
          uint64_t v40 = *(void *)(v39 + *(int *)(v52 + 44) + 8);
          swift_bridgeObjectRetain();
          uint64_t v41 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
          goto LABEL_23;
        case 2u:
          uint64_t v39 = v53;
          sub_100484D20((uint64_t)v21, v53, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
          uint64_t v40 = *(void *)(v39 + *(int *)(v54 + 28) + 8);
          swift_bridgeObjectRetain();
          uint64_t v41 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint;
LABEL_23:
          sub_1004838E8(v39, v41);
          uint64_t v11 = v57;
          if (v40) {
            goto LABEL_24;
          }
          goto LABEL_27;
        case 3u:

          goto LABEL_27;
        default:
          sub_100484D20((uint64_t)v21, v58, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          if (!NWEndpoint.nw.getter())
          {
            __break(1u);
            JUMPOUT(0x1004849CCLL);
          }
          uint64_t contact_id = nw_endpoint_get_contact_id();
          swift_unknownObjectRelease();
          if (contact_id)
          {
            String.init(cString:)();
            sub_1004838E8(v58, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
LABEL_24:
            unint64_t v42 = *(void **)(v56 + v55);
            NSString v43 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v44 = [v42 contactWithContactIdentifier:v43];

            if (!v44) {
              goto LABEL_3;
            }
          }
          else
          {
            sub_1004838E8(v58, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
LABEL_27:
            if (v36)
            {
LABEL_3:
              sub_1004838E8((uint64_t)v27, type metadata accessor for SDAirDropDiscoveredEndpoint);
              uint64_t v32 = v60;
              unint64_t v16 = v61;
              goto LABEL_4;
            }
          }
          sub_100484D20((uint64_t)v27, v62, type metadata accessor for SDAirDropDiscoveredEndpoint);
          uint64_t v45 = v64;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100255760(0, v45[2] + 1, 1);
            uint64_t v45 = v64;
          }
          unint64_t v47 = v45[2];
          unint64_t v46 = v45[3];
          if (v47 >= v46 >> 1)
          {
            sub_100255760(v46 > 1, v47 + 1, 1);
            uint64_t v45 = v64;
          }
          v45[2] = v47 + 1;
          uint64_t v48 = (uint64_t)v45 + v59 + v47 * v60;
          uint64_t v32 = v60;
          sub_100484D20(v62, v48, type metadata accessor for SDAirDropDiscoveredEndpoint);
          unint64_t v16 = v61;
LABEL_4:
          v31 += v32;
          if (--v29) {
            continue;
          }
          uint64_t result = v64;
          break;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_1004849EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100484A54(uint64_t a1)
{
  return sub_1004720E8(a1, v1, (uint64_t)&unk_1008DBDD0, (uint64_t)&unk_100975020);
}

uint64_t sub_100484A8C()
{
  return sub_100484BB0((void (*)(void))&_swift_bridgeObjectRelease, 48);
}

uint64_t sub_100484AA8(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_10000A6F0;
  *(_OWORD *)(v4 + 48) = v5;
  *(void *)(v4 + 40) = a1;
  return _swift_task_switch(sub_100471A6C, 0, 0);
}

uint64_t sub_100484B5C(uint64_t a1)
{
  return sub_1004720E8(a1, v1, (uint64_t)&unk_1008DBDF8, (uint64_t)&unk_100975030);
}

uint64_t sub_100484B94()
{
  return sub_100484BB0((void (*)(void))&_swift_bridgeObjectRelease, 48);
}

uint64_t sub_100484BB0(void (*a1)(void), uint64_t a2)
{
  swift_unknownObjectRelease();
  swift_release();
  a1(*(void *)(v2 + 40));

  return _swift_deallocObject(v2, a2, 7);
}

uint64_t sub_100484C14(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_10000A6F0;
  *(_OWORD *)(v4 + 48) = v5;
  *(void *)(v4 + 40) = a1;
  return _swift_task_switch(sub_10046F784, 0, 0);
}

uint64_t sub_100484CC8()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100484D00(uint64_t a1)
{
  sub_10046CF14(a1, *(void *)(v1 + 16));
}

uint64_t sub_100484D08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100484D18()
{
  return swift_release();
}

uint64_t sub_100484D20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100484D88(uint64_t *a1, uint64_t a2)
{
  return sub_10047F858(a1, a2, *(void **)(v2 + 16)) & 1;
}

uint64_t sub_100484DA8(uint64_t a1)
{
  return sub_10047B688(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_100484DC8(uint64_t a1)
{
  return sub_10047BB3C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100484DD4()
{
  swift_unknownObjectRelease();
  swift_release();
  sub_10024D338(v0 + 40);

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100484E1C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F4;
  return sub_10047C03C(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_100484EE8()
{
  swift_unknownObjectRelease();
  sub_10024D338(v0 + 32);
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100484F30(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[9];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10000A6F4;
  return sub_10047C62C(a1, v4, v5, v6, v7);
}

uint64_t sub_100484FF8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for SFAirDropReceive.AskRequest();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  return _swift_task_switch(sub_1004850F0, v4, 0);
}

uint64_t sub_1004850F0()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[2];
  uint64_t v5 = *(void *)(SFAirDropReceive.AskRequest.files.getter() + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v7 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v8 = v0[4];
  if (!v5)
  {
    (*(void (**)(void, void))(v7 + 8))(v0[6], v0[4]);
    char v10 = 0;
    goto LABEL_10;
  }
  uint64_t v9 = *(void *)(SFAirDropReceive.AskRequest.urlItems.getter() + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  if (v9)
  {
    char v10 = 0;
    goto LABEL_10;
  }
  if (SFAirDropReceive.AskRequest.senderBundleID.getter() == 0xD000000000000015 && v11 == 0x80000001007BE360)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v10 = 0;
    if ((v12 & 1) == 0) {
      goto LABEL_10;
    }
  }
  char v10 = sub_1002CF6E8(v0[2]);
LABEL_10:
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13(v10 & 1);
}

uint64_t sub_100485274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_10000A844((uint64_t *)&unk_10097F1D0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = *(void **)(*(void *)(v3 + 16) + 16);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v11 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v9, a2, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  id v13 = v10;
  sub_10039FAA0(a1, v10, 1, a3);

  return sub_10024DFE8((uint64_t)v9);
}

uint64_t sub_1004853BC()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDAirDropContentHandlerVoiceMails()
{
  return self;
}

uint64_t sub_100485418@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerVoiceMails();
  uint64_t v2 = swift_allocObject();
  type metadata accessor for SDAirDropContentHandlerVoiceMemos();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(v2 + 16) = result;
  *a1 = v2;
  return result;
}

uint64_t sub_10048546C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_100484FF8(a1);
}

uint64_t sub_100485508(uint64_t a1)
{
  *(void *)(swift_allocObject() + 16) = a1;
  swift_bridgeObjectRetain();
  sub_10000A844((uint64_t *)&unk_10096C8B0);
  return SFProgressTask.init(_:initialProgress:operation:file:line:)();
}

uint64_t sub_1004855D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100485274(a1, a2, a3);
}

void sub_1004855FC(uint64_t a1, char a2)
{
  unint64_t v3 = *(void *)(SFAirDropReceive.AskRequest.files.getter() + 16);
  swift_bridgeObjectRelease();
  sub_10000A844(&qword_10096D760);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
  *(void *)(inited + 32) = 0x49414D4543494F56;
  *(void *)(inited + 40) = 0xE90000000000004CLL;
  *(void *)(inited + 48) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5._uint64_t countAndFlagsBits = 95;
  v5._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6._uint64_t countAndFlagsBits = 0x49414D4543494F56;
  v6._unint64_t object = (void *)0xE90000000000004CLL;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  if (v3 > 1)
  {
    v7._uint64_t countAndFlagsBits = 0x4C4152554C505FLL;
    v7._unint64_t object = (void *)0xE700000000000000;
    String.append(_:)(v7);
  }
  swift_bridgeObjectRelease();
  if (a2)
  {
    v8._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
    v8._unint64_t object = (void *)0xEC00000044455A49;
    String.append(_:)(v8);
  }
  v9._uint64_t countAndFlagsBits = 0x545845545FLL;
  v9._unint64_t object = (void *)0xE500000000000000;
  String.append(_:)(v9);
  swift_setDeallocating();
  sub_10000A844((uint64_t *)&unk_100977CB0);
  swift_arrayDestroy();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = (id)SFLocalizedStringForKey();

  if (v11)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_10076E7A0;
    *(void *)(v12 + 56) = &type metadata for Int;
    *(void *)(v12 + 64) = &protocol witness table for Int;
    *(void *)(v12 + 32) = v3;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100485854()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10048588C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100975198);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100975198);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

unint64_t sub_100485954(Swift::String a1, char a2)
{
  unint64_t object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  if (a2)
  {
    if (a2 == 1)
    {
      _StringGuts.grow(_:)(21);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000012;
    }
    else
    {
      _StringGuts.grow(_:)(24);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000015;
    }
  }
  else
  {
    unint64_t v4 = 0x656C62617369642ELL;
  }
  unint64_t v8 = v4;
  v5._uint64_t countAndFlagsBits = countAndFlagsBits;
  v5._unint64_t object = object;
  String.append(_:)(v5);
  v6._uint64_t countAndFlagsBits = 93;
  v6._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  return v8;
}

uint64_t type metadata accessor for SDAirDropUserSafetyPlatformContentHandlerFactory()
{
  return self;
}

uint64_t sub_100485A68(uint64_t a1)
{
  id v3 = [objc_allocWithZone((Class)SCSensitivityAnalyzer) init];
  uint64_t v4 = *(void *)(a1 + 16);
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 41;
  v6._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = v1;
  *(void *)(v7 + 32) = v3;
  *(double *)(v7 + 40) = (double)v4;
  swift_bridgeObjectRetain();
  swift_retain();
  return SFProgressTask.init(_:initialProgress:operation:file:line:)();
}

uint64_t sub_100485BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  *(double *)(v7 + 88) = a7;
  *(void *)(v7 + 72) = a5;
  *(void *)(v7 + 80) = a6;
  *(void *)(v7 + 56) = a3;
  *(void *)(v7 + 64) = a4;
  *(void *)(v7 + 40) = a1;
  *(void *)(v7 + 48) = a2;
  uint64_t v8 = sub_10000A844((uint64_t *)&unk_10097F200);
  *(void *)(v7 + 96) = v8;
  *(void *)(v7 + 104) = *(void *)(v8 - 8);
  *(void *)(v7 + 112) = swift_task_alloc();
  uint64_t v9 = sub_10000A844(&qword_10096CC68);
  *(void *)(v7 + 120) = v9;
  *(void *)(v7 + 128) = *(void *)(v9 - 8);
  *(void *)(v7 + 136) = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  *(void *)(v7 + 144) = swift_task_alloc();
  *(void *)(v7 + 152) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for URL();
  *(void *)(v7 + 160) = v10;
  *(void *)(v7 + 168) = *(void *)(v10 - 8);
  *(void *)(v7 + 176) = swift_task_alloc();
  *(void *)(v7 + 184) = swift_task_alloc();
  *(void *)(v7 + 192) = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v11 = static AirDropActor.shared;
  *(void *)(v7 + 200) = static AirDropActor.shared;
  return _swift_task_switch(sub_100485E0C, v11, 0);
}

uint64_t sub_100485E0C()
{
  uint64_t v49 = (char *)_swiftEmptyArrayStorage;
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + 16);
  unint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = swift_bridgeObjectRetain();
  if (v1)
  {
    uint64_t v4 = *(void (**)(uint64_t, unint64_t, uint64_t))(v2 + 16);
    v2 += 16;
    unint64_t v47 = v4;
    unint64_t v43 = (*(unsigned __int8 *)(v2 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 64);
    unint64_t v5 = v3 + v43;
    uint64_t v6 = *(void *)(v2 + 56);
    uint64_t v45 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    uint64_t v7 = (void (**)(void, void, void))(v2 + 16);
    unint64_t v42 = (void (**)(void, void))(v2 - 8);
    uint64_t v48 = (char *)_swiftEmptyArrayStorage;
    unint64_t v46 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 40);
    int v41 = v2 + 40;
    int v44 = v2;
    do
    {
      uint64_t v8 = v7;
      uint64_t v10 = *(void *)(v0 + 152);
      uint64_t v9 = *(void *)(v0 + 160);
      v47(v10, v5, v9);
      uint64_t v11 = *v46;
      (*v46)(v10, 0, 1, v9);
      if ((*v45)(v10, 1, v9) == 1)
      {
        uint64_t v17 = v48;
        goto LABEL_15;
      }
      uint64_t v7 = v8;
      uint64_t v12 = (void (*)(char *, uint64_t, uint64_t))*v8;
      (*v8)(*(void *)(v0 + 192), *(void *)(v0 + 152), *(void *)(v0 + 160));
      if (URL.isFileURL.getter())
      {
        v12(*(char **)(v0 + 184), *(void *)(v0 + 192), *(void *)(v0 + 160));
        uint64_t v13 = v48;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10025539C(0, *((void *)v48 + 2) + 1, 1);
          uint64_t v13 = v49;
        }
        unint64_t v2 = *((void *)v13 + 2);
        unint64_t v14 = *((void *)v13 + 3);
        if (v2 >= v14 >> 1)
        {
          sub_10025539C(v14 > 1, v2 + 1, 1);
          uint64_t v13 = v49;
        }
        uint64_t v15 = *(void *)(v0 + 184);
        uint64_t v16 = *(void *)(v0 + 160);
        *((void *)v13 + 2) = v2 + 1;
        uint64_t v7 = v8;
        v12(&v13[v43 + v2 * v6], v15, v16);
        uint64_t v48 = v13;
        uint64_t v49 = v13;
        LODWORD(v2) = v44;
      }
      else
      {
        (*v42)(*(void *)(v0 + 192), *(void *)(v0 + 160));
      }
      v5 += v6;
      --v1;
    }
    while (v1);
    LODWORD(v2) = v41;
    uint64_t v17 = v48;
    v11(*(void *)(v0 + 152), 1, 1, *(void *)(v0 + 160));
  }
  else
  {
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
    LODWORD(v2) = v2 + 56;
    uint64_t v17 = (char *)_swiftEmptyArrayStorage;
    v11(*(void *)(v0 + 152), 1, 1, *(void *)(v0 + 160));
  }
LABEL_15:
  *(void *)(v0 + 208) = v11;
  *(void *)(v0 + 216) = v17;
  uint64_t v18 = *(void *)(v0 + 152);
  swift_bridgeObjectRelease();
  sub_10000A7E8(v18, (uint64_t *)&unk_10096AC10);
  uint64_t v19 = *((void *)v17 + 2);
  *(void *)(v0 + 224) = v19;
  if (!v19)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 208))(*(void *)(v0 + 144), 1, 1, *(void *)(v0 + 160));
    goto LABEL_20;
  }
  uint64_t v20 = *(void *)(v0 + 168);
  int v21 = *(_DWORD *)(v20 + 80);
  *(_DWORD *)(v0 + 268) = v21;
  *(void *)(v0 + 232) = 0;
  uint64_t v22 = *(void *)(v0 + 216);
  if (!*(void *)(v22 + 16))
  {
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v23 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 208);
  uint64_t v24 = *(void *)(v0 + 160);
  uint64_t v25 = *(void *)(v0 + 144);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 16))(v25, v22 + ((v21 + 32) & ~(unint64_t)v21), v24);
  v23(v25, 0, 1, v24);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v25, 1, v24) == 1)
  {
LABEL_20:
    swift_release();
    sub_100394300();
    uint64_t v26 = (void *)static NSUserDefaults.airdrop.getter();
    char v27 = SFAirDropUserDefaults.sensitiveContentOverride.getter();

    if (v27 == 2)
    {
      LOBYTE(v2) = 0;
LABEL_26:
      **(unsigned char **)(v0 + 40) = v2;
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
      return v32();
    }
    LODWORD(v2) = v27 & 1;
    if (qword_100969E38 == -1)
    {
LABEL_23:
      uint64_t v28 = type metadata accessor for Logger();
      sub_10000B47C(v28, (uint64_t)qword_100975198);
      uint64_t v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 67109376;
        *(_DWORD *)(v0 + 28) = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v31 + 8) = 1024;
        *(_DWORD *)(v0 + 264) = v2;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "isContentSensitive returning sensitiveContentOverride {isSensitive: %{BOOL}d, override: %{BOOL}d}", (uint8_t *)v31, 0xEu);
        swift_slowDealloc();
      }

      goto LABEL_26;
    }
LABEL_33:
    swift_once();
    goto LABEL_23;
  }
  uint64_t v34 = *(void *)(v0 + 176);
  uint64_t v35 = *(void *)(v0 + 136);
  uint64_t v36 = *(void *)(v0 + 80);
  (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 168) + 32))(v34, *(void *)(v0 + 144), *(void *)(v0 + 160));
  sub_100486EA8(v34, v36, v35);
  SFProgressTask.makeAsyncIterator()();
  uint64_t v37 = static AirDropActor.shared;
  uint64_t v38 = sub_10048DC10((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v39 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v39;
  *uint64_t v39 = v0;
  v39[1] = sub_10048644C;
  uint64_t v40 = *(void *)(v0 + 96);
  return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 16, v37, v38, v40, v0 + 32);
}

uint64_t sub_10048644C()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 200);
    swift_release();
    uint64_t v4 = sub_100486CA4;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 200);
    uint64_t v4 = sub_100486570;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_100486570()
{
  uint64_t v11 = v0;
  double v1 = *(double *)(v0 + 16);
  if (*(unsigned char *)(v0 + 24))
  {
    (*(void (**)(void, void, double))(*(void *)(v0 + 104) + 8))(*(void *)(v0 + 112), *(void *)(v0 + 96), v1);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10048673C;
    uint64_t v3 = *(void *)(v0 + 120);
    return SFProgressTask.finalValue.getter(v0 + 25, v3);
  }
  else
  {
    uint64_t v4 = *(void (**)(double *))(v0 + 48);
    double v10 = v1 / *(double *)(v0 + 88);
    v4(&v10);
    uint64_t v5 = static AirDropActor.shared;
    uint64_t v6 = sub_10048DC10((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10048644C;
    uint64_t v8 = *(void *)(v0 + 96);
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 16, v5, v6, v8, v0 + 32);
  }
}

uint64_t sub_10048673C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 256) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 200);
    swift_release();
    uint64_t v4 = sub_100486DB4;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 200);
    uint64_t v4 = sub_100486864;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_100486864()
{
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 160);
  (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  int v9 = *(unsigned __int8 *)(v0 + 25);
  if (v9) {
    goto LABEL_5;
  }
  unint64_t v10 = *(void *)(v0 + 232) + 1;
  if (v10 != *(void *)(v0 + 224))
  {
    *(void *)(v0 + 232) = v10;
    uint64_t v20 = *(void *)(v0 + 216);
    if (v10 >= *(void *)(v20 + 16))
    {
      __break(1u);
    }
    else
    {
      int v21 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 208);
      uint64_t v22 = *(void *)(v0 + 160);
      uint64_t v23 = *(void *)(v0 + 168);
      uint64_t v24 = *(void *)(v0 + 144);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v23 + 16))(v24, v20+ ((*(unsigned __int8 *)(v0 + 268) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 268))+ *(void *)(v23 + 72) * v10, v22);
      v21(v24, 0, 1, v22);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v24, 1, v22) == 1) {
        goto LABEL_5;
      }
      uint64_t v25 = *(void *)(v0 + 176);
      uint64_t v26 = *(void *)(v0 + 136);
      uint64_t v27 = *(void *)(v0 + 80);
      (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 168) + 32))(v25, *(void *)(v0 + 144), *(void *)(v0 + 160));
      sub_100486EA8(v25, v27, v26);
      SFProgressTask.makeAsyncIterator()();
      uint64_t v28 = static AirDropActor.shared;
      uint64_t v29 = sub_10048DC10((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
      os_log_type_t v30 = (void *)swift_task_alloc();
      *(void *)(v0 + 240) = v30;
      *os_log_type_t v30 = v0;
      v30[1] = sub_10048644C;
      uint64_t v7 = *(void *)(v0 + 96);
      uint64_t v4 = v0 + 16;
      uint64_t v5 = v28;
      uint64_t v6 = v29;
      uint64_t v8 = v0 + 32;
    }
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v4, v5, v6, v7, v8);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 208))(*(void *)(v0 + 144), 1, 1, *(void *)(v0 + 160));
LABEL_5:
  swift_release();
  sub_100394300();
  uint64_t v11 = (void *)static NSUserDefaults.airdrop.getter();
  char v12 = SFAirDropUserDefaults.sensitiveContentOverride.getter();

  if (v12 == 2)
  {
    LOBYTE(v13) = v9;
  }
  else
  {
    int v13 = v12 & 1;
    if (qword_100969E38 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10000B47C(v14, (uint64_t)qword_100975198);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 67109376;
      *(_DWORD *)(v0 + 28) = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v17 + 8) = 1024;
      *(_DWORD *)(v0 + 264) = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "isContentSensitive returning sensitiveContentOverride {isSensitive: %{BOOL}d, override: %{BOOL}d}", (uint8_t *)v17, 0xEu);
      swift_slowDealloc();
    }
  }
  **(unsigned char **)(v0 + 40) = v13;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_100486CA4()
{
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  uint64_t v3 = v0[20];
  uint64_t v5 = v0[16];
  uint64_t v4 = v0[17];
  uint64_t v6 = v0[15];
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100486DB4()
{
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  uint64_t v3 = v0[20];
  (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100486EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v17[0] = a2;
  v17[1] = a3;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = 0;
  v18[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v18, "analyze(url: ");
  HIWORD(v18[1]) = -4864;
  v9._uint64_t countAndFlagsBits = URL.lastPathComponent.getter();
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 41;
  v10._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  v18[0] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v12 = (v7 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13 + v11, v8, v5);
  *(void *)(v13 + v12) = v3;
  uint64_t v14 = (void *)v17[0];
  *(void *)(v13 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8)) = v17[0];
  swift_retain();
  id v15 = v14;
  return SFProgressTask.init(_:initialProgress:operation:file:line:)();
}

uint64_t sub_1004870CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[19] = a5;
  v6[20] = a6;
  v6[17] = a3;
  v6[18] = a4;
  v6[15] = a1;
  v6[16] = a2;
  uint64_t v7 = type metadata accessor for URL.DirectoryHint();
  v6[21] = v7;
  v6[22] = *(void *)(v7 - 8);
  v6[23] = swift_task_alloc();
  uint64_t v8 = sub_10000A844((uint64_t *)&unk_10097F200);
  v6[24] = v8;
  v6[25] = *(void *)(v8 - 8);
  v6[26] = swift_task_alloc();
  v6[27] = swift_task_alloc();
  v6[28] = swift_task_alloc();
  uint64_t v9 = sub_10000A844(&qword_10096CC68);
  v6[29] = v9;
  v6[30] = *(void *)(v9 - 8);
  v6[31] = swift_task_alloc();
  v6[32] = swift_task_alloc();
  v6[33] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v6[34] = swift_task_alloc();
  v6[35] = swift_task_alloc();
  v6[36] = swift_task_alloc();
  v6[37] = swift_task_alloc();
  v6[38] = swift_task_alloc();
  v6[39] = swift_task_alloc();
  v6[40] = swift_task_alloc();
  v6[41] = swift_task_alloc();
  v6[42] = sub_10000A844(&qword_10096B5B0);
  v6[43] = swift_task_alloc();
  v6[44] = swift_task_alloc();
  v6[45] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for UTType();
  v6[46] = v10;
  v6[47] = *(void *)(v10 - 8);
  v6[48] = swift_task_alloc();
  v6[49] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v11 = static AirDropActor.shared;
  v6[50] = static AirDropActor.shared;
  return _swift_task_switch(sub_10048740C, v11, 0);
}

uint64_t sub_10048740C()
{
  uint64_t v1 = URL.pathExtension.getter();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v4 = v1 & 0xFFFFFFFFFFFFLL;
  }
  if (v4)
  {
    uint64_t v5 = v1;
    swift_bridgeObjectRetain();
    static UTType.data.getter();
    UTType.init(filenameExtension:conformingTo:)();
    _StringGuts.grow(_:)(35);
    swift_bridgeObjectRelease();
    v6._uint64_t countAndFlagsBits = v5;
    v6._unint64_t object = v3;
    String.append(_:)(v6);
    Optional.tryUnwrap(_:file:line:)();
    uint64_t v14 = *(void *)(v0 + 368);
    uint64_t v13 = *(void *)(v0 + 376);
    uint64_t v15 = *(void *)(v0 + 352);
    uint64_t v16 = *(void *)(v0 + 344);
    sub_10000A7E8(*(void *)(v0 + 360), &qword_10096B5B0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    static UTType.package.getter();
    UTType.init(filenameExtension:conformingTo:)();
    UTType.identifier.getter();
    sub_10024A330(v15, v16, &qword_10096B5B0);
    int v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v16, 1, v14);
    if (v17 == 1)
    {
      sub_10000A7E8(*(void *)(v0 + 344), &qword_10096B5B0);
      NSString v18 = 0;
      uint64_t v19 = 0;
    }
    else
    {
      uint64_t v20 = *(void *)(v0 + 368);
      uint64_t v21 = *(void *)(v0 + 376);
      uint64_t v22 = *(void *)(v0 + 344);
      UTType.identifier.getter();
      uint64_t v19 = v23;
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v20);
      swift_bridgeObjectRetain();
      NSString v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    int v24 = SFIsPhotosAssetBundle();

    if (v24)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v25 = objc_allocWithZone((Class)PFAssetBundle);
      URL._bridgeToObjectiveC()(v26);
      uint64_t v28 = v27;
      id v29 = [v25 initWithAssetBundleAtURL:v27];

      *(void *)(v0 + 96) = v29;
      _StringGuts.grow(_:)(19);
      swift_bridgeObjectRelease();
      uint64_t v30 = type metadata accessor for URL();
      sub_10048DC10((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
      v31._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v31);
      swift_bridgeObjectRelease();
      sub_10000A844(&qword_1009753A0);
      Optional.tryUnwrap(_:file:line:)();
      swift_bridgeObjectRelease();

      uint64_t v32 = *(void **)(v0 + 88);
      *(void *)(v0 + 408) = v32;
      id v33 = [v32 photoURL];
      if (v33)
      {
        uint64_t v34 = v33;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v35 = 0;
      }
      else
      {
        uint64_t v35 = 1;
      }
      uint64_t v76 = *(void *)(v0 + 320);
      uint64_t v75 = *(void *)(v0 + 328);
      uint64_t v113 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56);
      v113(v76, v35, 1, v30);
      sub_1003D2B28(v76, v75);
      id v77 = [v32 videoURL];
      if (v77)
      {
        unint64_t v78 = v77;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v79 = 0;
      }
      else
      {
        uint64_t v79 = 1;
      }
      uint64_t v80 = *(void *)(v0 + 328);
      uint64_t v82 = *(void *)(v0 + 304);
      uint64_t v81 = *(void *)(v0 + 312);
      uint64_t v83 = *(void *)(v0 + 264);
      unint64_t v84 = *(void **)(v0 + 160);
      uint64_t v85 = *(void *)(v0 + 144);
      v113(v82, v79, 1, v30);
      sub_1003D2B28(v82, v81);
      sub_10048A830(v85, v80, v81, v84, v83);
      SFProgressTask.makeAsyncIterator()();
      uint64_t v86 = static AirDropActor.shared;
      uint64_t v87 = sub_10048DC10((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
      uint64_t v88 = (void *)swift_task_alloc();
      *(void *)(v0 + 416) = v88;
      void *v88 = v0;
      v88[1] = sub_10048857C;
      uint64_t v62 = *(void *)(v0 + 192);
      uint64_t v63 = v0 + 32;
      uint64_t v66 = v0 + 112;
      uint64_t v64 = v86;
      uint64_t v65 = v87;
      goto LABEL_50;
    }
    if (v19)
    {
      NSString v36 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v36 = 0;
    }
    int v37 = SFIsLivePhotos();

    if (v37)
    {
      uint64_t v38 = *(void *)(v0 + 296);
      uint64_t v39 = *(void *)(v0 + 144);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v40 = type metadata accessor for URL();
      uint64_t v41 = *(void *)(v40 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v38, v39, v40);
      uint64_t v114 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
      v114(v38, 0, 1, v40);
      int v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v38, 1, v40);
      int v44 = 0;
      if (v42 != 1)
      {
        uint64_t v45 = *(void *)(v0 + 296);
        URL._bridgeToObjectiveC()(v43);
        int v44 = v46;
        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v45, v40);
      }
      id v47 = [objc_allocWithZone((Class)PFVideoComplement) initWithBundleAtURL:v44];

      *(void *)(v0 + 64) = v47;
      _StringGuts.grow(_:)(22);
      swift_bridgeObjectRelease();
      sub_10048DC10((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
      v48._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v48);
      swift_bridgeObjectRelease();
      sub_10000A844(&qword_100975398);
      Optional.tryUnwrap(_:file:line:)();
      swift_bridgeObjectRelease();

      uint64_t v67 = *(void **)(v0 + 72);
      *(void *)(v0 + 440) = v67;
      id v68 = [v67 imagePath];
      if (v68
        && (uint64_t v69 = v68, static String._unconditionallyBridgeFromObjectiveC(_:)(), v71 = v70, v69, v71))
      {
        uint64_t v115 = *(void *)(v0 + 288);
        uint64_t v72 = *(void *)(v0 + 176);
        uint64_t v73 = *(void *)(v0 + 184);
        uint64_t v74 = *(void *)(v0 + 168);
        v114(*(void *)(v0 + 280), 1, 1, v40);
        (*(void (**)(uint64_t, void, uint64_t))(v72 + 104))(v73, enum case for URL.DirectoryHint.inferFromPath(_:), v74);
        swift_bridgeObjectRetain();
        URL.init(filePath:directoryHint:relativeTo:)();
        v114(v115, 0, 1, v40);
        swift_bridgeObjectRelease();
      }
      else
      {
        v114(*(void *)(v0 + 288), 1, 1, v40);
      }
      id v95 = [v67 videoPath];
      if (v95)
      {
        uint64_t v96 = v95;
        uint64_t v98 = *(void *)(v0 + 272);
        uint64_t v97 = *(void *)(v0 + 280);
        uint64_t v100 = *(void *)(v0 + 176);
        uint64_t v99 = *(void *)(v0 + 184);
        uint64_t v101 = *(void *)(v0 + 168);
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        v114(v97, 1, 1, v40);
        (*(void (**)(uint64_t, void, uint64_t))(v100 + 104))(v99, enum case for URL.DirectoryHint.inferFromPath(_:), v101);
        swift_bridgeObjectRetain();
        URL.init(filePath:directoryHint:relativeTo:)();
        v114(v98, 0, 1, v40);
        swift_bridgeObjectRelease();
      }
      else
      {
        v114(*(void *)(v0 + 272), 1, 1, v40);
      }
      sub_10048A830(*(void *)(v0 + 144), *(void *)(v0 + 288), *(void *)(v0 + 272), *(void **)(v0 + 160), *(void *)(v0 + 256));
      SFProgressTask.makeAsyncIterator()();
      uint64_t v102 = static AirDropActor.shared;
      uint64_t v103 = sub_10048DC10((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
      uint64_t v104 = (void *)swift_task_alloc();
      *(void *)(v0 + 448) = v104;
      *uint64_t v104 = v0;
      v104[1] = sub_100488B68;
      uint64_t v62 = *(void *)(v0 + 192);
      uint64_t v63 = v0 + 48;
      uint64_t v64 = v102;
      uint64_t v65 = v103;
      uint64_t v66 = v0 + 80;
      goto LABEL_50;
    }
    NSString v50 = String._bridgeToObjectiveC()();
    int v51 = SFIsImage();

    if (v51)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v52 = (void *)swift_task_alloc();
      *(void *)(v0 + 472) = v52;
      void *v52 = v0;
      v52[1] = sub_100489154;
      uint64_t v53 = *(void *)(v0 + 160);
      uint64_t v54 = *(void *)(v0 + 144);
      return sub_10048D6A0(v54, v53);
    }
    NSString v55 = String._bridgeToObjectiveC()();
    int v56 = SFIsVideo();

    if (v56)
    {
      uint64_t v57 = *(void **)(v0 + 160);
      uint64_t v58 = *(void *)(v0 + 144);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10048BD60(v58, v57);
      SFProgressTask.makeAsyncIterator()();
      uint64_t v59 = static AirDropActor.shared;
      uint64_t v60 = sub_10048DC10((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
      long long v61 = (void *)swift_task_alloc();
      *(void *)(v0 + 480) = v61;
      *long long v61 = v0;
      v61[1] = sub_100489410;
      uint64_t v62 = *(void *)(v0 + 192);
      uint64_t v63 = v0 + 16;
      uint64_t v64 = v59;
      uint64_t v65 = v60;
      uint64_t v66 = v0 + 104;
LABEL_50:
      return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v63, v64, v65, v62, v66);
    }
    NSString v89 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v90 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    int v91 = SFIsContact();

    if (v91)
    {
      uint64_t v92 = (void *)swift_task_alloc();
      *(void *)(v0 + 504) = v92;
      *uint64_t v92 = v0;
      v92[1] = sub_1004899C4;
      uint64_t v93 = *(void *)(v0 + 160);
      uint64_t v94 = *(void *)(v0 + 144);
      return sub_10048DE4C(v94, v93);
    }
    if (qword_100969E38 != -1) {
      swift_once();
    }
    uint64_t v105 = type metadata accessor for Logger();
    sub_10000B47C(v105, (uint64_t)qword_100975198);
    uint64_t v106 = Logger.logObject.getter();
    os_log_type_t v107 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v106, v107))
    {
      v108 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v108 = 0;
      _os_log_impl((void *)&_mh_execute_header, v106, v107, "Unsupported file extension for sensitive analysis", v108, 2u);
      swift_slowDealloc();
    }
    uint64_t v109 = *(void *)(v0 + 392);
    uint64_t v110 = *(void *)(v0 + 368);
    uint64_t v111 = *(void *)(v0 + 376);
    uint64_t v112 = *(void *)(v0 + 352);
    uint64_t v11 = *(unsigned char **)(v0 + 120);

    sub_10000A7E8(v112, &qword_10096B5B0);
    (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v109, v110);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_100969E38 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10000B47C(v7, (uint64_t)qword_100975198);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Unsupported file extension for sensitive analysis", v10, 2u);
      swift_slowDealloc();
    }
    uint64_t v11 = *(unsigned char **)(v0 + 120);
  }
  *uint64_t v11 = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_10048857C()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 400);
  if (v0) {
    uint64_t v4 = sub_100489C80;
  }
  else {
    uint64_t v4 = sub_100488690;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100488690()
{
  uint64_t v11 = v0;
  if (*(unsigned char *)(v0 + 40))
  {
    (*(void (**)(void, void, double))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 224), *(void *)(v0 + 192), *(double *)(v0 + 32));
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 424) = v1;
    void *v1 = v0;
    v1[1] = sub_100488850;
    uint64_t v2 = *(void *)(v0 + 232);
    uint64_t v3 = *(void *)(v0 + 120);
    return SFProgressTask.finalValue.getter(v3, v2);
  }
  else
  {
    uint64_t v4 = *(void (**)(uint64_t *))(v0 + 128);
    uint64_t v10 = *(void *)(v0 + 32);
    v4(&v10);
    uint64_t v5 = static AirDropActor.shared;
    uint64_t v6 = sub_10048DC10((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 416) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10048857C;
    uint64_t v8 = *(void *)(v0 + 192);
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 32, v5, v6, v8, v0 + 112);
  }
}

uint64_t sub_100488850()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 432) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 400);
  if (v0) {
    uint64_t v4 = sub_100489E98;
  }
  else {
    uint64_t v4 = sub_10048897C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10048897C()
{
  uint64_t v1 = *(void *)(v0 + 392);
  uint64_t v2 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 376);
  uint64_t v4 = *(void *)(v0 + 352);
  uint64_t v5 = *(void *)(v0 + 328);
  uint64_t v6 = *(void *)(v0 + 312);
  uint64_t v7 = *(void *)(v0 + 264);
  uint64_t v8 = *(void *)(v0 + 232);
  uint64_t v9 = *(void *)(v0 + 240);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  sub_10000A7E8(v6, (uint64_t *)&unk_10096AC10);
  sub_10000A7E8(v5, (uint64_t *)&unk_10096AC10);
  sub_10000A7E8(v4, &qword_10096B5B0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_100488B68()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 400);
  if (v0) {
    uint64_t v4 = sub_10048A08C;
  }
  else {
    uint64_t v4 = sub_100488C7C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100488C7C()
{
  uint64_t v11 = v0;
  if (*(unsigned char *)(v0 + 56))
  {
    (*(void (**)(void, void, double))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 192), *(double *)(v0 + 48));
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 456) = v1;
    void *v1 = v0;
    v1[1] = sub_100488E3C;
    uint64_t v2 = *(void *)(v0 + 232);
    uint64_t v3 = *(void *)(v0 + 120);
    return SFProgressTask.finalValue.getter(v3, v2);
  }
  else
  {
    uint64_t v4 = *(void (**)(uint64_t *))(v0 + 128);
    uint64_t v10 = *(void *)(v0 + 48);
    v4(&v10);
    uint64_t v5 = static AirDropActor.shared;
    uint64_t v6 = sub_10048DC10((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 448) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100488B68;
    uint64_t v8 = *(void *)(v0 + 192);
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 48, v5, v6, v8, v0 + 80);
  }
}

uint64_t sub_100488E3C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 464) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 400);
  if (v0) {
    uint64_t v4 = sub_10048A2A4;
  }
  else {
    uint64_t v4 = sub_100488F68;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100488F68()
{
  uint64_t v1 = *(void *)(v0 + 392);
  uint64_t v2 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 376);
  uint64_t v4 = *(void *)(v0 + 352);
  uint64_t v5 = *(void *)(v0 + 288);
  uint64_t v6 = *(void *)(v0 + 272);
  uint64_t v7 = *(void *)(v0 + 256);
  uint64_t v8 = *(void *)(v0 + 232);
  uint64_t v9 = *(void *)(v0 + 240);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  sub_10000A7E8(v6, (uint64_t *)&unk_10096AC10);
  sub_10000A7E8(v5, (uint64_t *)&unk_10096AC10);
  sub_10000A7E8(v4, &qword_10096B5B0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_100489154(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 400);
  *(unsigned char *)(*(void *)v1 + 25) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10048926C, v2, 0);
}

uint64_t sub_10048926C()
{
  char v1 = *(unsigned char *)(v0 + 25);
  uint64_t v2 = *(void *)(v0 + 392);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 376);
  uint64_t v5 = *(unsigned char **)(v0 + 120);
  sub_10000A7E8(*(void *)(v0 + 352), &qword_10096B5B0);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  *uint64_t v5 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100489410()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 400);
  if (v0) {
    uint64_t v4 = sub_10048A498;
  }
  else {
    uint64_t v4 = sub_100489524;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100489524()
{
  uint64_t v11 = v0;
  if (*(unsigned char *)(v0 + 24))
  {
    (*(void (**)(void, void, double))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 192), *(double *)(v0 + 16));
    char v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 488) = v1;
    void *v1 = v0;
    v1[1] = sub_1004896E4;
    uint64_t v2 = *(void *)(v0 + 232);
    uint64_t v3 = *(void *)(v0 + 120);
    return SFProgressTask.finalValue.getter(v3, v2);
  }
  else
  {
    uint64_t v4 = *(void (**)(uint64_t *))(v0 + 128);
    uint64_t v10 = *(void *)(v0 + 16);
    v4(&v10);
    uint64_t v5 = static AirDropActor.shared;
    uint64_t v6 = sub_10048DC10((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 480) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100489410;
    uint64_t v8 = *(void *)(v0 + 192);
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 16, v5, v6, v8, v0 + 104);
  }
}

uint64_t sub_1004896E4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 496) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 400);
  if (v0) {
    uint64_t v4 = sub_10048A674;
  }
  else {
    uint64_t v4 = sub_100489810;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100489810()
{
  uint64_t v1 = v0[49];
  uint64_t v2 = v0[46];
  uint64_t v3 = v0[47];
  uint64_t v4 = v0[44];
  (*(void (**)(void, void))(v0[30] + 8))(v0[31], v0[29]);
  sub_10000A7E8(v4, &qword_10096B5B0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1004899C4(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 400);
  *(unsigned char *)(*(void *)v1 + 26) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100489ADC, v2, 0);
}

uint64_t sub_100489ADC()
{
  char v1 = *(unsigned char *)(v0 + 26);
  uint64_t v2 = *(void *)(v0 + 392);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 376);
  uint64_t v5 = *(unsigned char **)(v0 + 120);
  sub_10000A7E8(*(void *)(v0 + 352), &qword_10096B5B0);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  *uint64_t v5 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100489C80()
{
  uint64_t v1 = *(void *)(v0 + 376);
  uint64_t v13 = *(void *)(v0 + 368);
  uint64_t v14 = *(void *)(v0 + 392);
  uint64_t v12 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 328);
  uint64_t v3 = *(void *)(v0 + 312);
  uint64_t v4 = *(void *)(v0 + 264);
  uint64_t v6 = *(void *)(v0 + 232);
  uint64_t v5 = *(void *)(v0 + 240);
  uint64_t v7 = *(void *)(v0 + 224);
  uint64_t v9 = *(void *)(v0 + 192);
  uint64_t v8 = *(void *)(v0 + 200);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_10000A7E8(v3, (uint64_t *)&unk_10096AC10);
  sub_10000A7E8(v2, (uint64_t *)&unk_10096AC10);
  sub_10000A7E8(v12, &qword_10096B5B0);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v14, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_100489E98()
{
  uint64_t v1 = *(void *)(v0 + 392);
  uint64_t v2 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 376);
  uint64_t v4 = *(void *)(v0 + 352);
  uint64_t v5 = *(void *)(v0 + 328);
  uint64_t v6 = *(void *)(v0 + 312);
  uint64_t v7 = *(void *)(v0 + 264);
  uint64_t v8 = *(void *)(v0 + 232);
  uint64_t v9 = *(void *)(v0 + 240);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  sub_10000A7E8(v6, (uint64_t *)&unk_10096AC10);
  sub_10000A7E8(v5, (uint64_t *)&unk_10096AC10);
  sub_10000A7E8(v4, &qword_10096B5B0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_10048A08C()
{
  uint64_t v1 = *(void *)(v0 + 376);
  uint64_t v13 = *(void *)(v0 + 368);
  uint64_t v14 = *(void *)(v0 + 392);
  uint64_t v12 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 272);
  uint64_t v4 = *(void *)(v0 + 256);
  uint64_t v6 = *(void *)(v0 + 232);
  uint64_t v5 = *(void *)(v0 + 240);
  uint64_t v7 = *(void *)(v0 + 216);
  uint64_t v9 = *(void *)(v0 + 192);
  uint64_t v8 = *(void *)(v0 + 200);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_10000A7E8(v3, (uint64_t *)&unk_10096AC10);
  sub_10000A7E8(v2, (uint64_t *)&unk_10096AC10);
  sub_10000A7E8(v12, &qword_10096B5B0);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v14, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_10048A2A4()
{
  uint64_t v1 = *(void *)(v0 + 392);
  uint64_t v2 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 376);
  uint64_t v4 = *(void *)(v0 + 352);
  uint64_t v5 = *(void *)(v0 + 288);
  uint64_t v6 = *(void *)(v0 + 272);
  uint64_t v7 = *(void *)(v0 + 256);
  uint64_t v8 = *(void *)(v0 + 232);
  uint64_t v9 = *(void *)(v0 + 240);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  sub_10000A7E8(v6, (uint64_t *)&unk_10096AC10);
  sub_10000A7E8(v5, (uint64_t *)&unk_10096AC10);
  sub_10000A7E8(v4, &qword_10096B5B0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_10048A498()
{
  uint64_t v1 = v0[49];
  uint64_t v2 = v0[46];
  uint64_t v3 = v0[47];
  uint64_t v4 = v0[44];
  uint64_t v6 = v0[30];
  uint64_t v5 = v0[31];
  uint64_t v7 = v0[29];
  (*(void (**)(void, void))(v0[25] + 8))(v0[26], v0[24]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  sub_10000A7E8(v4, &qword_10096B5B0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10048A674()
{
  uint64_t v1 = v0[49];
  uint64_t v2 = v0[46];
  uint64_t v3 = v0[47];
  uint64_t v4 = v0[44];
  (*(void (**)(void, void))(v0[30] + 8))(v0[31], v0[29]);
  sub_10000A7E8(v4, &qword_10096B5B0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_10048A830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  id v68 = a4;
  uint64_t v69 = a5;
  uint64_t v63 = a1;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v65 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v64 = (char *)&v61 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v61 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v67 = (char *)&v61 - v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v61 - v18;
  uint64_t v20 = sub_10000A844(&qword_100975348);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (uint64_t)&v23[*(int *)(v21 + 56)];
  sub_10024A330(a2, (uint64_t)v23, (uint64_t *)&unk_10096AC10);
  sub_10024A330(a3, v24, (uint64_t *)&unk_10096AC10);
  id v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(a3) = v25(v23, 1, v7);
  int v26 = v25((char *)v24, 1, v7);
  int v27 = v26;
  if (a3 == 1)
  {
    uint64_t v28 = v7;
    if (v26 == 1)
    {
      if (qword_100969E38 != -1) {
        swift_once();
      }
      uint64_t v29 = type metadata accessor for Logger();
      sub_10000B47C(v29, (uint64_t)qword_100975198);
      uint64_t v30 = v65;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v65, v63, v7);
      Swift::String v31 = Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v31, v32))
      {
        id v33 = (uint8_t *)swift_slowAlloc();
        uint64_t v70 = (char *)swift_slowAlloc();
        *(_DWORD *)id v33 = 136315138;
        sub_10048DC10((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v72 = sub_100254634(v34, v35, (uint64_t *)&v70);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v30, v7);
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Live Photo URL is missing both image and video - treating a non-sensitive {baseURL: %s}", v33, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v30, v7);
      }

      uint64_t v70 = 0;
      return SFProgressTask.init(_:initialProgress:operation:file:line:)();
    }
    else
    {
      uint64_t v45 = v8;
      unint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 32);
      uint64_t v47 = v28;
      v46(v19, v24, v28);
      sub_10048BD60((uint64_t)v19, v68);
      return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v19, v47);
    }
  }
  else
  {
    uint64_t v65 = *(char **)(v8 + 32);
    ((void (*)(char *, char *, uint64_t))v65)(v19, v23, v7);
    if (v27 == 1)
    {
      uint64_t v70 = 0;
      unint64_t v71 = 0xE000000000000000;
      _StringGuts.grow(_:)(21);
      swift_bridgeObjectRelease();
      uint64_t v70 = (char *)0xD000000000000012;
      unint64_t v71 = 0x80000001007BE660;
      v36._uint64_t countAndFlagsBits = URL.lastPathComponent.getter();
      String.append(_:)(v36);
      swift_bridgeObjectRelease();
      v37._uint64_t countAndFlagsBits = 41;
      v37._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v37);
      uint64_t v64 = v70;
      uint64_t v70 = 0;
      uint64_t v38 = v67;
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v67, v19, v7);
      unint64_t v39 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v40 = swift_allocObject();
      uint64_t v41 = v65;
      *(void *)(v40 + 16) = v66;
      ((void (*)(unint64_t, char *, uint64_t))v41)(v40 + v39, v38, v7);
      int v42 = v68;
      *(void *)(v40 + ((v9 + v39 + 7) & 0xFFFFFFFFFFFFFFF8)) = v68;
      swift_retain();
      id v43 = v42;
      SFProgressTask.init(_:initialProgress:operation:file:line:)();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v19, v7);
    }
    else
    {
      uint64_t v62 = v19;
      Swift::String v48 = v67;
      ((void (*)(void))v65)();
      uint64_t v70 = 0;
      uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v49(v15, v62, v7);
      NSString v50 = v64;
      v49(v64, v48, v7);
      uint64_t v51 = *(unsigned __int8 *)(v8 + 80);
      uint64_t v52 = (v51 + 24) & ~v51;
      unint64_t v53 = (v9 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v54 = (v51 + v53 + 8) & ~v51;
      uint64_t v55 = swift_allocObject();
      *(void *)(v55 + 16) = v66;
      uint64_t v56 = v55 + v52;
      uint64_t v57 = v65;
      ((void (*)(uint64_t, char *, uint64_t))v65)(v56, v15, v7);
      uint64_t v58 = v68;
      *(void *)(v55 + v53) = v68;
      ((void (*)(uint64_t, char *, uint64_t))v57)(v55 + v54, v50, v7);
      swift_retain();
      id v59 = v58;
      SFProgressTask.init(_:initialProgress:operation:file:line:)();
      uint64_t v60 = *(void (**)(char *, uint64_t))(v8 + 8);
      v60(v67, v7);
      return ((uint64_t (*)(char *, uint64_t))v60)(v62, v7);
    }
  }
}

uint64_t sub_10048B034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a1;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  v6[3] = static AirDropActor.shared;
  uint64_t v9 = (void *)swift_task_alloc();
  v6[4] = v9;
  void *v9 = v6;
  v9[1] = sub_10048B114;
  return sub_10048D6A0(a5, a6);
}

uint64_t sub_10048B114(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 24);
  *(unsigned char *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10048B22C, v2, 0);
}

uint64_t sub_10048B22C()
{
  **(unsigned char **)(v0 + 16) = *(unsigned char *)(v0 + 40);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10048B250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a3;
  v7[8] = a4;
  v7[5] = a1;
  v7[6] = a2;
  uint64_t v10 = sub_10000A844((uint64_t *)&unk_10097F200);
  v7[11] = v10;
  v7[12] = *(void *)(v10 - 8);
  v7[13] = swift_task_alloc();
  uint64_t v11 = sub_10000A844(&qword_10096CC68);
  v7[14] = v11;
  v7[15] = *(void *)(v11 - 8);
  v7[16] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  v7[17] = static AirDropActor.shared;
  uint64_t v12 = (void *)swift_task_alloc();
  v7[18] = v12;
  *uint64_t v12 = v7;
  v12[1] = sub_10048B3F8;
  return sub_10048D6A0(a5, a6);
}

uint64_t sub_10048B3F8(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 136);
  *(unsigned char *)(*(void *)v1 + 25) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10048B510, v2, 0);
}

uint64_t sub_10048B510()
{
  uint64_t v11 = v0;
  if (*(unsigned char *)(v0 + 25) == 1)
  {
    **(unsigned char **)(v0 + 40) = 1;
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 72);
    uint64_t v3 = *(void *)(v0 + 80);
    uint64_t v5 = *(void (**)(uint64_t *))(v0 + 48);
    uint64_t v10 = 0x3FE0000000000000;
    v5(&v10);
    sub_10048BD60(v3, v4);
    SFProgressTask.makeAsyncIterator()();
    uint64_t v6 = static AirDropActor.shared;
    uint64_t v7 = sub_10048DC10((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_10048B6DC;
    uint64_t v9 = *(void *)(v0 + 88);
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 16, v6, v7, v9, v0 + 32);
  }
}

uint64_t sub_10048B6DC()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 136);
  if (v0) {
    uint64_t v4 = sub_10048BB70;
  }
  else {
    uint64_t v4 = sub_10048B7F0;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10048B7F0()
{
  uint64_t v12 = v0;
  double v1 = *(double *)(v0 + 16);
  if (*(unsigned char *)(v0 + 24))
  {
    (*(void (**)(void, void, double))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 104), *(void *)(v0 + 88), v1);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10048B9BC;
    uint64_t v3 = *(void *)(v0 + 112);
    uint64_t v4 = *(void *)(v0 + 40);
    return SFProgressTask.finalValue.getter(v4, v3);
  }
  else
  {
    uint64_t v5 = *(void (**)(double *))(v0 + 48);
    double v11 = v1 * 0.5 + 0.5;
    v5(&v11);
    uint64_t v6 = static AirDropActor.shared;
    uint64_t v7 = sub_10048DC10((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_10048B6DC;
    uint64_t v9 = *(void *)(v0 + 88);
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 16, v6, v7, v9, v0 + 32);
  }
}

uint64_t sub_10048B9BC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 136);
  if (v0) {
    uint64_t v4 = sub_10048BC1C;
  }
  else {
    uint64_t v4 = sub_10048BAE8;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10048BAE8()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  double v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10048BB70()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10048BC1C()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10048BCA4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v2 = static AirDropActor.shared;
  return _swift_task_switch(sub_10048BD40, v2, 0);
}

uint64_t sub_10048BD40()
{
  **(unsigned char **)(v0 + 16) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10048BD60(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v13, "analyzeVideo(");
  HIWORD(v13[1]) = -4864;
  v7._uint64_t countAndFlagsBits = URL.lastPathComponent.getter();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 41;
  v8._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  v13[0] = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  id v11 = a2;
  return SFProgressTask.init(_:initialProgress:operation:file:line:)();
}

uint64_t sub_10048BF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  uint64_t v5[2] = a1;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v5[5] = static AirDropActor.shared;
  return _swift_task_switch(sub_10048C004, v6, 0);
}

uint64_t sub_10048C004()
{
  *(void *)(v0 + 48) = SCSensitivityAnalyzer.videoAnalysis(forFileAt:)();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  void *v1 = v0;
  v1[1] = sub_10048C0A4;
  return SCSensitivityAnalyzer.VideoAnalysisHandler.hasSensitiveContent()();
}

uint64_t sub_10048C0A4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 40);
    uint64_t v6 = sub_10048C268;
  }
  else
  {
    uint64_t v7 = *(void *)(v4 + 40);
    swift_release();
    *(void *)(v4 + 72) = a1;
    uint64_t v6 = sub_10048C1E0;
    uint64_t v5 = v7;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_10048C1E0()
{
  uint64_t v1 = (void *)v0[9];
  uint64_t v2 = (unsigned __int8 *)v0[2];
  unsigned __int8 v3 = [v1 isSensitive];

  *uint64_t v2 = v3;
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10048C268()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for SDAirDropUserSafetyContentHandler()
{
  return self;
}

unint64_t sub_10048C2F0()
{
  id v0 = [self analysisFeatureEnablement];
  _StringGuts.grow(_:)(45);
  swift_bridgeObjectRelease();
  if (v0 == (id)1) {
    uint64_t v1 = 1702195828;
  }
  else {
    uint64_t v1 = 0x65736C6166;
  }
  if (v0 == (id)1) {
    uint64_t v2 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v2 = (void *)0xE500000000000000;
  }
  if (v0 == (id)2) {
    uint64_t v3 = 1702195828;
  }
  else {
    uint64_t v3 = 0x65736C6166;
  }
  if (v0 == (id)2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  unint64_t v5 = v4;
  String.append(_:)(*(Swift::String *)&v3);
  swift_bridgeObjectRelease();
  v6._unint64_t object = (void *)0x80000001007BE560;
  v6._uint64_t countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v6);
  v7._uint64_t countAndFlagsBits = v1;
  v7._unint64_t object = v2;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  return 0xD000000000000015;
}

void sub_10048C410()
{
  uint64_t v0 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = SFAirDropReceive.AskRequest.files.getter();
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
LABEL_20:
    NSString v23 = String._bridgeToObjectiveC()();
    id v24 = (id)SFLocalizedStringForKey();

    if (!v24) {
      goto LABEL_32;
    }
    goto LABEL_21;
  }
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  Swift::String v7 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  uint64_t v6 = v1 + 16;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 64);
  v29[1] = v4;
  uint64_t v9 = v4 + ((v8 + 32) & ~v8);
  uint64_t v32 = *(void *)(v6 + 56);
  id v33 = v7;
  uint64_t v10 = (void (**)(char *, uint64_t))(v6 - 8);
  while (1)
  {
    uint64_t v11 = v6;
    v33(v3, v9, v0);
    SFAirDropReceive.AskRequest.ItemInfo.fileType.getter();
    NSString v12 = String._bridgeToObjectiveC()();
    int v13 = SFIsPhotosAssetBundle();

    if (v13)
    {
      swift_bridgeObjectRelease();
      SFAirDropReceive.AskRequest.ItemInfo.fileSubType.getter();
      if (!v14)
      {
        (*v10)(v3, v0);
        goto LABEL_4;
      }
    }
    NSString v15 = String._bridgeToObjectiveC()();
    int v16 = SFIsImage();

    if (!v16) {
      break;
    }
    (*v10)(v3, v0);
    swift_bridgeObjectRelease();
    if (__OFADD__(v31, 1)) {
      goto LABEL_31;
    }
    ++v31;
LABEL_4:
    uint64_t v6 = v11;
    v9 += v32;
    if (!--v5) {
      goto LABEL_14;
    }
  }
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  int v18 = SFIsVideo();

  (*v10)(v3, v0);
  if (!v18) {
    goto LABEL_4;
  }
  if (!__OFADD__(v30++, 1)) {
    goto LABEL_4;
  }
  __break(1u);
LABEL_14:
  swift_bridgeObjectRelease();
  uint64_t v20 = v31;
  if (v31)
  {
    if (v31 == 1)
    {
      if (!v30)
      {
        NSString v21 = String._bridgeToObjectiveC()();
        id v22 = (id)SFLocalizedStringForKey();

        if (!v22)
        {
          __break(1u);
          goto LABEL_19;
        }
        goto LABEL_28;
      }
LABEL_27:
      NSString v27 = String._bridgeToObjectiveC()();
      id v22 = (id)SFLocalizedStringForKey();

      if (!v22) {
        goto LABEL_33;
      }
      goto LABEL_28;
    }
LABEL_26:
    if (!v30) {
      goto LABEL_20;
    }
    goto LABEL_27;
  }
  uint64_t v20 = v30;
  if (!v30) {
    goto LABEL_20;
  }
  if (v30 == 1)
  {
    NSString v26 = String._bridgeToObjectiveC()();
    id v22 = (id)SFLocalizedStringForKey();

    if (v22)
    {
LABEL_28:
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      return;
    }
    __break(1u);
    goto LABEL_26;
  }
  NSString v28 = String._bridgeToObjectiveC()();
  id v24 = (id)SFLocalizedStringForKey();

  if (v24)
  {
LABEL_21:
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_10076E7A0;
    *(void *)(v25 + 56) = &type metadata for Int;
    *(void *)(v25 + 64) = &protocol witness table for Int;
    *(void *)(v25 + 32) = v20;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

uint64_t sub_10048C85C(uint64_t a1)
{
  *(void *)(v1 + 128) = a1;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v2 = static AirDropActor.shared;
  *(void *)(v1 + 136) = static AirDropActor.shared;
  return _swift_task_switch(sub_10048C8FC, v2, 0);
}

uint64_t sub_10048C8FC()
{
  uint64_t v1 = v0[16];
  id v2 = [objc_allocWithZone((Class)SCSensitivityAnalyzer) init];
  v0[18] = v2;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_10048CA28;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100336194;
  v0[13] = &unk_1008DBF88;
  v0[14] = v3;
  [v2 analyzeCGImage:v1 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10048CA28()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 152) = v2;
  uint64_t v3 = *(void *)(v1 + 136);
  if (v2) {
    uint64_t v4 = sub_10048CD10;
  }
  else {
    uint64_t v4 = sub_10048CB48;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10048CB48()
{
  uint64_t v1 = *(void **)(v0 + 120);
  id v2 = [v1 isSensitive];

  sub_100394300();
  uint64_t v3 = (void *)static NSUserDefaults.airdrop.getter();
  char v4 = SFAirDropUserDefaults.sensitivePreviewOverride.getter();

  if (v4 != 2)
  {
    if (qword_100969E38 != -1) {
      swift_once();
    }
    uint64_t v5 = (void *)(v4 & 1);
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_100975198);
    Swift::String v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 67109376;
      *(_DWORD *)(v0 + 80) = v2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v9 + 8) = 1024;
      *(_DWORD *)(v0 + 80) = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "isPreviewSensitive returning sensitivePreviewOverride {isSensitive: %{BOOL}d, override: %{BOOL}d}", (uint8_t *)v9, 0xEu);
      swift_slowDealloc();
    }

    id v2 = v5;
  }

  uint64_t v10 = *(uint64_t (**)(id))(v0 + 8);
  return v10(v2);
}

uint64_t sub_10048CD10()
{
  swift_willThrow();
  p_inst_meths = &OBJC_PROTOCOL___NSNetServiceBrowserDelegate.inst_meths;
  if (qword_100969E38 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_100975198);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 80) = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "UserSafety analyze failed: %@", v5, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    p_inst_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___NSNetServiceBrowserDelegate + 24);
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100394300();
  os_log_type_t v8 = (void *)static NSUserDefaults.airdrop.getter();
  char v9 = SFAirDropUserDefaults.sensitivePreviewOverride.getter();

  if (v9 == 2)
  {
    uint64_t v10 = 0;
  }
  else
  {
    if (p_inst_meths[455] != (__objc2_meth_list *)-1) {
      swift_once();
    }
    uint64_t v10 = v9 & 1;
    sub_10000B47C(v2, (uint64_t)qword_100975198);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 67109376;
      *(_DWORD *)(v0 + 80) = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v13 + 8) = 1024;
      *(_DWORD *)(v0 + 80) = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "isPreviewSensitive returning sensitivePreviewOverride {isSensitive: %{BOOL}d, override: %{BOOL}d}", (uint8_t *)v13, 0xEu);
      swift_slowDealloc();
    }
  }
  uint64_t v14 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v14(v10);
}

uint64_t sub_10048D068()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10048D134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = v3 + ((*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v11;
  *uint64_t v11 = v4;
  v11[1] = sub_10000A6F0;
  return sub_10048BF60(a1, a2, a3, v9, v10);
}

uint64_t sub_10048D234()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  unint64_t v7 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = (v3 + v7 + 8) & ~v3;
  uint64_t v9 = v8 + v5;
  swift_release();
  uint64_t v10 = v0 + v4;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v11(v10, v1);

  v11(v0 + v8, v1);

  return _swift_deallocObject(v0, v9, v6);
}

uint64_t sub_10048D33C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v9 + 24) & ~v9;
  unint64_t v11 = (*(void *)(v8 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(v3 + 16);
  uint64_t v13 = v3 + v10;
  uint64_t v14 = *(void *)(v3 + v11);
  uint64_t v15 = v3 + ((v9 + v11 + 8) & ~v9);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v16;
  *uint64_t v16 = v4;
  v16[1] = sub_10000A6F0;
  return sub_10048B250(a1, a2, a3, v12, v13, v14, v15);
}

uint64_t sub_10048D488()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10048D570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v3 + 16);
  uint64_t v11 = v3 + v9;
  uint64_t v12 = *(void *)(v3 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v13;
  *uint64_t v13 = v4;
  v13[1] = sub_10000A6F0;
  return sub_10048B034(a1, a2, a3, v10, v11, v12);
}

uint64_t sub_10048D6A0(uint64_t a1, uint64_t a2)
{
  v2[16] = a1;
  v2[17] = a2;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v3 = static AirDropActor.shared;
  v2[18] = static AirDropActor.shared;
  return _swift_task_switch(sub_10048D740, v3, 0);
}

uint64_t sub_10048D740@<X0>(NSURL *a1@<X8>)
{
  uint64_t v2 = (void *)v1[17];
  URL._bridgeToObjectiveC()(a1);
  uint64_t v4 = v3;
  v1[19] = v3;
  v1[2] = v1;
  v1[7] = v1 + 15;
  v1[3] = sub_10048D854;
  uint64_t v5 = swift_continuation_init();
  v1[10] = _NSConcreteStackBlock;
  v1[11] = 0x40000000;
  v1[12] = sub_100336194;
  v1[13] = &unk_1008DC018;
  v1[14] = v5;
  [v2 analyzeImageFile:v4 completionHandler:v1 + 10];
  return _swift_continuation_await(v1 + 2);
}

uint64_t sub_10048D854()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 160) = v2;
  uint64_t v3 = *(void *)(v1 + 144);
  if (v2) {
    uint64_t v4 = sub_10048D9FC;
  }
  else {
    uint64_t v4 = sub_10048D974;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10048D974()
{
  uint64_t v1 = (void *)v0[19];
  uint64_t v2 = (void *)v0[15];
  id v3 = [v2 isSensitive];

  uint64_t v4 = (uint64_t (*)(id))v0[1];
  return v4(v3);
}

uint64_t sub_10048D9FC()
{
  uint64_t v1 = (void *)v0[19];
  swift_willThrow();

  if (qword_100969E38 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_100975198);
  swift_errorRetain();
  swift_errorRetain();
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "UserSafety analyze failed: %@", v5, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8(0);
}

uint64_t sub_10048DC10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10048DC58()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10048DD14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = v3 + v9;
  uint64_t v12 = *(void *)(v3 + v10);
  uint64_t v13 = *(void *)(v3 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v14;
  *uint64_t v14 = v4;
  v14[1] = sub_10000A6F0;
  return sub_1004870CC(a1, a2, a3, v11, v12, v13);
}

uint64_t sub_10048DE4C(uint64_t a1, uint64_t a2)
{
  v2[24] = a1;
  v2[25] = a2;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v3 = static AirDropActor.shared;
  v2[26] = static AirDropActor.shared;
  return _swift_task_switch(sub_10048DEEC, v3, 0);
}

uint64_t sub_10048DEEC()
{
  v0[27] = Data.init(contentsOf:options:)();
  v0[28] = v1;
  uint64_t v2 = self;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  v0[29] = isa;
  v0[10] = v0;
  v0[15] = v0 + 23;
  v0[11] = sub_10048E204;
  uint64_t v4 = swift_continuation_init();
  v0[18] = _NSConcreteStackBlock;
  v0[19] = 0x40000000;
  v0[20] = sub_100361C9C;
  v0[21] = &unk_1008DC058;
  v0[22] = v4;
  [v2 contactsWithData:isa completionHandler:v0 + 18];
  return _swift_continuation_await(v0 + 10);
}

uint64_t sub_10048E204()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 240) = v2;
  uint64_t v3 = *(void *)(v1 + 208);
  if (v2) {
    uint64_t v4 = sub_10048F544;
  }
  else {
    uint64_t v4 = sub_10048E324;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10048E324()
{
  uint64_t v60 = v0;
  uint64_t v2 = v0 + 23;
  unint64_t v1 = v0[23];
  uint64_t v3 = (void *)v0[29];
  v0[31] = v1;

  if (v1 >> 62)
  {
LABEL_42:
    swift_bridgeObjectRetain();
    uint64_t v57 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    v0[32] = v57;
    if (v57) {
      goto LABEL_3;
    }
LABEL_35:
    uint64_t v51 = v0[27];
    unint64_t v50 = v0[28];
    swift_bridgeObjectRelease();
    sub_100250CC4(v51, v50);
    uint64_t v52 = (uint64_t (*)(void))v0[1];
    return v52(0);
  }
  uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v0[32] = v4;
  if (!v4) {
    goto LABEL_35;
  }
LABEL_3:
  uint64_t v58 = v2;
  uint64_t v5 = 0;
  uint64_t v6 = &selRef_shouldBlockPresentation;
  p_inst_meths = &OBJC_PROTOCOL___NSNetServiceBrowserDelegate.inst_meths;
  while (1)
  {
    uint64_t v8 = v0[31];
    if ((v8 & 0xC000000000000001) != 0) {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v9 = *(id *)(v8 + 8 * v5 + 32);
    }
    unint64_t v10 = v9;
    v0[33] = v9;
    v0[34] = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if ([v9 v6[314]]) {
      break;
    }
    if (p_inst_meths[455] != (__objc2_meth_list *)-1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_10000B47C(v29, (uint64_t)qword_100975198);
    id v30 = v10;
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.default.getter();
    uint64_t v2 = (void *)v32;
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 138739971;
      *(void *)(v33 + 4) = v30;
      void *v34 = v30;
      unint64_t v35 = v31;
      os_log_type_t v36 = v2;
      Swift::String v37 = "Contact has no imageDataAvailable. Skipping {contact: %{sensitive}@}";
LABEL_27:
      _os_log_impl((void *)&_mh_execute_header, v35, v36, v37, (uint8_t *)v33, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      goto LABEL_5;
    }
LABEL_4:

LABEL_5:
    uint64_t v5 = v0[34];
    if (v5 == v0[32]) {
      goto LABEL_35;
    }
  }
  id v11 = [v10 imageData];
  if (!v11)
  {
    if (p_inst_meths[455] != (__objc2_meth_list *)-1) {
      swift_once();
    }
    uint64_t v38 = type metadata accessor for Logger();
    sub_10000B47C(v38, (uint64_t)qword_100975198);
    id v30 = v10;
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.default.getter();
    uint64_t v2 = (void *)v39;
    if (os_log_type_enabled(v31, v39))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v40 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 138739971;
      *(void *)(v33 + 4) = v30;
      *uint64_t v40 = v30;
      unint64_t v35 = v31;
      os_log_type_t v36 = v2;
      Swift::String v37 = "Contact has no imageData. Skipping {contact: %{sensitive}@}";
      goto LABEL_27;
    }
    goto LABEL_4;
  }
  uint64_t v12 = v11;
  uint64_t v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v15 = v14;

  v0[35] = v13;
  v0[36] = v15;
  id v16 = objc_allocWithZone((Class)UIImage);
  sub_10025ADCC(v13, v15);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v18 = [v16 initWithData:isa];
  v0[37] = v18;
  sub_100250CC4(v13, v15);

  if (!v18)
  {
    if (p_inst_meths[455] != (__objc2_meth_list *)-1) {
      swift_once();
    }
    uint64_t v41 = type metadata accessor for Logger();
    sub_10000B47C(v41, (uint64_t)qword_100975198);
    sub_10025ADCC(v13, v15);
    sub_10025ADCC(v13, v15);
    id v42 = v10;
    id v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.error.getter();
    uint64_t v2 = (void *)v44;
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      unint64_t v46 = (void *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      *(_DWORD *)uint64_t v45 = 138740227;
      *(void *)(v45 + 4) = v42;
      *unint64_t v46 = v42;
      *(_WORD *)(v45 + 12) = 2080;
      sub_10025ADCC(v13, v15);
      uint64_t v47 = Data.description.getter();
      unint64_t v49 = v48;
      sub_100250CC4(v13, v15);
      *(void *)(v45 + 14) = sub_100254634(v47, v49, &v59);
      swift_bridgeObjectRelease();
      sub_100250CC4(v13, v15);
      sub_100250CC4(v13, v15);
      _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v2, "Failed to create UIImage from contact.imageData {contact: %{sensitive}@, imageData: %s}", (uint8_t *)v45, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v6 = &selRef_shouldBlockPresentation;
      swift_slowDealloc();

      sub_100250CC4(v13, v15);
    }
    else
    {
      sub_100250CC4(v13, v15);

      sub_100250CC4(v13, v15);
      sub_100250CC4(v13, v15);
    }
    goto LABEL_34;
  }
  id v19 = [v18 CGImage];
  v0[38] = v19;
  if (!v19)
  {
    if (p_inst_meths[455] != (__objc2_meth_list *)-1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_10000B47C(v20, (uint64_t)qword_100975198);
    id v21 = v10;
    id v22 = v18;
    id v23 = v21;
    id v24 = v22;
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.error.getter();
    uint64_t v2 = (void *)v26;
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      NSString v28 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 138740227;
      *(void *)(v27 + 4) = v23;
      void *v28 = v23;

      *(_WORD *)(v27 + 12) = 2112;
      *(void *)(v27 + 14) = v24;
      v28[1] = v18;

      _os_log_impl((void *)&_mh_execute_header, v25, (os_log_type_t)v2, "Failed to get cgImage from contact.imageData {contact: %{sensitive}@, uiImage: %@}", (uint8_t *)v27, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100250CC4(v13, v15);
    }
    else
    {
      sub_100250CC4(v13, v15);
    }
    uint64_t v6 = &selRef_shouldBlockPresentation;
LABEL_34:
    p_inst_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___NSNetServiceBrowserDelegate + 24);
    goto LABEL_5;
  }
  id v54 = v19;
  uint64_t v55 = (void *)v0[25];
  v0[2] = v0;
  v0[7] = v58;
  v0[3] = sub_10048EBA0;
  uint64_t v56 = swift_continuation_init();
  v0[18] = _NSConcreteStackBlock;
  v0[19] = 0x40000000;
  v0[20] = sub_100336194;
  v0[21] = &unk_1008DC070;
  v0[22] = v56;
  [v55 analyzeCGImage:v54 completionHandler:v0 + 18];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10048EBA0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 312) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 208);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_10048F760;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v1 + 208);
    uint64_t v4 = sub_10048ECC8;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_10048ECC8()
{
  uint64_t v62 = v0;
  uint64_t v1 = (void *)v0[23];
  uint64_t v3 = (void *)v0[37];
  uint64_t v2 = (void *)v0[38];
  uint64_t v5 = v0[35];
  unint64_t v4 = v0[36];
  uint64_t v6 = (void *)v0[33];
  unsigned int v7 = [v1 isSensitive];
  sub_100250CC4(v5, v4);

  unsigned int v60 = v7;
  if ((v7 & 1) != 0 || (uint64_t v8 = v0[34], v8 == v0[32]))
  {
LABEL_3:
    uint64_t v9 = v0[27];
    unint64_t v10 = v0[28];
    swift_bridgeObjectRelease();
    sub_100250CC4(v9, v10);
    id v11 = (uint64_t (*)(void))v0[1];
    return v11(v60);
  }
  uint64_t v13 = &selRef_shouldBlockPresentation;
  p_inst_meths = &OBJC_PROTOCOL___NSNetServiceBrowserDelegate.inst_meths;
  while (1)
  {
    uint64_t v15 = v0[31];
    if ((v15 & 0xC000000000000001) != 0) {
      id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v16 = *(id *)(v15 + 8 * v8 + 32);
    }
    NSString v17 = v16;
    v0[33] = v16;
    v0[34] = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      return _swift_continuation_await(v16);
    }
    if ([v16 v13[314]]) {
      break;
    }
    if (p_inst_meths[455] != (__objc2_meth_list *)-1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    sub_10000B47C(v36, (uint64_t)qword_100975198);
    id v37 = v17;
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v41 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 138739971;
      *(void *)(v40 + 4) = v37;
      *uint64_t v41 = v37;
      id v42 = v38;
      os_log_type_t v43 = v39;
      os_log_type_t v44 = "Contact has no imageDataAvailable. Skipping {contact: %{sensitive}@}";
LABEL_29:
      _os_log_impl((void *)&_mh_execute_header, v42, v43, v44, (uint8_t *)v40, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      goto LABEL_8;
    }
LABEL_7:

LABEL_8:
    uint64_t v8 = v0[34];
    if (v8 == v0[32]) {
      goto LABEL_3;
    }
  }
  id v18 = [v17 imageData];
  if (!v18)
  {
    if (p_inst_meths[455] != (__objc2_meth_list *)-1) {
      swift_once();
    }
    uint64_t v45 = type metadata accessor for Logger();
    sub_10000B47C(v45, (uint64_t)qword_100975198);
    id v37 = v17;
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v38, v46))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v47 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 138739971;
      *(void *)(v40 + 4) = v37;
      void *v47 = v37;
      id v42 = v38;
      os_log_type_t v43 = v46;
      os_log_type_t v44 = "Contact has no imageData. Skipping {contact: %{sensitive}@}";
      goto LABEL_29;
    }
    goto LABEL_7;
  }
  id v19 = v18;
  uint64_t v20 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v22 = v21;

  v0[35] = v20;
  v0[36] = v22;
  id v23 = objc_allocWithZone((Class)UIImage);
  sub_10025ADCC(v20, v22);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v25 = [v23 initWithData:isa];
  v0[37] = v25;
  sub_100250CC4(v20, v22);

  if (!v25)
  {
    if (p_inst_meths[455] != (__objc2_meth_list *)-1) {
      swift_once();
    }
    uint64_t v48 = type metadata accessor for Logger();
    sub_10000B47C(v48, (uint64_t)qword_100975198);
    sub_10025ADCC(v20, v22);
    sub_10025ADCC(v20, v22);
    id v49 = v17;
    unint64_t v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = swift_slowAlloc();
      unint64_t v53 = (void *)swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      *(_DWORD *)uint64_t v52 = 138740227;
      *(void *)(v52 + 4) = v49;
      *unint64_t v53 = v49;
      *(_WORD *)(v52 + 12) = 2080;
      sub_10025ADCC(v20, v22);
      uint64_t v54 = Data.description.getter();
      unint64_t v56 = v55;
      sub_100250CC4(v20, v22);
      *(void *)(v52 + 14) = sub_100254634(v54, v56, &v61);
      swift_bridgeObjectRelease();
      sub_100250CC4(v20, v22);
      sub_100250CC4(v20, v22);
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "Failed to create UIImage from contact.imageData {contact: %{sensitive}@, imageData: %s}", (uint8_t *)v52, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100250CC4(v20, v22);
    }
    else
    {
      sub_100250CC4(v20, v22);

      sub_100250CC4(v20, v22);
      sub_100250CC4(v20, v22);
    }
    uint64_t v13 = &selRef_shouldBlockPresentation;
    goto LABEL_37;
  }
  id v26 = [v25 CGImage];
  v0[38] = v26;
  if (!v26)
  {
    if (p_inst_meths[455] != (__objc2_meth_list *)-1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_10000B47C(v27, (uint64_t)qword_100975198);
    id v28 = v17;
    id v29 = v25;
    id v30 = v28;
    id v31 = v29;
    os_log_type_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      unint64_t v35 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 138740227;
      *(void *)(v34 + 4) = v30;
      void *v35 = v30;

      *(_WORD *)(v34 + 12) = 2112;
      *(void *)(v34 + 14) = v31;
      v35[1] = v25;

      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Failed to get cgImage from contact.imageData {contact: %{sensitive}@, uiImage: %@}", (uint8_t *)v34, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v13 = &selRef_shouldBlockPresentation;
      swift_slowDealloc();

      sub_100250CC4(v20, v22);
    }
    else
    {
      sub_100250CC4(v20, v22);
    }
LABEL_37:
    p_inst_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___NSNetServiceBrowserDelegate + 24);
    goto LABEL_8;
  }
  id v57 = v26;
  uint64_t v58 = (void *)v0[25];
  v0[2] = v0;
  v0[7] = v0 + 23;
  v0[3] = sub_10048EBA0;
  uint64_t v59 = swift_continuation_init();
  v0[18] = _NSConcreteStackBlock;
  v0[19] = 0x40000000;
  v0[20] = sub_100336194;
  v0[21] = &unk_1008DC070;
  v0[22] = v59;
  [v58 analyzeCGImage:v57 completionHandler:v0 + 18];
  id v16 = v0 + 2;
  return _swift_continuation_await(v16);
}

uint64_t sub_10048F544()
{
  uint64_t v1 = (void *)v0[29];
  uint64_t v2 = v0[27];
  unint64_t v3 = v0[28];
  swift_willThrow();
  sub_100250CC4(v2, v3);

  if (qword_100969E38 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_100975198);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    unsigned int v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)unsigned int v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[18] = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "UserSafety analyze failed: %@", v7, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  unint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10(0);
}

uint64_t sub_10048F760()
{
  uint64_t v1 = (void *)v0[38];
  unint64_t v2 = v0[36];
  unint64_t v3 = (void *)v0[37];
  uint64_t v4 = v0[35];
  uint64_t v5 = (void *)v0[33];
  uint64_t v7 = v0[27];
  unint64_t v6 = v0[28];
  swift_willThrow();
  sub_100250CC4(v7, v6);
  sub_100250CC4(v4, v2);

  if (qword_100969E38 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000B47C(v8, (uint64_t)qword_100975198);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)id v11 = 138412290;
    swift_errorRetain();
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    v0[18] = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v12 = v13;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "UserSafety analyze failed: %@", v11, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  unint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14(0);
}

uint64_t sub_10048F99C()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10048F9E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *((void *)v3 + 2);
  uint64_t v9 = *((void *)v3 + 3);
  uint64_t v10 = *((void *)v3 + 4);
  double v11 = v3[5];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v12;
  *uint64_t v12 = v4;
  v12[1] = sub_10000A6F4;
  return sub_100485BE8(a1, a2, a3, v8, v9, v10, v11);
}

void *sub_10048FAC0(uint64_t a1)
{
  uint64_t v75 = type metadata accessor for NWEndpoint();
  uint64_t v2 = *(void *)(v75 - 8);
  uint64_t v3 = __chkstk_darwin(v75);
  uint64_t v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v51 - v6;
  uint64_t v8 = sub_10000A844(&qword_10096D8B8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v54 = (uint64_t)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v52 = (uint64_t)&v51 - v15;
  uint64_t v65 = type metadata accessor for NWBrowser.Result();
  uint64_t v16 = __chkstk_darwin(v65);
  id v77 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v72 = (char *)&v51 - v19;
  uint64_t v20 = *(void *)(a1 + 56);
  uint64_t v66 = a1 + 56;
  uint64_t v21 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v20;
  int64_t v67 = (unint64_t)(v21 + 63) >> 6;
  uint64_t v70 = v18 + 32;
  uint64_t v71 = v18 + 16;
  uint64_t v61 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v62 = (void (**)(char *, char *, uint64_t))(v2 + 16);
  id v24 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  unsigned int v60 = (void (**)(char *, char *, uint64_t))(v2 + 32);
  uint64_t v73 = v18;
  uint64_t v69 = (void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v53 = v12;
  id v68 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v74 = a1;
  uint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v26 = 0;
  unint64_t v55 = _swiftEmptyArrayStorage;
  *(void *)&long long v27 = 136315138;
  long long v57 = v27;
  unint64_t v56 = (char *)&type metadata for Any + 8;
  uint64_t v58 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v59 = v7;
  uint64_t v63 = v11;
  uint64_t v64 = v10;
LABEL_4:
  uint64_t v28 = v65;
  if (v23)
  {
LABEL_5:
    unint64_t v29 = __clz(__rbit64(v23));
    v23 &= v23 - 1;
    int64_t v76 = v26;
    unint64_t v30 = v29 | (v26 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v31 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v31 >= v67) {
      goto LABEL_38;
    }
    unint64_t v32 = *(void *)(v66 + 8 * v31);
    int64_t v33 = v26 + 1;
    if (!v32)
    {
      int64_t v33 = v26 + 2;
      if (v26 + 2 >= v67) {
        goto LABEL_38;
      }
      unint64_t v32 = *(void *)(v66 + 8 * v33);
      if (!v32)
      {
        int64_t v33 = v26 + 3;
        if (v26 + 3 >= v67) {
          goto LABEL_38;
        }
        unint64_t v32 = *(void *)(v66 + 8 * v33);
        if (!v32)
        {
          int64_t v33 = v26 + 4;
          if (v26 + 4 >= v67) {
            goto LABEL_38;
          }
          unint64_t v32 = *(void *)(v66 + 8 * v33);
          if (!v32) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v23 = (v32 - 1) & v32;
    int64_t v76 = v33;
    unint64_t v30 = __clz(__rbit64(v32)) + (v33 << 6);
LABEL_22:
    uint64_t v35 = v73;
    uint64_t v36 = v72;
    (*(void (**)(char *, unint64_t, uint64_t))(v73 + 16))(v72, *(void *)(v74 + 48) + *(void *)(v73 + 72) * v30, v28);
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v77, v36, v28);
    NWBrowser.Result.endpoint.getter();
    if (sub_10065FFCC())
    {
      (*v60)(v10, v7, v75);
      swift_storeEnumTagMultiPayload();
      uint64_t v37 = 0;
    }
    else
    {
      if (qword_100969E40 != -1) {
        swift_once();
      }
      uint64_t v38 = type metadata accessor for Logger();
      sub_10000B47C(v38, (uint64_t)qword_1009753B8);
      (*v62)(v5, v7, v75);
      os_log_type_t v39 = Logger.logObject.getter();
      os_log_type_t v40 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = swift_slowAlloc();
        uint64_t v78 = swift_slowAlloc();
        *(_DWORD *)uint64_t v41 = v57;
        uint64_t v42 = NWEndpoint.debugDescription.getter();
        *(void *)(v41 + 4) = sub_100254634(v42, v43, &v78);
        swift_bridgeObjectRelease();
        os_log_type_t v44 = *v61;
        (*v61)(v5, v75);
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "Dropping Endpoint %s - missing essential metadata for rendering", (uint8_t *)v41, 0xCu);
        uint64_t v37 = 1;
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v7 = v59;
        swift_slowDealloc();

        v44(v7, v75);
        id v24 = v58;
      }
      else
      {

        uint64_t v45 = *v61;
        uint64_t v46 = v75;
        (*v61)(v5, v75);
        v45(v7, v46);
        uint64_t v37 = 1;
      }
      uint64_t v11 = v63;
      uint64_t v10 = v64;
      uint64_t v28 = v65;
    }
    (*v24)(v10, v37, 1, v11);
    (*v69)(v77, v28);
    if ((*v68)(v10, 1, v11) != 1)
    {
      uint64_t v47 = v52;
      sub_10025AF4C((uint64_t)v10, v52);
      sub_10025AF4C(v47, v54);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v55 = (void *)sub_1002539B4(0, v55[2] + 1, 1, (unint64_t)v55);
      }
      unint64_t v49 = v55[2];
      unint64_t v48 = v55[3];
      if (v49 >= v48 >> 1) {
        unint64_t v55 = (void *)sub_1002539B4(v48 > 1, v49 + 1, 1, (unint64_t)v55);
      }
      unint64_t v50 = v55;
      v55[2] = v49 + 1;
      uint64_t result = (void *)sub_10025AF4C(v54, (uint64_t)v50+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(void *)(v53 + 72) * v49);
      int64_t v26 = v76;
      goto LABEL_4;
    }
    uint64_t result = (void *)sub_1002D3110((uint64_t)v10);
    int64_t v26 = v76;
    if (v23) {
      goto LABEL_5;
    }
  }
  uint64_t v34 = v26 + 5;
  if (v26 + 5 >= v67)
  {
LABEL_38:
    swift_release();
    return v55;
  }
  unint64_t v32 = *(void *)(v66 + 8 * v34);
  if (v32)
  {
    int64_t v33 = v26 + 5;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v33 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v33 >= v67) {
      goto LABEL_38;
    }
    unint64_t v32 = *(void *)(v66 + 8 * v33);
    ++v34;
    if (v32) {
      goto LABEL_21;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1004902C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NWBrowser.Descriptor();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (uint64_t *)((char *)&v25 - v7);
  uint64_t v9 = type metadata accessor for NWBrowser.Descriptor.Options.Scope();
  __chkstk_darwin(v9);
  uint64_t v10 = type metadata accessor for NWBrowser.Descriptor.Options();
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v14 = OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_browser;
  if (!*(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_browser])
  {
    uint64_t v28 = result;
    unint64_t v30 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v31 = v13;
    sub_10000A844(&qword_100975428);
    uint64_t v29 = v2;
    uint64_t v27 = v3;
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1007706B0;
    static NWBrowser.Descriptor.Options.Scope.nfc.getter();
    static NWBrowser.Descriptor.Options.Scope.personal.getter();
    int64_t v26 = v6;
    static NWBrowser.Descriptor.Options.Scope.contacts.getter();
    static NWBrowser.Descriptor.Options.Scope.family.getter();
    static NWBrowser.Descriptor.Options.Scope.adhoc_paired.getter();
    uint64_t v32 = v15;
    sub_100492844(&qword_100975430, (void (*)(uint64_t))&type metadata accessor for NWBrowser.Descriptor.Options.Scope);
    sub_10000A844(&qword_100975438);
    sub_100442CA0(&qword_100975440, &qword_100975438);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v16 = v30;
    NWBrowser.Descriptor.Options.init(scope:)();
    uint64_t v17 = (char *)v8 + *(int *)(sub_10000A844(&qword_10097C3F0) + 48);
    *uint64_t v8 = 0xD00000000000001ALL;
    v8[1] = 0x80000001007BC5A0;
    uint64_t v18 = v28;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v17, v16, v28);
    uint64_t v19 = v27;
    uint64_t v20 = v29;
    (*(void (**)(void *, void, uint64_t))(v27 + 104))(v8, enum case for NWBrowser.Descriptor.applicationServiceWithOptions(_:), v29);
    (*(void (**)(char *, void *, uint64_t))(v19 + 16))(v26, v8, v20);
    type metadata accessor for NWParameters();
    static NWParameters.airDropNetworkBrowserParameters(domain:type:)();
    type metadata accessor for NWBrowser();
    swift_allocObject();
    *(void *)&v1[v14] = NWBrowser.init(for:using:)();
    swift_retain();
    swift_release();
    *(void *)(swift_allocObject() + 16) = v1;
    uint64_t v21 = v1;
    NWBrowser.browseResultsChangedHandler.setter();
    uint64_t v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v23 = swift_allocObject();
    swift_weakInit();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v22;
    *(void *)(v24 + 24) = v23;
    swift_retain();
    swift_retain();
    NWBrowser.stateUpdateHandler.setter();
    swift_release();
    swift_release();
    NWBrowser.start(queue:)();
    swift_release();
    (*(void (**)(void *, uint64_t))(v19 + 8))(v8, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v30, v18);
  }
  return result;
}

void sub_100490800()
{
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_browser;
  if (!*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_browser)) {
    return;
  }
  swift_retain();
  NWBrowser.cancel()();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_sessionLogger);
  uint64_t v3 = *(void *)(v2 + 24);
  if (!v3) {
    goto LABEL_11;
  }
  if (!((unint64_t)v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_5;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v3 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_24:
      uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
      unint64_t v6 = *(unsigned int *)(v9 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid);
      swift_unknownObjectRelease();
      goto LABEL_19;
    }
    id v5 = *(id *)(v3 + 32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
LABEL_11:
  uint64_t v3 = (uint64_t)String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unint64_t v6 = *(void *)(v2 + 24);
  if (v6)
  {
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter())
      {
LABEL_14:
        if ((v6 & 0xC000000000000001) == 0)
        {
          if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          uint64_t v8 = (char *)*(id *)(v6 + 32);
          swift_bridgeObjectRelease();
          unint64_t v6 = *(unsigned int *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid];

          goto LABEL_19;
        }
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v7) {
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v6 = 0;
  }
LABEL_19:
  sub_100046EFC(@"ApplicationServiceBrowse", @"Stop", v3, v6);

  swift_release();
  *(void *)(v0 + v1) = 0;

  swift_release();
}

uint64_t sub_100490A84()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_1009753B8);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_1009753B8);
  if (qword_100969C78 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009945B8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100490B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = 0;
  long long v9[3] = 0;
  v9[4] = v8;
  v9[5] = a1;
  v9[6] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10028CFD4((uint64_t)v6, (uint64_t)&unk_100975470, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_100490C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return _swift_task_switch(sub_100490CB0, 0, 0);
}

uint64_t sub_100490CB0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 64) = Strong;
  if (Strong)
  {
    if (qword_100969B90 != -1) {
      swift_once();
    }
    uint64_t v2 = static AirDropActor.shared;
    return _swift_task_switch(sub_100490DB0, v2, 0);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_100490DB0()
{
  uint64_t v1 = *(char **)(v0 + 64);
  sub_10048FAC0(*(void *)(v0 + 56));
  (*(void (**)(void))&v1[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_endpointsUpdateHandler])();
  swift_bridgeObjectRelease();

  return _swift_task_switch(sub_1002D1768, 0, 0);
}

uint64_t sub_100490E54(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = (void *)result;
    swift_beginAccess();
    swift_weakLoadStrong();
    sub_10049190C(a1);

    return swift_release();
  }
  return result;
}

uint64_t sub_100490EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_100490F84, v5, 0);
}

uint64_t sub_100490F84()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_sessionLogger);
  uint64_t v2 = *(void *)(v1 + 24);
  if (!v2) {
    goto LABEL_9;
  }
  if (!((unint64_t)v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_4;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v2 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_22;
    }
    id v4 = *(id *)(v2 + 32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
LABEL_9:
  uint64_t v2 = (uint64_t)String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unint64_t v5 = *(void *)(v1 + 24);
  if (!v5) {
    goto LABEL_17;
  }
  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_12;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    unint64_t v5 = 0;
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (!result) {
    goto LABEL_16;
  }
LABEL_12:
  if ((v5 & 0xC000000000000001) != 0)
  {
LABEL_22:
    uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    unint64_t v5 = *(unsigned int *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid);
    swift_unknownObjectRelease();
    goto LABEL_17;
  }
  if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    return result;
  }
  uint64_t v8 = (char *)*(id *)(v5 + 32);
  swift_bridgeObjectRelease();
  unint64_t v5 = *(unsigned int *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid];

LABEL_17:
  sub_100046EFC(@"ApplicationServiceBrowse", @"Start", v2, v5);

  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1004911E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  v4[7] = static AirDropActor.shared;
  return _swift_task_switch(sub_100491280, v5, 0);
}

uint64_t sub_100491280()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v2 = (void *)Strong, v3 = swift_unknownObjectWeakLoadStrong(), *(void *)(v0 + 64) = v3, v2, v3))
  {
    uint64_t v4 = static AirDropActor.shared;
    return _swift_task_switch(sub_100491370, v4, 0);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_100491370()
{
  uint64_t v1 = *(void *)(v0 + 64);
  sub_10046CB78();
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_applicationServiceBrowser;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_applicationServiceBrowser);
  if (v3)
  {
    id v4 = v3;
    sub_100490800();

    uint64_t v3 = *(void **)(v1 + v2);
  }
  uint64_t v5 = *(void *)(v0 + 56);
  *(void *)(v1 + v2) = 0;

  swift_unknownObjectRelease();
  return _swift_task_switch(sub_10049141C, v5, 0);
}

uint64_t sub_10049141C()
{
  **(unsigned char **)(v0 + 40) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for SDAirDropApplicationServiceBrowser()
{
  return self;
}

uint64_t sub_10049151C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100491554(uint64_t a1, uint64_t a2)
{
  return sub_100490B4C(a1, a2);
}

uint64_t sub_10049155C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100491594()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004915CC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10049160C(uint64_t a1)
{
  return sub_100490E54(a1);
}

id sub_100491614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v18 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v17 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v4 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v7);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v8 - 8);
  uint64_t v16 = OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_browserQueue;
  unint64_t v15 = sub_1002B62F0();
  uint64_t v9 = v3;
  static DispatchQoS.default.getter();
  uint64_t v23 = _swiftEmptyArrayStorage;
  sub_100492844((unint64_t *)&unk_100974840, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000A844((uint64_t *)&unk_10096A1B0);
  sub_100442CA0((unint64_t *)&qword_100974850, (uint64_t *)&unk_10096A1B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v17);
  *(void *)&v3[v16] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_browser] = 0;
  uint64_t v10 = OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_parameters;
  type metadata accessor for NWParameters();
  *(void *)&v9[v10] = static NWParameters.applicationService.getter();
  uint64_t v11 = v19;
  *(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_sessionLogger] = v18;
  uint64_t v12 = &v9[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_endpointsUpdateHandler];
  uint64_t v13 = v20;
  *(void *)uint64_t v12 = v11;
  *((void *)v12 + 1) = v13;
  swift_retain();
  swift_retain();

  v22.receiver = v9;
  v22.super_class = ObjectType;
  return [super init];
}

void sub_10049190C(uint64_t a1)
{
  uint64_t v2 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NWError();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)v69 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v73 = (char *)v69 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v69 - v15;
  uint64_t v17 = type metadata accessor for NWBrowser.State();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a1, v17);
  int v21 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v20, v17);
  if (v21 == enum case for NWBrowser.State.failed(_:))
  {
    uint64_t v73 = v4;
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v12, v20, v5);
    if (qword_100969E40 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_10000B47C(v22, (uint64_t)qword_1009753B8);
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v23(v9, v12, v5);
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    BOOL v26 = os_log_type_enabled(v24, v25);
    uint64_t v71 = v12;
    uint64_t v72 = v6;
    if (v26)
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v70 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 138412290;
      v69[1] = v27 + 4;
      sub_100492844(&qword_10096E020, (void (*)(uint64_t))&type metadata accessor for NWError);
      swift_allocError();
      v23(v28, v9, v5);
      uint64_t v29 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v75 = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v70 = v29;
      unint64_t v30 = *(void (**)(char *, uint64_t))(v6 + 8);
      v30(v9, v5);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "AirDrop application service browser failed with error %@", v27, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      unint64_t v30 = *(void (**)(char *, uint64_t))(v6 + 8);
      v30(v9, v5);
    }

    uint64_t v42 = type metadata accessor for TaskPriority();
    uint64_t v43 = (uint64_t)v73;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v73, 1, 1, v42);
    uint64_t v44 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v45 = qword_100969B90;
    swift_retain();
    if (v45 != -1) {
      swift_once();
    }
    uint64_t v46 = static AirDropActor.shared;
    uint64_t v47 = sub_100492844((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    unint64_t v48 = (void *)swift_allocObject();
    v48[2] = v46;
    v48[3] = v47;
    v48[4] = v44;
    swift_retain();
    swift_release();
    sub_10028CFD4(v43, (uint64_t)&unk_100975450, (uint64_t)v48);
    swift_release();
    v30(v71, v5);
    return;
  }
  if (v21 == enum case for NWBrowser.State.waiting(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    uint64_t v31 = v16;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v16, v20, v5);
    if (qword_100969E40 != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    sub_10000B47C(v32, (uint64_t)qword_1009753B8);
    int64_t v33 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    uint64_t v34 = v73;
    v33(v73, v31, v5);
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v71 = (char *)swift_slowAlloc();
      uint64_t v74 = v37;
      *(_DWORD *)uint64_t v37 = 138412290;
      uint64_t v70 = v37 + 4;
      sub_100492844(&qword_10096E020, (void (*)(uint64_t))&type metadata accessor for NWError);
      swift_allocError();
      v33(v38, v34, v5);
      uint64_t v39 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v75 = v39;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(void *)uint64_t v71 = v39;
      uint64_t v40 = v5;
      uint64_t v41 = *(void (**)(char *, uint64_t))(v6 + 8);
      v41(v34, v40);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "AirDrop application service browser waiting with error %@", v74, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v40 = v5;
      uint64_t v41 = *(void (**)(char *, uint64_t))(v6 + 8);
      v41(v34, v40);
    }
    v41(v31, v40);
    return;
  }
  if (v21 == enum case for NWBrowser.State.setup(_:))
  {
    if (qword_100969E40 != -1) {
      swift_once();
    }
    uint64_t v49 = type metadata accessor for Logger();
    sub_10000B47C(v49, (uint64_t)qword_1009753B8);
    unint64_t v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v50, v51)) {
      goto LABEL_36;
    }
    uint64_t v52 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v52 = 0;
    uint64_t v53 = "AirDrop application service browser setting up";
LABEL_35:
    _os_log_impl((void *)&_mh_execute_header, v50, v51, v53, v52, 2u);
    swift_slowDealloc();
LABEL_36:

    return;
  }
  if (v21 == enum case for NWBrowser.State.ready(_:))
  {
    if (qword_100969E40 != -1) {
      swift_once();
    }
    uint64_t v54 = type metadata accessor for Logger();
    sub_10000B47C(v54, (uint64_t)qword_1009753B8);
    unint64_t v55 = Logger.logObject.getter();
    os_log_type_t v56 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v55, v56))
    {
      long long v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v57 = 0;
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "AirDrop application service browser ready", v57, 2u);
      swift_slowDealloc();
    }

    uint64_t v58 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v4, 1, 1, v58);
    uint64_t v59 = qword_100969B90;
    unsigned int v60 = v74;
    if (v59 != -1) {
      swift_once();
    }
    uint64_t v61 = static AirDropActor.shared;
    uint64_t v62 = sub_100492844((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v63 = (void *)swift_allocObject();
    v63[2] = v61;
    v63[3] = v62;
    v63[4] = v60;
    swift_retain();
    sub_10028CFA8((uint64_t)v4, (uint64_t)&unk_100975460, (uint64_t)v63);
    swift_release();
  }
  else
  {
    if (v21 == enum case for NWBrowser.State.cancelled(_:))
    {
      if (qword_100969E40 != -1) {
        swift_once();
      }
      uint64_t v64 = type metadata accessor for Logger();
      sub_10000B47C(v64, (uint64_t)qword_1009753B8);
      unint64_t v50 = Logger.logObject.getter();
      os_log_type_t v51 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v50, v51)) {
        goto LABEL_36;
      }
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      uint64_t v53 = "AirDrop application service browser cancelled";
      goto LABEL_35;
    }
    if (qword_100969E40 != -1) {
      swift_once();
    }
    uint64_t v65 = type metadata accessor for Logger();
    sub_10000B47C(v65, (uint64_t)qword_1009753B8);
    uint64_t v66 = Logger.logObject.getter();
    os_log_type_t v67 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v66, v67))
    {
      id v68 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v68 = 0;
      _os_log_impl((void *)&_mh_execute_header, v66, v67, "AirDrop application service browser in unknown state", v68, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
}

uint64_t sub_100492558()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100492598(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F4;
  return sub_1004911E0(a1, v4, v5, v6);
}

uint64_t sub_10049264C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10049268C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F0;
  return sub_100490EE8(a1, v4, v5, v6);
}

uint64_t sub_100492740()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100492790(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_10000A6F0;
  *(_OWORD *)(v4 + 48) = v5;
  *(void *)(v4 + 40) = a1;
  return _swift_task_switch(sub_100490CB0, 0, 0);
}

uint64_t sub_100492844(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10049288C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100975478);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100975478);
  if (qword_100969C68 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994588);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100492954(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v36 = type metadata accessor for NWEndpoint();
  uint64_t v4 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v6 = (uint64_t *)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v39 = *(void *)(v10 - 8);
  uint64_t v40 = v10;
  __chkstk_darwin(v10);
  uint64_t v38 = (uint64_t)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v12 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100316C8C();
  uint64_t v17 = v16;
  uint64_t v37 = a1;
  sub_10025AE8C(a1, (uint64_t)v14);
  if (!v17)
  {
    uint64_t v15 = sub_100313BE0();
    uint64_t v17 = v18;
  }
  sub_1002D3384((uint64_t)v14, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(void *)(v2 + 16) = v15;
  *(void *)(v2 + 24) = v17;
  uint64_t v20 = v39;
  uint64_t v19 = v40;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v9, 1, 1, v40);
  uint64_t v21 = v38;
  sub_10065ECDC((uint64_t)v9, v15, v17, v38);
  sub_10000A7E8((uint64_t)v9, &qword_100974EA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_connectableUUID, v21, v19);
  *uint64_t v6 = nw_endpoint_create_application_service();
  uint64_t v22 = v36;
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, enum case for NWEndpoint.opaque(_:), v36);
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v4 + 32))(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_displayEndpoint, v6, v22);
  sub_10000A844(&qword_10096B4F8);
  unint64_t v23 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_10076E7A0;
  uint64_t v25 = v37;
  sub_10025AE8C(v37, v24 + v23);
  BOOL v26 = sub_1002CC8E8(v24);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints) = v26;
  sub_100492EE4();
  if (qword_100969E48 != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  sub_10000B47C(v27, (uint64_t)qword_100975478);
  swift_retain_n();
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v28, v29))
  {
    unint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)unint64_t v30 = 136315138;
    uint64_t v31 = *(void *)(v2 + 16);
    unint64_t v32 = *(void *)(v2 + 24);
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_100254634(v31, v32, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Creating Device %s", v30, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  sub_1002D3384(v25, type metadata accessor for SDAirDropDiscoveredEndpoint);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
  return v2;
}

uint64_t sub_100492EE4()
{
  uint64_t v180 = type metadata accessor for SFAirDrop.TXTRecord();
  uint64_t v179 = *(void *)(v180 - 8);
  __chkstk_darwin(v180);
  v178 = (char *)&v175 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v232 = type metadata accessor for SFAirDrop.DeviceRelationship();
  uint64_t v2 = *(void *)(v232 - 8);
  uint64_t v3 = __chkstk_darwin(v232);
  uint64_t v176 = (char *)&v175 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v177 = (char *)&v175 - v5;
  uint64_t v212 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v212);
  v238 = (char *)&v175 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = type metadata accessor for SFString();
  uint64_t v236 = *(void *)(v194 - 8);
  __chkstk_darwin(v194);
  uint64_t v191 = (char *)&v175 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v233 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  uint64_t v8 = __chkstk_darwin(v233);
  uint64_t v10 = (char *)&v175 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v240 = (char *)&v175 - v11;
  uint64_t v12 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v218 = (uint64_t)&v175 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v219 = (uint64_t)&v175 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v193 = (uint64_t)&v175 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v201 = (uint64_t)&v175 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v195 = (uint64_t)&v175 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v200 = (uint64_t)&v175 - v24;
  __chkstk_darwin(v23);
  BOOL v26 = (id *)((char *)&v175 - v25);
  uint64_t v27 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v235 = *(void *)(v27 - 8);
  uint64_t v28 = __chkstk_darwin(v27);
  id v239 = (id *)((char *)&v175 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = __chkstk_darwin(v28);
  unint64_t v32 = (id *)((char *)&v175 - v31);
  uint64_t v33 = __chkstk_darwin(v30);
  v204 = (id *)((char *)&v175 - v34);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v221 = (id *)((char *)&v175 - v36);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v205 = (id *)((char *)&v175 - v38);
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v220 = (id *)((char *)&v175 - v40);
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v43 = (id *)((char *)&v175 - v42);
  uint64_t v44 = __chkstk_darwin(v41);
  uint64_t v46 = (char *)&v175 - v45;
  __chkstk_darwin(v44);
  uint64_t v234 = (uint64_t)&v175 - v47;
  uint64_t v48 = sub_10000A844(&qword_100975580);
  uint64_t v49 = __chkstk_darwin(v48 - 8);
  uint64_t v183 = (uint64_t)&v175 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v211 = (uint64_t)&v175 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  v199 = (char *)&v175 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  uint64_t v213 = (uint64_t)&v175 - v56;
  __chkstk_darwin(v55);
  uint64_t v237 = (uint64_t)&v175 - v57;
  uint64_t v186 = sub_100495054();
  v185 = v58;
  if (!NWEndpoint.nw.getter()) {
    goto LABEL_161;
  }
  uint64_t v181 = v2;
  uint64_t v59 = v2 + 56;
  uint64_t v207 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  v207(v237, 1, 1, v232);
  uint64_t v182 = v0;
  unsigned int v60 = (uint64_t *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints);
  swift_beginAccess();
  uint64_t v61 = *v60;
  uint64_t v62 = *(void *)(*v60 + 56);
  uint64_t v230 = *v60 + 56;
  uint64_t v63 = 1 << *(unsigned char *)(v61 + 32);
  uint64_t v64 = -1;
  if (v63 < 64) {
    uint64_t v64 = ~(-1 << v63);
  }
  uint64_t v65 = v64 & v62;
  v227 = v10;
  uint64_t v196 = v10 + 8;
  v210 = v238 + 8;
  uint64_t v66 = (uint64_t)v240;
  unint64_t v209 = v240 + 8;
  int64_t v231 = (unint64_t)(v63 + 63) >> 6;
  unsigned int v190 = enum case for SFString.maybeContact(_:);
  v189 = (void (**)(char *, void, uint64_t))(v236 + 104);
  unint64_t v188 = (void (**)(char *, uint64_t))(v236 + 8);
  uint64_t v222 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 - 8);
  unsigned int v197 = enum case for SFAirDrop.DeviceRelationship.contact(_:);
  uint64_t v208 = v59;
  v206 = (void (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  unsigned int v198 = enum case for SFAirDrop.DeviceRelationship.stranger(_:);
  unsigned int v203 = enum case for SFAirDrop.DeviceRelationship.sameAccount(_:);
  uint64_t v236 = v61;
  swift_bridgeObjectRetain();
  int v192 = 0;
  uint64_t v214 = 0;
  uint64_t v224 = 0;
  int v216 = 0;
  int v215 = 0;
  uint64_t v217 = 0;
  uint64_t v228 = 0;
  uint64_t v202 = 0;
  uint64_t v223 = 0;
  uint64_t v226 = 0;
  uint64_t v229 = 0;
  int64_t v67 = 0;
  long long v187 = xmmword_10076E7A0;
  v225 = v26;
  while (1)
  {
    if (v65)
    {
      unint64_t v68 = __clz(__rbit64(v65));
      v65 &= v65 - 1;
      unint64_t v69 = v68 | (v67 << 6);
      goto LABEL_23;
    }
    int64_t v70 = v67 + 1;
    if (__OFADD__(v67, 1))
    {
      __break(1u);
      goto LABEL_153;
    }
    uint64_t v65 = v226;
    if (v70 >= v231) {
      goto LABEL_123;
    }
    unint64_t v71 = *(void *)(v230 + 8 * v70);
    ++v67;
    if (!v71)
    {
      int64_t v67 = v70 + 1;
      if (v70 + 1 >= v231) {
        goto LABEL_123;
      }
      unint64_t v71 = *(void *)(v230 + 8 * v67);
      if (!v71)
      {
        int64_t v67 = v70 + 2;
        if (v70 + 2 >= v231) {
          goto LABEL_123;
        }
        unint64_t v71 = *(void *)(v230 + 8 * v67);
        if (!v71) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v65 = (v71 - 1) & v71;
    unint64_t v69 = __clz(__rbit64(v71)) + (v67 << 6);
LABEL_23:
    uint64_t v73 = v234;
    sub_10025AE8C(*(void *)(v236 + 48) + *(void *)(v235 + 72) * v69, v234);
    sub_1002D331C(v73, (uint64_t)v46, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_10025AE8C((uint64_t)v46, (uint64_t)v43);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        swift_bridgeObjectRelease();
        sub_1002D331C((uint64_t)v43, (uint64_t)v227, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
        sub_10025AE8C((uint64_t)v46, (uint64_t)v221);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            sub_1002D331C((uint64_t)v221, v66, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
            int v91 = (uint64_t *)(v66 + v233[9]);
            uint64_t v93 = *v91;
            uint64_t v92 = v91[1];
            swift_bridgeObjectRetain();
            sub_1002D3384(v66, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
            if (v92)
            {
              swift_bridgeObjectRelease();
              uint64_t v226 = v93;
              uint64_t v229 = v92;
            }
            break;
          case 2u:
            sub_1002D3384((uint64_t)v221, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
            goto LABEL_70;
          case 3u:
            id v94 = *v221;
            id v95 = [*v221 displayName];
            if (!v95) {
              goto LABEL_159;
            }
            uint64_t v96 = v95;
            uint64_t v226 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v98 = v97;

            swift_bridgeObjectRelease();
            uint64_t v229 = v98;
            break;
          default:
            sub_1002D331C((uint64_t)v221, v201, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            if (!NWEndpoint.nw.getter()) {
              goto LABEL_158;
            }
            uint64_t device_name = nw_endpoint_get_device_name();
            swift_unknownObjectRelease();
            if (device_name)
            {
              uint64_t v78 = String.init(cString:)();
              uint64_t v80 = v79;
              if ((sub_100314A58() & 0x4000000000) != 0)
              {
                uint64_t v111 = v191;
                (*v189)(v191, v190, v194);
                sub_10000A844((uint64_t *)&unk_10096EE60);
                uint64_t v112 = swift_allocObject();
                *(_OWORD *)(v112 + 16) = v187;
                *(void *)(v112 + 56) = &type metadata for String;
                *(void *)(v112 + 64) = sub_1002E695C();
                *(void *)(v112 + 32) = v78;
                *(void *)(v112 + 40) = v80;
                uint64_t v226 = SFString.format(_:)();
                uint64_t v80 = v113;
                swift_bridgeObjectRelease();
                (*v188)(v111, v194);
              }
              else
              {
                uint64_t v226 = v78;
              }
              sub_1002D3384(v201, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
              swift_bridgeObjectRelease();
              uint64_t v229 = v80;
            }
            else
            {
              sub_1002D3384(v201, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            }
            break;
        }
        uint64_t v66 = (uint64_t)v240;
LABEL_70:
        if (!v223)
        {
          sub_10025AE8C((uint64_t)v46, (uint64_t)v204);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              sub_1002D331C((uint64_t)v204, v66, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
              uint64_t v116 = (uint64_t *)(v66 + v233[8]);
              uint64_t v117 = v116[1];
              uint64_t v202 = *v116;
              uint64_t v223 = v117;
              swift_bridgeObjectRetain();
              uint64_t v118 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
              uint64_t v119 = v66;
              goto LABEL_82;
            case 2u:
              sub_1002D3384((uint64_t)v204, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
              goto LABEL_78;
            case 3u:

LABEL_78:
              uint64_t v202 = 0;
              uint64_t v223 = 0;
              break;
            default:
              sub_1002D331C((uint64_t)v204, v193, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
              if (!NWEndpoint.nw.getter()) {
                goto LABEL_164;
              }
              uint64_t device_model = nw_endpoint_get_device_model();
              swift_unknownObjectRelease();
              if (device_model)
              {
                uint64_t v202 = String.init(cString:)();
                uint64_t v223 = v115;
              }
              else
              {
                uint64_t v202 = 0;
                uint64_t v223 = 0;
              }
              uint64_t v66 = (uint64_t)v240;
              uint64_t v118 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
              uint64_t v119 = v193;
LABEL_82:
              sub_1002D3384(v119, v118);
              break;
          }
        }
        uint64_t v120 = v211;
        sub_1004963D0(v237, v211);
        int v121 = (*v222)(v120, 1, v232);
        sub_10000A7E8(v120, &qword_100975580);
        if (v121 == 1)
        {
          sub_10000A7E8(v237, &qword_100975580);
          if (*((unsigned char *)v227 + v233[13]) == 1)
          {
            uint64_t v122 = v232;
            (*v206)(v237, v203, v232);
          }
          else
          {
            if (*(void *)&v196[v233[11]]) {
              uint64_t v123 = &v231;
            }
            else {
              uint64_t v123 = (int64_t *)((char *)&v231 + 4);
            }
            uint64_t v122 = v232;
            (*v206)(v237, *((unsigned int *)v123 - 64), v232);
          }
          v207(v237, 0, 1, v122);
        }
        uint64_t v124 = v227;
        uint64_t v125 = v227[1];
        uint64_t v214 = *v227;
        uint64_t v224 = v125;
        swift_bridgeObjectRetain();
        sub_1002D3384((uint64_t)v124, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
        unint64_t v126 = &v247;
        goto LABEL_103;
      case 2u:
        if (qword_100969E48 != -1) {
          swift_once();
        }
        uint64_t v81 = type metadata accessor for Logger();
        sub_10000B47C(v81, (uint64_t)qword_100975478);
        uint64_t v82 = Logger.logObject.getter();
        os_log_type_t v83 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v82, v83))
        {
          unint64_t v84 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v84 = 0;
          _os_log_impl((void *)&_mh_execute_header, v82, v83, "NearField endpoints not applicable for SDAirDropDiscoveredDevice", v84, 2u);
          swift_slowDealloc();
        }

        sub_1002D3384((uint64_t)v43, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
        goto LABEL_101;
      case 3u:

        if (qword_100969E48 != -1) {
          swift_once();
        }
        uint64_t v85 = type metadata accessor for Logger();
        sub_10000B47C(v85, (uint64_t)qword_100975478);
        uint64_t v86 = Logger.logObject.getter();
        os_log_type_t v87 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v86, v87))
        {
          uint64_t v88 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v88 = 0;
          _os_log_impl((void *)&_mh_execute_header, v86, v87, "Classroom endpoints not applicable for SDAirDropDiscoveredDevice", v88, 2u);
          swift_slowDealloc();
        }

        goto LABEL_101;
      default:
        sub_1002D331C((uint64_t)v43, (uint64_t)v225, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        sub_10025AE8C((uint64_t)v46, (uint64_t)v220);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            sub_1002D331C((uint64_t)v220, v66, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
            NSString v89 = (uint64_t *)(v66 + v233[8]);
            uint64_t v90 = *v89;
            uint64_t v76 = v89[1];
            swift_bridgeObjectRetain();
            sub_1002D3384(v66, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
            if (!v76) {
              goto LABEL_56;
            }
            swift_bridgeObjectRelease();
            uint64_t v202 = v90;
            goto LABEL_45;
          case 2u:
            sub_1002D3384((uint64_t)v220, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
            if (!v229) {
              goto LABEL_57;
            }
            goto LABEL_95;
          case 3u:

            if (!v229) {
              goto LABEL_57;
            }
            goto LABEL_95;
          default:
            sub_1002D331C((uint64_t)v220, v200, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            if (!NWEndpoint.nw.getter()) {
              goto LABEL_157;
            }
            uint64_t v74 = nw_endpoint_get_device_model();
            swift_unknownObjectRelease();
            if (v74)
            {
              uint64_t v202 = String.init(cString:)();
              uint64_t v76 = v75;
              sub_1002D3384(v200, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
              swift_bridgeObjectRelease();
LABEL_45:
              uint64_t v223 = v76;
            }
            else
            {
              sub_1002D3384(v200, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            }
LABEL_56:
            uint64_t v66 = (uint64_t)v240;
            if (!v229)
            {
LABEL_57:
              sub_10025AE8C((uint64_t)v46, (uint64_t)v205);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  sub_1002D331C((uint64_t)v205, v66, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
                  uint64_t v103 = (uint64_t *)(v66 + v233[9]);
                  uint64_t v104 = v103[1];
                  uint64_t v226 = *v103;
                  uint64_t v229 = v104;
                  swift_bridgeObjectRetain();
                  uint64_t v105 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
                  uint64_t v106 = v66;
                  goto LABEL_94;
                case 2u:
                  sub_1002D3384((uint64_t)v205, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
                  uint64_t v226 = 0;
                  uint64_t v229 = 0;
                  break;
                case 3u:
                  id v107 = *v205;
                  id v108 = [*v205 displayName];
                  if (!v108) {
                    goto LABEL_163;
                  }
                  uint64_t v109 = v108;
                  uint64_t v226 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  uint64_t v229 = v110;

                  uint64_t v66 = (uint64_t)v240;
                  break;
                default:
                  sub_1002D331C((uint64_t)v205, v195, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
                  if (!NWEndpoint.nw.getter()) {
                    goto LABEL_162;
                  }
                  uint64_t v99 = nw_endpoint_get_device_name();
                  swift_unknownObjectRelease();
                  if (v99)
                  {
                    uint64_t v100 = String.init(cString:)();
                    uint64_t v102 = v101;
                    if ((sub_100314A58() & 0x4000000000) != 0)
                    {
                      uint64_t v127 = v191;
                      (*v189)(v191, v190, v194);
                      sub_10000A844((uint64_t *)&unk_10096EE60);
                      uint64_t v128 = swift_allocObject();
                      *(_OWORD *)(v128 + 16) = v187;
                      *(void *)(v128 + 56) = &type metadata for String;
                      *(void *)(v128 + 64) = sub_1002E695C();
                      *(void *)(v128 + 32) = v100;
                      *(void *)(v128 + 40) = v102;
                      uint64_t v226 = SFString.format(_:)();
                      uint64_t v229 = v129;
                      swift_bridgeObjectRelease();
                      (*v188)(v127, v194);
                    }
                    else
                    {
                      uint64_t v226 = v100;
                      uint64_t v229 = v102;
                    }
                  }
                  else
                  {
                    uint64_t v226 = 0;
                    uint64_t v229 = 0;
                  }
                  uint64_t v66 = (uint64_t)v240;
                  uint64_t v105 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
                  uint64_t v106 = v195;
LABEL_94:
                  sub_1002D3384(v106, v105);
                  break;
              }
            }
LABEL_95:
            uint64_t v130 = v213;
            sub_1004963D0(v237, v213);
            int v131 = (*v222)(v130, 1, v232);
            sub_10000A7E8(v130, &qword_100975580);
            if (v131 == 1)
            {
              uint64_t v132 = (uint64_t)v225;
              uint64_t v133 = sub_100314A58();
              uint64_t v134 = v203;
              if ((v133 & 0x80000) == 0)
              {
                if (!NWEndpoint.nw.getter()) {
                  goto LABEL_160;
                }
                uint64_t contact_id = nw_endpoint_get_contact_id();
                swift_unknownObjectRelease();
                uint64_t v134 = v198;
                uint64_t v132 = (uint64_t)v225;
                if (contact_id)
                {
                  String.init(cString:)();
                  swift_bridgeObjectRelease();
                  uint64_t v134 = v197;
                }
              }
              uint64_t v136 = (uint64_t)v199;
              uint64_t v137 = v232;
              (*v206)((uint64_t)v199, v134, v232);
              sub_1002D3384(v132, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
              uint64_t v138 = v237;
              sub_10000A7E8(v237, &qword_100975580);
              int v215 = 1;
              v207(v136, 0, 1, v137);
              sub_100496438(v136, v138);
LABEL_101:
              uint64_t v139 = (uint64_t)v238;
              uint64_t v66 = (uint64_t)v240;
            }
            else
            {
              sub_1002D3384((uint64_t)v225, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
              unint64_t v126 = &v246;
LABEL_103:
              *((_DWORD *)v126 - 64) = 1;
              uint64_t v139 = (uint64_t)v238;
            }
            break;
        }
        break;
    }
    sub_10025AE8C((uint64_t)v46, (uint64_t)v32);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1002D331C((uint64_t)v32, v66, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
        long long v143 = (uint64_t *)(v66 + v233[7]);
        uint64_t v145 = *v143;
        uint64_t v144 = v143[1];
        swift_bridgeObjectRetain();
        sub_1002D3384(v66, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
        if (v144)
        {
          swift_bridgeObjectRelease();
          uint64_t v217 = v145;
          uint64_t v228 = v144;
        }
        goto LABEL_113;
      case 2u:
        sub_1002D3384((uint64_t)v32, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
        goto LABEL_114;
      case 3u:

        goto LABEL_114;
      default:
        sub_1002D331C((uint64_t)v32, v219, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        if (!NWEndpoint.nw.getter())
        {
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
          JUMPOUT(0x100494FE4);
        }
        uint64_t device_id = nw_endpoint_get_device_id();
        swift_unknownObjectRelease();
        if (device_id)
        {
          uint64_t v217 = String.init(cString:)();
          uint64_t v142 = v141;
          sub_1002D3384(v219, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          swift_bridgeObjectRelease();
          uint64_t v228 = v142;
        }
        else
        {
          sub_1002D3384(v219, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        }
LABEL_113:
        uint64_t v139 = (uint64_t)v238;
        uint64_t v66 = (uint64_t)v240;
LABEL_114:
        BOOL v26 = v239;
        sub_10025AE8C((uint64_t)v46, (uint64_t)v239);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            sub_1002D331C((uint64_t)v239, v66, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
            uint64_t v147 = *(void *)&v209[v233[11]];
            swift_bridgeObjectRetain();
            int v148 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
            uint64_t v149 = v66;
            goto LABEL_120;
          case 2u:
            sub_1002D331C((uint64_t)v239, v139, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
            uint64_t v150 = v139;
            uint64_t v147 = *(void *)&v210[*(int *)(v212 + 28)];
            swift_bridgeObjectRetain();
            int v148 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint;
            uint64_t v149 = v150;
            uint64_t v66 = (uint64_t)v240;
LABEL_120:
            sub_1002D3384(v149, v148);
            sub_1002D3384((uint64_t)v46, type metadata accessor for SDAirDropDiscoveredEndpoint);
            swift_bridgeObjectRelease();
            if (v147) {
              int v192 = 1;
            }
            continue;
          case 3u:

            goto LABEL_6;
          default:
            sub_1002D331C((uint64_t)v239, v218, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            if (!NWEndpoint.nw.getter()) {
              goto LABEL_156;
            }
            uint64_t v146 = nw_endpoint_get_contact_id();
            swift_unknownObjectRelease();
            if (v146)
            {
              String.init(cString:)();
              sub_1002D3384(v218, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
              sub_1002D3384((uint64_t)v46, type metadata accessor for SDAirDropDiscoveredEndpoint);
              swift_bridgeObjectRelease();
              int v192 = 1;
              uint64_t v66 = (uint64_t)v240;
            }
            else
            {
              sub_1002D3384(v218, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
              uint64_t v66 = (uint64_t)v240;
LABEL_6:
              sub_1002D3384((uint64_t)v46, type metadata accessor for SDAirDropDiscoveredEndpoint);
            }
            break;
        }
        break;
    }
  }
  int64_t v72 = v70 + 3;
  if (v72 < v231)
  {
    unint64_t v71 = *(void *)(v230 + 8 * v72);
    if (!v71)
    {
      while (1)
      {
        int64_t v67 = v72 + 1;
        if (__OFADD__(v72, 1)) {
          break;
        }
        if (v67 >= v231) {
          goto LABEL_123;
        }
        unint64_t v71 = *(void *)(v230 + 8 * v67);
        ++v72;
        if (v71) {
          goto LABEL_22;
        }
      }
LABEL_153:
      __break(1u);
LABEL_154:
      swift_once();
      goto LABEL_146;
    }
    int64_t v67 = v72;
    goto LABEL_22;
  }
LABEL_123:
  swift_release();
  if (v229)
  {
    String.utf8CString.getter();
    swift_bridgeObjectRelease();
    nw_endpoint_set_device_name();
    swift_release();
  }
  uint64_t v151 = v228;
  if (v223)
  {
    String.utf8CString.getter();
    swift_bridgeObjectRelease();
    nw_endpoint_set_device_model();
    swift_release();
  }
  if (v151)
  {
    String.utf8CString.getter();
    nw_endpoint_set_device_id();
    swift_release();
    swift_bridgeObjectRelease();
    sub_10054D6A8(8);
    swift_bridgeObjectRelease();
    uint64_t v152 = static String._fromSubstring(_:)();
    unint64_t v154 = v153;
    goto LABEL_131;
  }
  if (v224)
  {
    String.lowercased()();
    swift_bridgeObjectRelease();
    sub_10054D6A8(8);
    swift_bridgeObjectRelease();
    uint64_t v152 = static String._fromSubstring(_:)();
    unint64_t v154 = v155;
LABEL_131:
    swift_bridgeObjectRelease();
    uint64_t v241 = (char *)v152;
    unint64_t v242 = v154;
    v156._uint64_t countAndFlagsBits = 58;
    v156._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v156);
    unint64_t v157 = v242;
    uint64_t v244 = (uint64_t)v241;
  }
  else
  {
    uint64_t v244 = 980183406;
    unint64_t v157 = 0xE400000000000000;
  }
  unint64_t v245 = v157;
  uint64_t v158 = v232;
  uint64_t v159 = v181;
  if (v215)
  {
    v160._uint64_t countAndFlagsBits = 97;
    v160._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v160);
  }
  if (v216)
  {
    v161._uint64_t countAndFlagsBits = 98;
    v161._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v161);
  }
  if (v192)
  {
    v162._uint64_t countAndFlagsBits = 99;
    v162._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v162);
  }
  uint64_t v163 = v183;
  sub_1004963D0(v237, v183);
  if ((*v222)(v163, 1, v158) == 1)
  {
    sub_10000A7E8(v163, &qword_100975580);
  }
  else
  {
    v164 = v177;
    (*(void (**)(char *, uint64_t, uint64_t))(v159 + 32))(v177, v163, v158);
    (*(void (**)(char *, char *, uint64_t))(v159 + 16))(v176, v164, v158);
    uint64_t v165 = v178;
    SFAirDrop.TXTRecord.init(deviceRelationship:)();
    SFAirDrop.TXTRecord.addToEndpoint(_:)();
    (*(void (**)(char *, uint64_t))(v179 + 8))(v165, v180);
    (*(void (**)(char *, uint64_t))(v159 + 8))(v164, v158);
  }
  BOOL v26 = v185;
  uint64_t v65 = sub_100495054();
  uint64_t v43 = v166;
  if (v186 == v65 && v26 == v166 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_10000A7E8(v237, &qword_100975580);
  }
  if (qword_100969E48 != -1) {
    goto LABEL_154;
  }
LABEL_146:
  uint64_t v167 = type metadata accessor for Logger();
  sub_10000B47C(v167, (uint64_t)qword_100975478);
  uint64_t v169 = v244;
  unint64_t v168 = v245;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_log_type_t v170 = Logger.logObject.getter();
  os_log_type_t v171 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v170, v171))
  {
    unint64_t v172 = (unint64_t)v26;
    uint64_t v173 = swift_slowAlloc();
    id v240 = (char *)swift_slowAlloc();
    uint64_t v241 = v240;
    *(_DWORD *)uint64_t v173 = 136315651;
    swift_bridgeObjectRetain();
    uint64_t v243 = sub_100254634(v169, v168, (uint64_t *)&v241);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v173 + 12) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v243 = sub_100254634(v186, v172, (uint64_t *)&v241);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v173 + 22) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v243 = sub_100254634(v65, (unint64_t)v43, (uint64_t *)&v241);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v170, v171, "DiscoveredDevice Updated %s [%{private}s] -> [%{private}s]", (uint8_t *)v173, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  swift_unknownObjectRelease();
  return sub_10000A7E8(v237, &qword_100975580);
}

uint64_t sub_100495054()
{
  _StringGuts.grow(_:)(25);
  v1._uint64_t countAndFlagsBits = 0x28656369766544;
  v1._unint64_t object = (void *)0xE700000000000000;
  String.append(_:)(v1);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain();
  v4._uint64_t countAndFlagsBits = v2;
  v4._unint64_t object = v3;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0x22206D4E20;
  v5._unint64_t object = (void *)0xE500000000000000;
  String.append(_:)(v5);
  uint64_t result = NWEndpoint.nw.getter();
  if (!result)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t device_name = nw_endpoint_get_device_name();
  swift_unknownObjectRelease();
  if (device_name) {
    String.init(cString:)();
  }
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 0x20644D202C22;
  v8._unint64_t object = (void *)0xE600000000000000;
  String.append(_:)(v8);
  uint64_t result = NWEndpoint.nw.getter();
  if (!result) {
    goto LABEL_9;
  }
  uint64_t device_model = nw_endpoint_get_device_model();
  swift_unknownObjectRelease();
  if (device_model) {
    String.init(cString:)();
  }
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 41;
  v10._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  return 0;
}

uint64_t sub_1004951FC()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_connectableUUID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_displayEndpoint;
  uint64_t v4 = type metadata accessor for NWEndpoint();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1004952F8()
{
  return type metadata accessor for SDAirDropDiscoveredDevice();
}

uint64_t type metadata accessor for SDAirDropDiscoveredDevice()
{
  uint64_t result = qword_1009754C0;
  if (!qword_1009754C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10049534C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for NWEndpoint();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100495430()
{
  return sub_100495054();
}

uint64_t sub_100495454@<X0>(uint64_t a1@<X8>)
{
  return sub_1003DC000(&OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_displayEndpoint, (uint64_t (*)(void))&type metadata accessor for NWEndpoint, a1);
}

unint64_t sub_100495474()
{
  uint64_t v39 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v39);
  uint64_t v38 = (uint64_t)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v37 = (uint64_t)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  Swift::String v8 = (id *)((char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v37 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t v14 = (uint64_t *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints);
  swift_beginAccess();
  uint64_t v15 = *v14;
  uint64_t v16 = v15 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(v15 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(v15 + 56);
  int64_t v41 = (unint64_t)(v17 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v20 = 0;
  LOBYTE(v21) = 0;
  uint64_t v40 = v15 + 56;
  while (1)
  {
    if (v19)
    {
      unint64_t v22 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_27;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v24 >= v41) {
      goto LABEL_35;
    }
    unint64_t v25 = *(void *)(v16 + 8 * v24);
    ++v20;
    if (!v25)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_35;
      }
      unint64_t v25 = *(void *)(v16 + 8 * v20);
      if (!v25)
      {
        int64_t v20 = v24 + 2;
        if (v24 + 2 >= v41) {
          goto LABEL_35;
        }
        unint64_t v25 = *(void *)(v16 + 8 * v20);
        if (!v25)
        {
          int64_t v20 = v24 + 3;
          if (v24 + 3 >= v41) {
            goto LABEL_35;
          }
          unint64_t v25 = *(void *)(v16 + 8 * v20);
          if (!v25)
          {
            int64_t v20 = v24 + 4;
            if (v24 + 4 >= v41) {
              goto LABEL_35;
            }
            unint64_t v25 = *(void *)(v16 + 8 * v20);
            if (!v25) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v20 << 6);
LABEL_27:
    sub_10025AE8C(*(void *)(v15 + 48) + *(void *)(v5 + 72) * v23, (uint64_t)v13);
    sub_1002D331C((uint64_t)v13, (uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (v21)
    {
LABEL_5:
      LOBYTE(v21) = 1;
    }
    else
    {
      sub_10025AE8C((uint64_t)v11, (uint64_t)v8);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v28 = (uint64_t)v8;
          uint64_t v29 = v13;
          uint64_t v30 = v8;
          uint64_t v31 = v15;
          uint64_t v32 = v5;
          uint64_t v33 = v4;
          uint64_t v34 = v38;
          sub_1002D331C(v28, v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
          LOBYTE(v21) = *(unsigned char *)(v34 + *(int *)(v39 + 60));
          uint64_t v35 = v34;
          uint64_t v4 = v33;
          uint64_t v5 = v32;
          uint64_t v15 = v31;
          Swift::String v8 = v30;
          uint64_t v13 = v29;
          uint64_t v16 = v40;
          sub_1002D3384(v35, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
          break;
        case 2u:
          sub_1002D3384((uint64_t)v8, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
          goto LABEL_5;
        case 3u:

          goto LABEL_5;
        default:
          uint64_t v27 = v37;
          sub_1002D331C((uint64_t)v8, v37, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          if ((sub_100314A58() & 0x4000000000) != 0) {
            LOBYTE(v21) = 1;
          }
          else {
            unint64_t v21 = ((unint64_t)sub_100314A58() >> 39) & 1;
          }
          sub_1002D3384(v27, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          uint64_t v16 = v40;
          break;
      }
    }
    sub_1002D3384((uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  int64_t v26 = v24 + 5;
  if (v26 < v41)
  {
    unint64_t v25 = *(void *)(v16 + 8 * v26);
    if (!v25)
    {
      while (1)
      {
        int64_t v20 = v26 + 1;
        if (__OFADD__(v26, 1)) {
          break;
        }
        if (v20 >= v41) {
          goto LABEL_35;
        }
        unint64_t v25 = *(void *)(v16 + 8 * v20);
        ++v26;
        if (v25) {
          goto LABEL_26;
        }
      }
LABEL_37:
      __break(1u);
      JUMPOUT(0x100495924);
    }
    int64_t v20 = v26;
    goto LABEL_26;
  }
LABEL_35:
  swift_release();
  swift_bridgeObjectRelease();
  return v21 & 1;
}

uint64_t sub_100495934(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  sub_10000A844(&qword_10096D8B8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v2[16] = v3;
  v2[17] = *(void *)(v3 - 8);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  return _swift_task_switch(sub_100495A94, v4, 0);
}

uint64_t sub_100495A94()
{
  int64_t v24 = v0;
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v4 = v0[15];
  uint64_t v5 = (uint64_t *)(v0[13] + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *(void *)(swift_task_alloc() + 16) = v1;
  swift_bridgeObjectRetain();
  sub_1003D8D24((uint64_t (*)(char *))sub_1004964A0, v6, v4);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v3) == 1)
  {
    sub_10000A7E8(v0[15], &qword_10096D8B8);
  }
  else
  {
    sub_1002D331C(v0[15], v0[21], type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (qword_100969E48 != -1) {
      swift_once();
    }
    uint64_t v8 = v0[20];
    uint64_t v7 = v0[21];
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000B47C(v9, (uint64_t)qword_100975478);
    sub_10025AE8C(v7, v8);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = v0[20];
    if (v12)
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      uint64_t v15 = sub_100313BE0();
      v0[11] = sub_100254634(v15, v16, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1002D3384(v13, type metadata accessor for SDAirDropDiscoveredEndpoint);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Removing duplicate/stale endpoint %s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1002D3384(v0[20], type metadata accessor for SDAirDropDiscoveredEndpoint);
    }

    uint64_t v17 = v0[21];
    uint64_t v18 = v0[14];
    swift_beginAccess();
    sub_1005A29BC(v17, v18);
    swift_endAccess();
    sub_10000A7E8(v18, &qword_10096D8B8);
    sub_1002D3384(v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  uint64_t v20 = v0[18];
  uint64_t v19 = v0[19];
  sub_10025AE8C(v0[12], v20);
  swift_beginAccess();
  sub_100595DA4(v19, v20);
  swift_endAccess();
  sub_1002D3384(v19, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_100492EE4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

BOOL sub_100495E94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10025AE8C(a1, (uint64_t)&v13 - v8);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v11 = EnumCaseMultiPayload;
  sub_1002D3384((uint64_t)v9, (uint64_t (*)(void))off_1008DC218[EnumCaseMultiPayload]);
  sub_10025AE8C(a2, (uint64_t)v7);
  LODWORD(a2) = swift_getEnumCaseMultiPayload();
  sub_1002D3384((uint64_t)v7, (uint64_t (*)(void))off_1008DC238[(int)a2]);
  return v11 == a2;
}

unint64_t sub_100495FA8()
{
  return sub_100495474() & 1;
}

uint64_t sub_100495FD0@<X0>(uint64_t a1@<X8>)
{
  return sub_1003DC000(&OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_connectableUUID, (uint64_t (*)(void))&type metadata accessor for UUID, a1);
}

uint64_t sub_100495FF0()
{
  *(void *)(v1 + 40) = v0;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v2 = static AirDropActor.shared;
  return _swift_task_switch(sub_10049608C, v2, 0);
}

uint64_t sub_10049608C()
{
  swift_beginAccess();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v1 = swift_bridgeObjectRetain();
  return v3(v1);
}

uint64_t sub_10049611C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000A6F4;
  return sub_100495934(a1);
}

uint64_t sub_1004961B4(uint64_t a1)
{
  v2[5] = a1;
  sub_10000A844(&qword_10096D8B8);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = *v1;
  v2[6] = v3;
  v2[7] = v4;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_100496284, v5, 0);
}

uint64_t sub_100496284()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[5];
  swift_beginAccess();
  sub_1005A29BC(v2, v1);
  swift_endAccess();
  sub_10000A7E8(v1, &qword_10096D8B8);
  sub_100492EE4();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

unint64_t sub_100496350(uint64_t a1)
{
  unint64_t result = sub_100496378();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100496378()
{
  unint64_t result = qword_100975578;
  if (!qword_100975578)
  {
    type metadata accessor for SDAirDropDiscoveredDevice();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100975578);
  }
  return result;
}

uint64_t sub_1004963D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_100975580);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100496438(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_100975580);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_1004964A0(uint64_t a1)
{
  return sub_100495E94(a1, *(void *)(v1 + 16));
}

uint64_t sub_1004964C0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100975590);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100975590);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100496588(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  sub_10000A844(&qword_100971070);
  v2[5] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropReceive.AskRequest();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_10049670C, v5, 0);
}

uint64_t sub_10049670C()
{
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v4 = v0[9];
  uint64_t v5 = *(void *)(SFAirDropReceive.AskRequest.urlItems.getter() + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  uint64_t v7 = v0[10];
  uint64_t v6 = v0[11];
  uint64_t v8 = v0[9];
  if (v5)
  {
    (*(void (**)(void, void))(v7 + 8))(v0[11], v0[9]);
  }
  else
  {
    uint64_t v9 = *(void *)(SFAirDropReceive.AskRequest.files.getter() + 16);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    if (v9 == 1)
    {
      uint64_t v10 = SFAirDropReceive.AskRequest.files.getter();
      if (*(void *)(v10 + 16))
      {
        (*(void (**)(void, unint64_t, void))(v0[7] + 16))(v0[5], v10 + ((*(unsigned __int8 *)(v0[7] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0[7] + 80)), v0[6]);
        uint64_t v11 = 0;
      }
      else
      {
        uint64_t v11 = 1;
      }
      uint64_t v12 = v0[6];
      uint64_t v13 = v0[7];
      uint64_t v14 = v0[5];
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v14, v11, 1, v12);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v14, 1, v12) == 1)
      {
        sub_10000A7E8(v0[5], &qword_100971070);
      }
      else
      {
        uint64_t v16 = v0[7];
        uint64_t v15 = v0[8];
        uint64_t v17 = v0[6];
        uint64_t v18 = v0[4];
        (*(void (**)(uint64_t, void, uint64_t))(v16 + 32))(v15, v0[5], v17);
        uint64_t v19 = SFAirDropReceive.AskRequest.ItemInfo.fileType.getter();
        uint64_t v21 = v20;
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
        *(void *)(v18 + 16) = v19;
        *(void *)(v18 + 24) = v21;
        swift_bridgeObjectRelease();
      }
      id v22 = objc_allocWithZone((Class)LSApplicationRecord);
      id v23 = sub_1006A5458(0xD000000000000012, 0x80000001007B5AB0, 1);
      if (v23)
      {

        uint64_t v24 = 1;
        goto LABEL_13;
      }
    }
  }
  uint64_t v24 = 0;
LABEL_13:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(uint64_t))v0[1];
  return v25(v24);
}

uint64_t sub_100496B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[15] = a4;
  v5[16] = a5;
  v5[14] = a1;
  uint64_t v6 = type metadata accessor for URL();
  v5[17] = v6;
  v5[18] = *(void *)(v6 - 8);
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  return _swift_task_switch(sub_100496C9C, v7, 0);
}

id sub_100496C9C()
{
  uint64_t v86 = v0;
  unint64_t v1 = 0xD000000000000014;
  uint64_t v2 = v0 + 80;
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v7 = *(void *)(v0 + 120);
  sub_10000A844((uint64_t *)&unk_10096EE60);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10076E7A0;
  uint64_t v10 = *(void *)(v7 + 16);
  uint64_t v9 = *(void *)(v7 + 24);
  *(void *)(v8 + 56) = &type metadata for String;
  *(void *)(v8 + 64) = sub_1002E695C();
  *(void *)(v8 + 32) = v10;
  *(void *)(v8 + 40) = v9;
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  URL.init(string:)();
  swift_bridgeObjectRelease();
  sub_1003AFF3C(v4, v3);
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v11(v3, 1, v6) == 1)
  {
    sub_10000A7E8(*(void *)(v0 + 184), (uint64_t *)&unk_10096AC10);
    if (qword_100969E50 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000B47C(v12, (uint64_t)qword_100975590);
    swift_bridgeObjectRetain_n();
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v13, v14))
    {
      uint64_t v42 = *(void *)(v0 + 192);

      swift_bridgeObjectRelease_n();
LABEL_23:
      uint64_t v78 = v42;
LABEL_24:
      sub_10000A7E8(v78, (uint64_t *)&unk_10096AC10);
      char v63 = 0;
      goto LABEL_25;
    }
    uint64_t v15 = *(void *)(v0 + 128);
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    v85[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315138;
    uint64_t v17 = *(void *)(v15 + 16);
    uint64_t v18 = *(void *)(v0 + 176);
    uint64_t v19 = *(void *)(v0 + 136);
    uint64_t v20 = *(void *)(v0 + 144);
    if (v17)
    {
      (*(void (**)(void, unint64_t, void))(v20 + 16))(*(void *)(v0 + 176), *(void *)(v0 + 128)+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80)), *(void *)(v0 + 136));
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v19);
      if (v11(v18, 1, v19) != 1)
      {
        uint64_t v21 = *(void *)(v0 + 176);
        uint64_t v22 = *(void *)(v0 + 136);
        uint64_t v23 = *(void *)(v0 + 144);
        unint64_t v1 = URL.description.getter();
        unint64_t v25 = v24;
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
LABEL_22:
        uint64_t v42 = *(void *)(v0 + 192);
        *(void *)(v0 + 72) = sub_100254634(v1, v25, v85);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "Unable to build app store search URL with item: %s", v16, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        goto LABEL_23;
      }
    }
    else
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(v20 + 56))(*(void *)(v0 + 176), 1, 1, *(void *)(v0 + 136));
    }
    sub_10000A7E8(*(void *)(v0 + 176), (uint64_t *)&unk_10096AC10);
    unint64_t v25 = 0x80000001007BEA00;
    goto LABEL_22;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 144) + 32))(*(void *)(v0 + 168), *(void *)(v0 + 184), *(void *)(v0 + 136));
  if (qword_100969E50 != -1) {
    swift_once();
  }
  uint64_t v27 = *(void *)(v0 + 160);
  uint64_t v26 = *(void *)(v0 + 168);
  uint64_t v29 = *(void *)(v0 + 136);
  uint64_t v28 = *(void *)(v0 + 144);
  uint64_t v30 = type metadata accessor for Logger();
  sub_10000B47C(v30, (uint64_t)qword_100975590);
  os_log_t log = *(os_log_t *)(v28 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))log)(v27, v26, v29);
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  BOOL v33 = os_log_type_enabled(v31, v32);
  uint64_t v34 = *(void *)(v0 + 160);
  uint64_t v36 = *(void *)(v0 + 136);
  uint64_t v35 = *(void *)(v0 + 144);
  if (v33)
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    v85[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 136315138;
    sub_100497CD0();
    uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 104) = sub_100254634(v38, v39, v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v40 = v36;
    int64_t v41 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v41(v34, v40);
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Launching app store with URL: %s", v37, 0xCu);
    swift_arrayDestroy();
    uint64_t v2 = v0 + 80;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    int64_t v41 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v41(v34, *(void *)(v0 + 136));
  }

  uint64_t v43 = self;
  URL._bridgeToObjectiveC()(v44);
  uint64_t v46 = v45;
  [v43 logReceiverBundleID:0 forURL:v45];

  sub_10000A844(&qword_100971080);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v48;
  *(unsigned char *)(inited + 48) = 1;
  unint64_t v49 = sub_100246BE8(inited);
  id v50 = [objc_allocWithZone((Class)_LSOpenConfiguration) init];
  sub_10039F00C(v49);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v50 setFrontBoardOptions:isa];

  id result = [self defaultWorkspace];
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v54 = result;
  URL._bridgeToObjectiveC()(v53);
  uint64_t v56 = v55;
  *(void *)(v0 + 80) = 0;
  id v57 = [v54 openURL:v55 configuration:v50 error:v2];

  uint64_t v58 = *(void **)(v0 + 80);
  uint64_t v59 = *(void *)(v0 + 136);
  if (!v57)
  {
    uint64_t v64 = *(void *)(v0 + 168);
    uint64_t v65 = *(void *)(v0 + 152);
    id v66 = v58;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    ((void (*)(uint64_t, uint64_t, uint64_t))log)(v65, v64, v59);
    swift_errorRetain();
    swift_errorRetain();
    int64_t v67 = Logger.logObject.getter();
    os_log_type_t v68 = static os_log_type_t.error.getter();
    BOOL v69 = os_log_type_enabled(v67, v68);
    uint64_t v70 = *(void *)(v0 + 192);
    uint64_t v71 = *(void *)(v0 + 168);
    uint64_t v72 = *(void *)(v0 + 152);
    uint64_t v73 = *(void *)(v0 + 136);
    if (v69)
    {
      uint64_t v84 = *(void *)(v0 + 168);
      uint64_t v80 = v41;
      uint64_t v74 = swift_slowAlloc();
      uint64_t v82 = (void *)swift_slowAlloc();
      v85[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v74 = 136315394;
      os_log_type_t type = v68;
      sub_100497CD0();
      uint64_t v75 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 88) = sub_100254634(v75, v76, v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v80(v72, v73);
      *(_WORD *)(v74 + 12) = 2112;
      swift_errorRetain();
      uint64_t v77 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 96) = v77;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v82 = v77;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v67, type, "Failed to launch app store with URL %s: %@", (uint8_t *)v74, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      v80(v84, v73);
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      v41(v72, v73);
      swift_errorRelease();
      v41(v71, v73);
    }
    uint64_t v78 = v70;
    goto LABEL_24;
  }
  uint64_t v60 = *(void *)(v0 + 192);
  uint64_t v61 = *(void *)(v0 + 168);
  id v62 = v58;

  v41(v61, v59);
  sub_10000A7E8(v60, (uint64_t *)&unk_10096AC10);
  char v63 = 1;
LABEL_25:
  **(unsigned char **)(v0 + 112) = v63;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v79 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v79();
}

uint64_t sub_100497734()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDAirDropContentHandlerUnsupportedFileType()
{
  return self;
}

uint64_t sub_100497790@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerUnsupportedFileType();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0xE000000000000000;
  *a1 = result;
  return result;
}

uint64_t sub_1004977CC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_100496588(a1);
}

uint64_t sub_100497868(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  return SFProgressTask.init(_:initialProgress:operation:file:line:)();
}

uint64_t sub_100497944(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1009756C0 + dword_1009756C0);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100497A04;
  return v5(a1);
}

uint64_t sub_100497A04(char a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (v1) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = a1 & 1;
  }
  return v4(v5);
}

void sub_100497B0C(uint64_t a1, char a2)
{
  if (a2)
  {
    NSString v2 = String._bridgeToObjectiveC()();
    id v3 = (id)SFLocalizedStringForKey();

    if (v3)
    {
LABEL_5:
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      return;
    }
    __break(1u);
  }
  NSString v4 = String._bridgeToObjectiveC()();
  id v3 = (id)SFLocalizedStringForKey();

  if (v3) {
    goto LABEL_5;
  }
  __break(1u);
}

uint64_t sub_100497BCC()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100497C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_10000A6F4;
  return sub_100496B0C(a1, a2, a3, v9, v8);
}

unint64_t sub_100497CD0()
{
  unint64_t result = qword_10096B590;
  if (!qword_10096B590)
  {
    type metadata accessor for URL();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096B590);
  }
  return result;
}

uint64_t sub_100497D28(uint64_t a1)
{
  v1[3] = a1;
  sub_10000A844((uint64_t *)&unk_10097F1D0);
  v1[4] = swift_task_alloc();
  uint64_t v2 = sub_10000A844(&qword_10096CC68);
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for SFAirDropReceive.ItemDestination();
  v1[8] = v3;
  v1[9] = *(void *)(v3 - 8);
  v1[10] = swift_task_alloc();
  uint64_t v4 = sub_10000A844(&qword_1009756C8);
  v1[11] = v4;
  v1[12] = *(void *)(v4 - 8);
  v1[13] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  v1[14] = static AirDropActor.shared;
  return _swift_task_switch(sub_100497F14, v5, 0);
}

uint64_t sub_100497F14()
{
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[3];
  v0[15] = type metadata accessor for SDAirDropContentHandlerUtilities();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, enum case for SFAirDropReceive.ItemDestination.default(_:), v4);
  sub_1003A07DC(v5, v2, 1, v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[16] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10049804C;
  uint64_t v7 = v0[11];
  return SFProgressTask.finalValue.getter(v0 + 2, v7);
}

uint64_t sub_10049804C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 104);
  uint64_t v4 = *(void *)(*v1 + 96);
  uint64_t v5 = *(void *)(*v1 + 88);
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v7 = sub_10049850C;
  }
  else {
    uint64_t v7 = sub_1004981D4;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1004981D4()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[9] + 56))(v2, 1, 1, v0[8]);
  sub_10039FAA0(v3, 0, 0, v1);
  swift_bridgeObjectRelease();
  sub_10000A7E8(v2, (uint64_t *)&unk_10097F1D0);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[18] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1004982EC;
  uint64_t v5 = v0[5];
  return SFProgressTask.finalValue.getter(v0 + 20, v5);
}

uint64_t sub_1004982EC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 56);
  uint64_t v4 = *(void *)(*v1 + 48);
  uint64_t v5 = *(void *)(*v1 + 40);
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v7 = sub_1004985A0;
  }
  else {
    uint64_t v7 = sub_100498474;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_100498474()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 160);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10049850C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_1004985A0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_100498634(uint64_t a1, int *a2)
{
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10000A6F0;
  return v5();
}

void sub_100498700(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1005A1618(a1, (uint64_t)v11);
  swift_endAccess();
  int v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2);
  sub_10000A7E8((uint64_t)v11, &qword_100974EA0);
  if (v12 != 1)
  {
    if (qword_100969E58 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000B47C(v13, (uint64_t)qword_1009756D0);
    os_log_type_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v31 = a1;
    v14(v8, a1, v2);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v30 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v18 = (uint8_t *)v17;
      uint64_t v28 = swift_slowAlloc();
      aBlock[0] = v28;
      uint64_t v29 = v14;
      *(_DWORD *)uint64_t v18 = 136315138;
      uint64_t v27 = v18 + 4;
      sub_100499968();
      uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v32 = sub_100254634(v19, v20, aBlock);
      os_log_type_t v14 = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "SDAirDropAWDLSingleBandManager: requesting stop Single band mode for Nearby Sharing Interaction ID:%s", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v6 = v30;
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    }

    id v21 = [self shared];
    v14(v6, v31, v2);
    unint64_t v22 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v23 = swift_allocObject();
    unint64_t v24 = v6;
    uint64_t v25 = v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v23 + v22, v24, v2);
    aBlock[4] = (uint64_t)sub_1004998E0;
    aBlock[5] = v25;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1004993B4;
    aBlock[3] = (uint64_t)&unk_1008DC338;
    uint64_t v26 = _Block_copy(aBlock);
    swift_release();
    [v21 endTransaction:18 completionHandler:v26];
    _Block_release(v26);
  }
}

uint64_t sub_100498B5C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_1009756D0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_1009756D0);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100498C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v8);
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v16 + v15, (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  uint64_t v17 = (void *)(v16 + ((v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v17 = a3;
  v17[1] = a4;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = &unk_100975790;
  *(void *)(v18 + 24) = v16;
  swift_retain();
  static Task<>.noThrow(priority:operation:)();
  swift_release();
  swift_release();
  return sub_10000A7E8((uint64_t)v13, &qword_10096C920);
}

uint64_t sub_100498E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a3;
  v4[7] = a4;
  v4[4] = a1;
  v4[5] = a2;
  uint64_t v5 = type metadata accessor for UUID();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  return _swift_task_switch(sub_100498F74, v6, 0);
}

uint64_t sub_100498F74()
{
  BOOL v33 = v0;
  if (v0[4])
  {
    if (qword_100969E58 != -1) {
      swift_once();
    }
    uint64_t v1 = v0[11];
    uint64_t v3 = v0[8];
    uint64_t v2 = v0[9];
    uint64_t v4 = v0[5];
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000B47C(v5, (uint64_t)qword_1009756D0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    BOOL v8 = os_log_type_enabled(v6, v7);
    uint64_t v9 = v0[11];
    uint64_t v10 = v0[8];
    uint64_t v11 = v0[9];
    if (v8)
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      sub_100499968();
      uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[2] = sub_100254634(v13, v14, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "SDAirDropAWDLSingleBandManager: failed requesting enforce Single band mode for Nearby Sharing Interaction ID:%s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v11 + 8))(v0[11], v0[8]);
    }

    uint64_t v29 = (void (*)(void))v0[6];
    sub_10049A62C();
    swift_allocError();
    v29();
    swift_errorRelease();
  }
  else
  {
    if (qword_100969E58 != -1) {
      swift_once();
    }
    uint64_t v16 = v0[9];
    uint64_t v15 = v0[10];
    uint64_t v17 = v0[8];
    uint64_t v18 = v0[5];
    uint64_t v19 = type metadata accessor for Logger();
    sub_10000B47C(v19, (uint64_t)qword_1009756D0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v18, v17);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v24 = v0[9];
    uint64_t v23 = v0[10];
    uint64_t v25 = v0[8];
    if (v22)
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136315138;
      sub_100499968();
      uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[3] = sub_100254634(v27, v28, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "SDAirDropAWDLSingleBandManager: requested enforce Single band mode for Nearby Sharing Interaction ID:%s", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v24 + 8))(v0[10], v0[8]);
    }

    ((void (*)(void))v0[6])(0);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(void))v0[1];
  return v30();
}

uint64_t sub_1004993B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_100499408(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  BOOL v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v23 - v9;
  if (a1)
  {
    if (qword_100969E58 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000B47C(v11, (uint64_t)qword_1009756D0);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, a2, v4);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      unint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)unint64_t v14 = 136315138;
      sub_100499968();
      uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v23 = sub_100254634(v15, v16, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "SDAirDropAWDLSingleBandManager: failed requesting stop Single band mode for Nearby Sharing Interaction ID:%s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }
  }
  else
  {
    if (qword_100969E58 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_10000B47C(v17, (uint64_t)qword_1009756D0);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      sub_100499968();
      uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v23 = sub_100254634(v21, v22, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "SDAirDropAWDLSingleBandManager: requested stop Single band mode for Nearby Sharing Interaction ID:%s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
}

uint64_t type metadata accessor for SDAirDropAWDLSingleBandManager()
{
  return self;
}

uint64_t sub_100499850()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1004998E0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_100499408(a1, v4);
}

uint64_t sub_100499950(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100499960()
{
  return swift_release();
}

unint64_t sub_100499968()
{
  unint64_t result = qword_10096C470;
  if (!qword_10096C470)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096C470);
  }
  return result;
}

void sub_1004999C0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v76 = type metadata accessor for UUID();
  uint64_t v74 = *(void *)(v76 - 8);
  uint64_t v12 = *(void *)(v74 + 64);
  uint64_t v13 = __chkstk_darwin(v76);
  uint64_t v71 = (char *)v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v13);
  unint64_t v16 = (char *)v67 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v72 = (uint64_t)v67 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)v67 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)v67 - v22;
  uint64_t v24 = (uint64_t (*)(uint64_t))swift_allocObject();
  *((void *)v24 + 2) = a4;
  *((void *)v24 + 3) = a5;
  uint64_t v73 = a5;
  uint64_t v25 = a6;
  uint64_t v75 = v24;
  *((void *)v24 + 4) = a6;
  if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for SDNearFieldTap() + 64)) != 1)
  {
    uint64_t v38 = qword_100969E58;
    id v39 = a4;
    swift_retain();
    if (v38 != -1) {
      swift_once();
    }
    uint64_t v40 = type metadata accessor for Logger();
    sub_10000B47C(v40, (uint64_t)qword_1009756D0);
    uint64_t v41 = v74;
    uint64_t v42 = v76;
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v23, a2, v76);
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      uint64_t v72 = v25;
      *(_DWORD *)uint64_t v45 = 136315138;
      sub_100499968();
      uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t aBlock[6] = sub_100254634(v46, v47, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v23, v42);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "SDAirDropAWDLSingleBandManager: Single band not required for Nearby Sharing Interaction ID:%s", v45, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v41 + 8))(v23, v42);
    }

    goto LABEL_19;
  }
  swift_beginAccess();
  uint64_t v26 = *(void *)(a3 + 16);
  id v27 = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  char v28 = sub_10057BC0C(a2, v26);
  swift_bridgeObjectRelease();
  if (v28)
  {
    uint64_t v29 = v74;
    if (qword_100969E58 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_10000B47C(v30, (uint64_t)qword_1009756D0);
    uint64_t v31 = a2;
    uint64_t v32 = v76;
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v21, v31, v76);
    BOOL v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315138;
      uint64_t v72 = v25;
      sub_100499968();
      uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v77 = sub_100254634(v36, v37, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v32);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "SDAirDropAWDLSingleBandManager: Nearby Sharing Interaction ID:%s already handled. ignoring it", v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v32);
    }

LABEL_19:
    v73();
    swift_release();
    return;
  }
  uint64_t v48 = v74;
  unint64_t v49 = *(void (**)(void))(v74 + 16);
  uint64_t v50 = v76;
  ((void (*)(char *, uint64_t, uint64_t))v49)(v16, a2, v76);
  swift_beginAccess();
  uint64_t v51 = v72;
  sub_100596028(v72, v16);
  swift_endAccess();
  BOOL v69 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
  v69(v51, v50);
  uint64_t v52 = a2;
  if (qword_100969E58 != -1) {
    swift_once();
  }
  uint64_t v53 = type metadata accessor for Logger();
  sub_10000B47C(v53, (uint64_t)qword_1009756D0);
  uint64_t v54 = v71;
  uint64_t v70 = v52;
  uint64_t v73 = v49;
  ((void (*)(char *, uint64_t, uint64_t))v49)(v71, v52, v50);
  uint64_t v55 = Logger.logObject.getter();
  os_log_type_t v56 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v55, v56))
  {
    id v57 = (uint8_t *)swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    aBlock[0] = v68;
    *(_DWORD *)id v57 = 136315138;
    v67[1] = v57 + 4;
    sub_100499968();
    uint64_t v58 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v77 = sub_100254634(v58, v59, aBlock);
    uint64_t v50 = v76;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v69((uint64_t)v54, v50);
    _os_log_impl((void *)&_mh_execute_header, v55, v56, "SDAirDropAWDLSingleBandManager: requesting enforce Single band mode for Nearby Sharing Interaction ID:%s", v57, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    v69((uint64_t)v54, v50);
  }

  id v60 = [self shared];
  uint64_t v61 = v72;
  ((void (*)(uint64_t, uint64_t, uint64_t))v73)(v72, v70, v50);
  unint64_t v62 = (*(unsigned __int8 *)(v48 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  uint64_t v63 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v48 + 32))(v63 + v62, v61, v50);
  uint64_t v64 = (uint64_t (**)(uint64_t))(v63 + ((v12 + v62 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v65 = v75;
  *uint64_t v64 = sub_10049A2E4;
  v64[1] = v65;
  aBlock[4] = (uint64_t)sub_10049A398;
  aBlock[5] = v63;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1004993B4;
  aBlock[3] = (uint64_t)&unk_1008DC3B0;
  id v66 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v60 beginTransaction:18 completionHandler:v66];
  _Block_release(v66);
  swift_release();
}

uint64_t sub_10049A2A4()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10049A2E4(uint64_t a1)
{
  return sub_1002993BC(a1, *(void *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

uint64_t sub_10049A2F0()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10049A398(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1 + v4;
  unint64_t v6 = (uint64_t *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];

  return sub_100498C24(a1, v5, v7, v8);
}

uint64_t sub_10049A438()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10049A4E0()
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = v0 + v3;
  unint64_t v6 = (uint64_t *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  void *v9 = v1;
  v9[1] = sub_10000A6F4;
  return sub_100498E68(v4, v5, v7, v8);
}

uint64_t sub_10049A5F4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_10049A62C()
{
  unint64_t result = qword_1009757A0;
  if (!qword_1009757A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009757A0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SDAirDropAWDLSingleBandManagerError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10049A71CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropAWDLSingleBandManagerError()
{
  return &type metadata for SDAirDropAWDLSingleBandManagerError;
}

unint64_t sub_10049A758()
{
  unint64_t result = qword_1009757A8;
  if (!qword_1009757A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009757A8);
  }
  return result;
}

uint64_t sub_10049A7B4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_1009757B0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_1009757B0);
  if (qword_100969CD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946C0);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10049A87C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_100975908);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  sub_10049C4A4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v9[1] = a2;
  sub_10000A844(&qword_1009758F0);
  sub_10049C544(&qword_100975910, &qword_100975918);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10049AA04(void *a1)
{
  uint64_t v3 = sub_10000A844(&qword_100975A00);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  sub_10049D0DC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v12 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    char v11 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    _s14VolumeMetadataVMa();
    char v10 = 2;
    type metadata accessor for Date();
    sub_10049D130(&qword_100975A08, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v9 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10049AC24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v30 = type metadata accessor for Date();
  uint64_t v28 = *(void *)(v30 - 8);
  uint64_t v3 = __chkstk_darwin(v30);
  id v27 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v23 - v5;
  uint64_t v31 = sub_10000A844(&qword_1009759E8);
  uint64_t v29 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s14VolumeMetadataVMa();
  __chkstk_darwin(v9);
  char v11 = (uint64_t *)((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10026BB6C(a1, a1[3]);
  sub_10049D0DC();
  uint64_t v12 = (uint64_t)v32;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v12) {
    return sub_10024D338((uint64_t)a1);
  }
  uint64_t v13 = v6;
  uint64_t v32 = a1;
  uint64_t v15 = v29;
  uint64_t v14 = v30;
  char v36 = 0;
  uint64_t v16 = v31;
  *char v11 = KeyedDecodingContainer.decode(_:forKey:)();
  v11[1] = v17;
  char v35 = 1;
  v11[2] = KeyedDecodingContainer.decode(_:forKey:)();
  v11[3] = v18;
  char v34 = 2;
  sub_10049D130(&qword_1009759F8, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v25 = 0;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v23 = v11;
  uint64_t v24 = v9;
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  v19((char *)v11 + *(int *)(v9 + 24), v13, v14);
  char v33 = 3;
  uint64_t v20 = v27;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v16);
  uint64_t v21 = (uint64_t)v23;
  v19((char *)v23 + *(int *)(v24 + 28), v20, v14);
  sub_10049C6A8(v21, v26);
  sub_10024D338((uint64_t)v32);
  return sub_10049C770(v21);
}

uint64_t sub_10049B080()
{
  return 0x73656D756C6F76;
}

uint64_t sub_10049B098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73656D756C6F76 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_10049B130(uint64_t a1)
{
  unint64_t v2 = sub_10049C4A4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10049B16C(uint64_t a1)
{
  unint64_t v2 = sub_10049C4A4();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_10049B1A8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_10049C2F4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10049B1D4(void *a1)
{
  return sub_10049A87C(a1, *v1);
}

uint64_t sub_10049B1F0()
{
  uint64_t result = 0x4449656D756C6F76;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4449656369766564;
      break;
    case 2:
      uint64_t result = 0x6E6F697461657263;
      break;
    case 3:
      uint64_t result = 0x646573557473616CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10049B280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10049D384(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10049B2A8(uint64_t a1)
{
  unint64_t v2 = sub_10049D0DC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10049B2E4(uint64_t a1)
{
  unint64_t v2 = sub_10049D0DC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10049B320@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10049AC24(a1, a2);
}

uint64_t sub_10049B338(void *a1)
{
  return sub_10049AA04(a1);
}

void *sub_10049B354(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_defaultActor_initialize();
  v3[16] = &_swiftEmptyDictionarySingleton;
  v3[14] = a1;
  v3[15] = a2;
  uint64_t v6 = self;
  swift_retain();
  id v7 = [v6 standardUserDefaults];
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 dataForKey:v8];

  if (v9)
  {
    uint64_t v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v11;

    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    sub_10000A844(&qword_100975920);
    sub_10049C5D8();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    swift_release();
    swift_beginAccess();
    v3[16] = v29[0];
    swift_bridgeObjectRelease();
    if (qword_100969E60 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_10000B47C(v20, (uint64_t)qword_1009757B0);
    swift_retain_n();
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.debug.getter();
    os_log_t log = v21;
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      v29[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v24 = Dictionary.description.getter();
      unint64_t v26 = v25;
      swift_bridgeObjectRelease();
      sub_100254634(v24, v26, v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v22, "localCache: %s", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      sub_100250CC4(v10, v12);
    }
    else
    {
      swift_release_n();
      sub_100250CC4(v10, v12);
    }
    goto LABEL_15;
  }
  v29[1] = 0;
  void v29[2] = 0xE000000000000000;
  _StringGuts.grow(_:)(43);
  swift_bridgeObjectRelease();
  sub_10024D280();
  swift_allocError();
  *(_DWORD *)uint64_t v13 = 10;
  *(void *)(v13 + 8) = 0xD00000000000003CLL;
  *(void *)(v13 + 16) = 0x80000001007BEB30;
  swift_willThrow();
  unint64_t v14 = sub_100246870((uint64_t)_swiftEmptyArrayStorage);
  swift_beginAccess();
  v3[16] = v14;
  swift_bridgeObjectRelease();
  if ((sub_10049B8FC() & 1) == 0)
  {
    if (qword_100969E60 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10000B47C(v15, (uint64_t)qword_1009757B0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v16, v17))
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();

LABEL_15:
      swift_release();
      return v3;
    }
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 138412290;
    swift_errorRetain();
    v29[0] = _swift_stdlib_bridgeErrorToNSError();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v19 = v29[0];
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Could not load VolumeUnlockLocalCache %@", v18, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  swift_release();
  swift_errorRelease();
  return v3;
}

uint64_t sub_10049B8FC()
{
  uint64_t v0 = _s14VolumeMetadataVMa();
  uint64_t v81 = *(void *)(v0 - 8);
  uint64_t v82 = v0;
  uint64_t v1 = __chkstk_darwin(v0);
  unint64_t v3 = (unint64_t)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  char v5 = (uint8_t **)((char *)&v66 - v4);
  uint64_t v6 = self;
  id v7 = [v6 standardUserDefaults];
  uint64_t v8 = (uint64_t)"Cache at SDVolumeByPersonaID";
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v7 dictionaryForKey:v9];

  if (!v10) {
    return 0;
  }
  uint64_t v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v12 = sub_10033164C(v11);
  swift_bridgeObjectRelease();
  unint64_t v73 = v12;
  if (!v12) {
    return 0;
  }
  if (qword_100969E60 == -1) {
    goto LABEL_4;
  }
LABEL_64:
  swift_once();
LABEL_4:
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v68 = sub_10000B47C(v13, (uint64_t)qword_1009757B0);
  unint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Found legacy local cache, converting and deleting", v16, 2u);
    swift_slowDealloc();
  }

  unint64_t v17 = v73;
  swift_bridgeObjectRetain_n();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  BOOL v20 = os_log_type_enabled(v18, v19);
  unint64_t v80 = v3;
  id v67 = v6;
  id v66 = (uint8_t *)v8;
  if (v20)
  {
    uint64_t v8 = swift_slowAlloc();
    unint64_t v3 = swift_slowAlloc();
    v86[0] = v3;
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v6 = (void *)(v8 + 4);
    swift_bridgeObjectRetain();
    sub_10000A844(&qword_10096FCC8);
    uint64_t v21 = Dictionary.description.getter();
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    uint64_t v85 = sub_100254634(v21, v23, (uint64_t *)v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "old cache: %s", (uint8_t *)v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  int64_t v25 = 0;
  uint64_t v26 = *(void *)(v17 + 64);
  unint64_t v70 = v17 + 64;
  uint64_t v27 = 1 << *(unsigned char *)(v17 + 32);
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  else {
    uint64_t v28 = -1;
  }
  unint64_t v29 = v28 & v26;
  int64_t v71 = (unint64_t)(v27 + 63) >> 6;
  uint64_t v72 = (uint64_t *)(v69 + 128);
LABEL_15:
  if (v29)
  {
    uint64_t v74 = (v29 - 1) & v29;
    int64_t v75 = v25;
    unint64_t v32 = __clz(__rbit64(v29)) | (v25 << 6);
    goto LABEL_31;
  }
  int64_t v33 = v25 + 1;
  if (__OFADD__(v25, 1)) {
    goto LABEL_62;
  }
  if (v33 >= v71) {
    goto LABEL_56;
  }
  unint64_t v34 = *(void *)(v70 + 8 * v33);
  int64_t v35 = v25 + 1;
  if (v34) {
    goto LABEL_30;
  }
  int64_t v35 = v25 + 2;
  if (v25 + 2 >= v71) {
    goto LABEL_56;
  }
  unint64_t v34 = *(void *)(v70 + 8 * v35);
  if (v34) {
    goto LABEL_30;
  }
  int64_t v35 = v25 + 3;
  if (v25 + 3 >= v71) {
    goto LABEL_56;
  }
  unint64_t v34 = *(void *)(v70 + 8 * v35);
  if (v34)
  {
LABEL_30:
    uint64_t v74 = (v34 - 1) & v34;
    int64_t v75 = v35;
    unint64_t v32 = __clz(__rbit64(v34)) + (v35 << 6);
LABEL_31:
    unint64_t v37 = (uint64_t *)(*(void *)(v17 + 48) + 16 * v32);
    uint64_t v38 = *(void *)(*(void *)(v17 + 56) + 8 * v32);
    uint64_t v39 = v37[1];
    uint64_t v76 = *v37;
    uint64_t v77 = (void *)v39;
    uint64_t v40 = *(void *)(v38 + 64);
    uint64_t v78 = v38 + 64;
    uint64_t v41 = 1 << *(unsigned char *)(v38 + 32);
    if (v41 < 64) {
      uint64_t v42 = ~(-1 << v41);
    }
    else {
      uint64_t v42 = -1;
    }
    unint64_t v3 = v42 & v40;
    int64_t v79 = (unint64_t)(v41 + 63) >> 6;
    swift_bridgeObjectRetain();
    uint64_t v83 = v38;
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    uint64_t v43 = _swiftEmptyArrayStorage;
    if (v3)
    {
LABEL_35:
      unint64_t v44 = __clz(__rbit64(v3));
      v3 &= v3 - 1;
      unint64_t v45 = v44 | (v8 << 6);
      goto LABEL_50;
    }
    while (1)
    {
      int64_t v46 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
        goto LABEL_61;
      }
      if (v46 >= v79) {
        goto LABEL_14;
      }
      unint64_t v47 = *(void *)(v78 + 8 * v46);
      ++v8;
      if (!v47)
      {
        uint64_t v8 = v46 + 1;
        if (v46 + 1 >= v79) {
          goto LABEL_14;
        }
        unint64_t v47 = *(void *)(v78 + 8 * v8);
        if (!v47)
        {
          uint64_t v8 = v46 + 2;
          if (v46 + 2 >= v79) {
            goto LABEL_14;
          }
          unint64_t v47 = *(void *)(v78 + 8 * v8);
          if (!v47)
          {
            uint64_t v48 = v46 + 3;
            if (v48 >= v79)
            {
LABEL_14:
              swift_release();
              uint64_t v30 = v72;
              swift_beginAccess();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v85 = *v30;
              *uint64_t v30 = 0x8000000000000000;
              uint64_t v6 = v77;
              sub_100593998((uint64_t)v43, v76, (uint64_t)v77, isUniquelyReferenced_nonNull_native);
              *uint64_t v30 = v85;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_endAccess();
              unint64_t v17 = v73;
              unint64_t v29 = v74;
              int64_t v25 = v75;
              goto LABEL_15;
            }
            unint64_t v47 = *(void *)(v78 + 8 * v48);
            if (!v47)
            {
              while (1)
              {
                uint64_t v8 = v48 + 1;
                if (__OFADD__(v48, 1)) {
                  break;
                }
                if (v8 >= v79) {
                  goto LABEL_14;
                }
                unint64_t v47 = *(void *)(v78 + 8 * v8);
                ++v48;
                if (v47) {
                  goto LABEL_49;
                }
              }
LABEL_61:
              __break(1u);
LABEL_62:
              __break(1u);
LABEL_63:
              __break(1u);
              goto LABEL_64;
            }
            uint64_t v8 = v48;
          }
        }
      }
LABEL_49:
      unint64_t v3 = (v47 - 1) & v47;
      unint64_t v45 = __clz(__rbit64(v47)) + (v8 << 6);
LABEL_50:
      uint64_t v49 = 16 * v45;
      uint64_t v50 = (uint64_t *)(*(void *)(v83 + 48) + v49);
      uint64_t v52 = *v50;
      uint64_t v51 = v50[1];
      uint64_t v53 = *(void *)(v83 + 56) + v49;
      uint64_t v6 = *(void **)v53;
      uint64_t v54 = *(void *)(v53 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      Date.init()();
      Date.init()();
      *char v5 = v6;
      v5[1] = v54;
      uint64_t v5[2] = v52;
      v5[3] = v51;
      uint64_t v55 = v80;
      sub_10049C6A8((uint64_t)v5, v80);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v43 = (void *)sub_100253DFC(0, v43[2] + 1, 1, (unint64_t)v43);
      }
      unint64_t v57 = v43[2];
      unint64_t v56 = v43[3];
      if (v57 >= v56 >> 1) {
        uint64_t v43 = (void *)sub_100253DFC(v56 > 1, v57 + 1, 1, (unint64_t)v43);
      }
      v43[2] = v57 + 1;
      sub_10049C70C(v55, (uint64_t)v43+ ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80))+ *(void *)(v81 + 72) * v57);
      sub_10049C770((uint64_t)v5);
      if (v3) {
        goto LABEL_35;
      }
    }
  }
  uint64_t v36 = v25 + 4;
  if (v25 + 4 >= v71) {
    goto LABEL_56;
  }
  unint64_t v34 = *(void *)(v70 + 8 * v36);
  if (v34)
  {
    int64_t v35 = v25 + 4;
    goto LABEL_30;
  }
  while (1)
  {
    int64_t v35 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      goto LABEL_63;
    }
    if (v35 >= v71) {
      break;
    }
    unint64_t v34 = *(void *)(v70 + 8 * v35);
    ++v36;
    if (v34) {
      goto LABEL_30;
    }
  }
LABEL_56:
  swift_release();
  swift_retain_n();
  uint64_t v58 = Logger.logObject.getter();
  os_log_type_t v59 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v58, v59))
  {
    id v60 = (uint8_t *)swift_slowAlloc();
    uint64_t v85 = swift_slowAlloc();
    *(_DWORD *)id v60 = 136315138;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v61 = Dictionary.description.getter();
    unint64_t v63 = v62;
    swift_bridgeObjectRelease();
    uint64_t v84 = sub_100254634(v61, v63, &v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v58, v59, "new cache: %s", v60, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  id v64 = [v67 standardUserDefaults:v66];
  NSString v65 = String._bridgeToObjectiveC()();
  [v64 removeObjectForKey:v65];

  return 1;
}

uint64_t sub_10049C280()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t _s22VolumeUnlockLocalCacheCMa()
{
  return self;
}

ValueMetadata *_s12PersonaCacheVMa()
{
  return &_s12PersonaCacheVN;
}

void *sub_10049C2F4(void *a1)
{
  uint64_t v3 = sub_10000A844(&qword_1009758E0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = sub_10026BB6C(a1, a1[3]);
  sub_10049C4A4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_10024D338((uint64_t)a1);
  }
  else
  {
    sub_10000A844(&qword_1009758F0);
    sub_10049C544(&qword_1009758F8, &qword_100975900);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    id v7 = (void *)v9[1];
    sub_10024D338((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_10049C4A4()
{
  unint64_t result = qword_1009758E8;
  if (!qword_1009758E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009758E8);
  }
  return result;
}

uint64_t _s14VolumeMetadataVMa()
{
  uint64_t result = qword_100975990;
  if (!qword_100975990) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10049C544(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100247840(&qword_1009758F0);
    sub_10049D130(a2, (void (*)(uint64_t))_s14VolumeMetadataVMa);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10049C5D8()
{
  unint64_t result = qword_100975928;
  if (!qword_100975928)
  {
    sub_100247840(&qword_100975920);
    sub_10049C654();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100975928);
  }
  return result;
}

unint64_t sub_10049C654()
{
  unint64_t result = qword_100975930;
  if (!qword_100975930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100975930);
  }
  return result;
}

uint64_t sub_10049C6A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14VolumeMetadataVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10049C70C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14VolumeMetadataVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10049C770(uint64_t a1)
{
  uint64_t v2 = _s14VolumeMetadataVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *_s12PersonaCacheV10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10049C868);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s12PersonaCacheV10CodingKeysOMa()
{
  return &_s12PersonaCacheV10CodingKeysON;
}

char *sub_10049C8A0(char *a1, char *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)unsigned int v4 = *(void *)a2;
    unsigned int v4 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = *((void *)a2 + 3);
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    id v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v13(&v4[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v12);
  }
  return v4;
}

uint64_t sub_10049C9C4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);

  return v8(v6, v5);
}

char *sub_10049CA7C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = &a1[v8];
  id v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v12(&a1[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v11);
  return a1;
}

char *sub_10049CB50(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  id v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v9);
  return a1;
}

char *sub_10049CC3C(char *a1, char *a2, uint64_t a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(&a1[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v10);
  return a1;
}

char *sub_10049CCF0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v12(&a1[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v11);
  return a1;
}

uint64_t sub_10049CDBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10049CDD0);
}

uint64_t sub_10049CDD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10049CE80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10049CE94);
}

uint64_t sub_10049CE94(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10049CF3C()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10049CFD8()
{
  unint64_t result = qword_1009759D0;
  if (!qword_1009759D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009759D0);
  }
  return result;
}

unint64_t sub_10049D030()
{
  unint64_t result = qword_1009759D8;
  if (!qword_1009759D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009759D8);
  }
  return result;
}

unint64_t sub_10049D088()
{
  unint64_t result = qword_1009759E0;
  if (!qword_1009759E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009759E0);
  }
  return result;
}

unint64_t sub_10049D0DC()
{
  unint64_t result = qword_1009759F0;
  if (!qword_1009759F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009759F0);
  }
  return result;
}

uint64_t sub_10049D130(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s14VolumeMetadataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10049D244);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14VolumeMetadataV10CodingKeysOMa()
{
  return &_s14VolumeMetadataV10CodingKeysON;
}

unint64_t sub_10049D280()
{
  unint64_t result = qword_100975A10;
  if (!qword_100975A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100975A10);
  }
  return result;
}

unint64_t sub_10049D2D8()
{
  unint64_t result = qword_100975A18;
  if (!qword_100975A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100975A18);
  }
  return result;
}

unint64_t sub_10049D330()
{
  unint64_t result = qword_100975A20;
  if (!qword_100975A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100975A20);
  }
  return result;
}

uint64_t sub_10049D384(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449656D756C6F76 && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449656369766564 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646573557473616CLL && a2 == 0xEC00000065746144)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_10049D56C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100975A28);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100975A28);
  if (qword_100969CD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946C0);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_10049D634()
{
  uint64_t v1 = *(int *)(_s14MacUnlockPhoneV17InitialKeyContextVMa(0) + 40);
  uint64_t v2 = *(void **)(v0 + v1);
  if (v2)
  {
    id v3 = *(id *)(v0 + v1);
LABEL_5:
    id v5 = v2;
    return v3;
  }
  id result = [objc_allocWithZone((Class)SDAuthenticationRequest) init];
  if (result)
  {
    *(void *)(v0 + v1) = result;
    id v3 = result;
    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_10049D6A4()
{
  sub_10000A844(&qword_10096BBB0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100771F30;
  if (qword_100969E70 != -1) {
    swift_once();
  }
  *(void *)(v0 + 56) = &type metadata for SDAuthentication.Operation.CheckIsBluetoothEnabled;
  *(void *)(v0 + 64) = &off_1009718E8;
  *(void *)(v0 + 96) = &type metadata for SDAuthentication.Operation.CheckIsWiFiEnabled;
  *(void *)(v0 + 104) = &off_1009718C8;
  *(void *)(v0 + 136) = &type metadata for SDAuthentication.Operation.CheckRemoteDeviceOSVersionIsSupported;
  *(void *)(v0 + 144) = &off_100971888;
  *(void *)(v0 + 176) = &type metadata for SDAuthentication.Operation.RecordRemoteDevice;
  *(void *)(v0 + 184) = &off_100971868;
  *(void *)(v0 + 216) = &type metadata for SDAuthentication.Operation.CheckEnabledWithPeer;
  *(void *)(v0 + 224) = &off_1009717A8;
  *(void *)(v0 + 256) = &type metadata for SDAuthentication.Operation.CheckLocalSecurityPolicy;
  *(void *)(v0 + 264) = &off_100971848;
  *(void *)(v0 + 296) = &type metadata for SDAuthentication.Operation.IncludeLastRegistrationDateInMessage;
  *(void *)(v0 + 304) = &off_100971788;
  *(void *)(v0 + 336) = &type metadata for SDAuthentication.Operation.IncludeSessionStartDateInMessage;
  *(void *)(v0 + 344) = &off_100971768;
  *(void *)(v0 + 376) = &type metadata for SDAuthentication.Operation.UseAuthTokenForFirstAKSTokenAsKeyInMessage;
  *(void *)(v0 + 384) = &off_100971748;
  *(void *)(v0 + 416) = &type metadata for SDAuthentication.Operation.SendRequestMessage;
  *(void *)(v0 + 424) = &off_1009717C8;
  return v0;
}

uint64_t sub_10049D7E4(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v19 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2 + 1;
    long long v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_bridgeObjectRetain();
    v11(a1 + 8, v8, v10);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)(a1 + v12);
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = type metadata accessor for Date();
    uint64_t v16 = *(void *)(v15 - 8);
    unint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    uint64_t v90 = a1;
    uint64_t v91 = v16;
    if (v17(v14, 1, v15))
    {
      uint64_t v18 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    BOOL v20 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v21 = v20[5];
    unint64_t v22 = &v13[v21];
    unint64_t v23 = &v14[v21];
    if (v17(&v14[v21], 1, v15))
    {
      uint64_t v24 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v22, v23, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v22, 0, 1, v15);
    }
    uint64_t v25 = v20[6];
    uint64_t v26 = &v13[v25];
    uint64_t v27 = &v14[v25];
    if (v17(&v14[v25], 1, v15))
    {
      uint64_t v28 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v26, v27, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v26, 0, 1, v15);
    }
    uint64_t v29 = v20[7];
    uint64_t v30 = &v13[v29];
    uint64_t v31 = &v14[v29];
    if (v17(&v14[v29], 1, v15))
    {
      uint64_t v32 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v30, v31, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v30, 0, 1, v15);
    }
    uint64_t v33 = v20[8];
    unint64_t v34 = &v13[v33];
    int64_t v35 = &v14[v33];
    if (v17(&v14[v33], 1, v15))
    {
      uint64_t v36 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v34, v35, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v34, 0, 1, v15);
    }
    uint64_t v37 = v20[9];
    uint64_t v38 = &v13[v37];
    uint64_t v39 = &v14[v37];
    if (v17(&v14[v37], 1, v15))
    {
      uint64_t v40 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v38, v39, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v38, 0, 1, v15);
    }
    uint64_t v41 = v20[10];
    uint64_t v42 = &v13[v41];
    uint64_t v43 = &v14[v41];
    if (v17(&v14[v41], 1, v15))
    {
      uint64_t v44 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v42, v43, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v42, 0, 1, v15);
    }
    uint64_t v45 = v20[11];
    int64_t v46 = &v13[v45];
    unint64_t v47 = &v14[v45];
    if (v17(&v14[v45], 1, v15))
    {
      uint64_t v48 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v46, v47, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v46, 0, 1, v15);
    }
    uint64_t v49 = v20[12];
    uint64_t v50 = &v13[v49];
    uint64_t v51 = &v14[v49];
    if (v17(&v14[v49], 1, v15))
    {
      uint64_t v52 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v50, v51, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v50, 0, 1, v15);
    }
    v13[v20[13]] = v14[v20[13]];
    uint64_t v53 = v20[14];
    uint64_t v54 = &v13[v53];
    uint64_t v55 = &v14[v53];
    if (v17(&v14[v53], 1, v15))
    {
      uint64_t v56 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v54, v55, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v54, 0, 1, v15);
    }
    uint64_t v57 = v20[15];
    uint64_t v58 = &v13[v57];
    os_log_type_t v59 = &v14[v57];
    if (v17(&v14[v57], 1, v15))
    {
      uint64_t v60 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v58, v59, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v58, 0, 1, v15);
    }
    uint64_t v61 = v20[16];
    unint64_t v62 = &v13[v61];
    unint64_t v63 = &v14[v61];
    if (v17(&v14[v61], 1, v15))
    {
      uint64_t v64 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v62, v63, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v62, 0, 1, v15);
    }
    uint64_t v65 = v20[17];
    id v66 = &v13[v65];
    id v67 = &v14[v65];
    if (v17(&v14[v65], 1, v15))
    {
      uint64_t v68 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v66, v67, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v66, 0, 1, v15);
    }
    uint64_t v69 = v20[18];
    unint64_t v70 = &v13[v69];
    int64_t v71 = &v14[v69];
    *(_DWORD *)unint64_t v70 = *(_DWORD *)v71;
    v70[4] = v71[4];
    v13[v20[19]] = v14[v20[19]];
    uint64_t v72 = v20[20];
    unint64_t v73 = &v13[v72];
    uint64_t v74 = &v14[v72];
    uint64_t v75 = *((void *)v74 + 1);
    *(void *)unint64_t v73 = *(void *)v74;
    *((void *)v73 + 1) = v75;
    uint64_t v76 = v20[21];
    uint64_t v77 = &v13[v76];
    uint64_t v78 = &v14[v76];
    uint64_t v79 = *((void *)v78 + 1);
    *(void *)uint64_t v77 = *(void *)v78;
    *((void *)v77 + 1) = v79;
    uint64_t v19 = v90;
    uint64_t v80 = a3[7];
    uint64_t v81 = (void *)(v90 + v80);
    uint64_t v82 = (char *)a2 + v80;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17(v82, 1, v15))
    {
      uint64_t v83 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
      uint64_t v84 = v91;
    }
    else
    {
      uint64_t v84 = v91;
      (*(void (**)(void *, char *, uint64_t))(v91 + 16))(v81, v82, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v91 + 56))(v81, 0, 1, v15);
    }
    uint64_t v85 = a3[8];
    uint64_t v86 = (void *)(v90 + v85);
    uint64_t v87 = (char *)a2 + v85;
    if (v17(v87, 1, v15))
    {
      uint64_t v88 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v86, v87, *(void *)(*(void *)(v88 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v84 + 16))(v86, v87, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v84 + 56))(v86, 0, 1, v15);
    }
  }
  return v19;
}

uint64_t sub_10049E2E8(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + 8;
  swift_bridgeObjectRelease();
  sub_10024D338(v4);
  uint64_t v5 = a1 + a2[6];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  if (!v7(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v5, v6);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v9 = v5 + v8[5];
  if (!v7(v9, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v9, v6);
  }
  uint64_t v10 = v5 + v8[6];
  if (!v7(v10, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v10, v6);
  }
  uint64_t v11 = v5 + v8[7];
  if (!v7(v11, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v11, v6);
  }
  uint64_t v12 = v5 + v8[8];
  if (!v7(v12, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v12, v6);
  }
  uint64_t v13 = v5 + v8[9];
  if (!v7(v13, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v13, v6);
  }
  uint64_t v14 = v5 + v8[10];
  if (!v7(v14, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v14, v6);
  }
  uint64_t v15 = v5 + v8[11];
  if (!v7(v15, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v15, v6);
  }
  uint64_t v16 = v5 + v8[12];
  if (!v7(v16, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v16, v6);
  }
  uint64_t v17 = v5 + v8[14];
  if (!v7(v17, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v17, v6);
  }
  uint64_t v18 = v5 + v8[15];
  if (!v7(v18, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v18, v6);
  }
  uint64_t v19 = v5 + v8[16];
  if (!v7(v19, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v19, v6);
  }
  uint64_t v20 = v5 + v8[17];
  if (!v7(v20, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v20, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = a1 + a2[7];
  if (!v7(v21, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v21, v6);
  }
  uint64_t v22 = a1 + a2[8];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v22, 1, v6);
  if (!result)
  {
    uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8);
    return v24(v22, v6);
  }
  return result;
}

uint64_t sub_10049E794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  v9(a1 + 8, v6, v8);
  uint64_t v90 = a3;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v16 = v14;
  uint64_t v88 = a2;
  uint64_t v89 = a1;
  if (v15(v12, 1, v13))
  {
    uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v18 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v19 = v18[5];
  uint64_t v20 = &v11[v19];
  uint64_t v21 = &v12[v19];
  if (v15(&v12[v19], 1, v13))
  {
    uint64_t v22 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v20, v21, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v13);
  }
  uint64_t v23 = v18[6];
  uint64_t v24 = &v11[v23];
  uint64_t v25 = &v12[v23];
  if (v15(&v12[v23], 1, v13))
  {
    uint64_t v26 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v24, v25, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v24, 0, 1, v13);
  }
  uint64_t v27 = v18[7];
  uint64_t v28 = &v11[v27];
  uint64_t v29 = &v12[v27];
  if (v15(&v12[v27], 1, v13))
  {
    uint64_t v30 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v28, v29, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v28, 0, 1, v13);
  }
  uint64_t v31 = v18[8];
  uint64_t v32 = &v11[v31];
  uint64_t v33 = &v12[v31];
  if (v15(&v12[v31], 1, v13))
  {
    uint64_t v34 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v32, v33, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v32, 0, 1, v13);
  }
  uint64_t v35 = v18[9];
  uint64_t v36 = &v11[v35];
  uint64_t v37 = &v12[v35];
  if (v15(&v12[v35], 1, v13))
  {
    uint64_t v38 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v36, v37, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v36, 0, 1, v13);
  }
  uint64_t v39 = v18[10];
  uint64_t v40 = &v11[v39];
  uint64_t v41 = &v12[v39];
  if (v15(&v12[v39], 1, v13))
  {
    uint64_t v42 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v40, v41, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v40, 0, 1, v13);
  }
  uint64_t v43 = v18[11];
  uint64_t v44 = &v11[v43];
  uint64_t v45 = &v12[v43];
  if (v15(&v12[v43], 1, v13))
  {
    uint64_t v46 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v44, v45, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v44, 0, 1, v13);
  }
  uint64_t v47 = v18[12];
  uint64_t v48 = &v11[v47];
  uint64_t v49 = &v12[v47];
  if (v15(&v12[v47], 1, v13))
  {
    uint64_t v50 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v48, v49, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v48, 0, 1, v13);
  }
  v11[v18[13]] = v12[v18[13]];
  uint64_t v51 = v18[14];
  uint64_t v52 = &v11[v51];
  uint64_t v53 = &v12[v51];
  if (v15(&v12[v51], 1, v13))
  {
    uint64_t v54 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v52, v53, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v52, 0, 1, v13);
  }
  uint64_t v55 = v18[15];
  uint64_t v56 = &v11[v55];
  uint64_t v57 = &v12[v55];
  if (v15(&v12[v55], 1, v13))
  {
    uint64_t v58 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v56, v57, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v56, 0, 1, v13);
  }
  uint64_t v59 = v18[16];
  uint64_t v60 = &v11[v59];
  uint64_t v61 = &v12[v59];
  if (v15(&v12[v59], 1, v13))
  {
    uint64_t v62 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v60, v61, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v60, 0, 1, v13);
  }
  uint64_t v63 = v18[17];
  uint64_t v64 = &v11[v63];
  uint64_t v65 = &v12[v63];
  if (v15(&v12[v63], 1, v13))
  {
    uint64_t v66 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v64, v65, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v64, 0, 1, v13);
  }
  uint64_t v67 = v18[18];
  uint64_t v68 = &v11[v67];
  uint64_t v69 = &v12[v67];
  *(_DWORD *)uint64_t v68 = *(_DWORD *)v69;
  v68[4] = v69[4];
  v11[v18[19]] = v12[v18[19]];
  uint64_t v70 = v18[20];
  int64_t v71 = &v11[v70];
  uint64_t v72 = &v12[v70];
  uint64_t v73 = *((void *)v72 + 1);
  *(void *)int64_t v71 = *(void *)v72;
  *((void *)v71 + 1) = v73;
  uint64_t v74 = v18[21];
  uint64_t v75 = &v11[v74];
  uint64_t v76 = &v12[v74];
  uint64_t v77 = *((void *)v76 + 1);
  *(void *)uint64_t v75 = *(void *)v76;
  *((void *)v75 + 1) = v77;
  uint64_t v78 = *(int *)(v90 + 28);
  uint64_t v79 = (void *)(v89 + v78);
  uint64_t v80 = (void *)(a2 + v78);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15((char *)v80, 1, v13))
  {
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
    uint64_t v82 = v16;
  }
  else
  {
    uint64_t v82 = v16;
    (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v79, v80, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v79, 0, 1, v13);
  }
  uint64_t v83 = *(int *)(v90 + 32);
  uint64_t v84 = (void *)(v89 + v83);
  uint64_t v85 = (const void *)(v88 + v83);
  if (v15((char *)(v88 + v83), 1, v13))
  {
    uint64_t v86 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v82 + 16))(v84, v85, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v82 + 56))(v84, 0, 1, v13);
  }
  return v89;
}

char *sub_10049F25C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2 + 1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10026F6D4(a1 + 1, v6);
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v112 = *(void *)(v10 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v112 + 48);
  int v12 = v11(v8, 1, v10);
  uint64_t v113 = v11;
  int v13 = v11(v9, 1, v10);
  uint64_t v111 = (char *)a1;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v112 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v112 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  int v19 = v113(&v8[v16], 1, v10);
  int v20 = v113(v18, 1, v10);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v17, v18, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v17, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v112 + 8))(v17, v10);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v112 + 24))(v17, v18, v10);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v8[v22];
  uint64_t v24 = &v9[v22];
  int v25 = v113(&v8[v22], 1, v10);
  int v26 = v113(v24, 1, v10);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v23, v24, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v23, 0, 1, v10);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v112 + 8))(v23, v10);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v112 + 24))(v23, v24, v10);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v8[v28];
  uint64_t v30 = &v9[v28];
  int v31 = v113(&v8[v28], 1, v10);
  int v32 = v113(v30, 1, v10);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v29, v30, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v29, 0, 1, v10);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v112 + 8))(v29, v10);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v112 + 24))(v29, v30, v10);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v8[v34];
  uint64_t v36 = &v9[v34];
  int v37 = v113(&v8[v34], 1, v10);
  int v38 = v113(v36, 1, v10);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v35, v36, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v35, 0, 1, v10);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v112 + 8))(v35, v10);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v112 + 24))(v35, v36, v10);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v8[v40];
  uint64_t v42 = &v9[v40];
  int v43 = v113(&v8[v40], 1, v10);
  int v44 = v113(v42, 1, v10);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v41, v42, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v41, 0, 1, v10);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v112 + 8))(v41, v10);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v112 + 24))(v41, v42, v10);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v8[v46];
  uint64_t v48 = &v9[v46];
  int v49 = v113(&v8[v46], 1, v10);
  int v50 = v113(v48, 1, v10);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v47, v48, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v47, 0, 1, v10);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v112 + 8))(v47, v10);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v112 + 24))(v47, v48, v10);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v8[v52];
  uint64_t v54 = &v9[v52];
  int v55 = v113(&v8[v52], 1, v10);
  int v56 = v113(v54, 1, v10);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v53, v54, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v53, 0, 1, v10);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v112 + 8))(v53, v10);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v112 + 24))(v53, v54, v10);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v8[v58];
  uint64_t v60 = &v9[v58];
  int v61 = v113(&v8[v58], 1, v10);
  int v62 = v113(v60, 1, v10);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v59, v60, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v59, 0, 1, v10);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v112 + 8))(v59, v10);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v112 + 24))(v59, v60, v10);
LABEL_55:
  v8[v15[13]] = v9[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v8[v64];
  uint64_t v66 = &v9[v64];
  int v67 = v113(&v8[v64], 1, v10);
  int v68 = v113(v66, 1, v10);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v65, v66, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v65, 0, 1, v10);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v112 + 8))(v65, v10);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v112 + 24))(v65, v66, v10);
LABEL_61:
  uint64_t v70 = v15[15];
  int64_t v71 = &v8[v70];
  uint64_t v72 = &v9[v70];
  int v73 = v113(&v8[v70], 1, v10);
  int v74 = v113(v72, 1, v10);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v71, v72, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v71, 0, 1, v10);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v112 + 8))(v71, v10);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v112 + 24))(v71, v72, v10);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v8[v76];
  uint64_t v78 = &v9[v76];
  int v79 = v113(&v8[v76], 1, v10);
  int v80 = v113(v78, 1, v10);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v77, v78, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v77, 0, 1, v10);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v112 + 8))(v77, v10);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v112 + 24))(v77, v78, v10);
LABEL_73:
  uint64_t v82 = v15[17];
  uint64_t v83 = &v8[v82];
  uint64_t v84 = &v9[v82];
  int v85 = v113(&v8[v82], 1, v10);
  int v86 = v113(v84, 1, v10);
  if (v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v83, v84, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v83, 0, 1, v10);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v86)
  {
    (*(void (**)(char *, uint64_t))(v112 + 8))(v83, v10);
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v112 + 24))(v83, v84, v10);
LABEL_79:
  uint64_t v88 = v15[18];
  uint64_t v89 = &v8[v88];
  uint64_t v90 = &v9[v88];
  int v91 = *(_DWORD *)v90;
  v89[4] = v90[4];
  *(_DWORD *)uint64_t v89 = v91;
  v8[v15[19]] = v9[v15[19]];
  uint64_t v92 = v15[20];
  uint64_t v93 = &v8[v92];
  id v94 = &v9[v92];
  *(void *)uint64_t v93 = *(void *)v94;
  *((void *)v93 + 1) = *((void *)v94 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v95 = v15[21];
  uint64_t v96 = &v8[v95];
  uint64_t v97 = &v9[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  *((void *)v96 + 1) = *((void *)v97 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v98 = a3[7];
  uint64_t v99 = &v111[v98];
  uint64_t v100 = (char *)a2 + v98;
  int v101 = v113(&v111[v98], 1, v10);
  int v102 = v113(v100, 1, v10);
  if (v101)
  {
    if (!v102)
    {
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v99, v100, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v99, 0, 1, v10);
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  if (v102)
  {
    (*(void (**)(char *, uint64_t))(v112 + 8))(v99, v10);
LABEL_84:
    uint64_t v103 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v99, v100, *(void *)(*(void *)(v103 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(char *, char *, uint64_t))(v112 + 24))(v99, v100, v10);
LABEL_85:
  uint64_t v104 = a3[8];
  uint64_t v105 = &v111[v104];
  uint64_t v106 = (char *)a2 + v104;
  int v107 = v113(&v111[v104], 1, v10);
  int v108 = v113(v106, 1, v10);
  if (!v107)
  {
    if (!v108)
    {
      (*(void (**)(char *, char *, uint64_t))(v112 + 24))(v105, v106, v10);
      return v111;
    }
    (*(void (**)(char *, uint64_t))(v112 + 8))(v105, v10);
    goto LABEL_90;
  }
  if (v108)
  {
LABEL_90:
    uint64_t v109 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v105, v106, *(void *)(*(void *)(v109 - 8) + 64));
    return v111;
  }
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v105, v106, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56))(v105, 0, 1, v10);
  return v111;
}

uint64_t sub_1004A0334(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v75 = a1;
  uint64_t v76 = v10;
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  int v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v14 = v13[5];
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  if (v11(&v8[v14], 1, v9))
  {
    uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v15, v16, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v15, 0, 1, v9);
  }
  uint64_t v18 = v13[6];
  int v19 = &v7[v18];
  int v20 = &v8[v18];
  if (v11(&v8[v18], 1, v9))
  {
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v19, v20, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v19, 0, 1, v9);
  }
  uint64_t v22 = v13[7];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  if (v11(&v8[v22], 1, v9))
  {
    uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v23, v24, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v23, 0, 1, v9);
  }
  uint64_t v26 = v13[8];
  uint64_t v27 = &v7[v26];
  uint64_t v28 = &v8[v26];
  if (v11(&v8[v26], 1, v9))
  {
    uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v27, v28, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v27, 0, 1, v9);
  }
  uint64_t v30 = v13[9];
  int v31 = &v7[v30];
  int v32 = &v8[v30];
  if (v11(&v8[v30], 1, v9))
  {
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v31, v32, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v31, 0, 1, v9);
  }
  uint64_t v34 = v13[10];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  if (v11(&v8[v34], 1, v9))
  {
    uint64_t v37 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v35, v36, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v35, 0, 1, v9);
  }
  uint64_t v38 = v13[11];
  uint64_t v39 = &v7[v38];
  uint64_t v40 = &v8[v38];
  if (v11(&v8[v38], 1, v9))
  {
    uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v39, v40, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v39, 0, 1, v9);
  }
  uint64_t v42 = v13[12];
  int v43 = &v7[v42];
  int v44 = &v8[v42];
  if (v11(&v8[v42], 1, v9))
  {
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v43, v44, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v43, 0, 1, v9);
  }
  v7[v13[13]] = v8[v13[13]];
  uint64_t v46 = v13[14];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  if (v11(&v8[v46], 1, v9))
  {
    uint64_t v49 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v47, v48, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v47, 0, 1, v9);
  }
  uint64_t v50 = v13[15];
  uint64_t v51 = &v7[v50];
  uint64_t v52 = &v8[v50];
  if (v11(&v8[v50], 1, v9))
  {
    uint64_t v53 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v51, v52, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v51, 0, 1, v9);
  }
  uint64_t v54 = v13[16];
  int v55 = &v7[v54];
  int v56 = &v8[v54];
  if (v11(&v8[v54], 1, v9))
  {
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v55, v56, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v55, 0, 1, v9);
  }
  uint64_t v58 = v13[17];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  if (v11(&v8[v58], 1, v9))
  {
    uint64_t v61 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v59, v60, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v59, 0, 1, v9);
  }
  uint64_t v62 = v13[18];
  uint64_t v63 = &v7[v62];
  uint64_t v64 = &v8[v62];
  *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
  v63[4] = v64[4];
  v7[v13[19]] = v8[v13[19]];
  *(_OWORD *)&v7[v13[20]] = *(_OWORD *)&v8[v13[20]];
  *(_OWORD *)&v7[v13[21]] = *(_OWORD *)&v8[v13[21]];
  uint64_t v65 = a3[7];
  uint64_t v66 = (void *)(v75 + v65);
  int v67 = (const void *)(a2 + v65);
  if (v11((char *)(a2 + v65), 1, v9))
  {
    uint64_t v68 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
    uint64_t v69 = v76;
  }
  else
  {
    uint64_t v69 = v76;
    (*(void (**)(void *, const void *, uint64_t))(v76 + 32))(v66, v67, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v76 + 56))(v66, 0, 1, v9);
  }
  uint64_t v70 = a3[8];
  int64_t v71 = (void *)(v75 + v70);
  uint64_t v72 = (void *)(a2 + v70);
  if (v11((char *)v72, 1, v9))
  {
    uint64_t v73 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v69 + 32))(v71, v72, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v71, 0, 1, v9);
  }
  return v75;
}

uint64_t sub_1004A0DA0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  sub_10024D338(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v114 = *(void *)(v9 - 8);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v114 + 48);
  int v11 = v10(v7, 1, v9);
  uint64_t v115 = v10;
  int v12 = v10(v8, 1, v9);
  uint64_t v113 = a1;
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v15 = v14[5];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  int v18 = v115(&v7[v15], 1, v9);
  int v19 = v115(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v16, v17, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = v14[6];
  uint64_t v22 = &v7[v21];
  uint64_t v23 = &v8[v21];
  int v24 = v115(&v7[v21], 1, v9);
  int v25 = v115(v23, 1, v9);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v22, v23, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v22, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v22, v9);
LABEL_18:
    uint64_t v26 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v22, v23, v9);
LABEL_19:
  uint64_t v27 = v14[7];
  uint64_t v28 = &v7[v27];
  uint64_t v29 = &v8[v27];
  int v30 = v115(&v7[v27], 1, v9);
  int v31 = v115(v29, 1, v9);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v28, v29, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v28, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v28, v9);
LABEL_24:
    uint64_t v32 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v28, v29, v9);
LABEL_25:
  uint64_t v33 = v14[8];
  uint64_t v34 = &v7[v33];
  uint64_t v35 = &v8[v33];
  int v36 = v115(&v7[v33], 1, v9);
  int v37 = v115(v35, 1, v9);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v34, v35, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v34, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v34, v9);
LABEL_30:
    uint64_t v38 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v34, v35, v9);
LABEL_31:
  uint64_t v39 = v14[9];
  uint64_t v40 = &v7[v39];
  uint64_t v41 = &v8[v39];
  int v42 = v115(&v7[v39], 1, v9);
  int v43 = v115(v41, 1, v9);
  if (v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v40, v41, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v40, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v40, v9);
LABEL_36:
    uint64_t v44 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v40, v41, v9);
LABEL_37:
  uint64_t v45 = v14[10];
  uint64_t v46 = &v7[v45];
  uint64_t v47 = &v8[v45];
  int v48 = v115(&v7[v45], 1, v9);
  int v49 = v115(v47, 1, v9);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v46, v47, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v46, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v46, v9);
LABEL_42:
    uint64_t v50 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v46, v47, v9);
LABEL_43:
  uint64_t v51 = v14[11];
  uint64_t v52 = &v7[v51];
  uint64_t v53 = &v8[v51];
  int v54 = v115(&v7[v51], 1, v9);
  int v55 = v115(v53, 1, v9);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v52, v53, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v52, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v55)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v52, v9);
LABEL_48:
    uint64_t v56 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v52, v53, v9);
LABEL_49:
  uint64_t v57 = v14[12];
  uint64_t v58 = &v7[v57];
  uint64_t v59 = &v8[v57];
  int v60 = v115(&v7[v57], 1, v9);
  int v61 = v115(v59, 1, v9);
  if (v60)
  {
    if (!v61)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v58, v59, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v58, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v61)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v58, v9);
LABEL_54:
    uint64_t v62 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v58, v59, v9);
LABEL_55:
  v7[v14[13]] = v8[v14[13]];
  uint64_t v63 = v14[14];
  uint64_t v64 = &v7[v63];
  uint64_t v65 = &v8[v63];
  int v66 = v115(&v7[v63], 1, v9);
  int v67 = v115(v65, 1, v9);
  if (v66)
  {
    if (!v67)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v64, v65, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v64, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v67)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v64, v9);
LABEL_60:
    uint64_t v68 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v64, v65, *(void *)(*(void *)(v68 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v64, v65, v9);
LABEL_61:
  uint64_t v69 = v14[15];
  uint64_t v70 = &v7[v69];
  int64_t v71 = &v8[v69];
  int v72 = v115(&v7[v69], 1, v9);
  int v73 = v115(v71, 1, v9);
  if (v72)
  {
    if (!v73)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v70, v71, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v70, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v73)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v70, v9);
LABEL_66:
    uint64_t v74 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v70, v71, *(void *)(*(void *)(v74 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v70, v71, v9);
LABEL_67:
  uint64_t v75 = v14[16];
  uint64_t v76 = &v7[v75];
  uint64_t v77 = &v8[v75];
  int v78 = v115(&v7[v75], 1, v9);
  int v79 = v115(v77, 1, v9);
  if (v78)
  {
    if (!v79)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v76, v77, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v76, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v79)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v76, v9);
LABEL_72:
    uint64_t v80 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v76, v77, *(void *)(*(void *)(v80 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v76, v77, v9);
LABEL_73:
  uint64_t v81 = v14[17];
  uint64_t v82 = &v7[v81];
  uint64_t v83 = &v8[v81];
  int v84 = v115(&v7[v81], 1, v9);
  int v85 = v115(v83, 1, v9);
  if (v84)
  {
    if (!v85)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v82, v83, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v82, 0, 1, v9);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v85)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v82, v9);
LABEL_78:
    uint64_t v86 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v82, v83, *(void *)(*(void *)(v86 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v82, v83, v9);
LABEL_79:
  uint64_t v87 = v14[18];
  uint64_t v88 = &v7[v87];
  uint64_t v89 = &v8[v87];
  *(_DWORD *)uint64_t v88 = *(_DWORD *)v89;
  v88[4] = v89[4];
  v7[v14[19]] = v8[v14[19]];
  uint64_t v90 = v14[20];
  int v91 = &v7[v90];
  uint64_t v92 = &v8[v90];
  uint64_t v94 = *(void *)v92;
  uint64_t v93 = *((void *)v92 + 1);
  *(void *)int v91 = v94;
  *((void *)v91 + 1) = v93;
  swift_bridgeObjectRelease();
  uint64_t v95 = v14[21];
  uint64_t v96 = &v7[v95];
  uint64_t v97 = &v8[v95];
  uint64_t v99 = *(void *)v97;
  uint64_t v98 = *((void *)v97 + 1);
  *(void *)uint64_t v96 = v99;
  *((void *)v96 + 1) = v98;
  swift_bridgeObjectRelease();
  uint64_t v100 = a3[7];
  int v101 = (void *)(v113 + v100);
  int v102 = (char *)(a2 + v100);
  int v103 = v115((char *)(v113 + v100), 1, v9);
  int v104 = v115(v102, 1, v9);
  if (v103)
  {
    if (!v104)
    {
      (*(void (**)(void *, char *, uint64_t))(v114 + 32))(v101, v102, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v114 + 56))(v101, 0, 1, v9);
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  if (v104)
  {
    (*(void (**)(void *, uint64_t))(v114 + 8))(v101, v9);
LABEL_84:
    uint64_t v105 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v101, v102, *(void *)(*(void *)(v105 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(void *, char *, uint64_t))(v114 + 40))(v101, v102, v9);
LABEL_85:
  uint64_t v106 = a3[8];
  int v107 = (void *)(v113 + v106);
  int v108 = (char *)(a2 + v106);
  int v109 = v115((char *)(v113 + v106), 1, v9);
  int v110 = v115(v108, 1, v9);
  if (!v109)
  {
    if (!v110)
    {
      (*(void (**)(void *, char *, uint64_t))(v114 + 40))(v107, v108, v9);
      return v113;
    }
    (*(void (**)(void *, uint64_t))(v114 + 8))(v107, v9);
    goto LABEL_90;
  }
  if (v110)
  {
LABEL_90:
    uint64_t v111 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v107, v108, *(void *)(*(void *)(v111 - 8) + 64));
    return v113;
  }
  (*(void (**)(void *, char *, uint64_t))(v114 + 32))(v107, v108, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v114 + 56))(v107, 0, 1, v9);
  return v113;
}

uint64_t sub_1004A1E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004A1E70);
}

uint64_t sub_1004A1E70(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      int v11 = (char *)a1 + *(int *)(a3 + 24);
      int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000A844((uint64_t *)&unk_100975040);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1004A1FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004A1FB4);
}

void *sub_1004A1FB4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      int v11 = (char *)v5 + *(int *)(a4 + 24);
      int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000A844((uint64_t *)&unk_100975040);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t _s14MacUnlockPhoneV18InitialLockContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100975A98);
}

void sub_1004A2104()
{
  type metadata accessor for SDAuthenticationSessionMetrics();
  if (v0 <= 0x3F)
  {
    sub_100271710();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1004A21E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004A21F8);
}

uint64_t sub_1004A21F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SDAuthenticationCommonOperationInput();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1004A22BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004A22D0);
}

uint64_t sub_1004A22D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SDAuthenticationCommonOperationInput();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t _s14MacUnlockPhoneV4FlowVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100975B38);
}

uint64_t sub_1004A23B0()
{
  uint64_t result = type metadata accessor for SDAuthenticationCommonOperationInput();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1004A2454(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v14 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void *)(v10 - 8);
    int v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    uint64_t v105 = v12;
    uint64_t v104 = v11;
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v16 = v15[5];
    uint64_t v17 = &v8[v16];
    int v18 = &v9[v16];
    int v19 = v105;
    if (v105(&v9[v16], 1, v10))
    {
      uint64_t v20 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v17, v18, v10);
      int v19 = v105;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v17, 0, 1, v10);
    }
    uint64_t v21 = v15[6];
    uint64_t v22 = &v8[v21];
    uint64_t v23 = &v9[v21];
    if (v19(&v9[v21], 1, v10))
    {
      uint64_t v24 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v22, v23, v10);
      int v19 = v105;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v22, 0, 1, v10);
    }
    uint64_t v25 = v15[7];
    uint64_t v26 = &v8[v25];
    uint64_t v27 = &v9[v25];
    if (v19(&v9[v25], 1, v10))
    {
      uint64_t v28 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v26, v27, v10);
      int v19 = v105;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v26, 0, 1, v10);
    }
    uint64_t v29 = v15[8];
    int v30 = &v8[v29];
    int v31 = &v9[v29];
    if (v19(&v9[v29], 1, v10))
    {
      uint64_t v32 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v30, v31, v10);
      int v19 = v105;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v30, 0, 1, v10);
    }
    uint64_t v33 = v15[9];
    uint64_t v34 = &v8[v33];
    uint64_t v35 = &v9[v33];
    if (v19(&v9[v33], 1, v10))
    {
      uint64_t v36 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v34, v35, v10);
      int v19 = v105;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v34, 0, 1, v10);
    }
    uint64_t v37 = v15[10];
    uint64_t v38 = &v8[v37];
    uint64_t v39 = &v9[v37];
    if (v19(&v9[v37], 1, v10))
    {
      uint64_t v40 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v38, v39, v10);
      int v19 = v105;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v38, 0, 1, v10);
    }
    uint64_t v41 = v15[11];
    int v42 = &v8[v41];
    int v43 = &v9[v41];
    if (v19(&v9[v41], 1, v10))
    {
      uint64_t v44 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v42, v43, v10);
      int v19 = v105;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v42, 0, 1, v10);
    }
    uint64_t v45 = v15[12];
    uint64_t v46 = &v8[v45];
    uint64_t v47 = &v9[v45];
    if (v19(&v9[v45], 1, v10))
    {
      uint64_t v48 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v46, v47, v10);
      int v19 = v105;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v46, 0, 1, v10);
    }
    v8[v15[13]] = v9[v15[13]];
    uint64_t v49 = v15[14];
    uint64_t v50 = &v8[v49];
    uint64_t v51 = &v9[v49];
    if (v19(&v9[v49], 1, v10))
    {
      uint64_t v52 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v50, v51, v10);
      int v19 = v105;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v50, 0, 1, v10);
    }
    uint64_t v53 = v15[15];
    int v54 = &v8[v53];
    int v55 = &v9[v53];
    if (v19(&v9[v53], 1, v10))
    {
      uint64_t v56 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v54, v55, v10);
      int v19 = v105;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v54, 0, 1, v10);
    }
    uint64_t v57 = v15[16];
    uint64_t v58 = &v8[v57];
    uint64_t v59 = &v9[v57];
    if (v19(&v9[v57], 1, v10))
    {
      uint64_t v60 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v58, v59, v10);
      int v19 = v105;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v58, 0, 1, v10);
    }
    uint64_t v61 = v15[17];
    uint64_t v62 = &v8[v61];
    uint64_t v63 = &v9[v61];
    if (v19(&v9[v61], 1, v10))
    {
      uint64_t v64 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v62, v63, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v62, 0, 1, v10);
    }
    uint64_t v65 = v15[18];
    int v66 = &v8[v65];
    int v67 = &v9[v65];
    *(_DWORD *)int v66 = *(_DWORD *)v67;
    v66[4] = v67[4];
    v8[v15[19]] = v9[v15[19]];
    uint64_t v68 = v15[20];
    uint64_t v69 = &v8[v68];
    uint64_t v70 = &v9[v68];
    uint64_t v71 = *((void *)v70 + 1);
    *(void *)uint64_t v69 = *(void *)v70;
    *((void *)v69 + 1) = v71;
    uint64_t v72 = v15[21];
    int v73 = &v8[v72];
    uint64_t v74 = &v9[v72];
    uint64_t v75 = *((void *)v74 + 1);
    *(void *)int v73 = *(void *)v74;
    *((void *)v73 + 1) = v75;
    uint64_t v76 = a3[6];
    uint64_t v77 = (char *)a1 + v76;
    int v78 = (char *)a2 + v76;
    long long v79 = *(_OWORD *)((char *)a2 + v76 + 24);
    *(_OWORD *)((char *)a1 + v76 + 24) = v79;
    uint64_t v80 = v79;
    uint64_t v81 = a2;
    uint64_t v14 = a1;
    uint64_t v82 = **(void (***)(char *, char *, uint64_t))(v79 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v82(v77, v78, v80);
    uint64_t v83 = v81;
    uint64_t v84 = a3[7];
    int v85 = (char *)v14 + v84;
    uint64_t v86 = (char *)v81 + v84;
    if (v105((char *)v81 + v84, 1, v10))
    {
      uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v85, v86, *(void *)(*(void *)(v87 - 8) + 64));
      uint64_t v88 = v104;
    }
    else
    {
      uint64_t v88 = v104;
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v85, v86, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v104 + 56))(v85, 0, 1, v10);
    }
    uint64_t v89 = a3[8];
    uint64_t v90 = (char *)v14 + v89;
    int v91 = (char *)v81 + v89;
    if (v105((char *)v81 + v89, 1, v10))
    {
      uint64_t v92 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v90, v91, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v90, 0, 1, v10);
    }
    uint64_t v93 = a3[9];
    uint64_t v94 = (char *)v14 + v93;
    uint64_t v95 = (void *)((char *)v83 + v93);
    unint64_t v96 = v95[1];
    if (v96 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
    }
    else
    {
      uint64_t v97 = *v95;
      sub_10025ADCC(*v95, v95[1]);
      *(void *)uint64_t v94 = v97;
      *((void *)v94 + 1) = v96;
    }
    uint64_t v98 = a3[10];
    uint64_t v99 = a3[11];
    uint64_t v100 = *(void **)((char *)v83 + v98);
    *(void *)((char *)v14 + v98) = v100;
    *((unsigned char *)v14 + v99) = *((unsigned char *)v83 + v99);
    id v101 = v100;
  }
  return v14;
}

void sub_1004A3030(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v9 = v4 + v8[5];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = v4 + v8[6];
  if (!v7(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = v4 + v8[7];
  if (!v7(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = v4 + v8[8];
  if (!v7(v12, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  }
  uint64_t v13 = v4 + v8[9];
  if (!v7(v13, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v5);
  }
  uint64_t v14 = v4 + v8[10];
  if (!v7(v14, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = v4 + v8[11];
  if (!v7(v15, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = v4 + v8[12];
  if (!v7(v16, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = v4 + v8[14];
  if (!v7(v17, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = v4 + v8[15];
  if (!v7(v18, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, v5);
  }
  uint64_t v19 = v4 + v8[16];
  if (!v7(v19, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = v4 + v8[17];
  if (!v7(v20, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v20, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10024D338(a1 + a2[6]);
  uint64_t v21 = a1 + a2[7];
  if (!v7(v21, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v5);
  }
  uint64_t v22 = a1 + a2[8];
  if (!v7(v22, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v5);
  }
  uint64_t v23 = (uint64_t *)(a1 + a2[9]);
  unint64_t v24 = v23[1];
  if (v24 >> 60 != 15) {
    sub_100250CC4(*v23, v24);
  }
  uint64_t v25 = *(void **)(a1 + a2[10]);
}

void *sub_1004A34E8(void *a1, char *a2, int *a3)
{
  *a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  int v103 = v11;
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v14 = v13[5];
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  if (v103(&v8[v14], 1, v9))
  {
    uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v16, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
  }
  uint64_t v18 = v13[6];
  uint64_t v19 = &v7[v18];
  uint64_t v20 = &v8[v18];
  if (v103(&v8[v18], 1, v9))
  {
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v20, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  }
  uint64_t v22 = v13[7];
  uint64_t v23 = &v7[v22];
  unint64_t v24 = &v8[v22];
  if (v103(&v8[v22], 1, v9))
  {
    uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
  }
  uint64_t v26 = v13[8];
  uint64_t v27 = &v7[v26];
  uint64_t v28 = &v8[v26];
  if (v103(&v8[v26], 1, v9))
  {
    uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v27, v28, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
  }
  uint64_t v30 = v13[9];
  int v31 = &v7[v30];
  uint64_t v32 = &v8[v30];
  if (v103(&v8[v30], 1, v9))
  {
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v31, v32, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
  }
  uint64_t v34 = v13[10];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  if (v103(&v8[v34], 1, v9))
  {
    uint64_t v37 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
  }
  uint64_t v38 = v13[11];
  uint64_t v39 = &v7[v38];
  uint64_t v40 = &v8[v38];
  if (v103(&v8[v38], 1, v9))
  {
    uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v39, v40, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v9);
  }
  uint64_t v42 = v13[12];
  int v43 = &v7[v42];
  uint64_t v44 = &v8[v42];
  if (v103(&v8[v42], 1, v9))
  {
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v43, v44, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0, 1, v9);
  }
  v7[v13[13]] = v8[v13[13]];
  uint64_t v46 = v13[14];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  if (v103(&v8[v46], 1, v9))
  {
    uint64_t v49 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
  }
  uint64_t v50 = v13[15];
  uint64_t v51 = &v7[v50];
  uint64_t v52 = &v8[v50];
  if (v103(&v8[v50], 1, v9))
  {
    uint64_t v53 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v51, v52, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v51, 0, 1, v9);
  }
  uint64_t v54 = v13[16];
  int v55 = &v7[v54];
  uint64_t v56 = &v8[v54];
  if (v103(&v8[v54], 1, v9))
  {
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v55, v56, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v55, 0, 1, v9);
  }
  uint64_t v58 = v13[17];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  uint64_t v102 = v10;
  if (v103(&v8[v58], 1, v9))
  {
    uint64_t v61 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
  }
  uint64_t v62 = v13[18];
  uint64_t v63 = &v7[v62];
  uint64_t v64 = &v8[v62];
  *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
  v63[4] = v64[4];
  v7[v13[19]] = v8[v13[19]];
  uint64_t v65 = v13[20];
  int v66 = &v7[v65];
  int v67 = &v8[v65];
  uint64_t v68 = *((void *)v67 + 1);
  *(void *)int v66 = *(void *)v67;
  *((void *)v66 + 1) = v68;
  uint64_t v69 = v13[21];
  uint64_t v70 = &v7[v69];
  uint64_t v71 = &v8[v69];
  uint64_t v72 = *((void *)v71 + 1);
  *(void *)uint64_t v70 = *(void *)v71;
  *((void *)v70 + 1) = v72;
  uint64_t v73 = a3[6];
  uint64_t v74 = (char *)a1 + v73;
  uint64_t v75 = &a2[v73];
  long long v76 = *(_OWORD *)&a2[v73 + 24];
  *(_OWORD *)((char *)a1 + v73 + 24) = v76;
  uint64_t v77 = v76;
  int v78 = a2;
  long long v79 = a1;
  uint64_t v80 = **(void (***)(char *, char *, uint64_t))(v76 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v81 = v75;
  uint64_t v82 = a3;
  v80(v74, v81, v77);
  uint64_t v83 = a3[7];
  uint64_t v84 = (char *)v79 + v83;
  int v85 = &v78[v83];
  if (v103(&v78[v83], 1, v9))
  {
    uint64_t v86 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
    uint64_t v87 = v102;
  }
  else
  {
    uint64_t v87 = v102;
    (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v84, v85, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v84, 0, 1, v9);
  }
  uint64_t v88 = v82[8];
  uint64_t v89 = (char *)v79 + v88;
  uint64_t v90 = &v78[v88];
  if (v103(&v78[v88], 1, v9))
  {
    uint64_t v91 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v89, v90, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v89, 0, 1, v9);
  }
  uint64_t v92 = v82[9];
  uint64_t v93 = (char *)v79 + v92;
  uint64_t v94 = &v78[v92];
  unint64_t v95 = *((void *)v94 + 1);
  if (v95 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v93 = *(_OWORD *)v94;
  }
  else
  {
    uint64_t v96 = *(void *)v94;
    sub_10025ADCC(*(void *)v94, *((void *)v94 + 1));
    *(void *)uint64_t v93 = v96;
    *((void *)v93 + 1) = v95;
  }
  uint64_t v97 = v82[10];
  uint64_t v98 = v82[11];
  uint64_t v99 = *(void **)&v78[v97];
  *(void *)((char *)v79 + v97) = v99;
  *((unsigned char *)v79 + v98) = v78[v98];
  id v100 = v99;
  return v79;
}

char *sub_1004A402C(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  uint64_t v124 = a2;
  uint64_t v125 = a1;
  uint64_t v123 = a3;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  unint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  int v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v7[v76];
  int v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  uint64_t v83 = &v7[v82];
  uint64_t v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v83, v84, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v86)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v83, v84, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  uint64_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  int v91 = *(_DWORD *)v90;
  v89[4] = v90[4];
  *(_DWORD *)uint64_t v89 = v91;
  v7[v15[19]] = v8[v15[19]];
  uint64_t v92 = v15[20];
  uint64_t v93 = &v7[v92];
  uint64_t v94 = &v8[v92];
  *(void *)uint64_t v93 = *(void *)v94;
  *((void *)v93 + 1) = *((void *)v94 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v95 = v15[21];
  uint64_t v96 = &v7[v95];
  uint64_t v97 = &v8[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  *((void *)v96 + 1) = *((void *)v97 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10026F6D4((uint64_t *)&v125[v123[6]], (void *)((char *)v124 + v123[6]));
  uint64_t v98 = v123[7];
  uint64_t v99 = &v125[v98];
  id v100 = (char *)v124 + v98;
  int v101 = v11(&v125[v98], 1, v9);
  int v102 = v11(v100, 1, v9);
  if (v101)
  {
    if (!v102)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v99, v100, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v99, 0, 1, v9);
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  if (v102)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v99, v9);
LABEL_84:
    uint64_t v103 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v99, v100, *(void *)(*(void *)(v103 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v99, v100, v9);
LABEL_85:
  uint64_t v104 = v123[8];
  uint64_t v105 = &v125[v104];
  uint64_t v106 = (char *)v124 + v104;
  int v107 = v11(&v125[v104], 1, v9);
  int v108 = v11(v106, 1, v9);
  if (v107)
  {
    if (!v108)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v105, v106, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v105, 0, 1, v9);
      goto LABEL_91;
    }
    goto LABEL_90;
  }
  if (v108)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v105, v9);
LABEL_90:
    uint64_t v109 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v105, v106, *(void *)(*(void *)(v109 - 8) + 64));
    goto LABEL_91;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v105, v106, v9);
LABEL_91:
  uint64_t v110 = v123[9];
  uint64_t v111 = (uint64_t *)&v125[v110];
  uint64_t v112 = (void *)((char *)v124 + v110);
  unint64_t v113 = *(void *)((char *)v124 + v110 + 8);
  if (*(void *)&v125[v110 + 8] >> 60 != 15)
  {
    if (v113 >> 60 != 15)
    {
      uint64_t v115 = *v112;
      sub_10025ADCC(*v112, v113);
      uint64_t v116 = *v111;
      unint64_t v117 = v111[1];
      uint64_t *v111 = v115;
      v111[1] = v113;
      sub_100250CC4(v116, v117);
      goto LABEL_98;
    }
    sub_10026F904((uint64_t)v111);
    goto LABEL_96;
  }
  if (v113 >> 60 == 15)
  {
LABEL_96:
    *(_OWORD *)uint64_t v111 = *(_OWORD *)v112;
    goto LABEL_98;
  }
  uint64_t v114 = *v112;
  sub_10025ADCC(*v112, v113);
  uint64_t *v111 = v114;
  v111[1] = v113;
LABEL_98:
  uint64_t v118 = v123[10];
  uint64_t v119 = *(void **)&v125[v118];
  uint64_t v120 = *(void **)((char *)v124 + v118);
  *(void *)&v125[v118] = v120;
  id v121 = v120;

  v125[v123[11]] = *((unsigned char *)v124 + v123[11]);
  return v125;
}

void *sub_1004A50F0(void *a1, char *a2, int *a3)
{
  *a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v79 = a3;
  int v80 = a2;
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  int v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v14 = v13[5];
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  if (v11(&v8[v14], 1, v9))
  {
    uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v16, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
  }
  uint64_t v18 = v13[6];
  int v19 = &v7[v18];
  int v20 = &v8[v18];
  if (v11(&v8[v18], 1, v9))
  {
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v20, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  }
  uint64_t v22 = v13[7];
  uint64_t v23 = &v7[v22];
  unint64_t v24 = &v8[v22];
  if (v11(&v8[v22], 1, v9))
  {
    uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
  }
  uint64_t v26 = v13[8];
  uint64_t v27 = &v7[v26];
  uint64_t v28 = &v8[v26];
  if (v11(&v8[v26], 1, v9))
  {
    uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v27, v28, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
  }
  uint64_t v30 = v13[9];
  int v31 = &v7[v30];
  int v32 = &v8[v30];
  if (v11(&v8[v30], 1, v9))
  {
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v31, v32, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
  }
  uint64_t v34 = v13[10];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  if (v11(&v8[v34], 1, v9))
  {
    uint64_t v37 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
  }
  uint64_t v38 = v13[11];
  uint64_t v39 = &v7[v38];
  uint64_t v40 = &v8[v38];
  if (v11(&v8[v38], 1, v9))
  {
    uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v39, v40, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v9);
  }
  uint64_t v42 = v13[12];
  int v43 = &v7[v42];
  int v44 = &v8[v42];
  if (v11(&v8[v42], 1, v9))
  {
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v43, v44, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0, 1, v9);
  }
  v7[v13[13]] = v8[v13[13]];
  uint64_t v46 = v13[14];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  if (v11(&v8[v46], 1, v9))
  {
    uint64_t v49 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
  }
  uint64_t v50 = v13[15];
  uint64_t v51 = &v7[v50];
  uint64_t v52 = &v8[v50];
  if (v11(&v8[v50], 1, v9))
  {
    uint64_t v53 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v51, v52, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v51, 0, 1, v9);
  }
  uint64_t v54 = v13[16];
  int v55 = &v7[v54];
  int v56 = &v8[v54];
  if (v11(&v8[v54], 1, v9))
  {
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v55, v56, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v55, 0, 1, v9);
  }
  uint64_t v58 = v13[17];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  if (v11(&v8[v58], 1, v9))
  {
    uint64_t v61 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
  }
  uint64_t v62 = v13[18];
  uint64_t v63 = &v7[v62];
  uint64_t v64 = &v8[v62];
  *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
  v63[4] = v64[4];
  v7[v13[19]] = v8[v13[19]];
  *(_OWORD *)&v7[v13[20]] = *(_OWORD *)&v8[v13[20]];
  *(_OWORD *)&v7[v13[21]] = *(_OWORD *)&v8[v13[21]];
  uint64_t v65 = v79[6];
  uint64_t v66 = v79[7];
  int v67 = (char *)a1 + v65;
  int v68 = &v80[v65];
  long long v69 = *((_OWORD *)v68 + 1);
  *(_OWORD *)int v67 = *(_OWORD *)v68;
  *((_OWORD *)v67 + 1) = v69;
  *((void *)v67 + 4) = *((void *)v68 + 4);
  uint64_t v70 = (char *)a1 + v66;
  uint64_t v71 = &v80[v66];
  if (v11(&v80[v66], 1, v9))
  {
    uint64_t v72 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v70, v71, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v70, 0, 1, v9);
  }
  uint64_t v73 = v79[8];
  int v74 = (char *)a1 + v73;
  uint64_t v75 = &v80[v73];
  if (v11(&v80[v73], 1, v9))
  {
    uint64_t v76 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v74, v75, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v74, 0, 1, v9);
  }
  uint64_t v77 = v79[10];
  *(_OWORD *)((char *)a1 + v79[9]) = *(_OWORD *)&v80[v79[9]];
  *(void *)((char *)a1 + v77) = *(void *)&v80[v77];
  *((unsigned char *)a1 + v79[11]) = v80[v79[11]];
  return a1;
}

char *sub_1004A5B44(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  uint64_t v127 = a2;
  uint64_t v128 = a1;
  unint64_t v126 = a3;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  unint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v7[v76];
  int v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  uint64_t v83 = &v7[v82];
  uint64_t v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v83, v84, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v86)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v83, v84, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  uint64_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  *(_DWORD *)uint64_t v89 = *(_DWORD *)v90;
  v89[4] = v90[4];
  v7[v15[19]] = v8[v15[19]];
  uint64_t v91 = v15[20];
  uint64_t v92 = &v7[v91];
  uint64_t v93 = &v8[v91];
  uint64_t v95 = *(void *)v93;
  uint64_t v94 = *((void *)v93 + 1);
  *(void *)uint64_t v92 = v95;
  *((void *)v92 + 1) = v94;
  swift_bridgeObjectRelease();
  uint64_t v96 = v15[21];
  uint64_t v97 = &v7[v96];
  uint64_t v98 = &v8[v96];
  uint64_t v100 = *(void *)v98;
  uint64_t v99 = *((void *)v98 + 1);
  *(void *)uint64_t v97 = v100;
  *((void *)v97 + 1) = v99;
  swift_bridgeObjectRelease();
  uint64_t v101 = v126[6];
  int v102 = &v128[v101];
  uint64_t v103 = (char *)v127 + v101;
  sub_10024D338((uint64_t)&v128[v101]);
  long long v104 = *((_OWORD *)v103 + 1);
  *(_OWORD *)int v102 = *(_OWORD *)v103;
  *((_OWORD *)v102 + 1) = v104;
  *((void *)v102 + 4) = *((void *)v103 + 4);
  uint64_t v105 = v126[7];
  uint64_t v106 = &v128[v105];
  int v107 = (char *)v127 + v105;
  int v108 = v11(&v128[v105], 1, v9);
  int v109 = v11(v107, 1, v9);
  if (v108)
  {
    if (!v109)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v106, v107, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v106, 0, 1, v9);
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  if (v109)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v106, v9);
LABEL_84:
    uint64_t v110 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v106, v107, *(void *)(*(void *)(v110 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v106, v107, v9);
LABEL_85:
  uint64_t v111 = v126[8];
  uint64_t v112 = &v128[v111];
  unint64_t v113 = (char *)v127 + v111;
  int v114 = v11(&v128[v111], 1, v9);
  int v115 = v11(v113, 1, v9);
  if (v114)
  {
    if (!v115)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v112, v113, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v112, 0, 1, v9);
      goto LABEL_91;
    }
    goto LABEL_90;
  }
  if (v115)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v112, v9);
LABEL_90:
    uint64_t v116 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v112, v113, *(void *)(*(void *)(v116 - 8) + 64));
    goto LABEL_91;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v112, v113, v9);
LABEL_91:
  uint64_t v117 = v126[9];
  uint64_t v118 = (uint64_t *)&v128[v117];
  uint64_t v119 = (void *)((char *)v127 + v117);
  unint64_t v120 = *(void *)&v128[v117 + 8];
  if (v120 >> 60 != 15)
  {
    unint64_t v121 = v119[1];
    if (v121 >> 60 != 15)
    {
      uint64_t v122 = *v118;
      *uint64_t v118 = *v119;
      v118[1] = v121;
      sub_100250CC4(v122, v120);
      goto LABEL_96;
    }
    sub_10026F904((uint64_t)v118);
  }
  *(_OWORD *)uint64_t v118 = *(_OWORD *)v119;
LABEL_96:
  uint64_t v123 = v126[10];
  uint64_t v124 = *(void **)&v128[v123];
  *(void *)&v128[v123] = *(void *)((char *)v127 + v123);

  v128[v126[11]] = *((unsigned char *)v127 + v126[11]);
  return v128;
}

uint64_t sub_1004A6BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004A6BD4);
}

uint64_t sub_1004A6BD4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000A844((uint64_t *)&unk_100975040);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1004A6D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004A6D18);
}

void *sub_1004A6D18(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000A844((uint64_t *)&unk_100975040);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t _s14MacUnlockPhoneV17InitialKeyContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100975BD0);
}

void sub_1004A6E68()
{
  type metadata accessor for SDAuthenticationSessionMetrics();
  if (v0 <= 0x3F)
  {
    sub_100271710();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1004A6F6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004A8E08(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
}

uint64_t sub_1004A6FA4(uint64_t a1, uint64_t a2)
{
  return sub_1004A7D1C(a1, a2, (uint64_t (*)(void))sub_10049D634);
}

id sub_1004A6FD0()
{
  uint64_t v1 = *(int *)(_s14MacUnlockPhoneV20HandleRequestContextVMa(0) + 44);
  uint64_t v2 = *(void **)(v0 + v1);
  if (v2)
  {
    id v3 = *(id *)(v0 + v1);
LABEL_5:
    id v5 = v2;
    return v3;
  }
  id result = [objc_allocWithZone((Class)SDAuthenticationResponse) init];
  if (result)
  {
    *(void *)(v0 + v1) = result;
    id v3 = result;
    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_1004A7040(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v42 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  int v43 = (char *)&v41 - v9;
  sub_10000A844(&qword_10096BBB0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100771F30;
  if (qword_100969E70 != -1) {
    swift_once();
  }
  *(void *)(v10 + 56) = &type metadata for SDAuthentication.Operation.RecordSessionStart;
  *(void *)(v10 + 64) = &off_100971D08;
  *(void *)(v10 + 96) = &type metadata for SDAuthentication.Operation.RecordRemoteUnlockDate;
  *(void *)(v10 + 104) = &off_100971CE8;
  *(void *)(v10 + 136) = &type metadata for SDAuthentication.Operation.RecordDiscoveryEnd;
  *(void *)(v10 + 144) = &off_100971CC8;
  *(void *)(v10 + 176) = &type metadata for SDAuthentication.Operation.RecordKeyExchangeStart;
  *(void *)(v10 + 184) = &off_100971CA8;
  *(void *)(v10 + 216) = &type metadata for SDAuthentication.Operation.RecordKeyExchangeEnd;
  *(void *)(v10 + 224) = &off_100971C88;
  *(void *)(v10 + 256) = &type metadata for SDAuthentication.Operation.CheckEnabledWithPeer;
  *(void *)(v10 + 264) = &off_1009717A8;
  *(void *)(v10 + 296) = &type metadata for SDAuthentication.Operation.CheckLocalSecurityPolicy;
  *(void *)(v10 + 304) = &off_100971848;
  *(void *)(v10 + 336) = &type metadata for SDAuthentication.Operation.CheckLockRegisteredAndArmed;
  *(void *)(v10 + 344) = &off_100971AE8;
  *(void *)(v10 + 376) = &type metadata for SDAuthentication.Operation.UseReceivedTokenForIncludingFirstAKSTokenInMessage;
  *(void *)(v10 + 384) = &off_100971AC8;
  *(void *)(v10 + 416) = &type metadata for SDAuthentication.Operation.SendResponseMessage;
  *(void *)(v10 + 424) = &off_100971C48;
  *a3 = v10;
  uint64_t v11 = (int *)_s14MacUnlockPhoneV20HandleRequestContextVMa(0);
  uint64_t v12 = (uint64_t)a3 + v11[8];
  uint64_t v45 = v6;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v13(v12, 1, 1, v5);
  uint64_t v14 = (uint64_t)a3 + v11[9];
  int v44 = (uint8_t *)v5;
  v13(v14, 1, 1, v5);
  uint64_t v15 = v11[11];
  *(uint64_t *)((char *)a3 + v15) = 0;
  *((unsigned char *)a3 + v11[12]) = 1;
  if ([a1 hasAksToken])
  {
    uint64_t v16 = v46;
    sub_100278C8C(v46 + 8, (uint64_t)(a3 + 1));
    uint64_t v17 = (int *)_s14MacUnlockPhoneV18InitialLockContextVMa(0);
    sub_1004A8E08(v16 + v17[6], (uint64_t)a3 + v11[6], (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
    sub_10033FE48(v16 + v17[7], v12);
    uint64_t v18 = v16 + v17[8];
    int v19 = a1;
    sub_10033FE48(v18, v14);
    if ([a1 hasUnlockDate] && (objc_msgSend(a1, "unlockDate"), v20 != 0.0))
    {
      [a1 unlockDate];
      uint64_t v21 = v43;
      Date.init(timeIntervalSince1970:)();
    }
    else
    {
      uint64_t v21 = v43;
      Date.init()();
    }
    uint64_t v23 = v44;
    uint64_t v22 = v45;
    (*(void (**)(char *, char *, uint8_t *))(v45 + 32))((char *)a3 + v11[10], v21, v44);
    id v24 = [v19 aksToken];
    if (v24)
    {
      int v25 = v24;
      uint64_t v26 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v28 = v27;

      uint64_t v29 = (uint64_t *)((char *)a3 + v11[7]);
      uint64_t *v29 = v26;
      v29[1] = v28;
      if (qword_100969E68 != -1) {
        swift_once();
      }
      uint64_t v30 = type metadata accessor for Logger();
      sub_10000B47C(v30, (uint64_t)qword_100975A28);
      id v31 = v19;
      int v32 = Logger.logObject.getter();
      os_log_type_t v33 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        uint64_t v48 = v45;
        *(_DWORD *)uint64_t v34 = 136315138;
        int v44 = v34 + 4;
        [v31 unlockDate];
        uint64_t v35 = v42;
        Date.init(timeIntervalSince1970:)();
        sub_100403238();
        uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v37 = v22;
        unint64_t v39 = v38;
        (*(void (**)(char *, uint8_t *))(v37 + 8))(v35, v23);
        uint64_t v47 = sub_100254634(v36, v39, &v48);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "got remote unlock date: %s", v34, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      sub_1004A8E70(v46, _s14MacUnlockPhoneV18InitialLockContextVMa);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v40 = 1;
    *(void *)(v40 + 8) = 0xD000000000000011;
    *(void *)(v40 + 16) = 0x80000001007BC980;
    swift_willThrow();

    sub_1004A8E70(v46, _s14MacUnlockPhoneV18InitialLockContextVMa);
    swift_bridgeObjectRelease();
    sub_10000A7E8(v12, (uint64_t *)&unk_100975040);
    sub_10000A7E8(v14, (uint64_t *)&unk_100975040);
  }
}

uint64_t sub_1004A7688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1004A76F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002BEBA4(v2 + *(int *)(a1 + 36), a2);
}

uint64_t sub_1004A770C(uint64_t a1, uint64_t a2)
{
  return sub_1004A7D1C(a1, a2, (uint64_t (*)(void))sub_1004A6FD0);
}

id sub_1004A7738()
{
  uint64_t v1 = *(int *)(_s14MacUnlockPhoneV21HandleResponseContextVMa(0) + 36);
  uint64_t v2 = *(void **)(v0 + v1);
  if (v2)
  {
    id v3 = *(id *)(v0 + v1);
LABEL_5:
    id v5 = v2;
    return v3;
  }
  id result = [objc_allocWithZone((Class)SDAuthenticationToken) init];
  if (result)
  {
    *(void *)(v0 + v1) = result;
    id v3 = result;
    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_1004A77A8(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_10000A844(&qword_10096BBB0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100770AD0;
  if (qword_100969E70 != -1) {
    swift_once();
  }
  *(void *)(v6 + 56) = &type metadata for SDAuthentication.Operation.IncludeNextAKSTokenInMessage;
  *(void *)(v6 + 64) = &off_100971B28;
  *(void *)(v6 + 96) = &type metadata for SDAuthentication.Operation.SendTokenMessage;
  *(void *)(v6 + 104) = &off_100971C08;
  *a3 = v6;
  uint64_t v7 = (int *)_s14MacUnlockPhoneV21HandleResponseContextVMa(0);
  *(_DWORD *)((char *)a3 + v7[7]) = 34;
  uint64_t v8 = v7[9];
  *(uint64_t *)((char *)a3 + v8) = 0;
  *((unsigned char *)a3 + v7[10]) = 7;
  if ([a1 hasAksToken])
  {
    uint64_t v9 = _s14MacUnlockPhoneV17InitialKeyContextVMa(0);
    sub_100278C8C(a2 + *(int *)(v9 + 24), (uint64_t)(a3 + 1));
    sub_1004A8E08(a2 + *(int *)(v9 + 20), (uint64_t)a3 + v7[6], (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
    id v10 = [a1 aksToken];
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      sub_1004A8E70(a2, _s14MacUnlockPhoneV17InitialKeyContextVMa);
      uint64_t v15 = (uint64_t *)((char *)a3 + v7[8]);
      *uint64_t v15 = v12;
      v15[1] = v14;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v16 = 1;
    *(void *)(v16 + 8) = 0xD000000000000019;
    *(void *)(v16 + 16) = 0x80000001007B72B0;
    swift_willThrow();

    sub_1004A8E70(a2, _s14MacUnlockPhoneV17InitialKeyContextVMa);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1004A79DC(uint64_t a1)
{
  return *(unsigned int *)(v1 + *(int *)(a1 + 28));
}

uint64_t sub_1004A79E8(uint64_t a1, uint64_t a2)
{
  return sub_1004A7D1C(a1, a2, (uint64_t (*)(void))sub_1004A7738);
}

id sub_1004A7A14()
{
  uint64_t v1 = *(int *)(_s14MacUnlockPhoneV18HandleTokenContextVMa(0) + 32);
  uint64_t v2 = *(void **)(v0 + v1);
  if (v2)
  {
    id v3 = *(id *)(v0 + v1);
LABEL_5:
    id v5 = v2;
    return v3;
  }
  id result = [objc_allocWithZone((Class)SDAuthenticationConfirmation) init];
  if (result)
  {
    *(void *)(v0 + v1) = result;
    id v3 = result;
    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_1004A7A84(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_10000A844(&qword_10096BBB0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1007709D0;
  if (qword_100969E70 != -1) {
    swift_once();
  }
  *(void *)(v6 + 56) = &type metadata for SDAuthentication.Operation.ConsumeAKSToken;
  *(void *)(v6 + 64) = &off_100971B08;
  *(void *)(v6 + 96) = &type metadata for SDAuthentication.Operation.SendConfirmation;
  *(void *)(v6 + 104) = &off_100971EC8;
  *(void *)(v6 + 136) = &type metadata for SDAuthentication.Operation.FinishSession;
  *(void *)(v6 + 144) = &off_100971BC8;
  *a3 = v6;
  uint64_t v7 = (int *)_s14MacUnlockPhoneV18HandleTokenContextVMa(0);
  uint64_t v8 = v7[8];
  *(uint64_t *)((char *)a3 + v8) = 0;
  *((unsigned char *)a3 + v7[9]) = 2;
  if ([a1 hasAksToken])
  {
    sub_100278C8C(a2 + 8, (uint64_t)(a3 + 1));
    uint64_t v9 = _s14MacUnlockPhoneV20HandleRequestContextVMa(0);
    sub_1004A8E08(a2 + *(int *)(v9 + 24), (uint64_t)a3 + v7[6], (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
    id v10 = [a1 aksToken];
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      sub_1004A8E70(a2, _s14MacUnlockPhoneV20HandleRequestContextVMa);
      uint64_t v15 = (uint64_t *)((char *)a3 + v7[7]);
      *uint64_t v15 = v12;
      v15[1] = v14;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v16 = 1;
    *(void *)(v16 + 8) = 0xD000000000000019;
    *(void *)(v16 + 16) = 0x80000001007B72B0;
    swift_willThrow();

    sub_1004A8E70(a2, _s14MacUnlockPhoneV20HandleRequestContextVMa);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1004A7CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004A8E08(v2 + *(int *)(a1 + 24), a2, (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
}

uint64_t sub_1004A7CF0(uint64_t a1, uint64_t a2)
{
  return sub_1004A7D1C(a1, a2, (uint64_t (*)(void))sub_1004A7A14);
}

uint64_t sub_1004A7D1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v3 = (void *)a3();
  id v4 = [v3 data];

  if (v4)
  {
    uint64_t v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

    return v5;
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v7 = 10;
    *(void *)(v7 + 8) = 0xD00000000000001ALL;
    *(void *)(v7 + 16) = 0x80000001007B72F0;
    return swift_willThrow();
  }
}

uint64_t sub_1004A7DE0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_10000A844(&qword_10096BBB0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1007709D0;
  if (qword_100969E70 != -1) {
    swift_once();
  }
  *(void *)(v6 + 56) = &type metadata for SDAuthentication.Operation.HandleSucceededResult;
  *(void *)(v6 + 64) = &off_100971EA8;
  *(void *)(v6 + 96) = &type metadata for SDAuthentication.Operation.ConfirmAKSSession;
  *(void *)(v6 + 104) = &off_100971AA8;
  *(void *)(v6 + 136) = &type metadata for SDAuthentication.Operation.FinishSession;
  *(void *)(v6 + 144) = &off_100971BC8;
  *a3 = v6;
  if ([a1 hasSuccess])
  {
    sub_100278C8C(a2 + 8, (uint64_t)(a3 + 1));
    uint64_t v7 = a2 + *(int *)(_s14MacUnlockPhoneV21HandleResponseContextVMa(0) + 24);
    uint64_t v8 = _s14MacUnlockPhoneV25HandleConfirmationContextVMa(0);
    sub_1004A8E08(v7, (uint64_t)a3 + *(int *)(v8 + 24), (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
    LOBYTE(v7) = [a1 success];

    uint64_t result = sub_1004A8E70(a2, _s14MacUnlockPhoneV21HandleResponseContextVMa);
    *((unsigned char *)a3 + *(int *)(v8 + 28)) = v7;
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v10 = 1;
    *(void *)(v10 + 8) = 0xD000000000000016;
    *(void *)(v10 + 16) = 0x80000001007B72D0;
    swift_willThrow();

    sub_1004A8E70(a2, _s14MacUnlockPhoneV21HandleResponseContextVMa);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1004A7FCC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v101 = a2;
  uint64_t v96 = a3;
  uint64_t v80 = _s14MacUnlockPhoneV25HandleConfirmationContextVMa(0);
  __chkstk_darwin(v80);
  uint64_t v84 = (uint64_t *)((char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_10000A844(&qword_100975C20);
  __chkstk_darwin(v5 - 8);
  uint64_t v89 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = _s14MacUnlockPhoneV18HandleTokenContextVMa(0);
  __chkstk_darwin(v81);
  uint64_t v88 = (uint64_t *)((char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_10000A844(&qword_100975C28);
  __chkstk_darwin(v8 - 8);
  uint64_t v95 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = _s14MacUnlockPhoneV21HandleResponseContextVMa(0);
  uint64_t v87 = *(void *)(v90 - 8);
  uint64_t v10 = __chkstk_darwin(v90);
  uint64_t v82 = (uint64_t)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v83 = (uint64_t)&v80 - v13;
  __chkstk_darwin(v12);
  uint64_t v94 = (uint64_t *)((char *)&v80 - v14);
  uint64_t v15 = sub_10000A844(&qword_100975C30);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = _s14MacUnlockPhoneV17InitialKeyContextVMa(0);
  uint64_t v98 = *(void *)(v18 - 8);
  uint64_t v99 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v92 = (uint64_t)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v93 = (uint64_t)&v80 - v21;
  uint64_t v97 = _s14MacUnlockPhoneV20HandleRequestContextVMa(0);
  uint64_t v91 = *(void *)(v97 - 8);
  uint64_t v22 = __chkstk_darwin(v97);
  uint64_t v85 = (uint64_t)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v86 = (uint64_t)&v80 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (uint64_t *)((char *)&v80 - v26);
  uint64_t v28 = sub_10000A844(&qword_100975C38);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)&v80 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = _s14MacUnlockPhoneV18InitialLockContextVMa(0);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v80 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v37 = (char *)&v80 - v36;
  sub_100278C8C(a1, (uint64_t)v102);
  sub_10000A844(&qword_100977940);
  sub_10000B740(0, &qword_10096BDD0);
  if (swift_dynamicCast())
  {
    id v38 = v103;
    sub_100278C8C(v101, (uint64_t)v102);
    sub_10000A844(&qword_10096BDF0);
    int v39 = swift_dynamicCast();
    uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
    if (v39)
    {
      v40(v30, 0, 1, v31);
      sub_1004A8DA0((uint64_t)v30, (uint64_t)v37, _s14MacUnlockPhoneV18InitialLockContextVMa);
      sub_1004A8E08((uint64_t)v37, (uint64_t)v35, _s14MacUnlockPhoneV18InitialLockContextVMa);
      id v38 = v38;
      uint64_t v41 = v100;
      sub_1004A7040(v38, (uint64_t)v35, v27);
      if (!v41)
      {
        uint64_t v70 = v96;
        v96[3] = v97;
        v70[4] = (uint64_t)&off_1008DCB60;
        uint64_t v71 = sub_100278AE4(v70);
        sub_1004A8DA0((uint64_t)v27, (uint64_t)v71, _s14MacUnlockPhoneV20HandleRequestContextVMa);

        sub_1004A8E70((uint64_t)v37, _s14MacUnlockPhoneV18InitialLockContextVMa);
        return;
      }
      uint64_t v42 = _s14MacUnlockPhoneV18InitialLockContextVMa;
      uint64_t v43 = (uint64_t)v37;
      goto LABEL_20;
    }
    v40(v30, 1, 1, v31);
    sub_10000A7E8((uint64_t)v30, &qword_100975C38);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v53 = 10;
    unint64_t v54 = 0xD000000000000047;
    int v55 = "Invalid previous context as InitialLockContext, message may be replayed";
LABEL_26:
    *(void *)(v53 + 8) = v54;
    *(void *)(v53 + 16) = (unint64_t)(v55 - 32) | 0x8000000000000000;
    swift_willThrow();
    goto LABEL_27;
  }
  uint64_t v44 = v101;
  sub_100278C8C(a1, (uint64_t)v102);
  sub_10000B740(0, &qword_10096BDD8);
  if (!swift_dynamicCast())
  {
    sub_100278C8C(a1, (uint64_t)v102);
    sub_10000B740(0, &qword_10096BDE0);
    if (swift_dynamicCast())
    {
      id v38 = v103;
      sub_100278C8C(v44, (uint64_t)v102);
      sub_10000A844(&qword_10096BDF0);
      uint64_t v56 = (uint64_t)v95;
      uint64_t v57 = v97;
      int v58 = swift_dynamicCast();
      uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56);
      if (!v58)
      {
        v59(v56, 1, 1, v57);
        sub_10000A7E8(v56, &qword_100975C28);
        sub_10024D280();
        swift_allocError();
        *(_DWORD *)uint64_t v53 = 10;
        unint64_t v54 = 0xD000000000000049;
        int v55 = "Invalid previous context as HandleRequestContext, message may be replayed";
        goto LABEL_26;
      }
      v59(v56, 0, 1, v57);
      uint64_t v48 = v86;
      sub_1004A8DA0(v56, v86, _s14MacUnlockPhoneV20HandleRequestContextVMa);
      uint64_t v60 = v85;
      sub_1004A8E08(v48, v85, _s14MacUnlockPhoneV20HandleRequestContextVMa);
      id v38 = v38;
      int v61 = v88;
      uint64_t v62 = v100;
      sub_1004A7A84(v38, v60, v88);
      if (v62)
      {
        uint64_t v52 = _s14MacUnlockPhoneV20HandleRequestContextVMa;
        goto LABEL_19;
      }
      uint64_t v76 = v96;
      v96[3] = v81;
      v76[4] = (uint64_t)&off_1008DCB90;
      uint64_t v77 = sub_100278AE4(v76);
      sub_1004A8DA0((uint64_t)v61, (uint64_t)v77, _s14MacUnlockPhoneV18HandleTokenContextVMa);

      uint64_t v75 = _s14MacUnlockPhoneV20HandleRequestContextVMa;
    }
    else
    {
      sub_100278C8C(a1, (uint64_t)v102);
      sub_10000B740(0, &qword_10096BDE8);
      if (!swift_dynamicCast())
      {
        sub_10024D280();
        swift_allocError();
        *(_DWORD *)uint64_t v72 = 10;
        *(void *)(v72 + 8) = 0xD00000000000001FLL;
        *(void *)(v72 + 16) = 0x80000001007B6FF0;
        swift_willThrow();
        return;
      }
      id v38 = v103;
      sub_100278C8C(v44, (uint64_t)v102);
      sub_10000A844(&qword_10096BDF0);
      uint64_t v64 = (uint64_t)v89;
      uint64_t v63 = v90;
      int v65 = swift_dynamicCast();
      uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v87 + 56);
      if (!v65)
      {
        v66(v64, 1, 1, v63);
        sub_10000A7E8(v64, &qword_100975C20);
        sub_10024D280();
        swift_allocError();
        *(_DWORD *)uint64_t v53 = 10;
        unint64_t v54 = 0xD00000000000004ALL;
        int v55 = "Invalid previous context as HandleResponseContext, message may be replayed";
        goto LABEL_26;
      }
      v66(v64, 0, 1, v63);
      uint64_t v48 = v83;
      sub_1004A8DA0(v64, v83, _s14MacUnlockPhoneV21HandleResponseContextVMa);
      uint64_t v67 = v82;
      sub_1004A8E08(v48, v82, _s14MacUnlockPhoneV21HandleResponseContextVMa);
      id v38 = v38;
      int v68 = v84;
      uint64_t v69 = v100;
      sub_1004A7DE0(v38, v67, v84);
      if (v69)
      {
        uint64_t v52 = _s14MacUnlockPhoneV21HandleResponseContextVMa;
        goto LABEL_19;
      }
      int v78 = v96;
      v96[3] = v80;
      v78[4] = (uint64_t)&off_1008DCBA8;
      int v79 = sub_100278AE4(v78);
      sub_1004A8DA0((uint64_t)v68, (uint64_t)v79, _s14MacUnlockPhoneV25HandleConfirmationContextVMa);

      uint64_t v75 = _s14MacUnlockPhoneV21HandleResponseContextVMa;
    }
LABEL_31:
    sub_1004A8E70(v48, v75);
    return;
  }
  id v38 = v103;
  sub_100278C8C(v44, (uint64_t)v102);
  sub_10000A844(&qword_10096BDF0);
  uint64_t v45 = v99;
  int v46 = swift_dynamicCast();
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v98 + 56);
  if (!v46)
  {
    v47(v17, 1, 1, v45);
    sub_10000A7E8((uint64_t)v17, &qword_100975C30);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v53 = 10;
    unint64_t v54 = 0xD000000000000046;
    int v55 = "Invalid previous context as InitialKeyContext, message may be replayed";
    goto LABEL_26;
  }
  v47(v17, 0, 1, v45);
  uint64_t v48 = v93;
  sub_1004A8DA0((uint64_t)v17, v93, _s14MacUnlockPhoneV17InitialKeyContextVMa);
  uint64_t v49 = v92;
  sub_1004A8E08(v48, v92, _s14MacUnlockPhoneV17InitialKeyContextVMa);
  id v38 = v38;
  int v50 = v94;
  uint64_t v51 = v100;
  sub_1004A77A8(v38, v49, v94);
  if (!v51)
  {
    int v73 = v96;
    v96[3] = v90;
    v73[4] = (uint64_t)&off_1008DCB78;
    int v74 = sub_100278AE4(v73);
    sub_1004A8DA0((uint64_t)v50, (uint64_t)v74, _s14MacUnlockPhoneV21HandleResponseContextVMa);

    uint64_t v75 = _s14MacUnlockPhoneV17InitialKeyContextVMa;
    goto LABEL_31;
  }
  uint64_t v52 = _s14MacUnlockPhoneV17InitialKeyContextVMa;
LABEL_19:
  uint64_t v42 = v52;
  uint64_t v43 = v48;
LABEL_20:
  sub_1004A8E70(v43, v42);
LABEL_27:
}

uint64_t sub_1004A8CD4@<X0>(uint64_t a1@<X8>)
{
  return sub_1004A8E08(v1, a1, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
}

void sub_1004A8D08(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

uint64_t _s14MacUnlockPhoneV25HandleConfirmationContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100975E90);
}

uint64_t _s14MacUnlockPhoneV18HandleTokenContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100975D48);
}

uint64_t _s14MacUnlockPhoneV21HandleResponseContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100975DE8);
}

uint64_t _s14MacUnlockPhoneV20HandleRequestContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100975C98);
}

uint64_t sub_1004A8DA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004A8E08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004A8E70(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1004A8ED0(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2 + 1;
    long long v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_bridgeObjectRetain();
    v11(a1 + 8, v8, v10);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)(a1 + v12);
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = type metadata accessor for Date();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    uint64_t v98 = a3;
    uint64_t v99 = (char *)a2;
    if (v17(v14, 1, v15))
    {
      uint64_t v18 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v19 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v20 = v19[5];
    uint64_t v21 = &v13[v20];
    uint64_t v22 = &v14[v20];
    if (v17(&v14[v20], 1, v15))
    {
      uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v21, v22, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v21, 0, 1, v15);
    }
    uint64_t v24 = v19[6];
    uint64_t v25 = &v13[v24];
    uint64_t v26 = &v14[v24];
    if (v17(&v14[v24], 1, v15))
    {
      uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v25, v26, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v25, 0, 1, v15);
    }
    uint64_t v28 = v19[7];
    uint64_t v29 = &v13[v28];
    uint64_t v30 = &v14[v28];
    if (v17(&v14[v28], 1, v15))
    {
      uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v29, v30, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v29, 0, 1, v15);
    }
    uint64_t v32 = v19[8];
    uint64_t v33 = &v13[v32];
    uint64_t v34 = &v14[v32];
    if (v17(&v14[v32], 1, v15))
    {
      uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v33, v34, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v33, 0, 1, v15);
    }
    uint64_t v36 = v19[9];
    uint64_t v37 = &v13[v36];
    id v38 = &v14[v36];
    if (v17(&v14[v36], 1, v15))
    {
      uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v37, v38, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v37, 0, 1, v15);
    }
    uint64_t v40 = v19[10];
    uint64_t v41 = &v13[v40];
    uint64_t v42 = &v14[v40];
    if (v17(&v14[v40], 1, v15))
    {
      uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v41, v42, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v41, 0, 1, v15);
    }
    uint64_t v44 = v19[11];
    uint64_t v45 = &v13[v44];
    int v46 = &v14[v44];
    if (v17(&v14[v44], 1, v15))
    {
      uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v45, v46, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v45, 0, 1, v15);
    }
    uint64_t v48 = v19[12];
    uint64_t v49 = &v13[v48];
    int v50 = &v14[v48];
    if (v17(&v14[v48], 1, v15))
    {
      uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v49, v50, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v49, 0, 1, v15);
    }
    v13[v19[13]] = v14[v19[13]];
    uint64_t v52 = v19[14];
    uint64_t v53 = &v13[v52];
    unint64_t v54 = &v14[v52];
    if (v17(&v14[v52], 1, v15))
    {
      uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v53, v54, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v53, 0, 1, v15);
    }
    uint64_t v56 = v19[15];
    uint64_t v57 = &v13[v56];
    int v58 = &v14[v56];
    if (v17(&v14[v56], 1, v15))
    {
      uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v57, v58, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v57, 0, 1, v15);
    }
    uint64_t v60 = v19[16];
    int v61 = &v13[v60];
    uint64_t v62 = &v14[v60];
    if (v17(&v14[v60], 1, v15))
    {
      uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v61, v62, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v61, 0, 1, v15);
    }
    uint64_t v64 = v19[17];
    int v65 = &v13[v64];
    uint64_t v66 = &v14[v64];
    if (v17(&v14[v64], 1, v15))
    {
      uint64_t v67 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v65, v66, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v65, 0, 1, v15);
    }
    uint64_t v68 = v19[18];
    uint64_t v69 = &v13[v68];
    uint64_t v70 = &v14[v68];
    *(_DWORD *)uint64_t v69 = *(_DWORD *)v70;
    v69[4] = v70[4];
    v13[v19[19]] = v14[v19[19]];
    uint64_t v71 = v19[20];
    uint64_t v72 = &v13[v71];
    int v73 = &v14[v71];
    uint64_t v74 = *((void *)v73 + 1);
    *(void *)uint64_t v72 = *(void *)v73;
    *((void *)v72 + 1) = v74;
    uint64_t v75 = v19[21];
    uint64_t v76 = &v13[v75];
    uint64_t v77 = &v14[v75];
    uint64_t v78 = *((void *)v77 + 1);
    *(void *)uint64_t v76 = *(void *)v77;
    *((void *)v76 + 1) = v78;
    uint64_t v79 = v98[7];
    uint64_t v80 = (uint64_t *)(a1 + v79);
    uint64_t v81 = (uint64_t *)&v99[v79];
    uint64_t v82 = *v81;
    unint64_t v83 = v81[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10025ADCC(v82, v83);
    *uint64_t v80 = v82;
    v80[1] = v83;
    uint64_t v84 = v98[8];
    uint64_t v85 = (void *)(a1 + v84);
    uint64_t v86 = &v99[v84];
    if (v17(&v99[v84], 1, v15))
    {
      uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v85, v86, *(void *)(*(void *)(v87 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v85, v86, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v85, 0, 1, v15);
    }
    uint64_t v88 = v98[9];
    uint64_t v89 = (void *)(a1 + v88);
    uint64_t v90 = &v99[v88];
    if (v17(&v99[v88], 1, v15))
    {
      uint64_t v91 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
      (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(a1 + v98[10], &v99[v98[10]], v15);
    }
    else
    {
      uint64_t v92 = *(void (**)(void *, char *, uint64_t))(v16 + 16);
      v92(v89, v90, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v89, 0, 1, v15);
      v92((void *)(a1 + v98[10]), &v99[v98[10]], v15);
    }
    uint64_t v93 = v98[11];
    uint64_t v94 = v98[12];
    uint64_t v95 = *(void **)&v99[v93];
    *(void *)(a1 + v93) = v95;
    *(unsigned char *)(a1 + v94) = v99[v94];
    id v96 = v95;
  }
  return a1;
}

void sub_1004A9A10(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + 8;
  swift_bridgeObjectRelease();
  sub_10024D338(v4);
  uint64_t v5 = a1 + a2[6];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  long long v9 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v10 = v5 + v9[5];
  if (!v8(v10, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  }
  uint64_t v11 = v5 + v9[6];
  if (!v8(v11, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v6);
  }
  uint64_t v12 = v5 + v9[7];
  if (!v8(v12, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12, v6);
  }
  uint64_t v13 = v5 + v9[8];
  if (!v8(v13, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v13, v6);
  }
  uint64_t v14 = v5 + v9[9];
  if (!v8(v14, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v14, v6);
  }
  uint64_t v15 = v5 + v9[10];
  if (!v8(v15, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v6);
  }
  uint64_t v16 = v5 + v9[11];
  if (!v8(v16, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v16, v6);
  }
  uint64_t v17 = v5 + v9[12];
  if (!v8(v17, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v17, v6);
  }
  uint64_t v18 = v5 + v9[14];
  if (!v8(v18, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v18, v6);
  }
  uint64_t v19 = v5 + v9[15];
  if (!v8(v19, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v19, v6);
  }
  uint64_t v20 = v5 + v9[16];
  if (!v8(v20, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v20, v6);
  }
  uint64_t v21 = v5 + v9[17];
  if (!v8(v21, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v21, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CC4(*(void *)(a1 + a2[7]), *(void *)(a1 + a2[7] + 8));
  uint64_t v22 = a1 + a2[8];
  if (!v8(v22, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v22, v6);
  }
  uint64_t v23 = a1 + a2[9];
  unsigned int v24 = v8(v23, 1, v6);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  if (!v24) {
    v25(v23, v6);
  }
  v25(a1 + a2[10], v6);
  uint64_t v26 = *(void **)(a1 + a2[11]);
}

uint64_t sub_1004A9ED0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  long long v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  v9(a1 + 8, v6, v8);
  uint64_t v97 = a1;
  uint64_t v98 = a3;
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v96 = a2;
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v17 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v18 = v17[5];
  uint64_t v19 = &v11[v18];
  uint64_t v20 = &v12[v18];
  if (v15(&v12[v18], 1, v13))
  {
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v19, v20, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v19, 0, 1, v13);
  }
  uint64_t v22 = v17[6];
  uint64_t v23 = &v11[v22];
  unsigned int v24 = &v12[v22];
  if (v15(&v12[v22], 1, v13))
  {
    uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v23, v24, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v23, 0, 1, v13);
  }
  uint64_t v26 = v17[7];
  uint64_t v27 = &v11[v26];
  uint64_t v28 = &v12[v26];
  if (v15(&v12[v26], 1, v13))
  {
    uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v27, v28, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v27, 0, 1, v13);
  }
  uint64_t v30 = v17[8];
  uint64_t v31 = &v11[v30];
  uint64_t v32 = &v12[v30];
  if (v15(&v12[v30], 1, v13))
  {
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v31, v32, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v31, 0, 1, v13);
  }
  uint64_t v34 = v17[9];
  uint64_t v35 = &v11[v34];
  uint64_t v36 = &v12[v34];
  if (v15(&v12[v34], 1, v13))
  {
    uint64_t v37 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v35, v36, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v35, 0, 1, v13);
  }
  uint64_t v38 = v17[10];
  uint64_t v39 = &v11[v38];
  uint64_t v40 = &v12[v38];
  if (v15(&v12[v38], 1, v13))
  {
    uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v39, v40, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v39, 0, 1, v13);
  }
  uint64_t v42 = v17[11];
  uint64_t v43 = &v11[v42];
  uint64_t v44 = &v12[v42];
  if (v15(&v12[v42], 1, v13))
  {
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v43, v44, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v43, 0, 1, v13);
  }
  uint64_t v46 = v17[12];
  uint64_t v47 = &v11[v46];
  uint64_t v48 = &v12[v46];
  if (v15(&v12[v46], 1, v13))
  {
    uint64_t v49 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v47, v48, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v47, 0, 1, v13);
  }
  v11[v17[13]] = v12[v17[13]];
  uint64_t v50 = v17[14];
  uint64_t v51 = &v11[v50];
  uint64_t v52 = &v12[v50];
  if (v15(&v12[v50], 1, v13))
  {
    uint64_t v53 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v51, v52, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v51, 0, 1, v13);
  }
  uint64_t v54 = v17[15];
  uint64_t v55 = &v11[v54];
  uint64_t v56 = &v12[v54];
  if (v15(&v12[v54], 1, v13))
  {
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v55, v56, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v55, 0, 1, v13);
  }
  uint64_t v58 = v17[16];
  uint64_t v59 = &v11[v58];
  uint64_t v60 = &v12[v58];
  if (v15(&v12[v58], 1, v13))
  {
    uint64_t v61 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v59, v60, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v59, 0, 1, v13);
  }
  uint64_t v62 = v17[17];
  uint64_t v63 = &v11[v62];
  uint64_t v64 = &v12[v62];
  if (v15(&v12[v62], 1, v13))
  {
    uint64_t v65 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v63, v64, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v63, 0, 1, v13);
  }
  uint64_t v66 = v17[18];
  uint64_t v67 = &v11[v66];
  uint64_t v68 = &v12[v66];
  *(_DWORD *)uint64_t v67 = *(_DWORD *)v68;
  v67[4] = v68[4];
  v11[v17[19]] = v12[v17[19]];
  uint64_t v69 = v17[20];
  uint64_t v70 = &v11[v69];
  uint64_t v71 = &v12[v69];
  uint64_t v72 = *((void *)v71 + 1);
  *(void *)uint64_t v70 = *(void *)v71;
  *((void *)v70 + 1) = v72;
  uint64_t v73 = v17[21];
  uint64_t v74 = &v11[v73];
  uint64_t v75 = &v12[v73];
  uint64_t v76 = *((void *)v75 + 1);
  *(void *)uint64_t v74 = *(void *)v75;
  *((void *)v74 + 1) = v76;
  uint64_t v77 = v98[7];
  uint64_t v78 = (uint64_t *)(v97 + v77);
  uint64_t v79 = (uint64_t *)(v96 + v77);
  uint64_t v80 = *v79;
  unint64_t v81 = v79[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10025ADCC(v80, v81);
  *uint64_t v78 = v80;
  v78[1] = v81;
  uint64_t v82 = v98[8];
  unint64_t v83 = (void *)(v97 + v82);
  uint64_t v84 = (const void *)(v96 + v82);
  if (v15((char *)(v96 + v82), 1, v13))
  {
    uint64_t v85 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v83, v84, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v83, 0, 1, v13);
  }
  uint64_t v86 = v98[9];
  uint64_t v87 = (void *)(v97 + v86);
  uint64_t v88 = (const void *)(v96 + v86);
  if (v15((char *)(v96 + v86), 1, v13))
  {
    uint64_t v89 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
    uint64_t v90 = *(void (**)(void *, const void *, uint64_t))(v14 + 16);
  }
  else
  {
    uint64_t v90 = *(void (**)(void *, const void *, uint64_t))(v14 + 16);
    v90(v87, v88, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v87, 0, 1, v13);
  }
  v90((void *)(v97 + v98[10]), (const void *)(v96 + v98[10]), v13);
  uint64_t v91 = v98[11];
  uint64_t v92 = v98[12];
  uint64_t v93 = *(void **)(v96 + v91);
  *(void *)(v97 + v91) = v93;
  *(unsigned char *)(v97 + v92) = *(unsigned char *)(v96 + v92);
  id v94 = v93;
  return v97;
}

char *sub_1004AA9CC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2 + 1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10026F6D4(a1 + 1, v6);
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  long long v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  uint64_t v123 = (char *)a2;
  uint64_t v124 = (char *)a1;
  uint64_t v122 = a3;
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v17 = v16[5];
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  int v20 = v12(&v8[v17], 1, v10);
  int v21 = v12(v19, 1, v10);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v18, v19, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
LABEL_12:
    uint64_t v22 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v18, v19, v10);
LABEL_13:
  uint64_t v23 = v16[6];
  unsigned int v24 = &v8[v23];
  uint64_t v25 = &v9[v23];
  int v26 = v12(&v8[v23], 1, v10);
  int v27 = v12(v25, 1, v10);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v24, v25, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v24, 0, 1, v10);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
LABEL_18:
    uint64_t v28 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v24, v25, v10);
LABEL_19:
  uint64_t v29 = v16[7];
  uint64_t v30 = &v8[v29];
  uint64_t v31 = &v9[v29];
  int v32 = v12(&v8[v29], 1, v10);
  int v33 = v12(v31, 1, v10);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v30, v31, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0, 1, v10);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v30, v10);
LABEL_24:
    uint64_t v34 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v30, v31, v10);
LABEL_25:
  uint64_t v35 = v16[8];
  uint64_t v36 = &v8[v35];
  uint64_t v37 = &v9[v35];
  int v38 = v12(&v8[v35], 1, v10);
  int v39 = v12(v37, 1, v10);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v36, v37, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v36, 0, 1, v10);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v10);
LABEL_30:
    uint64_t v40 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v36, v37, v10);
LABEL_31:
  uint64_t v41 = v16[9];
  uint64_t v42 = &v8[v41];
  uint64_t v43 = &v9[v41];
  int v44 = v12(&v8[v41], 1, v10);
  int v45 = v12(v43, 1, v10);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v42, v43, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v42, 0, 1, v10);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v10);
LABEL_36:
    uint64_t v46 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v42, v43, v10);
LABEL_37:
  uint64_t v47 = v16[10];
  uint64_t v48 = &v8[v47];
  uint64_t v49 = &v9[v47];
  int v50 = v12(&v8[v47], 1, v10);
  int v51 = v12(v49, 1, v10);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v48, v49, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v48, 0, 1, v10);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v48, v10);
LABEL_42:
    uint64_t v52 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v48, v49, v10);
LABEL_43:
  uint64_t v53 = v16[11];
  uint64_t v54 = &v8[v53];
  uint64_t v55 = &v9[v53];
  int v56 = v12(&v8[v53], 1, v10);
  int v57 = v12(v55, 1, v10);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v54, v55, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v54, 0, 1, v10);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v54, v10);
LABEL_48:
    uint64_t v58 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v54, v55, v10);
LABEL_49:
  uint64_t v59 = v16[12];
  uint64_t v60 = &v8[v59];
  uint64_t v61 = &v9[v59];
  int v62 = v12(&v8[v59], 1, v10);
  int v63 = v12(v61, 1, v10);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v60, v61, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v60, 0, 1, v10);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v60, v10);
LABEL_54:
    uint64_t v64 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v60, v61, v10);
LABEL_55:
  v8[v16[13]] = v9[v16[13]];
  uint64_t v65 = v16[14];
  uint64_t v66 = &v8[v65];
  uint64_t v67 = &v9[v65];
  int v68 = v12(&v8[v65], 1, v10);
  int v69 = v12(v67, 1, v10);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v66, v67, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v66, 0, 1, v10);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v66, v10);
LABEL_60:
    uint64_t v70 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v66, v67, v10);
LABEL_61:
  uint64_t v71 = v16[15];
  uint64_t v72 = &v8[v71];
  uint64_t v73 = &v9[v71];
  int v74 = v12(&v8[v71], 1, v10);
  int v75 = v12(v73, 1, v10);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v72, v73, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v72, 0, 1, v10);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v72, v10);
LABEL_66:
    uint64_t v76 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v72, v73, v10);
LABEL_67:
  uint64_t v77 = v16[16];
  uint64_t v78 = &v8[v77];
  uint64_t v79 = &v9[v77];
  int v80 = v12(&v8[v77], 1, v10);
  int v81 = v12(v79, 1, v10);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v78, v79, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v78, 0, 1, v10);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v78, v10);
LABEL_72:
    uint64_t v82 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v78, v79, v10);
LABEL_73:
  uint64_t v83 = v16[17];
  uint64_t v84 = &v8[v83];
  uint64_t v85 = &v9[v83];
  int v86 = v12(&v8[v83], 1, v10);
  int v87 = v12(v85, 1, v10);
  if (v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v84, v85, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v84, 0, 1, v10);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v87)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v84, v10);
LABEL_78:
    uint64_t v88 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v84, v85, v10);
LABEL_79:
  uint64_t v89 = v16[18];
  uint64_t v90 = &v8[v89];
  uint64_t v91 = &v9[v89];
  int v92 = *(_DWORD *)v91;
  v90[4] = v91[4];
  *(_DWORD *)uint64_t v90 = v92;
  v8[v16[19]] = v9[v16[19]];
  uint64_t v93 = v16[20];
  id v94 = &v8[v93];
  uint64_t v95 = &v9[v93];
  *(void *)id v94 = *(void *)v95;
  *((void *)v94 + 1) = *((void *)v95 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v96 = v16[21];
  uint64_t v97 = &v8[v96];
  uint64_t v98 = &v9[v96];
  *(void *)uint64_t v97 = *(void *)v98;
  *((void *)v97 + 1) = *((void *)v98 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v99 = v122[7];
  uint64_t v100 = (uint64_t *)&v124[v99];
  uint64_t v101 = (uint64_t *)&v123[v99];
  uint64_t v102 = *v101;
  unint64_t v103 = v101[1];
  sub_10025ADCC(*v101, v103);
  uint64_t v104 = *v100;
  unint64_t v105 = v100[1];
  *uint64_t v100 = v102;
  v100[1] = v103;
  sub_100250CC4(v104, v105);
  uint64_t v106 = v122[8];
  int v107 = &v124[v106];
  int v108 = &v123[v106];
  LODWORD(v100) = v12(&v124[v106], 1, v10);
  int v109 = v12(v108, 1, v10);
  if (v100)
  {
    if (!v109)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v107, v108, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v107, 0, 1, v10);
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  if (v109)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v107, v10);
LABEL_84:
    uint64_t v110 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v107, v108, *(void *)(*(void *)(v110 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v107, v108, v10);
LABEL_85:
  uint64_t v111 = v122[9];
  uint64_t v112 = &v124[v111];
  unint64_t v113 = &v123[v111];
  int v114 = v12(&v124[v111], 1, v10);
  int v115 = v12(v113, 1, v10);
  if (!v114)
  {
    if (!v115)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v112, v113, v10);
      goto LABEL_91;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v112, v10);
    goto LABEL_90;
  }
  if (v115)
  {
LABEL_90:
    uint64_t v116 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v112, v113, *(void *)(*(void *)(v116 - 8) + 64));
    goto LABEL_91;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v112, v113, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v112, 0, 1, v10);
LABEL_91:
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(&v124[v122[10]], &v123[v122[10]], v10);
  uint64_t v117 = v122[11];
  uint64_t v118 = *(void **)&v124[v117];
  uint64_t v119 = *(void **)&v123[v117];
  *(void *)&v124[v117] = v119;
  id v120 = v119;

  v124[v122[12]] = v123[v122[12]];
  return v124;
}

uint64_t sub_1004ABA64(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v76 = a3;
  uint64_t v77 = a2;
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  int v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v14 = v13[5];
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  if (v11(&v8[v14], 1, v9))
  {
    uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v16, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
  }
  uint64_t v18 = v13[6];
  uint64_t v19 = &v7[v18];
  int v20 = &v8[v18];
  if (v11(&v8[v18], 1, v9))
  {
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v20, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  }
  uint64_t v22 = v13[7];
  uint64_t v23 = &v7[v22];
  unsigned int v24 = &v8[v22];
  if (v11(&v8[v22], 1, v9))
  {
    uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
  }
  uint64_t v26 = v13[8];
  int v27 = &v7[v26];
  uint64_t v28 = &v8[v26];
  if (v11(&v8[v26], 1, v9))
  {
    uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v27, v28, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
  }
  uint64_t v30 = v13[9];
  uint64_t v31 = &v7[v30];
  int v32 = &v8[v30];
  if (v11(&v8[v30], 1, v9))
  {
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v31, v32, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
  }
  uint64_t v34 = v13[10];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  if (v11(&v8[v34], 1, v9))
  {
    uint64_t v37 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
  }
  uint64_t v38 = v13[11];
  int v39 = &v7[v38];
  uint64_t v40 = &v8[v38];
  if (v11(&v8[v38], 1, v9))
  {
    uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v39, v40, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v9);
  }
  uint64_t v42 = v13[12];
  uint64_t v43 = &v7[v42];
  int v44 = &v8[v42];
  if (v11(&v8[v42], 1, v9))
  {
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v43, v44, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0, 1, v9);
  }
  v7[v13[13]] = v8[v13[13]];
  uint64_t v46 = v13[14];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  if (v11(&v8[v46], 1, v9))
  {
    uint64_t v49 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
  }
  uint64_t v50 = v13[15];
  int v51 = &v7[v50];
  uint64_t v52 = &v8[v50];
  if (v11(&v8[v50], 1, v9))
  {
    uint64_t v53 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v51, v52, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v51, 0, 1, v9);
  }
  uint64_t v54 = v13[16];
  uint64_t v55 = &v7[v54];
  int v56 = &v8[v54];
  if (v11(&v8[v54], 1, v9))
  {
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v55, v56, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v55, 0, 1, v9);
  }
  uint64_t v58 = v13[17];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  if (v11(&v8[v58], 1, v9))
  {
    uint64_t v61 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
  }
  uint64_t v62 = v13[18];
  int v63 = &v7[v62];
  uint64_t v64 = &v8[v62];
  *(_DWORD *)int v63 = *(_DWORD *)v64;
  v63[4] = v64[4];
  v7[v13[19]] = v8[v13[19]];
  *(_OWORD *)&v7[v13[20]] = *(_OWORD *)&v8[v13[20]];
  *(_OWORD *)&v7[v13[21]] = *(_OWORD *)&v8[v13[21]];
  uint64_t v65 = v76[8];
  *(_OWORD *)(a1 + v76[7]) = *(_OWORD *)(v77 + v76[7]);
  uint64_t v66 = (void *)(a1 + v65);
  uint64_t v67 = (const void *)(v77 + v65);
  if (v11((char *)(v77 + v65), 1, v9))
  {
    uint64_t v68 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v66, v67, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v66, 0, 1, v9);
  }
  uint64_t v69 = v76[9];
  uint64_t v70 = (void *)(a1 + v69);
  uint64_t v71 = (const void *)(v77 + v69);
  if (v11((char *)(v77 + v69), 1, v9))
  {
    uint64_t v72 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(a1 + v76[10], v77 + v76[10], v9);
  }
  else
  {
    uint64_t v73 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
    v73(v70, v71, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v70, 0, 1, v9);
    v73((void *)(a1 + v76[10]), (const void *)(v77 + v76[10]), v9);
  }
  uint64_t v74 = v76[12];
  *(void *)(a1 + v76[11]) = *(void *)(v77 + v76[11]);
  *(unsigned char *)(a1 + v74) = *(unsigned char *)(v77 + v74);
  return a1;
}

uint64_t sub_1004AC4DC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  sub_10024D338(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  uint64_t v120 = a2;
  uint64_t v121 = a1;
  uint64_t v119 = a3;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  unsigned int v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  uint64_t v83 = &v7[v82];
  uint64_t v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v83, v84, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v86)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v83, v84, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  uint64_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  *(_DWORD *)uint64_t v89 = *(_DWORD *)v90;
  v89[4] = v90[4];
  v7[v15[19]] = v8[v15[19]];
  uint64_t v91 = v15[20];
  int v92 = &v7[v91];
  uint64_t v93 = &v8[v91];
  uint64_t v95 = *(void *)v93;
  uint64_t v94 = *((void *)v93 + 1);
  *(void *)int v92 = v95;
  *((void *)v92 + 1) = v94;
  swift_bridgeObjectRelease();
  uint64_t v96 = v15[21];
  uint64_t v97 = &v7[v96];
  uint64_t v98 = &v8[v96];
  uint64_t v100 = *(void *)v98;
  uint64_t v99 = *((void *)v98 + 1);
  *(void *)uint64_t v97 = v100;
  *((void *)v97 + 1) = v99;
  swift_bridgeObjectRelease();
  uint64_t v101 = v119[7];
  uint64_t v102 = *(void *)(v121 + v101);
  unint64_t v103 = *(void *)(v121 + v101 + 8);
  *(_OWORD *)(v121 + v101) = *(_OWORD *)(v120 + v101);
  sub_100250CC4(v102, v103);
  uint64_t v104 = v119[8];
  unint64_t v105 = (void *)(v121 + v104);
  uint64_t v106 = (char *)(v120 + v104);
  int v107 = v11((char *)(v121 + v104), 1, v9);
  int v108 = v11(v106, 1, v9);
  if (v107)
  {
    if (!v108)
    {
      (*(void (**)(void *, char *, uint64_t))(v10 + 32))(v105, v106, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v105, 0, 1, v9);
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  if (v108)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v105, v9);
LABEL_84:
    uint64_t v109 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v105, v106, *(void *)(*(void *)(v109 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(void *, char *, uint64_t))(v10 + 40))(v105, v106, v9);
LABEL_85:
  uint64_t v110 = v119[9];
  uint64_t v111 = (void *)(v121 + v110);
  uint64_t v112 = (char *)(v120 + v110);
  int v113 = v11((char *)(v121 + v110), 1, v9);
  int v114 = v11(v112, 1, v9);
  if (!v113)
  {
    if (!v114)
    {
      (*(void (**)(void *, char *, uint64_t))(v10 + 40))(v111, v112, v9);
      goto LABEL_91;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v111, v9);
    goto LABEL_90;
  }
  if (v114)
  {
LABEL_90:
    uint64_t v115 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v111, v112, *(void *)(*(void *)(v115 - 8) + 64));
    goto LABEL_91;
  }
  (*(void (**)(void *, char *, uint64_t))(v10 + 32))(v111, v112, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v111, 0, 1, v9);
LABEL_91:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v121 + v119[10], v120 + v119[10], v9);
  uint64_t v116 = v119[11];
  uint64_t v117 = *(void **)(v121 + v116);
  *(void *)(v121 + v116) = *(void *)(v120 + v116);

  *(unsigned char *)(v121 + v119[12]) = *(unsigned char *)(v120 + v119[12]);
  return v121;
}

uint64_t sub_1004AD544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004AD558);
}

uint64_t sub_1004AD558(char *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[6];
LABEL_9:
    int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    return v13(&a1[v11], a2, v9);
  }
  uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[8];
    goto LABEL_9;
  }
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = &a1[a3[10]];

  return v15(v17, a2, v16);
}

uint64_t sub_1004AD6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004AD6E8);
}

char *sub_1004AD6E8(char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
    return result;
  }
  uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_7:
    int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (char *)v13(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_7;
  }
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = &v5[a4[10]];

  return (char *)v15(v17, a2, a2, v16);
}

void sub_1004AD864()
{
  type metadata accessor for SDAuthenticationSessionMetrics();
  if (v0 <= 0x3F)
  {
    sub_100271710();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Date();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1004AD99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004AD9B0);
}

uint64_t sub_1004AD9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004AD9C8);
}

uint64_t sub_1004AD9CC()
{
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *_s14MacUnlockPhoneVMa()
{
  return &_s14MacUnlockPhoneVN;
}

uint64_t sub_1004ADA9C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2 + 1;
    long long v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_bridgeObjectRetain();
    v11(a1 + 8, v8, v10);
    uint64_t v12 = a3[6];
    int v13 = (char *)(a1 + v12);
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = type metadata accessor for Date();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    uint64_t v88 = a3;
    uint64_t v89 = a2;
    if (v17(v14, 1, v15))
    {
      uint64_t v18 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    int v19 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v20 = v19[5];
    uint64_t v21 = &v13[v20];
    uint64_t v22 = &v14[v20];
    if (v17(&v14[v20], 1, v15))
    {
      uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v21, v22, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v21, 0, 1, v15);
    }
    uint64_t v24 = v19[6];
    int v25 = &v13[v24];
    int v26 = &v14[v24];
    if (v17(&v14[v24], 1, v15))
    {
      uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v25, v26, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v25, 0, 1, v15);
    }
    uint64_t v28 = v19[7];
    uint64_t v29 = &v13[v28];
    uint64_t v30 = &v14[v28];
    if (v17(&v14[v28], 1, v15))
    {
      uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v29, v30, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v29, 0, 1, v15);
    }
    uint64_t v32 = v19[8];
    uint64_t v33 = &v13[v32];
    uint64_t v34 = &v14[v32];
    if (v17(&v14[v32], 1, v15))
    {
      uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v33, v34, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v33, 0, 1, v15);
    }
    uint64_t v36 = v19[9];
    int v37 = &v13[v36];
    int v38 = &v14[v36];
    if (v17(&v14[v36], 1, v15))
    {
      uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v37, v38, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v37, 0, 1, v15);
    }
    uint64_t v40 = v19[10];
    uint64_t v41 = &v13[v40];
    uint64_t v42 = &v14[v40];
    if (v17(&v14[v40], 1, v15))
    {
      uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v41, v42, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v41, 0, 1, v15);
    }
    uint64_t v44 = v19[11];
    uint64_t v45 = &v13[v44];
    uint64_t v46 = &v14[v44];
    if (v17(&v14[v44], 1, v15))
    {
      uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v45, v46, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v45, 0, 1, v15);
    }
    uint64_t v48 = v19[12];
    int v49 = &v13[v48];
    int v50 = &v14[v48];
    if (v17(&v14[v48], 1, v15))
    {
      uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v49, v50, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v49, 0, 1, v15);
    }
    v13[v19[13]] = v14[v19[13]];
    uint64_t v52 = v19[14];
    uint64_t v53 = &v13[v52];
    uint64_t v54 = &v14[v52];
    if (v17(&v14[v52], 1, v15))
    {
      uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v53, v54, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v53, 0, 1, v15);
    }
    uint64_t v56 = v19[15];
    uint64_t v57 = &v13[v56];
    uint64_t v58 = &v14[v56];
    if (v17(&v14[v56], 1, v15))
    {
      uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v57, v58, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v57, 0, 1, v15);
    }
    uint64_t v60 = v19[16];
    int v61 = &v13[v60];
    int v62 = &v14[v60];
    if (v17(&v14[v60], 1, v15))
    {
      uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v61, v62, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v61, 0, 1, v15);
    }
    uint64_t v64 = v19[17];
    uint64_t v65 = &v13[v64];
    uint64_t v66 = &v14[v64];
    if (v17(&v14[v64], 1, v15))
    {
      uint64_t v67 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v65, v66, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v65, 0, 1, v15);
    }
    uint64_t v68 = v19[18];
    uint64_t v69 = &v13[v68];
    uint64_t v70 = &v14[v68];
    *(_DWORD *)uint64_t v69 = *(_DWORD *)v70;
    v69[4] = v70[4];
    v13[v19[19]] = v14[v19[19]];
    uint64_t v71 = v19[20];
    uint64_t v72 = &v13[v71];
    int v73 = &v14[v71];
    uint64_t v74 = *((void *)v73 + 1);
    *(void *)uint64_t v72 = *(void *)v73;
    *((void *)v72 + 1) = v74;
    uint64_t v75 = v19[21];
    uint64_t v76 = &v13[v75];
    uint64_t v77 = &v14[v75];
    uint64_t v78 = *((void *)v77 + 1);
    *(void *)uint64_t v76 = *(void *)v77;
    *((void *)v76 + 1) = v78;
    uint64_t v79 = v88[8];
    *(_DWORD *)(a1 + v88[7]) = *(_DWORD *)((char *)v89 + v88[7]);
    int v80 = (uint64_t *)(a1 + v79);
    uint64_t v81 = *(uint64_t *)((char *)v89 + v79);
    unint64_t v82 = *(uint64_t *)((char *)v89 + v79 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10025ADCC(v81, v82);
    *int v80 = v81;
    v80[1] = v82;
    uint64_t v83 = v88[9];
    uint64_t v84 = v88[10];
    int v85 = *(void **)((char *)v89 + v83);
    *(void *)(a1 + v83) = v85;
    *(unsigned char *)(a1 + v84) = *((unsigned char *)v89 + v84);
    id v86 = v85;
  }
  return a1;
}

void sub_1004AE470(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + 8;
  swift_bridgeObjectRelease();
  sub_10024D338(v4);
  uint64_t v5 = a1 + a2[6];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  long long v9 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v10 = v5 + v9[5];
  if (!v8(v10, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
  }
  uint64_t v11 = v5 + v9[6];
  if (!v8(v11, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v6);
  }
  uint64_t v12 = v5 + v9[7];
  if (!v8(v12, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12, v6);
  }
  uint64_t v13 = v5 + v9[8];
  if (!v8(v13, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v13, v6);
  }
  uint64_t v14 = v5 + v9[9];
  if (!v8(v14, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v14, v6);
  }
  uint64_t v15 = v5 + v9[10];
  if (!v8(v15, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v6);
  }
  uint64_t v16 = v5 + v9[11];
  if (!v8(v16, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v16, v6);
  }
  uint64_t v17 = v5 + v9[12];
  if (!v8(v17, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v17, v6);
  }
  uint64_t v18 = v5 + v9[14];
  if (!v8(v18, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v18, v6);
  }
  uint64_t v19 = v5 + v9[15];
  if (!v8(v19, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v19, v6);
  }
  uint64_t v20 = v5 + v9[16];
  if (!v8(v20, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v20, v6);
  }
  uint64_t v21 = v5 + v9[17];
  if (!v8(v21, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v21, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CC4(*(void *)(a1 + a2[8]), *(void *)(a1 + a2[8] + 8));
  uint64_t v22 = *(void **)(a1 + a2[9]);
}

uint64_t sub_1004AE898(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  long long v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  v9(a1 + 8, v6, v8);
  id v86 = a3;
  uint64_t v87 = a2;
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v17 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v18 = v17[5];
  uint64_t v19 = &v11[v18];
  uint64_t v20 = &v12[v18];
  if (v15(&v12[v18], 1, v13))
  {
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v19, v20, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v19, 0, 1, v13);
  }
  uint64_t v22 = v17[6];
  uint64_t v23 = &v11[v22];
  uint64_t v24 = &v12[v22];
  if (v15(&v12[v22], 1, v13))
  {
    uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v23, v24, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v23, 0, 1, v13);
  }
  uint64_t v26 = v17[7];
  uint64_t v27 = &v11[v26];
  uint64_t v28 = &v12[v26];
  if (v15(&v12[v26], 1, v13))
  {
    uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v27, v28, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v27, 0, 1, v13);
  }
  uint64_t v30 = v17[8];
  uint64_t v31 = &v11[v30];
  uint64_t v32 = &v12[v30];
  if (v15(&v12[v30], 1, v13))
  {
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v31, v32, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v31, 0, 1, v13);
  }
  uint64_t v34 = v17[9];
  uint64_t v35 = &v11[v34];
  uint64_t v36 = &v12[v34];
  if (v15(&v12[v34], 1, v13))
  {
    uint64_t v37 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v35, v36, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v35, 0, 1, v13);
  }
  uint64_t v38 = v17[10];
  uint64_t v39 = &v11[v38];
  uint64_t v40 = &v12[v38];
  if (v15(&v12[v38], 1, v13))
  {
    uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v39, v40, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v39, 0, 1, v13);
  }
  uint64_t v42 = v17[11];
  uint64_t v43 = &v11[v42];
  uint64_t v44 = &v12[v42];
  if (v15(&v12[v42], 1, v13))
  {
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v43, v44, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v43, 0, 1, v13);
  }
  uint64_t v46 = v17[12];
  uint64_t v47 = &v11[v46];
  uint64_t v48 = &v12[v46];
  if (v15(&v12[v46], 1, v13))
  {
    uint64_t v49 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v47, v48, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v47, 0, 1, v13);
  }
  v11[v17[13]] = v12[v17[13]];
  uint64_t v50 = v17[14];
  uint64_t v51 = &v11[v50];
  uint64_t v52 = &v12[v50];
  if (v15(&v12[v50], 1, v13))
  {
    uint64_t v53 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v51, v52, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v51, 0, 1, v13);
  }
  uint64_t v54 = v17[15];
  uint64_t v55 = &v11[v54];
  uint64_t v56 = &v12[v54];
  if (v15(&v12[v54], 1, v13))
  {
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v55, v56, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v55, 0, 1, v13);
  }
  uint64_t v58 = v17[16];
  uint64_t v59 = &v11[v58];
  uint64_t v60 = &v12[v58];
  if (v15(&v12[v58], 1, v13))
  {
    uint64_t v61 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v59, v60, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v59, 0, 1, v13);
  }
  uint64_t v62 = v17[17];
  uint64_t v63 = &v11[v62];
  uint64_t v64 = &v12[v62];
  if (v15(&v12[v62], 1, v13))
  {
    uint64_t v65 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v63, v64, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v63, 0, 1, v13);
  }
  uint64_t v66 = v17[18];
  uint64_t v67 = &v11[v66];
  uint64_t v68 = &v12[v66];
  *(_DWORD *)uint64_t v67 = *(_DWORD *)v68;
  v67[4] = v68[4];
  v11[v17[19]] = v12[v17[19]];
  uint64_t v69 = v17[20];
  uint64_t v70 = &v11[v69];
  uint64_t v71 = &v12[v69];
  uint64_t v72 = *((void *)v71 + 1);
  *(void *)uint64_t v70 = *(void *)v71;
  *((void *)v70 + 1) = v72;
  uint64_t v73 = v17[21];
  uint64_t v74 = &v11[v73];
  uint64_t v75 = &v12[v73];
  uint64_t v76 = *((void *)v75 + 1);
  *(void *)uint64_t v74 = *(void *)v75;
  *((void *)v74 + 1) = v76;
  uint64_t v77 = v86[8];
  *(_DWORD *)(a1 + v86[7]) = *(_DWORD *)(v87 + v86[7]);
  uint64_t v78 = (uint64_t *)(a1 + v77);
  uint64_t v79 = *(void *)(v87 + v77);
  unint64_t v80 = *(void *)(v87 + v77 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10025ADCC(v79, v80);
  *uint64_t v78 = v79;
  v78[1] = v80;
  uint64_t v81 = v86[9];
  uint64_t v82 = v86[10];
  uint64_t v83 = *(void **)(v87 + v81);
  *(void *)(a1 + v81) = v83;
  *(unsigned char *)(a1 + v82) = *(unsigned char *)(v87 + v82);
  id v84 = v83;
  return a1;
}

void *sub_1004AF224(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2 + 1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10026F6D4(a1 + 1, v6);
  uint64_t v111 = a2;
  uint64_t v7 = a3[6];
  uint64_t v112 = a1;
  uint64_t v8 = (char *)a1 + v7;
  long long v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v17 = v16[5];
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  int v20 = v12(&v8[v17], 1, v10);
  int v21 = v12(v19, 1, v10);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v18, v19, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
LABEL_12:
    uint64_t v22 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v18, v19, v10);
LABEL_13:
  uint64_t v23 = v16[6];
  uint64_t v24 = &v8[v23];
  uint64_t v25 = &v9[v23];
  int v26 = v12(&v8[v23], 1, v10);
  int v27 = v12(v25, 1, v10);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v24, v25, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v24, 0, 1, v10);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
LABEL_18:
    uint64_t v28 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v24, v25, v10);
LABEL_19:
  uint64_t v29 = v16[7];
  uint64_t v30 = &v8[v29];
  uint64_t v31 = &v9[v29];
  int v32 = v12(&v8[v29], 1, v10);
  int v33 = v12(v31, 1, v10);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v30, v31, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0, 1, v10);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v30, v10);
LABEL_24:
    uint64_t v34 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v30, v31, v10);
LABEL_25:
  uint64_t v35 = v16[8];
  uint64_t v36 = &v8[v35];
  uint64_t v37 = &v9[v35];
  int v38 = v12(&v8[v35], 1, v10);
  int v39 = v12(v37, 1, v10);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v36, v37, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v36, 0, 1, v10);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v10);
LABEL_30:
    uint64_t v40 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v36, v37, v10);
LABEL_31:
  uint64_t v41 = v16[9];
  uint64_t v42 = &v8[v41];
  uint64_t v43 = &v9[v41];
  int v44 = v12(&v8[v41], 1, v10);
  int v45 = v12(v43, 1, v10);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v42, v43, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v42, 0, 1, v10);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v10);
LABEL_36:
    uint64_t v46 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v42, v43, v10);
LABEL_37:
  uint64_t v47 = v16[10];
  uint64_t v48 = &v8[v47];
  uint64_t v49 = &v9[v47];
  int v50 = v12(&v8[v47], 1, v10);
  int v51 = v12(v49, 1, v10);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v48, v49, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v48, 0, 1, v10);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v48, v10);
LABEL_42:
    uint64_t v52 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v48, v49, v10);
LABEL_43:
  uint64_t v53 = v16[11];
  uint64_t v54 = &v8[v53];
  uint64_t v55 = &v9[v53];
  int v56 = v12(&v8[v53], 1, v10);
  int v57 = v12(v55, 1, v10);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v54, v55, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v54, 0, 1, v10);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v54, v10);
LABEL_48:
    uint64_t v58 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v54, v55, v10);
LABEL_49:
  uint64_t v59 = v16[12];
  uint64_t v60 = &v8[v59];
  uint64_t v61 = &v9[v59];
  int v62 = v12(&v8[v59], 1, v10);
  int v63 = v12(v61, 1, v10);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v60, v61, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v60, 0, 1, v10);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v60, v10);
LABEL_54:
    uint64_t v64 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v60, v61, v10);
LABEL_55:
  v8[v16[13]] = v9[v16[13]];
  uint64_t v65 = v16[14];
  uint64_t v66 = &v8[v65];
  uint64_t v67 = &v9[v65];
  int v68 = v12(&v8[v65], 1, v10);
  int v69 = v12(v67, 1, v10);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v66, v67, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v66, 0, 1, v10);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v66, v10);
LABEL_60:
    uint64_t v70 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v66, v67, v10);
LABEL_61:
  uint64_t v71 = v16[15];
  uint64_t v72 = &v8[v71];
  uint64_t v73 = &v9[v71];
  int v74 = v12(&v8[v71], 1, v10);
  int v75 = v12(v73, 1, v10);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v72, v73, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v72, 0, 1, v10);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v72, v10);
LABEL_66:
    uint64_t v76 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v72, v73, v10);
LABEL_67:
  uint64_t v77 = v16[16];
  uint64_t v78 = &v8[v77];
  uint64_t v79 = &v9[v77];
  int v80 = v12(&v8[v77], 1, v10);
  int v81 = v12(v79, 1, v10);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v78, v79, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v78, 0, 1, v10);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v78, v10);
LABEL_72:
    uint64_t v82 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v78, v79, v10);
LABEL_73:
  uint64_t v83 = v16[17];
  id v84 = &v8[v83];
  int v85 = &v9[v83];
  int v86 = v12(&v8[v83], 1, v10);
  int v87 = v12(v85, 1, v10);
  if (!v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v84, v85, v10);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v84, v10);
    goto LABEL_78;
  }
  if (v87)
  {
LABEL_78:
    uint64_t v88 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v84, v85, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v84, 0, 1, v10);
LABEL_79:
  uint64_t v89 = v16[18];
  uint64_t v90 = &v8[v89];
  uint64_t v91 = &v9[v89];
  int v92 = *(_DWORD *)v91;
  v90[4] = v91[4];
  *(_DWORD *)uint64_t v90 = v92;
  v8[v16[19]] = v9[v16[19]];
  uint64_t v93 = v16[20];
  uint64_t v94 = &v8[v93];
  uint64_t v95 = &v9[v93];
  *(void *)uint64_t v94 = *(void *)v95;
  *((void *)v94 + 1) = *((void *)v95 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v96 = v16[21];
  uint64_t v97 = &v8[v96];
  uint64_t v98 = &v9[v96];
  *(void *)uint64_t v97 = *(void *)v98;
  *((void *)v97 + 1) = *((void *)v98 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)((char *)v112 + a3[7]) = *(_DWORD *)((char *)v111 + a3[7]);
  uint64_t v99 = a3[8];
  uint64_t v100 = (void *)((char *)v112 + v99);
  uint64_t v101 = (void *)((char *)v111 + v99);
  uint64_t v102 = *v101;
  unint64_t v103 = v101[1];
  sub_10025ADCC(*v101, v103);
  uint64_t v104 = *v100;
  unint64_t v105 = v100[1];
  *uint64_t v100 = v102;
  v100[1] = v103;
  sub_100250CC4(v104, v105);
  uint64_t v106 = a3[9];
  int v107 = *(void **)((char *)v112 + v106);
  int v108 = *(void **)((char *)v111 + v106);
  *(void *)((char *)v112 + v106) = v108;
  id v109 = v108;

  *((unsigned char *)v112 + a3[10]) = *((unsigned char *)v111 + a3[10]);
  return v112;
}

uint64_t sub_1004B00A8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v4 = a3[6];
  uint64_t v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  long long v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v12 = v11[5];
  int v13 = &v5[v12];
  int v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  int v21 = &v5[v20];
  uint64_t v22 = &v6[v20];
  if (v9(&v6[v20], 1, v7))
  {
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
  }
  uint64_t v24 = v11[8];
  uint64_t v25 = &v5[v24];
  int v26 = &v6[v24];
  if (v9(&v6[v24], 1, v7))
  {
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v9(&v6[v28], 1, v7))
  {
    uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
  }
  uint64_t v32 = v11[10];
  int v33 = &v5[v32];
  uint64_t v34 = &v6[v32];
  if (v9(&v6[v32], 1, v7))
  {
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
  }
  uint64_t v36 = v11[11];
  uint64_t v37 = &v5[v36];
  int v38 = &v6[v36];
  if (v9(&v6[v36], 1, v7))
  {
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
  }
  uint64_t v40 = v11[12];
  uint64_t v41 = &v5[v40];
  uint64_t v42 = &v6[v40];
  if (v9(&v6[v40], 1, v7))
  {
    uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
  }
  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  int v45 = &v5[v44];
  uint64_t v46 = &v6[v44];
  if (v9(&v6[v44], 1, v7))
  {
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
  }
  uint64_t v48 = v11[15];
  uint64_t v49 = &v5[v48];
  int v50 = &v6[v48];
  if (v9(&v6[v48], 1, v7))
  {
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
  }
  uint64_t v52 = v11[16];
  uint64_t v53 = &v5[v52];
  uint64_t v54 = &v6[v52];
  if (v9(&v6[v52], 1, v7))
  {
    uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v7);
  }
  uint64_t v56 = v11[17];
  int v57 = &v5[v56];
  uint64_t v58 = &v6[v56];
  if (v9(&v6[v56], 1, v7))
  {
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0, 1, v7);
  }
  uint64_t v60 = v11[18];
  uint64_t v61 = &v5[v60];
  int v62 = &v6[v60];
  *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  v5[v11[19]] = v6[v11[19]];
  *(_OWORD *)&v5[v11[20]] = *(_OWORD *)&v6[v11[20]];
  *(_OWORD *)&v5[v11[21]] = *(_OWORD *)&v6[v11[21]];
  uint64_t v63 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v63) = *(_OWORD *)(a2 + v63);
  uint64_t v64 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v64) = *(unsigned char *)(a2 + v64);
  return a1;
}

uint64_t sub_1004B09C4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  sub_10024D338(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v107 = a2;
  uint64_t v6 = a3[6];
  uint64_t v108 = a1;
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  uint64_t v83 = &v7[v82];
  id v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (!v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v83, v84, v9);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
    goto LABEL_78;
  }
  if (v86)
  {
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v83, v84, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  uint64_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  *(_DWORD *)uint64_t v89 = *(_DWORD *)v90;
  v89[4] = v90[4];
  v7[v15[19]] = v8[v15[19]];
  uint64_t v91 = v15[20];
  int v92 = &v7[v91];
  uint64_t v93 = &v8[v91];
  uint64_t v95 = *(void *)v93;
  uint64_t v94 = *((void *)v93 + 1);
  *(void *)int v92 = v95;
  *((void *)v92 + 1) = v94;
  swift_bridgeObjectRelease();
  uint64_t v96 = v15[21];
  uint64_t v97 = &v7[v96];
  uint64_t v98 = &v8[v96];
  uint64_t v100 = *(void *)v98;
  uint64_t v99 = *((void *)v98 + 1);
  *(void *)uint64_t v97 = v100;
  *((void *)v97 + 1) = v99;
  swift_bridgeObjectRelease();
  uint64_t v101 = a3[8];
  *(_DWORD *)(v108 + a3[7]) = *(_DWORD *)(v107 + a3[7]);
  uint64_t v102 = *(void *)(v108 + v101);
  unint64_t v103 = *(void *)(v108 + v101 + 8);
  *(_OWORD *)(v108 + v101) = *(_OWORD *)(v107 + v101);
  sub_100250CC4(v102, v103);
  uint64_t v104 = a3[9];
  unint64_t v105 = *(void **)(v108 + v104);
  *(void *)(v108 + v104) = *(void *)(v107 + v104);

  *(unsigned char *)(v108 + a3[10]) = *(unsigned char *)(v107 + a3[10]);
  return v108;
}

uint64_t sub_1004B1814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004B1828);
}

uint64_t sub_1004B182C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004B1840);
}

uint64_t sub_1004B1844()
{
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1004B1914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004B1928);
}

uint64_t sub_1004B192C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004B1940);
}

uint64_t sub_1004B1944()
{
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1004B19FC(uint64_t a1, uint64_t a2)
{
  v2[10] = a1;
  v2[11] = a2;
  uint64_t v3 = type metadata accessor for SFInterventionWorkflow.SprinboardSettings();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  return _swift_task_switch(sub_1004B1ABC, 0, 0);
}

uint64_t sub_1004B1ABC()
{
  unint64_t v1 = v0;
  unint64_t v2 = v0 + 6;
  uint64_t v22 = v0 + 20;
  uint64_t v4 = v0[13];
  uint64_t v3 = v0[14];
  uint64_t v5 = v0[12];
  uint64_t v6 = *(void (**)(uint64_t, void, uint64_t))(v4 + 104);
  v6(v3, enum case for SFInterventionWorkflow.SprinboardSettings.interventionShouldContinue(_:), v5);
  uint64_t v7 = SFInterventionWorkflow.SprinboardSettings.rawValue.getter();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v8(v3, v5);
  v6(v3, enum case for SFInterventionWorkflow.SprinboardSettings.interventionReply(_:), v5);
  uint64_t v9 = SFInterventionWorkflow.SprinboardSettings.rawValue.getter();
  v8(v3, v5);
  unint64_t v10 = sub_100245A7C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v11 = static SFInterventionWorkflow.SprinboardSettings.userInfoKey.getter();
  uint64_t v13 = v12;
  uint64_t v14 = SFInterventionWorkflow.rawValue.getter();
  v1[5] = &type metadata for String;
  v1[2] = v14;
  v1[3] = v15;
  sub_100249444((_OWORD *)v1 + 1, v2);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100591338(v2, v11, v13, isUniquelyReferenced_nonNull_native);
  v1[15] = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v17 = [objc_allocWithZone((Class)sub_10000A844(&qword_100975F28)) init];
  v1[16] = v17;
  uint64_t v18 = swift_task_alloc();
  v1[17] = v18;
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = v7;
  *(_OWORD *)(v18 + 32) = xmmword_100770720;
  *(void *)(v18 + 48) = 0x80000001007B69C0;
  *(void *)(v18 + 56) = 0xD00000000000001DLL;
  *(void *)(v18 + 64) = 0x80000001007BEBE0;
  *(void *)(v18 + 72) = v10;
  *(void *)(v18 + 80) = v9;
  *(void *)(v18 + 88) = 0;
  int v19 = (void *)swift_task_alloc();
  v1[18] = v19;
  uint64_t v20 = sub_10000A844(&qword_1009713C0);
  *int v19 = v1;
  v19[1] = sub_1004B1D50;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v22, 0, 0, 0xD00000000000006ALL, 0x80000001007B69E0, sub_1004B2AEC, v18, v20);
}

uint64_t sub_1004B1D50()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1004B1F58;
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + 128);
    swift_bridgeObjectRelease();

    swift_task_dealloc();
    *(unsigned char *)(v2 + 161) = *(unsigned char *)(v2 + 160);
    uint64_t v3 = sub_1004B1E8C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1004B1E8C()
{
  char v1 = *(unsigned char *)(v0 + 161);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = type metadata accessor for SFInterventionResponse();
  uint64_t v4 = (unsigned int *)&enum case for SFInterventionResponse.reject(_:);
  if (v1) {
    uint64_t v4 = (unsigned int *)&enum case for SFInterventionResponse.accept(_:);
  }
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v3 - 8) + 104))(v2, *v4, v3);
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1004B1F58()
{
  char v1 = *(void **)(v0 + 128);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1004B1FDC(char a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void))(a2 + 16))(a2, a1 & 1);
}

uint64_t sub_1004B1FF4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100975ED0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100975ED0);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1004B20BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 40) = a6;
  *(void *)(v7 + 48) = a7;
  *(void *)(v7 + 32) = a5;
  *(unsigned char *)(v7 + 128) = a4;
  uint64_t v8 = type metadata accessor for SFInterventionResponse();
  *(void *)(v7 + 56) = v8;
  *(void *)(v7 + 64) = *(void *)(v8 - 8);
  *(void *)(v7 + 72) = swift_task_alloc();
  *(void *)(v7 + 80) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for SFInterventionWorkflow();
  *(void *)(v7 + 88) = v9;
  *(void *)(v7 + 96) = *(void *)(v9 - 8);
  *(void *)(v7 + 104) = swift_task_alloc();
  return _swift_task_switch(sub_1004B21F0, 0, 0);
}

uint64_t sub_1004B21F0()
{
  uint64_t v1 = (unsigned int *)&enum case for SFInterventionWorkflow.send(_:);
  if (!*(unsigned char *)(v0 + 128)) {
    uint64_t v1 = (unsigned int *)&enum case for SFInterventionWorkflow.receive(_:);
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 96) + 104))(*(void *)(v0 + 104), *v1, *(void *)(v0 + 88));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1004B22C0;
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 80);
  return sub_1004B19FC(v4, v3);
}

uint64_t sub_1004B22C0()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1004B2544;
  }
  else {
    uint64_t v2 = sub_1004B23D4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1004B23D4()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, *(void *)(v0 + 80), v2);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  if (v4 == enum case for SFInterventionResponse.accept(_:) || v4 == enum case for SFInterventionResponse.reject(_:))
  {
    uint64_t v7 = *(void *)(v0 + 96);
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v9 = *(void *)(v0 + 80);
    uint64_t v8 = *(void *)(v0 + 88);
    uint64_t v10 = *(void *)(v0 + 56);
    uint64_t v11 = *(void *)(v0 + 64);
    (*(void (**)(BOOL))(v0 + 40))(v4 == enum case for SFInterventionResponse.accept(_:));
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  else
  {
    return _diagnoseUnexpectedEnumCase<A>(type:)();
  }
}

uint64_t sub_1004B2544()
{
  uint64_t v12 = v0;
  (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 104), *(void *)(v0 + 88));
  if (qword_100969E78 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_100975ED0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 120);
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    *(void *)(v0 + 16) = v5;
    swift_errorRetain();
    sub_10000A844(&qword_10096BAF0);
    uint64_t v7 = String.init<A>(describing:)();
    *(void *)(v0 + 24) = sub_100254634(v7, v8, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Intervention UI failed {error: %s}", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  (*(void (**)(void))(v0 + 40))(0);
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t type metadata accessor for SDAirDropUserSafetyInterventionAlert()
{
  return self;
}

uint64_t sub_1004B297C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004B29B4(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_1004B29CC()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1004B2A14(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + 56);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10000A6F4;
  return sub_1004B20BC(a1, v4, v5, v6, v7, v8, v9);
}

double sub_1004B2AEC(uint64_t a1)
{
  *(void *)&double result = sub_1006A1728(a1, (void *)v1[2], (void *)v1[3], (void *)v1[4], (void *)v1[5], v1[6], (void *)v1[7], (void *)v1[8], v1[9], v1[10], v1[11]).n128_u64[0];
  return result;
}

uint64_t sub_1004B2B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[24] = a4;
  v5[25] = v4;
  v5[22] = a2;
  v5[23] = a3;
  v5[21] = a1;
  v5[26] = sub_10000A844(&qword_100970E20);
  v5[27] = swift_task_alloc();
  sub_10000A844(&qword_100970E08);
  v5[28] = swift_task_alloc();
  sub_10000A844(&qword_10096C920);
  v5[29] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFAirDropSend.Failure();
  v5[30] = v6;
  v5[31] = *(void *)(v6 - 8);
  v5[32] = swift_task_alloc();
  v5[33] = swift_task_alloc();
  v5[34] = swift_task_alloc();
  v5[35] = swift_task_alloc();
  sub_10000A844(&qword_1009760A8);
  v5[36] = swift_task_alloc();
  uint64_t v7 = _s15EndpointFailureVMa(0);
  v5[37] = v7;
  v5[38] = *(void *)(v7 - 8);
  v5[39] = swift_task_alloc();
  sub_10000A844(&qword_10096D8B8);
  v5[40] = swift_task_alloc();
  uint64_t v8 = sub_10000A844(&qword_1009760B0);
  v5[41] = v8;
  v5[42] = *(void *)(v8 - 8);
  v5[43] = swift_task_alloc();
  sub_10000A844(&qword_100970DF0);
  v5[44] = swift_task_alloc();
  v5[45] = swift_task_alloc();
  v5[46] = swift_task_alloc();
  v5[47] = swift_task_alloc();
  uint64_t v9 = sub_10000A844(&qword_100970E10);
  v5[48] = v9;
  v5[49] = *(void *)(v9 - 8);
  v5[50] = swift_task_alloc();
  uint64_t v10 = sub_10000A844(&qword_1009760B8);
  v5[51] = v10;
  v5[52] = *(void *)(v10 - 8);
  v5[53] = swift_task_alloc();
  v5[54] = swift_task_alloc();
  return _swift_task_switch(sub_1004B2EF4, v4, 0);
}

uint64_t sub_1004B2EF4()
{
  uint64_t v1 = *(void *)(v0 + 392);
  uint64_t v32 = *(void *)(v0 + 384);
  uint64_t v2 = *(void *)(v0 + 200);
  os_log_type_t v3 = (void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_runner);
  *(void *)(v0 + 128) = *(void *)(*sub_10026BB6C((void *)(v2+ OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_runner), *(void *)(v2+ OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_runner+ 24))+ OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints);
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_10000A844(&qword_10096F010);
  sub_1004BAA30();
  uint64_t v4 = Publisher<>.sink(receiveValue:)();
  *(void *)(v0 + 440) = v4;
  swift_release();
  swift_release();
  *(void *)(v0 + 152) = *(void *)(*sub_10026BB6C(v3, v3[3])
                                    + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_backupEndpoints);
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v5 = Publisher<>.sink(receiveValue:)();
  *(void *)(v0 + 448) = v5;
  swift_release();
  swift_release();
  uint64_t v6 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askContinuation;
  *(void *)(v0 + 456) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askContinuation;
  uint64_t v7 = v2 + v6;
  swift_beginAccess();
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  *(void *)(v0 + 464) = v8;
  *(void *)(v0 + 472) = (v1 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v8(v7, 1, v32))
  {
    uint64_t v9 = *(void *)(v0 + 240);
    uint64_t v10 = *(void *)(v0 + 248);
    uint64_t v11 = *(void *)(v0 + 200);
    sub_1004BAAE0(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v12, enum case for SFAirDropSend.Failure.badRequest(_:), v9);
    swift_willThrow();
    sub_1004B5F48(v4, v5, v11);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 424);
    uint64_t v15 = *(void *)(v0 + 432);
    uint64_t v18 = *(void *)(v0 + 408);
    uint64_t v17 = *(void *)(v0 + 416);
    uint64_t v20 = *(void *)(v0 + 392);
    uint64_t v19 = *(void *)(v0 + 400);
    uint64_t v21 = *(void *)(v0 + 384);
    uint64_t v31 = *(void *)(v0 + 376);
    uint64_t v22 = *(void *)(v0 + 248);
    uint64_t v30 = *(void *)(v0 + 240);
    uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
    *(void *)(v0 + 480) = v23;
    *(void *)(v0 + 488) = (v20 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v23(v19, v7, v21);
    SFProgressContinuation.task.getter();
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    *(void *)(v0 + 496) = v24;
    *(void *)(v0 + 504) = (v20 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v24(v19, v21);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v15, v16, v18);
    int v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
    *(void *)(v0 + 512) = v25;
    *(void *)(v0 + 520) = (v22 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v25(v31, 1, 1, v30);
    SFProgressTask.makeAsyncIterator()();
    uint64_t v26 = sub_1004BAAE0(&qword_1009760C8, (void (*)(uint64_t))type metadata accessor for SDAirDropAskFanoutHelper);
    *(void *)(v0 + 528) = v26;
    *(void *)(v0 + 536) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_endpointService;
    *(_DWORD *)(v0 + 584) = enum case for SFAirDropSend.Failure.unexpected(_:);
    *(_DWORD *)(v0 + 588) = enum case for SFAirDropSend.Failure.resolveFailure(_:);
    *(_DWORD *)(v0 + 592) = enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    *(_DWORD *)(v0 + 596) = enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    uint64_t v27 = *(void *)(v0 + 200);
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 544) = v28;
    void *v28 = v0;
    v28[1] = sub_1004B3490;
    uint64_t v29 = *(void *)(v0 + 328);
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 144, v27, v26, v29, v0 + 120);
  }
}

uint64_t sub_1004B3490()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 200);
  if (v0) {
    uint64_t v4 = sub_1004B4A1C;
  }
  else {
    uint64_t v4 = sub_1004B35A4;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1004B35A4()
{
  uint64_t v98 = v0;
  uint64_t v2 = v0 + 144;
  uint64_t v1 = *(void *)(v0 + 144);
  *(void *)(v0 + 552) = v1;
  if (v1 == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 336) + 8))(*(void *)(v0 + 344), *(void *)(v0 + 328));
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 568) = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_1004B45C8;
    uint64_t v16 = *(void *)(v0 + 408);
    uint64_t v17 = *(void *)(v0 + 216);
    return SFProgressTask.finalValue.getter(v17, v16);
  }
  else
  {
    if (!v1)
    {
LABEL_40:
      uint64_t v84 = *(void *)(v0 + 528);
      uint64_t v85 = *(void *)(v0 + 200);
      int v86 = (void *)swift_task_alloc();
      *(void *)(v0 + 544) = v86;
      void *v86 = v0;
      v86[1] = sub_1004B3490;
      uint64_t v87 = *(void *)(v0 + 328);
      return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v2, v85, v84, v87, v0 + 120);
    }
    uint64_t v3 = *(void *)(v0 + 320);
    uint64_t v4 = *(void *)(v0 + 304);
    uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    v6(v3, 1, 1, v5);
    *(void *)(v0 + 160) = v1;
    swift_errorRetain();
    swift_errorRetain();
    sub_10000A844(&qword_10096BAF0);
    int v7 = swift_dynamicCast();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    if (v7)
    {
      uint64_t v94 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 512);
      uint64_t v9 = *(void *)(v0 + 376);
      uint64_t v11 = *(void *)(v0 + 312);
      uint64_t v10 = *(void *)(v0 + 320);
      uint64_t v90 = v6;
      uint64_t v13 = *(void *)(v0 + 288);
      uint64_t v12 = *(void *)(v0 + 296);
      uint64_t v14 = *(void *)(v0 + 248);
      uint64_t v91 = *(void *)(v0 + 240);
      v8(v13, 0, 1, v12);
      sub_10000A7E8(v10, &qword_10096D8B8);
      sub_10000A7E8(v9, &qword_100970DF0);
      sub_1004BB224(v13, v11, _s15EndpointFailureVMa);
      sub_1004BB224(v11, v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
      v90(v10, 0, 1, v5);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v9, v11 + *(int *)(v12 + 20), v91);
      v94(v9, 0, 1, v91);
    }
    else
    {
      uint64_t v18 = *(void *)(v0 + 288);
      v8(v18, 1, 1, *(void *)(v0 + 296));
      sub_10000A7E8(v18, &qword_1009760A8);
      *(void *)(v0 + 136) = v1;
      swift_errorRetain();
      if (swift_dynamicCast())
      {
        uint64_t v19 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 512);
        uint64_t v21 = *(void *)(v0 + 368);
        uint64_t v20 = *(void *)(v0 + 376);
        uint64_t v22 = *(void *)(v0 + 280);
        uint64_t v23 = *(void *)(v0 + 240);
        uint64_t v24 = *(void *)(v0 + 248);
        v19(v21, 0, 1, v23);
        sub_10000A7E8(v20, &qword_100970DF0);
        int v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32);
        v25(v22, v21, v23);
        v25(v20, v22, v23);
        v19(v20, 0, 1, v23);
      }
      else
      {
        unsigned int v95 = *(_DWORD *)(v0 + 584);
        uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 512);
        uint64_t v28 = *(void *)(v0 + 368);
        uint64_t v27 = *(void *)(v0 + 376);
        uint64_t v29 = *(void *)(v0 + 360);
        uint64_t v31 = *(void *)(v0 + 240);
        uint64_t v30 = *(void *)(v0 + 248);
        v26(v28, 1, 1, v31);
        sub_10000A7E8(v28, &qword_100970DF0);
        swift_errorRetain();
        CodableError.init(_:)();
        sub_10000A7E8(v27, &qword_100970DF0);
        (*(void (**)(uint64_t, void, uint64_t))(v30 + 104))(v29, v95, v31);
        v26(v29, 0, 1, v31);
        sub_10024D388(v29, v27, &qword_100970DF0);
      }
    }
    uint64_t v32 = *(void *)(v0 + 352);
    uint64_t v34 = *(void *)(v0 + 240);
    uint64_t v33 = *(void *)(v0 + 248);
    sub_10024A330(*(void *)(v0 + 376), v32, &qword_100970DF0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v32, 1, v34) == 1)
    {
      uint64_t v35 = *(void *)(v0 + 352);
      sub_10000A7E8(*(void *)(v0 + 320), &qword_10096D8B8);
      sub_1004BAB28(v1);
      sub_1004BAB28(v1);
      sub_10000A7E8(v35, &qword_100970DF0);
      uint64_t v2 = v0 + 144;
      goto LABEL_40;
    }
    int v36 = *(_DWORD *)(v0 + 588);
    uint64_t v38 = *(void *)(v0 + 264);
    uint64_t v37 = *(void *)(v0 + 272);
    uint64_t v39 = *(void *)(v0 + 240);
    uint64_t v40 = *(void *)(v0 + 248);
    (*(void (**)(uint64_t, void, uint64_t))(v40 + 32))(v37, *(void *)(v0 + 352), v39);
    uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16);
    v41(v38, v37, v39);
    int v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 88))(v38, v39);
    if (v42 != v36)
    {
      if (v42 == *(_DWORD *)(v0 + 592) || v42 == *(_DWORD *)(v0 + 596))
      {
        uint64_t v96 = v41;
        if (qword_100969E80 != -1) {
          swift_once();
        }
        uint64_t v56 = *(void *)(v0 + 272);
        uint64_t v57 = *(void *)(v0 + 256);
        uint64_t v58 = *(void *)(v0 + 240);
        uint64_t v59 = type metadata accessor for Logger();
        sub_10000B47C(v59, (uint64_t)qword_100975F30);
        v96(v57, v56, v58);
        uint64_t v60 = Logger.logObject.getter();
        os_log_type_t v61 = static os_log_type_t.default.getter();
        BOOL v62 = os_log_type_enabled(v60, v61);
        uint64_t v63 = *(void *)(v0 + 256);
        uint64_t v64 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 248) + 8);
        if (v62)
        {
          uint64_t v92 = *(void *)(v0 + 240);
          uint64_t v65 = swift_slowAlloc();
          uint64_t v97 = swift_slowAlloc();
          *(_DWORD *)uint64_t v65 = 136315138;
          uint64_t v66 = SFAirDropSend.Failure.errorDescription.getter();
          *(void *)(v65 + 4) = sub_100254634(v66, v67, &v97);
          swift_bridgeObjectRelease();
          int v68 = *v64;
          (*v64)(v63, v92);
          _os_log_impl((void *)&_mh_execute_header, v60, v61, "Fatal Ask failure %s", (uint8_t *)v65, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          int v68 = *v64;
          (*v64)(*(void *)(v0 + 256), *(void *)(v0 + 240));
        }

        int v73 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 464);
        uint64_t v74 = *(void *)(v0 + 384);
        uint64_t v75 = *(void *)(v0 + 200) + *(void *)(v0 + 456);
        swift_beginAccess();
        if (v73(v75, 1, v74))
        {
          uint64_t v76 = *(void *)(v0 + 320);
          v68(*(void *)(v0 + 272), *(void *)(v0 + 240));
          sub_10000A7E8(v76, &qword_10096D8B8);
          swift_endAccess();
          sub_1004BAB28(v1);
          sub_1004BAB28(v1);
        }
        else
        {
          uint64_t v89 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
          uint64_t v77 = *(void *)(v0 + 400);
          uint64_t v78 = *(void *)(v0 + 384);
          uint64_t v93 = *(void *)(v0 + 320);
          uint64_t v79 = *(void *)(v0 + 240);
          uint64_t v80 = *(void *)(v0 + 272);
          (*(void (**)(uint64_t, void, uint64_t))(v0 + 480))(v77, *(void *)(v0 + 200) + *(void *)(v0 + 456), v78);
          swift_endAccess();
          sub_1004BAAE0(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
          swift_allocError();
          v96(v81, v80, v79);
          SFProgressContinuation.fail(with:)();
          sub_1004BAB28(v1);
          sub_1004BAB28(v1);
          v89(v77, v78);
          v68(v80, v79);
          sub_10000A7E8(v93, &qword_10096D8B8);
          swift_errorRelease();
        }
        uint64_t v2 = v0 + 144;
        uint64_t v82 = *(void *)(v0 + 224);
        uint64_t v83 = *(void *)(v0 + 200) + *(void *)(v0 + 456);
        (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)(v0 + 392) + 56))(v82, 1, 1, *(void *)(v0 + 384));
        swift_beginAccess();
        sub_1004BABE8(v82, v83);
        swift_endAccess();
      }
      else
      {
        if (qword_100969E80 != -1) {
          swift_once();
        }
        uint64_t v50 = type metadata accessor for Logger();
        sub_10000B47C(v50, (uint64_t)qword_100975F30);
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v51 = Logger.logObject.getter();
        os_log_type_t v52 = static os_log_type_t.default.getter();
        uint64_t v2 = v0 + 144;
        if (os_log_type_enabled(v51, v52))
        {
          uint64_t v53 = swift_slowAlloc();
          uint64_t v54 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v53 = 138412290;
          swift_errorRetain();
          uint64_t v55 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v53 + 4) = v55;
          *uint64_t v54 = v55;
          sub_1004BAB28(v1);
          sub_1004BAB28(v1);
          _os_log_impl((void *)&_mh_execute_header, v51, v52, "Ask failed %@ - waiting for other asks if appropriate", (uint8_t *)v53, 0xCu);
          sub_10000A844(&qword_10096B850);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          sub_1004BAB28(v1);
          sub_1004BAB28(v1);
        }
        else
        {

          sub_1004BAB28(v1);
          sub_1004BAB28(v1);
          swift_errorRelease();
          swift_errorRelease();
        }
        uint64_t v69 = *(void *)(v0 + 320);
        uint64_t v70 = *(void *)(v0 + 264);
        uint64_t v71 = *(void *)(v0 + 240);
        uint64_t v72 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 248) + 8);
        v72(*(void *)(v0 + 272), v71);
        sub_10000A7E8(v69, &qword_10096D8B8);
        v72(v70, v71);
      }
      goto LABEL_40;
    }
    if (qword_100969E80 != -1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for Logger();
    sub_10000B47C(v43, (uint64_t)qword_100975F30);
    int v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Resolve failed - waiting for other asks if appropriate and attempting fallback", v46, 2u);
      swift_slowDealloc();
    }
    uint64_t v47 = *(void *)(v0 + 536);
    uint64_t v48 = *(void *)(v0 + 200);

    *(void *)(v0 + 560) = *(void *)(v48 + v47);
    if (qword_100969B90 != -1) {
      swift_once();
    }
    uint64_t v49 = static AirDropActor.shared;
    return _swift_task_switch(sub_1004B41E0, v49, 0);
  }
}

uint64_t sub_1004B41E0()
{
  uint64_t v1 = v0[70];
  sub_10046E528();
  sub_10045F7D8();
  swift_bridgeObjectRelease();
  sub_10046E734();
  if (*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_classroomBrowser)) {
    goto LABEL_10;
  }
  uint64_t v2 = v0[29];
  uint64_t v3 = type metadata accessor for TaskPriority();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v6 = static MainActor.shared.getter();
  int v7 = (void *)swift_allocObject();
  v7[2] = v6;
  v7[3] = &protocol witness table for MainActor;
  v7[4] = v5;
  swift_release();
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  uint64_t v9 = v0[29];
  if (v8 != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v3);
    if (v7[2]) {
      goto LABEL_4;
    }
LABEL_6:
    uint64_t v10 = 0;
    uint64_t v12 = 0;
    goto LABEL_7;
  }
  sub_10000A7E8(v0[29], &qword_10096C920);
  if (!v6) {
    goto LABEL_6;
  }
LABEL_4:
  swift_getObjectType();
  swift_unknownObjectRetain();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  uint64_t v12 = v11;
  swift_unknownObjectRelease();
LABEL_7:
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = &unk_100974F98;
  *(void *)(v13 + 24) = v7;
  if (v12 | v10)
  {
    v0[2] = 0;
    v0[3] = 0;
    v0[4] = v10;
    v0[5] = v12;
  }
  swift_task_create();
  swift_release();
LABEL_10:
  uint64_t v14 = v0[25];
  return _swift_task_switch(sub_1004B44A0, v14, 0);
}

uint64_t sub_1004B44A0()
{
  uint64_t v1 = v0[69];
  uint64_t v2 = v0[40];
  uint64_t v3 = v0[34];
  uint64_t v4 = v0[30];
  uint64_t v5 = v0[31];
  sub_1004B6140(v2);
  sub_1004BAB28(v1);
  sub_1004BAB28(v1);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  sub_10000A7E8(v2, &qword_10096D8B8);
  uint64_t v6 = v0[66];
  uint64_t v7 = v0[25];
  int v8 = (void *)swift_task_alloc();
  v0[68] = v8;
  *int v8 = v0;
  v8[1] = sub_1004B3490;
  uint64_t v9 = v0[41];
  return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 18, v7, v6, v9, v0 + 15);
}

uint64_t sub_1004B45C8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 576) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 200);
  if (v0) {
    uint64_t v4 = sub_1004B4BF4;
  }
  else {
    uint64_t v4 = sub_1004B46F4;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1004B46F4()
{
  uint64_t v1 = v0[56];
  uint64_t v2 = v0[54];
  uint64_t v19 = v0[55];
  uint64_t v4 = v0[51];
  uint64_t v3 = v0[52];
  uint64_t v5 = (int *)v0[27];
  uint64_t v6 = v0[26];
  uint64_t v18 = v0[25];
  uint64_t v7 = v0[23];
  uint64_t v17 = v0[24];
  uint64_t v9 = v0[21];
  uint64_t v8 = v0[22];
  sub_10000A7E8(v0[47], &qword_100970DF0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v10 = *(void *)((char *)v5 + *(int *)(v6 + 48));
  int v32 = *v5;
  char v31 = *((unsigned char *)v5 + 4);
  uint64_t v11 = (int *)sub_10000A844(&qword_100970DA8);
  uint64_t v30 = *(void *)((char *)v5 + v11[16]);
  uint64_t v12 = (uint64_t)v5 + v11[20];
  uint64_t v13 = (long long *)((char *)v5 + v11[24]);
  long long v29 = *v13;
  uint64_t v27 = *((void *)v13 + 3);
  uint64_t v28 = *((void *)v13 + 2);
  char v26 = *((unsigned char *)v13 + 32);
  long long v24 = *(long long *)((char *)v13 + 56);
  long long v25 = *(long long *)((char *)v13 + 40);
  long long v23 = *(long long *)((char *)v13 + 72);
  uint64_t v21 = *((void *)v13 + 12);
  uint64_t v22 = *((void *)v13 + 11);
  uint64_t v14 = (uint64_t)v5 + v11[32];
  uint64_t v20 = *(void *)((char *)v5 + v11[28]);
  sub_1004BB224((uint64_t)v5 + v11[12], v8, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_1004BB224(v12, v7, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_10024D388(v14, v17, &qword_100970BC8);
  sub_1004B5F48(v19, v1, v18);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(unsigned char *)(v9 + 4) = v31;
  *(_DWORD *)uint64_t v9 = v32;
  *(void *)(v9 + 8) = v30;
  *(_OWORD *)(v9 + 16) = v29;
  *(void *)(v9 + 32) = v28;
  *(void *)(v9 + 40) = v27;
  *(unsigned char *)(v9 + 48) = v26;
  *(_OWORD *)(v9 + 56) = v25;
  *(_OWORD *)(v9 + 72) = v24;
  *(_OWORD *)(v9 + 88) = v23;
  *(void *)(v9 + 104) = v22;
  *(void *)(v9 + 112) = v21;
  *(void *)(v9 + 120) = v20;
  *(void *)(v9 + 128) = v10;
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1004B4A1C()
{
  uint64_t v2 = v0[55];
  uint64_t v1 = v0[56];
  uint64_t v3 = v0[54];
  uint64_t v4 = v0[51];
  uint64_t v5 = v0[52];
  uint64_t v6 = v0[47];
  uint64_t v7 = v0[25];
  (*(void (**)(void, void))(v0[42] + 8))(v0[43], v0[41]);
  sub_10000A7E8(v6, &qword_100970DF0);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  sub_1004B5F48(v2, v1, v7);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1004B4BF4()
{
  uint64_t v1 = v0[55];
  uint64_t v2 = v0[56];
  uint64_t v3 = v0[54];
  uint64_t v4 = v0[51];
  uint64_t v5 = v0[52];
  uint64_t v6 = v0[25];
  sub_10000A7E8(v0[47], &qword_100970DF0);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  sub_1004B5F48(v1, v2, v6);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1004B4DB0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100975F30);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100975F30);
  if (qword_100969C68 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994588);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1004B4E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return _swift_task_switch(sub_1004B4E9C, 0, 0);
}

uint64_t sub_1004B4E9C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 64) = Strong;
  if (Strong)
  {
    return _swift_task_switch(sub_1004B4F64, Strong, 0);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_1004B4F64()
{
  sub_1004B4FD4(*(void *)(v0 + 56));
  swift_release();
  return _swift_task_switch(sub_1002D33E4, 0, 0);
}

uint64_t sub_1004B4FD4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  sub_1004BB0C0(a1, (uint64_t)&v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for SDAirDropDiscoveredEndpoint);
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v9;
  sub_1004BB224((uint64_t)&v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t)v11 + v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v12 = sub_10028CFA8((uint64_t)v7, (uint64_t)&unk_100976138, (uint64_t)v11);
  swift_beginAccess();
  swift_retain();
  sub_10059772C(&v15, v12);
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_1004B520C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v50 = a5;
  uint64_t v51 = a6;
  uint64_t v48 = a3;
  uint64_t v49 = a4;
  uint64_t v47 = a2;
  uint64_t v7 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  int v44 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v12;
  __chkstk_darwin(v11);
  uint64_t v43 = (uint64_t)&v40 - v13;
  uint64_t v14 = *a1;
  uint64_t v15 = *(void *)(*a1 + 56);
  uint64_t v41 = *a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  int64_t v42 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v52 = v14;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v21 = (uint64_t)v44;
  while (1)
  {
    if (v18)
    {
      unint64_t v22 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      int64_t v53 = v20;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v42) {
      return swift_release();
    }
    unint64_t v25 = *(void *)(v41 + 8 * v24);
    int64_t v26 = v20 + 1;
    if (!v25)
    {
      int64_t v26 = v20 + 2;
      if (v20 + 2 >= v42) {
        return swift_release();
      }
      unint64_t v25 = *(void *)(v41 + 8 * v26);
      if (!v25)
      {
        int64_t v26 = v20 + 3;
        if (v20 + 3 >= v42) {
          return swift_release();
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v18 = (v25 - 1) & v25;
    int64_t v53 = v26;
    unint64_t v23 = __clz(__rbit64(v25)) + (v26 << 6);
LABEL_22:
    uint64_t v28 = v46;
    uint64_t v29 = v43;
    sub_1004BB0C0(*(void *)(v52 + 48) + *(void *)(v46 + 72) * v23, v43, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v30 = type metadata accessor for TaskPriority();
    uint64_t v31 = *(void *)(v30 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v9, 1, 1, v30);
    sub_1004BB224(v29, v21, type metadata accessor for SDAirDropDiscoveredEndpoint);
    unint64_t v32 = (*(unsigned __int8 *)(v28 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    uint64_t v33 = (void *)swift_allocObject();
    v33[2] = 0;
    uint64_t v34 = v47;
    v33[3] = 0;
    v33[4] = v34;
    sub_1004BB224(v21, (uint64_t)v33 + v32, type metadata accessor for SDAirDropDiscoveredEndpoint);
    int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v9, 1, v30);
    swift_retain();
    if (v35 == 1)
    {
      sub_10000A7E8((uint64_t)v9, &qword_10096C920);
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v30);
    }
    int64_t v20 = v53;
    if (v33[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v36 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v38 = v37;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v36 = 0;
      uint64_t v38 = 0;
    }
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v50;
    *(void *)(v39 + 24) = v33;
    sub_10000A844(&qword_10096C4C0);
    if (v38 | v36)
    {
      uint64_t v54 = 0;
      uint64_t v55 = 0;
      uint64_t v56 = v36;
      uint64_t v57 = v38;
    }
    swift_task_create();
    uint64_t result = swift_release();
  }
  uint64_t v27 = v20 + 4;
  if (v20 + 4 >= v42) {
    return swift_release();
  }
  unint64_t v25 = *(void *)(v41 + 8 * v27);
  if (v25)
  {
    int64_t v26 = v20 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v26 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v26 >= v42) {
      return swift_release();
    }
    unint64_t v25 = *(void *)(v41 + 8 * v26);
    ++v27;
    if (v25) {
      goto LABEL_21;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1004B5694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return _swift_task_switch(sub_1004B56B8, 0, 0);
}

uint64_t sub_1004B56B8()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 64) = Strong;
  if (Strong)
  {
    return _swift_task_switch(sub_1004B5780, Strong, 0);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_1004B5780()
{
  sub_1004B57F0(*(void *)(v0 + 56));
  swift_release();
  return _swift_task_switch(sub_1002D1768, 0, 0);
}

void sub_1004B57F0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v53 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v53 + 64);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v54 = (uint64_t)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v15);
  unint64_t v18 = (char *)&v48 - v17;
  __chkstk_darwin(v16);
  int64_t v20 = (id *)((char *)&v48 - v19);
  sub_1004BB0C0(a1, (uint64_t)&v48 - v19, type metadata accessor for SDAirDropDiscoveredEndpoint);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1004BB224((uint64_t)v20, (uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      int64_t v26 = (uint64_t *)&v9[*(int *)(v7 + 28)];
      uint64_t v23 = v26[1];
      uint64_t v52 = *v26;
      swift_bridgeObjectRetain();
      sub_1004BB28C((uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      if (v23) {
        goto LABEL_8;
      }
      break;
    case 2u:
      int64_t v24 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint;
      uint64_t v25 = (uint64_t)v20;
      goto LABEL_19;
    case 3u:

      break;
    default:
      sub_1004BB224((uint64_t)v20, (uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      if (!NWEndpoint.nw.getter())
      {
        __break(1u);
        JUMPOUT(0x1004B5F38);
      }
      uint64_t device_id = nw_endpoint_get_device_id();
      swift_unknownObjectRelease();
      if (device_id)
      {
        uint64_t v52 = String.init(cString:)();
        uint64_t v23 = v22;
        sub_1004BB28C((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
LABEL_8:
        if (qword_100969E80 != -1) {
          swift_once();
        }
        uint64_t v27 = type metadata accessor for Logger();
        uint64_t v28 = sub_10000B47C(v27, (uint64_t)qword_100975F30);
        sub_1004BB0C0(a1, (uint64_t)v18, type metadata accessor for SDAirDropDiscoveredEndpoint);
        uint64_t v51 = v28;
        uint64_t v29 = Logger.logObject.getter();
        os_log_type_t v30 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v29, v30))
        {
          uint64_t v31 = swift_slowAlloc();
          uint64_t v50 = v2;
          unint64_t v32 = (uint8_t *)v31;
          v56[0] = swift_slowAlloc();
          uint64_t v48 = v23;
          uint64_t v49 = a1;
          *(_DWORD *)unint64_t v32 = 136315138;
          uint64_t v33 = sub_100315DA0();
          v55[1] = sub_100254634(v33, v34, v56);
          uint64_t v23 = v48;
          a1 = v49;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_1004BB28C((uint64_t)v18, type metadata accessor for SDAirDropDiscoveredEndpoint);
          _os_log_impl((void *)&_mh_execute_header, v29, v30, "Checking if backup Ask needed for %s", v32, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v2 = v50;
          swift_slowDealloc();
        }
        else
        {
          sub_1004BB28C((uint64_t)v18, type metadata accessor for SDAirDropDiscoveredEndpoint);
        }

        int v35 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_needsFallbackDeviceIDs);
        swift_beginAccess();
        uint64_t v36 = *v35;
        swift_bridgeObjectRetain();
        uint64_t v37 = v52;
        char v38 = sub_10057BE20(v52, v23, v36);
        swift_bridgeObjectRelease();
        if (v38)
        {
          swift_beginAccess();
          sub_1005A1914(v37, v23);
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v39 = type metadata accessor for TaskPriority();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v6, 1, 1, v39);
          uint64_t v40 = swift_allocObject();
          swift_weakInit();
          uint64_t v41 = v54;
          sub_1004BB0C0(a1, v54, type metadata accessor for SDAirDropDiscoveredEndpoint);
          unint64_t v42 = (*(unsigned __int8 *)(v53 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
          uint64_t v43 = (void *)swift_allocObject();
          v43[2] = 0;
          v43[3] = 0;
          v43[4] = v40;
          sub_1004BB224(v41, (uint64_t)v43 + v42, type metadata accessor for SDAirDropDiscoveredEndpoint);
          uint64_t v44 = sub_10028CFA8((uint64_t)v6, (uint64_t)&unk_100976110, (uint64_t)v43);
          swift_beginAccess();
          swift_retain();
          sub_10059772C(v55, v44);
          swift_endAccess();
          swift_release();
          swift_release();
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v45 = Logger.logObject.getter();
          os_log_type_t v46 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v45, v46))
          {
            uint64_t v47 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v47 = 0;
            _os_log_impl((void *)&_mh_execute_header, v45, v46, "Fallback not needed", v47, 2u);
            swift_slowDealloc();
          }
        }
      }
      else
      {
        int64_t v24 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
        uint64_t v25 = (uint64_t)v12;
LABEL_19:
        sub_1004BB28C(v25, v24);
      }
      break;
  }
}

void sub_1004B5F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  AnyCancellable.cancel()();
  AnyCancellable.cancel()();
  uint64_t v4 = a3 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askTasks;
  swift_beginAccess();
  uint64_t v5 = *(void *)v4 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(*(void *)v4 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  uint64_t v8 = v7 & *(void *)(*(void *)v4 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v10 = 0;
  while (1)
  {
    if (v8)
    {
      v8 &= v8 - 1;
      goto LABEL_5;
    }
    int64_t v11 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v9) {
      goto LABEL_25;
    }
    uint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v10;
    if (!v12)
    {
      int64_t v10 = v11 + 1;
      if (v11 + 1 >= v9) {
        goto LABEL_25;
      }
      uint64_t v12 = *(void *)(v5 + 8 * v10);
      if (!v12)
      {
        int64_t v10 = v11 + 2;
        if (v11 + 2 >= v9) {
          goto LABEL_25;
        }
        uint64_t v12 = *(void *)(v5 + 8 * v10);
        if (!v12)
        {
          int64_t v10 = v11 + 3;
          if (v11 + 3 >= v9) {
            goto LABEL_25;
          }
          uint64_t v12 = *(void *)(v5 + 8 * v10);
          if (!v12)
          {
            int64_t v10 = v11 + 4;
            if (v11 + 4 >= v9) {
              goto LABEL_25;
            }
            uint64_t v12 = *(void *)(v5 + 8 * v10);
            if (!v12) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    uint64_t v8 = (v12 - 1) & v12;
LABEL_5:
    Task.cancel()();
  }
  int64_t v13 = v11 + 5;
  if (v13 >= v9)
  {
LABEL_25:
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v4 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v10 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v10 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v10 >= v9) {
      goto LABEL_25;
    }
    uint64_t v12 = *(void *)(v5 + 8 * v10);
    ++v13;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
}

void sub_1004B6140(uint64_t a1)
{
  uint64_t v2 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v2 - 8);
  uint64_t v64 = (uint64_t)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v62 = *(void *)(v4 - 8);
  uint64_t v63 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v57 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v56 - v7;
  uint64_t v9 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  uint64_t v60 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v60 + 64);
  uint64_t v11 = __chkstk_darwin(v9 - 8);
  uint64_t v61 = (uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v66 = (uint64_t)&v56 - v12;
  uint64_t v13 = sub_10000A844(&qword_10096D8B8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v59 = (uint64_t)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v56 - v21;
  __chkstk_darwin(v20);
  int64_t v24 = (char *)&v56 - v23;
  sub_10024A330(a1, (uint64_t)v15, &qword_10096D8B8);
  uint64_t v58 = v17;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
  {
    sub_1004BB224((uint64_t)v15, (uint64_t)v24, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1004BB0C0((uint64_t)v24, (uint64_t)v22, type metadata accessor for SDAirDropDiscoveredEndpoint);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v56 = v24;
    if (EnumCaseMultiPayload)
    {
      sub_1004BB28C((uint64_t)v22, type metadata accessor for SDAirDropDiscoveredEndpoint);
      if (qword_100969E80 != -1) {
        swift_once();
      }
      uint64_t v30 = type metadata accessor for Logger();
      sub_10000B47C(v30, (uint64_t)qword_100975F30);
      uint64_t v31 = Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v33 = 0;
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "We only handle Application Service endpoints for fallbacks", v33, 2u);
        swift_slowDealloc();
      }
    }
    else
    {
      uint64_t v34 = v66;
      sub_1004BB224((uint64_t)v22, v66, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      int v35 = (uint64_t *)(v65 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_failedResolveEndpointIDs);
      swift_beginAccess();
      uint64_t v36 = *v35;
      swift_bridgeObjectRetain();
      uint64_t v37 = v34;
      sub_10031430C();
      LOBYTE(v34) = sub_10057BC0C((uint64_t)v8, v36);
      swift_bridgeObjectRelease();
      uint64_t v38 = v63;
      uint64_t v39 = *(void (**)(char *, uint64_t))(v62 + 8);
      v39(v8, v63);
      if ((v34 & 1) == 0)
      {
        uint64_t v45 = v57;
        sub_10031430C();
        swift_beginAccess();
        sub_100596028((uint64_t)v8, v45);
        swift_endAccess();
        v39(v8, v38);
        uint64_t v46 = type metadata accessor for TaskPriority();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v64, 1, 1, v46);
        uint64_t v47 = swift_allocObject();
        swift_weakInit();
        uint64_t v48 = v37;
        uint64_t v49 = (uint64_t)v56;
        uint64_t v50 = v61;
        sub_1004BB0C0(v48, v61, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        uint64_t v51 = v59;
        sub_1004BB0C0(v49, v59, type metadata accessor for SDAirDropDiscoveredEndpoint);
        unint64_t v52 = (*(unsigned __int8 *)(v60 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
        unint64_t v53 = (v10 + *(unsigned __int8 *)(v58 + 80) + v52) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
        uint64_t v54 = (void *)swift_allocObject();
        v54[2] = 0;
        v54[3] = 0;
        v54[4] = v47;
        sub_1004BB224(v50, (uint64_t)v54 + v52, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        sub_1004BB224(v51, (uint64_t)v54 + v53, type metadata accessor for SDAirDropDiscoveredEndpoint);
        uint64_t v55 = sub_10028CFA8(v64, (uint64_t)&unk_1009760D8, (uint64_t)v54);
        swift_beginAccess();
        swift_retain();
        sub_10059772C(&v67, v55);
        swift_endAccess();
        swift_release();
        swift_release();
        sub_1004BB28C(v66, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        uint64_t v44 = v49;
        goto LABEL_20;
      }
      if (qword_100969E80 != -1) {
        swift_once();
      }
      uint64_t v40 = type metadata accessor for Logger();
      sub_10000B47C(v40, (uint64_t)qword_100975F30);
      uint64_t v41 = Logger.logObject.getter();
      os_log_type_t v42 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v43 = 0;
        _os_log_impl((void *)&_mh_execute_header, v41, v42, "We only attempt a fallback once per endpoint, for each send", v43, 2u);
        swift_slowDealloc();
      }

      sub_1004BB28C(v37, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    }
    uint64_t v44 = (uint64_t)v56;
LABEL_20:
    sub_1004BB28C(v44, type metadata accessor for SDAirDropDiscoveredEndpoint);
    return;
  }
  sub_10000A7E8((uint64_t)v15, &qword_10096D8B8);
  if (qword_100969E80 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  sub_10000B47C(v25, (uint64_t)qword_100975F30);
  int64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "No endpoint provided from failure, skipping fallback", v28, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1004B69F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  v5[10] = a5;
  uint64_t v6 = sub_10000A844(&qword_100970E10);
  v5[11] = v6;
  v5[12] = *(void *)(v6 - 8);
  v5[13] = swift_task_alloc();
  return _swift_task_switch(sub_1004B6AB4, 0, 0);
}

uint64_t sub_1004B6AB4()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 112) = Strong;
  if (Strong)
  {
    return _swift_task_switch(sub_1004B6B78, Strong, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_1004B6B78()
{
  if (sub_1004B6F80(v0[10]))
  {
    uint64_t v1 = (void *)swift_task_alloc();
    v0[15] = (uint64_t)v1;
    void *v1 = v0;
    v1[1] = sub_1004B6CD8;
    uint64_t v2 = v0[10];
    return sub_1004B769C(v2);
  }
  else
  {
    uint64_t v4 = v0[11];
    uint64_t v5 = v0[12];
    uint64_t v6 = v0[14] + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askContinuation;
    swift_beginAccess();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4))
    {
      uint64_t v7 = sub_1004BB960;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[12] + 16))(v0[13], v6, v0[11]);
      uint64_t v7 = sub_1004B6E3C;
    }
    return _swift_task_switch(v7, 0, 0);
  }
}

uint64_t sub_1004B6CD8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1004B6DD4, 0, 0);
}

uint64_t sub_1004B6DD4()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1004B6E3C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v4 = type metadata accessor for SFAirDropSend.Failure();
  sub_1004BAAE0(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
  uint64_t v5 = swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 104))(v6, enum case for SFAirDropSend.Failure.badRequest(_:), v4);
  v0[8] = v5;
  SFProgressContinuation.yield(_:)();
  swift_release();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1004B6F80(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v47 = (uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v46 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v46 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v46 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v46 - v16;
  uint64_t v18 = (uint64_t *)(*sub_10026BB6C((void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_runner), *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_runner + 24))+ OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_sendConnections);
  swift_beginAccess();
  uint64_t v19 = *v18;
  uint64_t v49 = a1;
  swift_bridgeObjectRetain();
  sub_100413B00((uint64_t (*)(id *))sub_1004BB938, (uint64_t)v48, v19);
  char v21 = v20;
  swift_bridgeObjectRelease();
  sub_100316C8C();
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  sub_1004BB0C0(a1, (uint64_t)v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
  if (!v23)
  {
    sub_1004BB28C((uint64_t)v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1004BB0C0(a1, (uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint);
LABEL_10:
    sub_1004BB28C((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if ((v21 & 1) == 0) {
      return 1;
    }
    goto LABEL_11;
  }
  uint64_t v46 = v2;
  int64_t v24 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_needsFallbackDeviceIDs);
  swift_beginAccess();
  uint64_t v25 = *v24;
  swift_bridgeObjectRetain();
  uint64_t result = sub_100316C8C();
  if (!v27)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    return result;
  }
  char v28 = sub_10057BE20(result, v27, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1004BB28C((uint64_t)v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1004BB0C0(a1, (uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint);
  if ((v28 & 1) == 0) {
    goto LABEL_10;
  }
  sub_1004BB0C0((uint64_t)v15, (uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v29 = (uint64_t)v9;
    sub_1004BB28C((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1004BB28C((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (qword_100969E80 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_10000B47C(v30, (uint64_t)qword_100975F30);
    sub_1004BB0C0(a1, (uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      v50[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 136315138;
      uint64_t v34 = sub_100315DA0();
      uint64_t v51 = sub_100254634(v34, v35, v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1004BB28C(v29, type metadata accessor for SDAirDropDiscoveredEndpoint);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Running fallback Ask for endpoint %s", v33, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1004BB28C((uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
    }

    uint64_t result = sub_100316C8C();
    if (v43)
    {
      uint64_t v44 = result;
      uint64_t v45 = v43;
      swift_beginAccess();
      sub_1005A1914(v44, v45);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 1;
    }
    goto LABEL_24;
  }
  sub_1004BB28C((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1004BB28C((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint);
  if ((v21 & 1) == 0) {
    return 1;
  }
LABEL_11:
  if (qword_100969E80 != -1) {
    swift_once();
  }
  uint64_t v36 = type metadata accessor for Logger();
  sub_10000B47C(v36, (uint64_t)qword_100975F30);
  uint64_t v37 = v47;
  sub_1004BB0C0(a1, v47, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v38 = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    v50[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 136315138;
    uint64_t v41 = sub_100315DA0();
    uint64_t v51 = sub_100254634(v41, v42, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1004BB28C(v37, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "Endpoint already exists in runner endpoints, ignoring %s", v40, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1004BB28C(v37, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }

  return 0;
}

uint64_t sub_1004B769C(uint64_t a1)
{
  v2[41] = a1;
  v2[42] = v1;
  uint64_t v3 = sub_10000A844(&qword_100970E10);
  v2[43] = v3;
  v2[44] = *(void *)(v3 - 8);
  v2[45] = swift_task_alloc();
  type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v2[46] = swift_task_alloc();
  v2[47] = sub_10000A844(&qword_100970DA8);
  v2[48] = swift_task_alloc();
  v2[49] = swift_task_alloc();
  return _swift_task_switch(sub_1004B77D0, v1, 0);
}

uint64_t sub_1004B77D0()
{
  uint64_t v1 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 328);
  uint64_t v2 = *(void *)(v0 + 336);
  sub_100278C8C(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_runner, v0 + 256);
  sub_10026BB6C((void *)(v0 + 256), *(void *)(v0 + 280));
  uint64_t v4 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_sendRequest;
  char v5 = SFAirDropSend.Request.supportsPipelining.getter();
  sub_1004BB0C0(v3, v1, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v6 = *(void *)(v0 + 368);
  if (v5)
  {
    char v7 = sub_1003171FC();
    sub_1004BB28C(v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (v7)
    {
      type metadata accessor for SFAirDropUserDefaults();
      uint64_t v8 = (void *)static SFAirDropUserDefaults.shared.getter();
      char v9 = SFAirDropUserDefaults.helloFeatureFlagsEnabled.getter();

      if (v9)
      {
        uint64_t v10 = *(void *)(v0 + 336);
        if (*(unsigned char *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_pipelinedUploadAvailable) == 1)
        {
          *(unsigned char *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_pipelinedUploadAvailable) = 0;
          char v11 = 1;
          goto LABEL_8;
        }
      }
    }
  }
  else
  {
    sub_1004BB28C(*(void *)(v0 + 368), type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  char v11 = 0;
LABEL_8:
  uint64_t v12 = *(void *)(v0 + 392);
  uint64_t v13 = *(int **)(v0 + 376);
  uint64_t v14 = v13[12];
  *(_DWORD *)(v0 + 568) = v14;
  uint64_t v15 = v12 + v14;
  uint64_t v16 = v13[20];
  *(_DWORD *)(v0 + 572) = v16;
  uint64_t v17 = v12 + v16;
  uint64_t v18 = v13[32];
  *(_DWORD *)(v0 + 576) = v18;
  uint64_t v19 = v12 + v18;
  char v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 400) = v20;
  *char v20 = v0;
  v20[1] = sub_1004B79C8;
  uint64_t v21 = *(void *)(v0 + 328);
  return sub_1003843C4(v0 + 16, v15, v17, v19, v21, v11, v4);
}

uint64_t sub_1004B79C8()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v3[51] = v0;
  int v4 = *((_DWORD *)v3 + 4);
  *((unsigned char *)v3 + 420) = *((unsigned char *)v3 + 20);
  *((_DWORD *)v3 + 104) = v4;
  v3[53] = v2[3];
  v3[54] = v2[4];
  *(_OWORD *)(v3 + 55) = *(_OWORD *)(v3 + 5);
  v3[57] = v2[7];
  *((unsigned char *)v3 + 604) = *((unsigned char *)v3 + 64);
  long long v5 = *(_OWORD *)(v3 + 11);
  *((_OWORD *)v3 + 29) = *(_OWORD *)(v3 + 9);
  *((_OWORD *)v3 + 30) = v5;
  long long v6 = *(_OWORD *)(v3 + 15);
  *((_OWORD *)v3 + 31) = *(_OWORD *)(v3 + 13);
  *((_OWORD *)v3 + 32) = v6;
  v3[66] = v2[17];
  v3[67] = v2[18];
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v7 = v3[42];
    uint64_t v8 = sub_1004B80C4;
  }
  else
  {
    char v9 = (_DWORD *)v3[47];
    uint64_t v7 = v3[42];
    *((_DWORD *)v3 + 145) = v9[16];
    *((_DWORD *)v3 + 146) = v9[24];
    *((_DWORD *)v3 + 147) = v9[28];
    uint64_t v8 = sub_1004B7BB8;
  }
  return _swift_task_switch(v8, v7, 0);
}

uint64_t sub_1004B7BB8()
{
  uint64_t v1 = *(int *)(v0 + 588);
  uint64_t v44 = v1;
  uint64_t v2 = *(int *)(v0 + 580);
  uint64_t v3 = *(void *)(v0 + 528);
  char v4 = *(unsigned char *)(v0 + 604);
  uint64_t v6 = *(void *)(v0 + 448);
  uint64_t v5 = *(void *)(v0 + 456);
  long long v7 = *(_OWORD *)(v0 + 432);
  uint64_t v8 = *(void *)(v0 + 424);
  unsigned int v9 = *(_DWORD *)(v0 + 416);
  uint64_t v11 = *(void *)(v0 + 384);
  uint64_t v10 = *(unsigned int **)(v0 + 392);
  uint64_t v12 = *(int **)(v0 + 376);
  uint64_t v13 = (char *)v10 + *(int *)(v0 + 584);
  uint64_t v46 = (uint64_t)v10 + *(int *)(v0 + 576);
  uint64_t v43 = (uint64_t)v10 + *(int *)(v0 + 572);
  uint64_t v14 = (char *)v10 + *(int *)(v0 + 568);
  long long v15 = *(_OWORD *)(v0 + 464);
  long long v16 = *(_OWORD *)(v0 + 480);
  long long v17 = *(_OWORD *)(v0 + 496);
  long long v18 = *(_OWORD *)(v0 + 512);
  *((unsigned char *)v10 + 4) = *(unsigned char *)(v0 + 420);
  *uint64_t v10 = v9;
  *(void *)((char *)v10 + v2) = v8;
  *(_OWORD *)uint64_t v13 = v7;
  *((void *)v13 + 2) = v6;
  *((void *)v13 + 3) = v5;
  v13[32] = v4;
  *(_OWORD *)(v13 + 40) = v15;
  *(_OWORD *)(v13 + 56) = v16;
  *(_OWORD *)(v13 + 72) = v17;
  *(_OWORD *)(v13 + 88) = v18;
  *(void *)((char *)v10 + v1) = v3;
  sub_10024D338(v0 + 256);
  uint64_t v19 = v12[12];
  *(_DWORD *)(v0 + 592) = v19;
  uint64_t v20 = v11 + v19;
  uint64_t v21 = v12[16];
  uint64_t v22 = v12[20];
  *(_DWORD *)(v0 + 596) = v22;
  uint64_t v23 = v11 + v22;
  int64_t v24 = (void *)(v11 + v12[24]);
  uint64_t v42 = v12[28];
  uint64_t v25 = v12[32];
  *(_DWORD *)(v0 + 600) = v25;
  uint64_t v26 = v11 + v25;
  uint64_t v27 = *((unsigned __int8 *)v10 + 4);
  uint64_t v28 = *v10;
  uint64_t v45 = v28 | (v27 << 32);
  *(unsigned char *)(v11 + 4) = v27;
  *(_DWORD *)uint64_t v11 = v28;
  uint64_t v29 = (uint64_t)v14;
  uint64_t v30 = v20;
  sub_1004BB0C0(v29, v20, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  uint64_t v31 = *(void **)((char *)v10 + v2);
  *(void *)(v0 + 544) = v31;
  *(void *)(v11 + v21) = v31;
  sub_1004BB0C0(v43, v23, type metadata accessor for SDAirDropDiscoveredEndpoint);
  long long v33 = *((_OWORD *)v13 + 1);
  long long v32 = *((_OWORD *)v13 + 2);
  *(_OWORD *)(v0 + 152) = *(_OWORD *)v13;
  *(_OWORD *)(v0 + 168) = v33;
  *(_OWORD *)(v0 + 184) = v32;
  long long v35 = *((_OWORD *)v13 + 4);
  long long v34 = *((_OWORD *)v13 + 5);
  uint64_t v36 = *((void *)v13 + 12);
  *(_OWORD *)(v0 + 200) = *((_OWORD *)v13 + 3);
  *(void *)(v0 + 248) = v36;
  *(_OWORD *)(v0 + 232) = v34;
  *(_OWORD *)(v0 + 216) = v35;
  memmove(v24, v13, 0x68uLL);
  uint64_t v37 = *(void *)((char *)v10 + v44);
  *(void *)(v0 + 552) = v37;
  *(void *)(v11 + v42) = v37;
  sub_10024A330(v46, v26, &qword_100970BC8);
  id v38 = v31;
  sub_10039522C(v0 + 152);
  swift_bridgeObjectRetain();
  os_log_type_t v39 = (void *)swift_task_alloc();
  *(void *)(v0 + 560) = v39;
  *os_log_type_t v39 = v0;
  v39[1] = sub_1004B7E48;
  uint64_t v40 = *(void *)(v0 + 536);
  return sub_1004B86E4(v45, v30, v38, v23, v0 + 152, v37, v26, v40);
}

uint64_t sub_1004B7E48()
{
  uint64_t v1 = *(void *)v0 + 152;
  uint64_t v2 = *(void **)(*(void *)v0 + 544);
  uint64_t v3 = *(void *)(*(void *)v0 + 384);
  uint64_t v4 = *(void *)(*(void *)v0 + 336);
  uint64_t v5 = v3 + *(int *)(*(void *)v0 + 600);
  uint64_t v6 = v3 + *(int *)(*(void *)v0 + 596);
  uint64_t v7 = v3 + *(int *)(*(void *)v0 + 592);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_1002FB0E0(v1);

  sub_10000A7E8(v5, &qword_100970BC8);
  sub_1004BB28C(v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1004BB28C(v7, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  return _swift_task_switch(sub_1004B8024, v4, 0);
}

uint64_t sub_1004B8024()
{
  uint64_t v1 = *(void *)(v0 + 392);

  sub_10000A7E8(v1, &qword_100970DA8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1004B80C4()
{
  uint64_t v1 = v0[43];
  uint64_t v2 = v0[44];
  uint64_t v3 = v0[42];
  sub_10024D338((uint64_t)(v0 + 32));
  uint64_t v4 = v3 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askContinuation;
  swift_beginAccess();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v1))
  {
    swift_errorRelease();
  }
  else
  {
    uint64_t v5 = v0[51];
    uint64_t v7 = v0[44];
    uint64_t v6 = v0[45];
    uint64_t v8 = v0[43];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v4, v8);
    v0[40] = v5;
    SFProgressContinuation.yield(_:)();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1004B8214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v5[8] = swift_task_alloc();
  return _swift_task_switch(sub_1004B82A4, 0, 0);
}

uint64_t sub_1004B82A4()
{
  long long v17 = v0;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[9] = Strong;
  if (Strong)
  {
    if (qword_100969E80 != -1) {
      swift_once();
    }
    uint64_t v3 = v0[7];
    uint64_t v2 = v0[8];
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_100975F30);
    sub_1004BB0C0(v3, v2, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = v0[8];
    if (v7)
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      uint64_t v10 = sub_100315DA0();
      v0[5] = sub_100254634(v10, v11, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1004BB28C(v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Sending backup Ask to new endpoint: %s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1004BB28C(v0[8], type metadata accessor for SDAirDropDiscoveredEndpoint);
    }

    uint64_t v14 = (void *)swift_task_alloc();
    v0[10] = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1004B8580;
    uint64_t v15 = v0[7];
    return sub_1004B769C(v15);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_1004B8580()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1004B867C, 0, 0);
}

uint64_t sub_1004B867C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1004B86E4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 96) = a8;
  *(void *)(v9 + 104) = v8;
  *(void *)(v9 + 80) = a5;
  *(void *)(v9 + 88) = a6;
  *(void *)(v9 + 64) = a1;
  *(void *)(v9 + 72) = a3;
  sub_10000A844(&qword_100970E08);
  *(void *)(v9 + 112) = swift_task_alloc();
  *(void *)(v9 + 120) = sub_10000A844(&qword_100970E20);
  *(void *)(v9 + 128) = swift_task_alloc();
  uint64_t v14 = sub_10000A844(&qword_100970E10);
  *(void *)(v9 + 136) = v14;
  *(void *)(v9 + 144) = *(void *)(v14 - 8);
  *(void *)(v9 + 152) = swift_task_alloc();
  uint64_t v15 = (int *)sub_10000A844(&qword_100970DA8);
  *(void *)(v9 + 160) = v15;
  *(void *)(v9 + 168) = swift_task_alloc();
  uint64_t v16 = swift_task_alloc();
  *(void *)(v9 + 176) = v16;
  uint64_t v17 = v15[12];
  *(_DWORD *)(v9 + 184) = v17;
  uint64_t v18 = v16 + v17;
  uint64_t v19 = v15[20];
  *(_DWORD *)(v9 + 188) = v19;
  uint64_t v20 = v16 + v19;
  uint64_t v21 = v15[32];
  *(_DWORD *)(v9 + 192) = v21;
  uint64_t v22 = v16 + v21;
  *(unsigned char *)(v16 + 4) = BYTE4(a1);
  *(_DWORD *)uint64_t v16 = a1;
  sub_1004BB0C0(a2, v18, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  *(void *)(v16 + v15[16]) = a3;
  sub_1004BB0C0(a4, v20, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v23 = v16 + v15[24];
  uint64_t v24 = *(void *)(a5 + 96);
  long long v26 = *(_OWORD *)(a5 + 64);
  long long v25 = *(_OWORD *)(a5 + 80);
  *(_OWORD *)(v23 + 48) = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v23 + 64) = v26;
  *(_OWORD *)(v23 + 80) = v25;
  *(void *)(v23 + 96) = v24;
  long long v28 = *(_OWORD *)(a5 + 16);
  long long v27 = *(_OWORD *)(a5 + 32);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)a5;
  *(_OWORD *)(v23 + 16) = v28;
  *(_OWORD *)(v23 + 32) = v27;
  *(void *)(v16 + v15[28]) = a6;
  sub_10024A330(a7, v22, &qword_100970BC8);
  id v29 = a3;
  sub_10039522C(a5);
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_1004B8974, v8, 0);
}

uint64_t sub_1004B8974()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 104) + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askContinuation;
  swift_beginAccess();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1))
  {
    sub_10000A7E8(*(void *)(v0 + 176), &qword_100970DA8);
    swift_endAccess();
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 168);
    uint64_t v47 = *(void *)(v0 + 176);
    uint64_t v5 = *(int **)(v0 + 160);
    uint64_t v45 = *(void *)(v0 + 152);
    uint64_t v46 = *(void *)(v0 + 144);
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v41 = *(void *)(v0 + 120);
    uint64_t v43 = *(void **)(v0 + 96);
    uint64_t v44 = *(void *)(v0 + 136);
    uint64_t v7 = *(void *)(v0 + 80);
    uint64_t v49 = *(void *)(v0 + 88);
    uint64_t v40 = v47 + *(int *)(v0 + 192);
    uint64_t v36 = v47 + *(int *)(v0 + 188);
    uint64_t v8 = *(void **)(v0 + 72);
    uint64_t v48 = *(void *)(v0 + 64);
    uint64_t v34 = v47 + *(int *)(v0 + 184);
    (*(void (**)(void))(v46 + 16))();
    swift_endAccess();
    uint64_t v33 = v5[16];
    uint64_t v9 = v4 + v5[20];
    uint64_t v38 = v4 + v5[12];
    uint64_t v39 = v9;
    uint64_t v10 = v4 + v5[24];
    uint64_t v35 = v5[28];
    uint64_t v11 = v4 + v5[32];
    uint64_t v37 = v11;
    *(unsigned char *)(v4 + 4) = BYTE4(v48);
    *(_DWORD *)uint64_t v4 = v48;
    sub_1004BB0C0(v34, v38, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
    *(void *)(v4 + v33) = v8;
    sub_1004BB0C0(v36, v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
    long long v13 = *(_OWORD *)(v7 + 16);
    long long v12 = *(_OWORD *)(v7 + 32);
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v7;
    *(_OWORD *)(v10 + 16) = v13;
    *(_OWORD *)(v10 + 32) = v12;
    long long v15 = *(_OWORD *)(v7 + 64);
    long long v14 = *(_OWORD *)(v7 + 80);
    long long v16 = *(_OWORD *)(v7 + 48);
    *(void *)(v10 + 96) = *(void *)(v7 + 96);
    *(_OWORD *)(v10 + 64) = v15;
    *(_OWORD *)(v10 + 80) = v14;
    *(_OWORD *)(v10 + 48) = v16;
    *(void *)(v4 + v35) = v49;
    sub_10024A330(v40, v11, &qword_100970BC8);
    uint64_t v42 = *(int *)(v41 + 48);
    uint64_t v17 = v6 + v5[12];
    uint64_t v18 = v5[16];
    uint64_t v19 = v6 + v5[20];
    uint64_t v20 = v6 + v5[24];
    uint64_t v21 = v5[28];
    uint64_t v22 = v6 + v5[32];
    *(unsigned char *)(v6 + 4) = BYTE4(v48);
    *(_DWORD *)uint64_t v6 = v48;
    sub_1004BB224(v38, v17, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
    *(void *)(v6 + v18) = v8;
    sub_1004BB224(v39, v19, type metadata accessor for SDAirDropDiscoveredEndpoint);
    long long v24 = *(_OWORD *)(v7 + 16);
    long long v23 = *(_OWORD *)(v7 + 32);
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v7;
    *(_OWORD *)(v20 + 16) = v24;
    *(_OWORD *)(v20 + 32) = v23;
    long long v26 = *(_OWORD *)(v7 + 64);
    long long v25 = *(_OWORD *)(v7 + 80);
    long long v27 = *(_OWORD *)(v7 + 48);
    *(void *)(v20 + 96) = *(void *)(v7 + 96);
    *(_OWORD *)(v20 + 64) = v26;
    *(_OWORD *)(v20 + 80) = v25;
    *(_OWORD *)(v20 + 48) = v27;
    *(void *)(v6 + v21) = v49;
    sub_10024D388(v37, v22, &qword_100970BC8);
    *(void *)(v6 + v42) = v43;
    id v28 = v8;
    sub_10039522C(v7);
    swift_bridgeObjectRetain();
    id v29 = v43;
    SFProgressContinuation.finish(with:)();
    sub_10000A7E8(v6, &qword_100970E20);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v44);
    sub_10000A7E8(v47, &qword_100970DA8);
  }
  uint64_t v30 = *(void *)(v0 + 112);
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)(v0 + 144) + 56))(v30, 1, 1, *(void *)(v0 + 136));
  swift_beginAccess();
  sub_1004BABE8(v30, v3);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_1004B8D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  v6[11] = a4;
  uint64_t v7 = sub_10000A844(&qword_100970E10);
  v6[14] = v7;
  v6[15] = *(void *)(v7 - 8);
  v6[16] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for ContinuousClock();
  v6[17] = v8;
  v6[18] = *(void *)(v8 - 8);
  v6[19] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for SFAirDrop.TransferType();
  v6[20] = v9;
  v6[21] = *(void *)(v9 - 8);
  v6[22] = swift_task_alloc();
  v6[23] = swift_task_alloc();
  sub_10000A844(&qword_10096D8B8);
  v6[24] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v6[25] = v10;
  v6[26] = *(void *)(v10 - 8);
  v6[27] = swift_task_alloc();
  v6[28] = swift_task_alloc();
  return _swift_task_switch(sub_1004B8F80, 0, 0);
}

uint64_t sub_1004B8F80()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[29] = Strong;
  if (Strong)
  {
    v0[30] = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_runner;
    return _swift_task_switch(sub_1004B90A8, Strong, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
}

uint64_t sub_1004B90A8()
{
  uint64_t v1 = (void *)(v0[29] + v0[30]);
  uint64_t v2 = v1[3];
  v0[31] = v2;
  sub_10026BB6C(v1, v2);
  uint64_t v3 = *(void *)(v2 - 8);
  v0[32] = v3;
  v0[33] = swift_task_alloc();
  (*(void (**)(void))(v3 + 16))();
  return _swift_task_switch(sub_1004B919C, 0, 0);
}

uint64_t sub_1004B919C()
{
  uint64_t v41 = v0;
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[31];
  uint64_t v3 = v0[26];
  uint64_t v38 = v0[25];
  uint64_t v4 = v0[24];
  uint64_t v5 = v0[12];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0[32] + 8);
  swift_retain();
  v6(v1, v2);
  CurrentValueSubject.value.getter();
  swift_release();
  uint64_t v7 = v0[8];
  *(void *)(swift_task_alloc() + 16) = v5;
  sub_1003D8D24((uint64_t (*)(char *))sub_1004BB0A0, v7, v4);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v38) == 1)
  {
    sub_10000A7E8(v0[24], &qword_10096D8B8);
    uint64_t v8 = NWEndpoint.nw.getter();
    if (!v8)
    {
      __break(1u);
      return _swift_task_switch(v8, v9, v10);
    }
    uint64_t device_id = nw_endpoint_get_device_id();
    swift_unknownObjectRelease();
    if (device_id)
    {
      uint64_t v12 = String.init(cString:)();
      uint64_t v14 = v13;
      v0[34] = v13;
      long long v15 = (void *)swift_task_alloc();
      v0[35] = v15;
      *long long v15 = v0;
      v15[1] = sub_1004B9730;
      uint64_t v9 = v0[29];
      v15[6] = v14;
      v15[7] = v9;
      v15[5] = v12;
      uint64_t v8 = (uint64_t)sub_1004BA0E8;
      uint64_t v10 = 0;
      return _swift_task_switch(v8, v9, v10);
    }
    uint64_t v30 = v0[22];
    uint64_t v29 = v0[23];
    uint64_t v31 = v0[20];
    uint64_t v32 = v0[21];
    SFAirDropSend.Request.type.getter();
    (*(void (**)(uint64_t, void, uint64_t))(v32 + 104))(v30, enum case for SFAirDrop.TransferType.peerPayment(_:), v31);
    char v33 = static SFAirDrop.TransferType.== infix(_:_:)();
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    v34(v30, v31);
    v34(v29, v31);
    if (v33) {
      unint64_t v35 = 0x8155A43676E00000;
    }
    else {
      unint64_t v35 = 0x70801D946C940000;
    }
    if (v33) {
      uint64_t v36 = 6;
    }
    else {
      uint64_t v36 = 2;
    }
    ContinuousClock.init()();
    uint64_t v39 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
    uint64_t v37 = (void *)swift_task_alloc();
    v0[37] = v37;
    *uint64_t v37 = v0;
    v37[1] = sub_1004B9BA4;
    return v39(v35, v36, 0, 0, 1);
  }
  else
  {
    sub_1004BB224(v0[24], v0[28], type metadata accessor for SDAirDropDiscoveredEndpoint);
    swift_task_dealloc();
    if (qword_100969E80 != -1) {
      swift_once();
    }
    uint64_t v16 = v0[27];
    uint64_t v17 = v0[28];
    uint64_t v18 = type metadata accessor for Logger();
    sub_10000B47C(v18, (uint64_t)qword_100975F30);
    sub_1004BB0C0(v17, v16, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    BOOL v21 = os_log_type_enabled(v19, v20);
    uint64_t v22 = v0[27];
    if (v21)
    {
      long long v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *(_DWORD *)long long v23 = 136315138;
      uint64_t v24 = sub_100315DA0();
      v0[10] = sub_100254634(v24, v25, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1004BB28C(v22, type metadata accessor for SDAirDropDiscoveredEndpoint);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Sending backup Ask to existing backup endpoint: %s", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1004BB28C(v0[27], type metadata accessor for SDAirDropDiscoveredEndpoint);
    }

    long long v26 = (void *)swift_task_alloc();
    v0[36] = v26;
    *long long v26 = v0;
    v26[1] = sub_1004B99D4;
    uint64_t v27 = v0[13];
    return sub_1004B769C(v27);
  }
}

uint64_t sub_1004B9730()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1004B9848, 0, 0);
}

uint64_t sub_1004B9848()
{
  uint64_t v2 = v0[22];
  uint64_t v1 = v0[23];
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[21];
  SFAirDropSend.Request.type.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v2, enum case for SFAirDrop.TransferType.peerPayment(_:), v3);
  char v5 = static SFAirDrop.TransferType.== infix(_:_:)();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v6(v2, v3);
  v6(v1, v3);
  if (v5) {
    unint64_t v7 = 0x8155A43676E00000;
  }
  else {
    unint64_t v7 = 0x70801D946C940000;
  }
  if (v5) {
    uint64_t v8 = 6;
  }
  else {
    uint64_t v8 = 2;
  }
  ContinuousClock.init()();
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[37] = v9;
  void *v9 = v0;
  v9[1] = sub_1004B9BA4;
  return v11(v7, v8, 0, 0, 1);
}

uint64_t sub_1004B99D4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1004B9AD0, 0, 0);
}

uint64_t sub_1004B9AD0()
{
  uint64_t v1 = *(void *)(v0 + 224);
  swift_release();
  sub_1004BB28C(v1, type metadata accessor for SDAirDropDiscoveredEndpoint);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1004B9BA4()
{
  uint64_t v3 = (void *)*v1;
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v4 = v2[19];
  uint64_t v5 = v2[18];
  uint64_t v6 = v2[17];
  if (v0)
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    unint64_t v7 = sub_1004B9D50;
    uint64_t v8 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v8 = v3[29];
    v3[38] = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askContinuation;
    unint64_t v7 = sub_1004B9D78;
  }
  return _swift_task_switch(v7, v8, 0);
}

uint64_t sub_1004B9D50()
{
  uint64_t v1 = *(void *)(v0 + 232);
  *(void *)(v0 + 304) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askContinuation;
  return _swift_task_switch(sub_1004B9D78, v1, 0);
}

uint64_t sub_1004B9D78()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[29] + v0[38];
  swift_beginAccess();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1))
  {
    uint64_t v4 = sub_1004B9E58;
  }
  else
  {
    (*(void (**)(void, void, void))(v0[15] + 16))(v0[16], v0[29] + v0[38], v0[14]);
    uint64_t v4 = sub_1004B9F18;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1004B9E58()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1004B9F18()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  uint64_t v4 = type metadata accessor for SFAirDropSend.Failure();
  sub_1004BAAE0(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
  uint64_t v5 = swift_allocError();
  uint64_t v7 = v6;
  sub_10031430C();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 104))(v7, enum case for SFAirDropSend.Failure.missingEndpoint(_:), v4);
  v0[9] = v5;
  SFProgressContinuation.yield(_:)();
  swift_release();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1004BA0C4(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  return _swift_task_switch(sub_1004BA0E8, v2, 0);
}

uint64_t sub_1004BA0E8()
{
  uint64_t v13 = v0;
  if (qword_100969E80 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_100975F30);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[6];
  if (v4)
  {
    uint64_t v6 = v0[5];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[2] = sub_100254634(v6, v5, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "No backup endpoint present, adding deviceID for needsFallback %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  Swift::Int v8 = v0[6];
  Swift::Int v9 = v0[5];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_100596448(&v12, v9, v8);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1004BA324()
{
  uint64_t v0 = sub_100316C8C();
  uint64_t v2 = v1;
  uint64_t result = NWEndpoint.nw.getter();
  if (result)
  {
    uint64_t device_id = nw_endpoint_get_device_id();
    swift_unknownObjectRelease();
    if (device_id)
    {
      uint64_t v5 = String.init(cString:)();
      if (v2)
      {
        if (v6)
        {
          if (v0 == v5 && v2 == v6)
          {
            swift_bridgeObjectRelease();
            char v7 = 1;
          }
          else
          {
            char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
          }
          goto LABEL_14;
        }
        goto LABEL_9;
      }
      if (v6)
      {
        char v7 = 0;
        goto LABEL_14;
      }
    }
    else if (v2)
    {
LABEL_9:
      char v7 = 0;
LABEL_14:
      swift_bridgeObjectRelease();
      return v7 & 1;
    }
    char v7 = 1;
    return v7 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004BA41C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100313BE0();
  uint64_t v8 = v7;
  if (v6 == sub_100313BE0() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
    sub_1004BB0C0(a2, (uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
    goto LABEL_14;
  }
  char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1004BB0C0(a2, (uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
  if (v11)
  {
LABEL_14:
    sub_1004BB28C((uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
    goto LABEL_15;
  }
  uint64_t v12 = sub_100316C8C();
  uint64_t v14 = v13;
  uint64_t v15 = sub_100316C8C();
  uint64_t v17 = v16;
  if (!v14)
  {
    sub_1004BB28C((uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (v17) {
      goto LABEL_20;
    }
LABEL_15:
    char v19 = 1;
    return v19 & 1;
  }
  if (!v16)
  {
    sub_1004BB28C((uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
LABEL_20:
    swift_bridgeObjectRelease();
    char v19 = 0;
    return v19 & 1;
  }
  if (v12 == v15 && v14 == v16) {
    char v19 = 1;
  }
  else {
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  sub_1004BB28C((uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
  swift_bridgeObjectRelease();
  return v19 & 1;
}

uint64_t sub_1004BA65C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_sendRequest;
  uint64_t v2 = type metadata accessor for SFAirDropSend.Request();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_initialTransfer;
  uint64_t v4 = type metadata accessor for SFAirDropSend.Transfer();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  sub_10024D338(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_runner);
  sub_10000A7E8(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askContinuation, &qword_100970E08);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1004BA784()
{
  sub_1004BA65C();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_1004BA7B0()
{
  return type metadata accessor for SDAirDropAskFanoutHelper();
}

uint64_t type metadata accessor for SDAirDropAskFanoutHelper()
{
  uint64_t result = qword_100975FC0;
  if (!qword_100975FC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1004BA804()
{
  type metadata accessor for SFAirDropSend.Request();
  if (v0 <= 0x3F)
  {
    type metadata accessor for SFAirDropSend.Transfer();
    if (v1 <= 0x3F)
    {
      sub_1004BA948();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_1004BA948()
{
  if (!qword_100975FD0)
  {
    sub_100247840(&qword_100970E10);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100975FD0);
    }
  }
}

uint64_t sub_1004BA9A4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004BA9DC(uint64_t *a1)
{
  return sub_1004B520C(a1, v1, (uint64_t)&unk_1008DCD60, (uint64_t)&unk_1008DCD88, (uint64_t)&unk_100976120, (uint64_t)&unk_100976128);
}

unint64_t sub_1004BAA30()
{
  unint64_t result = qword_1009760C0;
  if (!qword_1009760C0)
  {
    sub_100247840(&qword_10096F010);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009760C0);
  }
  return result;
}

uint64_t sub_1004BAA8C(uint64_t *a1)
{
  return sub_1004B520C(a1, v1, (uint64_t)&unk_1008DCCE8, (uint64_t)&unk_1008DCD10, (uint64_t)&unk_100976100, (uint64_t)&unk_10096C608);
}

uint64_t sub_1004BAAE0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004BAB28(uint64_t result)
{
  if (result != 1) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_1004BAB38()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004BAB70()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004BABB0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004BABE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_100970E08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004BAC50()
{
  uint64_t v1 = *(void *)(type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(type metadata accessor for SDAirDropDiscoveredEndpoint(0) - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v3 + v4 + v6) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v9 = type metadata accessor for NWEndpoint();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v0 + v3, v9);
  uint64_t v11 = v0 + v7;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v10(v0 + v7, v9);
      break;
    case 1u:
      swift_bridgeObjectRelease();
      uint64_t v14 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
      v10(v11 + *(int *)(v14 + 20), v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = (uint64_t *)(v11 + *(int *)(v14 + 56));
      unint64_t v16 = v15[1];
      if (v16 >> 60 != 15) {
        sub_100250CC4(*v15, v16);
      }
      break;
    case 2u:
      sub_100250CC4(*(void *)v11, *(void *)(v11 + 8));
      uint64_t v12 = v11 + *(int *)(type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0) + 20);
      uint64_t v13 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 3u:

      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, v7 + v8, v2 | v6 | 7);
}

uint64_t sub_1004BAF40(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SDAirDropDiscoveredEndpoint(0) - 8) + 80);
  unint64_t v9 = v6 + v7 + v8;
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = (uint64_t)v1 + v6;
  uint64_t v14 = (uint64_t)v1 + (v9 & ~v8);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  *uint64_t v15 = v3;
  v15[1] = sub_10000A6F0;
  return sub_1004B8D54(a1, v10, v11, v12, v13, v14);
}

uint64_t sub_1004BB0A0()
{
  return sub_1004BA324() & 1;
}

uint64_t sub_1004BB0C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004BB12C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SDAirDropDiscoveredEndpoint(0) - 8);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F0;
  v7[6] = v5;
  v7[7] = v6;
  v7[5] = a1;
  return _swift_task_switch(sub_1004B56B8, 0, 0);
}

uint64_t sub_1004BB224(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004BB28C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1004BB2F0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SDAirDropDiscoveredEndpoint(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_1004B8214(a1, v5, v6, v7, v8);
}

uint64_t sub_1004BB3F0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SDAirDropDiscoveredEndpoint(0) - 8);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F0;
  v7[6] = v5;
  v7[7] = v6;
  v7[5] = a1;
  return _swift_task_switch(sub_1004B4E9C, 0, 0);
}

uint64_t sub_1004BB4E8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000A6F4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10096C600 + dword_10096C600);
  return v6(a1, v4);
}

uint64_t sub_1004BB5A4()
{
  uint64_t v1 = *(void *)(type metadata accessor for SDAirDropDiscoveredEndpoint(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v5 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for NWEndpoint();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
      break;
    case 1u:
      swift_bridgeObjectRelease();
      uint64_t v9 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
      uint64_t v10 = v5 + *(int *)(v9 + 20);
      uint64_t v11 = type metadata accessor for NWEndpoint();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = (uint64_t *)(v5 + *(int *)(v9 + 56));
      unint64_t v13 = v12[1];
      if (v13 >> 60 != 15) {
        sub_100250CC4(*v12, v13);
      }
      break;
    case 2u:
      sub_100250CC4(*(void *)v5, *(void *)(v5 + 8));
      uint64_t v7 = v5 + *(int *)(type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0) + 20);
      uint64_t v8 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 3u:

      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1004BB83C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SDAirDropDiscoveredEndpoint(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10000A6F4;
  return sub_1004B69F0(a1, v5, v6, v7, v8);
}

uint64_t sub_1004BB938(uint64_t a1)
{
  return sub_1004BA41C(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1004BB964()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100976140);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100976140);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

double sub_1004BBA2C()
{
  id v0 = [self sharedInstance];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 objectForKey:v1];

  if (!v2)
  {
    if (qword_100969E88 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000B47C(v8, (uint64_t)qword_100976140);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(void *)&v22[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      *(void *)&v21[0] = sub_100254634(0xD000000000000028, 0x80000001007BED10, (uint64_t *)v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Pseudonym properties provider failed to retrieve an IDS Server Bag object for key %s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return 2592000.0;
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100249444(v21, v22);
  sub_10024D2D4((uint64_t)v22, (uint64_t)v21);
  if (!swift_dynamicCast())
  {
    if (qword_100969E88 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000B47C(v12, (uint64_t)qword_100976140);
    sub_10024D2D4((uint64_t)v22, (uint64_t)v21);
    unint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315394;
      sub_10024D2D4((uint64_t)v21, (uint64_t)v19);
      uint64_t v16 = String.init<A>(describing:)();
      v19[0] = COERCE_DOUBLE(sub_100254634(v16, v17, &v20));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10024D338((uint64_t)v21);
      *(_WORD *)(v15 + 12) = 2080;
      v19[0] = COERCE_DOUBLE(sub_100254634(0xD000000000000028, 0x80000001007BED10, &v20));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Pseudonym properties provider retrieved an invalid IDS Server Bag object %s for key %s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_10024D338((uint64_t)v21);
    }
    goto LABEL_20;
  }
  double v3 = v19[0];
  if (v19[0] > 2592000.0)
  {
    if (qword_100969E88 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_100976140);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      *(void *)&v21[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 134218498;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v7 + 12) = 2080;
      sub_100254634(0xD000000000000028, 0x80000001007BED10, (uint64_t *)v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v7 + 22) = 2048;
      v19[0] = 2592000.0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Pseudonym properties provider retrieved an invalid IDS Server Bag value %f for key %s greater than %f", (uint8_t *)v7, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

LABEL_20:
    sub_10024D338((uint64_t)v22);
    return 2592000.0;
  }
  sub_10024D338((uint64_t)v22);
  return v3;
}

uint64_t sub_1004BBFC4()
{
  id v0 = [self sharedInstance];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 objectForKey:v1];

  if (!v2)
  {
    if (qword_100969E88 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_100976140);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(void *)&v18[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315138;
      *(void *)&v17[0] = sub_100254634(0xD000000000000019, 0x80000001007BECF0, (uint64_t *)v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Pseudonym properties provider failed to retrieve an IDS Server Bag object for key %s", v7, 0xCu);
      uint64_t v3 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return v3;
    }

    return 1;
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100249444(v17, v18);
  sub_10024D2D4((uint64_t)v18, (uint64_t)v17);
  if (!swift_dynamicCast())
  {
    if (qword_100969E88 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000B47C(v8, (uint64_t)qword_100976140);
    sub_10024D2D4((uint64_t)v18, (uint64_t)v17);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315394;
      sub_10024D2D4((uint64_t)v17, (uint64_t)v15);
      uint64_t v12 = String.init<A>(describing:)();
      v15[0] = sub_100254634(v12, v13, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10024D338((uint64_t)v17);
      *(_WORD *)(v11 + 12) = 2080;
      v15[0] = sub_100254634(0xD000000000000019, 0x80000001007BECF0, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Pseudonym properties provider retrieved an invalid IDS Server Bag object %s for key %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_10024D338((uint64_t)v17);
    }
    sub_10024D338((uint64_t)v18);
    return 1;
  }
  uint64_t v3 = LOBYTE(v15[0]);
  sub_10024D338((uint64_t)v18);
  return v3;
}

ValueMetadata *type metadata accessor for SDPseudonymPropertiesProvider()
{
  return &type metadata for SDPseudonymPropertiesProvider;
}

uint64_t sub_1004BC3E0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100976158);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100976158);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1004BC4A8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_10000A844(&qword_100976270);
  v2[4] = swift_task_alloc();
  v2[5] = swift_task_alloc();
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferType();
  v2[14] = v4;
  v2[15] = *(void *)(v4 - 8);
  v2[16] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_1004BC6A4, v5, 0);
}

uint64_t sub_1004BC6A4()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  SFAirDropReceive.AskRequest.type.getter();
  char v4 = SFAirDrop.TransferType.isLinks.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v4)
  {
    uint64_t v5 = v0[9];
    uint64_t result = SFAirDropReceive.AskRequest.urlItems.getter();
    int64_t v7 = 0;
    uint64_t v58 = result + 56;
    uint64_t v65 = result;
    uint64_t v8 = -1;
    uint64_t v9 = -1 << *(unsigned char *)(result + 32);
    if (-v9 < 64) {
      uint64_t v8 = ~(-1 << -(char)v9);
    }
    unint64_t v10 = v8 & *(void *)(result + 56);
    uint64_t v63 = (void (**)(void, uint64_t, uint64_t, void))(v5 + 56);
    uint64_t v64 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v61 = (void (**)(uint64_t, void, uint64_t))(v5 + 32);
    uint64_t v62 = v5;
    int64_t v59 = (unint64_t)(63 - v9) >> 6;
    uint64_t v60 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    while (1)
    {
      if (v10)
      {
        unint64_t v12 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v13 = v12 | (v7 << 6);
      }
      else
      {
        int64_t v14 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
          __break(1u);
LABEL_50:
          __break(1u);
          return result;
        }
        if (v14 >= v59) {
          goto LABEL_41;
        }
        unint64_t v15 = *(void *)(v58 + 8 * v14);
        ++v7;
        if (!v15)
        {
          int64_t v7 = v14 + 1;
          if (v14 + 1 >= v59) {
            goto LABEL_41;
          }
          unint64_t v15 = *(void *)(v58 + 8 * v7);
          if (!v15)
          {
            int64_t v7 = v14 + 2;
            if (v14 + 2 >= v59) {
              goto LABEL_41;
            }
            unint64_t v15 = *(void *)(v58 + 8 * v7);
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v59)
              {
LABEL_41:
                (*v63)(v0[13], 1, 1, v0[8]);
LABEL_42:
                swift_release();
                uint64_t v49 = v0[12];
                uint64_t v50 = v0[8];
                uint64_t v51 = SFAirDropReceive.AskRequest.urlItems.getter();
                sub_1002E5BA0(v51, v49);
                swift_bridgeObjectRelease();
                if ((*v64)(v49, 1, v50) == 1)
                {
                  sub_10000A7E8(v0[12], (uint64_t *)&unk_10096AC10);
                }
                else
                {
                  uint64_t v52 = v0[10];
                  uint64_t v53 = v0[8];
                  uint64_t v54 = v0[3];
                  (*v61)(v52, v0[12], v53);
                  id v55 = sub_1004BD91C();
                  (*v60)(v52, v53);
                  uint64_t v56 = *(void **)(v54 + 16);
                  *(void *)(v54 + 16) = v55;
                }
                BOOL v45 = *(void *)(v0[3] + 16) != 0;
                goto LABEL_46;
              }
              unint64_t v15 = *(void *)(v58 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  int64_t v7 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_50;
                  }
                  if (v7 >= v59) {
                    goto LABEL_41;
                  }
                  unint64_t v15 = *(void *)(v58 + 8 * v7);
                  ++v16;
                  if (v15) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v7 = v16;
            }
          }
        }
LABEL_21:
        unint64_t v10 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v7 << 6);
      }
      uint64_t v17 = v0[13];
      uint64_t v18 = v0[8];
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v62 + 16))(v17, *(void *)(v65 + 48) + *(void *)(v62 + 72) * v13, v18);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v17, 0, 1, v18);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v17, 1, v18) == 1) {
        goto LABEL_42;
      }
      int64_t v66 = v7;
      uint64_t v19 = v0[7];
      uint64_t v20 = v0[6];
      (*v61)(v0[11], v0[13], v0[8]);
      URLComponents.init(url:resolvingAgainstBaseURL:)();
      sub_1004BE0B8(v19, v20);
      uint64_t v21 = type metadata accessor for URLComponents();
      uint64_t v22 = *(void *)(v21 - 8);
      long long v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
      int v24 = v23(v20, 1, v21);
      uint64_t v25 = v0[6];
      if (v24 == 1)
      {
        sub_10000A7E8(v0[6], &qword_100976270);
LABEL_29:
        sub_1004BE0B8(v0[7], v0[5]);
        goto LABEL_30;
      }
      uint64_t v26 = URLComponents.scheme.getter();
      uint64_t v28 = v27;
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v25, v21);
      if (!v28) {
        goto LABEL_29;
      }
      uint64_t v29 = v0[7];
      uint64_t v30 = v0[5];
      if (v26 == 0xD000000000000013 && v28 == 0x80000001007BEE60) {
        break;
      }
      char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      sub_1004BE0B8(v29, v30);
      if (v41)
      {
LABEL_36:
        uint64_t v42 = v0[11];
        uint64_t v44 = v0[7];
        uint64_t v43 = v0[8];
        sub_10000A7E8(v0[5], &qword_100976270);
        sub_10000A7E8(v44, &qword_100976270);
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))*v60)(v42, v43);
        int64_t v7 = v66;
      }
      else
      {
LABEL_30:
        uint64_t v31 = v0[4];
        sub_1004BE0B8(v0[5], v31);
        int v32 = v23(v31, 1, v21);
        uint64_t v33 = v0[4];
        if (v32 == 1)
        {
          sub_10000A7E8(v0[4], &qword_100976270);
LABEL_39:
          uint64_t v46 = v0[11];
          uint64_t v48 = v0[7];
          uint64_t v47 = v0[8];
          sub_10000A7E8(v0[5], &qword_100976270);
          sub_10000A7E8(v48, &qword_100976270);
          (*v60)(v46, v47);
          swift_bridgeObjectRelease();
LABEL_40:
          swift_release();
          BOOL v45 = 0;
          goto LABEL_46;
        }
        uint64_t v34 = URLComponents.scheme.getter();
        uint64_t v36 = v35;
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v33, v21);
        if (!v36) {
          goto LABEL_39;
        }
        uint64_t v37 = v0[11];
        uint64_t v39 = v0[7];
        uint64_t v38 = v0[8];
        uint64_t v40 = v0[5];
        if (v34 == 0xD000000000000010 && v36 == 0x80000001007BEE00)
        {
          swift_bridgeObjectRetain();
          sub_10000A7E8(v40, &qword_100976270);
          sub_10000A7E8(v39, &qword_100976270);
          (*v60)(v37, v38);
          uint64_t result = swift_bridgeObjectRelease_n();
          int64_t v7 = v66;
        }
        else
        {
          char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRetain();
          sub_10000A7E8(v40, &qword_100976270);
          sub_10000A7E8(v39, &qword_100976270);
          (*v60)(v37, v38);
          uint64_t result = swift_bridgeObjectRelease_n();
          int64_t v7 = v66;
          if ((v11 & 1) == 0) {
            goto LABEL_40;
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    sub_1004BE0B8(v29, v30);
    goto LABEL_36;
  }
  BOOL v45 = 0;
LABEL_46:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v57 = (uint64_t (*)(BOOL))v0[1];
  return v57(v45);
}

void sub_1004BCE44(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  LOBYTE(v4) = a2;
  unint64_t v5 = *(void *)(SFAirDropReceive.AskRequest.urlItems.getter() + 16);
  swift_bridgeObjectRelease();
  os_log_type_t v6 = *(void **)(v2 + 16);
  if (!v6) {
    goto LABEL_17;
  }
  id v7 = [v6 displayName];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  char v11 = *(void **)(v3 + 16);
  if (v11)
  {
    id v12 = [v11 passkeyCredential];
    if (v12)
    {
      unint64_t v13 = v12;
      uint64_t v14 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v16 = v15;

      sub_100250CC4(v14, v16);
      if (!v10) {
        goto LABEL_24;
      }
      if (v5 != 1)
      {
LABEL_23:
        swift_bridgeObjectRelease();
LABEL_24:
        sub_10000A844(&qword_10096D760);
        uint64_t inited = swift_initStackObject();
        long long v47 = xmmword_10076E7A0;
        *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
        *(void *)(inited + 32) = 0x59454B53534150;
        *(void *)(inited + 40) = 0xE700000000000000;
        *(void *)(inited + 48) = v5;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v39._uint64_t countAndFlagsBits = 95;
        v39._unint64_t object = (void *)0xE100000000000000;
        String.append(_:)(v39);
        v40._uint64_t countAndFlagsBits = 0x59454B53534150;
        v40._unint64_t object = (void *)0xE700000000000000;
        String.append(_:)(v40);
        swift_bridgeObjectRelease();
        if (v5 > 1)
        {
          v41._uint64_t countAndFlagsBits = 0x4C4152554C505FLL;
          v41._unint64_t object = (void *)0xE700000000000000;
          String.append(_:)(v41);
        }
        swift_bridgeObjectRelease();
        if (v4)
        {
          v42._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
          v42._unint64_t object = (void *)0xEC00000044455A49;
          String.append(_:)(v42);
        }
        v43._uint64_t countAndFlagsBits = 0x545845545FLL;
        v43._unint64_t object = (void *)0xE500000000000000;
        String.append(_:)(v43);
        swift_setDeallocating();
        sub_10000A844((uint64_t *)&unk_100977CB0);
        swift_arrayDestroy();
        NSString v44 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v37 = (id)SFLocalizedStringForKey();

        if (!v37)
        {
          __break(1u);
          goto LABEL_32;
        }
LABEL_29:
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        sub_10000A844((uint64_t *)&unk_10096EE60);
        uint64_t v45 = swift_allocObject();
        *(_OWORD *)(v45 + 16) = v47;
        *(void *)(v45 + 56) = &type metadata for Int;
        *(void *)(v45 + 64) = &protocol witness table for Int;
        *(void *)(v45 + 32) = v5;
        goto LABEL_30;
      }
      sub_10000A844(&qword_10096D760);
      uint64_t v17 = swift_initStackObject();
      *(void *)(v17 + 32) = 0xD000000000000012;
      long long v46 = xmmword_10076E7A0;
      *(_OWORD *)(v17 + 16) = xmmword_10076E7A0;
      unint64_t v5 = 0x80000001007BEE40;
      *(void *)(v17 + 40) = 0x80000001007BEE40;
      *(void *)(v17 + 48) = 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18._uint64_t countAndFlagsBits = 95;
      v18._unint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v18);
      v19._uint64_t countAndFlagsBits = 0xD000000000000012;
      v19._unint64_t object = (void *)0x80000001007BEE40;
      String.append(_:)(v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v4)
      {
        v20._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
        v20._unint64_t object = (void *)0xEC00000044455A49;
        String.append(_:)(v20);
      }
      v21._uint64_t countAndFlagsBits = 0x545845545FLL;
      v21._unint64_t object = (void *)0xE500000000000000;
      String.append(_:)(v21);
      swift_setDeallocating();
      sub_10000A844((uint64_t *)&unk_100977CB0);
      swift_arrayDestroy();
      NSString v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v4 = (id)SFLocalizedStringForKey();

      if (v4) {
        goto LABEL_15;
      }
      __break(1u);
    }
  }
  if (!v10)
  {
LABEL_17:
    sub_10000A844(&qword_10096D760);
    uint64_t v30 = swift_initStackObject();
    long long v47 = xmmword_10076E7A0;
    *(_OWORD *)(v30 + 16) = xmmword_10076E7A0;
    *(void *)(v30 + 32) = 0x49544E4544455243;
    *(void *)(v30 + 40) = 0xEA00000000004C41;
    *(void *)(v30 + 48) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v31._uint64_t countAndFlagsBits = 95;
    v31._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v31);
    v32._uint64_t countAndFlagsBits = 0x49544E4544455243;
    v32._unint64_t object = (void *)0xEA00000000004C41;
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
    if (v5 > 1)
    {
      v33._uint64_t countAndFlagsBits = 0x4C4152554C505FLL;
      v33._unint64_t object = (void *)0xE700000000000000;
      String.append(_:)(v33);
    }
    swift_bridgeObjectRelease();
    if (v4)
    {
      v34._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
      v34._unint64_t object = (void *)0xEC00000044455A49;
      String.append(_:)(v34);
    }
    v35._uint64_t countAndFlagsBits = 0x545845545FLL;
    v35._unint64_t object = (void *)0xE500000000000000;
    String.append(_:)(v35);
    LOBYTE(v4) = 82;
    swift_setDeallocating();
    sub_10000A844((uint64_t *)&unk_100977CB0);
    swift_arrayDestroy();
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v37 = (id)SFLocalizedStringForKey();

    if (v37) {
      goto LABEL_29;
    }
    __break(1u);
    goto LABEL_23;
  }
  if (v5 != 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  sub_10000A844(&qword_10096D760);
  uint64_t v23 = swift_initStackObject();
  *(void *)(v23 + 32) = 0xD000000000000015;
  long long v46 = xmmword_10076E7A0;
  *(_OWORD *)(v23 + 16) = xmmword_10076E7A0;
  *(void *)(v23 + 40) = 0x80000001007BEE20;
  *(void *)(v23 + 48) = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24._uint64_t countAndFlagsBits = 95;
  v24._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v24);
  v25._uint64_t countAndFlagsBits = 0xD000000000000015;
  v25._unint64_t object = (void *)0x80000001007BEE20;
  String.append(_:)(v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4)
  {
    v26._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
    v26._unint64_t object = (void *)0xEC00000044455A49;
    String.append(_:)(v26);
  }
  v27._uint64_t countAndFlagsBits = 0x545845545FLL;
  v27._unint64_t object = (void *)0xE500000000000000;
  String.append(_:)(v27);
  swift_setDeallocating();
  sub_10000A844((uint64_t *)&unk_100977CB0);
  swift_arrayDestroy();
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = (id)SFLocalizedStringForKey();

  if (v4)
  {
LABEL_15:
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = v46;
    *(void *)(v29 + 56) = &type metadata for String;
    *(void *)(v29 + 64) = sub_1002E695C();
    *(void *)(v29 + 32) = v8;
    *(void *)(v29 + 40) = v10;
LABEL_30:
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_1004BD5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  uint64_t v5 = type metadata accessor for URL();
  v4[4] = v5;
  v4[5] = *(void *)(v5 - 8);
  v4[6] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  return _swift_task_switch(sub_1004BD698, v6, 0);
}

uint64_t sub_1004BD698()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 24) + 16);
  if (v1)
  {
    id v2 = v1;
    id v3 = [v2 passwordManagerURL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    if (qword_100969E90 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_100976158);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Opening password manager url", v7, 2u);
      swift_slowDealloc();
    }
    uint64_t v9 = *(void *)(v0 + 40);
    uint64_t v8 = *(void *)(v0 + 48);
    uint64_t v10 = *(void *)(v0 + 32);

    char v11 = self;
    URL._bridgeToObjectiveC()(v12);
    uint64_t v14 = v13;
    [v11 openPasswordManagerURL:v13];

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    char v15 = 1;
  }
  else
  {
    if (qword_100969E90 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10000B47C(v16, (uint64_t)qword_100976158);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      Swift::String v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "### No credential?", v19, 2u);
      swift_slowDealloc();
    }

    char v15 = 0;
  }
  **(unsigned char **)(v0 + 16) = v15;
  swift_task_dealloc();
  Swift::String v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

id sub_1004BD91C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844(&qword_100976270);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v0 + 16);
  id v6 = v5;
  if (!v5)
  {
    if (qword_100969E90 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10000B47C(v7, (uint64_t)qword_100976158);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Grabbing credential from AirDrop handler...", v10, 2u);
      swift_slowDealloc();
    }

    URLComponents.init(url:resolvingAgainstBaseURL:)();
    uint64_t v11 = type metadata accessor for URLComponents();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v4, 1, v11) == 1)
    {
      sub_10000A7E8((uint64_t)v4, &qword_100976270);
    }
    else
    {
      uint64_t v13 = URLComponents.scheme.getter();
      uint64_t v15 = v14;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v4, v11);
      if (v15)
      {
        if (v13 == 0xD000000000000010 && v15 == 0x80000001007BEE00)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v17 & 1) == 0) {
            goto LABEL_15;
          }
        }
        URL._bridgeToObjectiveC()(v16);
        Swift::String v19 = v18;
        id v6 = (id)SFSharablePasswordForUnencryptedAirDropURL();

        if (!v6) {
          goto LABEL_20;
        }
        goto LABEL_14;
      }
    }
LABEL_15:
    id v22 = [self sharedAgent];
    if (!v22
      || (uint64_t v23 = v22,
          Swift::String v20 = [v22 myAccount],
          v23,
          !v20))
    {
      Swift::String v20 = Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v20, v32))
      {
        Swift::String v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)Swift::String v33 = 0;
        Swift::String v34 = "### Failed to grab myAccount?";
        goto LABEL_24;
      }
LABEL_30:
      id v6 = 0;
      goto LABEL_31;
    }
    id v24 = [v20 identity];
    if (v24)
    {
      Swift::String v25 = v24;
      id v26 = [v25 copyPrivateKey];
      if (v26)
      {
        NSString v28 = v26;
        URL._bridgeToObjectiveC()(v27);
        uint64_t v30 = v29;
        id v31 = v28;
        id v6 = (id)SFSharablePasswordForEncryptedAirDropURL();

        if (!v6)
        {
LABEL_20:
          Swift::String v20 = Logger.logObject.getter();
          os_log_type_t v32 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v20, v32))
          {
            Swift::String v33 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)Swift::String v33 = 0;
            Swift::String v34 = "Failed to grab credential from AirDrop handler!";
LABEL_24:
            _os_log_impl((void *)&_mh_execute_header, v20, v32, v34, v33, 2u);
            swift_slowDealloc();
            goto LABEL_30;
          }
          goto LABEL_30;
        }
LABEL_14:
        Swift::String v20 = *(NSObject **)(v1 + 16);
        *(void *)(v1 + 16) = v6;
        id v21 = v6;
LABEL_31:

        goto LABEL_32;
      }
      Swift::String v35 = Logger.logObject.getter();
      os_log_type_t v38 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v35, v38))
      {

        id v6 = 0;
        Swift::String v20 = v25;
        goto LABEL_31;
      }
      Swift::String v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v39 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v38, "### Failed to grab myPrivateKey?", v39, 2u);
      swift_slowDealloc();
    }
    else
    {
      Swift::String v35 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v35, v36))
      {
        id v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v37 = 0;
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "### Failed to grab myIdentity?", v37, 2u);
        swift_slowDealloc();
      }
    }

    goto LABEL_30;
  }
LABEL_32:
  id v40 = v5;
  return v6;
}

uint64_t type metadata accessor for SDAirDropContentHandlerCredentialLinks()
{
  return self;
}

uint64_t sub_1004BDE64@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerCredentialLinks();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1004BDE9C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_1004BC4A8(a1);
}

void sub_1004BDF34(uint64_t a1, char a2)
{
}

uint64_t sub_1004BDF58()
{
  return SFProgressTask.init(_:initialProgress:operation:file:line:)();
}

uint64_t sub_1004BE004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_10000A6F4;
  return sub_1004BD5A0(a1, a2, a3, v3);
}

uint64_t sub_1004BE0B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_100976270);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for SDTempPairingSubService(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1004BE1BCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDTempPairingSubService()
{
  return &type metadata for SDTempPairingSubService;
}

void *sub_1004BE1F4@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

uint64_t sub_1004BE208()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1004BE268()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_1004BE2BC()
{
  unint64_t result = qword_100976278;
  if (!qword_100976278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100976278);
  }
  return result;
}

unint64_t sub_1004BE310()
{
  unint64_t result = qword_100976280;
  if (!qword_100976280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100976280);
  }
  return result;
}

uint64_t sub_1004BE364()
{
  uint64_t v1 = v0;
  sub_10000A844(&qword_100976288);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100771F40;
  *(void *)(inited + 32) = 115;
  *(void *)(inited + 40) = 0xE100000000000000;
  *(void *)(inited + 48) = dispatch thunk of CustomStringConvertible.description.getter();
  *(void *)(inited + 56) = v3;
  *(void *)(inited + 64) = 28260;
  *(void *)(inited + 72) = 0xE200000000000000;
  uint64_t v4 = v0[1];
  *(void *)(inited + 80) = *v0;
  *(void *)(inited + 88) = v4;
  *(void *)(inited + 96) = 27504;
  *(void *)(inited + 104) = 0xE200000000000000;
  uint64_t v5 = v0[2];
  unint64_t v6 = v1[3];
  swift_bridgeObjectRetain();
  sub_10045E0B4(v5, v6);
  sub_10000A844((uint64_t *)&unk_100974C30);
  sub_1002FE630();
  uint64_t v7 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  *(void *)(inited + 112) = v7;
  *(void *)(inited + 120) = v9;
  *(void *)(inited + 128) = 29793;
  *(void *)(inited + 136) = 0xE200000000000000;
  sub_10045E0B4(v1[4], v1[5]);
  uint64_t v10 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  *(void *)(inited + 144) = v10;
  *(void *)(inited + 152) = v12;
  sub_100246F2C(inited);
  return NWTXTRecord.init(_:)();
}

uint64_t sub_1004BE4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = String.init<A>(_:)();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_10031BCD4();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  unsigned __int16 v11 = (unsigned __int16)sub_1004BE5C0(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 & 0x1FF;
}

unsigned __int8 *sub_1004BE5C0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v14 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v15 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = a3 + 55;
        }
        else
        {
          unsigned __int8 v15 = 97;
          unsigned __int8 v16 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v17 = a3 + 48;
        }
        else {
          unsigned __int8 v17 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          os_log_type_t v18 = result + 1;
          do
          {
            unsigned int v19 = *v18;
            if (v19 < 0x30 || v19 >= v17)
            {
              if (v19 < 0x41 || v19 >= v16)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v19 < 0x61 || v19 >= v15) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v20 = -87;
              }
              else
              {
                char v20 = -55;
              }
            }
            else
            {
              char v20 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_72;
            }
            unsigned int v8 = (v8 * a3) + (v19 + v20);
            if ((v8 >> 8)) {
              goto LABEL_72;
            }
            ++v18;
            --v14;
          }
          while (v14);
LABEL_48:
          int v13 = 0;
          unsigned __int8 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned __int8 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 8));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v21 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v22 = a3 + 55;
        }
        else
        {
          unsigned __int8 v21 = 97;
          unsigned __int8 v22 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v23 = a3 + 48;
        }
        else {
          unsigned __int8 v23 = 58;
        }
        if (result)
        {
          LOBYTE(v24) = 0;
          do
          {
            unsigned int v25 = *result;
            if (v25 < 0x30 || v25 >= v23)
            {
              if (v25 < 0x41 || v25 >= v22)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v25 < 0x61 || v25 >= v21) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v26 = -87;
              }
              else
              {
                char v26 = -55;
              }
            }
            else
            {
              char v26 = -48;
            }
            if (((v24 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_72;
            }
            unsigned int v24 = (v24 * a3) + (v25 + v26);
            if ((v24 >> 8)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          int v13 = 0;
          unsigned __int8 v12 = v24;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          unint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0) {
              goto LABEL_72;
            }
            unsigned int v8 = (v8 * a3) - (v10 + v11);
            if ((v8 & 0xFFFFFF00) != 0) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned __int8 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 8));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1004BE868()
{
  if (String.count.getter()) {
    goto LABEL_93;
  }
  uint64_t v0 = String.count.getter();
  if (v0)
  {
    uint64_t v1 = v0;
    uint64_t v64 = _swiftEmptyArrayStorage;
    uint64_t result = sub_100255700(0, v0 & ~(v0 >> 63), 0);
    if (v1 < 0)
    {
LABEL_103:
      __break(1u);
      return result;
    }
    int v3 = v64;
    do
    {
      uint64_t v4 = String.subscript.getter();
      uint64_t v6 = v5;
      uint64_t v64 = v3;
      unint64_t v8 = v3[2];
      unint64_t v7 = v3[3];
      if (v8 >= v7 >> 1)
      {
        sub_100255700(v7 > 1, v8 + 1, 1);
        int v3 = v64;
      }
      v3[2] = v8 + 1;
      unint64_t v9 = &v3[2 * v8];
      v9[4] = v4;
      v9[5] = v6;
      String.index(after:)();
      --v1;
    }
    while (v1);
  }
  else
  {
    int v3 = _swiftEmptyArrayStorage;
  }
  unint64_t v10 = v3[2];
  if (v10) {
    int64_t v11 = ((v10 - 1) >> 1) + 1;
  }
  else {
    int64_t v11 = 0;
  }
  int64_t v66 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100255510(0, v11, 0);
  unsigned __int8 v12 = _swiftEmptyArrayStorage;
  if (!v10)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t v37 = v12[2];
    if (!v37) {
      goto LABEL_89;
    }
LABEL_29:
    os_log_type_t v38 = v12 + 4;
    uint64_t result = swift_retain();
    uint64_t v39 = 0;
    id v40 = (char *)_swiftEmptyArrayStorage;
    while (1)
    {
      Swift::String v41 = &v38[2 * v39];
      uint64_t v42 = *v41;
      unint64_t v43 = v41[1];
      uint64_t v44 = HIBYTE(v43) & 0xF;
      uint64_t v45 = v42 & 0xFFFFFFFFFFFFLL;
      if ((v43 & 0x2000000000000000) != 0) {
        uint64_t v46 = HIBYTE(v43) & 0xF;
      }
      else {
        uint64_t v46 = v42 & 0xFFFFFFFFFFFFLL;
      }
      if (v46)
      {
        if ((v43 & 0x1000000000000000) != 0)
        {
          swift_bridgeObjectRetain();
          LOWORD(v42) = sub_1004BE4DC(v42, v43, 16);
          uint64_t result = swift_bridgeObjectRelease();
          if ((v42 & 0x100) == 0) {
            goto LABEL_79;
          }
        }
        else if ((v43 & 0x2000000000000000) != 0)
        {
          uint64_t v64 = (void *)v42;
          uint64_t v65 = v43 & 0xFFFFFFFFFFFFFFLL;
          if (v42 == 43)
          {
            if (!v44) {
              goto LABEL_101;
            }
            if (!--v44) {
              goto LABEL_31;
            }
            LOBYTE(v42) = 0;
            uint64_t v51 = (unsigned __int8 *)&v64 + 1;
            while (1)
            {
              int v52 = *v51;
              char v53 = v52 - 48;
              if ((v52 - 48) >= 0xA)
              {
                if ((v52 - 65) < 6)
                {
                  char v53 = v52 - 55;
                }
                else
                {
                  if ((v52 - 97) > 5) {
                    goto LABEL_77;
                  }
                  char v53 = v52 - 87;
                }
              }
              if (v42 > 0xFu) {
                goto LABEL_77;
              }
              LOBYTE(v42) = v53 + 16 * v42;
              ++v51;
              if (!--v44) {
                goto LABEL_78;
              }
            }
          }
          if (v42 == 45)
          {
            if (!v44) {
              goto LABEL_100;
            }
            if (!--v44) {
              goto LABEL_31;
            }
            LOBYTE(v42) = 0;
            uint64_t v48 = (unsigned __int8 *)&v64 + 1;
            while (1)
            {
              int v49 = *v48;
              unsigned __int8 v50 = v49 - 48;
              if ((v49 - 48) >= 0xA)
              {
                if ((v49 - 65) < 6)
                {
                  unsigned __int8 v50 = v49 - 55;
                }
                else
                {
                  if ((v49 - 97) > 5) {
                    break;
                  }
                  unsigned __int8 v50 = v49 - 87;
                }
              }
              if (v42 > 0xFu) {
                break;
              }
              LODWORD(v42) = 16 * (v42 & 0xF) - v50;
              if ((v42 & 0xFFFFFF00) != 0) {
                break;
              }
              ++v48;
              if (!--v44) {
                goto LABEL_78;
              }
            }
LABEL_77:
            LOBYTE(v42) = 0;
            LODWORD(v44) = 1;
LABEL_78:
            if (v44) {
              goto LABEL_31;
            }
LABEL_79:
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_100253724(0, *((void *)v40 + 2) + 1, 1, v40);
              id v40 = (char *)result;
            }
            unint64_t v58 = *((void *)v40 + 2);
            unint64_t v57 = *((void *)v40 + 3);
            if (v58 >= v57 >> 1)
            {
              uint64_t result = (uint64_t)sub_100253724((char *)(v57 > 1), v58 + 1, 1, v40);
              id v40 = (char *)result;
            }
            *((void *)v40 + 2) = v58 + 1;
            v40[v58 + 32] = v42;
            goto LABEL_31;
          }
          if (v44)
          {
            LOBYTE(v42) = 0;
            uint64_t v54 = (unsigned __int8 *)&v64;
            while (1)
            {
              int v55 = *v54;
              char v56 = v55 - 48;
              if ((v55 - 48) >= 0xA)
              {
                if ((v55 - 65) < 6)
                {
                  char v56 = v55 - 55;
                }
                else
                {
                  if ((v55 - 97) > 5) {
                    goto LABEL_77;
                  }
                  char v56 = v55 - 87;
                }
              }
              if (v42 > 0xFu) {
                goto LABEL_77;
              }
              LOBYTE(v42) = v56 + 16 * v42;
              ++v54;
              if (!--v44) {
                goto LABEL_78;
              }
            }
          }
        }
        else
        {
          if ((v42 & 0x1000000000000000) != 0) {
            long long v47 = (unsigned __int8 *)((v43 & 0xFFFFFFFFFFFFFFFLL) + 32);
          }
          else {
            long long v47 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
          }
          uint64_t result = (uint64_t)sub_1004BE5C0(v47, v45, 16);
          LOBYTE(v42) = result;
          if (((result >> 8) & 1) == 0) {
            goto LABEL_79;
          }
        }
      }
LABEL_31:
      if (++v39 == v37)
      {
        swift_release_n();
        goto LABEL_90;
      }
    }
  }
  unint64_t v13 = 0;
  unint64_t v62 = v10;
  unint64_t v14 = v10 + 1;
  unsigned __int8 v15 = (void **)(v3 + 7);
  unint64_t v63 = v14 & 0xFFFFFFFFFFFFFFFELL;
  do
  {
    unint64_t v16 = v13;
    if (v63 == v13)
    {
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
      goto LABEL_102;
    }
    unint64_t v17 = v3[2];
    if (v16 >= v17) {
      goto LABEL_96;
    }
    if (v16 + 1 >= v17) {
      goto LABEL_97;
    }
    uint64_t v18 = (uint64_t)*(v15 - 2);
    uint64_t v19 = (uint64_t)*(v15 - 1);
    char v20 = *v15;
    uint64_t v64 = *(v15 - 3);
    uint64_t v65 = v18;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v21._uint64_t countAndFlagsBits = v19;
    v21._unint64_t object = v20;
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    unsigned __int8 v22 = v64;
    int64_t v66 = v12;
    unint64_t v23 = v12[2];
    unint64_t v24 = v12[3];
    if (v23 >= v24 >> 1)
    {
      uint64_t result = sub_100255510(v24 > 1, v23 + 1, 1);
      unsigned __int8 v12 = v66;
    }
    _OWORD v12[2] = v23 + 1;
    unsigned int v25 = &v12[2 * v23];
    v25[4] = v22;
    v25[5] = v18;
    v15 += 4;
    unint64_t v13 = v16 + 2;
    --v11;
  }
  while (v11);
  unint64_t v26 = v16 + 2;
  if (v16 + 2 < v62)
  {
    while (1)
    {
      unint64_t v27 = v3[2];
      if (v26 >= v27) {
        goto LABEL_98;
      }
      unint64_t v28 = v26 + 1;
      if (v26 + 1 >= v27) {
        goto LABEL_99;
      }
      uint64_t v29 = (uint64_t)*(v15 - 2);
      uint64_t v30 = (uint64_t)*(v15 - 1);
      id v31 = *v15;
      uint64_t v64 = *(v15 - 3);
      uint64_t v65 = v29;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v32._uint64_t countAndFlagsBits = v30;
      v32._unint64_t object = v31;
      String.append(_:)(v32);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      Swift::String v33 = v64;
      int64_t v66 = v12;
      unint64_t v34 = v12[2];
      unint64_t v35 = v12[3];
      if (v34 >= v35 >> 1)
      {
        uint64_t result = sub_100255510(v35 > 1, v34 + 1, 1);
        unsigned __int8 v12 = v66;
      }
      _OWORD v12[2] = v34 + 1;
      os_log_type_t v36 = &v12[2 * v34];
      v36[4] = v33;
      v36[5] = v29;
      v15 += 4;
      unint64_t v26 = v28 + 1;
      if ((uint64_t)(v28 + 1) >= (uint64_t)v62) {
        goto LABEL_28;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v37 = v12[2];
  if (v37) {
    goto LABEL_29;
  }
LABEL_89:
  swift_release();
  id v40 = (char *)_swiftEmptyArrayStorage;
LABEL_90:
  uint64_t v59 = String.count.getter();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v60 = *((void *)v40 + 2);
  if (!v60)
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  if (v59 / v60 == 2)
  {
    uint64_t v61 = sub_1005A532C((uint64_t)v40);
    swift_bridgeObjectRelease();
    return v61;
  }
LABEL_93:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1004BEEE8@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t result = NWTXTRecord.subscript.getter();
  unint64_t v6 = v5;
  if (!v5)
  {
    uint64_t v14 = type metadata accessor for NWTXTRecord();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);
LABEL_50:
    unint64_t v25 = 0;
LABEL_51:
    uint64_t v26 = 0;
    unint64_t v27 = 0;
    uint64_t v28 = 0;
    unint64_t v29 = 0;
LABEL_52:
    *a2 = v6;
    a2[1] = v25;
    a2[2] = v26;
    a2[3] = v27;
    a2[4] = v28;
    a2[5] = v29;
    return result;
  }
  uint64_t v7 = HIBYTE(v5) & 0xF;
  uint64_t v8 = result & 0xFFFFFFFFFFFFLL;
  if ((v6 & 0x2000000000000000) != 0) {
    uint64_t v9 = HIBYTE(v6) & 0xF;
  }
  else {
    uint64_t v9 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v9)
  {
    swift_bridgeObjectRelease();
    goto LABEL_48;
  }
  if ((v6 & 0x1000000000000000) != 0)
  {
    uint64_t v11 = sub_10031B6B4(result, v6, 10);
    char v13 = v44;
    goto LABEL_46;
  }
  if ((v6 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      unint64_t v10 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      unint64_t v10 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    uint64_t v11 = (uint64_t)sub_10031B684(v10, v8, 10);
    char v13 = v12 & 1;
LABEL_46:
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0 && !v11)
    {
      uint64_t v30 = NWTXTRecord.subscript.getter();
      unint64_t v25 = v31;
      if (!v31)
      {
        uint64_t v36 = type metadata accessor for NWTXTRecord();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(a1, v36);
        unint64_t v6 = 0;
        goto LABEL_51;
      }
      unint64_t v6 = v30;
      NWTXTRecord.subscript.getter();
      if (v32 && (uint64_t v33 = sub_1004BE868(), v34 >> 60 != 15))
      {
        uint64_t v26 = v33;
        unint64_t v27 = v34;
        NWTXTRecord.subscript.getter();
        if (v37)
        {
          uint64_t v28 = sub_1004BE868();
          unint64_t v29 = v38;
          uint64_t v39 = type metadata accessor for NWTXTRecord();
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(a1, v39);
          if (v29 >> 60 != 15) {
            goto LABEL_52;
          }
        }
        else
        {
          uint64_t v40 = type metadata accessor for NWTXTRecord();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(a1, v40);
        }
        sub_100250CB0(v26, v27);
      }
      else
      {
        uint64_t v35 = type metadata accessor for NWTXTRecord();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(a1, v35);
      }
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_49;
    }
LABEL_48:
    uint64_t v24 = type metadata accessor for NWTXTRecord();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(a1, v24);
LABEL_49:
    unint64_t v6 = 0;
    goto LABEL_50;
  }
  v45[0] = result;
  v45[1] = v6 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v7) {
      goto LABEL_74;
    }
    if (v7 == 1 || (BYTE1(result) - 48) > 9u) {
      goto LABEL_33;
    }
    uint64_t v11 = (BYTE1(result) - 48);
    if (v7 != 2)
    {
      if ((BYTE2(result) - 48) > 9u) {
        goto LABEL_33;
      }
      uint64_t v11 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
      uint64_t v15 = v7 - 3;
      if (v15)
      {
        unint64_t v16 = (unsigned __int8 *)v45 + 3;
        while (1)
        {
          unsigned int v17 = *v16 - 48;
          if (v17 > 9) {
            goto LABEL_33;
          }
          uint64_t v18 = 10 * v11;
          if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63) {
            goto LABEL_33;
          }
          uint64_t v11 = v18 + v17;
          if (__OFADD__(v18, v17)) {
            goto LABEL_33;
          }
          char v13 = 0;
          ++v16;
          if (!--v15) {
            goto LABEL_46;
          }
        }
      }
    }
LABEL_45:
    char v13 = 0;
    goto LABEL_46;
  }
  if (result != 45)
  {
    if (!v7 || (result - 48) > 9u) {
      goto LABEL_33;
    }
    uint64_t v11 = (result - 48);
    if (v7 != 1)
    {
      if ((BYTE1(result) - 48) > 9u) {
        goto LABEL_33;
      }
      uint64_t v11 = 10 * (result - 48) + (BYTE1(result) - 48);
      uint64_t v19 = v7 - 2;
      if (v19)
      {
        char v20 = (unsigned __int8 *)v45 + 2;
        while (1)
        {
          unsigned int v21 = *v20 - 48;
          if (v21 > 9) {
            goto LABEL_33;
          }
          uint64_t v22 = 10 * v11;
          if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63) {
            goto LABEL_33;
          }
          uint64_t v11 = v22 + v21;
          if (__OFADD__(v22, v21)) {
            goto LABEL_33;
          }
          char v13 = 0;
          ++v20;
          if (!--v19) {
            goto LABEL_46;
          }
        }
      }
    }
    goto LABEL_45;
  }
  if (v7)
  {
    if (v7 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      if (v7 == 2)
      {
        char v13 = 0;
        uint64_t v11 = -(uint64_t)(BYTE1(result) - 48);
        goto LABEL_46;
      }
      if ((BYTE2(result) - 48) <= 9u)
      {
        uint64_t v11 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
        uint64_t v23 = v7 - 3;
        if (!v23) {
          goto LABEL_45;
        }
        Swift::String v41 = (unsigned __int8 *)v45 + 3;
        while (1)
        {
          unsigned int v42 = *v41 - 48;
          if (v42 > 9) {
            break;
          }
          uint64_t v43 = 10 * v11;
          if ((unsigned __int128)(v11 * (__int128)10) >> 64 != (10 * v11) >> 63) {
            break;
          }
          uint64_t v11 = v43 - v42;
          if (__OFSUB__(v43, v42)) {
            break;
          }
          char v13 = 0;
          ++v41;
          if (!--v23) {
            goto LABEL_46;
          }
        }
      }
    }
LABEL_33:
    uint64_t v11 = 0;
    char v13 = 1;
    goto LABEL_46;
  }
  __break(1u);
LABEL_74:
  __break(1u);
  return result;
}

uint64_t destroy for SDTempPairingTXTRecord(void *a1)
{
  swift_bridgeObjectRelease();
  sub_100250CC4(a1[2], a1[3]);
  uint64_t v2 = a1[4];
  unint64_t v3 = a1[5];

  return sub_100250CC4(v2, v3);
}

void *initializeWithCopy for SDTempPairingTXTRecord(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  swift_bridgeObjectRetain();
  sub_10025ADCC(v5, v6);
  a1[2] = v5;
  a1[3] = v6;
  uint64_t v8 = a2[4];
  unint64_t v7 = a2[5];
  sub_10025ADCC(v8, v7);
  a1[4] = v8;
  a1[5] = v7;
  return a1;
}

void *assignWithCopy for SDTempPairingTXTRecord(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  sub_10025ADCC(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  a1[2] = v4;
  a1[3] = v5;
  sub_100250CC4(v6, v7);
  uint64_t v9 = a2[4];
  unint64_t v8 = a2[5];
  sub_10025ADCC(v9, v8);
  uint64_t v10 = a1[4];
  unint64_t v11 = a1[5];
  a1[4] = v9;
  a1[5] = v8;
  sub_100250CC4(v10, v11);
  return a1;
}

void *assignWithTake for SDTempPairingTXTRecord(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a1[2];
  unint64_t v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_100250CC4(v5, v6);
  uint64_t v7 = a1[4];
  unint64_t v8 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  sub_100250CC4(v7, v8);
  return a1;
}

ValueMetadata *type metadata accessor for SDTempPairingTXTRecord()
{
  return &type metadata for SDTempPairingTXTRecord;
}

unsigned char *storeEnumTagSinglePayload for SharingFeatureFlags(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004BF640);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharingFeatureFlags()
{
  return &type metadata for SharingFeatureFlags;
}

unint64_t sub_1004BF67C()
{
  unint64_t result = qword_100976290;
  if (!qword_100976290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100976290);
  }
  return result;
}

const char *sub_1004BF6D0(char a1)
{
  unint64_t result = "AirTag_PRX";
  switch(a1)
  {
    case 1:
      unint64_t result = "HomePodUseAMS";
      break;
    case 2:
      unint64_t result = "HomePodUseAMSEarly";
      break;
    case 3:
      unint64_t result = "Headphone_PRX";
      break;
    case 4:
      unint64_t result = "headphones_prox_upsell_supported";
      break;
    case 5:
      unint64_t result = "marketing_upsell_use_sharing_config";
      break;
    case 6:
      unint64_t result = "ProductKitAssets";
      break;
    case 7:
      unint64_t result = "DigitalEngraving";
      break;
    case 8:
      unint64_t result = "auto_unlock_ipad_as_realitydevice";
      break;
    default:
      return result;
  }
  return result;
}

const char *sub_1004BF7B8()
{
  return "Sharing";
}

const char *sub_1004BF7CC()
{
  return sub_1004BF6D0(*v0);
}

void *_s10AKSSessionVwCP(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t _s10AKSSessionVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s10AKSSessionVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

ValueMetadata *_s10AKSSessionVMa()
{
  return &_s10AKSSessionVN;
}

uint64_t sub_1004BF850(uint64_t a1, unint64_t a2)
{
  __src = 0;
  if (a2 >> 60 == 15) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = a1;
  }
  if (a2 >> 60 == 15) {
    unint64_t v3 = 0xC000000000000000;
  }
  else {
    unint64_t v3 = a2;
  }
  switch(v3 >> 62)
  {
    case 1uLL:
      if (v2 >> 32 < (int)v2)
      {
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
      }
      sub_100278C78(a1, a2);
      sub_10025ADCC(v2, v3);
      if (__DataStorage._bytes.getter() && __OFSUB__((int)v2, __DataStorage._offset.getter())) {
        goto LABEL_27;
      }
      __DataStorage._length.getter();
      int v4 = aks_remote_session_step();
      sub_100250CC4(v2, v3);
LABEL_19:
      if (qword_100969E98 != -1) {
        swift_once();
      }
      uint64_t v7 = type metadata accessor for Logger();
      sub_10000B47C(v7, (uint64_t)qword_100976298);
      unint64_t v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = swift_slowAlloc();
        v15[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v10 = 67109378;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v10 + 8) = 2080;
        uint64_t v11 = sub_1004C00B0();
        sub_100254634(v11, v12, v15);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "AKS step ret: %d %s", (uint8_t *)v10, 0x12u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      uint64_t v13 = sub_1004C01C0(v4, __src, 0, 0xD000000000000021, 0x80000001007BEF90);
      sub_100250CC4(v2, v3);
      return v13;
    case 2uLL:
      uint64_t v5 = *(void *)(v2 + 16);
      uint64_t v6 = *(void *)(v2 + 24);
      sub_100278C78(a1, a2);
      swift_retain();
      swift_retain();
      if (__DataStorage._bytes.getter() && __OFSUB__(v5, __DataStorage._offset.getter())) {
        goto LABEL_26;
      }
      if (__OFSUB__(v6, v5)) {
        goto LABEL_25;
      }
      __DataStorage._length.getter();
      int v4 = aks_remote_session_step();
      swift_release();
      swift_release();
      goto LABEL_19;
    case 3uLL:
      memset(v15, 0, 14);
      sub_100278C78(a1, a2);
      goto LABEL_18;
    default:
      v15[0] = v2;
      LOWORD(v15[1]) = v3;
      BYTE2(v15[1]) = BYTE2(v3);
      BYTE3(v15[1]) = BYTE3(v3);
      BYTE4(v15[1]) = BYTE4(v3);
      BYTE5(v15[1]) = BYTE5(v3);
      sub_100278C78(a1, a2);
LABEL_18:
      int v4 = aks_remote_session_step();
      goto LABEL_19;
  }
}

uint64_t sub_1004BFC9C(uint64_t a1, unint64_t a2)
{
  unint64_t v3 = a2 >> 60;
  if (a2 >> 60 == 15) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = a1;
  }
  if (a2 >> 60 == 15) {
    unint64_t v5 = 0xC000000000000000;
  }
  else {
    unint64_t v5 = a2;
  }
  switch(v5 >> 62)
  {
    case 1uLL:
      if (v4 >> 32 < (int)v4)
      {
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
      }
      sub_100278C78(a1, a2);
      sub_10025ADCC(v4, v5);
      if (__DataStorage._bytes.getter() && __OFSUB__((int)v4, __DataStorage._offset.getter())) {
        goto LABEL_32;
      }
      __DataStorage._length.getter();
      int v6 = aks_remote_peer_setup();
      sub_100250CC4(v4, v5);
LABEL_17:
      if (v6 == -536870194)
      {
        sub_10024D280();
        swift_allocError();
        *(_DWORD *)uint64_t v9 = 23;
        *(void *)(v9 + 8) = 0xD000000000000015;
        *(void *)(v9 + 16) = 0x80000001007BF000;
        swift_willThrow();
      }
      else
      {
        if (v3 <= 0xE) {
          uint64_t v10 = 0xD000000000000019;
        }
        else {
          uint64_t v10 = 0xD00000000000001FLL;
        }
        if (v3 <= 0xE) {
          unint64_t v11 = 0x80000001007BEFC0;
        }
        else {
          unint64_t v11 = 0x80000001007BEFE0;
        }
        uint64_t v12 = sub_1004C01C0(v6, 0, 0, v10, v11);
        if (!v2) {
          sub_100250CB0(v12, v13);
        }
        swift_bridgeObjectRelease();
      }
      return sub_100250CC4(v4, v5);
    case 2uLL:
      uint64_t v7 = *(void *)(v4 + 16);
      uint64_t v8 = *(void *)(v4 + 24);
      sub_100278C78(a1, a2);
      swift_retain();
      swift_retain();
      if (__DataStorage._bytes.getter() && __OFSUB__(v7, __DataStorage._offset.getter())) {
        goto LABEL_31;
      }
      if (__OFSUB__(v8, v7)) {
        goto LABEL_30;
      }
      __DataStorage._length.getter();
      int v6 = aks_remote_peer_setup();
      swift_release();
      swift_release();
      goto LABEL_17;
    default:
      sub_100278C78(a1, a2);
      int v6 = aks_remote_peer_setup();
      goto LABEL_17;
  }
}

uint64_t sub_1004BFFE8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100976298);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100976298);
  if (qword_100969CD8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946D8);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1004C00B0()
{
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease();
  strcpy((char *)v4, "AKSSession id=");
  v0._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  v1._uint64_t countAndFlagsBits = 0x67616279656B202CLL;
  v1._unint64_t object = (void *)0xEF3D656C646E6148;
  String.append(_:)(v1);
  v2._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  return v4[0];
}

uint64_t sub_1004C01B8()
{
  return sub_1004C00B0();
}

uint64_t sub_1004C01C0(int a1, unsigned char *__src, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a1)
  {
    if (qword_100969E98 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000B47C(v8, (uint64_t)qword_100976298);
    swift_bridgeObjectRetain_n();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_100254634(a4, a5, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v11 + 12) = 1024;
      LODWORD(v21) = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s, AKS errCode: %d", (uint8_t *)v11, 0x12u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v19 = a4;
    unint64_t v20 = a5;
    swift_bridgeObjectRetain();
    v14._uint64_t countAndFlagsBits = 0x646F43727265202CLL;
    v14._unint64_t object = (void *)0xEB00000000203A65;
    String.append(_:)(v14);
    LODWORD(v21) = a1;
    v15._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    uint64_t v13 = v19;
    unint64_t v16 = v20;
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v17 = 10;
    *(void *)(v17 + 8) = v13;
    *(void *)(v17 + 16) = v16;
    swift_willThrow();
  }
  else
  {
    uint64_t v13 = 0;
    if (__src && a3 >= 1)
    {
      uint64_t v13 = sub_1004EC700(__src, a3);
      free(__src);
    }
  }
  return v13;
}

uint64_t sub_1004C0470()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_1009762B0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_1009762B0);
  if (qword_100969C48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994528);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1004C0538(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1004C6E80();
  unint64_t v5 = sub_10024AD34();

  return Error<>._code.getter(a1, a2, v4, v5);
}

uint64_t sub_1004C0590(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  return a3(1);
}

uint64_t sub_1004C05BC()
{
  if (qword_100969EA0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_1009762B0);
  swift_retain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)unint64_t v3 = 136315138;
    uint64_t v8 = v4;
    type metadata accessor for NWConnection();
    swift_retain();
    uint64_t v5 = String.init<A>(describing:)();
    sub_100254634(v5, v6, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Starting connection: %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  NWConnection.stateUpdateHandler.setter();
  swift_release();
  return NWConnection.start(queue:)();
}

uint64_t sub_1004C07F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[20] = a3;
  v4[21] = v3;
  v4[18] = a1;
  v4[19] = a2;
  uint64_t v5 = type metadata accessor for UUID();
  v4[22] = v5;
  v4[23] = *(void *)(v5 - 8);
  v4[24] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v4[25] = static AirDropActor.shared;
  return _swift_task_switch(sub_1004C08F4, v6, 0);
}

uint64_t sub_1004C08F4()
{
  uint64_t v1 = *(void **)(v0[21] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_temporaryIdentity);
  id v2 = [v1 identifier];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v8 = v0[23];
    uint64_t v7 = v0[24];
    uint64_t v9 = v0[22];
    UUID.init()();
    uint64_t v4 = UUID.uuidString.getter();
    uint64_t v6 = v10;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  v0[26] = v6;
  id v11 = [v1 deviceIRKData];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;

    v0[27] = v13;
    v0[28] = v15;
    id v16 = [v1 edPKData];
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t v18 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v20 = v19;

      v0[29] = v18;
      v0[30] = v20;
      swift_bridgeObjectRetain();
      sub_10025ADCC(v18, v20);
      sub_10025ADCC(v13, v15);
      if (qword_100969EA0 != -1) {
        swift_once();
      }
      uint64_t v36 = v4;
      uint64_t v21 = type metadata accessor for Logger();
      v0[31] = sub_10000B47C(v21, (uint64_t)qword_1009762B0);
      uint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "Sending pairing request", v24, 2u);
        swift_slowDealloc();
      }
      uint64_t v25 = v0[20];
      uint64_t v26 = v0[21];
      uint64_t v27 = v0[19];

      v0[32] = *(void *)(v26 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_connection);
      v0[14] = &type metadata for SDTempPairingMessage.Request;
      v0[15] = sub_1004C5798();
      uint64_t v28 = (void *)swift_allocObject();
      v0[11] = v28;
      v28[2] = 1;
      v28[3] = v27;
      v28[4] = v25;
      v28[5] = v36;
      v28[6] = v6;
      v28[7] = v18;
      v28[8] = v20;
      v28[9] = v13;
      v28[10] = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10025ADCC(v18, v20);
      sub_10025ADCC(v13, v15);
      unint64_t v29 = (void *)swift_task_alloc();
      v0[33] = v29;
      void *v29 = v0;
      v29[1] = sub_1004C0DB8;
      return sub_1006ABD8C((uint64_t)(v0 + 11));
    }
    swift_bridgeObjectRelease();
    uint64_t v33 = type metadata accessor for SFError();
    sub_100443EE4();
    swift_allocError();
    void *v34 = 0x617461444B506465;
    v34[1] = 0xE800000000000000;
    void v34[2] = 0xD00000000000005ELL;
    v34[3] = 0x80000001007BF0F0;
    v34[4] = 83;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v33 - 8) + 104))(v34, enum case for SFError.missingValue(_:), v33);
    swift_willThrow();
    sub_100250CC4(v13, v15);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v31 = type metadata accessor for SFError();
    sub_100443EE4();
    swift_allocError();
    strcpy(v32, "deviceIRKData");
    *((_WORD *)v32 + 7) = -4864;
    *((void *)v32 + 2) = 0xD00000000000005ELL;
    *((void *)v32 + 3) = 0x80000001007BF0F0;
    *((void *)v32 + 4) = 79;
    (*(void (**)(char *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v32, enum case for SFError.missingValue(_:), v31);
    swift_willThrow();
  }
  swift_task_dealloc();
  uint64_t v35 = (uint64_t (*)(void))v0[1];
  return v35();
}

uint64_t sub_1004C0DB8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 272) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 200);
    uint64_t v4 = sub_1004C1C14;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 200);
    sub_10024D338(v2 + 88);
    uint64_t v4 = sub_1004C0EE0;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1004C0EE0()
{
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Sent pairing request, waiting for response", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1004C0FE8;
  return sub_1006613B8();
}

uint64_t sub_1004C0FE8(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  swift_task_dealloc();
  if (v1)
  {
    v4[40] = v1;
    uint64_t v6 = v4[25];
    return _swift_task_switch(sub_1004C19B8, v6, 0);
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    v4[36] = v7;
    *uint64_t v7 = v5;
    v7[1] = sub_1004C1170;
    return sub_1006617F4(a1, 0x20000);
  }
}

uint64_t sub_1004C1170(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[37] = a1;
  v4[38] = a2;
  v4[39] = v2;
  swift_task_dealloc();
  if (v2)
  {
    v4[40] = v2;
    uint64_t v5 = v4[25];
    uint64_t v6 = sub_1004C19B8;
  }
  else
  {
    uint64_t v6 = sub_1004C12A4;
    uint64_t v5 = 0;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1004C12A4()
{
  uint64_t v1 = v0[39];
  sub_1006AB944();
  uint64_t v2 = v0[37];
  unint64_t v3 = v0[38];
  if (v1)
  {
    sub_100250CC4(v2, v3);
    v0[40] = v1;
    uint64_t v4 = v0[25];
    uint64_t v5 = sub_1004C19B8;
  }
  else
  {
    uint64_t v6 = v0[25];
    sub_100250CC4(v2, v3);
    uint64_t v5 = sub_1004C134C;
    uint64_t v4 = v6;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_1004C134C()
{
  uint64_t v58 = v0;
  uint64_t v1 = *(void *)(v0 + 24);
  char v2 = *(unsigned char *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 56);
  unint64_t v6 = *(void *)(v0 + 64);
  unint64_t v53 = *(void *)(v0 + 80);
  uint64_t v55 = *(void *)(v0 + 72);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Received pairing response", v9, 2u);
    swift_slowDealloc();
  }

  if (v2)
  {
    uint64_t v10 = *(void *)(v0 + 144);
    uint64_t v11 = v10 + *(int *)(type metadata accessor for SDTempPairingEndpoint(0) + 20);
    if (sub_10031C480(*(void *)(v11 + 16), *(void *)(v11 + 24), v5, v6))
    {
      uint64_t v12 = *(void *)(v0 + 168);
      uint64_t v13 = (void *)sub_1004C583C(v3, v4, *(void *)v11, *(void *)(v11 + 8), v55, v53, v5, v6);
      uint64_t v46 = v5;
      unint64_t v49 = v6;
      unint64_t v14 = *(void (**)(void *))(v12 + 24);
      uint64_t v16 = *(void *)(v0 + 232);
      unint64_t v15 = *(void *)(v0 + 240);
      uint64_t v18 = *(void *)(v0 + 216);
      unint64_t v17 = *(void *)(v0 + 224);
      if (v14)
      {
        swift_retain();
        v14(v13);
        sub_100250CC4(v16, v15);
        sub_100250CC4(v18, v17);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100250CC4(v16, v15);
        sub_100250CC4(v18, v17);
        sub_1002CA430((uint64_t)v14);
      }
      else
      {
        sub_100250CC4(*(void *)(v0 + 232), *(void *)(v0 + 240));
        sub_100250CC4(v18, v17);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100250CC4(v16, v15);
        sub_100250CC4(v18, v17);
      }

      swift_bridgeObjectRelease();
      sub_100250CC4(v46, v49);
      sub_100250CC4(v55, v53);
      goto LABEL_15;
    }
    uint64_t v29 = *(void *)(v0 + 232);
    unint64_t v30 = *(void *)(v0 + 224);
    unint64_t v48 = *(void *)(v0 + 240);
    uint64_t v51 = *(void *)(v0 + 216);
    uint64_t v31 = type metadata accessor for SFError();
    sub_100443EE4();
    uint64_t v21 = swift_allocError();
    *uint64_t v32 = 0xD000000000000018;
    v32[1] = 0x80000001007BF150;
    v32[2] = 0xD00000000000005ELL;
    void v32[3] = 0x80000001007BF0F0;
    v32[4] = 103;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v32, enum case for SFError.unexpected(_:), v31);
    swift_willThrow();
    swift_bridgeObjectRelease();
    sub_100250CC4(v5, v6);
    sub_100250CC4(v55, v53);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100250CC4(v29, v48);
    uint64_t v27 = v51;
    unint64_t v28 = v30;
  }
  else
  {
    uint64_t v43 = *(void *)(v0 + 232);
    unint64_t v44 = *(void *)(v0 + 240);
    uint64_t v45 = *(void *)(v0 + 216);
    unint64_t v47 = *(void *)(v0 + 224);
    unint64_t v50 = v6;
    BOOL v19 = v1 != 0;
    uint64_t v20 = type metadata accessor for SFError();
    sub_100443EE4();
    uint64_t v21 = swift_allocError();
    uint64_t v22 = v5;
    uint64_t v24 = v23;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    uint64_t v56 = 0xD00000000000001ALL;
    unint64_t v57 = 0x80000001007BF170;
    *(unsigned char *)(v0 + 328) = v19;
    sub_10000A844(&qword_100976490);
    v25._uint64_t countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v25);
    swift_bridgeObjectRelease();
    unint64_t v26 = v57;
    void *v24 = v56;
    v24[1] = v26;
    v24[2] = 0xD00000000000005ELL;
    v24[3] = 0x80000001007BF0F0;
    v24[4] = 101;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v24, enum case for SFError.unexpected(_:), v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    sub_100250CC4(v22, v50);
    sub_100250CC4(v55, v53);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100250CC4(v43, v44);
    uint64_t v27 = v45;
    unint64_t v28 = v47;
  }
  sub_100250CC4(v27, v28);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.error.getter();
  BOOL v35 = os_log_type_enabled(v33, v34);
  uint64_t v37 = *(void *)(v0 + 216);
  unint64_t v36 = *(void *)(v0 + 224);
  if (v35)
  {
    unint64_t v54 = *(void *)(v0 + 240);
    uint64_t v52 = *(void *)(v0 + 232);
    unint64_t v38 = (uint8_t *)swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    *(_DWORD *)unint64_t v38 = 136315138;
    *(void *)(v0 + 128) = v21;
    swift_errorRetain();
    sub_10000A844(&qword_10096BAF0);
    uint64_t v39 = String.init<A>(describing:)();
    *(void *)(v0 + 136) = sub_100254634(v39, v40, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Failed to exchange temporary identity: %s", v38, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    sub_100250CC4(v37, v36);
    sub_100250CC4(v52, v54);
  }
  else
  {
    sub_100250CC4(*(void *)(v0 + 232), *(void *)(v0 + 240));
    sub_100250CC4(v37, v36);
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
LABEL_15:
  swift_task_dealloc();
  Swift::String v41 = *(uint64_t (**)(void))(v0 + 8);
  return v41();
}

uint64_t sub_1004C19B8()
{
  uint64_t v21 = v0;
  uint64_t v1 = v0[29];
  unint64_t v2 = v0[30];
  uint64_t v4 = v0[27];
  unint64_t v3 = v0[28];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CC4(v1, v2);
  sub_100250CC4(v4, v3);
  uint64_t v5 = v0[40];
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v18 = v0[29];
    unint64_t v19 = v0[30];
    uint64_t v8 = v0[27];
    unint64_t v17 = v0[28];
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v20 = v10;
    v0[16] = v5;
    swift_errorRetain();
    sub_10000A844(&qword_10096BAF0);
    uint64_t v11 = String.init<A>(describing:)();
    v0[17] = sub_100254634(v11, v12, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to exchange temporary identity: %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    sub_100250CC4(v8, v17);
    sub_100250CC4(v18, v19);
  }
  else
  {
    uint64_t v14 = v0[27];
    unint64_t v13 = v0[28];
    sub_100250CC4(v0[29], v0[30]);
    sub_100250CC4(v14, v13);
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  unint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1004C1C14()
{
  uint64_t v21 = v0;
  uint64_t v2 = v0[29];
  unint64_t v1 = v0[30];
  uint64_t v4 = v0[27];
  unint64_t v3 = v0[28];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CC4(v2, v1);
  sub_100250CC4(v4, v3);
  sub_10024D338((uint64_t)(v0 + 11));
  uint64_t v5 = v0[34];
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v18 = v0[29];
    unint64_t v19 = v0[30];
    uint64_t v8 = v0[27];
    unint64_t v17 = v0[28];
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v20 = v10;
    v0[16] = v5;
    swift_errorRetain();
    sub_10000A844(&qword_10096BAF0);
    uint64_t v11 = String.init<A>(describing:)();
    v0[17] = sub_100254634(v11, v12, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to exchange temporary identity: %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    sub_100250CC4(v8, v17);
    sub_100250CC4(v18, v19);
  }
  else
  {
    uint64_t v14 = v0[27];
    unint64_t v13 = v0[28];
    sub_100250CC4(v0[29], v0[30]);
    sub_100250CC4(v14, v13);
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  unint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1004C1E7C()
{
  v1[18] = v0;
  uint64_t v2 = type metadata accessor for UUID();
  v1[19] = v2;
  v1[20] = *(void *)(v2 - 8);
  v1[21] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v3 = static AirDropActor.shared;
  v1[22] = static AirDropActor.shared;
  return _swift_task_switch(sub_1004C1F78, v3, 0);
}

uint64_t sub_1004C1F78()
{
  unint64_t v1 = *(void **)(v0[18] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_temporaryIdentity);
  id v2 = [v1 identifier];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v8 = v0[20];
    uint64_t v7 = v0[21];
    uint64_t v9 = v0[19];
    UUID.init()();
    uint64_t v4 = UUID.uuidString.getter();
    uint64_t v6 = v10;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  v0[23] = v6;
  v0[24] = v4;
  id v11 = [v1 deviceIRKData];
  if (v11)
  {
    unint64_t v12 = v11;
    uint64_t v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;

    v0[25] = v13;
    v0[26] = v15;
    id v16 = [v1 edPKData];
    if (v16)
    {
      unint64_t v17 = v16;
      uint64_t v18 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = v19;

      v0[27] = v18;
      v0[28] = v20;
      if (qword_100969EA0 != -1) {
        swift_once();
      }
      uint64_t v21 = type metadata accessor for Logger();
      v0[29] = sub_10000B47C(v21, (uint64_t)qword_1009762B0);
      uint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "Waiting for pairing request", v24, 2u);
        swift_slowDealloc();
      }
      uint64_t v25 = v0[18];

      v0[30] = *(void *)(v25 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_connection);
      unint64_t v26 = (void *)swift_task_alloc();
      v0[31] = v26;
      *unint64_t v26 = v0;
      v26[1] = sub_1004C2390;
      return sub_1006613B8();
    }
    swift_bridgeObjectRelease();
    uint64_t v30 = type metadata accessor for SFError();
    sub_100443EE4();
    swift_allocError();
    *uint64_t v31 = 0x617461444B506465;
    v31[1] = 0xE800000000000000;
    void v31[2] = 0xD00000000000005ELL;
    v31[3] = 0x80000001007BF0F0;
    v31[4] = 123;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v31, enum case for SFError.missingValue(_:), v30);
    swift_willThrow();
    sub_100250CC4(v13, v15);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = type metadata accessor for SFError();
    sub_100443EE4();
    swift_allocError();
    strcpy(v29, "deviceIRKData");
    *((_WORD *)v29 + 7) = -4864;
    *((void *)v29 + 2) = 0xD00000000000005ELL;
    *((void *)v29 + 3) = 0x80000001007BF0F0;
    *((void *)v29 + 4) = 119;
    (*(void (**)(char *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v29, enum case for SFError.missingValue(_:), v28);
    swift_willThrow();
  }
  swift_task_dealloc();
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_1004C2390(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  swift_task_dealloc();
  if (v1)
  {
    v4[44] = v1;
    uint64_t v6 = v4[22];
    swift_bridgeObjectRelease();
    return _swift_task_switch(sub_1004C2954, v6, 0);
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    v4[32] = v7;
    *uint64_t v7 = v5;
    v7[1] = sub_1004C2520;
    return sub_1006617F4(a1, 0x20000);
  }
}

uint64_t sub_1004C2520(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[33] = a1;
  v4[34] = a2;
  v4[35] = v2;
  swift_task_dealloc();
  if (v2)
  {
    v4[44] = v2;
    uint64_t v5 = v4[22];
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_1004C2954;
    uint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = sub_1004C265C;
    uint64_t v7 = 0;
  }
  return _swift_task_switch(v6, v7, 0);
}

uint64_t sub_1004C265C()
{
  uint64_t v1 = v0[35];
  sub_1006ABB68();
  uint64_t v2 = v0[33];
  unint64_t v3 = v0[34];
  if (v1)
  {
    sub_100250CC4(v2, v3);
    v0[44] = v1;
    uint64_t v4 = v0[22];
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1004C2954;
  }
  else
  {
    uint64_t v4 = v0[22];
    sub_100250CC4(v2, v3);
    uint64_t v5 = sub_1004C2704;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_1004C2704()
{
  *(void *)(v0 + 288) = *(void *)(v0 + 24);
  *(_OWORD *)(v0 + 296) = *(_OWORD *)(v0 + 32);
  *(void *)(v0 + 312) = *(void *)(v0 + 48);
  long long v1 = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v0 + 336) = v1;
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Received pairing request", v4, 2u);
    swift_slowDealloc();
  }
  unint64_t v5 = *(void *)(v0 + 224);
  unint64_t v7 = *(void *)(v0 + 208);
  uint64_t v6 = *(void *)(v0 + 216);
  uint64_t v8 = *(void *)(v0 + 200);

  sub_10025ADCC(v6, v5);
  sub_10025ADCC(v8, v7);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Sending pairing response", v11, 2u);
    swift_slowDealloc();
  }
  uint64_t v13 = *(void *)(v0 + 216);
  unint64_t v12 = *(void *)(v0 + 224);
  uint64_t v15 = *(void *)(v0 + 200);
  unint64_t v14 = *(void *)(v0 + 208);
  uint64_t v16 = *(void *)(v0 + 184);
  uint64_t v17 = *(void *)(v0 + 192);

  *(void *)(v0 + 112) = &type metadata for SDTempPairingMessage.Response;
  *(void *)(v0 + 120) = sub_1004C5ADC();
  uint64_t v18 = swift_allocObject();
  *(void *)(v0 + 88) = v18;
  *(_OWORD *)(v18 + 16) = xmmword_100779910;
  *(unsigned char *)(v18 + 32) = 1;
  *(void *)(v18 + 40) = v17;
  *(void *)(v18 + 48) = v16;
  *(void *)(v18 + 56) = v13;
  *(void *)(v18 + 64) = v12;
  *(void *)(v18 + 72) = v15;
  *(void *)(v18 + 80) = v14;
  swift_bridgeObjectRetain();
  sub_10025ADCC(v13, v12);
  sub_10025ADCC(v15, v14);
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 360) = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_1004C2B84;
  return sub_1006ABD8C(v0 + 88);
}

uint64_t sub_1004C2954()
{
  uint64_t v20 = v0;
  long long v1 = v0;
  uint64_t v2 = v0[44];
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v17 = v0[27];
    unint64_t v18 = v0[28];
    uint64_t v5 = v0[25];
    unint64_t v16 = v0[26];
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v19 = v7;
    v0[16] = v2;
    swift_errorRetain();
    sub_10000A844(&qword_10096BAF0);
    uint64_t v8 = String.init<A>(describing:)();
    v0[17] = sub_100254634(v8, v9, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to exchange temporary identity: %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_100250CC4(v5, v16);
    sub_100250CC4(v17, v18);
    swift_errorRelease();
  }
  else
  {
    uint64_t v10 = v0[27];
    unint64_t v11 = v0[28];
    uint64_t v12 = v0[25];
    unint64_t v13 = v0[26];
    sub_100250CC4(v10, v11);
    sub_100250CC4(v12, v13);
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  unint64_t v14 = (uint64_t (*)(void))v1[1];
  return v14();
}

uint64_t sub_1004C2B84()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 368) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 176);
    os_log_type_t v4 = sub_1004C2EE4;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 176);
    sub_10024D338(v2 + 88);
    os_log_type_t v4 = sub_1004C2CAC;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1004C2CAC()
{
  long long v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Sent pairing response", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[42];
  uint64_t v4 = v0[43];
  uint64_t v7 = v0[40];
  uint64_t v6 = v0[41];
  uint64_t v9 = v0[38];
  uint64_t v8 = v0[39];
  uint64_t v11 = v0[36];
  uint64_t v10 = v0[37];
  uint64_t v12 = v1;
  uint64_t v13 = v0[18];

  unint64_t v14 = (void *)sub_1004C583C(v9, v8, v11, v10, v5, v4, v7, v6);
  uint64_t v15 = *(void (**)(void *))(v13 + 24);
  uint64_t v17 = v0[42];
  unint64_t v16 = v0[43];
  uint64_t v24 = v0[40];
  unint64_t v25 = v0[41];
  uint64_t v19 = v0[27];
  unint64_t v18 = v0[28];
  uint64_t v20 = v0[25];
  unint64_t v21 = v0[26];
  if (v15)
  {
    swift_retain();
    v15(v14);
    sub_100250CC4(v19, v18);
    sub_100250CC4(v20, v21);
    swift_bridgeObjectRelease();
    sub_100250CC4(v19, v18);
    sub_100250CC4(v20, v21);
    sub_1002CA430((uint64_t)v15);
  }
  else
  {
    sub_100250CC4(v0[27], v0[28]);
    sub_100250CC4(v20, v21);
    swift_bridgeObjectRelease();
    sub_100250CC4(v19, v18);
    sub_100250CC4(v20, v21);
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CC4(v24, v25);
  sub_100250CC4(v17, v16);
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_1004C2EE4()
{
  unint64_t v25 = v0;
  uint64_t v1 = v0[42];
  unint64_t v21 = v0[43];
  uint64_t v3 = v0[40];
  unint64_t v2 = v0[41];
  uint64_t v5 = v0[27];
  unint64_t v4 = v0[28];
  uint64_t v7 = v0[25];
  unint64_t v6 = v0[26];
  swift_bridgeObjectRelease();
  sub_100250CC4(v5, v4);
  sub_100250CC4(v7, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CC4(v3, v2);
  sub_100250CC4(v1, v21);
  sub_10024D338((uint64_t)(v0 + 11));
  uint64_t v8 = v0[46];
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v22 = v0[27];
    unint64_t v23 = v0[28];
    uint64_t v11 = v0[25];
    unint64_t v20 = v0[26];
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v24 = v13;
    v0[16] = v8;
    swift_errorRetain();
    sub_10000A844(&qword_10096BAF0);
    uint64_t v14 = String.init<A>(describing:)();
    v0[17] = sub_100254634(v14, v15, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to exchange temporary identity: %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_100250CC4(v11, v20);
    sub_100250CC4(v22, v23);
    swift_errorRelease();
  }
  else
  {
    uint64_t v17 = v0[25];
    unint64_t v16 = v0[26];
    sub_100250CC4(v0[27], v0[28]);
    sub_100250CC4(v17, v16);
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  unint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_1004C317C(uint64_t a1)
{
  uint64_t v35 = a1;
  uint64_t v1 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for NWConnection.State();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)v30 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v30 - v12;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v34 = result;
    if (qword_100969EA0 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10000B47C(v15, (uint64_t)qword_1009762B0);
    unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v16(v13, v35, v4);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v33 = v3;
      unint64_t v20 = (uint8_t *)v19;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v31 = v8;
      uint64_t v37 = v21;
      uint64_t v32 = v5;
      *(_DWORD *)unint64_t v20 = 136315138;
      v30[1] = v20 + 4;
      v16(v11, (uint64_t)v13, v4);
      uint64_t v22 = String.init<A>(describing:)();
      uint64_t v36 = sub_100254634(v22, v23, &v37);
      uint64_t v5 = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
      v24(v13, v4);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Connection state changed to %s", v20, 0xCu);
      swift_arrayDestroy();
      uint64_t v8 = v31;
      swift_slowDealloc();
      uint64_t v3 = v33;
      swift_slowDealloc();
    }
    else
    {
      uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
      v24(v13, v4);
    }

    v16(v8, v35, v4);
    int v25 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
    if (v25 == enum case for NWConnection.State.waiting(_:)
      || (int v26 = v25, v25 == enum case for NWConnection.State.failed(_:)))
    {
      swift_release();
      return ((uint64_t (*)(char *, uint64_t))v24)(v8, v4);
    }
    if (v25 == enum case for NWConnection.State.setup(_:) || v25 == enum case for NWConnection.State.preparing(_:)) {
      return swift_release();
    }
    if (v25 == enum case for NWConnection.State.ready(_:))
    {
      uint64_t v27 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v3, 1, 1, v27);
      uint64_t v28 = (void *)swift_allocObject();
      v28[2] = 0;
      v28[3] = 0;
      v28[4] = v34;
      sub_10028CFA8((uint64_t)v3, (uint64_t)&unk_100976470, (uint64_t)v28);
      return swift_release();
    }
    int v29 = enum case for NWConnection.State.cancelled(_:);
    uint64_t result = swift_release();
    if (v26 != v29) {
      return ((uint64_t (*)(char *, uint64_t))v24)(v8, v4);
    }
  }
  return result;
}

uint64_t sub_1004C3630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a4;
  type metadata accessor for SDTempPairingEndpoint(0);
  v4[4] = swift_task_alloc();
  v4[5] = type metadata accessor for SDTempPairingConnection.Role(0);
  v4[6] = swift_task_alloc();
  return _swift_task_switch(sub_1004C36F0, 0, 0);
}

uint64_t sub_1004C36F0()
{
  sub_1004C5588(v0[3] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_role, v0[6]);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v2 = v0[6];
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[10] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1004C3A20;
    return sub_1004C1E7C();
  }
  else
  {
    uint64_t v5 = v0[4];
    uint64_t v6 = (uint64_t *)(v2 + *(int *)(sub_10000A844((uint64_t *)&unk_100972880) + 48));
    uint64_t v7 = *v6;
    uint64_t v8 = v6[1];
    v0[7] = v8;
    sub_1003E6C7C(v2, v5);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[8] = v9;
    void *v9 = v0;
    v9[1] = sub_1004C3868;
    uint64_t v10 = v0[4];
    return sub_1004C07F4(v10, v7, v8);
  }
}

uint64_t sub_1004C3868()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_1004C3BA0;
  }
  else {
    uint64_t v2 = sub_1004C3998;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1004C3998()
{
  sub_1004C5604(*(void *)(v0 + 32), type metadata accessor for SDTempPairingEndpoint);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1004C3A20()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1004C3DCC;
  }
  else {
    uint64_t v2 = sub_1004C3B34;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1004C3B34()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1004C3BA0()
{
  sub_1004C5604(v0[4], type metadata accessor for SDTempPairingEndpoint);
  if (qword_100969EA0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_1009762B0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%@", v4, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1004C3DCC()
{
  if (qword_100969EA0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_1009762B0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%@", v4, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1004C3FDC()
{
  sub_1002CA430(*(void *)(v0 + 24));
  uint64_t v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_identifier;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1004C5604(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_role, type metadata accessor for SDTempPairingConnection.Role);

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1004C40D0()
{
  return type metadata accessor for SDTempPairingConnection(0);
}

uint64_t type metadata accessor for SDTempPairingConnection(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100976310);
}

uint64_t sub_1004C40F8()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SDTempPairingConnection.Role(319);
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t type metadata accessor for SDTempPairingConnection.Role(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100976430);
}

uint64_t *sub_1004C420C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_retain();
    }
    else
    {
      uint64_t v7 = type metadata accessor for NWEndpoint();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = *(int *)(type metadata accessor for SDTempPairingEndpoint(0) + 20);
      uint64_t v9 = (uint64_t *)((char *)a1 + v8);
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 8);
      void *v9 = *(uint64_t *)((char *)a2 + v8);
      v9[1] = v11;
      uint64_t v12 = *(uint64_t *)((char *)a2 + v8 + 16);
      unint64_t v13 = *(uint64_t *)((char *)a2 + v8 + 24);
      swift_bridgeObjectRetain();
      sub_10025ADCC(v12, v13);
      void v9[2] = v12;
      long long v9[3] = v13;
      uint64_t v14 = *((void *)v10 + 4);
      unint64_t v15 = *((void *)v10 + 5);
      sub_10025ADCC(v14, v15);
      v9[4] = v14;
      v9[5] = v15;
      uint64_t v16 = *(int *)(sub_10000A844((uint64_t *)&unk_100972880) + 48);
      uint64_t v17 = (uint64_t *)((char *)a1 + v16);
      os_log_type_t v18 = (uint64_t *)((char *)a2 + v16);
      uint64_t v19 = v18[1];
      *uint64_t v17 = *v18;
      v17[1] = v19;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1004C4388(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    return swift_release();
  }
  else
  {
    uint64_t v3 = type metadata accessor for NWEndpoint();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    uint64_t v4 = a1 + *(int *)(type metadata accessor for SDTempPairingEndpoint(0) + 20);
    swift_bridgeObjectRelease();
    sub_100250CC4(*(void *)(v4 + 16), *(void *)(v4 + 24));
    sub_100250CC4(*(void *)(v4 + 32), *(void *)(v4 + 40));
    sub_10000A844((uint64_t *)&unk_100972880);
    return swift_bridgeObjectRelease();
  }
}

void *sub_1004C445C(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    swift_retain();
  }
  else
  {
    uint64_t v4 = type metadata accessor for NWEndpoint();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    uint64_t v5 = *(int *)(type metadata accessor for SDTempPairingEndpoint(0) + 20);
    uint64_t v6 = (void *)((char *)a1 + v5);
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = *(void *)((char *)a2 + v5 + 8);
    *uint64_t v6 = *(void *)((char *)a2 + v5);
    v6[1] = v8;
    uint64_t v9 = *(void *)((char *)a2 + v5 + 16);
    unint64_t v10 = *(void *)((char *)a2 + v5 + 24);
    swift_bridgeObjectRetain();
    sub_10025ADCC(v9, v10);
    v6[2] = v9;
    v6[3] = v10;
    uint64_t v11 = *((void *)v7 + 4);
    unint64_t v12 = *((void *)v7 + 5);
    sub_10025ADCC(v11, v12);
    v6[4] = v11;
    v6[5] = v12;
    uint64_t v13 = *(int *)(sub_10000A844((uint64_t *)&unk_100972880) + 48);
    uint64_t v14 = (void *)((char *)a1 + v13);
    unint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1004C4588(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1004C5604((uint64_t)a1, type metadata accessor for SDTempPairingConnection.Role);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_retain();
    }
    else
    {
      uint64_t v4 = type metadata accessor for NWEndpoint();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = *(int *)(type metadata accessor for SDTempPairingEndpoint(0) + 20);
      uint64_t v6 = (void *)((char *)a1 + v5);
      uint64_t v7 = (char *)a2 + v5;
      *uint64_t v6 = *(void *)((char *)a2 + v5);
      v6[1] = *(void *)((char *)a2 + v5 + 8);
      uint64_t v8 = *(void *)((char *)a2 + v5 + 16);
      unint64_t v9 = *(void *)((char *)a2 + v5 + 24);
      swift_bridgeObjectRetain();
      sub_10025ADCC(v8, v9);
      v6[2] = v8;
      v6[3] = v9;
      uint64_t v10 = *((void *)v7 + 4);
      unint64_t v11 = *((void *)v7 + 5);
      sub_10025ADCC(v10, v11);
      v6[4] = v10;
      v6[5] = v11;
      uint64_t v12 = *(int *)(sub_10000A844((uint64_t *)&unk_100972880) + 48);
      uint64_t v13 = (void *)((char *)a1 + v12);
      uint64_t v14 = (void *)((char *)a2 + v12);
      *uint64_t v13 = *v14;
      v13[1] = v14[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1004C46E8(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for NWEndpoint();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = *(int *)(type metadata accessor for SDTempPairingEndpoint(0) + 20);
    uint64_t v8 = &a1[v7];
    unint64_t v9 = &a2[v7];
    long long v10 = *((_OWORD *)v9 + 1);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *((_OWORD *)v8 + 1) = v10;
    *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
    uint64_t v11 = sub_10000A844((uint64_t *)&unk_100972880);
    *(_OWORD *)&a1[*(int *)(v11 + 48)] = *(_OWORD *)&a2[*(int *)(v11 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1004C47D8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1004C5604((uint64_t)a1, type metadata accessor for SDTempPairingConnection.Role);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for NWEndpoint();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = *(int *)(type metadata accessor for SDTempPairingEndpoint(0) + 20);
      uint64_t v8 = &a1[v7];
      unint64_t v9 = &a2[v7];
      long long v10 = *((_OWORD *)v9 + 1);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v10;
      *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
      uint64_t v11 = sub_10000A844((uint64_t *)&unk_100972880);
      *(_OWORD *)&a1[*(int *)(v11 + 48)] = *(_OWORD *)&a2[*(int *)(v11 + 48)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1004C48EC()
{
  uint64_t result = type metadata accessor for SDTempPairingEndpoint(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[4] = v2;
    v2[5] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1004C4994(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000A844(&qword_1009764A8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  sub_1004C61C8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v12) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    long long v12 = *(_OWORD *)(v3 + 40);
    char v11 = 3;
    sub_1002CC290();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    long long v12 = *(_OWORD *)(v3 + 56);
    char v11 = 4;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1004C4B9C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000A844(&qword_1009764C8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  sub_1004C6E2C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v12) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v12) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    long long v12 = *(_OWORD *)(v3 + 40);
    char v11 = 3;
    sub_1002CC290();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    long long v12 = *(_OWORD *)(v3 + 56);
    char v11 = 4;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1004C4DA8()
{
  return static UUID.== infix(_:_:)();
}

uint64_t sub_1004C4DCC()
{
  uint64_t result = 0x6E6F6973726576;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701667182;
      break;
    case 2:
      uint64_t result = 0x696669746E656469;
      break;
    case 3:
      uint64_t result = 0x654B63696C627570;
      break;
    case 4:
      uint64_t result = 0x5249656369766564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1004C4E84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1004C621C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1004C4EAC(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1004C4EB8(uint64_t a1)
{
  unint64_t v2 = sub_1004C61C8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004C4EF4(uint64_t a1)
{
  unint64_t v2 = sub_1004C61C8();

  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_1004C4F30@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1004C6468(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1004C4F84(void *a1)
{
  return sub_1004C4994(a1);
}

uint64_t sub_1004C4FC8()
{
  uint64_t result = 0x6E6F6973726576;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x726F727265;
      break;
    case 2:
      uint64_t result = 0x696669746E656469;
      break;
    case 3:
      uint64_t result = 0x654B63696C627570;
      break;
    case 4:
      uint64_t result = 0x5249656369766564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1004C5084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1004C685C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004C50AC(uint64_t a1)
{
  unint64_t v2 = sub_1004C6E2C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004C50E8(uint64_t a1)
{
  unint64_t v2 = sub_1004C6E2C();

  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_1004C5124@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1004C6AB0(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1004C5178(void *a1)
{
  return sub_1004C4B9C(a1);
}

void *sub_1004C51BC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for NWEndpoint();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SDTempPairingEndpoint(0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SDTempPairingConnection.Role(0);
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)((char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4[3] = 0;
  v4[4] = 0;
  UUID.init()();
  sub_1004C5588(a1, (uint64_t)v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_role);
  *(void *)((char *)v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_temporaryIdentity) = a2;
  void v4[2] = a3;
  sub_1004C5588(a1, (uint64_t)v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(void *)((char *)v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_connection) = *v17;
    id v18 = a2;
    id v19 = a3;
  }
  else
  {
    sub_10000A844((uint64_t *)&unk_100972880);
    uint64_t v27 = v8;
    id v20 = a2;
    uint64_t v21 = a3;
    swift_bridgeObjectRelease();
    sub_1003E6C7C((uint64_t)v17, (uint64_t)v14);
    type metadata accessor for NWProtocolTCP.Options();
    swift_allocObject();
    NWProtocolTCP.Options.init()();
    dispatch thunk of NWProtocolTCP.Options.enableKeepalive.setter();
    dispatch thunk of NWProtocolTCP.Options.keepaliveIdle.setter();
    type metadata accessor for NWProtocolTLS.Options();
    swift_allocObject();
    NWProtocolTLS.Options.init()();
    uint64_t v22 = dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter();
    aBlock[4] = sub_1004C0590;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1006602C0;
    aBlock[3] = &unk_1008DD0A8;
    unint64_t v23 = _Block_copy(aBlock);
    sec_protocol_options_set_verify_block(v22, v23, v21);
    _Block_release(v23);
    swift_unknownObjectRelease();
    type metadata accessor for NWParameters();
    swift_retain();
    swift_retain();
    NWParameters.__allocating_init(tls:tcp:)();
    NWParameters.includePeerToPeer.setter();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v27);
    type metadata accessor for NWConnection();
    swift_allocObject();
    uint64_t v24 = NWConnection.init(to:using:)();
    swift_release();
    swift_release();
    sub_1004C5604((uint64_t)v14, type metadata accessor for SDTempPairingEndpoint);
    *(void *)((char *)v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_connection) = v24;
  }
  sub_1004C05BC();
  sub_1004C5604(a1, type metadata accessor for SDTempPairingConnection.Role);
  return v4;
}

uint64_t sub_1004C5588(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDTempPairingConnection.Role(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004C55EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1004C55FC()
{
  return swift_release();
}

uint64_t sub_1004C5604(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1004C5664()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004C569C(uint64_t a1)
{
  return sub_1004C317C(a1);
}

uint64_t sub_1004C56A4()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004C56E4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F4;
  return sub_1004C3630(a1, v4, v5, v6);
}

unint64_t sub_1004C5798()
{
  unint64_t result = qword_100976488;
  if (!qword_100976488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100976488);
  }
  return result;
}

uint64_t sub_1004C57EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CC4(*(void *)(v0 + 56), *(void *)(v0 + 64));
  sub_100250CC4(*(void *)(v0 + 72), *(void *)(v0 + 80));

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1004C583C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v22[1] = a8;
  uint64_t v8 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [objc_allocWithZone((Class)CUPairedPeer) init];
  UUID.init(uuidString:)();
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  [v11 setIdentifier:isa];

  id v15 = [objc_allocWithZone((Class)RPIdentity) initWithPairedPeer:v11 type:15];
  if (v15)
  {
    uint64_t v16 = v15;
    NSString v17 = String._bridgeToObjectiveC()();
    [v16 setName:v17];

    Class v18 = Data._bridgeToObjectiveC()().super.isa;
    [v16 setDeviceIRKData:v18];

    Class v19 = Data._bridgeToObjectiveC()().super.isa;
    [v16 setEdPKData:v19];

    Class v20 = Array._bridgeToObjectiveC()().super.isa;
    [v16 setAccessGroups:v20];

    return (uint64_t)v16;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

unint64_t sub_1004C5ADC()
{
  unint64_t result = qword_100976498;
  if (!qword_100976498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100976498);
  }
  return result;
}

uint64_t sub_1004C5B30()
{
  swift_bridgeObjectRelease();
  sub_100250CC4(*(void *)(v0 + 56), *(void *)(v0 + 64));
  sub_100250CC4(*(void *)(v0 + 72), *(void *)(v0 + 80));

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t destroy for SDTempPairingMessage.Response(void *a1)
{
  swift_bridgeObjectRelease();
  sub_100250CC4(a1[5], a1[6]);
  uint64_t v2 = a1[7];
  unint64_t v3 = a1[8];

  return sub_100250CC4(v2, v3);
}

uint64_t initializeWithCopy for SDTempPairingMessage.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  unint64_t v7 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  sub_10025ADCC(v6, v7);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  uint64_t v9 = *(void *)(a2 + 56);
  unint64_t v8 = *(void *)(a2 + 64);
  sub_10025ADCC(v9, v8);
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v8;
  return a1;
}

uint64_t assignWithCopy for SDTempPairingMessage.Response(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  unint64_t v6 = *(void *)(a2 + 48);
  sub_10025ADCC(v5, v6);
  uint64_t v7 = *(void *)(a1 + 40);
  unint64_t v8 = *(void *)(a1 + 48);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  sub_100250CC4(v7, v8);
  uint64_t v10 = *(void *)(a2 + 56);
  unint64_t v9 = *(void *)(a2 + 64);
  sub_10025ADCC(v10, v9);
  uint64_t v11 = *(void *)(a1 + 56);
  unint64_t v12 = *(void *)(a1 + 64);
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v9;
  sub_100250CC4(v11, v12);
  return a1;
}

__n128 initializeWithTake for SDTempPairingMessage.Response(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SDTempPairingMessage.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a1 + 40);
  unint64_t v7 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_100250CC4(v6, v7);
  uint64_t v8 = *(void *)(a1 + 56);
  unint64_t v9 = *(void *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  sub_100250CC4(v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDTempPairingMessage.Response(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDTempPairingMessage.Response(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDTempPairingMessage.Response()
{
  return &type metadata for SDTempPairingMessage.Response;
}

unsigned char *storeEnumTagSinglePayload for SDTempPairingError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1004C5EA0);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDTempPairingError()
{
  return &type metadata for SDTempPairingError;
}

uint64_t destroy for SDTempPairingMessage.Request(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CC4(a1[5], a1[6]);
  uint64_t v2 = a1[7];
  unint64_t v3 = a1[8];

  return sub_100250CC4(v2, v3);
}

uint64_t initializeWithCopy for SDTempPairingMessage.Request(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  unint64_t v6 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10025ADCC(v5, v6);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  uint64_t v8 = *(void *)(a2 + 56);
  unint64_t v7 = *(void *)(a2 + 64);
  sub_10025ADCC(v8, v7);
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v7;
  return a1;
}

void *assignWithCopy for SDTempPairingMessage.Request(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[5];
  unint64_t v5 = a2[6];
  sub_10025ADCC(v4, v5);
  uint64_t v6 = a1[5];
  unint64_t v7 = a1[6];
  a1[5] = v4;
  a1[6] = v5;
  sub_100250CC4(v6, v7);
  uint64_t v9 = a2[7];
  unint64_t v8 = a2[8];
  sub_10025ADCC(v9, v8);
  uint64_t v10 = a1[7];
  unint64_t v11 = a1[8];
  a1[7] = v9;
  a1[8] = v8;
  sub_100250CC4(v10, v11);
  return a1;
}

uint64_t assignWithTake for SDTempPairingMessage.Request(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t v6 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_100250CC4(v5, v6);
  uint64_t v7 = *(void *)(a1 + 56);
  unint64_t v8 = *(void *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  sub_100250CC4(v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDTempPairingMessage.Request(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDTempPairingMessage.Request(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDTempPairingMessage.Request()
{
  return &type metadata for SDTempPairingMessage.Request;
}

unint64_t sub_1004C6174()
{
  unint64_t result = qword_1009764A0;
  if (!qword_1009764A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009764A0);
  }
  return result;
}

unint64_t sub_1004C61C8()
{
  unint64_t result = qword_1009764B0;
  if (!qword_1009764B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009764B0);
  }
  return result;
}

uint64_t sub_1004C621C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x654B63696C627570 && a2 == 0xE900000000000079 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5249656369766564 && a2 == 0xED0000617461444BLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1004C6468@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_10000A844(&qword_1009764D0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  sub_1004C61C8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_10024D338((uint64_t)a1);
  }
  LOBYTE(v31) = 0;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  LOBYTE(v31) = 1;
  uint64_t v10 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v12 = v11;
  uint64_t v29 = v10;
  uint64_t v30 = v9;
  LOBYTE(v31) = 2;
  swift_bridgeObjectRetain();
  uint64_t v13 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v15 = v14;
  uint64_t v26 = v13;
  uint64_t v27 = v12;
  char v33 = 3;
  sub_1002CC1F4();
  swift_bridgeObjectRetain();
  uint64_t v28 = v15;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  char v33 = 4;
  uint64_t v16 = v31;
  unint64_t v25 = v32;
  sub_10025ADCC(v31, v32);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v17 = v31;
  unint64_t v18 = v32;
  uint64_t v19 = v27;
  swift_bridgeObjectRetain();
  uint64_t v20 = v28;
  swift_bridgeObjectRetain();
  unint64_t v21 = v25;
  sub_10025ADCC(v16, v25);
  sub_10025ADCC(v17, v18);
  sub_100250CC4(v16, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10024D338((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CC4(v16, v21);
  uint64_t result = sub_100250CC4(v17, v18);
  uint64_t v23 = v29;
  *a2 = v30;
  a2[1] = v23;
  uint64_t v24 = v26;
  a2[2] = v19;
  a2[3] = v24;
  a2[4] = v20;
  a2[5] = v16;
  a2[6] = v21;
  a2[7] = v17;
  a2[8] = v18;
  return result;
}

uint64_t sub_1004C685C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x654B63696C627570 && a2 == 0xE900000000000079 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5249656369766564 && a2 == 0xED0000617461444BLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1004C6AB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A844(&qword_1009764B8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  sub_1004C6E2C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_10024D338((uint64_t)a1);
  }
  LOBYTE(v29) = 0;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  LOBYTE(v29) = 1;
  uint64_t v10 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  int v31 = v11;
  LOBYTE(v29) = 2;
  uint64_t v12 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v14 = v13;
  uint64_t v26 = v12;
  uint64_t v27 = v10;
  char v32 = 3;
  unint64_t v15 = sub_1002CC1F4();
  swift_bridgeObjectRetain();
  unint64_t v28 = v15;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v25 = v14;
  char v32 = 4;
  uint64_t v16 = v29;
  unint64_t v24 = v30;
  sub_10025ADCC(v29, v30);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v17 = v29;
  unint64_t v18 = v30;
  uint64_t v19 = v25;
  swift_bridgeObjectRetain();
  unint64_t v20 = v24;
  sub_10025ADCC(v16, v24);
  sub_10025ADCC(v17, v18);
  sub_100250CC4(v16, v20);
  swift_bridgeObjectRelease();
  sub_10024D338((uint64_t)a1);
  swift_bridgeObjectRelease();
  sub_100250CC4(v16, v20);
  uint64_t result = sub_100250CC4(v17, v18);
  uint64_t v22 = v27;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v22;
  *(unsigned char *)(a2 + 16) = v31 & 1;
  *(void *)(a2 + 24) = v26;
  *(void *)(a2 + 32) = v19;
  *(void *)(a2 + 40) = v16;
  *(void *)(a2 + 48) = v20;
  *(void *)(a2 + 56) = v17;
  *(void *)(a2 + 64) = v18;
  return result;
}

unint64_t sub_1004C6E2C()
{
  unint64_t result = qword_1009764C0;
  if (!qword_1009764C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009764C0);
  }
  return result;
}

unint64_t sub_1004C6E80()
{
  unint64_t result = qword_1009764D8;
  if (!qword_1009764D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009764D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SDTempPairingMessage.Response.CodingKeys()
{
  return &type metadata for SDTempPairingMessage.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for SDTempPairingMessage()
{
  return &type metadata for SDTempPairingMessage;
}

unsigned char *_s16DaemoniOSLibrary20SDTempPairingMessageV8ResponseV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004C6FC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDTempPairingMessage.Request.CodingKeys()
{
  return &type metadata for SDTempPairingMessage.Request.CodingKeys;
}

unint64_t sub_1004C7004()
{
  unint64_t result = qword_1009764E0;
  if (!qword_1009764E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009764E0);
  }
  return result;
}

unint64_t sub_1004C705C()
{
  unint64_t result = qword_1009764E8;
  if (!qword_1009764E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009764E8);
  }
  return result;
}

unint64_t sub_1004C70B4()
{
  unint64_t result = qword_1009764F0;
  if (!qword_1009764F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009764F0);
  }
  return result;
}

unint64_t sub_1004C710C()
{
  unint64_t result = qword_1009764F8;
  if (!qword_1009764F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009764F8);
  }
  return result;
}

unint64_t sub_1004C7164()
{
  unint64_t result = qword_100976500;
  if (!qword_100976500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100976500);
  }
  return result;
}

unint64_t sub_1004C71BC()
{
  unint64_t result = qword_100976508;
  if (!qword_100976508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100976508);
  }
  return result;
}

uint64_t sub_1004C7214()
{
  type metadata accessor for Optional();
  sub_100247840(&qword_10096BAF0);
  type metadata accessor for CheckedContinuation();
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1004C72F4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100976510);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100976510);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1004C73BC(uint64_t a1)
{
  uint64_t v19 = a1;
  uint64_t v2 = swift_isaMask & *v1;
  type metadata accessor for Optional();
  sub_100247840(&qword_10096BAF0);
  uint64_t v3 = type metadata accessor for CheckedContinuation();
  uint64_t v4 = type metadata accessor for Optional();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  int v11 = (char *)&v19 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v19 - v12;
  os_unfair_lock_t v20 = (os_unfair_lock_t)(*(void *)((char *)v1 + *(void *)(v2 + 88)) + 16);
  os_unfair_lock_lock(v20);
  uint64_t v14 = (char *)v1 + *(void *)((swift_isaMask & *v1) + 0x68);
  swift_beginAccess();
  unint64_t v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v15(v13, v14, v4);
  uint64_t v16 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v11, 1, 1, v3);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v5 + 40))(v14, v11, v4);
  swift_endAccess();
  os_unfair_lock_unlock(v20);
  v15(v8, v13, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v3) == 1)
  {
    uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v13, v4);
    return ((uint64_t (*)(char *, uint64_t))v17)(v8, v4);
  }
  else
  {
    sub_1004C76D8(v19, v3);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v8, v3);
  }
}

uint64_t sub_1004C76D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v5);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Result();
  __chkstk_darwin(v13);
  unint64_t v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v18 - v14, a1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v15, v3);
    return CheckedContinuation.resume(returning:)();
  }
}

void sub_1004C7914(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = qword_100969EA8;
  id v10 = a3;
  id v5 = a1;
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_100976510);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "SDAirDropRemoteViewController did activate", v9, 2u);
    swift_slowDealloc();
  }
}

void sub_1004C7A20(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1004C7E60();
}

void sub_1004C7A80(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6 = qword_100969EA8;
  id v7 = a3;
  id v13 = a1;
  id v8 = a4;
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000B47C(v9, (uint64_t)qword_100976510);
  id v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "SDAirDropRemoteViewController did invalidate", v12, 2u);
    swift_slowDealloc();
  }
}

id sub_1004C7BA4()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = *(void *)((swift_isaMask & *v0) + 0x58);
  sub_10000A844((uint64_t *)&unk_10096D4C0);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 16) = 0;
  *(void *)((char *)v0 + v2) = v3;
  *(void *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x60)) = 0;
  id v4 = (char *)v0 + *(void *)((swift_isaMask & *v0) + 0x68);
  type metadata accessor for Optional();
  sub_100247840(&qword_10096BAF0);
  uint64_t v5 = type metadata accessor for CheckedContinuation();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v7.receiver = v0;
  v7.super_class = ObjectType;
  return [super init];
}

id sub_1004C7CFC()
{
  return sub_1004C7BA4();
}

uint64_t sub_1004C7D20(void *a1)
{
  swift_release();

  uint64_t v2 = (char *)a1 + *(void *)((swift_isaMask & *a1) + 0x68);
  type metadata accessor for Optional();
  sub_100247840(&qword_10096BAF0);
  type metadata accessor for CheckedContinuation();
  uint64_t v3 = type metadata accessor for Optional();
  id v4 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t type metadata accessor for SDAirDropRemoteViewController()
{
  return sub_1002CEB48();
}

uint64_t sub_1004C7E60()
{
  type metadata accessor for Optional();
  sub_100247840(&qword_10096BAF0);
  uint64_t v0 = type metadata accessor for Result();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (uint64_t *)((char *)&v12 - v2);
  if (qword_100969EA8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_100976510);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    objc_super v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)objc_super v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "SDAirDropRemoteViewController did deactivate", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t v8 = type metadata accessor for SFError();
  sub_100443EE4();
  uint64_t v9 = swift_allocError();
  *id v10 = 0xD000000000000018;
  v10[1] = 0x80000001007BF220;
  v10[2] = 0xD000000000000064;
  v10[3] = 0x80000001007BF240;
  v10[4] = 114;
  (*(void (**)(void *, void, uint64_t))(*(void *)(v8 - 8) + 104))(v10, enum case for SFError.unexpected(_:), v8);
  *uint64_t v3 = v9;
  swift_storeEnumTagMultiPayload();
  sub_1004C73BC((uint64_t)v3);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1004C80E8()
{
  sub_10024D338(v0 + 112);
  sub_1004C8294(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary19UserProfilesMonitor_continuation);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_1004C8130()
{
  return type metadata accessor for UserProfilesMonitor();
}

uint64_t type metadata accessor for UserProfilesMonitor()
{
  uint64_t result = qword_1009765D8;
  if (!qword_1009765D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1004C8184()
{
  sub_1004C8228();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1004C8228()
{
  if (!qword_1009765E8)
  {
    sub_100247840((uint64_t *)&unk_1009765F0);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1009765E8);
    }
  }
}

ValueMetadata *type metadata accessor for UserProfile()
{
  return &type metadata for UserProfile;
}

uint64_t sub_1004C8294(uint64_t a1)
{
  uint64_t v2 = sub_10000A844(&qword_1009766B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for UnsupportedProfilesProvider()
{
  return &type metadata for UnsupportedProfilesProvider;
}

uint64_t sub_1004C8304()
{
  uint64_t v1 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for NWBrowser.Descriptor();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browser;
  if (!*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browser))
  {
    sub_1005DDDE4(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_sessionLogger));
    id v10 = [objc_allocWithZone((Class)RPClient) init];
    os_log_type_t v11 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_rpClient);
    *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_rpClient) = v10;

    strcpy(v8, "_airdrop._tcp.");
    v8[15] = -18;
    *((void *)v8 + 2) = 0;
    *((void *)v8 + 3) = 0;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for NWBrowser.Descriptor.bonjourWithTXTRecord(_:), v4);
    type metadata accessor for NWParameters();
    static NWParameters.tcp.getter();
    NWParameters.allowLocalEndpointReuse.setter();
    NWParameters.includePeerToPeer.setter();
    type metadata accessor for NWBrowser();
    swift_allocObject();
    *(void *)(v0 + v9) = NWBrowser.init(for:using:)();
    swift_retain();
    swift_release();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    NWBrowser.browseResultsChangedHandler.setter();
    swift_release();
    uint64_t v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v13 = swift_allocObject();
    swift_weakInit();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v12;
    *(void *)(v14 + 24) = v13;
    swift_retain();
    swift_retain();
    NWBrowser.stateUpdateHandler.setter();
    swift_release();
    swift_release();
    NWBrowser.start(queue:)();
    uint64_t v15 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v3, 1, 1, v15);
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v17 = qword_100969B90;
    swift_retain();
    if (v17 != -1) {
      swift_once();
    }
    uint64_t v18 = static AirDropActor.shared;
    uint64_t v19 = sub_1004D1860((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    os_unfair_lock_t v20 = (void *)swift_allocObject();
    v20[2] = v18;
    uint64_t v20[3] = v19;
    v20[4] = v16;
    swift_retain();
    swift_release();
    sub_10028CAC4((uint64_t)v3, (uint64_t)&unk_100976788, (uint64_t)v20);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1004C8748()
{
  int64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browser;
  if (*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browser))
  {
    uint64_t v2 = v0;
    unint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_sessionLogger);
    swift_retain();
    sub_1005DDE0C(v3);
    uint64_t v4 = (uint64_t *)OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_rpClient;
    uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_rpClient);
    if (v5) {
      [v5 invalidate];
    }
    NWBrowser.cancel()();
    uint64_t v6 = *(void *)(v3 + 24);
    if (!v6) {
      goto LABEL_12;
    }
    if ((unint64_t)v6 >> 62)
    {
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter()) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v7)
      {
LABEL_7:
        if ((v6 & 0xC000000000000001) != 0) {
          goto LABEL_52;
        }
        if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_54;
        }
        id v8 = *(id *)(v6 + 32);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();

        while (1)
        {
LABEL_12:
          uint64_t v6 = (uint64_t)String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          unint64_t v3 = *(void *)(v3 + 24);
          if (!v3) {
            goto LABEL_20;
          }
          if (v3 >> 62)
          {
            swift_bridgeObjectRetain();
            if (!_CocoaArrayWrapper.endIndex.getter())
            {
LABEL_19:
              swift_bridgeObjectRelease();
              unint64_t v3 = 0;
              goto LABEL_20;
            }
          }
          else
          {
            uint64_t v9 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (!v9) {
              goto LABEL_19;
            }
          }
          if ((v3 & 0xC000000000000001) != 0)
          {
LABEL_54:
            uint64_t v28 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            swift_bridgeObjectRelease();
            unint64_t v3 = *(unsigned int *)(v28 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid);
            swift_unknownObjectRelease();
          }
          else
          {
            if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              return;
            }
            id v10 = (char *)*(id *)(v3 + 32);
            swift_bridgeObjectRelease();
            unint64_t v3 = *(unsigned int *)&v10[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid];
          }
LABEL_20:
          sub_100046EFC(@"BonjourBrowse", @"Stop", v6, v3);

          *(void *)(v2 + v1) = 0;
          swift_release();
          os_log_type_t v11 = *(void **)((char *)v4 + v2);
          *(uint64_t *)((char *)v4 + v2) = 0;

          uint64_t v12 = (void *)(v2
                         + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections);
          swift_beginAccess();
          uint64_t v29 = v12;
          uint64_t v13 = *v12;
          uint64_t v14 = *v12 + 64;
          uint64_t v15 = 1 << *(unsigned char *)(*v12 + 32);
          uint64_t v16 = -1;
          if (v15 < 64) {
            uint64_t v16 = ~(-1 << v15);
          }
          unint64_t v17 = v16 & *(void *)(*v12 + 64);
          int64_t v1 = (unint64_t)(v15 + 63) >> 6;
          swift_bridgeObjectRetain();
          int64_t v18 = 0;
          uint64_t v4 = &OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection;
          while (v17)
          {
            while (1)
            {
              unint64_t v19 = __clz(__rbit64(v17));
              v17 &= v17 - 1;
              unint64_t v20 = v19 | (v18 << 6);
LABEL_42:
              unint64_t v3 = *(void *)(*(void *)(v13 + 56) + 8 * v20);
              if (*(void *)(v3
                             + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection))
              {
                id v24 = (id)v3;
                swift_retain();
                NWConnection.forceCancel()();
                swift_release();
              }
              else
              {
                id v25 = (id)v3;
              }
              if (!*(void *)(v3
                              + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection))
                break;
              swift_retain();
              NWConnection.forceCancel()();

              swift_release();
              if (!v17) {
                goto LABEL_26;
              }
            }
          }
LABEL_26:
          int64_t v21 = v18 + 1;
          if (__OFADD__(v18, 1))
          {
            __break(1u);
          }
          else
          {
            if (v21 >= v1) {
              goto LABEL_48;
            }
            unint64_t v22 = *(void *)(v14 + 8 * v21);
            ++v18;
            if (v22) {
              goto LABEL_41;
            }
            int64_t v18 = v21 + 1;
            if (v21 + 1 >= v1) {
              goto LABEL_48;
            }
            unint64_t v22 = *(void *)(v14 + 8 * v18);
            if (v22) {
              goto LABEL_41;
            }
            int64_t v18 = v21 + 2;
            if (v21 + 2 >= v1) {
              goto LABEL_48;
            }
            unint64_t v22 = *(void *)(v14 + 8 * v18);
            if (v22) {
              goto LABEL_41;
            }
            int64_t v18 = v21 + 3;
            if (v21 + 3 >= v1) {
              goto LABEL_48;
            }
            unint64_t v22 = *(void *)(v14 + 8 * v18);
            if (v22) {
              goto LABEL_41;
            }
            int64_t v23 = v21 + 4;
            if (v23 >= v1)
            {
LABEL_48:
              swift_release();
              uint64_t v26 = (void *)(v2
                             + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult);
              swift_beginAccess();
              *uint64_t v26 = &_swiftEmptyDictionarySingleton;
              swift_bridgeObjectRelease();
              void *v29 = &_swiftEmptyDictionarySingleton;
              swift_bridgeObjectRelease();
              uint64_t v27 = (void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount);
              swift_beginAccess();
              *uint64_t v27 = &_swiftEmptyDictionarySingleton;
              swift_bridgeObjectRelease();
              CurrentValueSubject.send(completion:)();
              swift_release();
              return;
            }
            unint64_t v22 = *(void *)(v14 + 8 * v23);
            if (v22)
            {
              int64_t v18 = v23;
LABEL_41:
              unint64_t v17 = (v22 - 1) & v22;
              unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
              goto LABEL_42;
            }
            while (1)
            {
              int64_t v18 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                break;
              }
              if (v18 >= v1) {
                goto LABEL_48;
              }
              unint64_t v22 = *(void *)(v14 + 8 * v18);
              ++v23;
              if (v22) {
                goto LABEL_41;
              }
            }
          }
          __break(1u);
LABEL_52:
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          swift_unknownObjectRelease();
        }
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
}

uint64_t sub_1004C8C38()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_1009766B8);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_1009766B8);
  if (qword_100969C70 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009945A0);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

char *sub_1004C8D00(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  char v32 = a3;
  uint64_t v33 = a4;
  id v30 = a1;
  int v31 = a2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v29 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v7 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v10);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v11 - 8);
  uint64_t v28 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browserQueue;
  v27[1] = sub_1002B62F0();
  uint64_t v12 = v6;
  static DispatchQoS.default.getter();
  unint64_t v38 = _swiftEmptyArrayStorage;
  sub_1004D1860((unint64_t *)&unk_100974840, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000A844((uint64_t *)&unk_10096A1B0);
  sub_1002AE308((unint64_t *)&qword_100974850, (uint64_t *)&unk_10096A1B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v29);
  *(void *)&v6[v28] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browser] = 0;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_rpClient] = 0;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult] = &_swiftEmptyDictionarySingleton;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount] = &_swiftEmptyDictionarySingleton;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections] = &_swiftEmptyDictionarySingleton;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToAirDropEndpoints] = &_swiftEmptyDictionarySingleton;
  id v14 = v30;
  uint64_t v13 = v31;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_deviceStatus] = v30;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_nearbyAgent] = v13;
  uint64_t v15 = v32;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_bleController] = v32;
  uint64_t v16 = self;
  id v30 = v14;
  id v17 = v13;
  id v18 = v15;
  id v19 = [v16 defaultCenter];
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_notificationCenter] = v19;
  uint64_t v20 = v34;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_sessionLogger] = v33;
  int64_t v21 = &v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_endpointsUpdateHandler];
  uint64_t v22 = v35;
  *(void *)int64_t v21 = v20;
  *((void *)v21 + 1) = v22;
  unint64_t v38 = _swiftEmptyArrayStorage;
  sub_10000A844(&qword_1009767A0);
  swift_allocObject();
  swift_retain();
  swift_retain();
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesNeedingDiscovery] = CurrentValueSubject.init(_:)();

  v37.receiver = v12;
  v37.super_class = ObjectType;
  int64_t v23 = (char *)[super init];
  id v24 = *(void **)&v23[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_notificationCenter];
  id v25 = v23;
  [v24 addObserver:v25 selector:"wirelessBluetoothStateChangedWithNotification:" name:@"com.apple.sharingd.WirelessModeChanged" object:0];
  [v24 addObserver:v25 selector:"wirelessBluetoothStateChangedWithNotification:" name:@"com.apple.sharingd.WirelessPowerChanged" object:0];
  [v24 addObserver:v25 selector:"wirelessBluetoothStateChangedWithNotification:" name:@"com.apple.sharingd.BluetoothPowerChanged" object:0];

  swift_release();
  swift_release();
  return v25;
}

uint64_t sub_1004C91A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v10 = qword_100969B90;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = static AirDropActor.shared;
  uint64_t v12 = sub_1004D1860((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = v11;
  v13[3] = v12;
  v13[4] = v8;
  v13[5] = a1;
  v13[6] = a2;
  swift_retain();
  swift_release();
  sub_10028CFD4((uint64_t)v6, (uint64_t)&unk_100976800, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_1004C93A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a1;
  v6[6] = a4;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  return _swift_task_switch(sub_1004C9448, v7, 0);
}

uint64_t sub_1004C9448()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    sub_1004C94E8(*(void *)(v0 + 56), *(void *)(v0 + 64));
  }
  **(unsigned char **)(v0 + 40) = Strong == 0;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1004C94E8(uint64_t a1, uint64_t a2)
{
  uint64_t v143 = a1;
  uint64_t v144 = a2;
  uint64_t v3 = type metadata accessor for NWEndpoint();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (uint64_t *)((char *)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v140 = (char *)&v111 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (uint64_t *)((char *)&v111 - v11);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v142 = (char *)&v111 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  int v113 = (uint64_t *)((char *)&v111 - v16);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v112 = (char *)&v111 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v121 = (char *)&v111 - v20;
  __chkstk_darwin(v19);
  uint64_t v120 = (char *)&v111 - v21;
  uint64_t v118 = type metadata accessor for NWBrowser.Result.Change.Flags();
  uint64_t v158 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v127 = (char *)&v111 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for NWBrowser.Result();
  unint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  unint64_t v155 = (char *)&v111 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v133 = (char *)&v111 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  int v31 = (char *)&v111 - v30;
  __chkstk_darwin(v29);
  unint64_t v126 = (char *)&v111 - v32;
  uint64_t v33 = type metadata accessor for NWBrowser.Result.Change();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v145 = (char *)&v111 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v138 = (char *)&v111 - v37;
  uint64_t v132 = v2;
  unint64_t v154 = sub_10045F7D8();
  uint64_t v146 = v38;
  uint64_t v39 = *(void *)(v144 + 56);
  uint64_t v128 = v144 + 56;
  uint64_t v40 = 1 << *(unsigned char *)(v144 + 32);
  uint64_t v41 = -1;
  if (v40 < 64) {
    uint64_t v41 = ~(-1 << v40);
  }
  unint64_t v42 = v41 & v39;
  int64_t v129 = (unint64_t)(v40 + 63) >> 6;
  uint64_t v137 = v34 + 16;
  uint64_t v136 = v34 + 32;
  uint64_t v135 = v34 + 88;
  int v134 = enum case for NWBrowser.Result.Change.removed(_:);
  int v125 = enum case for NWBrowser.Result.Change.changed(_:);
  uint64_t v117 = (void (**)(char *, uint64_t))(v34 + 8);
  uint64_t v139 = v34;
  uint64_t v130 = (void (**)(unint64_t, uint64_t))(v34 + 96);
  int v148 = (void (**)(char *, unint64_t, uint64_t))(v24 + 32);
  uint64_t v116 = (void (**)(char *, unint64_t))(v158 + 32);
  unint64_t v153 = (void (**)(uint64_t *, char *, uint64_t))(v4 + 16);
  uint64_t v152 = (uint64_t (**)(uint64_t *, uint64_t))(v4 + 88);
  int v151 = enum case for NWEndpoint.service(_:);
  uint64_t v149 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v150 = (void (**)(uint64_t *, uint64_t))(v4 + 96);
  uint64_t v115 = (void (**)(char *, unint64_t))(v158 + 8);
  unint64_t v141 = v24;
  uint64_t v147 = (void (**)(char *, uint64_t))(v24 + 8);
  swift_bridgeObjectRetain();
  int64_t v43 = 0;
  uint64_t v158 = v23;
  uint64_t v123 = v12;
  uint64_t v131 = v33;
  uint64_t v119 = v31;
  while (1)
  {
    if (v42)
    {
      uint64_t v44 = v23;
      uint64_t v156 = (v42 - 1) & v42;
      int64_t v157 = v43;
      unint64_t v45 = __clz(__rbit64(v42)) | (v43 << 6);
      uint64_t v46 = v142;
      goto LABEL_22;
    }
    int64_t v47 = v43 + 1;
    uint64_t v46 = v142;
    if (__OFADD__(v43, 1))
    {
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    if (v47 >= v129) {
      goto LABEL_40;
    }
    unint64_t v48 = *(void *)(v128 + 8 * v47);
    int64_t v49 = v43 + 1;
    if (!v48)
    {
      int64_t v49 = v43 + 2;
      if (v43 + 2 >= v129) {
        goto LABEL_40;
      }
      unint64_t v48 = *(void *)(v128 + 8 * v49);
      if (!v48)
      {
        int64_t v49 = v43 + 3;
        if (v43 + 3 >= v129) {
          goto LABEL_40;
        }
        unint64_t v48 = *(void *)(v128 + 8 * v49);
        if (!v48) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v44 = v23;
    uint64_t v156 = (v48 - 1) & v48;
    int64_t v157 = v49;
    unint64_t v45 = __clz(__rbit64(v48)) + (v49 << 6);
LABEL_22:
    uint64_t v51 = v139;
    uint64_t v52 = v138;
    (*(void (**)(char *, unint64_t, uint64_t))(v139 + 16))(v138, *(void *)(v144 + 48) + *(void *)(v139 + 72) * v45, v33);
    unint64_t v24 = (unint64_t)v145;
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v145, v52, v33);
    int v53 = (*(uint64_t (**)(unint64_t, uint64_t))(v51 + 88))(v24, v33);
    if (v53 == v134)
    {
      (*v130)(v24, v33);
      uint64_t v23 = v44;
      (*v148)(v31, v24, v44);
      NWBrowser.Result.endpoint.getter();
      (*v153)(v12, v46, v3);
      int v54 = (*v152)(v12, v3);
      if (v54 != v151) {
        goto LABEL_70;
      }
      (*v150)(v12, v3);
      uint64_t v55 = *v12;
      uint64_t v56 = v12[1];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v57 = sub_10000A844(&qword_1009767D0);
      sub_10000A7E8((uint64_t)v12 + *(int *)(v57 + 80), &qword_10097D7A0);
      (*v149)(v46, v3);
      sub_1004CAC3C(v55, v56);
      swift_bridgeObjectRelease();
      (*v147)(v31, v44);
      goto LABEL_39;
    }
    uint64_t v23 = v44;
    if (v53 == v125)
    {
      (*v130)(v24, v33);
      uint64_t v58 = sub_10000A844(&qword_100976808);
      unint64_t v59 = v24 + *(int *)(v58 + 64);
      (*v148)(v126, v24, v44);
      unint64_t v60 = v118;
      (*v116)(v127, v59);
      uint64_t v61 = v120;
      NWBrowser.Result.endpoint.getter();
      unint64_t v62 = *v153;
      unint64_t v63 = (uint64_t *)v121;
      (*v153)((uint64_t *)v121, v61, v3);
      uint64_t v64 = *v152;
      int v65 = (*v152)(v63, v3);
      if (v65 != v151) {
        goto LABEL_70;
      }
      unint64_t v124 = v24 + *(int *)(v58 + 48);
      int64_t v66 = *v150;
      (*v150)(v63, v3);
      uint64_t v68 = *v63;
      uint64_t v67 = v63[1];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v122 = sub_10000A844(&qword_1009767D0);
      sub_10000A7E8((uint64_t)v63 + *(int *)(v122 + 80), &qword_10097D7A0);
      uint64_t v69 = *v149;
      uint64_t v70 = v61;
      uint64_t v71 = v3;
      (*v149)(v70, v3);
      if (v68 == v154 && v67 == v146)
      {
        swift_bridgeObjectRelease();
        unint64_t v24 = v60;
        uint64_t v72 = (uint64_t)v126;
        goto LABEL_35;
      }
      int v114 = v66;
      char v77 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      unint64_t v24 = v60;
      uint64_t v72 = (uint64_t)v126;
      if (v77)
      {
LABEL_35:
        (*v115)(v127, v24);
      }
      else
      {
        uint64_t v78 = v69;
        uint64_t v79 = v112;
        NWBrowser.Result.endpoint.getter();
        uint64_t v80 = v113;
        v62(v113, v79, v71);
        int v81 = v64(v80, v71);
        uint64_t v82 = (uint64_t)v127;
        if (v81 != v151) {
          goto LABEL_70;
        }
        v114(v80, v71);
        uint64_t v83 = v80;
        uint64_t v84 = *v80;
        unint64_t v85 = v83[1];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10000A7E8((uint64_t)v83 + *(int *)(v122 + 80), &qword_10097D7A0);
        v78(v79, v71);
        sub_1004CA610(v72, v84, v85, v82);
        swift_bridgeObjectRelease();
        (*v115)((char *)v82, v24);
      }
      int v86 = *v147;
      uint64_t v23 = v158;
      (*v147)((char *)v72, v158);
      v86((char *)v124, v23);
      uint64_t v12 = v123;
      uint64_t v3 = v71;
      int v31 = v119;
LABEL_39:
      uint64_t v33 = v131;
      goto LABEL_5;
    }
    if (qword_100969EB0 != -1) {
      swift_once();
    }
    uint64_t v73 = type metadata accessor for Logger();
    sub_10000B47C(v73, (uint64_t)qword_1009766B8);
    uint64_t v74 = Logger.logObject.getter();
    os_log_type_t v75 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v74, v75))
    {
      uint64_t v76 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v76 = 0;
      _os_log_impl((void *)&_mh_execute_header, v74, v75, "Unknown bonjour result change", v76, 2u);
      uint64_t v12 = v123;
      swift_slowDealloc();
    }

    (*v117)(v145, v33);
LABEL_5:
    unint64_t v42 = v156;
    int64_t v43 = v157;
  }
  uint64_t v50 = v43 + 4;
  if (v43 + 4 < v129)
  {
    unint64_t v48 = *(void *)(v128 + 8 * v50);
    if (!v48)
    {
      while (1)
      {
        int64_t v49 = v50 + 1;
        if (__OFADD__(v50, 1)) {
          break;
        }
        if (v49 >= v129) {
          goto LABEL_40;
        }
        unint64_t v48 = *(void *)(v128 + 8 * v49);
        ++v50;
        if (v48) {
          goto LABEL_21;
        }
      }
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    int64_t v49 = v43 + 4;
    goto LABEL_21;
  }
LABEL_40:
  swift_release();
  uint64_t v87 = *(void *)(v143 + 56);
  int64_t v157 = v143 + 56;
  uint64_t v88 = 1 << *(unsigned char *)(v143 + 32);
  uint64_t v89 = -1;
  if (v88 < 64) {
    uint64_t v89 = ~(-1 << v88);
  }
  unint64_t v24 = v89 & v87;
  int64_t v90 = (unint64_t)(v88 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v91 = 0;
  uint64_t v92 = v133;
  while (1)
  {
    uint64_t v93 = v140;
    if (v24)
    {
      unint64_t v94 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      unint64_t v95 = v94 | (v91 << 6);
      goto LABEL_60;
    }
    int64_t v96 = v91 + 1;
    if (__OFADD__(v91, 1)) {
      goto LABEL_67;
    }
    if (v96 >= v90)
    {
LABEL_65:
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v106 = v132;
      swift_beginAccess();
      uint64_t v107 = swift_bridgeObjectRetain();
      uint64_t v108 = sub_1002550D4(v107);
      swift_bridgeObjectRelease();
      uint64_t v159 = v108;
      id v109 = v106;
      swift_retain();
      sub_1004D08F4((uint64_t *)&v159, v109);
      swift_release();

      CurrentValueSubject.send(_:)();
      return swift_release();
    }
    unint64_t v97 = *(void *)(v157 + 8 * v96);
    ++v91;
    if (!v97)
    {
      int64_t v91 = v96 + 1;
      if (v96 + 1 >= v90) {
        goto LABEL_65;
      }
      unint64_t v97 = *(void *)(v157 + 8 * v91);
      if (!v97)
      {
        int64_t v91 = v96 + 2;
        if (v96 + 2 >= v90) {
          goto LABEL_65;
        }
        unint64_t v97 = *(void *)(v157 + 8 * v91);
        if (!v97) {
          break;
        }
      }
    }
LABEL_59:
    unint64_t v24 = (v97 - 1) & v97;
    unint64_t v95 = __clz(__rbit64(v97)) + (v91 << 6);
LABEL_60:
    unint64_t v99 = v141;
    uint64_t v100 = v158;
    (*(void (**)(char *, unint64_t, uint64_t))(v141 + 16))(v92, *(void *)(v143 + 48) + *(void *)(v141 + 72) * v95, v158);
    (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v155, v92, v100);
    NWBrowser.Result.endpoint.getter();
    (*v153)(v7, v93, v3);
    int v101 = (*v152)(v7, v3);
    if (v101 != v151) {
      goto LABEL_70;
    }
    (*v150)(v7, v3);
    uint64_t v102 = *v7;
    unint64_t v103 = v7[1];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v104 = sub_10000A844(&qword_1009767D0);
    sub_10000A7E8((uint64_t)v7 + *(int *)(v104 + 80), &qword_10097D7A0);
    (*v149)(v93, v3);
    if (v102 == v154 && v103 == v146 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      (*v147)(v155, v158);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v105 = (uint64_t)v155;
      sub_1004CAFDC((uint64_t)v155, v102, v103);
      swift_bridgeObjectRelease();
      (*v147)((char *)v105, v158);
    }
  }
  int64_t v98 = v96 + 3;
  if (v98 >= v90) {
    goto LABEL_65;
  }
  unint64_t v97 = *(void *)(v157 + 8 * v98);
  if (v97)
  {
    int64_t v91 = v98;
    goto LABEL_59;
  }
  while (1)
  {
    int64_t v91 = v98 + 1;
    if (__OFADD__(v98, 1)) {
      break;
    }
    if (v91 >= v90) {
      goto LABEL_65;
    }
    unint64_t v97 = *(void *)(v157 + 8 * v91);
    ++v98;
    if (v97) {
      goto LABEL_59;
    }
  }
LABEL_69:
  __break(1u);
LABEL_70:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);

  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1004CA57C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = (void *)result;
    swift_beginAccess();
    swift_weakLoadStrong();
    sub_1004D098C(a1);

    return swift_release();
  }
  return result;
}

void sub_1004CA610(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10000A844(&qword_100975010);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for NWBrowser.Result.Change.Flags();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v35 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v35 - v16, a4, v11);
  static NWBrowser.Result.Change.Flags.metadataChanged.getter();
  sub_1004D1860((unint64_t *)&unk_100976810, (void (*)(uint64_t))&type metadata accessor for NWBrowser.Result.Change.Flags);
  LOBYTE(a4) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v12 + 8);
  v18(v15, v11);
  v18(v17, v11);
  if (a4)
  {
    if (sub_100660B04())
    {
      if (qword_100969EB0 != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      sub_10000B47C(v19, (uint64_t)qword_1009766B8);
      swift_bridgeObjectRetain_n();
      uint64_t v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        v35[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v22 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v36 = sub_100254634(a2, a3, v35);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "Bonjour TXT record change for service name %s", v22, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_1004CAC3C(a2, a3);
      uint64_t v32 = type metadata accessor for NWBrowser.Result();
      uint64_t v33 = *(void *)(v32 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v10, a1, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v10, 0, 1, v32);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_100467ACC((uint64_t)v10, a2, a3);
      swift_endAccess();
    }
    else
    {
      uint64_t v27 = a2;
      if (qword_100969EB0 != -1) {
        swift_once();
      }
      uint64_t v28 = type metadata accessor for Logger();
      sub_10000B47C(v28, (uint64_t)qword_1009766B8);
      swift_bridgeObjectRetain_n();
      uint64_t v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v29, v30))
      {
        int v31 = (uint8_t *)swift_slowAlloc();
        v35[0] = swift_slowAlloc();
        *(_DWORD *)int v31 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v36 = sub_100254634(v27, a3, v35);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "AWDL not yet available for serviceName %s", v31, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
  else
  {
    if (qword_100969EB0 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_10000B47C(v23, (uint64_t)qword_1009766B8);
    unint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Unhandled Bonjour service change", v26, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1004CAC3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10000A844(&qword_10096D8B8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A844(&qword_100975010);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for NWBrowser.Result();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_100467ACC((uint64_t)v11, a1, a2);
  swift_endAccess();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1002AA050(a1, a2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v13 = (uint64_t *)(v3
                  + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections);
  swift_beginAccess();
  uint64_t v14 = *v13;
  if (*(void *)(*v13 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1005838BC(a1, a2);
    if (v16)
    {
      uint64_t v17 = *(void **)(*(void *)(v14 + 56) + 8 * v15);
      swift_endAccess();
      uint64_t v18 = v17;
      swift_bridgeObjectRelease();
      if (*(void *)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection])
      {
        uint64_t v19 = v18;
        swift_retain();
        NWConnection.forceCancel()();
        swift_release();
      }
      else
      {
        uint64_t v20 = v18;
      }
      if (*(void *)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection])
      {
        swift_retain();
        NWConnection.forceCancel()();

        swift_release();
      }
      else
      {
      }
    }
    else
    {
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t v18 = 0;
    }
  }
  else
  {
    swift_endAccess();
    uint64_t v18 = 0;
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  os_log_type_t v21 = (void *)sub_1002AA038(a1, a2);
  swift_endAccess();
  swift_bridgeObjectRelease();

  uint64_t v22 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v8, 1, 1, v22);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_100466CAC((uint64_t)v8, a1, a2);
  swift_endAccess();
  uint64_t v23 = *(void (**)(void *))(v3
                                        + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_endpointsUpdateHandler);
  uint64_t v24 = swift_bridgeObjectRetain();
  os_log_type_t v25 = sub_100254CF0(v24);
  swift_bridgeObjectRelease();
  v23(v25);

  return swift_release();
}

void sub_1004CAFDC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = sub_10000A844(&qword_100975010);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1004CC0B4(a2, a3))
  {
    if (sub_100660B04())
    {
      uint64_t v9 = type metadata accessor for NWBrowser.Result();
      uint64_t v10 = *(void *)(v9 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_100467ACC((uint64_t)v8, a2, a3);
      swift_endAccess();
      return;
    }
    if (qword_100969EB0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10000B47C(v16, (uint64_t)qword_1009766B8);
    swift_bridgeObjectRetain_n();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      v17[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_100254634(a2, a3, v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v15 = "AWDL not yet available for serviceName %s";
      goto LABEL_12;
    }
  }
  else
  {
    if (qword_100969EB0 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000B47C(v11, (uint64_t)qword_1009766B8);
    swift_bridgeObjectRetain_n();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      v17[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_100254634(a2, a3, v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v15 = "Already discovering/discovered %s";
LABEL_12:
      _os_log_impl((void *)&_mh_execute_header, v12, v13, v15, v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
  }

  swift_bridgeObjectRelease_n();
}

uint64_t sub_1004CB3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_1004CB460, v5, 0);
}

uint64_t sub_1004CB460()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_sessionLogger);
  uint64_t v2 = *(void *)(v1 + 24);
  if (!v2) {
    goto LABEL_9;
  }
  if (!((unint64_t)v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_4;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v2 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_22;
    }
    id v4 = *(id *)(v2 + 32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
LABEL_9:
  uint64_t v2 = (uint64_t)String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unint64_t v5 = *(void *)(v1 + 24);
  if (!v5) {
    goto LABEL_17;
  }
  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_12;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    unint64_t v5 = 0;
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (!result) {
    goto LABEL_16;
  }
LABEL_12:
  if ((v5 & 0xC000000000000001) != 0)
  {
LABEL_22:
    uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    unint64_t v5 = *(unsigned int *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid);
    swift_unknownObjectRelease();
    goto LABEL_17;
  }
  if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    return result;
  }
  uint64_t v8 = (char *)*(id *)(v5 + 32);
  swift_bridgeObjectRelease();
  unint64_t v5 = *(unsigned int *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid];

LABEL_17:
  sub_100046EFC(@"BonjourBrowse", @"Start", v2, v5);

  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1004CB6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  v4[7] = static AirDropActor.shared;
  return _swift_task_switch(sub_1004CB75C, v5, 0);
}

uint64_t sub_1004CB75C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v2 = (void *)Strong, v3 = swift_unknownObjectWeakLoadStrong(), *(void *)(v0 + 64) = v3, v2, v3))
  {
    uint64_t v4 = static AirDropActor.shared;
    return _swift_task_switch(sub_1004CB84C, v4, 0);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_1004CB84C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  sub_10046CB78();
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser);
  if (v3)
  {
    id v4 = v3;
    sub_1004C8748();

    uint64_t v3 = *(void **)(v1 + v2);
  }
  uint64_t v5 = *(void *)(v0 + 56);
  *(void *)(v1 + v2) = 0;

  swift_unknownObjectRelease();
  return _swift_task_switch(sub_10049141C, v5, 0);
}

id sub_1004CB8F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NWBrowser.Result();
  uint64_t v61 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v4 = (char *)v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NWEndpoint();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v60 = (char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (void *)((char *)v54 - v10);
  __chkstk_darwin(v9);
  os_log_type_t v13 = (char *)v54 - v12;
  NWBrowser.Result.endpoint.getter();
  (*(void (**)(uint64_t *, char *, uint64_t))(v6 + 16))(v11, v13, v5);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v6 + 88))(v11, v5) != enum case for NWEndpoint.service(_:))
  {
    id result = (id)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  (*(void (**)(uint64_t *, uint64_t))(v6 + 96))(v11, v5);
  uint64_t v15 = *v11;
  unint64_t v14 = v11[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_10000A844(&qword_1009767D0);
  sub_10000A7E8((uint64_t)v11 + *(int *)(v16 + 80), &qword_10097D7A0);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
  uint64_t v17 = sub_100660398();
  if (v18)
  {
    if (qword_100969EB0 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_10000B47C(v37, (uint64_t)qword_1009766B8);
    swift_bridgeObjectRetain();
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v63 = sub_100254634(v15, v14, &v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Missing TXT record for Bonjour service %s", v40, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  uint64_t v19 = v62;
  uint64_t v20 = *(void **)(v62 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_rpClient);
  if (!v20)
  {
    swift_bridgeObjectRelease();
    if (qword_100969EB0 != -1) {
      swift_once();
    }
    uint64_t v41 = type metadata accessor for Logger();
    sub_10000B47C(v41, (uint64_t)qword_1009766B8);
    unint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Missing RPClient for Bonjour browser", v44, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  uint64_t v21 = v17;
  uint64_t v22 = qword_100969EB0;
  id v59 = v20;
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for Logger();
  sub_10000B47C(v23, (uint64_t)qword_1009766B8);
  uint64_t v24 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v4, a1, v2);
  swift_bridgeObjectRetain_n();
  os_log_type_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  int v27 = v26;
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    uint64_t v64 = v58;
    *(_DWORD *)uint64_t v28 = 136315394;
    os_log_t v57 = v25;
    swift_bridgeObjectRetain();
    uint64_t v56 = v15;
    uint64_t v63 = sub_100254634(v15, v14, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v28 + 12) = 2080;
    v54[1] = v28 + 14;
    NWBrowser.Result.interfaces.getter();
    type metadata accessor for NWInterface();
    uint64_t v29 = v21;
    uint64_t v30 = Array.description.getter();
    int v55 = v27;
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
    uint64_t v33 = v30;
    uint64_t v21 = v29;
    uint64_t v63 = sub_100254634(v33, v32, &v64);
    uint64_t v19 = v62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v34 = v2;
    uint64_t v35 = v56;
    (*(void (**)(char *, uint64_t))(v61 + 8))(v4, v34);
    os_log_t v36 = v57;
    _os_log_impl((void *)&_mh_execute_header, v57, (os_log_type_t)v55, "Creating service %s from interfaces %s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v2);

    uint64_t v35 = v15;
  }
  uint64_t v46 = (uint64_t)v60;
  NWBrowser.Result.endpoint.getter();
  int64_t v47 = *(void **)(v19 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_deviceStatus);
  unint64_t v48 = *(void **)(v19 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_nearbyAgent);
  int64_t v49 = *(void **)(v19 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browserQueue);
  id v50 = objc_allocWithZone((Class)type metadata accessor for SDAirDropBonjourDiscoverConnection());
  id v51 = v47;
  id v52 = v48;
  id v53 = v49;
  return sub_100396FAC(v35, v14, v46, v21, (uint64_t)v51, (uint64_t)v52, (uint64_t)v59, (uint64_t)v53);
}

uint64_t sub_1004CC0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10000A844(&qword_10096D8B8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToAirDropEndpoints);
  swift_beginAccess();
  uint64_t v10 = *v9;
  if (*(void *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1005838BC(a1, a2);
    if (v12)
    {
      uint64_t v13 = v11;
      uint64_t v14 = *(void *)(v10 + 56);
      uint64_t v15 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
      uint64_t v16 = *(void *)(v15 - 8);
      sub_10025AE8C(v14 + *(void *)(v16 + 72) * v13, (uint64_t)v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
    }
    else
    {
      uint64_t v15 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
  }
  swift_endAccess();
  type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v8, 1, v15);
  sub_10000A7E8((uint64_t)v8, &qword_10096D8B8);
  if (v17 == 1)
  {
    char v18 = (uint64_t *)(v3
                    + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections);
    swift_beginAccess();
    uint64_t v19 = *v18;
    if (*(void *)(v19 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1005838BC(a1, a2);
      char v22 = v21;
      if (v21) {
        id v23 = *(id *)(*(void *)(v19 + 56) + 8 * v20);
      }
      else {
        id v23 = 0;
      }
      char v24 = v22 ^ 1;
      swift_bridgeObjectRelease();
    }
    else
    {
      id v23 = 0;
      char v24 = 1;
    }
    swift_endAccess();
  }
  else
  {
    char v24 = 0;
  }
  return v24 & 1;
}

uint64_t sub_1004CC39C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_1004CC438, v5, 0);
}

uint64_t sub_1004CC438()
{
  unsigned int v1 = [*(id *)(*(void *)(v0 + 16)+ OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_deviceStatus) bluetoothEnabled];
  uint64_t v2 = *(void *)(v0 + 16);
  if (v1)
  {
    if (*(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browser)) {
      sub_1005DDDE4(*(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_sessionLogger));
    }
  }
  else
  {
    sub_1005DDE0C(*(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_sessionLogger));
  }
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1004CC73C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[33] = a3;
  v4[34] = v3;
  v4[31] = a1;
  v4[32] = a2;
  sub_10000A844(&qword_100975010);
  v4[35] = swift_task_alloc();
  sub_10000A844(&qword_10096D8B8);
  v4[36] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v4[37] = v5;
  v4[38] = *(void *)(v5 - 8);
  v4[39] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v4[40] = static AirDropActor.shared;
  return _swift_task_switch(sub_1004CC89C, v6, 0);
}

uint64_t sub_1004CC89C()
{
  id v1 = sub_1004CB8F8(v0[31]);
  v0[41] = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v4 = v0[33];
    uint64_t v3 = v0[34];
    uint64_t v5 = v0[32];
    uint64_t v6 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections;
    v0[42] = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections;
    uint64_t v7 = (uint64_t *)(v3 + v6);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    id v8 = v2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v7;
    *uint64_t v7 = 0x8000000000000000;
    sub_1005940D8((uint64_t)v8, v5, v4, isUniquelyReferenced_nonNull_native);
    *uint64_t v7 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v10 = (void *)swift_task_alloc();
    v0[43] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1004CCA4C;
    uint64_t v11 = v0[39];
    return sub_10039712C(v11);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_1004CCA4C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 352) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 320);
  if (v0) {
    uint64_t v4 = sub_1004CD0D0;
  }
  else {
    uint64_t v4 = sub_1004CCB78;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1004CCB78()
{
  uint64_t v33 = v0;
  if (qword_100969EB0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_1009766B8);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = *(void *)(v0 + 264);
  if (v4)
  {
    uint64_t v6 = *(void *)(v0 + 256);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    v32[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 240) = sub_100254634(v6, v5, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Bonjour service %s completed discovery", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v8 = *(void *)(v0 + 304);
  uint64_t v31 = *(void *)(v0 + 312);
  uint64_t v10 = *(void *)(v0 + 288);
  uint64_t v9 = *(void *)(v0 + 296);
  uint64_t v11 = *(void *)(v0 + 272);
  uint64_t v12 = *(void *)(v0 + 280);
  uint64_t v13 = *(void *)(v0 + 256);
  uint64_t v14 = *(void *)(v0 + 264);
  sub_10025AE8C(v31, v10);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v9);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_100466CAC(v10, v13, v14);
  swift_endAccess();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1002AA050(v13, v14);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v15 = type metadata accessor for NWBrowser.Result();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 1, 1, v15);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_100467ACC(v12, v13, v14);
  swift_endAccess();
  uint64_t v16 = *(void (**)(void *))(v11
                                        + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_endpointsUpdateHandler);
  uint64_t v17 = swift_bridgeObjectRetain();
  char v18 = sub_100254CF0(v17);
  swift_bridgeObjectRelease();
  v16(v18);
  swift_release();
  sub_10025AEF0(v31);
  uint64_t v19 = *(void *)(v0 + 352);
  uint64_t v20 = *(void *)(v0 + 328);
  uint64_t v21 = *(void *)(v0 + 264);
  uint64_t v22 = *(void *)(v0 + 256);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  id v23 = (void *)sub_1002AA038(v22, v21);
  swift_endAccess();
  swift_bridgeObjectRelease();

  if (*(void *)(v20 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection))
  {
    swift_retain();
    NWConnection.forceCancel()();
    swift_release();
  }
  if (*(void *)(*(void *)(v0 + 328)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection))
  {
    swift_retain();
    NWConnection.forceCancel()();
    swift_release();
  }
  char v24 = *(void **)(v0 + 272);
  swift_beginAccess();
  uint64_t v25 = swift_bridgeObjectRetain();
  uint64_t v26 = sub_1002550D4(v25);
  swift_bridgeObjectRelease();
  v32[0] = (uint64_t)v26;
  id v27 = v24;
  swift_retain();
  sub_1004D08F4(v32, v27);
  if (v19)
  {

    return swift_release();
  }
  else
  {
    uint64_t v29 = *(void **)(v0 + 328);

    swift_release();
    *(void *)(v0 + 232) = v32[0];
    CurrentValueSubject.send(_:)();
    swift_release();

    sub_1002CA430(0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
    return v30();
  }
}

uint64_t sub_1004CD0D0()
{
  uint64_t v42 = v0;
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 256);
  os_log_type_t v3 = (uint64_t *)(*(void *)(v0 + 272)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v41[0] = *v3;
  uint64_t v5 = v41[0];
  *os_log_type_t v3 = 0x8000000000000000;
  unint64_t v7 = sub_1005838BC(v2, v1);
  uint64_t v8 = *(void *)(v5 + 16);
  BOOL v9 = (v6 & 1) == 0;
  uint64_t v10 = v8 + v9;
  if (__OFADD__(v8, v9))
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v11 = v6;
  if (*(void *)(v5 + 24) >= v10)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10058F7A4();
      uint64_t v5 = v41[0];
    }
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 256);
    uint64_t v12 = *(void *)(v0 + 264);
    sub_10058A5D0(v10, isUniquelyReferenced_nonNull_native);
    uint64_t v5 = v41[0];
    uint64_t v14 = sub_1005838BC(v13, v12);
    if ((v11 & 1) != (v15 & 1))
    {
      return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    }
    unint64_t v7 = v14;
  }
  *os_log_type_t v3 = v5;
  swift_bridgeObjectRelease();
  uint64_t v17 = (void *)*v3;
  swift_bridgeObjectRetain();
  if ((v11 & 1) == 0)
  {
    sub_100595588(v7, *(void *)(v0 + 256), *(void *)(v0 + 264), 0, v17);
    swift_bridgeObjectRetain();
  }
  uint64_t v18 = v17[7];
  uint64_t v19 = *(void *)(v18 + 8 * v7);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (v20) {
    goto LABEL_25;
  }
  *(void *)(v18 + 8 * v7) = v21;
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_100969EB0 != -1) {
LABEL_26:
  }
    swift_once();
  uint64_t v22 = type metadata accessor for Logger();
  sub_10000B47C(v22, (uint64_t)qword_1009766B8);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  id v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.error.getter();
  BOOL v25 = os_log_type_enabled(v23, v24);
  unint64_t v26 = *(void *)(v0 + 264);
  if (v25)
  {
    uint64_t v27 = *(void *)(v0 + 256);
    uint64_t v28 = swift_slowAlloc();
    v41[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 224) = sub_100254634(v27, v26, v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v28 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v29 = Error.flatDescription.getter();
    *(void *)(v0 + 208) = sub_100254634(v29, v30, v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Bonjour service %s failed discovery -  %s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v31 = *(void *)(v0 + 328);
  uint64_t v32 = *(void *)(v0 + 264);
  uint64_t v33 = *(void *)(v0 + 256);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v34 = (void *)sub_1002AA038(v33, v32);
  swift_endAccess();
  swift_bridgeObjectRelease();

  if (*(void *)(v31 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection))
  {
    swift_retain();
    NWConnection.forceCancel()();
    swift_release();
  }
  if (*(void *)(*(void *)(v0 + 328)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection))
  {
    swift_retain();
    NWConnection.forceCancel()();
    swift_release();
  }
  uint64_t v35 = *(void **)(v0 + 272);
  swift_beginAccess();
  uint64_t v36 = swift_bridgeObjectRetain();
  uint64_t v37 = sub_1002550D4(v36);
  swift_bridgeObjectRelease();
  v41[0] = (uint64_t)v37;
  id v38 = v35;
  swift_retain();
  sub_1004D08F4(v41, v38);
  os_log_type_t v39 = *(void **)(v0 + 328);

  swift_release();
  *(void *)(v0 + 232) = v41[0];
  CurrentValueSubject.send(_:)();
  swift_release();

  sub_1002CA430((uint64_t)sub_100247C2C);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_1004CD6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a4;
  uint64_t v5 = sub_10000A844(&qword_100976790);
  v4[12] = v5;
  v4[13] = *(void *)(v5 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v6 = sub_10000A844(&qword_100976798);
  v4[15] = v6;
  v4[16] = *(void *)(v6 - 8);
  v4[17] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  v4[18] = static AirDropActor.shared;
  return _swift_task_switch(sub_1004CD810, v7, 0);
}

uint64_t sub_1004CD810()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[19] = Strong;
  if (Strong)
  {
    uint64_t v2 = v0[13];
    uint64_t v3 = v0[14];
    uint64_t v4 = v0[12];
    v0[8] = *(void *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesNeedingDiscovery);
    sub_10000A844(&qword_1009767A0);
    sub_1002AE308(&qword_1009767A8, &qword_1009767A0);
    Publisher<>.values.getter();
    AsyncPublisher.makeAsyncIterator()();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
    v0[20] = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount;
    swift_beginAccess();
    v0[21] = static AirDropActor.shared;
    v0[22] = sub_1004D1860((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v5 = sub_1002AE308(&qword_1009767B0, &qword_100976798);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[23] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1004CDA8C;
    uint64_t v7 = v0[15];
    return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 9, v7, v5);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_1004CDA8C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 192) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 168);
  if (v0)
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v6 = v5;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v7 = sub_1004CE0A4;
  }
  else
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v6 = v8;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v7 = sub_1004CDC24;
  }
  return _swift_task_switch(v7, v4, v6);
}

uint64_t sub_1004CDC24()
{
  uint64_t v1 = v0[18];
  v0[25] = v0[9];
  return _swift_task_switch(sub_1004CDC48, v1, 0);
}

uint64_t sub_1004CDC48()
{
  uint64_t v24 = v0;
  if (*(void *)(v0 + 200))
  {
    if (qword_100969EB0 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_10000B47C(v1, (uint64_t)qword_1009766B8);
    swift_bridgeObjectRetain_n();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v5 = Array.description.getter();
      unint64_t v7 = v6;
      swift_bridgeObjectRelease();
      *(void *)(v4 + 4) = sub_100254634(v5, v7, &v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Service names to discover %s", (uint8_t *)v4, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    id v11 = *(id *)(v0 + 152);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = *(void **)(v0 + 152);
      uint64_t v15 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v16 = Dictionary.description.getter();
      unint64_t v18 = v17;
      swift_bridgeObjectRelease();
      *(void *)(v15 + 4) = sub_100254634(v16, v18, &v23);
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Current service name timeouts %s", (uint8_t *)v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v19 = *(void **)(v0 + 152);
    }
    sub_1004CE128();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 168) = static AirDropActor.shared;
    *(void *)(v0 + 176) = sub_1004D1860((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v20 = sub_1002AE308(&qword_1009767B0, &qword_100976798);
    uint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_1004CDA8C;
    uint64_t v22 = *(void *)(v0 + 120);
    return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 72, v22, v20);
  }
  else
  {
    uint64_t v8 = *(void **)(v0 + 152);
    (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

uint64_t sub_1004CE0A4()
{
  *(void *)(v0 + 80) = *(void *)(v0 + 192);
  sub_10000A844(&qword_10096BAF0);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

void sub_1004CE128()
{
  uint64_t v1 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v1 - 8);
  os_log_type_t v3 = (char *)v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0;
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1004CF338(v5, (uint64_t)v4);
  swift_bridgeObjectRelease();

  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    v31[4] = &v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_delegate];
    uint64_t v32 = &v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections];
    swift_beginAccess();
    v31[1] = v6;
    uint64_t v8 = (uint64_t *)(v6 + 40);
    void v31[2] = (char *)&type metadata for () + 8;
    v31[3] = v4;
    while (1)
    {
      uint64_t v9 = *(v8 - 1);
      uint64_t v10 = *v8;
      unint64_t v11 = *(void *)(*(void *)v32 + 16);
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v13 = Strong + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables;
        swift_beginAccess();
        uint64_t v14 = *(void *)(*(void *)v13 + 16);
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        if (v14)
        {
          if (v11 > 2) {
            goto LABEL_23;
          }
          goto LABEL_11;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      if (v11 > 5)
      {
LABEL_23:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (qword_100969EB0 != -1) {
          swift_once();
        }
        uint64_t v27 = type metadata accessor for Logger();
        sub_10000B47C(v27, (uint64_t)qword_1009766B8);
        uint64_t v28 = Logger.logObject.getter();
        os_log_type_t v29 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v28, v29))
        {
          unint64_t v30 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v30 = 0;
          _os_log_impl((void *)&_mh_execute_header, v28, v29, "Discover requests maxed out, waiting for them to complete", v30, 2u);
          swift_slowDealloc();
        }

        return;
      }
LABEL_11:
      uint64_t v33 = v7;
      uint64_t v15 = type metadata accessor for TaskPriority();
      uint64_t v16 = *(void *)(v15 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v3, 1, 1, v15);
      uint64_t v17 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v18 = qword_100969B90;
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v19 = (uint64_t)v3;
      if (v18 != -1) {
        swift_once();
      }
      uint64_t v20 = static AirDropActor.shared;
      uint64_t v21 = sub_1004D1860((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
      uint64_t v22 = (void *)swift_allocObject();
      void v22[2] = v20;
      v22[3] = v21;
      v22[4] = v17;
      void v22[5] = v9;
      v22[6] = v10;
      swift_retain();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v19, 1, v15) == 1)
      {
        sub_10000A7E8(v19, &qword_10096C920);
        if (!v22[2]) {
          goto LABEL_17;
        }
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v19, v15);
        if (!v22[2])
        {
LABEL_17:
          uint64_t v23 = 0;
          uint64_t v25 = 0;
          goto LABEL_18;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v23 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v25 = v24;
      swift_unknownObjectRelease();
LABEL_18:
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = &unk_1009767C0;
      *(void *)(v26 + 24) = v22;
      if (v25 | v23)
      {
        uint64_t v34 = 0;
        uint64_t v35 = 0;
        uint64_t v36 = v23;
        uint64_t v37 = v25;
      }
      os_log_type_t v3 = (char *)v19;
      v8 += 2;
      swift_task_create();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v7 = v33 - 1;
      if (v33 == 1) {
        goto LABEL_28;
      }
    }
  }

LABEL_28:
  swift_bridgeObjectRelease();
}

uint64_t sub_1004CE648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[16] = a5;
  v6[17] = a6;
  v6[15] = a4;
  sub_10000A844(&qword_100975010);
  v6[18] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for NWBrowser.Result();
  v6[19] = v7;
  v6[20] = *(void *)(v7 - 8);
  v6[21] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v8 = static AirDropActor.shared;
  v6[22] = static AirDropActor.shared;
  return _swift_task_switch(sub_1004CE778, v8, 0);
}

uint64_t sub_1004CE778()
{
  unint64_t v48 = v0;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[23] = Strong;
  if (!Strong)
  {
LABEL_13:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
  uint64_t v2 = (char *)Strong;
  os_log_type_t v3 = (uint64_t *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (!*(void *)(v4 + 16))
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[20] + 56))(v0[18], 1, 1, v0[19]);
LABEL_8:
    sub_10000A7E8(v0[18], &qword_100975010);
    swift_endAccess();
    if (qword_100969EB0 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000B47C(v13, (uint64_t)qword_1009766B8);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Missing browse result for service name, endpoint may have disappeared", v16, 2u);
      swift_slowDealloc();
    }
    else
    {
    }
    goto LABEL_13;
  }
  uint64_t v6 = v0[16];
  uint64_t v5 = v0[17];
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1005838BC(v6, v5);
  if (v8)
  {
    (*(void (**)(void, uint64_t, void))(v0[20] + 16))(v0[18], *(void *)(v4 + 56) + *(void *)(v0[20] + 72) * v7, v0[19]);
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v9 = 1;
  }
  uint64_t v10 = v0[19];
  uint64_t v11 = v0[20];
  uint64_t v12 = v0[18];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v12, v9, 1, v10);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10) == 1) {
    goto LABEL_8;
  }
  uint64_t v20 = v0[16];
  uint64_t v19 = v0[17];
  (*(void (**)(void, void, void))(v0[20] + 32))(v0[21], v0[18], v0[19]);
  swift_endAccess();
  if ((sub_1004CC0B4(v20, v19) & 1) == 0)
  {
    if (qword_100969EB0 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_10000B47C(v30, (uint64_t)qword_1009766B8);
    swift_bridgeObjectRetain_n();
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.default.getter();
    BOOL v33 = os_log_type_enabled(v31, v32);
    uint64_t v34 = v0[20];
    uint64_t v35 = v0[21];
    uint64_t v36 = v0[19];
    unint64_t v37 = v0[17];
    if (v33)
    {
      uint64_t v46 = v0[16];
      id v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      *(_DWORD *)id v38 = 136315138;
      swift_bridgeObjectRetain();
      v0[14] = sub_100254634(v46, v37, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Already discovering/discovered %s", v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v36);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v36);
    }
    goto LABEL_13;
  }
  uint64_t v21 = &v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections];
  swift_beginAccess();
  unint64_t v22 = *(void *)(*(void *)v21 + 16);
  uint64_t v23 = swift_unknownObjectWeakLoadStrong();
  if (!v23
    || (uint64_t v24 = v23 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables,
        swift_beginAccess(),
        uint64_t v25 = *(void *)(*(void *)v24 + 16),
        swift_unknownObjectRelease(),
        !v25))
  {
    if (v22 <= 5) {
      goto LABEL_20;
    }
LABEL_28:
    if (qword_100969EB0 != -1) {
      swift_once();
    }
    uint64_t v39 = type metadata accessor for Logger();
    sub_10000B47C(v39, (uint64_t)qword_1009766B8);
    uint64_t v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Discover requests maxed out, waiting for them to complete", v42, 2u);
      swift_slowDealloc();
    }
    uint64_t v44 = v0[20];
    uint64_t v43 = v0[21];
    uint64_t v45 = v0[19];

    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
    goto LABEL_13;
  }
  if (v22 > 2) {
    goto LABEL_28;
  }
LABEL_20:
  uint64_t v26 = (void *)swift_task_alloc();
  v0[24] = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_1004CEDE8;
  uint64_t v27 = v0[21];
  uint64_t v28 = v0[16];
  uint64_t v29 = v0[17];
  return sub_1004CC73C(v27, v28, v29);
}

uint64_t sub_1004CEDE8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  swift_task_dealloc();
  return _swift_task_switch(sub_1004CEEF8, v1, 0);
}

uint64_t sub_1004CEEF8()
{
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 152);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t type metadata accessor for SDAirDropBonjourBrowser()
{
  return self;
}

uint64_t sub_1004CF10C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F0;
  return sub_1004CC39C(a1, v4, v5, v6);
}

uint64_t sub_1004CF1C0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004CF1F8(uint64_t a1, uint64_t a2)
{
  return sub_1004C91A4(a1, a2);
}

uint64_t sub_1004CF200()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004CF238()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004CF278(uint64_t a1)
{
  return sub_1004CA57C(a1);
}

uint64_t sub_1004CF284(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F4;
  return sub_1004CD6B0(a1, v4, v5, v6);
}

uint64_t sub_1004CF338(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_10096D8B8);
  uint64_t result = __chkstk_darwin(v4 - 8);
  uint64_t v42 = (uint64_t)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v7 = *(void *)(a1 + 16);
  if (!v7) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v8 = 0;
  uint64_t v9 = (uint64_t *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToAirDropEndpoints);
  uint64_t v44 = (uint64_t *)(a2
                  + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections);
  uint64_t v10 = a1 + 40;
  uint64_t v43 = -(uint64_t)v7;
  uint64_t v11 = _swiftEmptyArrayStorage;
  uint64_t v39 = v10;
  unint64_t v40 = v7;
  do
  {
    os_log_type_t v41 = v11;
    if (v8 <= v7) {
      unint64_t v12 = v7;
    }
    else {
      unint64_t v12 = v8;
    }
    uint64_t v45 = -(uint64_t)v12;
    uint64_t v13 = (uint64_t *)(v10 + 16 * v8++);
    uint64_t v15 = v42;
    uint64_t v14 = v43;
    while (1)
    {
      if (v45 + v8 == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v16 = *(v13 - 1);
      uint64_t v17 = *v13;
      swift_beginAccess();
      uint64_t v18 = *v9;
      uint64_t v19 = *(void *)(*v9 + 16);
      uint64_t v46 = v16;
      if (v19)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v20 = sub_1005838BC(v16, v17);
        if (v21)
        {
          uint64_t v22 = v20;
          uint64_t v23 = *(void *)(v18 + 56);
          uint64_t v24 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
          uint64_t v25 = v9;
          uint64_t v26 = *(void *)(v24 - 8);
          uint64_t v27 = v23 + *(void *)(v26 + 72) * v22;
          uint64_t v15 = v42;
          sub_10025AE8C(v27, v42);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v15, 0, 1, v24);
          uint64_t v9 = v25;
          uint64_t v14 = v43;
        }
        else
        {
          uint64_t v24 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v15, 1, 1, v24);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v24 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v15, 1, 1, v24);
        swift_bridgeObjectRetain();
      }
      swift_endAccess();
      type metadata accessor for SDAirDropDiscoveredEndpoint(0);
      int v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v15, 1, v24);
      sub_10000A7E8(v15, &qword_10096D8B8);
      if (v28 == 1) {
        break;
      }
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      ++v8;
      v13 += 2;
      if (v14 + v8 == 1) {
        return (uint64_t)v41;
      }
    }
    uint64_t v29 = v44;
    swift_beginAccess();
    uint64_t v30 = *v29;
    uint64_t v31 = *(void *)(*v29 + 16);
    uint64_t v32 = v46;
    if (!v31) {
      goto LABEL_20;
    }
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1005838BC(v32, v17);
    if (v34)
    {
      id v35 = *(id *)(*(void *)(v30 + 56) + 8 * v33);
      swift_endAccess();

      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
LABEL_20:
    swift_endAccess();
    uint64_t v11 = v41;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v47 = v11;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_100255510(0, v11[2] + 1, 1);
      uint64_t v11 = v47;
    }
    uint64_t v10 = v39;
    unint64_t v7 = v40;
    unint64_t v37 = v11[2];
    unint64_t v36 = v11[3];
    if (v37 >= v36 >> 1)
    {
      uint64_t result = sub_100255510(v36 > 1, v37 + 1, 1);
      uint64_t v11 = v47;
    }
    v11[2] = v37 + 1;
    id v38 = &v11[2 * v37];
    v38[4] = v32;
    v38[5] = v17;
  }
  while (v43 + v8);
  return (uint64_t)v11;
}

uint64_t sub_1004CF754()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004CF79C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_1004CE648(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1004CF864()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004CF89C(uint64_t *__src, uint64_t *a2, unint64_t a3, uint64_t *a4, char *a5)
{
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  os_log_t v57 = __src;
  uint64_t v56 = a4;
  if (v10 >= v12 >> 4)
  {
    if (v11 < -15) {
      goto LABEL_64;
    }
    if (a4 != a2 || &a2[2 * v13] <= a4) {
      memmove(a4, a2, 16 * v13);
    }
    uint64_t v30 = (char *)&a4[2 * v13];
    int v55 = v30;
    os_log_t v57 = v6;
    if (v7 >= v6 || v11 < 16)
    {
LABEL_63:
      sub_1004823B8((void **)&v57, (const void **)&v56, &v55);
      return 1;
    }
    id v50 = &a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount];
    id v51 = v7;
    uint64_t v31 = (uint64_t *)(a3 - 16);
    uint64_t v32 = v6;
    while (1)
    {
      unint64_t v54 = (unint64_t)v30;
      uint64_t v33 = *((void *)v30 - 2);
      uint64_t v35 = *((void *)v30 - 1);
      char v34 = v30 - 16;
      uint64_t v37 = *(v32 - 2);
      uint64_t v36 = *(v32 - 1);
      v32 -= 2;
      swift_beginAccess();
      uint64_t v38 = *(void *)v50;
      uint64_t v39 = *(void *)(*(void *)v50 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v39)
      {
        uint64_t v40 = sub_1005838BC(v33, v35);
        if (v41)
        {
          uint64_t v42 = *(void *)(*(void *)(v38 + 56) + 8 * v40);
          if (*(void *)(v38 + 16)) {
            goto LABEL_44;
          }
        }
        else
        {
          uint64_t v42 = 0;
          if (*(void *)(v38 + 16))
          {
LABEL_44:
            swift_bridgeObjectRetain();
            uint64_t v43 = sub_1005838BC(v37, v36);
            if (v44) {
              uint64_t v45 = *(void *)(*(void *)(v38 + 56) + 8 * v43);
            }
            else {
              uint64_t v45 = 0;
            }
            swift_bridgeObjectRelease();
            goto LABEL_51;
          }
        }
        uint64_t v45 = 0;
      }
      else
      {
        uint64_t v42 = 0;
        uint64_t v45 = 0;
      }
LABEL_51:
      uint64_t v46 = v31 + 2;
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v42 >= v45)
      {
        int v55 = v34;
        if ((unint64_t)v46 < v54 || (unint64_t)v31 >= v54 || v46 != (uint64_t *)v54) {
          *(_OWORD *)uint64_t v31 = *(_OWORD *)v34;
        }
        uint64_t v32 = v6;
        uint64_t v30 = v34;
      }
      else
      {
        uint64_t v30 = (char *)v54;
        if (v46 != v6 || v31 >= v6) {
          *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
        }
        os_log_t v57 = v32;
      }
      if (v32 > v51)
      {
        v31 -= 2;
        uint64_t v6 = v32;
        if (v30 > (char *)a4) {
          continue;
        }
      }
      goto LABEL_63;
    }
  }
  if (v8 >= -15)
  {
    if (a4 != __src || &__src[2 * v10] <= a4) {
      memmove(a4, __src, 16 * v10);
    }
    uint64_t v49 = (char *)&a4[2 * v10];
    int v55 = v49;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      unint64_t v48 = &a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount];
      uint64_t v14 = a4;
      while (1)
      {
        uint64_t v15 = v7;
        uint64_t v16 = *v6;
        uint64_t v17 = v6[1];
        uint64_t v18 = *v14;
        uint64_t v19 = v14[1];
        swift_beginAccess();
        uint64_t v20 = *(void *)v48;
        uint64_t v21 = *(void *)(*(void *)v48 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v21)
        {
          uint64_t v22 = sub_1005838BC(v16, v17);
          if (v23)
          {
            uint64_t v24 = *(void *)(*(void *)(v20 + 56) + 8 * v22);
            if (*(void *)(v20 + 16)) {
              goto LABEL_16;
            }
          }
          else
          {
            uint64_t v24 = 0;
            if (*(void *)(v20 + 16))
            {
LABEL_16:
              swift_bridgeObjectRetain();
              uint64_t v25 = sub_1005838BC(v18, v19);
              if (v26) {
                uint64_t v27 = *(void *)(*(void *)(v20 + 56) + 8 * v25);
              }
              else {
                uint64_t v27 = 0;
              }
              swift_bridgeObjectRelease();
              goto LABEL_23;
            }
          }
          uint64_t v27 = 0;
        }
        else
        {
          uint64_t v24 = 0;
          uint64_t v27 = 0;
        }
LABEL_23:
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v24 >= v27)
        {
          uint64_t v29 = v15;
          if (v15 != v14) {
            *(_OWORD *)uint64_t v15 = *(_OWORD *)v14;
          }
          v14 += 2;
          uint64_t v56 = v14;
          int v28 = v6;
        }
        else
        {
          int v28 = v6 + 2;
          uint64_t v29 = v15;
          if (v15 < v6 || v15 >= v28 || v15 != v6) {
            *(_OWORD *)uint64_t v15 = *(_OWORD *)v6;
          }
        }
        uint64_t v7 = v29 + 2;
        if (v14 < (uint64_t *)v49)
        {
          uint64_t v6 = v28;
          if ((unint64_t)v28 < a3) {
            continue;
          }
        }
        os_log_t v57 = v7;
        goto LABEL_63;
      }
    }
    goto LABEL_63;
  }
LABEL_64:

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004CFCEC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v22 = result;
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v24 = (uint64_t *)(a5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount);
    uint64_t v26 = *a4;
    uint64_t v6 = (uint64_t *)(*a4 + 16 * a3);
LABEL_5:
    uint64_t v7 = (uint64_t *)(v26 + 16 * v5);
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    uint64_t v10 = v22;
    char v23 = v6;
    while (1)
    {
      uint64_t v11 = *(v6 - 2);
      uint64_t v12 = *(v6 - 1);
      swift_beginAccess();
      uint64_t v13 = *v24;
      uint64_t v14 = *(void *)(*v24 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v14)
      {
        uint64_t v17 = 0;
        uint64_t v20 = 0;
        goto LABEL_16;
      }
      uint64_t v25 = v11;
      uint64_t v15 = sub_1005838BC(v8, v9);
      if (v16)
      {
        uint64_t v17 = *(void *)(*(void *)(v13 + 56) + 8 * v15);
        if (!*(void *)(v13 + 16)) {
          goto LABEL_13;
        }
      }
      else
      {
        uint64_t v17 = 0;
        if (!*(void *)(v13 + 16))
        {
LABEL_13:
          uint64_t v20 = 0;
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1005838BC(v25, v12);
      if (v19) {
        uint64_t v20 = *(void *)(*(void *)(v13 + 56) + 8 * v18);
      }
      else {
        uint64_t v20 = 0;
      }
      swift_bridgeObjectRelease();
LABEL_16:
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v17 >= v20) {
        goto LABEL_4;
      }
      if (!v26)
      {
        __break(1u);
        return result;
      }
      uint64_t v8 = *v6;
      uint64_t v9 = v6[1];
      *(_OWORD *)uint64_t v6 = *((_OWORD *)v6 - 1);
      *(v6 - 1) = v9;
      *(v6 - 2) = v8;
      v6 -= 2;
      if (v5 == ++v10)
      {
LABEL_4:
        ++v5;
        uint64_t v6 = v23 + 2;
        if (v5 == a2) {
          return result;
        }
        goto LABEL_5;
      }
    }
  }
  return result;
}

void sub_1004CFE9C(uint64_t *a1, void *a2)
{
  Swift::Int v3 = a1[1];
  unint64_t v4 = a2;
  Swift::Int v5 = _minimumMergeRunLength(_:)(v3);
  if (v5 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_171;
    }
    if (v3)
    {
      id v9 = (id)v4;
      sub_1004CFCEC(0, v3, 1, a1, (uint64_t)v9);
    }
    else
    {
    }
    goto LABEL_149;
  }
  if (v3 >= 0) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_179;
  }
  Swift::Int v140 = v3;
  Swift::Int v136 = v5;
  uint64_t v144 = (void *)v4;
  int v134 = a1;
  if (v3 < 2)
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
    uint64_t v143 = &_swiftEmptyArrayStorage[4];
    if (v3 == 1)
    {
      uint64_t v137 = _swiftEmptyArrayStorage;
      goto LABEL_13;
    }
    unint64_t v4 = _swiftEmptyArrayStorage[2];
    uint64_t v13 = (char *)_swiftEmptyArrayStorage;
    if (v4 >= 2) {
      goto LABEL_134;
    }
LABEL_147:
    swift_bridgeObjectRelease();
    v10[2] = 0;
    unint64_t v4 = (unint64_t)v144;
LABEL_148:

    swift_bridgeObjectRelease();
LABEL_149:

    return;
  }
  uint64_t v7 = v6 >> 1;
  uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(void *)(v8 + 16) = v7;
  uint64_t v137 = (void *)v8;
  uint64_t v143 = (uint64_t *)(v8 + 32);
LABEL_13:
  int64_t v11 = 0;
  uint64_t v12 = *a1;
  unint64_t v152 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount;
  uint64_t v135 = *a1 + 24;
  uint64_t v13 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v14 = v3;
  uint64_t v154 = *a1;
  while (2)
  {
    int64_t v15 = v11;
    unint64_t v4 = v11 + 1;
    int64_t v141 = v11;
    if (v11 + 1 >= v14) {
      goto LABEL_55;
    }
    uint64_t v145 = v13;
    char v16 = (uint64_t *)(v12 + 16 * v4);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    char v19 = (uint64_t *)(v12 + 16 * v11);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    swift_beginAccess();
    uint64_t v22 = *(void *)v152;
    uint64_t v23 = *(void *)(*(void *)v152 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23)
    {
      uint64_t v24 = sub_1005838BC(v17, v18);
      if (v25)
      {
        uint64_t v148 = *(void *)(*(void *)(v22 + 56) + 8 * v24);
        if (!*(void *)(v22 + 16)) {
          goto LABEL_25;
        }
LABEL_23:
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_1005838BC(v20, v21);
        if (v27) {
          uint64_t v28 = *(void *)(*(void *)(v22 + 56) + 8 * v26);
        }
        else {
          uint64_t v28 = 0;
        }
        Swift::Int v29 = v140;
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      uint64_t v148 = 0;
      if (*(void *)(v22 + 16)) {
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v148 = 0;
    }
LABEL_25:
    uint64_t v28 = 0;
    Swift::Int v29 = v140;
LABEL_28:
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v4 = v15 + 2;
    if (v15 + 2 >= v29) {
      goto LABEL_46;
    }
    uint64_t v30 = (uint64_t *)(v135 + 16 * v15);
    uint64_t v31 = v30;
    while (1)
    {
      unint64_t v32 = v4;
      uint64_t v34 = v31[2];
      v31 += 2;
      uint64_t v33 = v34;
      uint64_t v35 = *(v30 - 1);
      uint64_t v36 = *v30;
      uint64_t v37 = v30[1];
      swift_beginAccess();
      uint64_t v38 = *(void *)v152;
      uint64_t v39 = *(void *)(*(void *)v152 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v39)
      {
        uint64_t v42 = 0;
LABEL_38:
        uint64_t v45 = 0;
        unint64_t v46 = v140;
        goto LABEL_41;
      }
      uint64_t v40 = sub_1005838BC(v37, v33);
      if (v41)
      {
        uint64_t v42 = *(void *)(*(void *)(v38 + 56) + 8 * v40);
        if (!*(void *)(v38 + 16)) {
          goto LABEL_38;
        }
      }
      else
      {
        uint64_t v42 = 0;
        if (!*(void *)(v38 + 16)) {
          goto LABEL_38;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_1005838BC(v35, v36);
      uint64_t v45 = (v44 & 1) != 0 ? *(void *)(*(void *)(v38 + 56) + 8 * v43) : 0;
      unint64_t v46 = v140;
      swift_bridgeObjectRelease();
LABEL_41:
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v148 < v28 == v42 >= v45) {
        break;
      }
      unint64_t v4 = v32 + 1;
      uint64_t v30 = v31;
      if (v46 == v32 + 1)
      {
        unint64_t v4 = v46;
        goto LABEL_45;
      }
    }
    unint64_t v4 = v32;
LABEL_45:
    int64_t v15 = v141;
LABEL_46:
    uint64_t v13 = v145;
    uint64_t v12 = v154;
    if (v148 < v28)
    {
      if ((uint64_t)v4 < v15) {
        goto LABEL_172;
      }
      if (v15 < (uint64_t)v4)
      {
        uint64_t v47 = 16 * v4;
        uint64_t v48 = 16 * v15;
        int64_t v49 = v4;
        int64_t v50 = v15;
        do
        {
          if (v50 != --v49)
          {
            if (!v154) {
              goto LABEL_177;
            }
            uint64_t v51 = v154 + v47;
            uint64_t v52 = *(void *)(v154 + v48);
            uint64_t v53 = *(void *)(v154 + v48 + 8);
            *(_OWORD *)(v154 + v48) = *(_OWORD *)(v154 + v47 - 16);
            *(void *)(v51 - 16) = v52;
            *(void *)(v51 - 8) = v53;
          }
          ++v50;
          v47 -= 16;
          v48 += 16;
        }
        while (v50 < v49);
      }
    }
LABEL_55:
    if ((uint64_t)v4 >= v140) {
      goto LABEL_82;
    }
    if (__OFSUB__(v4, v15)) {
      goto LABEL_170;
    }
    if ((uint64_t)(v4 - v15) >= v136) {
      goto LABEL_82;
    }
    Swift::Int v54 = v15 + v136;
    if (__OFADD__(v15, v136)) {
      goto LABEL_173;
    }
    if (v54 >= v140) {
      Swift::Int v54 = v140;
    }
    if (v54 >= v15)
    {
      if (v4 == v54) {
        goto LABEL_82;
      }
      uint64_t v146 = v13;
      int v55 = (uint64_t *)(v12 + 16 * v4);
      unint64_t v138 = v54;
      while (2)
      {
        uint64_t v56 = (uint64_t *)(v12 + 16 * v4);
        uint64_t v57 = *v56;
        uint64_t v58 = v56[1];
        int64_t v59 = v15;
        uint64_t v149 = v55;
        while (2)
        {
          unint64_t v60 = v4;
          uint64_t v61 = *(v55 - 2);
          uint64_t v62 = *(v55 - 1);
          swift_beginAccess();
          uint64_t v63 = *(void *)v152;
          uint64_t v64 = *(void *)(*(void *)v152 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v64)
          {
            uint64_t v65 = sub_1005838BC(v57, v58);
            if (v66)
            {
              int64_t v67 = *(void *)(*(void *)(v63 + 56) + 8 * v65);
              if (*(void *)(v63 + 16)) {
                goto LABEL_70;
              }
LABEL_74:
              unint64_t v4 = 0;
            }
            else
            {
              int64_t v67 = 0;
              if (!*(void *)(v63 + 16)) {
                goto LABEL_74;
              }
LABEL_70:
              swift_bridgeObjectRetain();
              uint64_t v68 = sub_1005838BC(v61, v62);
              if (v69) {
                unint64_t v4 = *(void *)(*(void *)(v63 + 56) + 8 * v68);
              }
              else {
                unint64_t v4 = 0;
              }
              swift_bridgeObjectRelease();
            }
          }
          else
          {
            int64_t v67 = 0;
            unint64_t v4 = 0;
          }
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v67 < (uint64_t)v4)
          {
            uint64_t v12 = v154;
            if (!v154) {
              goto LABEL_175;
            }
            unint64_t v4 = v60;
            uint64_t v57 = *v55;
            uint64_t v58 = v55[1];
            *(_OWORD *)int v55 = *((_OWORD *)v55 - 1);
            *(v55 - 1) = v58;
            *(v55 - 2) = v57;
            v55 -= 2;
            if (v60 == ++v59) {
              goto LABEL_65;
            }
            continue;
          }
          break;
        }
        uint64_t v12 = v154;
        unint64_t v4 = v60;
LABEL_65:
        ++v4;
        int v55 = v149 + 2;
        int64_t v15 = v141;
        if (v4 != v138) {
          continue;
        }
        break;
      }
      unint64_t v4 = v138;
      uint64_t v13 = v146;
LABEL_82:
      if ((uint64_t)v4 < v15) {
        goto LABEL_165;
      }
      uint64_t v70 = v13;
      int64_t v139 = v4;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t v13 = v70;
      }
      else {
        uint64_t v13 = sub_100481FEC(0, *((void *)v70 + 2) + 1, 1, v70);
      }
      unint64_t v72 = *((void *)v13 + 2);
      unint64_t v71 = *((void *)v13 + 3);
      unint64_t v4 = v72 + 1;
      if (v72 >= v71 >> 1) {
        uint64_t v13 = sub_100481FEC((char *)(v71 > 1), v72 + 1, 1, v13);
      }
      *((void *)v13 + 2) = v4;
      uint64_t v73 = v13 + 32;
      uint64_t v74 = &v13[16 * v72 + 32];
      *(void *)uint64_t v74 = v15;
      *((void *)v74 + 1) = v139;
      if (v72)
      {
        uint64_t v142 = v13 + 32;
        uint64_t v147 = v13;
        while (1)
        {
          unint64_t v75 = v4 - 1;
          if (v4 >= 4)
          {
            uint64_t v80 = &v73[16 * v4];
            uint64_t v81 = *((void *)v80 - 8);
            uint64_t v82 = *((void *)v80 - 7);
            BOOL v86 = __OFSUB__(v82, v81);
            uint64_t v83 = v82 - v81;
            if (v86) {
              goto LABEL_154;
            }
            uint64_t v85 = *((void *)v80 - 6);
            uint64_t v84 = *((void *)v80 - 5);
            BOOL v86 = __OFSUB__(v84, v85);
            uint64_t v78 = v84 - v85;
            char v79 = v86;
            if (v86) {
              goto LABEL_155;
            }
            unint64_t v87 = v4 - 2;
            uint64_t v88 = &v73[16 * v4 - 32];
            uint64_t v90 = *(void *)v88;
            uint64_t v89 = *((void *)v88 + 1);
            BOOL v86 = __OFSUB__(v89, v90);
            uint64_t v91 = v89 - v90;
            if (v86) {
              goto LABEL_157;
            }
            BOOL v86 = __OFADD__(v78, v91);
            uint64_t v92 = v78 + v91;
            if (v86) {
              goto LABEL_160;
            }
            if (v92 >= v83)
            {
              uint64_t v110 = &v73[16 * v75];
              uint64_t v112 = *(void *)v110;
              uint64_t v111 = *((void *)v110 + 1);
              BOOL v86 = __OFSUB__(v111, v112);
              uint64_t v113 = v111 - v112;
              if (v86) {
                goto LABEL_164;
              }
              BOOL v103 = v78 < v113;
              goto LABEL_120;
            }
          }
          else
          {
            if (v4 != 3)
            {
              uint64_t v104 = *((void *)v13 + 4);
              uint64_t v105 = *((void *)v13 + 5);
              BOOL v86 = __OFSUB__(v105, v104);
              uint64_t v97 = v105 - v104;
              char v98 = v86;
              goto LABEL_114;
            }
            uint64_t v77 = *((void *)v13 + 4);
            uint64_t v76 = *((void *)v13 + 5);
            BOOL v86 = __OFSUB__(v76, v77);
            uint64_t v78 = v76 - v77;
            char v79 = v86;
          }
          if (v79) {
            goto LABEL_156;
          }
          unint64_t v87 = v4 - 2;
          uint64_t v93 = &v73[16 * v4 - 32];
          uint64_t v95 = *(void *)v93;
          uint64_t v94 = *((void *)v93 + 1);
          BOOL v96 = __OFSUB__(v94, v95);
          uint64_t v97 = v94 - v95;
          char v98 = v96;
          if (v96) {
            goto LABEL_159;
          }
          unint64_t v99 = &v73[16 * v75];
          uint64_t v101 = *(void *)v99;
          uint64_t v100 = *((void *)v99 + 1);
          BOOL v86 = __OFSUB__(v100, v101);
          uint64_t v102 = v100 - v101;
          if (v86) {
            goto LABEL_162;
          }
          if (__OFADD__(v97, v102)) {
            goto LABEL_163;
          }
          if (v97 + v102 >= v78)
          {
            BOOL v103 = v78 < v102;
LABEL_120:
            if (v103) {
              unint64_t v75 = v87;
            }
            goto LABEL_122;
          }
LABEL_114:
          if (v98) {
            goto LABEL_158;
          }
          uint64_t v106 = &v73[16 * v75];
          uint64_t v108 = *(void *)v106;
          uint64_t v107 = *((void *)v106 + 1);
          BOOL v86 = __OFSUB__(v107, v108);
          uint64_t v109 = v107 - v108;
          if (v86) {
            goto LABEL_161;
          }
          if (v109 < v97) {
            goto LABEL_15;
          }
LABEL_122:
          unint64_t v114 = v75 - 1;
          if (v75 - 1 >= v4)
          {
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
            goto LABEL_174;
          }
          if (!v12) {
            goto LABEL_176;
          }
          uint64_t v115 = &v73[16 * v114];
          uint64_t v116 = v73;
          uint64_t v117 = *(void *)v115;
          unint64_t v118 = v75;
          uint64_t v119 = &v116[16 * v75];
          uint64_t v120 = *((void *)v119 + 1);
          uint64_t v121 = (uint64_t *)(v12 + 16 * *(void *)v115);
          uint64_t v150 = (uint64_t *)(v12 + 16 * *(void *)v119);
          uint64_t v122 = v144;
          sub_1004CF89C(v121, v150, v12 + 16 * v120, v143, v122);
          unint64_t v4 = v151;
          if (v151)
          {
LABEL_131:
            swift_bridgeObjectRelease();
            unint64_t v4 = (unint64_t)v144;

            v137[2] = 0;
            goto LABEL_148;
          }

          if (v120 < v117) {
            goto LABEL_151;
          }
          if (v118 > *((void *)v147 + 2)) {
            goto LABEL_152;
          }
          *(void *)uint64_t v115 = v117;
          uint64_t v73 = v142;
          *(void *)&v142[16 * v114 + 8] = v120;
          unint64_t v123 = *((void *)v147 + 2);
          if (v118 >= v123) {
            goto LABEL_153;
          }
          unint64_t v4 = v123 - 1;
          memmove(v119, v119 + 16, 16 * (v123 - 1 - v118));
          uint64_t v13 = v147;
          *((void *)v147 + 2) = v123 - 1;
          uint64_t v12 = v154;
          if (v123 <= 2) {
            goto LABEL_15;
          }
        }
      }
      unint64_t v4 = 1;
LABEL_15:
      int64_t v11 = v139;
      Swift::Int v14 = v140;
      if (v139 >= v140)
      {
        uint64_t v10 = v137;
        if (v4 < 2) {
          goto LABEL_147;
        }
LABEL_134:
        uint64_t v124 = *v134;
        uint64_t v137 = v10;
        uint64_t v153 = *v134;
        while (1)
        {
          unint64_t v125 = v4 - 2;
          if (v4 < 2) {
            goto LABEL_166;
          }
          if (!v124) {
            goto LABEL_178;
          }
          unint64_t v126 = v13;
          uint64_t v127 = *(void *)&v13[16 * v125 + 32];
          uint64_t v128 = *(void *)&v13[16 * v4 + 24];
          unint64_t v155 = (uint64_t *)(v124 + 16 * v127);
          int64_t v129 = (uint64_t *)(v124 + 16 * *(void *)&v13[16 * v4 + 16]);
          unint64_t v130 = v124 + 16 * v128;
          uint64_t v131 = v144;
          sub_1004CF89C(v155, v129, v130, v143, v131);
          if (v151) {
            goto LABEL_131;
          }

          if (v128 < v127) {
            goto LABEL_167;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v126 = sub_100482474((uint64_t)v126);
          }
          if (v125 >= *((void *)v126 + 2)) {
            goto LABEL_168;
          }
          uint64_t v132 = &v126[16 * v125 + 32];
          *(void *)uint64_t v132 = v127;
          *((void *)v132 + 1) = v128;
          unint64_t v133 = *((void *)v126 + 2);
          if (v4 > v133) {
            goto LABEL_169;
          }
          memmove(&v126[16 * v4 + 16], &v126[16 * v4 + 32], 16 * (v133 - v4));
          uint64_t v13 = v126;
          *((void *)v126 + 2) = v133 - 1;
          unint64_t v4 = v133 - 1;
          BOOL v103 = v133 > 2;
          uint64_t v10 = v137;
          uint64_t v124 = v153;
          if (!v103) {
            goto LABEL_147;
          }
        }
      }
      continue;
    }
    break;
  }
LABEL_174:
  __break(1u);
LABEL_175:

  __break(1u);
LABEL_176:

  __break(1u);
LABEL_177:

  __break(1u);
LABEL_178:

  __break(1u);
LABEL_179:

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1004D08F4(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  id v4 = a2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_100482D8C(v3);
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v7[0] = v3 + 32;
  v7[1] = v5;
  id v6 = v4;
  sub_1004CFE9C(v7, v6);

  *a1 = v3;
}

void sub_1004D098C(uint64_t a1)
{
  uint64_t v2 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NWError();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)v69 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v73 = (char *)v69 - v14;
  __chkstk_darwin(v13);
  char v16 = (char *)v69 - v15;
  uint64_t v17 = type metadata accessor for NWBrowser.State();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a1, v17);
  int v21 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v20, v17);
  if (v21 == enum case for NWBrowser.State.failed(_:))
  {
    uint64_t v73 = v4;
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v12, v20, v5);
    if (qword_100969EB0 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_10000B47C(v22, (uint64_t)qword_1009766B8);
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v23(v9, v12, v5);
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    BOOL v26 = os_log_type_enabled(v24, v25);
    unint64_t v71 = v12;
    uint64_t v72 = v6;
    if (v26)
    {
      char v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v70 = (void *)swift_slowAlloc();
      *(_DWORD *)char v27 = 138412290;
      v69[1] = v27 + 4;
      sub_1004D1860(&qword_10096E020, (void (*)(uint64_t))&type metadata accessor for NWError);
      swift_allocError();
      v23(v28, v9, v5);
      uint64_t v29 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v75 = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v70 = v29;
      uint64_t v30 = *(void (**)(char *, uint64_t))(v6 + 8);
      v30(v9, v5);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "AirDrop bonjour browser failed with error %@", v27, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v30 = *(void (**)(char *, uint64_t))(v6 + 8);
      v30(v9, v5);
    }

    uint64_t v42 = type metadata accessor for TaskPriority();
    uint64_t v43 = (uint64_t)v73;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v73, 1, 1, v42);
    uint64_t v44 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v45 = qword_100969B90;
    swift_retain();
    if (v45 != -1) {
      swift_once();
    }
    uint64_t v46 = static AirDropActor.shared;
    uint64_t v47 = sub_1004D1860((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v48 = (void *)swift_allocObject();
    v48[2] = v46;
    v48[3] = v47;
    v48[4] = v44;
    swift_retain();
    swift_release();
    sub_10028CFD4(v43, (uint64_t)&unk_1009767E0, (uint64_t)v48);
    swift_release();
    v30(v71, v5);
    return;
  }
  if (v21 == enum case for NWBrowser.State.waiting(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    uint64_t v31 = v16;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v16, v20, v5);
    if (qword_100969EB0 != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    sub_10000B47C(v32, (uint64_t)qword_1009766B8);
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    uint64_t v34 = v73;
    v33(v73, v31, v5);
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      unint64_t v71 = (char *)swift_slowAlloc();
      uint64_t v74 = v37;
      *(_DWORD *)uint64_t v37 = 138412290;
      uint64_t v70 = v37 + 4;
      sub_1004D1860(&qword_10096E020, (void (*)(uint64_t))&type metadata accessor for NWError);
      swift_allocError();
      v33(v38, v34, v5);
      uint64_t v39 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v75 = v39;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(void *)unint64_t v71 = v39;
      uint64_t v40 = v5;
      char v41 = *(void (**)(char *, uint64_t))(v6 + 8);
      v41(v34, v40);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "AirDrop bonjour browser waiting with error %@", v74, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v40 = v5;
      char v41 = *(void (**)(char *, uint64_t))(v6 + 8);
      v41(v34, v40);
    }
    v41(v31, v40);
    return;
  }
  if (v21 == enum case for NWBrowser.State.setup(_:))
  {
    if (qword_100969EB0 != -1) {
      swift_once();
    }
    uint64_t v49 = type metadata accessor for Logger();
    sub_10000B47C(v49, (uint64_t)qword_1009766B8);
    int64_t v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v50, v51)) {
      goto LABEL_36;
    }
    uint64_t v52 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v52 = 0;
    uint64_t v53 = "AirDrop bonjour browser setting up";
LABEL_35:
    _os_log_impl((void *)&_mh_execute_header, v50, v51, v53, v52, 2u);
    swift_slowDealloc();
LABEL_36:

    return;
  }
  if (v21 == enum case for NWBrowser.State.ready(_:))
  {
    if (qword_100969EB0 != -1) {
      swift_once();
    }
    uint64_t v54 = type metadata accessor for Logger();
    sub_10000B47C(v54, (uint64_t)qword_1009766B8);
    int v55 = Logger.logObject.getter();
    os_log_type_t v56 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v57 = 0;
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "AirDrop bonjour browser ready", v57, 2u);
      swift_slowDealloc();
    }

    uint64_t v58 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v4, 1, 1, v58);
    uint64_t v59 = qword_100969B90;
    unint64_t v60 = v74;
    if (v59 != -1) {
      swift_once();
    }
    uint64_t v61 = static AirDropActor.shared;
    uint64_t v62 = sub_1004D1860((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v63 = (void *)swift_allocObject();
    v63[2] = v61;
    v63[3] = v62;
    v63[4] = v60;
    swift_retain();
    sub_10028CFA8((uint64_t)v4, (uint64_t)&unk_1009767F0, (uint64_t)v63);
    swift_release();
  }
  else
  {
    if (v21 == enum case for NWBrowser.State.cancelled(_:))
    {
      if (qword_100969EB0 != -1) {
        swift_once();
      }
      uint64_t v64 = type metadata accessor for Logger();
      sub_10000B47C(v64, (uint64_t)qword_1009766B8);
      int64_t v50 = Logger.logObject.getter();
      os_log_type_t v51 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v50, v51)) {
        goto LABEL_36;
      }
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      uint64_t v53 = "AirDrop bonjour browser cancelled";
      goto LABEL_35;
    }
    if (qword_100969EB0 != -1) {
      swift_once();
    }
    uint64_t v65 = type metadata accessor for Logger();
    sub_10000B47C(v65, (uint64_t)qword_1009766B8);
    char v66 = Logger.logObject.getter();
    os_log_type_t v67 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v68 = 0;
      _os_log_impl((void *)&_mh_execute_header, v66, v67, "AirDrop bonjour browser in unknown state", v68, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
}

uint64_t sub_1004D15DC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F4;
  return sub_1004CB6BC(a1, v4, v5, v6);
}

uint64_t sub_1004D1694(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F0;
  return sub_1004CB3C4(a1, v4, v5, v6);
}

uint64_t sub_1004D1748()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004D1798(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_1004C93A8(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1004D1860(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1004D18A8(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10000B740(0, &qword_10096B290);
    sub_1004D48B0(&qword_10096B298, &qword_10096B290);
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v2 = v20;
    uint64_t v3 = v21;
    unint64_t v4 = v22;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  int64_t v16 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    uint64_t v12 = v3;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_31;
    }
    sub_10000B740(0, &qword_10096B290);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v10 = v23;
    swift_unknownObjectRelease();
    if (!v23) {
      goto LABEL_31;
    }
LABEL_10:
    unsigned int v11 = [v10 isFile];

    if (v11) {
      goto LABEL_31;
    }
  }
  if (v4)
  {
    unint64_t v8 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v9 = v8 | (v3 << 6);
LABEL_9:
    id v10 = *(id *)(*(void *)(v1 + 48) + 8 * v9);
    if (!v10) {
      goto LABEL_31;
    }
    goto LABEL_10;
  }
  int64_t v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 >= v16) {
      goto LABEL_31;
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    ++v3;
    if (!v14)
    {
      uint64_t v3 = v12 + 2;
      if (v12 + 2 >= v16) {
        goto LABEL_31;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v3);
      if (!v14)
      {
        uint64_t v3 = v12 + 3;
        if (v12 + 3 >= v16) {
          goto LABEL_31;
        }
        unint64_t v14 = *(void *)(v17 + 8 * v3);
        if (!v14)
        {
          uint64_t v3 = v12 + 4;
          if (v12 + 4 >= v16) {
            goto LABEL_31;
          }
          unint64_t v14 = *(void *)(v17 + 8 * v3);
          if (!v14)
          {
            uint64_t v3 = v12 + 5;
            if (v12 + 5 >= v16) {
              goto LABEL_31;
            }
            unint64_t v14 = *(void *)(v17 + 8 * v3);
            if (!v14)
            {
              uint64_t v15 = v12 + 6;
              while (v16 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v3 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_31:
              sub_10024D330();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    unint64_t v4 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v3 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t sub_1004D1BB8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100976820);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100976820);
  if (qword_100969C88 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009945E8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1004D1C80()
{
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_transferObserver;
  id v2 = objc_allocWithZone((Class)SFAirDropTransferObserver);
  uint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  uint64_t v4 = OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_rateLimiter;
  type metadata accessor for SDAirDropRateLimiter();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 40) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v5 + 16) = 3;
  *(_OWORD *)(v5 + 24) = xmmword_100779EF0;
  *(void *)&v3[v4] = v5;
  *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_transfersToAlerts] = &_swiftEmptyDictionarySingleton;
  *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_queuedAlerts] = _swiftEmptyArrayStorage;
  v3[OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_hasActiveAlert] = 0;

  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for SDAirDropAlertManager();
  return [super init];
}

id sub_1004D1D90()
{
  uint64_t v1 = v0;
  if (qword_100969EB8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_100976820);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Activate AirDrop alert manager.", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_transferObserver);
  [v6 setDelegate:v1];

  return [v6 activate];
}

uint64_t sub_1004D1EF0()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_queuedAlerts);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if ((unint64_t)*v1 >> 62) {
    goto LABEL_71;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v3)
  {
    uint64_t v4 = 0;
    while (1)
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v5 = *(void *)(v2 + 8 * v4 + 32);
        swift_retain();
      }
      id v6 = [*(id *)(v5 + 16) metaData];
      unsigned int v7 = [v6 isVerifiableIdentity];

      if (!v7)
      {
        id v11 = [*(id *)(v5 + 16) cancelAction];
        [v11 triggerAction];
        swift_bridgeObjectRelease();
        swift_release();

        uint64_t v12 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
        }
        else if (!((unint64_t)*v1 >> 62))
        {
          if (v12 == *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_12;
          }
          goto LABEL_18;
        }
        swift_bridgeObjectRetain();
        uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v12 == v29) {
          goto LABEL_12;
        }
LABEL_18:
        uint64_t v13 = v4 + 5;
        while (2)
        {
          unint64_t v2 = v13 - 4;
          uint64_t v14 = *v1;
          if ((*v1 & 0xC000000000000001) != 0)
          {
            uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if ((v2 & 0x8000000000000000) != 0) {
              goto LABEL_61;
            }
            if (v2 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_62;
            }
            uint64_t v15 = *(void *)(v14 + 8 * v13);
            swift_retain();
          }
          id v16 = [*(id *)(v15 + 16) metaData];
          unsigned __int8 v17 = [v16 isVerifiableIdentity];

          if (v17)
          {
            swift_release();
            if (v2 == v4) {
              goto LABEL_43;
            }
            uint64_t v18 = *v1;
            if ((*v1 & 0xC000000000000001) != 0)
            {
              uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              uint64_t v18 = *v1;
              if ((*v1 & 0xC000000000000001) == 0) {
                goto LABEL_29;
              }
            }
            else
            {
              if (v4 < 0) {
                goto LABEL_65;
              }
              if ((unint64_t)v4 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_66;
              }
              uint64_t v19 = *(void *)(v18 + 8 * v4 + 32);
              swift_retain();
              if ((v18 & 0xC000000000000001) == 0)
              {
LABEL_29:
                if ((v2 & 0x8000000000000000) != 0) {
                  goto LABEL_67;
                }
                if (v2 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_68;
                }
                uint64_t v20 = *(void *)(v18 + 8 * v13);
                swift_retain();
LABEL_32:
                int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
                uint64_t *v1 = v18;
                if (!isUniquelyReferenced_nonNull_bridgeObject || v18 < 0 || (v18 & 0x4000000000000000) != 0)
                {
                  uint64_t v18 = sub_1002AD470(v18);
                  uint64_t *v1 = v18;
                }
                *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v20;
                swift_release();
                specialized Array._endMutation()();
                uint64_t v22 = *v1;
                int v23 = swift_isUniquelyReferenced_nonNull_bridgeObject();
                uint64_t *v1 = v22;
                if (!v23 || v22 < 0 || (v22 & 0x4000000000000000) != 0)
                {
                  uint64_t v22 = sub_1002AD470(v22);
                  uint64_t *v1 = v22;
                }
                if ((v2 & 0x8000000000000000) != 0) {
                  goto LABEL_69;
                }
                if (v2 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_70;
                }
                *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 8 * v13) = v19;
                swift_release();
                specialized Array._endMutation()();
LABEL_43:
                if (__OFADD__(v4++, 1)) {
                  goto LABEL_64;
                }
LABEL_48:
                uint64_t v27 = v13 - 3;
                if (__OFADD__(v2, 1)) {
                  goto LABEL_63;
                }
                goto LABEL_49;
              }
            }
            uint64_t v20 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v18 = *v1;
            goto LABEL_32;
          }
          id v25 = [*(id *)(v15 + 16) cancelAction];
          if (v25)
          {
            BOOL v26 = v25;
            [v25 triggerAction];
            swift_release();

            goto LABEL_48;
          }
          swift_release();
          uint64_t v27 = v13 - 3;
          if (__OFADD__(v2, 1)) {
            goto LABEL_63;
          }
LABEL_49:
          if ((unint64_t)*v1 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v28 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          ++v13;
          if (v27 == v28) {
            goto LABEL_12;
          }
          continue;
        }
      }
      swift_release();
      uint64_t v8 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        break;
      }
      ++v4;
      if (v8 == v3) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  if ((unint64_t)*v1 >> 62) {
    goto LABEL_75;
  }
  uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_12:
  while (!((unint64_t)*v1 >> 62))
  {
    uint64_t v9 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9 >= v4) {
      goto LABEL_14;
    }
LABEL_74:
    __break(1u);
LABEL_75:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v9 < v4) {
    goto LABEL_74;
  }
LABEL_14:
  sub_1005A5D80(v4, v9);
  return swift_endAccess();
}

id sub_1004D23D8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDAirDropAlertManager();
  return [super dealloc];
}

uint64_t type metadata accessor for SDAirDropAlertManager()
{
  return self;
}

void sub_1004D249C(void *a1)
{
  uint64_t v2 = v1;
  sub_10000B740(0, (unint64_t *)&qword_10096AC60);
  uint64_t v4 = (void *)static NSUserDefaults.airdrop.getter();
  char v5 = SFAirDropUserDefaults.systemLevelProgressEnabled.getter();

  if (v5)
  {
    if (qword_100969EB8 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_100976820);
    id v173 = a1;
    unsigned int v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      v183[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      id v10 = [v173 identifier];
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v13 = v12;

      uint64_t v181 = sub_100254634(v11, v13, v183);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Feature Flag for ModernProgress turned on, Alert is not generated for AirDrop %s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return;
  }
  id v14 = [a1 identifier];
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  uint64_t v18 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_transfersToAlerts);
  swift_beginAccess();
  uint64_t v19 = *v18;
  if (*(void *)(v19 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1005838BC(v15, v17);
    if (v21)
    {
      uint64_t v22 = *(void *)(*(void *)(v19 + 56) + 8 * v20);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = 0;
LABEL_15:
  uint64_t v184 = v22;
  id v23 = [a1 userResponse];
  id v174 = [a1 userResponse];
  if ([a1 transferState] == (id)2)
  {
    id v24 = [a1 transferProgress];

    BOOL v168 = v24 != 0;
  }
  else
  {
    BOOL v168 = 0;
  }
  BOOL v25 = [a1 transferState] == (id)3 || [a1 transferState] == (id)9;
  BOOL v165 = v25;
  id v169 = [a1 transferState];
  id v166 = [a1 transferState];
  buf = (uint8_t *)[a1 transferState];
  if (v22) {
    int v26 = *(unsigned __int8 *)(v22 + 32);
  }
  else {
    int v26 = 1;
  }
  int v164 = v26;
  id v27 = [a1 transferProgress];
  if (v27)
  {
    uint64_t v28 = v27;
    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_10076E7A0;
    *(void *)(v29 + 56) = sub_10000B740(0, &qword_1009768A0);
    *(void *)(v29 + 64) = sub_1004D48B0(&qword_1009768A8, &qword_1009768A0);
    *(void *)(v29 + 32) = v28;
    id v30 = v28;
    uint64_t v31 = String.init(format:_:)();
    unint64_t v33 = v32;
  }
  else
  {
    unint64_t v33 = 0xE600000000000000;
    uint64_t v31 = 0x3E656E6F6E3CLL;
  }
  uint64_t v167 = v2;
  if (qword_100969EB8 != -1) {
    swift_once();
  }
  uint64_t v34 = type metadata accessor for Logger();
  sub_10000B47C(v34, (uint64_t)qword_100976820);
  id v35 = a1;
  swift_bridgeObjectRetain();
  os_log_type_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v36, v37))
  {
    os_log_type_t v161 = v37;
    uint64_t v162 = v31;
    id v163 = v23;
    uint64_t v38 = swift_slowAlloc();
    uint64_t v179 = swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 136316162;
    id v39 = [v35 identifier];
    uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    char v41 = v35;
    unint64_t v43 = v42;

    uint64_t v181 = sub_100254634(v40, v43, &v179);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v44 = v41;
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    id v45 = (id)SFAirDropTransferStateToString();
    if (v45)
    {
      uint64_t v46 = v45;
      unint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v49 = v48;
    }
    else
    {
      uint64_t v181 = 0;
      unint64_t v182 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v49 = 0x80000001007B7770;
      unint64_t v47 = 0xD000000000000015;
    }
    uint64_t v181 = sub_100254634(v47, v49, &v179);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 22) = 2080;
    [v41 userResponse];
    id v50 = (id)SFAirDropTransferUserResponseToString();
    uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v53 = v52;

    uint64_t v181 = sub_100254634(v51, v53, &v179);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 32) = 2080;
    swift_beginAccess();
    if (v184) {
      uint64_t v54 = 7562617;
    }
    else {
      uint64_t v54 = 28526;
    }
    if (v184) {
      unint64_t v55 = 0xE300000000000000;
    }
    else {
      unint64_t v55 = 0xE200000000000000;
    }
    uint64_t v181 = sub_100254634(v54, v55, &v179);
    id v35 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 42) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v181 = sub_100254634(v162, v33, &v179);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v36, v161, "Transfer %s updated with state: %s, userResponse: %s, alert item exists: %s, progress: %s", (uint8_t *)v38, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v23 = v163;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (v174 == (id)2)
  {
    os_log_type_t v56 = Logger.logObject.getter();
    os_log_type_t v57 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = 2;
      uint64_t v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v59 = 0;
      unint64_t v60 = "Transfer cancelled by receiver";
LABEL_44:
      _os_log_impl((void *)&_mh_execute_header, v56, v57, v60, v59, 2u);
      swift_slowDealloc();

      int v61 = 0;
      int v62 = 0;
      goto LABEL_55;
    }
LABEL_53:

    int v61 = 0;
    int v62 = 0;
LABEL_54:
    uint64_t v58 = 2;
    goto LABEL_55;
  }
  if (v169 == (id)7)
  {
    uint64_t v63 = Logger.logObject.getter();
    os_log_type_t v64 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v65 = 0;
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "Transfer state changed to readyForOpen. Dismissing any existing alert.", v65, 2u);
      swift_slowDealloc();
    }

    int v61 = 0;
LABEL_49:
    int v62 = 0;
    uint64_t v58 = 1;
    goto LABEL_55;
  }
  if (v166 == (id)8)
  {
    os_log_type_t v56 = Logger.logObject.getter();
    os_log_type_t v57 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = 2;
      uint64_t v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v59 = 0;
      unint64_t v60 = "Transfer state changed to terminated. Dismissing any existing alert.";
      goto LABEL_44;
    }
    goto LABEL_53;
  }
  if (v165)
  {
    uint64_t v97 = Logger.logObject.getter();
    os_log_type_t v98 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v97, v98))
    {
      unint64_t v99 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v99 = 0;
      _os_log_impl((void *)&_mh_execute_header, v97, v98, "Sender cancelled or transfer failed", v99, 2u);
      swift_slowDealloc();
    }

    if (v23 == (id)1)
    {
      int v62 = 0;
      int v61 = 1;
    }
    else
    {
      int v62 = 0;
      int v61 = [v35 failureReason] == (id)2;
    }
    goto LABEL_54;
  }
  swift_beginAccess();
  if (v184) {
    int v132 = *(unsigned __int8 *)(v184 + 33);
  }
  else {
    int v132 = 0;
  }
  uint64_t v144 = Logger.logObject.getter();
  os_log_type_t v145 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v144, v145))
  {
    id v176 = v35;
    uint64_t v146 = (uint8_t *)swift_slowAlloc();
    uint64_t v147 = swift_slowAlloc();
    *(_DWORD *)uint64_t v146 = 136315138;
    uint64_t v179 = v147;
    if (v132) {
      uint64_t v148 = 7562617;
    }
    else {
      uint64_t v148 = 28526;
    }
    if (v132) {
      unint64_t v149 = 0xE300000000000000;
    }
    else {
      unint64_t v149 = 0xE200000000000000;
    }
    v178[0] = sub_100254634(v148, v149, &v179);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    id v35 = v176;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v144, v145, "Current alert is showing progress: %s", v146, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  unsigned int v150 = [v35 needsAction];
  int v61 = v150;
  if (v132)
  {
    id v151 = [v35 transferProgress];
    if (!v151)
    {
      __break(1u);
      return;
    }
    unint64_t v152 = v151;
    unsigned __int8 v153 = [v151 isFinished];

    if ((v153 & 1) != 0 || ((unint64_t)buf | 2) == 6) {
      goto LABEL_49;
    }
  }
  else
  {
    int v61 = (v150 | v168) & v164;
  }
  uint64_t v58 = 0;
  int v62 = 1;
LABEL_55:
  char v66 = Logger.logObject.getter();
  os_log_type_t v67 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = swift_slowAlloc();
    v178[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v68 = 136315394;
    if (v61) {
      uint64_t v69 = 1702195828;
    }
    else {
      uint64_t v69 = 0x65736C6166;
    }
    int v170 = v61;
    if (v61) {
      unint64_t v70 = 0xE400000000000000;
    }
    else {
      unint64_t v70 = 0xE500000000000000;
    }
    uint64_t v179 = sub_100254634(v69, v70, v178);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v68 + 12) = 2080;
    uint64_t v179 = v58;
    char v180 = v62;
    sub_10000A844((uint64_t *)&unk_100976890);
    uint64_t v71 = String.init<A>(describing:)();
    uint64_t v179 = sub_100254634(v71, v72, v178);
    int v61 = v170;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v66, v67, "showAlert: %s, dismissAlert: %s", (uint8_t *)v68, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if ((v61 | v62 ^ 1) != 1)
  {
    id v74 = [v35 metaData];
    unsigned __int8 v75 = [v74 didAutoAccept];

    if ((v75 & 1) != 0 && buf == (uint8_t *)1)
    {
      [self playAlertForType:12];
      uint64_t v76 = Logger.logObject.getter();
      os_log_type_t v77 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v76, v77))
      {
        uint64_t v78 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v78 = 0;
        _os_log_impl((void *)&_mh_execute_header, v76, v77, "Play auto-accept sound", v78, 2u);
        swift_slowDealloc();
      }
    }
    goto LABEL_124;
  }
  swift_beginAccess();
  if (v184)
  {
    if (v62) {
      uint64_t v73 = 0;
    }
    else {
      uint64_t v73 = v58;
    }
    swift_retain();
    sub_100506578(v73);
    swift_release();
  }
  uint64_t v184 = 0;
  swift_release();
  id v79 = [v35 identifier];
  uint64_t v80 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v82 = v81;

  swift_beginAccess();
  sub_1002AA190(v80, v82);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  if (v61)
  {
    if (!v168)
    {
      uint64_t v100 = v167;
      if (sub_10045D660()
        && [v35 needsAction]
        && (id v101 = [v35 metaData],
            unsigned __int8 v102 = [v101 isVerifiableIdentity],
            v101,
            (v102 & 1) == 0))
      {
        uint64_t v154 = v35;
        unint64_t v155 = Logger.logObject.getter();
        os_log_type_t v156 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v155, v156))
        {
          int64_t v157 = (uint8_t *)swift_slowAlloc();
          uint64_t v158 = (void *)swift_slowAlloc();
          bufa = v157;
          *(_DWORD *)int64_t v157 = 138412290;
          v178[0] = (uint64_t)v154;
          uint64_t v159 = v154;
          uint64_t v100 = v167;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v158 = v154;

          _os_log_impl((void *)&_mh_execute_header, v155, v156, "Rate limited. Auto-declining transfer %@.", bufa, 0xCu);
          sub_10000A844(&qword_10096B850);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          unint64_t v155 = v154;
        }

        id v160 = [v154 cancelAction];
        [v160 triggerAction];

        if (!v184) {
          return;
        }
      }
      else
      {
        uint64_t v103 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v104 = swift_allocObject();
        *(void *)(v104 + 16) = v103;
        *(void *)(v104 + 24) = v35;
        id v105 = v35;
        uint64_t v106 = Logger.logObject.getter();
        os_log_type_t v107 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v106, v107))
        {
          uint64_t v108 = swift_slowAlloc();
          v178[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v108 = 136315394;
          id v175 = v35;
          id v109 = [v105 identifier];
          uint64_t v110 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v112 = v111;

          sub_100254634(v110, v112, v178);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v108 + 12) = 2080;
          uint64_t v113 = buf;
          if (buf == (uint8_t *)1) {
            uint64_t v114 = 1702195828;
          }
          else {
            uint64_t v114 = 0x65736C6166;
          }
          if (buf == (uint8_t *)1) {
            unint64_t v115 = 0xE400000000000000;
          }
          else {
            unint64_t v115 = 0xE500000000000000;
          }
          sub_100254634(v114, v115, v178);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          id v35 = v175;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v106, v107, "Making new IncomingAirDropAlert for transfer %s, playSound: %s", (uint8_t *)v108, 0x16u);
          swift_arrayDestroy();
          uint64_t v100 = v167;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          uint64_t v113 = buf;
        }
        type metadata accessor for IncomingAirDropAlert();
        swift_allocObject();
        uint64_t v184 = sub_100505474(v105, v113 == (uint8_t *)1, (uint64_t)sub_1004D48A8, v104);
        swift_release();
        if (!v184) {
          return;
        }
      }
LABEL_117:
      swift_retain();
      id v135 = [v35 identifier];
      uint64_t v136 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v138 = v137;

      swift_beginAccess();
      uint64_t v139 = swift_retain();
      sub_100467B14(v139, v136, v138);
      swift_endAccess();
      if (!v168)
      {
        if (*(unsigned char *)(v100 + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_hasActiveAlert) == 1)
        {
          Swift::Int v140 = Logger.logObject.getter();
          os_log_type_t v141 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v140, v141))
          {
            uint64_t v142 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v142 = 0;
            _os_log_impl((void *)&_mh_execute_header, v140, v141, "Active alert present, enqueue this one later.", v142, 2u);
            swift_slowDealloc();
          }

          uint64_t v143 = (void *)(v100 + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_queuedAlerts);
          swift_beginAccess();
          swift_retain();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*v143 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v143 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();
          swift_release();
LABEL_124:
          swift_release();
          return;
        }
        *(unsigned char *)(v100 + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_hasActiveAlert) = 1;
      }
      sub_1005056F0();
      swift_release_n();
      return;
    }
    id v177 = [v35 transferProgress];
    sub_10000A844(&qword_100976888);
    Optional.unwrap(_:file:line:)();

    uint64_t v83 = (void *)v178[0];
    *(double *)&uint64_t v84 = COERCE_DOUBLE(NSProgress.estimatedTimeRemaining.getter());
    if (v85)
    {
      [self airDropProgressUIMaxPercentage];
      double v117 = v116;
      [v83 fractionCompleted];
      double v119 = v118;
      id v120 = [v35 metaData];
      id v121 = [v120 items];

      sub_10000B740(0, &qword_10096B290);
      sub_1004D48B0(&qword_10096B298, &qword_10096B290);
      uint64_t v122 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1004D18A8(v122);
      char v124 = v123;
      swift_bridgeObjectRelease();
      uint64_t v88 = Logger.logObject.getter();
      os_log_type_t v125 = static os_log_type_t.default.getter();
      BOOL v126 = os_log_type_enabled(v88, v125);
      if (v119 < v117 && (v124 & 1) != 0)
      {
        if (v126)
        {
          uint64_t v127 = swift_slowAlloc();
          *(_DWORD *)uint64_t v127 = 134218496;
          *(double *)v178 = v119;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v127 + 12) = 2048;
          *(double *)v178 = v117;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v127 + 22) = 1024;
          LODWORD(v178[0]) = 1;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          os_log_type_t v92 = v125;
          uint64_t v93 = "Progress: Showing, fracCompleted(%f). showAlertIfProgressBelow(%f). transferHasFiles = %{BOOL}d";
          uint64_t v94 = v88;
          uint64_t v95 = (uint8_t *)v127;
          uint32_t v96 = 28;
          goto LABEL_100;
        }
LABEL_101:

        uint64_t v128 = Logger.logObject.getter();
        os_log_type_t v129 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v128, v129))
        {
          unint64_t v130 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v130 = 0;
          _os_log_impl((void *)&_mh_execute_header, v128, v129, "Make new progress alert with no sound", v130, 2u);
          swift_slowDealloc();
        }

        type metadata accessor for IncomingAirDropAlert();
        swift_allocObject();
        uint64_t v131 = sub_100505474(v35, 0, 0, 0);

        uint64_t v184 = v131;
        swift_release();
        *(unsigned char *)(v131 + 33) = 1;
LABEL_116:
        uint64_t v100 = v167;
        if (!v184) {
          return;
        }
        goto LABEL_117;
      }
      if (v126)
      {
        uint64_t v134 = swift_slowAlloc();
        *(_DWORD *)uint64_t v134 = 134218496;
        *(double *)v178 = v119;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v134 + 12) = 2048;
        *(double *)v178 = v117;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v134 + 22) = 1024;
        LODWORD(v178[0]) = v124 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v88, v125, "Skip showing progress. Completed: (%f), Show alert if progress below: (%f), transfer has files: %{BOOL}d.", (uint8_t *)v134, 0x1Cu);
        goto LABEL_114;
      }
    }
    else
    {
      uint64_t v86 = v84;
      double v87 = *(double *)&v84;
      uint64_t v88 = Logger.logObject.getter();
      os_log_type_t v89 = static os_log_type_t.default.getter();
      BOOL v90 = os_log_type_enabled(v88, v89);
      if (v87 > 2.0)
      {
        if (v90)
        {
          uint64_t v91 = swift_slowAlloc();
          *(_DWORD *)uint64_t v91 = 134218240;
          v178[0] = v86;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v91 + 12) = 2048;
          v178[0] = 0x4000000000000000;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          os_log_type_t v92 = v89;
          uint64_t v93 = "Progress: Showing, timeRemaining(%f) > %f";
          uint64_t v94 = v88;
          uint64_t v95 = (uint8_t *)v91;
          uint32_t v96 = 22;
LABEL_100:
          _os_log_impl((void *)&_mh_execute_header, v94, v92, v93, v95, v96);
          swift_slowDealloc();
          goto LABEL_101;
        }
        goto LABEL_101;
      }
      if (v90)
      {
        uint64_t v133 = swift_slowAlloc();
        *(_DWORD *)uint64_t v133 = 134218240;
        v178[0] = v86;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v133 + 12) = 2048;
        v178[0] = 0x4000000000000000;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v88, v89, "Progress: Skipping, timeRemaining(%f) ≤ %f", (uint8_t *)v133, 0x16u);
LABEL_114:
        swift_slowDealloc();
      }
    }

    goto LABEL_116;
  }
}

unint64_t sub_1004D3F00()
{
  return 0xD000000000000017;
}

void sub_1004D3F1C(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    id v7 = [a3 metaData];
    unsigned __int8 v8 = [v7 isVerifiableIdentity];

    if ((v8 & 1) == 0)
    {
      if (a1 == 1)
      {
        uint64_t v14 = *(uint64_t *)((char *)&v6->isa + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_rateLimiter);
        swift_beginAccess();
        *(void *)(v14 + 40) = _swiftEmptyArrayStorage;
        swift_retain();
        swift_bridgeObjectRelease();
        id v15 = (id)airdrop_log();
        if (!v15)
        {
          __break(1u);
          return;
        }
        uint64_t v16 = v15;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        swift_release();
      }
      else if (a1 == 2)
      {
        swift_retain();
        sub_10045D868();
        swift_release();
        swift_retain();
        BOOL v9 = sub_10045D660();
        swift_release();
        if (v9)
        {
          if (qword_100969EB8 != -1) {
            swift_once();
          }
          uint64_t v10 = type metadata accessor for Logger();
          sub_10000B47C(v10, (uint64_t)qword_100976820);
          uint64_t v11 = Logger.logObject.getter();
          os_log_type_t v12 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v11, v12))
          {
            unint64_t v13 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)unint64_t v13 = 0;
            _os_log_impl((void *)&_mh_execute_header, v11, v12, "Rate limited. Auto-declining queued transfers.", v13, 2u);
            swift_slowDealloc();
          }

          sub_1004D1EF0();
        }
      }
    }
    uint64_t v17 = (uint64_t *)((char *)v6 + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_queuedAlerts);
    swift_beginAccess();
    if ((unint64_t)*v17 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v23)
      {
LABEL_15:
        if (qword_100969EB8 != -1) {
          swift_once();
        }
        uint64_t v18 = type metadata accessor for Logger();
        sub_10000B47C(v18, (uint64_t)qword_100976820);
        uint64_t v19 = Logger.logObject.getter();
        os_log_type_t v20 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v19, v20))
        {
          char v21 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)char v21 = 0;
          _os_log_impl((void *)&_mh_execute_header, v19, v20, "Dequeuing last dismissed alert and presenting next", v21, 2u);
          swift_slowDealloc();
        }

        swift_beginAccess();
        uint64_t v22 = *v17;
        if ((unint64_t)*v17 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v28)
          {
LABEL_21:
            uint64_t v22 = *v17;
            if (!((unint64_t)*v17 >> 62))
            {
              if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_23;
              }
              goto LABEL_40;
            }
LABEL_39:
            swift_bridgeObjectRetain();
            uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v29)
            {
LABEL_23:
              if ((v22 & 0xC000000000000001) == 0)
              {
                if (!*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
                  __break(1u);
                  goto LABEL_43;
                }
                swift_retain();
LABEL_26:
                if (!((unint64_t)*v17 >> 62))
                {
                  if (*(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  {
LABEL_28:
                    sub_1005A5D80(0, 1);
                    swift_endAccess();
                    sub_1005056F0();
                    swift_release();
                    goto LABEL_34;
                  }
                  goto LABEL_44;
                }
LABEL_43:
                swift_bridgeObjectRetain();
                uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
                swift_bridgeObjectRelease();
                if (v30) {
                  goto LABEL_28;
                }
LABEL_44:
                __break(1u);
                goto LABEL_45;
              }
LABEL_41:
              specialized _ArrayBuffer._getElementSlowPath(_:)();
              goto LABEL_26;
            }
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
        }
        else if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_21;
        }
        __break(1u);
        goto LABEL_39;
      }
    }
    else if (*(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_15;
    }
    *((unsigned char *)&v6->isa + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_hasActiveAlert) = 0;
    if (qword_100969EB8 == -1)
    {
LABEL_31:
      uint64_t v24 = type metadata accessor for Logger();
      sub_10000B47C(v24, (uint64_t)qword_100976820);
      BOOL v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v25, v26))
      {
        id v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v27 = 0;
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "Last alert dismissed", v27, 2u);
        swift_slowDealloc();

LABEL_35:
        return;
      }

LABEL_34:
      BOOL v25 = v6;
      goto LABEL_35;
    }
LABEL_45:
    swift_once();
    goto LABEL_31;
  }
}

uint64_t sub_1004D44F8(void *a1)
{
  uint64_t v2 = v1;
  if (qword_100969EB8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_100976820);
  id v5 = a1;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    unsigned __int8 v8 = (uint8_t *)swift_slowAlloc();
    BOOL v9 = (void *)swift_slowAlloc();
    *(_DWORD *)unsigned __int8 v8 = 138412290;
    id v10 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v9 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Clearing alerts for transfer: %@.", v8, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v11 = [v5 identifier];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  id v15 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary21SDAirDropAlertManager_transfersToAlerts);
  swift_beginAccess();
  uint64_t v16 = *v15;
  if (!*(void *)(*v15 + 16)) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1005838BC(v12, v14);
  if ((v18 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v19 = *(void *)(*(void *)(v16 + 56) + 8 * v17);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v19 + 24)) {
    sub_100506578(0);
  }
  swift_release();
LABEL_14:
  id v20 = [v5 identifier];
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v23 = v22;

  swift_beginAccess();
  sub_1002AA190(v21, v23);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1004D4830()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004D4868()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1004D48A8(uint64_t a1)
{
  sub_1004D3F1C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1004D48B0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000B740(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004D48F4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_1009768B0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_1009768B0);
  if (qword_100969CD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946C0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1004D49BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(a1, 1, 1, v2);
  uint64_t v4 = (int *)type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  v3(a1 + v4[5], 1, 1, v2);
  v3(a1 + v4[6], 1, 1, v2);
  v3(a1 + v4[7], 1, 1, v2);
  v3(a1 + v4[8], 1, 1, v2);
  v3(a1 + v4[9], 1, 1, v2);
  v3(a1 + v4[10], 1, 1, v2);
  v3(a1 + v4[11], 1, 1, v2);
  v3(a1 + v4[12], 1, 1, v2);
  *(unsigned char *)(a1 + v4[13]) = 0;
  v3(a1 + v4[14], 1, 1, v2);
  v3(a1 + v4[15], 1, 1, v2);
  v3(a1 + v4[16], 1, 1, v2);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3)(a1 + v4[17], 1, 1, v2);
  uint64_t v6 = a1 + v4[18];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  *(unsigned char *)(a1 + v4[19]) = 2;
  os_log_type_t v7 = (void *)(a1 + v4[20]);
  *os_log_type_t v7 = 0;
  v7[1] = 0;
  unsigned __int8 v8 = (void *)(a1 + v4[21]);
  *unsigned __int8 v8 = 0;
  v8[1] = 0;
  return result;
}

void sub_1004D4BFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v2 - 8);
  unint64_t v42 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AuthenticationSecurityRequest(0);
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v41 + 64);
  uint64_t v6 = __chkstk_darwin(v4);
  os_log_type_t v7 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  BOOL v9 = (uint64_t *)((char *)&v41 - v8);
  uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *(void **)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  id v18 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v19 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  unint64_t v20 = *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
  BOOL v21 = v20 > 0xE;
  uint64_t v22 = (1 << v20) & 0x658E;
  if (!v21 && v22 != 0)
  {
    Date.init()();
    uint64_t v24 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v12, 0, 1, v24);
    uint64_t v25 = (uint64_t)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics];
    swift_beginAccess();
    sub_10026B410((uint64_t)v12, v25, (uint64_t *)&unk_100975040);
    swift_endAccess();
    unint64_t v26 = *(void *)&v1[v19];
    if (v26 < 0xF && ((0x4FFFu >> v26) & 1) != 0)
    {
      id v27 = (uint64_t *)((char *)&unk_10077A040 + 8 * v26);
      goto LABEL_11;
    }
    if (qword_100969BE8 == -1)
    {
LABEL_9:
      id v27 = &qword_100994470;
LABEL_11:
      uint64_t v28 = *v27;
      static Date.distantFuture.getter();
      uint64_t *v9 = v28;
      uint64_t v29 = type metadata accessor for TaskPriority();
      uint64_t v30 = (uint64_t)v42;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v42, 1, 1, v29);
      sub_1004ECDC8((uint64_t)v9, (uint64_t)v7, type metadata accessor for AuthenticationSecurityRequest);
      unint64_t v31 = (*(unsigned __int8 *)(v41 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
      unint64_t v32 = (void *)swift_allocObject();
      uint64_t v32[2] = 0;
      void v32[3] = 0;
      v32[4] = v1;
      sub_10045AA40((uint64_t)v7, (uint64_t)v32 + v31);
      unint64_t v33 = v1;
      sub_10028CFA8(v30, (uint64_t)&unk_100976A38, (uint64_t)v32);
      swift_release();
      sub_1004ED028((uint64_t)v9, type metadata accessor for AuthenticationSecurityRequest);
      return;
    }
LABEL_18:
    swift_once();
    goto LABEL_9;
  }
  if (qword_100969EC0 != -1) {
    swift_once();
  }
  uint64_t v34 = type metadata accessor for Logger();
  sub_10000B47C(v34, (uint64_t)qword_1009768B0);
  id v35 = v1;
  os_log_type_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    v43[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 136315138;
    uint64_t v39 = sub_10050938C();
    v43[3] = sub_100254634(v39, v40, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Authentication type %s does not support this method", v38, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_1004D51B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[28] = a4;
  v5[29] = a5;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  v5[30] = v6;
  v5[31] = *(void *)(v6 - 8);
  v5[32] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DispatchQoS();
  v5[33] = v7;
  v5[34] = *(void *)(v7 - 8);
  v5[35] = swift_task_alloc();
  return _swift_task_switch(sub_1004D52D0, 0, 0);
}

uint64_t sub_1004D52D0()
{
  uint64_t v1 = v0[28] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
  swift_beginAccess();
  sub_10024A330(v1, (uint64_t)(v0 + 8), &qword_100978040);
  if (v0[11])
  {
    uint64_t v2 = v0[29];
    sub_100278C8C((uint64_t)(v0 + 8), (uint64_t)(v0 + 13));
    sub_10000A7E8((uint64_t)(v0 + 8), &qword_100978040);
    uint64_t v3 = (void *)(*sub_10026BB6C(v0 + 13, v0[16])
                  + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager);
    swift_beginAccess();
    uint64_t v4 = *sub_10026BB6C(v3, v3[3]);
    uint64_t v5 = swift_task_alloc();
    v0[36] = v5;
    *(void *)(v5 + 16) = v4;
    *(void *)(v5 + 24) = v2;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[37] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1004D569C;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6, 0, 0, 0x6F6974616C6F6976, 0xEF293A726F66286ELL, sub_1003CEA74, v5, (char *)&type metadata for () + 8);
  }
  else
  {
    sub_10000A7E8((uint64_t)(v0 + 8), &qword_100978040);
    uint64_t v7 = v0[35];
    uint64_t v8 = v0[32];
    uint64_t v17 = v0[34];
    uint64_t v18 = v0[33];
    uint64_t v9 = v0[30];
    uint64_t v10 = v0[31];
    uint64_t v11 = (void *)v0[28];
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    v0[6] = sub_1004ED088;
    v0[7] = v12;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_100296520;
    v0[5] = &unk_1008DDA98;
    uint64_t v13 = _Block_copy(v0 + 2);
    id v14 = v11;
    static DispatchQoS.unspecified.getter();
    v0[24] = _swiftEmptyArrayStorage;
    sub_100361140((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v13);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v7, v18);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
}

uint64_t sub_1004D569C()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1004D59F4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1004D57B8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1004D57B8()
{
  sub_10024D338((uint64_t)(v0 + 13));
  uint64_t v1 = v0[35];
  uint64_t v2 = v0[32];
  uint64_t v11 = v0[34];
  uint64_t v12 = v0[33];
  uint64_t v3 = v0[30];
  uint64_t v4 = v0[31];
  uint64_t v5 = (void *)v0[28];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  v0[6] = sub_1004ED088;
  v0[7] = v6;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100296520;
  v0[5] = &unk_1008DDA98;
  uint64_t v7 = _Block_copy(v0 + 2);
  id v8 = v5;
  static DispatchQoS.unspecified.getter();
  v0[24] = _swiftEmptyArrayStorage;
  sub_100361140((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1, v12);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1004D59F4()
{
  uint64_t v13 = v0;
  uint64_t v1 = *(void *)(v0 + 304);
  swift_task_dealloc();
  sub_10024D338(v0 + 104);
  *(void *)(v0 + 200) = v1;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  type metadata accessor for SFAuthenticationError(0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    sub_1004D6880(*(_DWORD *)(v0 + 312));
  }
  else
  {
    swift_errorRelease();
    if (qword_100969EC0 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000B47C(v2, (uint64_t)qword_1009768B0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    BOOL v5 = os_log_type_enabled(v3, v4);
    uint64_t v6 = *(void *)(v0 + 304);
    if (v5)
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315138;
      *(void *)(v0 + 208) = v6;
      swift_errorRetain();
      uint64_t v8 = String.init<A>(describing:)();
      *(void *)(v0 + 216) = sub_100254634(v8, v9, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unexpected error: %s", v7, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    sub_1004D6880(0xAu);
  }
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

void sub_1004D5CB0()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  os_log_type_t v4 = (void *)((char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  BOOL v5 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  *os_log_type_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(void *)(v7 + 16) = 64;
  *(_OWORD *)(v7 + 32) = 0u;
  uint64_t v8 = (unsigned char *)(v7 + 32);
  *(_OWORD *)(v7 + 48) = 0u;
  *(_OWORD *)(v7 + 64) = 0u;
  *(_OWORD *)(v7 + 80) = 0u;
  int v9 = SecRandomCopyBytes(kSecRandomDefault, 0x40uLL, (void *)(v7 + 32));
  if (!v9)
  {
    uint64_t v14 = sub_1004EC700(v8, 64);
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    uint64_t v17 = (uint64_t *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken);
    uint64_t v18 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken);
    unint64_t v19 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken + 8);
    *uint64_t v17 = v14;
    v17[1] = v16;
    sub_100250CB0(v18, v19);
    return;
  }
  LODWORD(v1) = v9;
  swift_bridgeObjectRelease();
  if (qword_100969EC0 != -1) {
    goto LABEL_9;
  }
LABEL_4:
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000B47C(v10, (uint64_t)qword_1009768B0);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 67109120;
    uint64_t v20[3] = v1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Error generating ranging key (status = %d)", v13, 8u);
    swift_slowDealloc();
  }
}

uint64_t sub_1004D5F34()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  BOOL v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v53 - v6;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v15 = (unint64_t)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  *(void *)unint64_t v15 = v16;
  (*(void (**)(unint64_t, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  id v17 = v16;
  uint64_t v18 = _dispatchPreconditionTest(_:)();
  unint64_t v20 = *(void (**)(unint64_t, uint64_t))(v13 + 8);
  uint64_t v19 = v13 + 8;
  v20(v15, v12);
  if (v18)
  {
    unint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken + 8);
    if (v15 >> 60 == 15) {
      return sub_1004D6880(0xAu);
    }
    uint64_t v19 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken);
    id v22 = objc_allocWithZone((Class)SDAuthenticationRequest);
    sub_10025ADCC(v19, v15);
    id v23 = [v22 init];
    uint64_t v18 = (uint64_t)v23;
    if (v23)
    {
      unint64_t v55 = v15;
      uint64_t v24 = v19;
      uint64_t v54 = (uint64_t)v23;
      id v25 = v23;
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      [v25 setAwdlInfo:isa];

      [v25 setVersion:1];
      id v27 = v25;
      UUID.uuidString.getter();
      NSString v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v27 setSessionID:v28];

      if (HIDWORD(*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type)))
      {
        uint64_t result = _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        return result;
      }
      [v27 setType:];
      unint64_t v53 = (unint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type);
      if ((unint64_t)(*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type) - 3) < 0xC)
      {
        uint64_t v19 = v24;
        unint64_t v15 = v55;
        uint64_t v18 = v54;
        goto LABEL_16;
      }
      id v29 = v27;
      uint64_t v19 = v24;
      unint64_t v15 = v55;
      Class v30 = Data._bridgeToObjectiveC()().super.isa;
      [v29 setRangingToken:v30, v53];

      uint64_t v18 = v54;
    }
    else
    {
      unint64_t v53 = (unint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type);
      if ((unint64_t)(*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type) - 3) < 0xC) {
        goto LABEL_16;
      }
    }
    uint64_t v31 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_lastUnlockDate;
    swift_beginAccess();
    sub_10024A330(v31, (uint64_t)v7, (uint64_t *)&unk_100975040);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_10000A7E8((uint64_t)v7, (uint64_t *)&unk_100975040);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      if (v18)
      {
        uint64_t v32 = v18;
        id v33 = (id)v18;
        Date.timeIntervalSince1970.getter();
        [v33 setUnlockDate:];

        uint64_t v18 = v32;
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
LABEL_16:
    Date.init()();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    uint64_t v34 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics;
    swift_beginAccess();
    uint64_t v35 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
    sub_10026B410((uint64_t)v5, v34 + *(int *)(v35 + 32), (uint64_t *)&unk_100975040);
    swift_endAccess();
    if (v18)
    {
      id v36 = [(id)v18 data];
      if (v36)
      {
        os_log_type_t v37 = v36;
        uint64_t v38 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v40 = v39;

        if (qword_100969EC0 != -1) {
          swift_once();
        }
        uint64_t v41 = type metadata accessor for Logger();
        sub_10000B47C(v41, (uint64_t)qword_1009768B0);
        unint64_t v42 = Logger.logObject.getter();
        os_log_type_t v43 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v42, v43))
        {
          uint64_t v44 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v44 = 0;
          _os_log_impl((void *)&_mh_execute_header, v42, v43, "Sending authentication request", v44, 2u);
          swift_slowDealloc();
        }

        uint64_t v45 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
        swift_beginAccess();
        sub_10024A330(v45, (uint64_t)&v57, &qword_10097BB50);
        if (v58)
        {
          sub_1002AF688(&v57, (uint64_t)v59);
          uint64_t v46 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
          swift_beginAccess();
          sub_10024A330(v46, (uint64_t)&v57, &qword_100978040);
          if (v58)
          {
            sub_100278C8C((uint64_t)&v57, (uint64_t)v56);
            sub_10000A7E8((uint64_t)&v57, &qword_100978040);
            sub_10026BB6C(v56, v56[3]);
            sub_1006DF18C(v38, v40, (uint64_t)v59, 0, *v53);
            sub_10024D338((uint64_t)v59);
            sub_10024D338((uint64_t)v56);
LABEL_34:
            sub_100507F28(0, 1);

            sub_100250CB0(v19, v15);
            return sub_100250CC4(v38, v40);
          }
          sub_10024D338((uint64_t)v59);
          unint64_t v52 = &v57;
        }
        else
        {
          sub_10000A7E8((uint64_t)&v57, &qword_10097BB50);
          uint64_t v51 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
          swift_beginAccess();
          sub_10024A330(v51, (uint64_t)v59, &qword_100978040);
          if (v60)
          {
            sub_100278C8C((uint64_t)v59, (uint64_t)&v57);
            sub_10000A7E8((uint64_t)v59, &qword_100978040);
            sub_10026BB6C(&v57, v58);
            sub_1006FA798(v38, v40, 0, *v53);
            sub_10024D338((uint64_t)&v57);
            goto LABEL_34;
          }
          unint64_t v52 = (long long *)v59;
        }
        sub_10000A7E8((uint64_t)v52, &qword_100978040);
        goto LABEL_34;
      }
    }
    if (qword_100969EC0 == -1) {
      goto LABEL_26;
    }
    goto LABEL_36;
  }
  __break(1u);
LABEL_36:
  swift_once();
LABEL_26:
  uint64_t v47 = type metadata accessor for Logger();
  sub_10000B47C(v47, (uint64_t)qword_1009768B0);
  unint64_t v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v48, v49))
  {
    id v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v50 = 0;
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "Error converting request to data", v50, 2u);
    swift_slowDealloc();
  }

  sub_1004D6880(0xAu);
  return sub_100250CB0(v19, v15);
}

uint64_t sub_1004D6880(unsigned int a1)
{
  uint64_t v3 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v3 - 8);
  BOOL v5 = (char *)&v21[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (void *)((char *)&v21[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  void *v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  id v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    Date.init()();
    uint64_t v13 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 0, 1, v13);
    uint64_t v14 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics];
    swift_beginAccess();
    uint64_t v15 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
    sub_10026B410((uint64_t)v5, (uint64_t)&v14[*(int *)(v15 + 20)], (uint64_t *)&unk_100975040);
    uint64_t v16 = &v14[*(int *)(v15 + 72)];
    *(_DWORD *)uint64_t v16 = a1;
    v16[4] = 0;
    swift_endAccess();
    sub_1004DCC5C();
    uint64_t v17 = (uint64_t)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    swift_beginAccess();
    sub_10024A330(v17, (uint64_t)v22, &qword_100978040);
    if (v23)
    {
      sub_100278C8C((uint64_t)v22, (uint64_t)v21);
      sub_10000A7E8((uint64_t)v22, &qword_100978040);
      uint64_t v18 = *sub_10026BB6C(v21, v21[3]);
      uint64_t v19 = v1;
      sub_100456674(v19, a1, 0, 0xE000000000000000, v18);

      return sub_10024D338((uint64_t)v21);
    }
    else
    {
      return sub_10000A7E8((uint64_t)v22, &qword_100978040);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1004D6B3C(void *a1)
{
  id v168 = a1;
  uint64_t v2 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v143 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v159 = *(void *)(v160 - 8);
  __chkstk_darwin(v160);
  int64_t v157 = (char *)&v143 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = type metadata accessor for DispatchQoS();
  uint64_t v156 = *(void *)(v158 - 8);
  __chkstk_darwin(v158);
  unint64_t v155 = (char *)&v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = type metadata accessor for UUID();
  unint64_t v164 = *(void *)(v163 - 8);
  __chkstk_darwin(v163);
  unint64_t v161 = (unint64_t)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v162 = (char *)&v143 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  BOOL v165 = (char *)&v143 - v11;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v167 = (char *)&v143 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchPredicate();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (uint64_t *)((char *)&v143 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = v1;
  unint64_t v20 = *(void **)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v18 = v20;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  id v21 = v20;
  char v22 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  if (v22)
  {
    id v154 = v21;
    unsigned __int8 v153 = v4;
    if (qword_100969EC0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v23 = type metadata accessor for Logger();
  id v24 = (id)sub_10000B47C(v23, (uint64_t)qword_1009768B0);
  id v25 = v168;
  unint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    NSString v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    id v168 = v24;
    unint64_t v152 = (void *)v29;
    *(_DWORD *)NSString v28 = 138412290;
    *(void *)&long long aBlock = v25;
    Class v30 = v25;
    uint64_t v166 = v13;
    uint64_t v31 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v152 = v25;

    uint64_t v32 = v19;
    uint64_t v33 = v166;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Handling authentication request %@", v28, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    id v24 = v168;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    unint64_t v26 = v25;
    uint64_t v33 = v13;
    uint64_t v32 = v19;
  }

  uint64_t v34 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  unint64_t v35 = *(void *)&v32[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
  if (v35 <= 0xE && ((1 << v35) & 0x658E) != 0)
  {
    id v36 = v32;
    os_log_type_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v38))
    {
      unint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long aBlock = swift_slowAlloc();
      *(_DWORD *)unint64_t v39 = 136315138;
      uint64_t v40 = sub_10050938C();
      uint64_t v177 = sub_100254634(v40, v41, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Authentication type %s does not support handling this message", v39, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return;
  }
  uint64_t v42 = (uint64_t)&v32[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
  swift_beginAccess();
  sub_10024A330(v42, (uint64_t)&aBlock, &qword_10097BB50);
  sub_10024A330((uint64_t)&aBlock, (uint64_t)&v175, &qword_10097BB50);
  if (!v176)
  {
    sub_10000A7E8((uint64_t)&v175, &qword_10097BB50);
    sub_10024D280();
    uint64_t v50 = swift_allocError();
    *(_DWORD *)uint64_t v51 = 10;
    strcpy((char *)(v51 + 8), "No peer device");
    *(unsigned char *)(v51 + 23) = -18;
    swift_willThrow();
    sub_10000A7E8((uint64_t)&aBlock, &qword_10097BB50);
LABEL_30:
    uint64_t v177 = v50;
    swift_errorRetain();
    sub_10000A844(&qword_10096BAF0);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      sub_1004D9D78(aBlock, *((uint64_t *)&aBlock + 1), (uint64_t)v171);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_errorRelease();
      sub_1004D9D78(10, 0, 0xE000000000000000);
    }
    swift_errorRelease();
    return;
  }
  uint64_t v149 = v34;
  id v168 = v24;
  sub_1002AF688(&v175, (uint64_t)&v177);
  sub_10000A7E8((uint64_t)&aBlock, &qword_10097BB50);
  [v25 sessionStartDate];
  os_log_type_t v43 = v167;
  Date.init(timeIntervalSince1970:)();
  uint64_t v44 = (uint64_t)v165;
  id v151 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
  v151(v165, v43, v12);
  uint64_t v45 = v32;
  uint64_t v46 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56);
  v46(v44, 0, 1, v12);
  unint64_t v152 = v45;
  uint64_t v47 = (uint64_t)v45 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics;
  swift_beginAccess();
  sub_10026B410(v44, v47, (uint64_t *)&unk_100975040);
  swift_endAccess();
  if ([v25 hasUnlockDate])
  {
    [v25 unlockDate];
    if (v48 == 0.0)
    {
      uint64_t v49 = (uint64_t)v162;
      v151(v162, v167, v12);
    }
    else
    {
      [v25 unlockDate];
      uint64_t v49 = (uint64_t)v162;
      Date.init(timeIntervalSince1970:)();
    }
    v46(v49, 0, 1, v12);
    swift_beginAccess();
    uint64_t v52 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
    sub_10026B410(v49, v47 + *(int *)(v52 + 68), (uint64_t *)&unk_100975040);
    swift_endAccess();
  }
  unsigned int v150 = v25;
  unint64_t v53 = v46;
  uint64_t v54 = (uint64_t)v165;
  unint64_t v55 = v167;
  os_log_type_t v56 = (void (*)(uint64_t, char *, char *))v151;
  v151(v165, v167, v12);
  v53(v54, 0, 1, v12);
  swift_beginAccess();
  long long v57 = (int *)type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  uint64_t v58 = v47 + v57[7];
  uint64_t v166 = v33;
  sub_10026B410(v54, v58, (uint64_t *)&unk_100975040);
  uint64_t v59 = v57[8];
  uint64_t v162 = (char *)v12;
  uint64_t v60 = v47 + v59;
  sub_10000A7E8(v47 + v59, (uint64_t *)&unk_100975040);
  v56(v60, v55, v162);
  uint64_t v61 = v60;
  int v62 = v162;
  v53(v61, 0, 1, (uint64_t)v162);
  swift_endAccess();
  Date.init()();
  v53(v54, 0, 1, (uint64_t)v62);
  swift_beginAccess();
  uint64_t v63 = v166;
  sub_10026B410(v54, v47 + v57[9], (uint64_t *)&unk_100975040);
  swift_endAccess();
  uint64_t v64 = 0;
  uint64_t v65 = v152;
  uint64_t v66 = v149;
  unint64_t v67 = v164;
  if ((unint64_t)(*(void *)((char *)v152 + v149) - 1) <= 3)
  {
    id v68 = [v150 awdlInfo];
    if (v68)
    {
      uint64_t v69 = v68;
      uint64_t v70 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v72 = v71;

      Class isa = Data._bridgeToObjectiveC()().super.isa;
      id v74 = sub_1000D2064(isa);

      if (v74)
      {
        uint64_t v64 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
        sub_100250CC4(v70, v72);

        uint64_t v65 = v152;
        goto LABEL_22;
      }
      sub_100250CC4(v70, v72);
    }
    sub_10024D280();
    uint64_t v50 = swift_allocError();
    *(_DWORD *)uint64_t v87 = 10;
    *(void *)(v87 + 8) = 0xD00000000000001FLL;
    *(void *)(v87 + 16) = 0x80000001007BDE20;
    swift_willThrow();
LABEL_28:
    (*(void (**)(char *, char *))(v63 + 8))(v167, v62);
LABEL_29:
    sub_10024D338((uint64_t)&v177);
    goto LABEL_30;
  }
LABEL_22:
  id v75 = [v150 aksToken];
  uint64_t v76 = v163;
  if (!v75)
  {
    sub_10024D280();
    uint64_t v50 = swift_allocError();
    *(_DWORD *)uint64_t v86 = 10;
    *(void *)(v86 + 8) = 0xD00000000000001FLL;
    *(void *)(v86 + 16) = 0x80000001007BF740;
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *))(v63 + 8))(v167, v62);
    sub_10024D338((uint64_t)&v177);
    goto LABEL_30;
  }
  os_log_type_t v77 = v75;
  BOOL v165 = (char *)v64;
  uint64_t v78 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v80 = v79;

  sub_100278C8C((uint64_t)&v177, (uint64_t)&aBlock);
  uint64_t v81 = *(void (**)(unint64_t))(v67 + 16);
  unint64_t v82 = v161;
  id v151 = (void (*)(char *, char *, uint64_t))((char *)v65
                                                      + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_sessionID);
  v81(v161);
  uint64_t v83 = *(objc_class **)((char *)v65 + v66);
  type metadata accessor for SDAuthenticationAKSAuthSession();
  uint64_t v84 = swift_allocObject();
  *(Class *)((char *)&v84->isa + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession) = 0;
  char v85 = (objc_class *)[self sharedManager];
  if (!v85)
  {
    __break(1u);
    return;
  }
  *(Class *)((char *)&v84->isa + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager) = v85;
  *((unsigned char *)&v84->isa + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role) = 0;
  sub_1002AF688(&aBlock, (uint64_t)v84 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice);
  (*(void (**)(unsigned char *, unint64_t, uint64_t))(v67 + 32))((unsigned char *)v84 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_sessionID, v82, v76);
  *(Class *)((char *)&v84->isa + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_type) = v83;
  *(void *)((char *)v65 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_aksAuthSession) = v84;
  swift_retain();
  swift_release();
  sub_10025ADCC(v78, v80);
  sub_10069FF44(0, 0xF000000000000000);
  sub_10069FBEC(v78, v80);
  os_log_type_t v89 = v88;
  sub_100250CC4(v78, v80);
  uint64_t v90 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v164 = v91;

  id v92 = sub_10069FE04();
  unint64_t v148 = v93;
  unint64_t v161 = v80;
  uint64_t v163 = v90;
  unsigned int v150 = v84;
  id v94 = [objc_allocWithZone((Class)SDAuthenticationResponse) init];
  if (!v94)
  {
    sub_10024D280();
    uint64_t v50 = swift_allocError();
    *(_DWORD *)uint64_t v104 = 10;
    *(void *)(v104 + 8) = 0xD000000000000031;
    *(void *)(v104 + 16) = 0x80000001007BF760;
    swift_willThrow();
    swift_bridgeObjectRelease();
    sub_100250CC4(v163, v164);
    sub_100250CC4((uint64_t)v92, v148);
    sub_100250CC4(v78, v161);
    swift_release();
    uint64_t v63 = v166;
    goto LABEL_28;
  }
  uint64_t v95 = v94;
  uint64_t v146 = (uint64_t)v92;
  uint64_t v147 = v78;
  UUID.uuidString.getter();
  NSString v96 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v95 setSessionID:v96];

  [v95 setVersion:1];
  uint64_t v97 = v163;
  unint64_t v98 = v164;
  Class v99 = Data._bridgeToObjectiveC()().super.isa;
  [v95 setAksToken:v99];

  if ((unint64_t)(*(void *)((char *)v152 + v66) - 1) < 4)
  {
    uint64_t v100 = *(void *)((char *)v152 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_rangingSession);
    if (v100)
    {
      uint64_t v101 = *(void *)(v100 + 16);
      unint64_t v102 = *(void *)(v100 + 24);
      sub_10025ADCC(v101, v102);
      v103.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_100250CC4(v101, v102);
    }
    else
    {
      v103.super.Class isa = 0;
    }
    [v95 setAwdlInfo:v103.super.isa];
  }
  id v105 = [v95 data];
  uint64_t v106 = v166;
  uint64_t v107 = v147;
  if (!v105)
  {
    sub_10024D280();
    uint64_t v50 = swift_allocError();
    *(_DWORD *)uint64_t v119 = 10;
    *(void *)(v119 + 8) = 0xD000000000000022;
    *(void *)(v119 + 16) = 0x80000001007BF7A0;
    swift_willThrow();
    swift_bridgeObjectRelease();
    sub_100250CC4(v97, v98);
    sub_100250CC4(v146, v148);

    sub_100250CC4(v107, v161);
    swift_release();
    (*(void (**)(char *, char *))(v106 + 8))(v167, v62);
    goto LABEL_29;
  }
  uint64_t v108 = v105;
  uint64_t v109 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v111 = v110;

  unint64_t v112 = v95;
  uint64_t v113 = Logger.logObject.getter();
  os_log_type_t v114 = static os_log_type_t.default.getter();
  BOOL v115 = os_log_type_enabled(v113, v114);
  id v151 = (void (*)(char *, char *, uint64_t))v111;
  uint64_t v145 = v109;
  uint64_t v144 = v112;
  if (v115)
  {
    float v116 = (uint8_t *)swift_slowAlloc();
    double v117 = (void *)swift_slowAlloc();
    *(_DWORD *)float v116 = 138412290;
    *(void *)&long long aBlock = v112;
    double v118 = v112;
    uint64_t v109 = v145;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v117 = v95;

    uint64_t v106 = v166;
    _os_log_impl((void *)&_mh_execute_header, v113, v114, "Sending authentication response: %@", v116, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    unint64_t v111 = (unint64_t)v151;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v113 = v112;
  }

  sub_100278C8C((uint64_t)&v177, (uint64_t)&v175);
  id v120 = (void *)swift_allocObject();
  id v121 = (char *)v152;
  v120[2] = v152;
  v120[3] = v109;
  v120[4] = v111;
  sub_1002AF688(&v175, (uint64_t)(v120 + 5));
  id v173 = sub_1004ECBA8;
  id v174 = v120;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  os_log_type_t v171 = sub_100296520;
  unint64_t v172 = &unk_1008DD908;
  uint64_t v122 = _Block_copy(&aBlock);
  char v123 = v121;
  sub_10025ADCC(v109, v111);
  char v124 = v155;
  static DispatchQoS.unspecified.getter();
  id v169 = _swiftEmptyArrayStorage;
  sub_100361140((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  os_log_type_t v125 = v157;
  uint64_t v126 = v160;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v122);
  (*(void (**)(char *, uint64_t))(v159 + 8))(v125, v126);
  (*(void (**)(char *, uint64_t))(v156 + 8))(v124, v158);
  swift_release();
  id v127 = [self standardUserDefaults];
  NSString v128 = String._bridgeToObjectiveC()();
  LOBYTE(v126) = [v127 BOOLForKey:v128];

  os_log_type_t v129 = v162;
  if ((v126 & 1) != 0 || (unint64_t)(*(void *)&v121[v66] - 1) >= 4)
  {
    swift_bridgeObjectRelease();
    uint64_t v136 = Logger.logObject.getter();
    os_log_type_t v137 = static os_log_type_t.default.getter();
    BOOL v138 = os_log_type_enabled(v136, v137);
    unint64_t v139 = v161;
    unint64_t v140 = v148;
    uint64_t v141 = v163;
    if (v138)
    {
      uint64_t v142 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v142 = 0;
      _os_log_impl((void *)&_mh_execute_header, v136, v137, "Skipping ranging", v142, 2u);
      swift_slowDealloc();
    }
    sub_100250CC4(v141, v164);

    sub_100250CC4(v146, v140);
    sub_100250CC4(v145, (unint64_t)v151);

    sub_100250CC4(v147, v139);
    swift_release();
    (*(void (**)(char *, char *))(v106 + 8))(v167, v129);
    sub_10024D338((uint64_t)&v177);
    v123[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingSucceeded] = 1;
  }
  else
  {
    uint64_t v130 = type metadata accessor for TaskPriority();
    uint64_t v131 = (uint64_t)v153;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v130 - 8) + 56))(v153, 1, 1, v130);
    int v132 = (void *)swift_allocObject();
    v132[2] = 0;
    v132[3] = 0;
    v132[4] = v165;
    v132[5] = v123;
    uint64_t v133 = v146;
    unint64_t v134 = v148;
    v132[6] = v146;
    v132[7] = v134;
    id v135 = v123;
    sub_10025ADCC(v133, v134);
    sub_10028CFA8(v131, (uint64_t)&unk_100976A28, (uint64_t)v132);
    sub_100250CC4(v163, v164);
    swift_release();
    sub_100250CC4(v133, v134);
    sub_100250CC4(v145, (unint64_t)v151);

    sub_100250CC4(v147, v161);
    swift_release();
    (*(void (**)(char *, char *))(v106 + 8))(v167, v129);
    sub_10024D338((uint64_t)&v177);
  }
}

uint64_t sub_1004D83CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
  swift_beginAccess();
  sub_10024A330(v8, (uint64_t)v11, &qword_100978040);
  if (!v12) {
    return sub_10000A7E8((uint64_t)v11, &qword_100978040);
  }
  sub_100278C8C((uint64_t)v11, (uint64_t)v10);
  sub_10000A7E8((uint64_t)v11, &qword_100978040);
  sub_10026BB6C(v10, v10[3]);
  sub_1006DF18C(a2, a3, a4, 1, *(void *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type));
  return sub_10024D338((uint64_t)v10);
}

uint64_t sub_1004D84BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  v7[17] = v8;
  v7[18] = *(void *)(v8 - 8);
  v7[19] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DispatchQoS();
  v7[20] = v9;
  v7[21] = *(void *)(v9 - 8);
  v7[22] = swift_task_alloc();
  return _swift_task_switch(sub_1004D85DC, 0, 0);
}

uint64_t sub_1004D85DC()
{
  unint64_t v1 = 0xD000000000000012;
  uint64_t v2 = *(void *)(v0 + 104);
  if (v2)
  {
    uint64_t v3 = *(void *)(*(void *)(v0 + 112)
                   + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_rangingSession);
    *(void *)(v0 + 184) = v3;
    if (v3)
    {
      swift_retain();
      uint64_t v4 = (void *)swift_task_alloc();
      *(void *)(v0 + 192) = v4;
      *uint64_t v4 = v0;
      v4[1] = sub_1004D87F4;
      uint64_t v5 = *(void *)(v0 + 120);
      uint64_t v6 = *(void *)(v0 + 128);
      return sub_100422094(v2, v5, v6);
    }
    uint64_t v8 = "No ranging session";
  }
  else
  {
    unint64_t v1 = 0xD00000000000004FLL;
    uint64_t v8 = "remoteAWDLInfo is missing for type that requires ranging. This shouldn't happen";
  }
  unint64_t v9 = (unint64_t)(v8 - 32) | 0x8000000000000000;
  sub_10024D280();
  uint64_t v10 = swift_allocError();
  *(_DWORD *)uint64_t v11 = 10;
  *(void *)(v11 + 8) = v1;
  *(void *)(v11 + 16) = v9;
  swift_willThrow();
  *(void *)(v0 + 88) = v10;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    sub_1004D9D78(*(_DWORD *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80));
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_errorRelease();
    sub_1004D9D78(10, 0, 0xE000000000000000);
  }
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1004D87F4(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 200) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1004D8CDC;
  }
  else
  {
    *(unsigned char *)(v4 + 208) = a1 & 1;
    uint64_t v5 = sub_1004D8920;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1004D8920()
{
  int v1 = *((unsigned __int8 *)v0 + 208);
  *(unsigned char *)(v0[14] + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingSucceeded) = v1;
  if (v1 == 1)
  {
    uint64_t v2 = v0[25];
    sub_1004D8DE8();
    swift_release();
    if (v2)
    {
      v0[11] = v2;
      swift_errorRetain();
      sub_10000A844(&qword_10096BAF0);
      if (swift_dynamicCast())
      {
        swift_errorRelease();
        sub_1004D9D78(*((_DWORD *)v0 + 16), v0[9], v0[10]);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_errorRelease();
        sub_1004D9D78(10, 0, 0xE000000000000000);
      }
      swift_errorRelease();
    }
  }
  else
  {
    if (qword_100969EC0 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000B47C(v3, (uint64_t)qword_1009768B0);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Out of range", v6, 2u);
      swift_slowDealloc();
    }
    uint64_t v7 = v0[22];
    uint64_t v8 = v0[21];
    uint64_t v18 = v0[20];
    uint64_t v10 = v0[18];
    uint64_t v9 = v0[19];
    uint64_t v11 = v0[17];
    uint64_t v12 = (void *)v0[14];

    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    v0[6] = sub_1004ECD14;
    v0[7] = v13;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_100296520;
    v0[5] = &unk_1008DD980;
    uint64_t v14 = _Block_copy(v0 + 2);
    id v15 = v12;
    static DispatchQoS.unspecified.getter();
    v0[12] = _swiftEmptyArrayStorage;
    sub_100361140((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    swift_release();
    _Block_release(v14);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v18);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1004D8CDC()
{
  swift_release();
  *(void *)(v0 + 88) = *(void *)(v0 + 200);
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    sub_1004D9D78(*(_DWORD *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80));
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_errorRelease();
    sub_1004D9D78(10, 0, 0xE000000000000000);
  }
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1004D8DE8()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_authToken + 8];
  if (v11 >> 60 == 15)
  {
    if (qword_100969EC0 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000B47C(v12, (uint64_t)qword_1009768B0);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Auth token not present yet", v15, 2u);
      swift_slowDealloc();
    }
    goto LABEL_19;
  }
  uint64_t v16 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_authToken];
  int v17 = v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingSucceeded];
  uint64_t v48 = v8;
  uint64_t v49 = v16;
  sub_10025ADCC(v16, v11);
  if (v17 != 1)
  {
    if (qword_100969EC0 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_10000B47C(v29, (uint64_t)qword_1009768B0);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v13, v30))
    {
      sub_100250CB0(v49, v11);
LABEL_19:

      return;
    }
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v30, "Ranging not succeeded yet", v31, 2u);
    swift_slowDealloc();

    uint64_t v32 = v49;
    goto LABEL_22;
  }
  uint64_t v46 = v4;
  uint64_t v47 = v1;
  if (qword_100969EC0 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v45 = sub_10000B47C(v18, (uint64_t)qword_1009768B0);
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    id v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Consuming auth token", v21, 2u);
    swift_slowDealloc();
  }

  uint64_t v22 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_aksAuthSession];
  uint64_t v23 = v49;
  if (!v22)
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v33 = 10;
    *(void *)(v33 + 8) = 0xD000000000000013;
    *(void *)(v33 + 16) = 0x80000001007BDDC0;
    swift_willThrow();
    goto LABEL_21;
  }
  uint64_t v44 = v7;
  sub_100278C78(v49, v11);
  swift_retain();
  uint64_t v24 = v47;
  sub_10069FBEC(v23, v11);
  uint64_t v25 = v23;
  os_log_type_t v27 = v26;
  uint64_t v28 = v25;
  sub_100250CB0(v25, v11);
  if (v24)
  {
    swift_release();
    uint64_t v23 = v28;
LABEL_21:
    uint64_t v32 = v23;
LABEL_22:
    sub_100250CB0(v32, v11);
    return;
  }
  v43[1] = v22;
  uint64_t v34 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100250CC4(v34, v35);

  if (*(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type] == 4)
  {
    uint64_t v23 = v28;
    if (!sub_10001DA8C())
    {
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v42 = 10;
      *(void *)(v42 + 8) = 0xD000000000000045;
      *(void *)(v42 + 16) = 0x80000001007BF820;
      swift_willThrow();
      swift_release();
      goto LABEL_21;
    }
    uint64_t v47 = 0;
    id v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      os_log_type_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "BIO ARM SUCCEEDED", v38, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v47 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v2;
  aBlock[4] = sub_1004ECD50;
  aBlock[5] = v39;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008DD9D0;
  uint64_t v40 = _Block_copy(aBlock);
  unint64_t v41 = v2;
  static DispatchQoS.unspecified.getter();
  aBlock[7] = _swiftEmptyArrayStorage;
  sub_100361140((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  swift_release();
  _Block_release(v40);
  sub_100250CB0(v49, v11);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v10, v44);
  swift_release();
}

void sub_1004D9528(unint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (uint64_t *)((char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *unint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  id v13 = v12;
  char v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if ((v14 & 1) == 0)
  {
    __break(1u);
LABEL_33:
    swift_once();
    goto LABEL_12;
  }
  id v15 = [objc_allocWithZone((Class)SDAuthenticationConfirmation) init];
  uint64_t v2 = v15;
  if (v15)
  {
    [v15 setVersion:1];
    id v16 = v2;
    UUID.uuidString.getter();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v16 setSessionID:v17];

    [v16 setSuccess:HIDWORD(a1) & 1];
    if ((a1 & 0x100000000) == 0) {
      [v16 setErrorCode:a1];
    }
    id v18 = [v16 data];
    if (v18)
    {
      uint64_t v19 = v18;
      unint64_t v56 = a1;
      uint64_t v20 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v22 = v21;

      if (qword_100969EC0 != -1) {
        swift_once();
      }
      uint64_t v23 = type metadata accessor for Logger();
      sub_10000B47C(v23, (uint64_t)qword_1009768B0);
      uint64_t v24 = v16;
      uint64_t v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.default.getter();
      BOOL v27 = os_log_type_enabled(v25, v26);
      unint64_t v55 = v24;
      if (v27)
      {
        uint64_t v28 = swift_slowAlloc();
        uint64_t v52 = v20;
        uint64_t v29 = (uint8_t *)v28;
        uint64_t v30 = swift_slowAlloc();
        unint64_t v53 = v22;
        uint64_t v31 = (void *)v30;
        uint64_t v54 = v3;
        *(_DWORD *)uint64_t v29 = 138412290;
        v60[0] = v24;
        uint64_t v32 = v24;
        uint64_t v3 = v54;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v31 = v2;

        _os_log_impl((void *)&_mh_execute_header, v25, v26, "Sending confirmation: %@", v29, 0xCu);
        sub_10000A844(&qword_10096B850);
        swift_arrayDestroy();
        unint64_t v22 = v53;
        swift_slowDealloc();
        uint64_t v20 = v52;
        swift_slowDealloc();
      }
      else
      {

        uint64_t v25 = v24;
      }

      uint64_t v37 = (uint64_t)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
      swift_beginAccess();
      sub_10024A330(v37, (uint64_t)&v58, &qword_10097BB50);
      unint64_t v38 = v56;
      if (v59)
      {
        sub_1002AF688(&v58, (uint64_t)v60);
        uint64_t v39 = (uint64_t)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
        swift_beginAccess();
        sub_10024A330(v39, (uint64_t)&v58, &qword_100978040);
        if (v59)
        {
          sub_100278C8C((uint64_t)&v58, (uint64_t)v57);
          sub_10000A7E8((uint64_t)&v58, &qword_100978040);
          sub_10026BB6C(v57, v57[3]);
          unint64_t v40 = sub_1006DF18C(v20, v22, (uint64_t)v60, 2, *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type]);
          uint64_t v41 = HIDWORD(v40) & 1;
          sub_10024D338((uint64_t)v60);
          sub_10024D338((uint64_t)v57);
          goto LABEL_24;
        }
        sub_10024D338((uint64_t)v60);
        os_log_type_t v43 = &v58;
      }
      else
      {
        sub_10000A7E8((uint64_t)&v58, &qword_10097BB50);
        uint64_t v42 = (uint64_t)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
        swift_beginAccess();
        sub_10024A330(v42, (uint64_t)v60, &qword_100978040);
        if (v61)
        {
          sub_100278C8C((uint64_t)v60, (uint64_t)&v58);
          sub_10000A7E8((uint64_t)v60, &qword_100978040);
          sub_10026BB6C(&v58, v59);
          unint64_t v40 = sub_1006FA798(v20, v22, 2, *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type]);
          uint64_t v41 = HIDWORD(v40) & 1;
          sub_10024D338((uint64_t)&v58);
          goto LABEL_24;
        }
        os_log_type_t v43 = (long long *)v60;
      }
      sub_10000A7E8((uint64_t)v43, &qword_100978040);
      LODWORD(v40) = 0;
      LOBYTE(v41) = 1;
LABEL_24:
      v3[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_isConfirmationSent] = 1;
      if ((v38 & 0x100000000) != 0)
      {
        if (v41)
        {
          Date.init()();
          uint64_t v44 = type metadata accessor for Date();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v7, 0, 1, v44);
          uint64_t v45 = &v3[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics];
          swift_beginAccess();
          uint64_t v46 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
          sub_10026B410((uint64_t)v7, (uint64_t)&v45[*(int *)(v46 + 20)], (uint64_t *)&unk_100975040);
          swift_endAccess();
          sub_1004DCC5C();
          uint64_t v47 = (uint64_t)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
          swift_beginAccess();
          sub_10024A330(v47, (uint64_t)v60, &qword_100978040);
          uint64_t v48 = v55;
          if (v61)
          {
            sub_100278C8C((uint64_t)v60, (uint64_t)&v58);
            sub_10000A7E8((uint64_t)v60, &qword_100978040);
            uint64_t v49 = (char *)*sub_10026BB6C(&v58, v59);
            uint64_t v50 = v3;
            sub_1004E7F9C(v50, v49);

            sub_100250CC4(v20, v22);
            sub_10024D338((uint64_t)&v58);
          }
          else
          {

            sub_100250CC4(v20, v22);
            sub_10000A7E8((uint64_t)v60, &qword_100978040);
          }
          return;
        }
        unsigned int v51 = v40;
      }
      else
      {
        unsigned int v51 = v38;
      }
      sub_1004D6880(v51);

      sub_100250CC4(v20, v22);
      return;
    }
  }
  else
  {
    [0 setSuccess:HIDWORD(a1) & 1];
  }
  if (qword_100969EC0 != -1) {
    goto LABEL_33;
  }
LABEL_12:
  uint64_t v33 = type metadata accessor for Logger();
  sub_10000B47C(v33, (uint64_t)qword_1009768B0);
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v34, v35))
  {
    id v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Error converting confirmation to data", v36, 2u);
    swift_slowDealloc();
  }

  sub_1004D6880(0xAu);
}

uint64_t sub_1004D9D78(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v3;
  *(_DWORD *)(v15 + 24) = a1;
  *(void *)(v15 + 32) = a2;
  *(void *)(v15 + 40) = a3;
  aBlock[4] = sub_1004ECD98;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008DDA20;
  id v16 = _Block_copy(aBlock);
  NSString v17 = v3;
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  v19[1] = _swiftEmptyArrayStorage;
  sub_100361140((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

void sub_1004DA058(void *a1)
{
  uint64_t v3 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v73 = v1;
  uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  id v14 = v13;
  char v15 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if (v15)
  {
    if (qword_100969EC0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = sub_10000B47C(v16, (uint64_t)qword_1009768B0);
  id v18 = a1;
  uint64_t v72 = v17;
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  BOOL v21 = os_log_type_enabled(v19, v20);
  unint64_t v71 = v5;
  if (v21)
  {
    unint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v22 = 138412290;
    v74[0] = (uint64_t)v18;
    uint64_t v24 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v23 = v18;

    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Handling authentication response %@", v22, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v19 = v18;
  }
  uint64_t v25 = v73;

  unint64_t v26 = *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
  if (v26 > 0xE || ((1 << v26) & 0x658E) == 0)
  {
    uint64_t v44 = v25;
    uint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      v74[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136315138;
      uint64_t v48 = sub_10050938C();
      v74[3] = sub_100254634(v48, v49, v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Authentication type %s does not support handling this message", v47, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return;
  }
  Date.init()();
  uint64_t v27 = type metadata accessor for Date();
  uint64_t v28 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
  v28(v8, 0, 1, v27);
  uint64_t v29 = &v25[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics];
  swift_beginAccess();
  uint64_t v30 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  sub_10026B410((uint64_t)v8, (uint64_t)&v29[*(int *)(v30 + 36)], (uint64_t *)&unk_100975040);
  swift_endAccess();
  sub_100508854();
  if ([v18 hasErrorCode])
  {
    sub_1004D6880([v18 errorCode]);
    return;
  }
  id v31 = [v18 awdlInfo];
  if (v31)
  {
    uint64_t v32 = v31;
    uint64_t v70 = v28;
    uint64_t v33 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v35 = v34;

    Class isa = Data._bridgeToObjectiveC()().super.isa;
    id v37 = sub_1000D2064(isa);

    if (v37)
    {
      uint64_t v68 = v33;
      unint64_t v69 = v35;
      uint64_t v38 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v39 = (uint64_t *)&v73[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken];
      unint64_t v40 = *(void *)&v73[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken + 8];
      if (v40 >> 60 == 15)
      {
        swift_bridgeObjectRelease();
        uint64_t v41 = Logger.logObject.getter();
        os_log_type_t v42 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v41, v42))
        {
          os_log_type_t v43 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v43 = 0;
          _os_log_impl((void *)&_mh_execute_header, v41, v42, "Could not find ranging token", v43, 2u);
          swift_slowDealloc();
        }

        LOBYTE(v74[0]) = 0;
        sub_1004D9528(0xAuLL);
        sub_100250CC4(v68, v69);
      }
      else
      {
        uint64_t v53 = *v39;
        sub_10025ADCC(*v39, *(void *)&v73[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken + 8]);
        Date.init()();
        v70(v8, 0, 1, v27);
        swift_beginAccess();
        sub_10026B410((uint64_t)v8, (uint64_t)&v29[*(int *)(v30 + 40)], (uint64_t *)&unk_100975040);
        swift_endAccess();
        id v54 = [self standardUserDefaults];
        NSString v55 = String._bridgeToObjectiveC()();
        unsigned int v56 = [v54 BOOLForKey:v55];

        if (v56)
        {
          swift_bridgeObjectRelease();
          long long v57 = Logger.logObject.getter();
          os_log_type_t v58 = static os_log_type_t.default.getter();
          BOOL v59 = os_log_type_enabled(v57, v58);
          uint64_t v61 = v68;
          unint64_t v60 = v69;
          if (v59)
          {
            int v62 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)int v62 = 0;
            _os_log_impl((void *)&_mh_execute_header, v57, v58, "Default classCUnlockSkipRanging is set. Skipping ranging", v62, 2u);
            swift_slowDealloc();
            sub_100250CC4(v61, v60);

            sub_100250CB0(v53, v40);
          }
          else
          {
            sub_100250CC4(v68, v69);
            sub_100250CB0(v53, v40);
          }
          v73[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingSucceeded] = 1;
        }
        else
        {
          uint64_t v63 = type metadata accessor for TaskPriority();
          uint64_t v64 = (uint64_t)v71;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v71, 1, 1, v63);
          uint64_t v65 = (void *)swift_allocObject();
          v65[2] = 0;
          v65[3] = 0;
          uint64_t v66 = v73;
          v65[4] = v73;
          v65[5] = v38;
          v65[6] = v53;
          v65[7] = v40;
          unint64_t v67 = v66;
          sub_100278C78(v53, v40);
          sub_10028CFA8(v64, (uint64_t)&unk_100976A08, (uint64_t)v65);
          sub_100250CC4(v68, v69);
          sub_100250CB0(v53, v40);
          swift_release();
        }
      }
      return;
    }
    sub_100250CC4(v33, v35);
  }
  uint64_t v50 = Logger.logObject.getter();
  os_log_type_t v51 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v52 = 0;
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "Message does not have AWDL info", v52, 2u);
    swift_slowDealloc();
  }

  LOBYTE(v74[0]) = 0;
  sub_1004D9528(0xAuLL);
}

uint64_t sub_1004DA9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[18] = a6;
  v7[19] = a7;
  v7[16] = a4;
  v7[17] = a5;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  v7[20] = v8;
  v7[21] = *(void *)(v8 - 8);
  v7[22] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DispatchQoS();
  v7[23] = v9;
  v7[24] = *(void *)(v9 - 8);
  v7[25] = swift_task_alloc();
  return _swift_task_switch(sub_1004DAB00, 0, 0);
}

uint64_t sub_1004DAB00()
{
  if (qword_100969EC0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_1009768B0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Starting ranging as initiator", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[16];

  uint64_t v6 = *(void *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_rangingSession);
  v0[26] = v6;
  if (v6)
  {
    swift_retain();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[27] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1004DAE98;
    uint64_t v8 = v0[18];
    uint64_t v9 = v0[19];
    uint64_t v10 = v0[17];
    return sub_100422094(v10, v8, v9);
  }
  else
  {
    uint64_t v12 = v0[25];
    uint64_t v13 = v0[22];
    uint64_t v21 = v0[24];
    uint64_t v22 = v0[23];
    uint64_t v14 = v0[20];
    uint64_t v15 = v0[21];
    uint64_t v16 = (void *)v0[16];
    uint64_t v17 = swift_allocObject();
    *(unsigned char *)(v17 + 16) = 2;
    *(void *)(v17 + 24) = v16;
    v0[12] = sub_1004ECB34;
    v0[13] = v17;
    v0[8] = _NSConcreteStackBlock;
    v0[9] = 1107296256;
    v0[10] = sub_100296520;
    v0[11] = &unk_1008DD8B8;
    id v18 = _Block_copy(v0 + 8);
    id v19 = v16;
    static DispatchQoS.unspecified.getter();
    v0[15] = _swiftEmptyArrayStorage;
    sub_100361140((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v18);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v12, v22);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
}

uint64_t sub_1004DAE98(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 224) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1004DB208;
  }
  else
  {
    swift_release();
    *(unsigned char *)(v4 + 232) = a1 & 1;
    uint64_t v5 = sub_1004DAFCC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1004DAFCC()
{
  char v1 = *((unsigned char *)v0 + 232);
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[22];
  uint64_t v12 = v0[24];
  uint64_t v13 = v0[23];
  uint64_t v4 = v0[20];
  uint64_t v5 = v0[21];
  uint64_t v6 = (void *)v0[16];
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = v1;
  *(void *)(v7 + 24) = v6;
  v0[12] = sub_1004ECB34;
  v0[13] = v7;
  v0[8] = _NSConcreteStackBlock;
  v0[9] = 1107296256;
  v0[10] = sub_100296520;
  v0[11] = &unk_1008DD8B8;
  uint64_t v8 = _Block_copy(v0 + 8);
  id v9 = v6;
  static DispatchQoS.unspecified.getter();
  v0[15] = _swiftEmptyArrayStorage;
  sub_100361140((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v2, v13);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1004DB208()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[22];
  uint64_t v12 = v0[24];
  uint64_t v13 = v0[23];
  uint64_t v4 = v0[20];
  uint64_t v11 = v0[21];
  uint64_t v5 = (void *)v0[16];
  swift_release();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v1;
  *(void *)(v6 + 24) = v5;
  v0[6] = sub_1004ECADC;
  v0[7] = v6;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100296520;
  v0[5] = &unk_1008DD868;
  uint64_t v7 = _Block_copy(v0 + 2);
  id v8 = v5;
  swift_errorRetain();
  static DispatchQoS.unspecified.getter();
  v0[14] = _swiftEmptyArrayStorage;
  sub_100361140((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v7);
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v2, v13);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  id v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

void sub_1004DB460(char a1)
{
  if (a1) {
    unint64_t v1 = 0x100000000;
  }
  else {
    unint64_t v1 = 9;
  }
  sub_1004D9528(v1);
}

void sub_1004DB4B4()
{
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    sub_1004D9528(v0);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1004D9528(0xAuLL);
  }
}

uint64_t sub_1004DB548(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v8 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    if (qword_100969EC0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000B47C(v10, (uint64_t)qword_1009768B0);
  uint64_t v11 = a1;
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 138412290;
    uint64_t v39 = v11;
    uint64_t v16 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v15 = v11;

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Handling token %@", v14, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v12 = v11;
  }

  unint64_t v17 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type);
  BOOL v18 = v17 > 0xE;
  uint64_t v19 = (1 << v17) & 0x658E;
  if (v18 || v19 == 0)
  {
    id v29 = [v11 aksToken];
    if (v29)
    {
      uint64_t v30 = v29;
      uint64_t v31 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v33 = v32;

      unint64_t v34 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_authToken);
      uint64_t v35 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_authToken);
      unint64_t v36 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_authToken + 8);
      uint64_t *v34 = v31;
      v34[1] = v33;
      sub_10025ADCC(v31, v33);
      sub_100250CB0(v35, v36);
      sub_1004D8DE8();
      return sub_100250CC4(v31, v33);
    }
    sub_10024D280();
    uint64_t v26 = swift_allocError();
    *(_DWORD *)uint64_t v37 = 10;
    *(void *)(v37 + 8) = 0xD000000000000024;
    *(void *)(v37 + 16) = 0x80000001007BF870;
  }
  else
  {
    uint64_t v39 = 0;
    uint64_t v40 = 0xE000000000000000;
    _StringGuts.grow(_:)(61);
    v21._unint64_t object = (void *)0x80000001007BF8A0;
    v21._uint64_t countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v21);
    v22._uint64_t countAndFlagsBits = sub_10050938C();
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    v23._uint64_t countAndFlagsBits = 0xD000000000000027;
    v23._unint64_t object = (void *)0x80000001007BF8C0;
    String.append(_:)(v23);
    uint64_t v24 = v39;
    uint64_t v25 = v40;
    sub_10024D280();
    uint64_t v26 = swift_allocError();
    *(_DWORD *)uint64_t v27 = 10;
    *(void *)(v27 + 8) = v24;
    *(void *)(v27 + 16) = v25;
  }
  swift_willThrow();
  uint64_t v42 = v26;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    sub_1004D9D78((int)v39, v40, v41);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1004D9D78(10, 0, 0xE000000000000000);
  }
  LOBYTE(v39) = 0;
  sub_1004D9528(0xAuLL);
  return swift_errorRelease();
}

void sub_1004DBA0C()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_4;
  }
  sub_100508854();
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_isConfirmationSent) & 1) == 0)
  {
    v11[12] = 0;
    sub_1004D9528(0xEuLL);
    return;
  }
  if (qword_100969EC0 != -1) {
    goto LABEL_9;
  }
LABEL_4:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000B47C(v7, (uint64_t)qword_1009768B0);
  id v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Can't cancel session that is already finished", v10, 2u);
    swift_slowDealloc();
  }
}

void sub_1004DBC04()
{
  uint64_t v1 = (int *)type metadata accessor for RangingMetrics(0);
  __chkstk_darwin(v1);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1002BC36C();
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_rangingSession);
  if (v4)
  {
    uint64_t v5 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
    swift_beginAccess();
    sub_1004ECDC8(v5, (uint64_t)v3, type metadata accessor for RangingMetrics);
    uint64_t v6 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics;
    swift_beginAccess();
    uint64_t v7 = (int *)type metadata accessor for SDAuthenticationLockSession.Metrics(0);
    uint64_t v8 = v6 + v7[10];
    swift_retain();
    sub_10033FE48((uint64_t)v3, v8);
    sub_10033FE48((uint64_t)&v3[v1[5]], v6 + v7[11]);
    sub_10033FE48((uint64_t)&v3[v1[6]], v6 + v7[12]);
    *(unsigned char *)(v6 + v7[13]) = v3[v1[7]];
    sub_10033FE48((uint64_t)&v3[v1[8]], v6 + v7[14]);
    sub_10033FE48((uint64_t)&v3[v1[9]], v6 + v7[15]);
    swift_endAccess();
    swift_release();
    sub_1004ED028((uint64_t)v3, type metadata accessor for RangingMetrics);
  }
  sub_1004DBDB4();
}

void sub_1004DBDB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v96 = (uint64_t)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v95 = (uint64_t)&v91 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v94 = (uint64_t)&v91 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v93 = (uint64_t)&v91 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  os_log_type_t v13 = (char *)&v91 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v91 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v91 - v18;
  __chkstk_darwin(v17);
  Swift::String v21 = (char *)&v91 - v20;
  uint64_t v22 = type metadata accessor for DispatchPredicate();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (uint64_t *)((char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  void *v25 = v26;
  (*(void (**)(void *, void, uint64_t))(v23 + 104))(v25, enum case for DispatchPredicate.onQueue(_:), v22);
  id v27 = v26;
  LOBYTE(v26) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v23 + 8))(v25, v22);
  if ((v26 & 1) == 0)
  {
    __break(1u);
    goto LABEL_37;
  }
  id v28 = [objc_allocWithZone((Class)SFWatchAuthenticationEvent) init];
  if ((*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type) & 0x8000000000000000) != 0)
  {
LABEL_37:
    __break(1u);
    return;
  }
  id v29 = v28;
  uint64_t v92 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  [v28 setAuthenticationType:];
  uint64_t v30 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics;
  swift_beginAccess();
  uint64_t v31 = (unsigned int *)(v30 + *(int *)(v2 + 72));
  uint64_t v32 = *((unsigned __int8 *)v31 + 4);
  if ((v32 & 1) == 0) {
    [v29 setFailureReason:*v31];
  }
  [v29 setSucceeded:v32];
  [v29 setScreenOn:*(unsigned char *)(v30 + *(int *)(v2 + 76)) & 1];
  sub_1004ECDC8(v30, (uint64_t)v21, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v33 = sub_1004E26B0();
  uint64_t v91 = v2;
  char v35 = v34;
  sub_1004ED028((uint64_t)v21, type metadata accessor for SDAuthenticationLockSession.Metrics);
  double v36 = *(double *)&v33;
  if (v35) {
    double v36 = 0.0;
  }
  [v29 setDiscoveryDuration:v36];
  sub_1004ECDC8(v30, (uint64_t)v19, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v37 = sub_1004E2948();
  char v39 = v38;
  sub_1004ED028((uint64_t)v19, type metadata accessor for SDAuthenticationLockSession.Metrics);
  double v40 = *(double *)&v37;
  if (v39) {
    double v40 = 0.0;
  }
  [v29 setKeyExchangeDuration:v40];
  sub_1004ECDC8(v30, (uint64_t)v16, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v41 = sub_1004E2BE0();
  char v43 = v42;
  sub_1004ED028((uint64_t)v16, type metadata accessor for SDAuthenticationLockSession.Metrics);
  double v44 = *(double *)&v41;
  if (v43) {
    double v44 = 0.0;
  }
  [v29 setAwdlBringUpDuration:v44];
  sub_1004ECDC8(v30, (uint64_t)v13, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v45 = sub_1004E3154();
  char v47 = v46;
  sub_1004ED028((uint64_t)v13, type metadata accessor for SDAuthenticationLockSession.Metrics);
  double v48 = *(double *)&v45;
  if (v47) {
    double v48 = 0.0;
  }
  [v29 setRangingDuration:v48];
  uint64_t v49 = v93;
  sub_1004ECDC8(v30, v93, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v50 = sub_1004E2E78();
  char v52 = v51;
  sub_1004ED028(v49, type metadata accessor for SDAuthenticationLockSession.Metrics);
  double v53 = *(double *)&v50;
  if (v52) {
    double v53 = 0.0;
  }
  [v29 setPeerFoundDuration:v53];
  uint64_t v54 = v94;
  sub_1004ECDC8(v30, v94, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v55 = sub_1004E2428();
  char v57 = v56;
  sub_1004ED028(v54, type metadata accessor for SDAuthenticationLockSession.Metrics);
  double v58 = *(double *)&v55;
  if (v57) {
    double v58 = 0.0;
  }
  [v29 setTotalDuration:v58];
  uint64_t v59 = v95;
  sub_1004ECDC8(v30, v95, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v60 = sub_1004E33EC();
  char v62 = v61;
  sub_1004ED028(v59, type metadata accessor for SDAuthenticationLockSession.Metrics);
  double v63 = *(double *)&v60;
  if (v62) {
    double v63 = 0.0;
  }
  [v29 setTimeSinceBoot:v63];
  uint64_t v64 = v96;
  sub_1004ECDC8(v30, v96, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v65 = sub_1004E3674();
  char v67 = v66;
  sub_1004ED028(v64, type metadata accessor for SDAuthenticationLockSession.Metrics);
  double v68 = *(double *)&v65;
  if (v67) {
    double v68 = 0.0;
  }
  [v29 setTimeSinceRemoteUnlocked:v68];
  int64_t v69 = sub_1005095DC(*(void *)(v1 + v92));
  BOOL v70 = sub_10057C16C(1uLL, v69);
  swift_bridgeObjectRelease();
  if (v70)
  {
    uint64_t v71 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
    swift_beginAccess();
    sub_10024A330(v71, (uint64_t)v97, &qword_100978040);
    uint64_t v72 = v98;
    if (v98)
    {
      uint64_t v73 = sub_10026BB6C(v97, v98);
      uint64_t v74 = *(void *)(v72 - 8);
      __chkstk_darwin(v73);
      uint64_t v76 = (char *)&v91 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v74 + 16))(v76);
      sub_10000A7E8((uint64_t)v97, &qword_100978040);
      sub_1006F9F18();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v76, v72);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000A7E8((uint64_t)v97, &qword_100978040);
    }
    NSString v77 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v29 setWatchHardwareModel:v77];

    sub_10024A330(v71, (uint64_t)v97, &qword_100978040);
    uint64_t v78 = v98;
    if (v98)
    {
      unint64_t v79 = sub_10026BB6C(v97, v98);
      uint64_t v80 = *(void *)(v78 - 8);
      __chkstk_darwin(v79);
      unint64_t v82 = (char *)&v91 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v80 + 16))(v82);
      sub_10000A7E8((uint64_t)v97, &qword_100978040);
      sub_1006F9F18();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v82, v78);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000A7E8((uint64_t)v97, &qword_100978040);
    }
    NSString v84 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v29 setWatchSoftwareVersion:v84];

    NSString v85 = [v29 watchHardwareModel];
    if (!v85)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v85 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v29 setRemoteHardwareModel:v85];

    id v86 = [v29 watchSoftwareVersion];
    if (v86)
    {
      NSString v89 = v86;
    }
    else
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v89 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    uint64_t v90 = &selRef_setRemoteSoftwareVersion_;
  }
  else
  {
    swift_bridgeObjectRetain();
    NSString v83 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v29 setRemoteHardwareModel:v83];

    swift_bridgeObjectRetain();
    NSString v87 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v29 setRemoteSoftwareVersion:v87];

    NSString v88 = String._bridgeToObjectiveC()();
    [v29 setWatchHardwareModel:v88];

    NSString v89 = String._bridgeToObjectiveC()();
    uint64_t v90 = &selRef_setWatchSoftwareVersion_;
  }
  [v29 *v90:v89];

  [v29 submitEvent];
}

uint64_t sub_1004DC7E4()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    if (qword_100969EC0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000B47C(v7, (uint64_t)qword_1009768B0);
  uint64_t v8 = v0;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v17 = v12;
    type metadata accessor for UUID();
    sub_100361140((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v16 = sub_100254634(v13, v14, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Response timer fired for %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return sub_1004D6880(0xCu);
}

uint64_t sub_1004DCAD0(unsigned char *a1, Swift::UInt a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for StateMetrics(0);
  uint64_t v10 = (uint64_t)&a1[v9[5]];
  uint64_t v11 = (int *)type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  sub_10033FE48(v10, v3 + v11[16]);
  *(unsigned char *)(v3 + v11[19]) = *a1;
  sub_1006CDD5C((uint64_t)v8);
  sub_10026B410((uint64_t)v8, v3 + v11[6], (uint64_t *)&unk_100975040);
  uint64_t v12 = *(void *)&a1[v9[9]];
  if (*(void *)(v12 + 16) && (unint64_t v13 = sub_100583C14(a2), (v14 & 1) != 0))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(v12 + 56) + 16 * v13);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v16 = 0;
  }
  uint64_t v18 = (void *)(v3 + v11[20]);
  swift_bridgeObjectRelease();
  *uint64_t v18 = v17;
  v18[1] = v16;
  uint64_t v19 = *(void *)&a1[v9[10]];
  if (*(void *)(v19 + 16) && (unint64_t v20 = sub_100583C14(a2), (v21 & 1) != 0))
  {
    uint64_t v22 = (uint64_t *)(*(void *)(v19 + 56) + 16 * v20);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v23 = 0;
  }
  uint64_t v25 = (void *)(v3 + v11[21]);
  uint64_t result = swift_bridgeObjectRelease();
  void *v25 = v24;
  v25[1] = v23;
  return result;
}

void sub_1004DCC5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v155 = (uint64_t)&v154 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v161 = (uint64_t)&v154 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v160 = (uint64_t)&v154 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v154 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v159 = (uint64_t)&v154 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v158 = (uint64_t)&v154 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v154 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  char v21 = (char *)&v154 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v154 - v22;
  uint64_t v24 = type metadata accessor for DispatchPredicate();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v154 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v28 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  *(void *)uint64_t v27 = v28;
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v27, enum case for DispatchPredicate.onQueue(_:), v24);
  id v29 = v28;
  LOBYTE(v28) = _dispatchPreconditionTest(_:)();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  if (v28)
  {
    sub_10000A844(&qword_10096B500);
    uint64_t v27 = (char *)swift_allocObject();
    long long v162 = xmmword_10076E7A0;
    *((_OWORD *)v27 + 1) = xmmword_10076E7A0;
    *((void *)v27 + 4) = UUID.uuidString.getter();
    *((void *)v27 + 5) = v30;
    if (qword_100969EC0 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v31 = type metadata accessor for Logger();
  uint64_t v157 = sub_10000B47C(v31, (uint64_t)qword_1009768B0);
  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    char v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v34 = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Logging metrics", v34, 2u);
    swift_slowDealloc();
  }

  uint64_t v35 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics;
  swift_beginAccess();
  int v36 = *(unsigned __int8 *)(v35 + *(int *)(v2 + 76));
  if (v36 != 2)
  {
    uint64_t v163 = 0;
    unint64_t v164 = 0xE000000000000000;
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease();
    uint64_t v163 = (char *)0xD000000000000016;
    unint64_t v164 = 0x80000001007BF720;
    if (v36) {
      uint64_t v37 = 1702195828;
    }
    else {
      uint64_t v37 = 0x65736C6166;
    }
    if (v36) {
      unint64_t v38 = 0xE400000000000000;
    }
    else {
      unint64_t v38 = 0xE500000000000000;
    }
    unint64_t v39 = v38;
    String.append(_:)(*(Swift::String *)&v37);
    swift_bridgeObjectRelease();
    uint64_t v40 = (uint64_t)v163;
    unint64_t v41 = v164;
    unint64_t v43 = *((void *)v27 + 2);
    unint64_t v42 = *((void *)v27 + 3);
    if (v43 >= v42 >> 1) {
      uint64_t v27 = sub_100253208((char *)(v42 > 1), v43 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v43 + 1;
    double v44 = &v27[16 * v43];
    *((void *)v44 + 4) = v40;
    *((void *)v44 + 5) = v41;
  }
  uint64_t v156 = v11;
  sub_1004ECDC8(v35, (uint64_t)v23, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v45 = sub_1004E33EC();
  char v47 = v46;
  sub_1004ED028((uint64_t)v23, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v47 & 1) == 0)
  {
    uint64_t v163 = 0;
    unint64_t v164 = 0xE000000000000000;
    _StringGuts.grow(_:)(33);
    swift_bridgeObjectRelease();
    uint64_t v163 = (char *)0xD00000000000001ELL;
    unint64_t v164 = 0x80000001007BF700;
    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = v162;
    *(void *)(v48 + 56) = &type metadata for Double;
    *(void *)(v48 + 64) = &protocol witness table for Double;
    *(void *)(v48 + 32) = v45;
    v49._uint64_t countAndFlagsBits = String.init(format:_:)();
    String.append(_:)(v49);
    swift_bridgeObjectRelease();
    v50._uint64_t countAndFlagsBits = 115;
    v50._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v50);
    uint64_t v51 = (uint64_t)v163;
    unint64_t v52 = v164;
    unint64_t v54 = *((void *)v27 + 2);
    unint64_t v53 = *((void *)v27 + 3);
    if (v54 >= v53 >> 1) {
      uint64_t v27 = sub_100253208((char *)(v53 > 1), v54 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v54 + 1;
    uint64_t v55 = &v27[16 * v54];
    *((void *)v55 + 4) = v51;
    *((void *)v55 + 5) = v52;
  }
  sub_1004ECDC8(v35, (uint64_t)v21, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v56 = sub_1004E3674();
  char v58 = v57;
  sub_1004ED028((uint64_t)v21, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v58 & 1) == 0)
  {
    uint64_t v163 = 0;
    unint64_t v164 = 0xE000000000000000;
    _StringGuts.grow(_:)(44);
    swift_bridgeObjectRelease();
    uint64_t v163 = (char *)0xD000000000000029;
    unint64_t v164 = 0x80000001007BF6D0;
    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = v162;
    *(void *)(v59 + 56) = &type metadata for Double;
    *(void *)(v59 + 64) = &protocol witness table for Double;
    *(void *)(v59 + 32) = v56;
    v60._uint64_t countAndFlagsBits = String.init(format:_:)();
    String.append(_:)(v60);
    swift_bridgeObjectRelease();
    v61._uint64_t countAndFlagsBits = 115;
    v61._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v61);
    uint64_t v62 = (uint64_t)v163;
    unint64_t v63 = v164;
    unint64_t v65 = *((void *)v27 + 2);
    unint64_t v64 = *((void *)v27 + 3);
    if (v65 >= v64 >> 1) {
      uint64_t v27 = sub_100253208((char *)(v64 > 1), v65 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v65 + 1;
    char v66 = &v27[16 * v65];
    *((void *)v66 + 4) = v62;
    *((void *)v66 + 5) = v63;
  }
  sub_1004ECDC8(v35, (uint64_t)v18, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v67 = sub_1004E26B0();
  char v69 = v68;
  sub_1004ED028((uint64_t)v18, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if (v69)
  {
    uint64_t v77 = (uint64_t)v156;
  }
  else
  {
    uint64_t v163 = 0;
    unint64_t v164 = 0xE000000000000000;
    _StringGuts.grow(_:)(27);
    swift_bridgeObjectRelease();
    uint64_t v163 = (char *)0xD000000000000018;
    unint64_t v164 = 0x80000001007BF6B0;
    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v70 = swift_allocObject();
    *(_OWORD *)(v70 + 16) = v162;
    *(void *)(v70 + 56) = &type metadata for Double;
    *(void *)(v70 + 64) = &protocol witness table for Double;
    *(void *)(v70 + 32) = v67;
    v71._uint64_t countAndFlagsBits = String.init(format:_:)();
    String.append(_:)(v71);
    swift_bridgeObjectRelease();
    v72._uint64_t countAndFlagsBits = 115;
    v72._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v72);
    uint64_t v73 = (uint64_t)v163;
    unint64_t v74 = v164;
    unint64_t v76 = *((void *)v27 + 2);
    unint64_t v75 = *((void *)v27 + 3);
    uint64_t v77 = (uint64_t)v156;
    if (v76 >= v75 >> 1) {
      uint64_t v27 = sub_100253208((char *)(v75 > 1), v76 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v76 + 1;
    uint64_t v78 = &v27[16 * v76];
    *((void *)v78 + 4) = v73;
    *((void *)v78 + 5) = v74;
  }
  uint64_t v79 = v158;
  sub_1004ECDC8(v35, v158, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v80 = sub_1004E2948();
  char v82 = v81;
  sub_1004ED028(v79, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v82 & 1) == 0)
  {
    uint64_t v163 = 0;
    unint64_t v164 = 0xE000000000000000;
    _StringGuts.grow(_:)(30);
    swift_bridgeObjectRelease();
    uint64_t v163 = (char *)0xD00000000000001BLL;
    unint64_t v164 = 0x80000001007BF690;
    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v83 = swift_allocObject();
    *(_OWORD *)(v83 + 16) = v162;
    *(void *)(v83 + 56) = &type metadata for Double;
    *(void *)(v83 + 64) = &protocol witness table for Double;
    *(void *)(v83 + 32) = v80;
    v84._uint64_t countAndFlagsBits = String.init(format:_:)();
    String.append(_:)(v84);
    swift_bridgeObjectRelease();
    v85._uint64_t countAndFlagsBits = 115;
    v85._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v85);
    uint64_t v86 = (uint64_t)v163;
    unint64_t v87 = v164;
    unint64_t v89 = *((void *)v27 + 2);
    unint64_t v88 = *((void *)v27 + 3);
    if (v89 >= v88 >> 1) {
      uint64_t v27 = sub_100253208((char *)(v88 > 1), v89 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v89 + 1;
    uint64_t v90 = &v27[16 * v89];
    *((void *)v90 + 4) = v86;
    *((void *)v90 + 5) = v87;
  }
  uint64_t v91 = v159;
  sub_1004ECDC8(v35, v159, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v92 = sub_1004E2BE0();
  char v94 = v93;
  sub_1004ED028(v91, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v94 & 1) == 0)
  {
    uint64_t v163 = 0;
    unint64_t v164 = 0xE000000000000000;
    _StringGuts.grow(_:)(31);
    swift_bridgeObjectRelease();
    uint64_t v163 = (char *)0xD00000000000001CLL;
    unint64_t v164 = 0x80000001007BF670;
    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v95 = swift_allocObject();
    *(_OWORD *)(v95 + 16) = v162;
    *(void *)(v95 + 56) = &type metadata for Double;
    *(void *)(v95 + 64) = &protocol witness table for Double;
    *(void *)(v95 + 32) = v92;
    v96._uint64_t countAndFlagsBits = String.init(format:_:)();
    String.append(_:)(v96);
    swift_bridgeObjectRelease();
    v97._uint64_t countAndFlagsBits = 115;
    v97._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v97);
    uint64_t v98 = (uint64_t)v163;
    unint64_t v99 = v164;
    unint64_t v101 = *((void *)v27 + 2);
    unint64_t v100 = *((void *)v27 + 3);
    if (v101 >= v100 >> 1) {
      uint64_t v27 = sub_100253208((char *)(v100 > 1), v101 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v101 + 1;
    unint64_t v102 = &v27[16 * v101];
    *((void *)v102 + 4) = v98;
    *((void *)v102 + 5) = v99;
  }
  sub_1004ECDC8(v35, v77, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v103 = sub_1004E2E78();
  char v105 = v104;
  sub_1004ED028(v77, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v105 & 1) == 0)
  {
    uint64_t v163 = 0;
    unint64_t v164 = 0xE000000000000000;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    uint64_t v163 = (char *)0xD000000000000019;
    unint64_t v164 = 0x80000001007BF650;
    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v106 = swift_allocObject();
    *(_OWORD *)(v106 + 16) = v162;
    *(void *)(v106 + 56) = &type metadata for Double;
    *(void *)(v106 + 64) = &protocol witness table for Double;
    *(void *)(v106 + 32) = v103;
    v107._uint64_t countAndFlagsBits = String.init(format:_:)();
    String.append(_:)(v107);
    swift_bridgeObjectRelease();
    v108._uint64_t countAndFlagsBits = 115;
    v108._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v108);
    uint64_t v109 = (uint64_t)v163;
    unint64_t v110 = v164;
    unint64_t v112 = *((void *)v27 + 2);
    unint64_t v111 = *((void *)v27 + 3);
    if (v112 >= v111 >> 1) {
      uint64_t v27 = sub_100253208((char *)(v111 > 1), v112 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v112 + 1;
    uint64_t v113 = &v27[16 * v112];
    *((void *)v113 + 4) = v109;
    *((void *)v113 + 5) = v110;
  }
  uint64_t v114 = v160;
  sub_1004ECDC8(v35, v160, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v115 = sub_1004E3154();
  char v117 = v116;
  sub_1004ED028(v114, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v117 & 1) == 0)
  {
    uint64_t v163 = 0;
    unint64_t v164 = 0xE000000000000000;
    _StringGuts.grow(_:)(25);
    swift_bridgeObjectRelease();
    uint64_t v163 = (char *)0xD000000000000016;
    unint64_t v164 = 0x80000001007BF630;
    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v118 = swift_allocObject();
    *(_OWORD *)(v118 + 16) = v162;
    *(void *)(v118 + 56) = &type metadata for Double;
    *(void *)(v118 + 64) = &protocol witness table for Double;
    *(void *)(v118 + 32) = v115;
    v119._uint64_t countAndFlagsBits = String.init(format:_:)();
    String.append(_:)(v119);
    swift_bridgeObjectRelease();
    v120._uint64_t countAndFlagsBits = 115;
    v120._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v120);
    uint64_t v121 = (uint64_t)v163;
    unint64_t v122 = v164;
    unint64_t v124 = *((void *)v27 + 2);
    unint64_t v123 = *((void *)v27 + 3);
    if (v124 >= v123 >> 1) {
      uint64_t v27 = sub_100253208((char *)(v123 > 1), v124 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v124 + 1;
    os_log_type_t v125 = &v27[16 * v124];
    *((void *)v125 + 4) = v121;
    *((void *)v125 + 5) = v122;
  }
  uint64_t v126 = v161;
  sub_1004ECDC8(v35, v161, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v127 = sub_1004E2428();
  char v129 = v128;
  sub_1004ED028(v126, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v129 & 1) == 0)
  {
    uint64_t v130 = v155;
    sub_1004ECDC8(v35, v155, type metadata accessor for SDAuthenticationLockSession.Metrics);
    sub_1004E26B0();
    char v132 = v131;
    sub_1004ED028(v130, type metadata accessor for SDAuthenticationLockSession.Metrics);
    if (v132) {
      uint64_t v133 = 0;
    }
    else {
      uint64_t v133 = 0xD000000000000013;
    }
    if (v132) {
      unint64_t v134 = (void *)0xE000000000000000;
    }
    else {
      unint64_t v134 = (void *)0x80000001007BF610;
    }
    uint64_t v163 = 0;
    unint64_t v164 = 0xE000000000000000;
    _StringGuts.grow(_:)(31);
    swift_bridgeObjectRelease();
    uint64_t v163 = (char *)0xD000000000000017;
    unint64_t v164 = 0x80000001007BF5F0;
    v135._uint64_t countAndFlagsBits = v133;
    v135._unint64_t object = v134;
    String.append(_:)(v135);
    swift_bridgeObjectRelease();
    v136._uint64_t countAndFlagsBits = 2112800;
    v136._unint64_t object = (void *)0xE300000000000000;
    String.append(_:)(v136);
    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v137 = swift_allocObject();
    *(_OWORD *)(v137 + 16) = v162;
    *(void *)(v137 + 56) = &type metadata for Double;
    *(void *)(v137 + 64) = &protocol witness table for Double;
    *(void *)(v137 + 32) = v127;
    v138._uint64_t countAndFlagsBits = String.init(format:_:)();
    String.append(_:)(v138);
    swift_bridgeObjectRelease();
    v139._uint64_t countAndFlagsBits = 115;
    v139._unint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v139);
    uint64_t v140 = (uint64_t)v163;
    unint64_t v141 = v164;
    unint64_t v143 = *((void *)v27 + 2);
    unint64_t v142 = *((void *)v27 + 3);
    if (v143 >= v142 >> 1) {
      uint64_t v27 = sub_100253208((char *)(v142 > 1), v143 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v143 + 1;
    uint64_t v144 = &v27[16 * v143];
    *((void *)v144 + 4) = v140;
    *((void *)v144 + 5) = v141;
  }
  uint64_t v163 = v27;
  sub_10000A844((uint64_t *)&unk_100974C30);
  sub_1002AE308((unint64_t *)&qword_10096CE90, (uint64_t *)&unk_100974C30);
  uint64_t v145 = BidirectionalCollection<>.joined(separator:)();
  unint64_t v147 = v146;
  swift_bridgeObjectRelease();
  id v148 = [self standardUserDefaults];
  NSString v149 = String._bridgeToObjectiveC()();
  NSString v150 = String._bridgeToObjectiveC()();
  [v148 setObject:v149 forKey:v150];

  swift_bridgeObjectRetain();
  id v151 = Logger.logObject.getter();
  os_log_type_t v152 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v151, v152))
  {
    unsigned __int8 v153 = (uint8_t *)swift_slowAlloc();
    uint64_t v163 = (char *)swift_slowAlloc();
    *(_DWORD *)unsigned __int8 v153 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v165 = sub_100254634(v145, v147, (uint64_t *)&v163);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v151, v152, "%s", v153, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1004DDC14(void *a1)
{
  if (qword_100969EC0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_1009768B0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Sending confirmation", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = (uint64_t)a1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
  swift_beginAccess();
  sub_10024A330(v6, (uint64_t)v10, &qword_100978040);
  if (v11)
  {
    sub_100278C8C((uint64_t)v10, (uint64_t)v9);
    sub_10000A7E8((uint64_t)v10, &qword_100978040);
    uint64_t v7 = (char *)*sub_10026BB6C(v9, v9[3]);
    id v8 = a1;
    sub_1004E7F9C(v8, v7);

    sub_10024D338((uint64_t)v9);
  }
  else
  {
    sub_10000A7E8((uint64_t)v10, &qword_100978040);
  }
  v10[0] = 1;
  sub_1004D9528(0x100000000uLL);
}

void sub_1004DDDAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v4 = v3;
  id v8 = [objc_allocWithZone((Class)SDAuthenticationResponse) init];
  uint64_t v9 = v8;
  p_inst_meths = &OBJC_PROTOCOL___NSNetServiceBrowserDelegate.inst_meths;
  if (v8)
  {
    [v8 setVersion:1];
    uint64_t v11 = a2;
    uint64_t v12 = v9;
    UUID.uuidString.getter();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v12 setSessionID:v13];

    [v12 setErrorCode:a1];
    uint64_t v14 = v12;
    a2 = v11;
    id v15 = [v14 data];
    if (v15)
    {
      uint64_t v16 = v15;
      int v17 = a1;
      a1 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v19 = v18;

      uint64_t v20 = (uint64_t)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
      swift_beginAccess();
      sub_10024A330(v20, (uint64_t)&v44, &qword_10097BB50);
      if (v45)
      {
        sub_1002AF688(&v44, (uint64_t)v46);
        uint64_t v21 = (uint64_t)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
        swift_beginAccess();
        sub_10024A330(v21, (uint64_t)&v44, &qword_100978040);
        if (v45)
        {
          sub_100278C8C((uint64_t)&v44, (uint64_t)v43);
          sub_10000A7E8((uint64_t)&v44, &qword_100978040);
          sub_10026BB6C(v43, v43[3]);
          sub_1006DF18C(a1, v19, (uint64_t)v46, 1, *(void *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type]);
          sub_100250CC4(a1, v19);
          sub_10024D338((uint64_t)v46);
          sub_10024D338((uint64_t)v43);
        }
        else
        {
          sub_10024D338((uint64_t)v46);
          sub_100250CC4(a1, v19);
          sub_10000A7E8((uint64_t)&v44, &qword_100978040);
        }
        LODWORD(a1) = v17;
        goto LABEL_16;
      }
      sub_100250CC4(a1, v19);
      sub_10000A7E8((uint64_t)&v44, &qword_10097BB50);
      LODWORD(a1) = v17;
    }
  }
  uint64_t v41 = a2;
  if (qword_100969EC0 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_10000B47C(v22, (uint64_t)qword_1009768B0);
  uint64_t v23 = v9;
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v40 = a3;
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 138412290;
    if (v9)
    {
      v46[0] = v23;
      id v28 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      id v29 = v9;
    }
    else
    {
      v46[0] = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      id v29 = 0;
    }
    *uint64_t v27 = v29;

    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Could not convert response to data: %@", v26, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a3 = v40;
    a2 = v41;
    p_inst_meths = &OBJC_PROTOCOL___NSNetServiceBrowserDelegate.inst_meths;
  }
  else
  {

    p_inst_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___NSNetServiceBrowserDelegate + 24);
  }
LABEL_16:
  uint64_t v30 = (uint64_t)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess();
  sub_10024A330(v30, (uint64_t)v46, &qword_100978040);
  if (v46[3])
  {
    sub_100278C8C((uint64_t)v46, (uint64_t)&v44);
    sub_10000A7E8((uint64_t)v46, &qword_100978040);
    uint64_t v31 = *sub_10026BB6C(&v44, v45);
    uint64_t v32 = v4;
    sub_100456674(v32, a1, a2, a3, v31);

    sub_10024D338((uint64_t)&v44);
  }
  else
  {
    sub_10000A7E8((uint64_t)v46, &qword_100978040);
  }
  if (p_inst_meths[472] != (__objc2_meth_list *)-1) {
    swift_once();
  }
  uint64_t v33 = type metadata accessor for Logger();
  sub_10000B47C(v33, (uint64_t)qword_1009768B0);
  swift_bridgeObjectRetain_n();
  char v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    int v36 = (uint8_t *)swift_slowAlloc();
    unint64_t v42 = v9;
    uint64_t v37 = (void *)swift_slowAlloc();
    *(_DWORD *)int v36 = 138412290;
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v38 = a1;
    *(void *)(v38 + 8) = a2;
    *(void *)(v38 + 16) = a3;
    swift_bridgeObjectRetain();
    uint64_t v39 = _swift_stdlib_bridgeErrorToNSError();
    v46[0] = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v37 = v39;
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Session failed with error: %@", v36, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    char v34 = v9;
  }
}

uint64_t sub_1004DE430()
{
  sub_10000A7E8(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_lastUnlockDate, (uint64_t *)&unk_100975040);
  sub_100250CB0(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken), *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken + 8));
  swift_release();
  sub_100250CB0(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_authToken), *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_authToken + 8));
  return sub_1004ED028(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics, type metadata accessor for SDAuthenticationLockSession.Metrics);
}

uint64_t sub_1004DE54C()
{
  return type metadata accessor for SDAuthenticationLockSession(0);
}

uint64_t type metadata accessor for SDAuthenticationLockSession(uint64_t a1)
{
  return sub_10000B93C(a1, (uint64_t *)&unk_100976920);
}

void sub_1004DE574()
{
  sub_100271710();
  if (v0 <= 0x3F)
  {
    type metadata accessor for SDAuthenticationLockSession.Metrics(319);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for SDAuthenticationLockSession.Metrics(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100976988);
}

uint64_t *sub_1004DE67C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = a3[5];
    NSString v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    uint64_t v16 = a3[6];
    int v17 = (char *)a1 + v16;
    unint64_t v18 = (char *)a2 + v16;
    if (v9((uint64_t *)((char *)a2 + v16), 1, v7))
    {
      uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    if (v9((uint64_t *)((char *)a2 + v20), 1, v7))
    {
      uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
    }
    uint64_t v24 = a3[8];
    os_log_type_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    if (v9((uint64_t *)((char *)a2 + v24), 1, v7))
    {
      uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v25, v26, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
    }
    uint64_t v28 = a3[9];
    id v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    if (v9((uint64_t *)((char *)a2 + v28), 1, v7))
    {
      uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v29, v30, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
    }
    uint64_t v32 = a3[10];
    uint64_t v33 = (char *)a1 + v32;
    char v34 = (char *)a2 + v32;
    if (v9((uint64_t *)((char *)a2 + v32), 1, v7))
    {
      uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v33, v34, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
    }
    uint64_t v36 = a3[11];
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    if (v9((uint64_t *)((char *)a2 + v36), 1, v7))
    {
      uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v37, v38, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
    }
    uint64_t v40 = a3[12];
    uint64_t v41 = (char *)a1 + v40;
    unint64_t v42 = (char *)a2 + v40;
    if (v9((uint64_t *)((char *)a2 + v40), 1, v7))
    {
      uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v41, v42, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
    }
    uint64_t v44 = a3[14];
    *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
    uint64_t v45 = (char *)a1 + v44;
    char v46 = (char *)a2 + v44;
    if (v9((uint64_t *)((char *)a2 + v44), 1, v7))
    {
      uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v45, v46, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
    }
    uint64_t v48 = a3[15];
    Swift::String v49 = (char *)a1 + v48;
    Swift::String v50 = (char *)a2 + v48;
    if (v9((uint64_t *)((char *)a2 + v48), 1, v7))
    {
      uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v49, v50, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
    }
    uint64_t v52 = a3[16];
    unint64_t v53 = (char *)a1 + v52;
    unint64_t v54 = (char *)a2 + v52;
    if (v9((uint64_t *)((char *)a2 + v52), 1, v7))
    {
      uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v53, v54, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v7);
    }
    uint64_t v56 = a3[17];
    char v57 = (char *)a1 + v56;
    char v58 = (char *)a2 + v56;
    if (v9((uint64_t *)((char *)a2 + v56), 1, v7))
    {
      uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v57, v58, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0, 1, v7);
    }
    uint64_t v60 = a3[18];
    uint64_t v61 = a3[19];
    uint64_t v62 = (char *)a1 + v60;
    unint64_t v63 = (char *)a2 + v60;
    *(_DWORD *)uint64_t v62 = *(_DWORD *)v63;
    v62[4] = v63[4];
    *((unsigned char *)a1 + v61) = *((unsigned char *)a2 + v61);
    uint64_t v64 = a3[20];
    uint64_t v65 = a3[21];
    char v66 = (uint64_t *)((char *)a1 + v64);
    uint64_t v67 = (uint64_t *)((char *)a2 + v64);
    uint64_t v68 = v67[1];
    *char v66 = *v67;
    v66[1] = v68;
    char v69 = (uint64_t *)((char *)a1 + v65);
    uint64_t v70 = (uint64_t *)((char *)a2 + v65);
    uint64_t v71 = v70[1];
    *char v69 = *v70;
    v69[1] = v71;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1004DEFA4(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v7 = a1 + a2[5];
  if (!v6(v7, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v8 = a1 + a2[6];
  if (!v6(v8, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  }
  uint64_t v9 = a1 + a2[7];
  if (!v6(v9, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v4);
  }
  uint64_t v10 = a1 + a2[8];
  if (!v6(v10, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v10, v4);
  }
  uint64_t v11 = a1 + a2[9];
  if (!v6(v11, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v11, v4);
  }
  uint64_t v12 = a1 + a2[10];
  if (!v6(v12, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v12, v4);
  }
  uint64_t v13 = a1 + a2[11];
  if (!v6(v13, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v13, v4);
  }
  uint64_t v14 = a1 + a2[12];
  if (!v6(v14, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v14, v4);
  }
  uint64_t v15 = a1 + a2[14];
  if (!v6(v15, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
  }
  uint64_t v16 = a1 + a2[15];
  if (!v6(v16, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v16, v4);
  }
  uint64_t v17 = a1 + a2[16];
  if (!v6(v17, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v17, v4);
  }
  uint64_t v18 = a1 + a2[17];
  if (!v6(v18, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v18, v4);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *sub_1004DF394(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  if (v8(&a2[v18], 1, v6))
  {
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  if (v8(&a2[v22], 1, v6))
  {
    uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v23, v24, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v23, 0, 1, v6);
  }
  uint64_t v26 = a3[9];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  if (v8(&a2[v26], 1, v6))
  {
    uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v27, v28, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v27, 0, 1, v6);
  }
  uint64_t v30 = a3[10];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  if (v8(&a2[v30], 1, v6))
  {
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v31, v32, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v31, 0, 1, v6);
  }
  uint64_t v34 = a3[11];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  if (v8(&a2[v34], 1, v6))
  {
    uint64_t v37 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v35, v36, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v35, 0, 1, v6);
  }
  uint64_t v38 = a3[12];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  if (v8(&a2[v38], 1, v6))
  {
    uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v39, v40, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v39, 0, 1, v6);
  }
  uint64_t v42 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  if (v8(&a2[v42], 1, v6))
  {
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v43, v44, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v43, 0, 1, v6);
  }
  uint64_t v46 = a3[15];
  uint64_t v47 = &a1[v46];
  uint64_t v48 = &a2[v46];
  if (v8(&a2[v46], 1, v6))
  {
    uint64_t v49 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v47, v48, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v47, 0, 1, v6);
  }
  uint64_t v50 = a3[16];
  uint64_t v51 = &a1[v50];
  uint64_t v52 = &a2[v50];
  if (v8(&a2[v50], 1, v6))
  {
    uint64_t v53 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v51, v52, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v51, 0, 1, v6);
  }
  uint64_t v54 = a3[17];
  uint64_t v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  if (v8(&a2[v54], 1, v6))
  {
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v55, v56, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v55, 0, 1, v6);
  }
  uint64_t v58 = a3[18];
  uint64_t v59 = a3[19];
  uint64_t v60 = &a1[v58];
  uint64_t v61 = &a2[v58];
  *(_DWORD *)uint64_t v60 = *(_DWORD *)v61;
  v60[4] = v61[4];
  a1[v59] = a2[v59];
  uint64_t v62 = a3[20];
  uint64_t v63 = a3[21];
  uint64_t v64 = &a1[v62];
  uint64_t v65 = &a2[v62];
  uint64_t v66 = *((void *)v65 + 1);
  *(void *)uint64_t v64 = *(void *)v65;
  *((void *)v64 + 1) = v66;
  uint64_t v67 = &a1[v63];
  uint64_t v68 = &a2[v63];
  uint64_t v69 = *((void *)v68 + 1);
  *(void *)uint64_t v67 = *(void *)v68;
  *((void *)v67 + 1) = v69;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_1004DFC6C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v19, v20, v6);
LABEL_19:
  uint64_t v24 = a3[7];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  int v27 = v8(&a1[v24], 1, v6);
  int v28 = v8(v26, 1, v6);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
LABEL_24:
    uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v25, v26, v6);
LABEL_25:
  uint64_t v30 = a3[8];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  int v33 = v8(&a1[v30], 1, v6);
  int v34 = v8(v32, 1, v6);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v31, v32, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v31, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
LABEL_30:
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v31, v32, v6);
LABEL_31:
  uint64_t v36 = a3[9];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  int v39 = v8(&a1[v36], 1, v6);
  int v40 = v8(v38, 1, v6);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v37, v38, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v37, 0, 1, v6);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v37, v6);
LABEL_36:
    uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v37, v38, v6);
LABEL_37:
  uint64_t v42 = a3[10];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  int v45 = v8(&a1[v42], 1, v6);
  int v46 = v8(v44, 1, v6);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v43, v44, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v43, 0, 1, v6);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v43, v6);
LABEL_42:
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v43, v44, v6);
LABEL_43:
  uint64_t v48 = a3[11];
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  int v51 = v8(&a1[v48], 1, v6);
  int v52 = v8(v50, 1, v6);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v49, v50, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v49, 0, 1, v6);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v52)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v49, v6);
LABEL_48:
    uint64_t v53 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v49, v50, v6);
LABEL_49:
  uint64_t v54 = a3[12];
  uint64_t v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  int v57 = v8(&a1[v54], 1, v6);
  int v58 = v8(v56, 1, v6);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v55, v56, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v55, 0, 1, v6);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v55, v6);
LABEL_54:
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v55, v56, v6);
LABEL_55:
  a1[a3[13]] = a2[a3[13]];
  uint64_t v60 = a3[14];
  uint64_t v61 = &a1[v60];
  uint64_t v62 = &a2[v60];
  int v63 = v8(&a1[v60], 1, v6);
  int v64 = v8(v62, 1, v6);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v61, v62, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v61, 0, 1, v6);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v64)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v61, v6);
LABEL_60:
    uint64_t v65 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v61, v62, v6);
LABEL_61:
  uint64_t v66 = a3[15];
  uint64_t v67 = &a1[v66];
  uint64_t v68 = &a2[v66];
  int v69 = v8(&a1[v66], 1, v6);
  int v70 = v8(v68, 1, v6);
  if (v69)
  {
    if (!v70)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v67, v68, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v67, 0, 1, v6);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v70)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v67, v6);
LABEL_66:
    uint64_t v71 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v67, v68, v6);
LABEL_67:
  uint64_t v72 = a3[16];
  uint64_t v73 = &a1[v72];
  unint64_t v74 = &a2[v72];
  int v75 = v8(&a1[v72], 1, v6);
  int v76 = v8(v74, 1, v6);
  if (v75)
  {
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v73, v74, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v73, 0, 1, v6);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v76)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v73, v6);
LABEL_72:
    uint64_t v77 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v73, v74, v6);
LABEL_73:
  uint64_t v78 = a3[17];
  uint64_t v79 = &a1[v78];
  uint64_t v80 = &a2[v78];
  int v81 = v8(&a1[v78], 1, v6);
  int v82 = v8(v80, 1, v6);
  if (!v81)
  {
    if (!v82)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v79, v80, v6);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v79, v6);
    goto LABEL_78;
  }
  if (v82)
  {
LABEL_78:
    uint64_t v83 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v79, v80, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v79, 0, 1, v6);
LABEL_79:
  uint64_t v84 = a3[18];
  Swift::String v85 = &a1[v84];
  uint64_t v86 = &a2[v84];
  int v87 = *(_DWORD *)v86;
  v85[4] = v86[4];
  *(_DWORD *)Swift::String v85 = v87;
  a1[a3[19]] = a2[a3[19]];
  uint64_t v88 = a3[20];
  unint64_t v89 = &a1[v88];
  uint64_t v90 = &a2[v88];
  *(void *)unint64_t v89 = *(void *)v90;
  *((void *)v89 + 1) = *((void *)v90 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v91 = a3[21];
  uint64_t v92 = &a1[v91];
  char v93 = &a2[v91];
  *(void *)uint64_t v92 = *(void *)v93;
  *((void *)v92 + 1) = *((void *)v93 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1004E0A50(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  int v15 = &a1[v14];
  int v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  if (v8(&a2[v18], 1, v6))
  {
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  if (v8(&a2[v22], 1, v6))
  {
    uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v23, v24, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v23, 0, 1, v6);
  }
  uint64_t v26 = a3[9];
  int v27 = &a1[v26];
  int v28 = &a2[v26];
  if (v8(&a2[v26], 1, v6))
  {
    uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v27, v28, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v27, 0, 1, v6);
  }
  uint64_t v30 = a3[10];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  if (v8(&a2[v30], 1, v6))
  {
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v31, v32, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v31, 0, 1, v6);
  }
  uint64_t v34 = a3[11];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  if (v8(&a2[v34], 1, v6))
  {
    uint64_t v37 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v35, v36, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v35, 0, 1, v6);
  }
  uint64_t v38 = a3[12];
  int v39 = &a1[v38];
  int v40 = &a2[v38];
  if (v8(&a2[v38], 1, v6))
  {
    uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v39, v40, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v39, 0, 1, v6);
  }
  uint64_t v42 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  if (v8(&a2[v42], 1, v6))
  {
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v43, v44, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v43, 0, 1, v6);
  }
  uint64_t v46 = a3[15];
  uint64_t v47 = &a1[v46];
  uint64_t v48 = &a2[v46];
  if (v8(&a2[v46], 1, v6))
  {
    uint64_t v49 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v47, v48, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v47, 0, 1, v6);
  }
  uint64_t v50 = a3[16];
  int v51 = &a1[v50];
  int v52 = &a2[v50];
  if (v8(&a2[v50], 1, v6))
  {
    uint64_t v53 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v51, v52, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v51, 0, 1, v6);
  }
  uint64_t v54 = a3[17];
  uint64_t v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  if (v8(&a2[v54], 1, v6))
  {
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v55, v56, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v55, 0, 1, v6);
  }
  uint64_t v58 = a3[18];
  uint64_t v59 = a3[19];
  uint64_t v60 = &a1[v58];
  uint64_t v61 = &a2[v58];
  *(_DWORD *)uint64_t v60 = *(_DWORD *)v61;
  v60[4] = v61[4];
  a1[v59] = a2[v59];
  uint64_t v62 = a3[21];
  *(_OWORD *)&a1[a3[20]] = *(_OWORD *)&a2[a3[20]];
  *(_OWORD *)&a1[v62] = *(_OWORD *)&a2[v62];
  return a1;
}

char *sub_1004E130C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v19, v20, v6);
LABEL_19:
  uint64_t v24 = a3[7];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  int v27 = v8(&a1[v24], 1, v6);
  int v28 = v8(v26, 1, v6);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
LABEL_24:
    uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v25, v26, v6);
LABEL_25:
  uint64_t v30 = a3[8];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  int v33 = v8(&a1[v30], 1, v6);
  int v34 = v8(v32, 1, v6);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v31, v32, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v31, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
LABEL_30:
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v31, v32, v6);
LABEL_31:
  uint64_t v36 = a3[9];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  int v39 = v8(&a1[v36], 1, v6);
  int v40 = v8(v38, 1, v6);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v37, v38, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v37, 0, 1, v6);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v37, v6);
LABEL_36:
    uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v37, v38, v6);
LABEL_37:
  uint64_t v42 = a3[10];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  int v45 = v8(&a1[v42], 1, v6);
  int v46 = v8(v44, 1, v6);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v43, v44, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v43, 0, 1, v6);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v43, v6);
LABEL_42:
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v43, v44, v6);
LABEL_43:
  uint64_t v48 = a3[11];
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  int v51 = v8(&a1[v48], 1, v6);
  int v52 = v8(v50, 1, v6);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v49, v50, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v49, 0, 1, v6);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v52)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v49, v6);
LABEL_48:
    uint64_t v53 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v49, v50, v6);
LABEL_49:
  uint64_t v54 = a3[12];
  uint64_t v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  int v57 = v8(&a1[v54], 1, v6);
  int v58 = v8(v56, 1, v6);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v55, v56, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v55, 0, 1, v6);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v55, v6);
LABEL_54:
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v55, v56, v6);
LABEL_55:
  uint64_t v60 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  uint64_t v61 = &a1[v60];
  uint64_t v62 = &a2[v60];
  int v63 = v8(&a1[v60], 1, v6);
  int v64 = v8(v62, 1, v6);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v61, v62, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v61, 0, 1, v6);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v64)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v61, v6);
LABEL_60:
    uint64_t v65 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v61, v62, v6);
LABEL_61:
  uint64_t v66 = a3[15];
  uint64_t v67 = &a1[v66];
  uint64_t v68 = &a2[v66];
  int v69 = v8(&a1[v66], 1, v6);
  int v70 = v8(v68, 1, v6);
  if (v69)
  {
    if (!v70)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v67, v68, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v67, 0, 1, v6);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v70)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v67, v6);
LABEL_66:
    uint64_t v71 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v67, v68, v6);
LABEL_67:
  uint64_t v72 = a3[16];
  uint64_t v73 = &a1[v72];
  unint64_t v74 = &a2[v72];
  int v75 = v8(&a1[v72], 1, v6);
  int v76 = v8(v74, 1, v6);
  if (v75)
  {
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v73, v74, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v73, 0, 1, v6);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v76)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v73, v6);
LABEL_72:
    uint64_t v77 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v73, v74, v6);
LABEL_73:
  uint64_t v78 = a3[17];
  uint64_t v79 = &a1[v78];
  uint64_t v80 = &a2[v78];
  int v81 = v8(&a1[v78], 1, v6);
  int v82 = v8(v80, 1, v6);
  if (!v81)
  {
    if (!v82)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v79, v80, v6);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v79, v6);
    goto LABEL_78;
  }
  if (v82)
  {
LABEL_78:
    uint64_t v83 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v79, v80, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v79, 0, 1, v6);
LABEL_79:
  uint64_t v84 = a3[18];
  uint64_t v85 = a3[19];
  uint64_t v86 = &a1[v84];
  int v87 = &a2[v84];
  *(_DWORD *)uint64_t v86 = *(_DWORD *)v87;
  unint64_t v86[4] = v87[4];
  a1[v85] = a2[v85];
  uint64_t v88 = a3[20];
  unint64_t v89 = &a1[v88];
  uint64_t v90 = &a2[v88];
  uint64_t v92 = *(void *)v90;
  uint64_t v91 = *((void *)v90 + 1);
  *(void *)unint64_t v89 = v92;
  *((void *)v89 + 1) = v91;
  swift_bridgeObjectRelease();
  uint64_t v93 = a3[21];
  char v94 = &a1[v93];
  uint64_t v95 = &a2[v93];
  uint64_t v97 = *(void *)v95;
  uint64_t v96 = *((void *)v95 + 1);
  *(void *)char v94 = v97;
  *((void *)v94 + 1) = v96;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1004E20C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004E20DC);
}

uint64_t sub_1004E20DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 80) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1004E21B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004E21C4);
}

uint64_t sub_1004E21C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 80) + 8) = a2;
  }
  return result;
}

void sub_1004E2288()
{
  sub_100271710();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1004E2354(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_lastUnlockDate;
  swift_beginAccess();
  sub_10026B410(a1, v3, (uint64_t *)&unk_100975040);
  return swift_endAccess();
}

void sub_1004E23BC()
{
}

void sub_1004E23E0(void *a1)
{
}

void sub_1004E2404(void *a1)
{
}

uint64_t sub_1004E2428()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v23 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  int v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v23 - v12;
  sub_10024A330(v0, (uint64_t)v6, (uint64_t *)&unk_100975040);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v14(v6, 1, v7) == 1)
  {
    uint64_t v15 = (uint64_t)v6;
LABEL_5:
    sub_10000A7E8(v15, (uint64_t *)&unk_100975040);
    return 0;
  }
  int v16 = v6;
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v16, v7);
  uint64_t v18 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  sub_10024A330(v0 + *(int *)(v18 + 20), (uint64_t)v4, (uint64_t *)&unk_100975040);
  if (v14(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v15 = (uint64_t)v4;
    goto LABEL_5;
  }
  v17(v11, v4, v7);
  Date.timeIntervalSince(_:)();
  uint64_t v21 = v20;
  int v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v11, v7);
  v22(v13, v7);
  return v21;
}

uint64_t sub_1004E26B0()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v24 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  int v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  sub_10024A330(v0 + *(int *)(v14 + 24), (uint64_t)v6, (uint64_t *)&unk_100975040);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_10000A7E8(v16, (uint64_t *)&unk_100975040);
    return 0;
  }
  uint64_t v25 = v11;
  uint64_t v17 = v6;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v18(v13, v17, v7);
  sub_10024A330(v0 + *(int *)(v14 + 28), (uint64_t)v4, (uint64_t *)&unk_100975040);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }
  uint64_t v20 = v25;
  v18(v25, v4, v7);
  Date.timeIntervalSince(_:)();
  uint64_t v22 = v21;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v20, v7);
  v23(v13, v7);
  return v22;
}

uint64_t sub_1004E2948()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v24 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  int v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  sub_10024A330(v0 + *(int *)(v14 + 32), (uint64_t)v6, (uint64_t *)&unk_100975040);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_10000A7E8(v16, (uint64_t *)&unk_100975040);
    return 0;
  }
  uint64_t v25 = v11;
  uint64_t v17 = v6;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v18(v13, v17, v7);
  sub_10024A330(v0 + *(int *)(v14 + 36), (uint64_t)v4, (uint64_t *)&unk_100975040);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }
  uint64_t v20 = v25;
  v18(v25, v4, v7);
  Date.timeIntervalSince(_:)();
  uint64_t v22 = v21;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v20, v7);
  v23(v13, v7);
  return v22;
}

uint64_t sub_1004E2BE0()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v24 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  int v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  sub_10024A330(v0 + *(int *)(v14 + 40), (uint64_t)v6, (uint64_t *)&unk_100975040);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_10000A7E8(v16, (uint64_t *)&unk_100975040);
    return 0;
  }
  uint64_t v25 = v11;
  uint64_t v17 = v6;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v18(v13, v17, v7);
  sub_10024A330(v0 + *(int *)(v14 + 44), (uint64_t)v4, (uint64_t *)&unk_100975040);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }
  uint64_t v20 = v25;
  v18(v25, v4, v7);
  Date.timeIntervalSince(_:)();
  uint64_t v22 = v21;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v20, v7);
  v23(v13, v7);
  return v22;
}

uint64_t sub_1004E2E78()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v28 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  int v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  if (*(unsigned char *)(v0 + *(int *)(v14 + 52)))
  {
    *(double *)&uint64_t result = 0.0;
    return result;
  }
  uint64_t v16 = v14;
  sub_10024A330(v0 + *(int *)(v14 + 48), (uint64_t)v6, (uint64_t *)&unk_100975040);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v17(v6, 1, v7) == 1)
  {
    uint64_t v18 = (uint64_t)v6;
LABEL_7:
    sub_10000A7E8(v18, (uint64_t *)&unk_100975040);
    *(double *)&uint64_t result = 0.0;
    return result;
  }
  uint64_t v29 = v8;
  uint64_t v19 = v6;
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v20(v13, v19, v7);
  sub_10024A330(v0 + *(int *)(v16 + 40), (uint64_t)v4, (uint64_t *)&unk_100975040);
  if (v17(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v7);
    uint64_t v18 = (uint64_t)v4;
    goto LABEL_7;
  }
  v20(v11, v4, v7);
  Date.timeIntervalSince(_:)();
  double v22 = v21;
  *(double *)&uint64_t v23 = COERCE_DOUBLE(sub_1004E2BE0());
  char v25 = v24;
  uint64_t v26 = *(void (**)(char *, uint64_t))(v29 + 8);
  v26(v11, v7);
  v26(v13, v7);
  double v27 = *(double *)&v23;
  if (v25) {
    double v27 = 0.0;
  }
  *(double *)&uint64_t result = v22 - v27;
  return result;
}

uint64_t sub_1004E3154()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v24 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  int v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  sub_10024A330(v0 + *(int *)(v14 + 56), (uint64_t)v6, (uint64_t *)&unk_100975040);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_10000A7E8(v16, (uint64_t *)&unk_100975040);
    return 0;
  }
  char v25 = v11;
  uint64_t v17 = v6;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v18(v13, v17, v7);
  sub_10024A330(v0 + *(int *)(v14 + 60), (uint64_t)v4, (uint64_t *)&unk_100975040);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }
  uint64_t v20 = v25;
  v18(v25, v4, v7);
  Date.timeIntervalSince(_:)();
  uint64_t v22 = v21;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v20, v7);
  v23(v13, v7);
  return v22;
}

uint64_t sub_1004E33EC()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v23 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  int v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  sub_10024A330(v0 + *(int *)(v14 + 64), (uint64_t)v6, (uint64_t *)&unk_100975040);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_10000A7E8(v16, (uint64_t *)&unk_100975040);
    return 0;
  }
  uint64_t v17 = v6;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v18(v13, v17, v7);
  sub_10024A330(v0, (uint64_t)v4, (uint64_t *)&unk_100975040);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }
  v18(v11, v4, v7);
  Date.timeIntervalSince(_:)();
  uint64_t v21 = v20;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v11, v7);
  v22(v13, v7);
  return v21;
}

uint64_t sub_1004E3674()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v23 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  int v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v23 - v12;
  sub_10024A330(v0, (uint64_t)v6, (uint64_t *)&unk_100975040);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v14(v6, 1, v7) == 1)
  {
    uint64_t v15 = (uint64_t)v6;
LABEL_5:
    sub_10000A7E8(v15, (uint64_t *)&unk_100975040);
    return 0;
  }
  uint64_t v16 = v6;
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v16, v7);
  uint64_t v18 = type metadata accessor for SDAuthenticationLockSession.Metrics(0);
  sub_10024A330(v0 + *(int *)(v18 + 68), (uint64_t)v4, (uint64_t *)&unk_100975040);
  if (v14(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v15 = (uint64_t)v4;
    goto LABEL_5;
  }
  v17(v11, v4, v7);
  Date.timeIntervalSince(_:)();
  uint64_t v21 = v20;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v11, v7);
  v22(v13, v7);
  return v21;
}

uint64_t sub_1004E38FC(void *a1, char *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_10000A844(&qword_100974EA0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v256 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v256 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v258 = (uint64_t)&v256 - v12;
  __chkstk_darwin(v11);
  uint64_t v260 = (uint64_t)&v256 - v13;
  uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  v264 = (char *)&v256 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v263 = (uint64_t)&v256 - v17;
  v272 = (char *)type metadata accessor for Logger();
  v266 = (char *)*((void *)v272 - 1);
  __chkstk_darwin(v272);
  v265 = (char *)&v256 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v270 = v19;
  uint64_t v271 = v20;
  __chkstk_darwin(v19);
  v269 = (char *)&v256 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v276 = type metadata accessor for UUID();
  uint64_t v273 = *(void *)(v276 - 8);
  uint64_t v22 = __chkstk_darwin(v276);
  uint64_t v24 = (char *)&v256 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22);
  v274 = (char *)&v256 - v26;
  __chkstk_darwin(v25);
  v275 = (char *)&v256 - v27;
  uint64_t v28 = type metadata accessor for DispatchPredicate();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (uint64_t *)((char *)&v256 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v297[3] = type metadata accessor for SDAuthenticationPairingLockSession();
  v297[4] = &off_1008DE398;
  v297[0] = a1;
  uint64_t v32 = *(void **)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *uint64_t v31 = v32;
  (*(void (**)(void *, void, uint64_t))(v29 + 104))(v31, enum case for DispatchPredicate.onQueue(_:), v28);
  id v33 = a1;
  id v34 = v32;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v29 + 8))(v31, v28);
  if (a1)
  {
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v35 = sub_10000B47C((uint64_t)v272, (uint64_t)qword_10097F520);
  sub_100278C8C((uint64_t)v297, (uint64_t)v294);
  uint64_t v267 = v35;
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.default.getter();
  BOOL v38 = os_log_type_enabled(v36, v37);
  v262 = v10;
  v259 = v7;
  v257 = v24;
  if (v38)
  {
    int v39 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v288 = swift_slowAlloc();
    *(_DWORD *)int v39 = 136315138;
    sub_100278C8C((uint64_t)v294, (uint64_t)v291);
    sub_10000A844((uint64_t *)&unk_10096B440);
    uint64_t v40 = String.init<A>(describing:)();
    v291[0] = sub_100254634(v40, v41, (uint64_t *)&v288);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)v294);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Session did complete: %s", v39, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10024D338((uint64_t)v294);
  }

  uint64_t v42 = v297[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
  swift_beginAccess();
  sub_10024A330(v42, (uint64_t)v294, &qword_10097BB50);
  uint64_t v43 = v295;
  if (v295)
  {
    uint64_t v44 = v296;
    sub_10026BB6C(v294, v295);
    uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v43, v44);
    unint64_t v47 = v46;
    sub_10024D338((uint64_t)v294);
    if (v47)
    {
      if (*(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationManager])
      {
        swift_retain();
        sub_100333064(v45, v47);
        swift_release();
      }
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_10000A7E8((uint64_t)v294, &qword_10097BB50);
  }
  sub_100278C8C((uint64_t)v297, (uint64_t)v291);
  sub_10000A844((uint64_t *)&unk_10096B440);
  sub_10000A844((uint64_t *)&unk_100972440);
  if (swift_dynamicCast())
  {
    uint64_t v48 = sub_1002AF688(&v288, (uint64_t)v294);
    __chkstk_darwin(v48);
    *(&v256 - 2) = (uint64_t)v294;
    uint64_t v49 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions];
    swift_beginAccess();
    uint64_t v50 = 0;
    uint64_t v51 = sub_100452294((uint64_t (*)(uint64_t))sub_1004ED0B0, (uint64_t)(&v256 - 4));
    uint64_t v52 = *(void *)(*(void *)v49 + 16);
    if (v52 >= v51)
    {
      uint64_t v268 = 0;
      sub_1005A5820(v51, v52);
      swift_endAccess();
      uint64_t v53 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions];
      swift_beginAccess();
      uint64_t v54 = *(void *)v53;
      uint64_t v55 = *(void *)(*(void *)v53 + 16);
      if (!v55)
      {
LABEL_32:
        uint64_t v95 = (uint64_t)v269;
        Date.init()();
        sub_1006D5DAC(v95);
        (*(void (**)(uint64_t, uint64_t))(v271 + 8))(v95, v270);
        if (*(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_nearbyActionAdvertiser])
        {
          swift_retain();
          sub_100328244();
          swift_release();
        }
        sub_1006D6720(0);
        uint64_t v97 = v295;
        uint64_t v96 = v296;
        sub_10026BB6C(v294, v295);
        (*(void (**)(uint64_t))(*(void *)(v96 + 8) + 88))(v97);
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        uint64_t v99 = v273;
        if (Strong)
        {
          unint64_t v100 = (void *)Strong;
          uint64_t v102 = v295;
          uint64_t v101 = v296;
          sub_10026BB6C(v294, v295);
          uint64_t v103 = v275;
          (*(void (**)(uint64_t))(*(void *)(v101 + 8) + 32))(v102);
          Class isa = UUID._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v99 + 8))(v103, v276);
          [v100 manager:a2 didCompleteAuthenticationFor:isa];

          swift_unknownObjectRelease();
        }
LABEL_99:
        sub_10024D338((uint64_t)v294);
LABEL_100:
        uint64_t v234 = v297[0];
        uint64_t v235 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
        unint64_t v236 = *(void *)(v297[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type);
        Swift::UInt8 v237 = SFDeviceClassCodeGet();
        Swift::Int v238 = sub_1005095A0(v236);
        BOOL v239 = sub_10057C25C(8u, v238);
        swift_bridgeObjectRelease();
        if (v239)
        {
          if (!SFDeviceIsRealityDevice()) {
            return sub_10024D338((uint64_t)v297);
          }
        }
        else
        {
          Swift::Int v240 = sub_1005095A0(v236);
          BOOL v241 = sub_10057C25C(v237, v240);
          swift_bridgeObjectRelease();
          if (!v241) {
            return sub_10024D338((uint64_t)v297);
          }
        }
        uint64_t v242 = *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager];
        char v243 = sub_100508B74(*(void *)(v234 + v235));
        uint64_t v244 = v234 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
        swift_beginAccess();
        sub_10024A330(v244, (uint64_t)v294, &qword_10097BB50);
        uint64_t v245 = sub_1005EA4B4(v243, (uint64_t)v294);
        uint64_t v247 = v246;
        uint64_t v248 = swift_getObjectType();
        uint64_t v249 = (*(uint64_t (**)(uint64_t, uint64_t))(v247 + 56))(v248, v247);
        uint64_t v250 = __chkstk_darwin(v249);
        *(&v256 - 4) = v245;
        *(&v256 - 3) = v247;
        *(&v256 - 2) = (uint64_t)v294;
        *(&v256 - 1) = v242;
        __chkstk_darwin(v250);
        *(&v256 - 2) = (uint64_t)sub_10045AFA8;
        *(&v256 - 1) = v251;
        v253 = v252 + 4;
        os_unfair_lock_lock(v252 + 4);
        sub_10030F73C(v254);
        os_unfair_lock_unlock(v253);
        swift_unknownObjectRelease();
        sub_10000A7E8((uint64_t)v294, &qword_10097BB50);
        return sub_10024D338((uint64_t)v297);
      }
      v266 = v53;
      v272 = a2;
      uint64_t v56 = (void (**)(char *, uint64_t))(v273 + 8);
      swift_bridgeObjectRetain();
      uint64_t v57 = 0;
      unint64_t v58 = 0;
      uint64_t v59 = v275;
      while (1)
      {
        uint64_t v61 = *(void *)(v54 + v57 + 56);
        uint64_t v60 = *(void *)(v54 + v57 + 64);
        sub_10026BB6C((void *)(v54 + v57 + 32), v61);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v60 + 8) + 8) + 32))(v61);
        uint64_t v63 = v295;
        uint64_t v62 = v296;
        sub_10026BB6C(v294, v295);
        int v64 = v274;
        (*(void (**)(uint64_t))(*(void *)(v62 + 8) + 32))(v63);
        LOBYTE(v62) = static UUID.== infix(_:_:)();
        uint64_t v65 = *v56;
        uint64_t v66 = v64;
        uint64_t v67 = v276;
        (*v56)(v66, v276);
        v65(v59, v67);
        if (v62) {
          break;
        }
        ++v58;
        v57 += 40;
        if (v55 == v58)
        {
          swift_bridgeObjectRelease();
          a2 = v272;
          goto LABEL_32;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v50 = v266;
      if (v58 < *(void *)(*(void *)v266 + 16))
      {
        sub_100278C8C(*(void *)v266 + v57 + 32, (uint64_t)v291);
        uint64_t v90 = v292;
        uint64_t v89 = v293;
        sub_10026BB6C(v291, v292);
        uint64_t v91 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v89 + 8) + 8) + 40))(v90);
        a2 = v272;
        if (v91 == 1)
        {
          uint64_t v92 = Logger.logObject.getter();
          os_log_type_t v93 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v92, v93))
          {
            char v94 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)char v94 = 0;
            _os_log_impl((void *)&_mh_execute_header, v92, v93, "Posting authenticated notification", v94, 2u);
            swift_slowDealloc();
          }

          sub_1006F842C();
        }
        swift_beginAccess();
        sub_1002A6D00(v58, (uint64_t)&v288);
        swift_endAccess();
        sub_10024D338((uint64_t)&v288);
        sub_10024D338((uint64_t)v291);
        goto LABEL_32;
      }
      goto LABEL_111;
    }
    __break(1u);
    goto LABEL_109;
  }
  uint64_t v290 = 0;
  long long v288 = 0u;
  long long v289 = 0u;
  sub_10000A7E8((uint64_t)&v288, &qword_100976A10);
  sub_100278C8C((uint64_t)v297, (uint64_t)v291);
  sub_10000A844(&qword_10096B430);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v290 = 0;
    long long v288 = 0u;
    long long v289 = 0u;
    sub_10000A7E8((uint64_t)&v288, &qword_100976A18);
    uint64_t v268 = 0;
    goto LABEL_100;
  }
  uint64_t v68 = sub_1002AF688(&v288, (uint64_t)v294);
  __chkstk_darwin(v68);
  *(&v256 - 2) = (uint64_t)v294;
  int v69 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions];
  swift_beginAccess();
  uint64_t v50 = 0;
  uint64_t v70 = sub_100451F6C((uint64_t (*)(uint64_t))sub_1004ED0B0, (uint64_t)(&v256 - 4));
  uint64_t v71 = *(void *)(*(void *)v69 + 16);
  if (v71 < v70)
  {
LABEL_109:
    __break(1u);
    goto LABEL_110;
  }
  sub_1005A5880(v70, v71);
  uint64_t v72 = swift_endAccess();
  __chkstk_darwin(v72);
  *(&v256 - 2) = (uint64_t)v294;
  uint64_t v73 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions];
  swift_beginAccess();
  uint64_t v74 = sub_100451FAC((uint64_t (*)(uint64_t))sub_1004ED0B0, (uint64_t)(&v256 - 4));
  uint64_t v75 = *(void *)(*(void *)v73 + 16);
  if (v75 < v74)
  {
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
    goto LABEL_112;
  }
  uint64_t v268 = 0;
  sub_1005A5860(v74, v75);
  swift_endAccess();
  uint64_t v77 = v295;
  uint64_t v76 = v296;
  sub_10026BB6C(v294, v295);
  (*(void (**)(uint64_t))(*(void *)(v76 + 8) + 88))(v77);
  uint64_t v79 = v295;
  uint64_t v78 = v296;
  sub_10026BB6C(v294, v295);
  uint64_t v80 = (*(uint64_t (**)(uint64_t))(*(void *)(v78 + 8) + 40))(v79);
  uint64_t v81 = v273;
  uint64_t v83 = v270;
  uint64_t v82 = v271;
  if (v80 == 3)
  {
    sub_1006E5BC0();
    sub_1006E9424();
    uint64_t v84 = (uint64_t)v269;
    Date.init()();
    sub_1006D5DAC(v84);
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v84, v83);
    uint64_t v86 = v295;
    uint64_t v85 = v296;
    sub_10026BB6C(v294, v295);
    if ((*(uint64_t (**)(uint64_t))(*(void *)(v85 + 8) + 40))(v86) == 3)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v87 = String._bridgeToObjectiveC()();
      NSString v88 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      sub_1000D289C(1, v87, v88);

      uint64_t v82 = v271;
    }
    else
    {
      sub_100278C8C((uint64_t)v294, (uint64_t)v291);
      char v105 = Logger.logObject.getter();
      os_log_type_t v106 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v105, v106))
      {
        Swift::String v107 = a2;
        Swift::String v108 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v288 = swift_slowAlloc();
        *(_DWORD *)Swift::String v108 = 136315138;
        uint64_t v110 = v292;
        uint64_t v109 = v293;
        sub_10026BB6C(v291, v292);
        (*(void (**)(uint64_t))(*(void *)(v109 + 8) + 40))(v110);
        uint64_t v111 = sub_10050938C();
        *(void *)&long long v280 = sub_100254634(v111, v112, (uint64_t *)&v288);
        uint64_t v83 = v270;
        uint64_t v82 = v271;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10024D338((uint64_t)v291);
        _os_log_impl((void *)&_mh_execute_header, v105, v106, "Dynamic store not set for %s", v108, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        a2 = v107;
        swift_slowDealloc();
      }
      else
      {
        sub_10024D338((uint64_t)v291);
      }

      uint64_t v81 = v273;
    }
  }
  uint64_t v114 = v295;
  uint64_t v113 = v296;
  sub_10026BB6C(v294, v295);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v113 + 8) + 40))(v114) == 5) {
    sub_1006CD9D4();
  }
  uint64_t v116 = v295;
  uint64_t v115 = v296;
  sub_10026BB6C(v294, v295);
  uint64_t v117 = (*(uint64_t (**)(uint64_t))(*(void *)(v115 + 8) + 40))(v116);
  sub_100278C8C((uint64_t)v294, (uint64_t)v291);
  if (v117 == 8)
  {
    sub_10024D338((uint64_t)v291);
  }
  else
  {
    uint64_t v119 = v292;
    uint64_t v118 = v293;
    sub_10026BB6C(v291, v292);
    uint64_t v120 = (*(uint64_t (**)(uint64_t))(*(void *)(v118 + 8) + 40))(v119);
    sub_10024D338((uint64_t)v291);
    if (v120 != 5) {
      goto LABEL_68;
    }
  }
  uint64_t v122 = v295;
  uint64_t v121 = v296;
  sub_10026BB6C(v294, v295);
  (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)(v121 + 8) + 64))(&v280, v122);
  if (!v281)
  {
    sub_10000A7E8((uint64_t)&v280, &qword_10097BB50);
    sub_100278C8C((uint64_t)v297, (uint64_t)&v288);
    id v151 = Logger.logObject.getter();
    os_log_type_t v152 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v151, v152))
    {
      unsigned __int8 v153 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v280 = swift_slowAlloc();
      *(_DWORD *)unsigned __int8 v153 = 136315138;
      sub_10026BB6C(&v288, *((uint64_t *)&v289 + 1));
      sub_100361140((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v154 = dispatch thunk of CustomStringConvertible.description.getter();
      v277[0] = sub_100254634(v154, v155, (uint64_t *)&v280);
      uint64_t v83 = v270;
      uint64_t v82 = v271;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10024D338((uint64_t)&v288);
      _os_log_impl((void *)&_mh_execute_header, v151, v152, "No peer device for session: %s", v153, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10024D338((uint64_t)&v288);
    }

LABEL_66:
    uint64_t v166 = v295;
    uint64_t v165 = v296;
    sub_10026BB6C(v294, v295);
    if ((*(uint64_t (**)(uint64_t))(*(void *)(v165 + 8) + 40))(v166) == 5)
    {
      uint64_t v167 = v264;
      Date.init()();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v167, 0, 1, v83);
      uint64_t v168 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager];
      swift_beginAccess();
      uint64_t v169 = *(void *)(v168 + 24);
      uint64_t v170 = *(void *)(v168 + 32);
      sub_1002AF758(v168, v169);
      (*(void (**)(char *, uint64_t, uint64_t))(v170 + 16))(v167, v169, v170);
      swift_endAccess();
    }
LABEL_68:
    uint64_t v172 = v295;
    uint64_t v171 = v296;
    sub_10026BB6C(v294, v295);
    if ((*(uint64_t (**)(uint64_t))(*(void *)(v171 + 8) + 40))(v172) != 8) {
      goto LABEL_96;
    }
    char v173 = sub_1005097B4(*(void *)(v297[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type));
    sub_100278C8C((uint64_t)v294, (uint64_t)&v288);
    if (v173)
    {
      sub_10024D338((uint64_t)&v288);
    }
    else
    {
      uint64_t v174 = *((void *)&v289 + 1);
      uint64_t v175 = v290;
      sub_10026BB6C(&v288, *((uint64_t *)&v289 + 1));
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v175 + 16))(v174, v175))
      {
        sub_10024D338((uint64_t)&v288);
LABEL_78:
        sub_100278C8C((uint64_t)v294, (uint64_t)&v280);
        long long v187 = a2;
        unint64_t v188 = Logger.logObject.getter();
        os_log_type_t v189 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v188, v189))
        {
          unsigned int v190 = (_DWORD *)swift_slowAlloc();
          v272 = a2;
          uint64_t v191 = v190;
          *unsigned int v190 = 67109376;
          uint64_t v192 = v281;
          uint64_t v193 = v282;
          sub_10026BB6C(&v280, v281);
          LODWORD(v192) = (*(uint64_t (**)(uint64_t, uint64_t))(v193 + 16))(v192, v193) & 1;
          sub_10024D338((uint64_t)&v280);
          LODWORD(v277[0]) = v192;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *((_WORD *)v191 + 4) = 1024;
          uint64_t v194 = (uint64_t)&v187[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
          swift_beginAccess();
          uint64_t v195 = v258;
          sub_10024A330(v194, v258, &qword_100974EA0);
          uint64_t v196 = v276;
          LODWORD(v193) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v273 + 48))(v195, 1, v276) != 1;
          sub_10000A7E8(v195, &qword_100974EA0);
          LODWORD(v280) = v193;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          _os_log_impl((void *)&_mh_execute_header, v188, v189, "Request arming UI as requested by Mac (%{BOOL}d) or ongoing unlock session during registration (%{BOOL}d)", (uint8_t *)v191, 0xEu);
          a2 = v272;
          uint64_t v81 = v273;
          swift_slowDealloc();
        }
        else
        {
          sub_10024D338((uint64_t)&v280);

          uint64_t v196 = v276;
        }
        sub_1006F76CC();
        uint64_t v197 = (uint64_t)v262;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56))(v262, 1, 1, v196);
        uint64_t v198 = (uint64_t)&v187[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
        swift_beginAccess();
        sub_10026B410(v197, v198, &qword_100974EA0);
        swift_endAccess();
        goto LABEL_96;
      }
      uint64_t v185 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
      swift_beginAccess();
      uint64_t v186 = v260;
      sub_10024A330(v185, v260, &qword_100974EA0);
      LODWORD(v185) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v186, 1, v276);
      sub_10000A7E8(v186, &qword_100974EA0);
      sub_10024D338((uint64_t)&v288);
      if (v185 != 1) {
        goto LABEL_78;
      }
    }
    if (sub_1005097B4(*(void *)(v297[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type)))
    {
      v272 = a2;
      uint64_t v176 = a2;
      uint64_t v177 = Logger.logObject.getter();
      os_log_type_t v178 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v177, v178))
      {
        uint64_t v179 = swift_slowAlloc();
        v274 = (char *)swift_slowAlloc();
        *(void *)&long long v280 = v274;
        *(_DWORD *)uint64_t v179 = 67109378;
        uint64_t v180 = swift_unknownObjectWeakLoadStrong();

        swift_unknownObjectRelease();
        LODWORD(v277[0]) = v180 != 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        *(_WORD *)(v179 + 8) = 2080;
        uint64_t v181 = &v176[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
        swift_beginAccess();
        uint64_t v182 = v276;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v181, 1, v276))
        {
          uint64_t v183 = 7104878;
          unint64_t v184 = 0xE300000000000000;
        }
        else
        {
          v199 = v275;
          (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v275, v181, v182);
          uint64_t v200 = UUID.uuidString.getter();
          uint64_t v201 = v81;
          uint64_t v183 = v200;
          unint64_t v184 = v202;
          (*(void (**)(char *, uint64_t))(v201 + 8))(v199, v182);
        }
        v277[0] = sub_100254634(v183, v184, (uint64_t *)&v280);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v177, v178, "Calling back to delegate (exists: %{BOOL}d), for sessionID: %s", (uint8_t *)v179, 0x12u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v203 = v276;
      uint64_t v204 = swift_unknownObjectWeakLoadStrong();
      a2 = v272;
      if (v204)
      {
        uint64_t v205 = (void *)v204;
        uint64_t v206 = (uint64_t)&v176[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
        swift_beginAccess();
        uint64_t v207 = (uint64_t)v259;
        sub_10024A330(v206, (uint64_t)v259, &qword_100974EA0);
        uint64_t v208 = v273;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v273 + 48))(v207, 1, v203) != 1)
        {
          uint64_t v219 = v257;
          (*(void (**)(char *, uint64_t, uint64_t))(v208 + 32))(v257, v207, v203);
          uint64_t v220 = v203;
          Class v221 = UUID._bridgeToObjectiveC()().super.isa;
          id v222 = sub_10070E650(0xBu, 0, 0xE000000000000000);
          [v205 manager:v176 didFailAuthenticationFor:v221 error:v222];
          swift_unknownObjectRelease();

          (*(void (**)(char *, uint64_t))(v208 + 8))(v219, v220);
          uint64_t v223 = (uint64_t)v262;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v208 + 56))(v262, 1, 1, v220);
          swift_beginAccess();
          sub_10026B410(v223, v206, &qword_100974EA0);
          swift_endAccess();
          uint64_t v81 = v208;
          goto LABEL_96;
        }
        swift_unknownObjectRelease();
        sub_10000A7E8(v207, &qword_100974EA0);
      }
      unint64_t v209 = v176;
      v210 = Logger.logObject.getter();
      os_log_type_t v211 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v210, v211))
      {
        uint64_t v212 = swift_slowAlloc();
        v274 = (char *)swift_slowAlloc();
        v287 = v274;
        *(_DWORD *)uint64_t v212 = 67109378;
        uint64_t v213 = swift_unknownObjectWeakLoadStrong();

        swift_unknownObjectRelease();
        LODWORD(v280) = v213 != 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        *(_WORD *)(v212 + 8) = 2080;
        uint64_t v214 = &v209[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
        swift_beginAccess();
        uint64_t v215 = v273;
        uint64_t v216 = v276;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v273 + 48))(v214, 1, v276))
        {
          uint64_t v217 = 7104878;
          unint64_t v218 = 0xE300000000000000;
        }
        else
        {
          uint64_t v224 = v275;
          (*(void (**)(char *, char *, uint64_t))(v215 + 16))(v275, v214, v216);
          uint64_t v217 = UUID.uuidString.getter();
          unint64_t v218 = v225;
          (*(void (**)(char *, uint64_t))(v215 + 8))(v224, v216);
        }
        uint64_t v286 = sub_100254634(v217, v218, (uint64_t *)&v287);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v210, v211, "Could not call back to delegate (exists: %{BOOL}d), for sessionID: %s", (uint8_t *)v212, 0x12u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      a2 = v272;
      uint64_t v81 = v273;
    }
LABEL_96:
    uint64_t v227 = v295;
    uint64_t v226 = v296;
    sub_10026BB6C(v294, v295);
    if ((*(uint64_t (**)(uint64_t))(*(void *)(v226 + 8) + 40))(v227) != 8)
    {
      uint64_t v228 = swift_unknownObjectWeakLoadStrong();
      if (v228)
      {
        uint64_t v229 = (void *)v228;
        uint64_t v231 = v295;
        uint64_t v230 = v296;
        sub_10026BB6C(v294, v295);
        uint64_t v232 = v275;
        (*(void (**)(uint64_t))(*(void *)(v230 + 8) + 32))(v231);
        Class v233 = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v81 + 8))(v232, v276);
        [v229 manager:a2 didEnableAuthenticationFor:v233];

        swift_unknownObjectRelease();
      }
    }
    goto LABEL_99;
  }
  sub_1002AF688(&v280, (uint64_t)&v288);
  uint64_t v50 = (char *)*((void *)&v289 + 1);
  uint64_t v123 = v290;
  sub_10026BB6C(&v288, *((uint64_t *)&v289 + 1));
  uint64_t v124 = (*(uint64_t (**)(char *, uint64_t))(v123 + 8))(v50, v123);
  if (!v125)
  {
LABEL_112:
    __break(1u);
    goto LABEL_113;
  }
  sub_1006F9558(v124, v125);
  swift_bridgeObjectRelease();
  uint64_t v50 = (char *)*((void *)&v289 + 1);
  uint64_t v126 = v290;
  sub_10026BB6C(&v288, *((uint64_t *)&v289 + 1));
  uint64_t v127 = (*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v50, v126);
  if (!v128)
  {
LABEL_113:
    __break(1u);
    goto LABEL_114;
  }
  uint64_t v129 = v127;
  uint64_t v130 = v128;
  swift_beginAccess();
  char v131 = sub_1005803EC(&v280, v129, v130);
  uint64_t v133 = v132;
  uint64_t v134 = type metadata accessor for RegistrationState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 48))(v133, 1, v134)) {
    *(unsigned char *)(v133 + *(int *)(v134 + 20)) = 0;
  }
  ((void (*)(long long *, void))v131)(&v280, 0);
  swift_endAccess();
  Swift::String v135 = v266;
  swift_bridgeObjectRelease();
  Swift::String v136 = v265;
  uint64_t v137 = (uint64_t)v272;
  (*((void (**)(char *, uint64_t, char *))v135 + 2))(v265, v267, v272);
  sub_100278C8C((uint64_t)&v288, (uint64_t)&v280);
  sub_100278C8C((uint64_t)&v288, (uint64_t)v277);
  Swift::String v138 = a2;
  uint64_t v50 = a2;
  Swift::String v139 = Logger.logObject.getter();
  int v140 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v139, (os_log_type_t)v140))
  {

    sub_10024D338((uint64_t)&v280);
    sub_10024D338((uint64_t)v277);

    (*((void (**)(char *, uint64_t))v135 + 1))(v136, v137);
    uint64_t v83 = v270;
LABEL_65:
    uint64_t v82 = v271;
    sub_10024D338((uint64_t)&v288);
    a2 = v138;
    goto LABEL_66;
  }
  LODWORD(v274) = v140;
  uint64_t v141 = swift_slowAlloc();
  v269 = (char *)swift_slowAlloc();
  v283[0] = (uint64_t)v269;
  *(_DWORD *)uint64_t v141 = 136315394;
  uint64_t v142 = v281;
  uint64_t v143 = v282;
  sub_10026BB6C(&v280, v281);
  uint64_t v144 = (*(uint64_t (**)(uint64_t, uint64_t))(v143 + 8))(v142, v143);
  if (v145)
  {
    uint64_t v146 = v263;
    sub_1006D4404(v144, v145, v263);
    uint64_t v147 = v146;
    swift_bridgeObjectRelease();
    uint64_t v83 = v270;
    uint64_t v148 = v271;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v271 + 48))(v147, 1, v270) == 1)
    {
      sub_10000A7E8(v147, (uint64_t *)&unk_100975040);
      unint64_t v149 = 0xE90000000000003ELL;
      uint64_t v150 = 0x676E697373696D3CLL;
    }
    else
    {
      uint64_t v156 = Date.description.getter();
      uint64_t v157 = v147;
      uint64_t v150 = v156;
      unint64_t v149 = v158;
      (*(void (**)(uint64_t, uint64_t))(v148 + 8))(v157, v83);
    }
    uint64_t v284 = sub_100254634(v150, v149, v283);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)&v280);
    *(_WORD *)(v141 + 12) = 2080;
    uint64_t v159 = v278;
    uint64_t v160 = v279;
    sub_10026BB6C(v277, v278);
    uint64_t v161 = (*(uint64_t (**)(uint64_t, uint64_t))(v160 + 8))(v159, v160);
    if (v162)
    {
      uint64_t v163 = v161;
      unint64_t v164 = v162;
    }
    else
    {
      uint64_t v163 = 0xD000000000000015;
      uint64_t v284 = 0;
      unint64_t v285 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v164 = 0x80000001007B7770;
    }
    uint64_t v284 = sub_100254634(v163, v164, v283);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)v277);
    _os_log_impl((void *)&_mh_execute_header, v139, (os_log_type_t)v274, "Recording last registration date as %s for device: %s", (uint8_t *)v141, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*((void (**)(char *, uint64_t))v266 + 1))(v265, v137);
    uint64_t v81 = v273;
    goto LABEL_65;
  }
LABEL_114:

  uint64_t result = sub_10024D338((uint64_t)v277);
  __break(1u);
  return result;
}

uint64_t sub_1004E5C4C(void *a1, char *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_10000A844(&qword_100974EA0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v256 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v256 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v258 = (uint64_t)&v256 - v12;
  __chkstk_darwin(v11);
  uint64_t v260 = (uint64_t)&v256 - v13;
  uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  v264 = (char *)&v256 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v263 = (uint64_t)&v256 - v17;
  v272 = (char *)type metadata accessor for Logger();
  v266 = (char *)*((void *)v272 - 1);
  __chkstk_darwin(v272);
  v265 = (char *)&v256 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v270 = v19;
  uint64_t v271 = v20;
  __chkstk_darwin(v19);
  v269 = (char *)&v256 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v276 = type metadata accessor for UUID();
  uint64_t v273 = *(void *)(v276 - 8);
  uint64_t v22 = __chkstk_darwin(v276);
  uint64_t v24 = (char *)&v256 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22);
  v274 = (char *)&v256 - v26;
  __chkstk_darwin(v25);
  v275 = (char *)&v256 - v27;
  uint64_t v28 = type metadata accessor for DispatchPredicate();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (uint64_t *)((char *)&v256 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v297[3] = type metadata accessor for SDAuthenticationKeySession();
  v297[4] = &off_1008DE398;
  v297[0] = a1;
  uint64_t v32 = *(void **)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *uint64_t v31 = v32;
  (*(void (**)(void *, void, uint64_t))(v29 + 104))(v31, enum case for DispatchPredicate.onQueue(_:), v28);
  id v33 = a1;
  id v34 = v32;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v29 + 8))(v31, v28);
  if (a1)
  {
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v35 = sub_10000B47C((uint64_t)v272, (uint64_t)qword_10097F520);
  sub_100278C8C((uint64_t)v297, (uint64_t)v294);
  uint64_t v267 = v35;
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.default.getter();
  BOOL v38 = os_log_type_enabled(v36, v37);
  v262 = v10;
  v259 = v7;
  v257 = v24;
  if (v38)
  {
    int v39 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v288 = swift_slowAlloc();
    *(_DWORD *)int v39 = 136315138;
    sub_100278C8C((uint64_t)v294, (uint64_t)v291);
    sub_10000A844((uint64_t *)&unk_10096B440);
    uint64_t v40 = String.init<A>(describing:)();
    v291[0] = sub_100254634(v40, v41, (uint64_t *)&v288);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)v294);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Session did complete: %s", v39, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10024D338((uint64_t)v294);
  }

  uint64_t v42 = v297[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
  swift_beginAccess();
  sub_10024A330(v42, (uint64_t)v294, &qword_10097BB50);
  uint64_t v43 = v295;
  if (v295)
  {
    uint64_t v44 = v296;
    sub_10026BB6C(v294, v295);
    uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v43, v44);
    unint64_t v47 = v46;
    sub_10024D338((uint64_t)v294);
    if (v47)
    {
      if (*(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationManager])
      {
        swift_retain();
        sub_100333064(v45, v47);
        swift_release();
      }
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_10000A7E8((uint64_t)v294, &qword_10097BB50);
  }
  sub_100278C8C((uint64_t)v297, (uint64_t)v291);
  sub_10000A844((uint64_t *)&unk_10096B440);
  sub_10000A844((uint64_t *)&unk_100972440);
  if (swift_dynamicCast())
  {
    uint64_t v48 = sub_1002AF688(&v288, (uint64_t)v294);
    __chkstk_darwin(v48);
    *(&v256 - 2) = (uint64_t)v294;
    uint64_t v49 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions];
    swift_beginAccess();
    uint64_t v50 = 0;
    uint64_t v51 = sub_100452294((uint64_t (*)(uint64_t))sub_1004ED0B0, (uint64_t)(&v256 - 4));
    uint64_t v52 = *(void *)(*(void *)v49 + 16);
    if (v52 >= v51)
    {
      uint64_t v268 = 0;
      sub_1005A5820(v51, v52);
      swift_endAccess();
      uint64_t v53 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions];
      swift_beginAccess();
      uint64_t v54 = *(void *)v53;
      uint64_t v55 = *(void *)(*(void *)v53 + 16);
      if (!v55)
      {
LABEL_32:
        uint64_t v95 = (uint64_t)v269;
        Date.init()();
        sub_1006D5DAC(v95);
        (*(void (**)(uint64_t, uint64_t))(v271 + 8))(v95, v270);
        if (*(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_nearbyActionAdvertiser])
        {
          swift_retain();
          sub_100328244();
          swift_release();
        }
        sub_1006D6720(0);
        uint64_t v97 = v295;
        uint64_t v96 = v296;
        sub_10026BB6C(v294, v295);
        (*(void (**)(uint64_t))(*(void *)(v96 + 8) + 88))(v97);
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        uint64_t v99 = v273;
        if (Strong)
        {
          unint64_t v100 = (void *)Strong;
          uint64_t v102 = v295;
          uint64_t v101 = v296;
          sub_10026BB6C(v294, v295);
          uint64_t v103 = v275;
          (*(void (**)(uint64_t))(*(void *)(v101 + 8) + 32))(v102);
          Class isa = UUID._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v99 + 8))(v103, v276);
          [v100 manager:a2 didCompleteAuthenticationFor:isa];

          swift_unknownObjectRelease();
        }
LABEL_99:
        sub_10024D338((uint64_t)v294);
LABEL_100:
        uint64_t v234 = v297[0];
        uint64_t v235 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
        unint64_t v236 = *(void *)(v297[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type);
        Swift::UInt8 v237 = SFDeviceClassCodeGet();
        Swift::Int v238 = sub_1005095A0(v236);
        BOOL v239 = sub_10057C25C(8u, v238);
        swift_bridgeObjectRelease();
        if (v239)
        {
          if (!SFDeviceIsRealityDevice()) {
            return sub_10024D338((uint64_t)v297);
          }
        }
        else
        {
          Swift::Int v240 = sub_1005095A0(v236);
          BOOL v241 = sub_10057C25C(v237, v240);
          swift_bridgeObjectRelease();
          if (!v241) {
            return sub_10024D338((uint64_t)v297);
          }
        }
        uint64_t v242 = *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager];
        char v243 = sub_100508B74(*(void *)(v234 + v235));
        uint64_t v244 = v234 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
        swift_beginAccess();
        sub_10024A330(v244, (uint64_t)v294, &qword_10097BB50);
        uint64_t v245 = sub_1005EA4B4(v243, (uint64_t)v294);
        uint64_t v247 = v246;
        uint64_t v248 = swift_getObjectType();
        uint64_t v249 = (*(uint64_t (**)(uint64_t, uint64_t))(v247 + 56))(v248, v247);
        uint64_t v250 = __chkstk_darwin(v249);
        *(&v256 - 4) = v245;
        *(&v256 - 3) = v247;
        *(&v256 - 2) = (uint64_t)v294;
        *(&v256 - 1) = v242;
        __chkstk_darwin(v250);
        *(&v256 - 2) = (uint64_t)sub_10045AFA8;
        *(&v256 - 1) = v251;
        v253 = v252 + 4;
        os_unfair_lock_lock(v252 + 4);
        sub_10030F73C(v254);
        os_unfair_lock_unlock(v253);
        swift_unknownObjectRelease();
        sub_10000A7E8((uint64_t)v294, &qword_10097BB50);
        return sub_10024D338((uint64_t)v297);
      }
      v266 = v53;
      v272 = a2;
      uint64_t v56 = (void (**)(char *, uint64_t))(v273 + 8);
      swift_bridgeObjectRetain();
      uint64_t v57 = 0;
      unint64_t v58 = 0;
      uint64_t v59 = v275;
      while (1)
      {
        uint64_t v61 = *(void *)(v54 + v57 + 56);
        uint64_t v60 = *(void *)(v54 + v57 + 64);
        sub_10026BB6C((void *)(v54 + v57 + 32), v61);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v60 + 8) + 8) + 32))(v61);
        uint64_t v63 = v295;
        uint64_t v62 = v296;
        sub_10026BB6C(v294, v295);
        int v64 = v274;
        (*(void (**)(uint64_t))(*(void *)(v62 + 8) + 32))(v63);
        LOBYTE(v62) = static UUID.== infix(_:_:)();
        uint64_t v65 = *v56;
        uint64_t v66 = v64;
        uint64_t v67 = v276;
        (*v56)(v66, v276);
        v65(v59, v67);
        if (v62) {
          break;
        }
        ++v58;
        v57 += 40;
        if (v55 == v58)
        {
          swift_bridgeObjectRelease();
          a2 = v272;
          goto LABEL_32;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v50 = v266;
      if (v58 < *(void *)(*(void *)v266 + 16))
      {
        sub_100278C8C(*(void *)v266 + v57 + 32, (uint64_t)v291);
        uint64_t v90 = v292;
        uint64_t v89 = v293;
        sub_10026BB6C(v291, v292);
        uint64_t v91 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v89 + 8) + 8) + 40))(v90);
        a2 = v272;
        if (v91 == 1)
        {
          uint64_t v92 = Logger.logObject.getter();
          os_log_type_t v93 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v92, v93))
          {
            char v94 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)char v94 = 0;
            _os_log_impl((void *)&_mh_execute_header, v92, v93, "Posting authenticated notification", v94, 2u);
            swift_slowDealloc();
          }

          sub_1006F842C();
        }
        swift_beginAccess();
        sub_1002A6D00(v58, (uint64_t)&v288);
        swift_endAccess();
        sub_10024D338((uint64_t)&v288);
        sub_10024D338((uint64_t)v291);
        goto LABEL_32;
      }
      goto LABEL_111;
    }
    __break(1u);
    goto LABEL_109;
  }
  uint64_t v290 = 0;
  long long v288 = 0u;
  long long v289 = 0u;
  sub_10000A7E8((uint64_t)&v288, &qword_100976A10);
  sub_100278C8C((uint64_t)v297, (uint64_t)v291);
  sub_10000A844(&qword_10096B430);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v290 = 0;
    long long v288 = 0u;
    long long v289 = 0u;
    sub_10000A7E8((uint64_t)&v288, &qword_100976A18);
    uint64_t v268 = 0;
    goto LABEL_100;
  }
  uint64_t v68 = sub_1002AF688(&v288, (uint64_t)v294);
  __chkstk_darwin(v68);
  *(&v256 - 2) = (uint64_t)v294;
  int v69 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions];
  swift_beginAccess();
  uint64_t v50 = 0;
  uint64_t v70 = sub_100451F6C((uint64_t (*)(uint64_t))sub_1004ED0B0, (uint64_t)(&v256 - 4));
  uint64_t v71 = *(void *)(*(void *)v69 + 16);
  if (v71 < v70)
  {
LABEL_109:
    __break(1u);
    goto LABEL_110;
  }
  sub_1005A5880(v70, v71);
  uint64_t v72 = swift_endAccess();
  __chkstk_darwin(v72);
  *(&v256 - 2) = (uint64_t)v294;
  uint64_t v73 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions];
  swift_beginAccess();
  uint64_t v74 = sub_100451FAC((uint64_t (*)(uint64_t))sub_1004ED0B0, (uint64_t)(&v256 - 4));
  uint64_t v75 = *(void *)(*(void *)v73 + 16);
  if (v75 < v74)
  {
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
    goto LABEL_112;
  }
  uint64_t v268 = 0;
  sub_1005A5860(v74, v75);
  swift_endAccess();
  uint64_t v77 = v295;
  uint64_t v76 = v296;
  sub_10026BB6C(v294, v295);
  (*(void (**)(uint64_t))(*(void *)(v76 + 8) + 88))(v77);
  uint64_t v79 = v295;
  uint64_t v78 = v296;
  sub_10026BB6C(v294, v295);
  uint64_t v80 = (*(uint64_t (**)(uint64_t))(*(void *)(v78 + 8) + 40))(v79);
  uint64_t v81 = v273;
  uint64_t v83 = v270;
  uint64_t v82 = v271;
  if (v80 == 3)
  {
    sub_1006E5BC0();
    sub_1006E9424();
    uint64_t v84 = (uint64_t)v269;
    Date.init()();
    sub_1006D5DAC(v84);
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v84, v83);
    uint64_t v86 = v295;
    uint64_t v85 = v296;
    sub_10026BB6C(v294, v295);
    if ((*(uint64_t (**)(uint64_t))(*(void *)(v85 + 8) + 40))(v86) == 3)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v87 = String._bridgeToObjectiveC()();
      NSString v88 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      sub_1000D289C(1, v87, v88);

      uint64_t v82 = v271;
    }
    else
    {
      sub_100278C8C((uint64_t)v294, (uint64_t)v291);
      char v105 = Logger.logObject.getter();
      os_log_type_t v106 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v105, v106))
      {
        Swift::String v107 = a2;
        Swift::String v108 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v288 = swift_slowAlloc();
        *(_DWORD *)Swift::String v108 = 136315138;
        uint64_t v110 = v292;
        uint64_t v109 = v293;
        sub_10026BB6C(v291, v292);
        (*(void (**)(uint64_t))(*(void *)(v109 + 8) + 40))(v110);
        uint64_t v111 = sub_10050938C();
        *(void *)&long long v280 = sub_100254634(v111, v112, (uint64_t *)&v288);
        uint64_t v83 = v270;
        uint64_t v82 = v271;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10024D338((uint64_t)v291);
        _os_log_impl((void *)&_mh_execute_header, v105, v106, "Dynamic store not set for %s", v108, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        a2 = v107;
        swift_slowDealloc();
      }
      else
      {
        sub_10024D338((uint64_t)v291);
      }

      uint64_t v81 = v273;
    }
  }
  uint64_t v114 = v295;
  uint64_t v113 = v296;
  sub_10026BB6C(v294, v295);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v113 + 8) + 40))(v114) == 5) {
    sub_1006CD9D4();
  }
  uint64_t v116 = v295;
  uint64_t v115 = v296;
  sub_10026BB6C(v294, v295);
  uint64_t v117 = (*(uint64_t (**)(uint64_t))(*(void *)(v115 + 8) + 40))(v116);
  sub_100278C8C((uint64_t)v294, (uint64_t)v291);
  if (v117 == 8)
  {
    sub_10024D338((uint64_t)v291);
  }
  else
  {
    uint64_t v119 = v292;
    uint64_t v118 = v293;
    sub_10026BB6C(v291, v292);
    uint64_t v120 = (*(uint64_t (**)(uint64_t))(*(void *)(v118 + 8) + 40))(v119);
    sub_10024D338((uint64_t)v291);
    if (v120 != 5) {
      goto LABEL_68;
    }
  }
  uint64_t v122 = v295;
  uint64_t v121 = v296;
  sub_10026BB6C(v294, v295);
  (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)(v121 + 8) + 64))(&v280, v122);
  if (!v281)
  {
    sub_10000A7E8((uint64_t)&v280, &qword_10097BB50);
    sub_100278C8C((uint64_t)v297, (uint64_t)&v288);
    id v151 = Logger.logObject.getter();
    os_log_type_t v152 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v151, v152))
    {
      unsigned __int8 v153 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v280 = swift_slowAlloc();
      *(_DWORD *)unsigned __int8 v153 = 136315138;
      sub_10026BB6C(&v288, *((uint64_t *)&v289 + 1));
      sub_100361140((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v154 = dispatch thunk of CustomStringConvertible.description.getter();
      v277[0] = sub_100254634(v154, v155, (uint64_t *)&v280);
      uint64_t v83 = v270;
      uint64_t v82 = v271;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10024D338((uint64_t)&v288);
      _os_log_impl((void *)&_mh_execute_header, v151, v152, "No peer device for session: %s", v153, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10024D338((uint64_t)&v288);
    }

LABEL_66:
    uint64_t v166 = v295;
    uint64_t v165 = v296;
    sub_10026BB6C(v294, v295);
    if ((*(uint64_t (**)(uint64_t))(*(void *)(v165 + 8) + 40))(v166) == 5)
    {
      uint64_t v167 = v264;
      Date.init()();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v167, 0, 1, v83);
      uint64_t v168 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager];
      swift_beginAccess();
      uint64_t v169 = *(void *)(v168 + 24);
      uint64_t v170 = *(void *)(v168 + 32);
      sub_1002AF758(v168, v169);
      (*(void (**)(char *, uint64_t, uint64_t))(v170 + 16))(v167, v169, v170);
      swift_endAccess();
    }
LABEL_68:
    uint64_t v172 = v295;
    uint64_t v171 = v296;
    sub_10026BB6C(v294, v295);
    if ((*(uint64_t (**)(uint64_t))(*(void *)(v171 + 8) + 40))(v172) != 8) {
      goto LABEL_96;
    }
    char v173 = sub_1005097B4(*(void *)(v297[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type));
    sub_100278C8C((uint64_t)v294, (uint64_t)&v288);
    if (v173)
    {
      sub_10024D338((uint64_t)&v288);
    }
    else
    {
      uint64_t v174 = *((void *)&v289 + 1);
      uint64_t v175 = v290;
      sub_10026BB6C(&v288, *((uint64_t *)&v289 + 1));
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v175 + 16))(v174, v175))
      {
        sub_10024D338((uint64_t)&v288);
LABEL_78:
        sub_100278C8C((uint64_t)v294, (uint64_t)&v280);
        long long v187 = a2;
        unint64_t v188 = Logger.logObject.getter();
        os_log_type_t v189 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v188, v189))
        {
          unsigned int v190 = (_DWORD *)swift_slowAlloc();
          v272 = a2;
          uint64_t v191 = v190;
          *unsigned int v190 = 67109376;
          uint64_t v192 = v281;
          uint64_t v193 = v282;
          sub_10026BB6C(&v280, v281);
          LODWORD(v192) = (*(uint64_t (**)(uint64_t, uint64_t))(v193 + 16))(v192, v193) & 1;
          sub_10024D338((uint64_t)&v280);
          LODWORD(v277[0]) = v192;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *((_WORD *)v191 + 4) = 1024;
          uint64_t v194 = (uint64_t)&v187[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
          swift_beginAccess();
          uint64_t v195 = v258;
          sub_10024A330(v194, v258, &qword_100974EA0);
          uint64_t v196 = v276;
          LODWORD(v193) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v273 + 48))(v195, 1, v276) != 1;
          sub_10000A7E8(v195, &qword_100974EA0);
          LODWORD(v280) = v193;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          _os_log_impl((void *)&_mh_execute_header, v188, v189, "Request arming UI as requested by Mac (%{BOOL}d) or ongoing unlock session during registration (%{BOOL}d)", (uint8_t *)v191, 0xEu);
          a2 = v272;
          uint64_t v81 = v273;
          swift_slowDealloc();
        }
        else
        {
          sub_10024D338((uint64_t)&v280);

          uint64_t v196 = v276;
        }
        sub_1006F76CC();
        uint64_t v197 = (uint64_t)v262;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56))(v262, 1, 1, v196);
        uint64_t v198 = (uint64_t)&v187[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
        swift_beginAccess();
        sub_10026B410(v197, v198, &qword_100974EA0);
        swift_endAccess();
        goto LABEL_96;
      }
      uint64_t v185 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
      swift_beginAccess();
      uint64_t v186 = v260;
      sub_10024A330(v185, v260, &qword_100974EA0);
      LODWORD(v185) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v186, 1, v276);
      sub_10000A7E8(v186, &qword_100974EA0);
      sub_10024D338((uint64_t)&v288);
      if (v185 != 1) {
        goto LABEL_78;
      }
    }
    if (sub_1005097B4(*(void *)(v297[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type)))
    {
      v272 = a2;
      uint64_t v176 = a2;
      uint64_t v177 = Logger.logObject.getter();
      os_log_type_t v178 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v177, v178))
      {
        uint64_t v179 = swift_slowAlloc();
        v274 = (char *)swift_slowAlloc();
        *(void *)&long long v280 = v274;
        *(_DWORD *)uint64_t v179 = 67109378;
        uint64_t v180 = swift_unknownObjectWeakLoadStrong();

        swift_unknownObjectRelease();
        LODWORD(v277[0]) = v180 != 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        *(_WORD *)(v179 + 8) = 2080;
        uint64_t v181 = &v176[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
        swift_beginAccess();
        uint64_t v182 = v276;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v181, 1, v276))
        {
          uint64_t v183 = 7104878;
          unint64_t v184 = 0xE300000000000000;
        }
        else
        {
          v199 = v275;
          (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v275, v181, v182);
          uint64_t v200 = UUID.uuidString.getter();
          uint64_t v201 = v81;
          uint64_t v183 = v200;
          unint64_t v184 = v202;
          (*(void (**)(char *, uint64_t))(v201 + 8))(v199, v182);
        }
        v277[0] = sub_100254634(v183, v184, (uint64_t *)&v280);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v177, v178, "Calling back to delegate (exists: %{BOOL}d), for sessionID: %s", (uint8_t *)v179, 0x12u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v203 = v276;
      uint64_t v204 = swift_unknownObjectWeakLoadStrong();
      a2 = v272;
      if (v204)
      {
        uint64_t v205 = (void *)v204;
        uint64_t v206 = (uint64_t)&v176[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
        swift_beginAccess();
        uint64_t v207 = (uint64_t)v259;
        sub_10024A330(v206, (uint64_t)v259, &qword_100974EA0);
        uint64_t v208 = v273;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v273 + 48))(v207, 1, v203) != 1)
        {
          uint64_t v219 = v257;
          (*(void (**)(char *, uint64_t, uint64_t))(v208 + 32))(v257, v207, v203);
          uint64_t v220 = v203;
          Class v221 = UUID._bridgeToObjectiveC()().super.isa;
          id v222 = sub_10070E650(0xBu, 0, 0xE000000000000000);
          [v205 manager:v176 didFailAuthenticationFor:v221 error:v222];
          swift_unknownObjectRelease();

          (*(void (**)(char *, uint64_t))(v208 + 8))(v219, v220);
          uint64_t v223 = (uint64_t)v262;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v208 + 56))(v262, 1, 1, v220);
          swift_beginAccess();
          sub_10026B410(v223, v206, &qword_100974EA0);
          swift_endAccess();
          uint64_t v81 = v208;
          goto LABEL_96;
        }
        swift_unknownObjectRelease();
        sub_10000A7E8(v207, &qword_100974EA0);
      }
      unint64_t v209 = v176;
      v210 = Logger.logObject.getter();
      os_log_type_t v211 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v210, v211))
      {
        uint64_t v212 = swift_slowAlloc();
        v274 = (char *)swift_slowAlloc();
        v287 = v274;
        *(_DWORD *)uint64_t v212 = 67109378;
        uint64_t v213 = swift_unknownObjectWeakLoadStrong();

        swift_unknownObjectRelease();
        LODWORD(v280) = v213 != 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        *(_WORD *)(v212 + 8) = 2080;
        uint64_t v214 = &v209[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
        swift_beginAccess();
        uint64_t v215 = v273;
        uint64_t v216 = v276;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v273 + 48))(v214, 1, v276))
        {
          uint64_t v217 = 7104878;
          unint64_t v218 = 0xE300000000000000;
        }
        else
        {
          uint64_t v224 = v275;
          (*(void (**)(char *, char *, uint64_t))(v215 + 16))(v275, v214, v216);
          uint64_t v217 = UUID.uuidString.getter();
          unint64_t v218 = v225;
          (*(void (**)(char *, uint64_t))(v215 + 8))(v224, v216);
        }
        uint64_t v286 = sub_100254634(v217, v218, (uint64_t *)&v287);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v210, v211, "Could not call back to delegate (exists: %{BOOL}d), for sessionID: %s", (uint8_t *)v212, 0x12u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      a2 = v272;
      uint64_t v81 = v273;
    }
LABEL_96:
    uint64_t v227 = v295;
    uint64_t v226 = v296;
    sub_10026BB6C(v294, v295);
    if ((*(uint64_t (**)(uint64_t))(*(void *)(v226 + 8) + 40))(v227) != 8)
    {
      uint64_t v228 = swift_unknownObjectWeakLoadStrong();
      if (v228)
      {
        uint64_t v229 = (void *)v228;
        uint64_t v231 = v295;
        uint64_t v230 = v296;
        sub_10026BB6C(v294, v295);
        uint64_t v232 = v275;
        (*(void (**)(uint64_t))(*(void *)(v230 + 8) + 32))(v231);
        Class v233 = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v81 + 8))(v232, v276);
        [v229 manager:a2 didEnableAuthenticationFor:v233];

        swift_unknownObjectRelease();
      }
    }
    goto LABEL_99;
  }
  sub_1002AF688(&v280, (uint64_t)&v288);
  uint64_t v50 = (char *)*((void *)&v289 + 1);
  uint64_t v123 = v290;
  sub_10026BB6C(&v288, *((uint64_t *)&v289 + 1));
  uint64_t v124 = (*(uint64_t (**)(char *, uint64_t))(v123 + 8))(v50, v123);
  if (!v125)
  {
LABEL_112:
    __break(1u);
    goto LABEL_113;
  }
  sub_1006F9558(v124, v125);
  swift_bridgeObjectRelease();
  uint64_t v50 = (char *)*((void *)&v289 + 1);
  uint64_t v126 = v290;
  sub_10026BB6C(&v288, *((uint64_t *)&v289 + 1));
  uint64_t v127 = (*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v50, v126);
  if (!v128)
  {
LABEL_113:
    __break(1u);
    goto LABEL_114;
  }
  uint64_t v129 = v127;
  uint64_t v130 = v128;
  swift_beginAccess();
  char v131 = sub_1005803EC(&v280, v129, v130);
  uint64_t v133 = v132;
  uint64_t v134 = type metadata accessor for RegistrationState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 48))(v133, 1, v134)) {
    *(unsigned char *)(v133 + *(int *)(v134 + 20)) = 0;
  }
  ((void (*)(long long *, void))v131)(&v280, 0);
  swift_endAccess();
  Swift::String v135 = v266;
  swift_bridgeObjectRelease();
  Swift::String v136 = v265;
  uint64_t v137 = (uint64_t)v272;
  (*((void (**)(char *, uint64_t, char *))v135 + 2))(v265, v267, v272);
  sub_100278C8C((uint64_t)&v288, (uint64_t)&v280);
  sub_100278C8C((uint64_t)&v288, (uint64_t)v277);
  Swift::String v138 = a2;
  uint64_t v50 = a2;
  Swift::String v139 = Logger.logObject.getter();
  int v140 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v139, (os_log_type_t)v140))
  {

    sub_10024D338((uint64_t)&v280);
    sub_10024D338((uint64_t)v277);

    (*((void (**)(char *, uint64_t))v135 + 1))(v136, v137);
    uint64_t v83 = v270;
LABEL_65:
    uint64_t v82 = v271;
    sub_10024D338((uint64_t)&v288);
    a2 = v138;
    goto LABEL_66;
  }
  LODWORD(v274) = v140;
  uint64_t v141 = swift_slowAlloc();
  v269 = (char *)swift_slowAlloc();
  v283[0] = (uint64_t)v269;
  *(_DWORD *)uint64_t v141 = 136315394;
  uint64_t v142 = v281;
  uint64_t v143 = v282;
  sub_10026BB6C(&v280, v281);
  uint64_t v144 = (*(uint64_t (**)(uint64_t, uint64_t))(v143 + 8))(v142, v143);
  if (v145)
  {
    uint64_t v146 = v263;
    sub_1006D4404(v144, v145, v263);
    uint64_t v147 = v146;
    swift_bridgeObjectRelease();
    uint64_t v83 = v270;
    uint64_t v148 = v271;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v271 + 48))(v147, 1, v270) == 1)
    {
      sub_10000A7E8(v147, (uint64_t *)&unk_100975040);
      unint64_t v149 = 0xE90000000000003ELL;
      uint64_t v150 = 0x676E697373696D3CLL;
    }
    else
    {
      uint64_t v156 = Date.description.getter();
      uint64_t v157 = v147;
      uint64_t v150 = v156;
      unint64_t v149 = v158;
      (*(void (**)(uint64_t, uint64_t))(v148 + 8))(v157, v83);
    }
    uint64_t v284 = sub_100254634(v150, v149, v283);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)&v280);
    *(_WORD *)(v141 + 12) = 2080;
    uint64_t v159 = v278;
    uint64_t v160 = v279;
    sub_10026BB6C(v277, v278);
    uint64_t v161 = (*(uint64_t (**)(uint64_t, uint64_t))(v160 + 8))(v159, v160);
    if (v162)
    {
      uint64_t v163 = v161;
      unint64_t v164 = v162;
    }
    else
    {
      uint64_t v163 = 0xD000000000000015;
      uint64_t v284 = 0;
      unint64_t v285 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v164 = 0x80000001007B7770;
    }
    uint64_t v284 = sub_100254634(v163, v164, v283);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)v277);
    _os_log_impl((void *)&_mh_execute_header, v139, (os_log_type_t)v274, "Recording last registration date as %s for device: %s", (uint8_t *)v141, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*((void (**)(char *, uint64_t))v266 + 1))(v265, v137);
    uint64_t v81 = v273;
    goto LABEL_65;
  }
LABEL_114:

  uint64_t result = sub_10024D338((uint64_t)v277);
  __break(1u);
  return result;
}

uint64_t sub_1004E7F9C(void *a1, char *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_10000A844(&qword_100974EA0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v256 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v256 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v258 = (uint64_t)&v256 - v12;
  __chkstk_darwin(v11);
  uint64_t v260 = (uint64_t)&v256 - v13;
  uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  v264 = (char *)&v256 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v263 = (uint64_t)&v256 - v17;
  v272 = (char *)type metadata accessor for Logger();
  v266 = (char *)*((void *)v272 - 1);
  __chkstk_darwin(v272);
  v265 = (char *)&v256 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v270 = v19;
  uint64_t v271 = v20;
  __chkstk_darwin(v19);
  v269 = (char *)&v256 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v276 = type metadata accessor for UUID();
  uint64_t v273 = *(void *)(v276 - 8);
  uint64_t v22 = __chkstk_darwin(v276);
  uint64_t v24 = (char *)&v256 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22);
  v274 = (char *)&v256 - v26;
  __chkstk_darwin(v25);
  v275 = (char *)&v256 - v27;
  uint64_t v28 = type metadata accessor for DispatchPredicate();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (uint64_t *)((char *)&v256 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v297[3] = type metadata accessor for SDAuthenticationLockSession(0);
  v297[4] = &off_1008DE398;
  v297[0] = a1;
  uint64_t v32 = *(void **)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *uint64_t v31 = v32;
  (*(void (**)(void *, void, uint64_t))(v29 + 104))(v31, enum case for DispatchPredicate.onQueue(_:), v28);
  id v33 = a1;
  id v34 = v32;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v29 + 8))(v31, v28);
  if (a1)
  {
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v35 = sub_10000B47C((uint64_t)v272, (uint64_t)qword_10097F520);
  sub_100278C8C((uint64_t)v297, (uint64_t)v294);
  uint64_t v267 = v35;
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.default.getter();
  BOOL v38 = os_log_type_enabled(v36, v37);
  v262 = v10;
  v259 = v7;
  v257 = v24;
  if (v38)
  {
    int v39 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v288 = swift_slowAlloc();
    *(_DWORD *)int v39 = 136315138;
    sub_100278C8C((uint64_t)v294, (uint64_t)v291);
    sub_10000A844((uint64_t *)&unk_10096B440);
    uint64_t v40 = String.init<A>(describing:)();
    v291[0] = sub_100254634(v40, v41, (uint64_t *)&v288);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)v294);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Session did complete: %s", v39, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10024D338((uint64_t)v294);
  }

  uint64_t v42 = v297[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
  swift_beginAccess();
  sub_10024A330(v42, (uint64_t)v294, &qword_10097BB50);
  uint64_t v43 = v295;
  if (v295)
  {
    uint64_t v44 = v296;
    sub_10026BB6C(v294, v295);
    uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v43, v44);
    unint64_t v47 = v46;
    sub_10024D338((uint64_t)v294);
    if (v47)
    {
      if (*(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationManager])
      {
        swift_retain();
        sub_100333064(v45, v47);
        swift_release();
      }
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_10000A7E8((uint64_t)v294, &qword_10097BB50);
  }
  sub_100278C8C((uint64_t)v297, (uint64_t)v291);
  sub_10000A844((uint64_t *)&unk_10096B440);
  sub_10000A844((uint64_t *)&unk_100972440);
  if (swift_dynamicCast())
  {
    uint64_t v48 = sub_1002AF688(&v288, (uint64_t)v294);
    __chkstk_darwin(v48);
    *(&v256 - 2) = (uint64_t)v294;
    uint64_t v49 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions];
    swift_beginAccess();
    uint64_t v50 = 0;
    uint64_t v51 = sub_100452294((uint64_t (*)(uint64_t))sub_1004ECB40, (uint64_t)(&v256 - 4));
    uint64_t v52 = *(void *)(*(void *)v49 + 16);
    if (v52 >= v51)
    {
      uint64_t v268 = 0;
      sub_1005A5820(v51, v52);
      swift_endAccess();
      uint64_t v53 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions];
      swift_beginAccess();
      uint64_t v54 = *(void *)v53;
      uint64_t v55 = *(void *)(*(void *)v53 + 16);
      if (!v55)
      {
LABEL_32:
        uint64_t v95 = (uint64_t)v269;
        Date.init()();
        sub_1006D5DAC(v95);
        (*(void (**)(uint64_t, uint64_t))(v271 + 8))(v95, v270);
        if (*(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_nearbyActionAdvertiser])
        {
          swift_retain();
          sub_100328244();
          swift_release();
        }
        sub_1006D6720(0);
        uint64_t v97 = v295;
        uint64_t v96 = v296;
        sub_10026BB6C(v294, v295);
        (*(void (**)(uint64_t))(*(void *)(v96 + 8) + 88))(v97);
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        uint64_t v99 = v273;
        if (Strong)
        {
          unint64_t v100 = (void *)Strong;
          uint64_t v102 = v295;
          uint64_t v101 = v296;
          sub_10026BB6C(v294, v295);
          uint64_t v103 = v275;
          (*(void (**)(uint64_t))(*(void *)(v101 + 8) + 32))(v102);
          Class isa = UUID._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v99 + 8))(v103, v276);
          [v100 manager:a2 didCompleteAuthenticationFor:isa];

          swift_unknownObjectRelease();
        }
LABEL_99:
        sub_10024D338((uint64_t)v294);
LABEL_100:
        uint64_t v234 = v297[0];
        uint64_t v235 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
        unint64_t v236 = *(void *)(v297[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type);
        Swift::UInt8 v237 = SFDeviceClassCodeGet();
        Swift::Int v238 = sub_1005095A0(v236);
        BOOL v239 = sub_10057C25C(8u, v238);
        swift_bridgeObjectRelease();
        if (v239)
        {
          if (!SFDeviceIsRealityDevice()) {
            return sub_10024D338((uint64_t)v297);
          }
        }
        else
        {
          Swift::Int v240 = sub_1005095A0(v236);
          BOOL v241 = sub_10057C25C(v237, v240);
          swift_bridgeObjectRelease();
          if (!v241) {
            return sub_10024D338((uint64_t)v297);
          }
        }
        uint64_t v242 = *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager];
        char v243 = sub_100508B74(*(void *)(v234 + v235));
        uint64_t v244 = v234 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
        swift_beginAccess();
        sub_10024A330(v244, (uint64_t)v294, &qword_10097BB50);
        uint64_t v245 = sub_1005EA4B4(v243, (uint64_t)v294);
        uint64_t v247 = v246;
        uint64_t v248 = swift_getObjectType();
        uint64_t v249 = (*(uint64_t (**)(uint64_t, uint64_t))(v247 + 56))(v248, v247);
        uint64_t v250 = __chkstk_darwin(v249);
        *(&v256 - 4) = v245;
        *(&v256 - 3) = v247;
        *(&v256 - 2) = (uint64_t)v294;
        *(&v256 - 1) = v242;
        __chkstk_darwin(v250);
        *(&v256 - 2) = (uint64_t)sub_10045A89C;
        *(&v256 - 1) = v251;
        v253 = v252 + 4;
        os_unfair_lock_lock(v252 + 4);
        sub_1002CEA38(v254);
        os_unfair_lock_unlock(v253);
        swift_unknownObjectRelease();
        sub_10000A7E8((uint64_t)v294, &qword_10097BB50);
        return sub_10024D338((uint64_t)v297);
      }
      v266 = v53;
      v272 = a2;
      uint64_t v56 = (void (**)(char *, uint64_t))(v273 + 8);
      swift_bridgeObjectRetain();
      uint64_t v57 = 0;
      unint64_t v58 = 0;
      uint64_t v59 = v275;
      while (1)
      {
        uint64_t v61 = *(void *)(v54 + v57 + 56);
        uint64_t v60 = *(void *)(v54 + v57 + 64);
        sub_10026BB6C((void *)(v54 + v57 + 32), v61);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v60 + 8) + 8) + 32))(v61);
        uint64_t v63 = v295;
        uint64_t v62 = v296;
        sub_10026BB6C(v294, v295);
        int v64 = v274;
        (*(void (**)(uint64_t))(*(void *)(v62 + 8) + 32))(v63);
        LOBYTE(v62) = static UUID.== infix(_:_:)();
        uint64_t v65 = *v56;
        uint64_t v66 = v64;
        uint64_t v67 = v276;
        (*v56)(v66, v276);
        v65(v59, v67);
        if (v62) {
          break;
        }
        ++v58;
        v57 += 40;
        if (v55 == v58)
        {
          swift_bridgeObjectRelease();
          a2 = v272;
          goto LABEL_32;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v50 = v266;
      if (v58 < *(void *)(*(void *)v266 + 16))
      {
        sub_100278C8C(*(void *)v266 + v57 + 32, (uint64_t)v291);
        uint64_t v90 = v292;
        uint64_t v89 = v293;
        sub_10026BB6C(v291, v292);
        uint64_t v91 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v89 + 8) + 8) + 40))(v90);
        a2 = v272;
        if (v91 == 1)
        {
          uint64_t v92 = Logger.logObject.getter();
          os_log_type_t v93 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v92, v93))
          {
            char v94 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)char v94 = 0;
            _os_log_impl((void *)&_mh_execute_header, v92, v93, "Posting authenticated notification", v94, 2u);
            swift_slowDealloc();
          }

          sub_1006F842C();
        }
        swift_beginAccess();
        sub_1002A6D00(v58, (uint64_t)&v288);
        swift_endAccess();
        sub_10024D338((uint64_t)&v288);
        sub_10024D338((uint64_t)v291);
        goto LABEL_32;
      }
      goto LABEL_111;
    }
    __break(1u);
    goto LABEL_109;
  }
  uint64_t v290 = 0;
  long long v288 = 0u;
  long long v289 = 0u;
  sub_10000A7E8((uint64_t)&v288, &qword_100976A10);
  sub_100278C8C((uint64_t)v297, (uint64_t)v291);
  sub_10000A844(&qword_10096B430);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v290 = 0;
    long long v288 = 0u;
    long long v289 = 0u;
    sub_10000A7E8((uint64_t)&v288, &qword_100976A18);
    uint64_t v268 = 0;
    goto LABEL_100;
  }
  uint64_t v68 = sub_1002AF688(&v288, (uint64_t)v294);
  __chkstk_darwin(v68);
  *(&v256 - 2) = (uint64_t)v294;
  int v69 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions];
  swift_beginAccess();
  uint64_t v50 = 0;
  uint64_t v70 = sub_100451F6C((uint64_t (*)(uint64_t))sub_1004ECB40, (uint64_t)(&v256 - 4));
  uint64_t v71 = *(void *)(*(void *)v69 + 16);
  if (v71 < v70)
  {
LABEL_109:
    __break(1u);
    goto LABEL_110;
  }
  sub_1005A5880(v70, v71);
  uint64_t v72 = swift_endAccess();
  __chkstk_darwin(v72);
  *(&v256 - 2) = (uint64_t)v294;
  uint64_t v73 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions];
  swift_beginAccess();
  uint64_t v74 = sub_100451FAC((uint64_t (*)(uint64_t))sub_1004ECB40, (uint64_t)(&v256 - 4));
  uint64_t v75 = *(void *)(*(void *)v73 + 16);
  if (v75 < v74)
  {
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
    goto LABEL_112;
  }
  uint64_t v268 = 0;
  sub_1005A5860(v74, v75);
  swift_endAccess();
  uint64_t v77 = v295;
  uint64_t v76 = v296;
  sub_10026BB6C(v294, v295);
  (*(void (**)(uint64_t))(*(void *)(v76 + 8) + 88))(v77);
  uint64_t v79 = v295;
  uint64_t v78 = v296;
  sub_10026BB6C(v294, v295);
  uint64_t v80 = (*(uint64_t (**)(uint64_t))(*(void *)(v78 + 8) + 40))(v79);
  uint64_t v81 = v273;
  uint64_t v83 = v270;
  uint64_t v82 = v271;
  if (v80 == 3)
  {
    sub_1006E5BC0();
    sub_1006E9424();
    uint64_t v84 = (uint64_t)v269;
    Date.init()();
    sub_1006D5DAC(v84);
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v84, v83);
    uint64_t v86 = v295;
    uint64_t v85 = v296;
    sub_10026BB6C(v294, v295);
    if ((*(uint64_t (**)(uint64_t))(*(void *)(v85 + 8) + 40))(v86) == 3)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v87 = String._bridgeToObjectiveC()();
      NSString v88 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      sub_1000D289C(1, v87, v88);

      uint64_t v82 = v271;
    }
    else
    {
      sub_100278C8C((uint64_t)v294, (uint64_t)v291);
      char v105 = Logger.logObject.getter();
      os_log_type_t v106 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v105, v106))
      {
        Swift::String v107 = a2;
        Swift::String v108 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v288 = swift_slowAlloc();
        *(_DWORD *)Swift::String v108 = 136315138;
        uint64_t v110 = v292;
        uint64_t v109 = v293;
        sub_10026BB6C(v291, v292);
        (*(void (**)(uint64_t))(*(void *)(v109 + 8) + 40))(v110);
        uint64_t v111 = sub_10050938C();
        *(void *)&long long v280 = sub_100254634(v111, v112, (uint64_t *)&v288);
        uint64_t v83 = v270;
        uint64_t v82 = v271;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10024D338((uint64_t)v291);
        _os_log_impl((void *)&_mh_execute_header, v105, v106, "Dynamic store not set for %s", v108, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        a2 = v107;
        swift_slowDealloc();
      }
      else
      {
        sub_10024D338((uint64_t)v291);
      }

      uint64_t v81 = v273;
    }
  }
  uint64_t v114 = v295;
  uint64_t v113 = v296;
  sub_10026BB6C(v294, v295);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v113 + 8) + 40))(v114) == 5) {
    sub_1006CD9D4();
  }
  uint64_t v116 = v295;
  uint64_t v115 = v296;
  sub_10026BB6C(v294, v295);
  uint64_t v117 = (*(uint64_t (**)(uint64_t))(*(void *)(v115 + 8) + 40))(v116);
  sub_100278C8C((uint64_t)v294, (uint64_t)v291);
  if (v117 == 8)
  {
    sub_10024D338((uint64_t)v291);
  }
  else
  {
    uint64_t v119 = v292;
    uint64_t v118 = v293;
    sub_10026BB6C(v291, v292);
    uint64_t v120 = (*(uint64_t (**)(uint64_t))(*(void *)(v118 + 8) + 40))(v119);
    sub_10024D338((uint64_t)v291);
    if (v120 != 5) {
      goto LABEL_68;
    }
  }
  uint64_t v122 = v295;
  uint64_t v121 = v296;
  sub_10026BB6C(v294, v295);
  (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)(v121 + 8) + 64))(&v280, v122);
  if (!v281)
  {
    sub_10000A7E8((uint64_t)&v280, &qword_10097BB50);
    sub_100278C8C((uint64_t)v297, (uint64_t)&v288);
    id v151 = Logger.logObject.getter();
    os_log_type_t v152 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v151, v152))
    {
      unsigned __int8 v153 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v280 = swift_slowAlloc();
      *(_DWORD *)unsigned __int8 v153 = 136315138;
      sub_10026BB6C(&v288, *((uint64_t *)&v289 + 1));
      sub_100361140((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v154 = dispatch thunk of CustomStringConvertible.description.getter();
      v277[0] = sub_100254634(v154, v155, (uint64_t *)&v280);
      uint64_t v83 = v270;
      uint64_t v82 = v271;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10024D338((uint64_t)&v288);
      _os_log_impl((void *)&_mh_execute_header, v151, v152, "No peer device for session: %s", v153, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10024D338((uint64_t)&v288);
    }

LABEL_66:
    uint64_t v166 = v295;
    uint64_t v165 = v296;
    sub_10026BB6C(v294, v295);
    if ((*(uint64_t (**)(uint64_t))(*(void *)(v165 + 8) + 40))(v166) == 5)
    {
      uint64_t v167 = v264;
      Date.init()();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v167, 0, 1, v83);
      uint64_t v168 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager];
      swift_beginAccess();
      uint64_t v169 = *(void *)(v168 + 24);
      uint64_t v170 = *(void *)(v168 + 32);
      sub_1002AF758(v168, v169);
      (*(void (**)(char *, uint64_t, uint64_t))(v170 + 16))(v167, v169, v170);
      swift_endAccess();
    }
LABEL_68:
    uint64_t v172 = v295;
    uint64_t v171 = v296;
    sub_10026BB6C(v294, v295);
    if ((*(uint64_t (**)(uint64_t))(*(void *)(v171 + 8) + 40))(v172) != 8) {
      goto LABEL_96;
    }
    char v173 = sub_1005097B4(*(void *)(v297[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type));
    sub_100278C8C((uint64_t)v294, (uint64_t)&v288);
    if (v173)
    {
      sub_10024D338((uint64_t)&v288);
    }
    else
    {
      uint64_t v174 = *((void *)&v289 + 1);
      uint64_t v175 = v290;
      sub_10026BB6C(&v288, *((uint64_t *)&v289 + 1));
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v175 + 16))(v174, v175))
      {
        sub_10024D338((uint64_t)&v288);
LABEL_78:
        sub_100278C8C((uint64_t)v294, (uint64_t)&v280);
        long long v187 = a2;
        unint64_t v188 = Logger.logObject.getter();
        os_log_type_t v189 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v188, v189))
        {
          unsigned int v190 = (_DWORD *)swift_slowAlloc();
          v272 = a2;
          uint64_t v191 = v190;
          *unsigned int v190 = 67109376;
          uint64_t v192 = v281;
          uint64_t v193 = v282;
          sub_10026BB6C(&v280, v281);
          LODWORD(v192) = (*(uint64_t (**)(uint64_t, uint64_t))(v193 + 16))(v192, v193) & 1;
          sub_10024D338((uint64_t)&v280);
          LODWORD(v277[0]) = v192;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *((_WORD *)v191 + 4) = 1024;
          uint64_t v194 = (uint64_t)&v187[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
          swift_beginAccess();
          uint64_t v195 = v258;
          sub_10024A330(v194, v258, &qword_100974EA0);
          uint64_t v196 = v276;
          LODWORD(v193) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v273 + 48))(v195, 1, v276) != 1;
          sub_10000A7E8(v195, &qword_100974EA0);
          LODWORD(v280) = v193;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          _os_log_impl((void *)&_mh_execute_header, v188, v189, "Request arming UI as requested by Mac (%{BOOL}d) or ongoing unlock session during registration (%{BOOL}d)", (uint8_t *)v191, 0xEu);
          a2 = v272;
          uint64_t v81 = v273;
          swift_slowDealloc();
        }
        else
        {
          sub_10024D338((uint64_t)&v280);

          uint64_t v196 = v276;
        }
        sub_1006F76CC();
        uint64_t v197 = (uint64_t)v262;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56))(v262, 1, 1, v196);
        uint64_t v198 = (uint64_t)&v187[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
        swift_beginAccess();
        sub_10026B410(v197, v198, &qword_100974EA0);
        swift_endAccess();
        goto LABEL_96;
      }
      uint64_t v185 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
      swift_beginAccess();
      uint64_t v186 = v260;
      sub_10024A330(v185, v260, &qword_100974EA0);
      LODWORD(v185) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v186, 1, v276);
      sub_10000A7E8(v186, &qword_100974EA0);
      sub_10024D338((uint64_t)&v288);
      if (v185 != 1) {
        goto LABEL_78;
      }
    }
    if (sub_1005097B4(*(void *)(v297[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type)))
    {
      v272 = a2;
      uint64_t v176 = a2;
      uint64_t v177 = Logger.logObject.getter();
      os_log_type_t v178 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v177, v178))
      {
        uint64_t v179 = swift_slowAlloc();
        v274 = (char *)swift_slowAlloc();
        *(void *)&long long v280 = v274;
        *(_DWORD *)uint64_t v179 = 67109378;
        uint64_t v180 = swift_unknownObjectWeakLoadStrong();

        swift_unknownObjectRelease();
        LODWORD(v277[0]) = v180 != 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        *(_WORD *)(v179 + 8) = 2080;
        uint64_t v181 = &v176[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
        swift_beginAccess();
        uint64_t v182 = v276;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v181, 1, v276))
        {
          uint64_t v183 = 7104878;
          unint64_t v184 = 0xE300000000000000;
        }
        else
        {
          v199 = v275;
          (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v275, v181, v182);
          uint64_t v200 = UUID.uuidString.getter();
          uint64_t v201 = v81;
          uint64_t v183 = v200;
          unint64_t v184 = v202;
          (*(void (**)(char *, uint64_t))(v201 + 8))(v199, v182);
        }
        v277[0] = sub_100254634(v183, v184, (uint64_t *)&v280);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v177, v178, "Calling back to delegate (exists: %{BOOL}d), for sessionID: %s", (uint8_t *)v179, 0x12u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v203 = v276;
      uint64_t v204 = swift_unknownObjectWeakLoadStrong();
      a2 = v272;
      if (v204)
      {
        uint64_t v205 = (void *)v204;
        uint64_t v206 = (uint64_t)&v176[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
        swift_beginAccess();
        uint64_t v207 = (uint64_t)v259;
        sub_10024A330(v206, (uint64_t)v259, &qword_100974EA0);
        uint64_t v208 = v273;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v273 + 48))(v207, 1, v203) != 1)
        {
          uint64_t v219 = v257;
          (*(void (**)(char *, uint64_t, uint64_t))(v208 + 32))(v257, v207, v203);
          uint64_t v220 = v203;
          Class v221 = UUID._bridgeToObjectiveC()().super.isa;
          id v222 = sub_10070E650(0xBu, 0, 0xE000000000000000);
          [v205 manager:v176 didFailAuthenticationFor:v221 error:v222];
          swift_unknownObjectRelease();

          (*(void (**)(char *, uint64_t))(v208 + 8))(v219, v220);
          uint64_t v223 = (uint64_t)v262;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v208 + 56))(v262, 1, 1, v220);
          swift_beginAccess();
          sub_10026B410(v223, v206, &qword_100974EA0);
          swift_endAccess();
          uint64_t v81 = v208;
          goto LABEL_96;
        }
        swift_unknownObjectRelease();
        sub_10000A7E8(v207, &qword_100974EA0);
      }
      unint64_t v209 = v176;
      v210 = Logger.logObject.getter();
      os_log_type_t v211 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v210, v211))
      {
        uint64_t v212 = swift_slowAlloc();
        v274 = (char *)swift_slowAlloc();
        v287 = v274;
        *(_DWORD *)uint64_t v212 = 67109378;
        uint64_t v213 = swift_unknownObjectWeakLoadStrong();

        swift_unknownObjectRelease();
        LODWORD(v280) = v213 != 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        *(_WORD *)(v212 + 8) = 2080;
        uint64_t v214 = &v209[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
        swift_beginAccess();
        uint64_t v215 = v273;
        uint64_t v216 = v276;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v273 + 48))(v214, 1, v276))
        {
          uint64_t v217 = 7104878;
          unint64_t v218 = 0xE300000000000000;
        }
        else
        {
          uint64_t v224 = v275;
          (*(void (**)(char *, char *, uint64_t))(v215 + 16))(v275, v214, v216);
          uint64_t v217 = UUID.uuidString.getter();
          unint64_t v218 = v225;
          (*(void (**)(char *, uint64_t))(v215 + 8))(v224, v216);
        }
        uint64_t v286 = sub_100254634(v217, v218, (uint64_t *)&v287);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v210, v211, "Could not call back to delegate (exists: %{BOOL}d), for sessionID: %s", (uint8_t *)v212, 0x12u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      a2 = v272;
      uint64_t v81 = v273;
    }
LABEL_96:
    uint64_t v227 = v295;
    uint64_t v226 = v296;
    sub_10026BB6C(v294, v295);
    if ((*(uint64_t (**)(uint64_t))(*(void *)(v226 + 8) + 40))(v227) != 8)
    {
      uint64_t v228 = swift_unknownObjectWeakLoadStrong();
      if (v228)
      {
        uint64_t v229 = (void *)v228;
        uint64_t v231 = v295;
        uint64_t v230 = v296;
        sub_10026BB6C(v294, v295);
        uint64_t v232 = v275;
        (*(void (**)(uint64_t))(*(void *)(v230 + 8) + 32))(v231);
        Class v233 = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v81 + 8))(v232, v276);
        [v229 manager:a2 didEnableAuthenticationFor:v233];

        swift_unknownObjectRelease();
      }
    }
    goto LABEL_99;
  }
  sub_1002AF688(&v280, (uint64_t)&v288);
  uint64_t v50 = (char *)*((void *)&v289 + 1);
  uint64_t v123 = v290;
  sub_10026BB6C(&v288, *((uint64_t *)&v289 + 1));
  uint64_t v124 = (*(uint64_t (**)(char *, uint64_t))(v123 + 8))(v50, v123);
  if (!v125)
  {
LABEL_112:
    __break(1u);
    goto LABEL_113;
  }
  sub_1006F9558(v124, v125);
  swift_bridgeObjectRelease();
  uint64_t v50 = (char *)*((void *)&v289 + 1);
  uint64_t v126 = v290;
  sub_10026BB6C(&v288, *((uint64_t *)&v289 + 1));
  uint64_t v127 = (*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v50, v126);
  if (!v128)
  {
LABEL_113:
    __break(1u);
    goto LABEL_114;
  }
  uint64_t v129 = v127;
  uint64_t v130 = v128;
  swift_beginAccess();
  char v131 = sub_1005803EC(&v280, v129, v130);
  uint64_t v133 = v132;
  uint64_t v134 = type metadata accessor for RegistrationState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 48))(v133, 1, v134)) {
    *(unsigned char *)(v133 + *(int *)(v134 + 20)) = 0;
  }
  ((void (*)(long long *, void))v131)(&v280, 0);
  swift_endAccess();
  Swift::String v135 = v266;
  swift_bridgeObjectRelease();
  Swift::String v136 = v265;
  uint64_t v137 = (uint64_t)v272;
  (*((void (**)(char *, uint64_t, char *))v135 + 2))(v265, v267, v272);
  sub_100278C8C((uint64_t)&v288, (uint64_t)&v280);
  sub_100278C8C((uint64_t)&v288, (uint64_t)v277);
  Swift::String v138 = a2;
  uint64_t v50 = a2;
  Swift::String v139 = Logger.logObject.getter();
  int v140 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v139, (os_log_type_t)v140))
  {

    sub_10024D338((uint64_t)&v280);
    sub_10024D338((uint64_t)v277);

    (*((void (**)(char *, uint64_t))v135 + 1))(v136, v137);
    uint64_t v83 = v270;
LABEL_65:
    uint64_t v82 = v271;
    sub_10024D338((uint64_t)&v288);
    a2 = v138;
    goto LABEL_66;
  }
  LODWORD(v274) = v140;
  uint64_t v141 = swift_slowAlloc();
  v269 = (char *)swift_slowAlloc();
  v283[0] = (uint64_t)v269;
  *(_DWORD *)uint64_t v141 = 136315394;
  uint64_t v142 = v281;
  uint64_t v143 = v282;
  sub_10026BB6C(&v280, v281);
  uint64_t v144 = (*(uint64_t (**)(uint64_t, uint64_t))(v143 + 8))(v142, v143);
  if (v145)
  {
    uint64_t v146 = v263;
    sub_1006D4404(v144, v145, v263);
    uint64_t v147 = v146;
    swift_bridgeObjectRelease();
    uint64_t v83 = v270;
    uint64_t v148 = v271;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v271 + 48))(v147, 1, v270) == 1)
    {
      sub_10000A7E8(v147, (uint64_t *)&unk_100975040);
      unint64_t v149 = 0xE90000000000003ELL;
      uint64_t v150 = 0x676E697373696D3CLL;
    }
    else
    {
      uint64_t v156 = Date.description.getter();
      uint64_t v157 = v147;
      uint64_t v150 = v156;
      unint64_t v149 = v158;
      (*(void (**)(uint64_t, uint64_t))(v148 + 8))(v157, v83);
    }
    uint64_t v284 = sub_100254634(v150, v149, v283);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)&v280);
    *(_WORD *)(v141 + 12) = 2080;
    uint64_t v159 = v278;
    uint64_t v160 = v279;
    sub_10026BB6C(v277, v278);
    uint64_t v161 = (*(uint64_t (**)(uint64_t, uint64_t))(v160 + 8))(v159, v160);
    if (v162)
    {
      uint64_t v163 = v161;
      unint64_t v164 = v162;
    }
    else
    {
      uint64_t v163 = 0xD000000000000015;
      uint64_t v284 = 0;
      unint64_t v285 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v164 = 0x80000001007B7770;
    }
    uint64_t v284 = sub_100254634(v163, v164, v283);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)v277);
    _os_log_impl((void *)&_mh_execute_header, v139, (os_log_type_t)v274, "Recording last registration date as %s for device: %s", (uint8_t *)v141, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*((void (**)(char *, uint64_t))v266 + 1))(v265, v137);
    uint64_t v81 = v273;
    goto LABEL_65;
  }
LABEL_114:

  uint64_t result = sub_10024D338((uint64_t)v277);
  __break(1u);
  return result;
}

uint64_t sub_1004EA2EC(void *a1, char *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_10000A844(&qword_100974EA0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v256 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v256 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v258 = (uint64_t)&v256 - v12;
  __chkstk_darwin(v11);
  uint64_t v260 = (uint64_t)&v256 - v13;
  uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  v264 = (char *)&v256 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v263 = (uint64_t)&v256 - v17;
  v272 = (char *)type metadata accessor for Logger();
  v266 = (char *)*((void *)v272 - 1);
  __chkstk_darwin(v272);
  v265 = (char *)&v256 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v270 = v19;
  uint64_t v271 = v20;
  __chkstk_darwin(v19);
  v269 = (char *)&v256 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v276 = type metadata accessor for UUID();
  uint64_t v273 = *(void *)(v276 - 8);
  uint64_t v22 = __chkstk_darwin(v276);
  uint64_t v24 = (char *)&v256 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22);
  v274 = (char *)&v256 - v26;
  __chkstk_darwin(v25);
  v275 = (char *)&v256 - v27;
  uint64_t v28 = type metadata accessor for DispatchPredicate();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (uint64_t *)((char *)&v256 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v297[3] = type metadata accessor for SDAuthenticationPairingKeySession();
  v297[4] = &off_1008DE398;
  v297[0] = a1;
  uint64_t v32 = *(void **)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *uint64_t v31 = v32;
  (*(void (**)(void *, void, uint64_t))(v29 + 104))(v31, enum case for DispatchPredicate.onQueue(_:), v28);
  id v33 = a1;
  id v34 = v32;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v29 + 8))(v31, v28);
  if (a1)
  {
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v35 = sub_10000B47C((uint64_t)v272, (uint64_t)qword_10097F520);
  sub_100278C8C((uint64_t)v297, (uint64_t)v294);
  uint64_t v267 = v35;
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.default.getter();
  BOOL v38 = os_log_type_enabled(v36, v37);
  v262 = v10;
  v259 = v7;
  v257 = v24;
  if (v38)
  {
    int v39 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v288 = swift_slowAlloc();
    *(_DWORD *)int v39 = 136315138;
    sub_100278C8C((uint64_t)v294, (uint64_t)v291);
    sub_10000A844((uint64_t *)&unk_10096B440);
    uint64_t v40 = String.init<A>(describing:)();
    v291[0] = sub_100254634(v40, v41, (uint64_t *)&v288);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)v294);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Session did complete: %s", v39, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10024D338((uint64_t)v294);
  }

  uint64_t v42 = v297[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
  swift_beginAccess();
  sub_10024A330(v42, (uint64_t)v294, &qword_10097BB50);
  uint64_t v43 = v295;
  if (v295)
  {
    uint64_t v44 = v296;
    sub_10026BB6C(v294, v295);
    uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v43, v44);
    unint64_t v47 = v46;
    sub_10024D338((uint64_t)v294);
    if (v47)
    {
      if (*(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationManager])
      {
        swift_retain();
        sub_100333064(v45, v47);
        swift_release();
      }
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_10000A7E8((uint64_t)v294, &qword_10097BB50);
  }
  sub_100278C8C((uint64_t)v297, (uint64_t)v291);
  sub_10000A844((uint64_t *)&unk_10096B440);
  sub_10000A844((uint64_t *)&unk_100972440);
  if (swift_dynamicCast())
  {
    uint64_t v48 = sub_1002AF688(&v288, (uint64_t)v294);
    __chkstk_darwin(v48);
    *(&v256 - 2) = (uint64_t)v294;
    uint64_t v49 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions];
    swift_beginAccess();
    uint64_t v50 = 0;
    uint64_t v51 = sub_100452294((uint64_t (*)(uint64_t))sub_1004ED0B0, (uint64_t)(&v256 - 4));
    uint64_t v52 = *(void *)(*(void *)v49 + 16);
    if (v52 >= v51)
    {
      uint64_t v268 = 0;
      sub_1005A5820(v51, v52);
      swift_endAccess();
      uint64_t v53 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions];
      swift_beginAccess();
      uint64_t v54 = *(void *)v53;
      uint64_t v55 = *(void *)(*(void *)v53 + 16);
      if (!v55)
      {
LABEL_32:
        uint64_t v95 = (uint64_t)v269;
        Date.init()();
        sub_1006D5DAC(v95);
        (*(void (**)(uint64_t, uint64_t))(v271 + 8))(v95, v270);
        if (*(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_nearbyActionAdvertiser])
        {
          swift_retain();
          sub_100328244();
          swift_release();
        }
        sub_1006D6720(0);
        uint64_t v97 = v295;
        uint64_t v96 = v296;
        sub_10026BB6C(v294, v295);
        (*(void (**)(uint64_t))(*(void *)(v96 + 8) + 88))(v97);
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        uint64_t v99 = v273;
        if (Strong)
        {
          unint64_t v100 = (void *)Strong;
          uint64_t v102 = v295;
          uint64_t v101 = v296;
          sub_10026BB6C(v294, v295);
          uint64_t v103 = v275;
          (*(void (**)(uint64_t))(*(void *)(v101 + 8) + 32))(v102);
          Class isa = UUID._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v99 + 8))(v103, v276);
          [v100 manager:a2 didCompleteAuthenticationFor:isa];

          swift_unknownObjectRelease();
        }
LABEL_99:
        sub_10024D338((uint64_t)v294);
LABEL_100:
        uint64_t v234 = v297[0];
        uint64_t v235 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
        unint64_t v236 = *(void *)(v297[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type);
        Swift::UInt8 v237 = SFDeviceClassCodeGet();
        Swift::Int v238 = sub_1005095A0(v236);
        BOOL v239 = sub_10057C25C(8u, v238);
        swift_bridgeObjectRelease();
        if (v239)
        {
          if (!SFDeviceIsRealityDevice()) {
            return sub_10024D338((uint64_t)v297);
          }
        }
        else
        {
          Swift::Int v240 = sub_1005095A0(v236);
          BOOL v241 = sub_10057C25C(v237, v240);
          swift_bridgeObjectRelease();
          if (!v241) {
            return sub_10024D338((uint64_t)v297);
          }
        }
        uint64_t v242 = *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager];
        char v243 = sub_100508B74(*(void *)(v234 + v235));
        uint64_t v244 = v234 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
        swift_beginAccess();
        sub_10024A330(v244, (uint64_t)v294, &qword_10097BB50);
        uint64_t v245 = sub_1005EA4B4(v243, (uint64_t)v294);
        uint64_t v247 = v246;
        uint64_t v248 = swift_getObjectType();
        uint64_t v249 = (*(uint64_t (**)(uint64_t, uint64_t))(v247 + 56))(v248, v247);
        uint64_t v250 = __chkstk_darwin(v249);
        *(&v256 - 4) = v245;
        *(&v256 - 3) = v247;
        *(&v256 - 2) = (uint64_t)v294;
        *(&v256 - 1) = v242;
        __chkstk_darwin(v250);
        *(&v256 - 2) = (uint64_t)sub_10045AFA8;
        *(&v256 - 1) = v251;
        v253 = v252 + 4;
        os_unfair_lock_lock(v252 + 4);
        sub_10030F73C(v254);
        os_unfair_lock_unlock(v253);
        swift_unknownObjectRelease();
        sub_10000A7E8((uint64_t)v294, &qword_10097BB50);
        return sub_10024D338((uint64_t)v297);
      }
      v266 = v53;
      v272 = a2;
      uint64_t v56 = (void (**)(char *, uint64_t))(v273 + 8);
      swift_bridgeObjectRetain();
      uint64_t v57 = 0;
      unint64_t v58 = 0;
      uint64_t v59 = v275;
      while (1)
      {
        uint64_t v61 = *(void *)(v54 + v57 + 56);
        uint64_t v60 = *(void *)(v54 + v57 + 64);
        sub_10026BB6C((void *)(v54 + v57 + 32), v61);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v60 + 8) + 8) + 32))(v61);
        uint64_t v63 = v295;
        uint64_t v62 = v296;
        sub_10026BB6C(v294, v295);
        int v64 = v274;
        (*(void (**)(uint64_t))(*(void *)(v62 + 8) + 32))(v63);
        LOBYTE(v62) = static UUID.== infix(_:_:)();
        uint64_t v65 = *v56;
        uint64_t v66 = v64;
        uint64_t v67 = v276;
        (*v56)(v66, v276);
        v65(v59, v67);
        if (v62) {
          break;
        }
        ++v58;
        v57 += 40;
        if (v55 == v58)
        {
          swift_bridgeObjectRelease();
          a2 = v272;
          goto LABEL_32;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v50 = v266;
      if (v58 < *(void *)(*(void *)v266 + 16))
      {
        sub_100278C8C(*(void *)v266 + v57 + 32, (uint64_t)v291);
        uint64_t v90 = v292;
        uint64_t v89 = v293;
        sub_10026BB6C(v291, v292);
        uint64_t v91 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v89 + 8) + 8) + 40))(v90);
        a2 = v272;
        if (v91 == 1)
        {
          uint64_t v92 = Logger.logObject.getter();
          os_log_type_t v93 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v92, v93))
          {
            char v94 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)char v94 = 0;
            _os_log_impl((void *)&_mh_execute_header, v92, v93, "Posting authenticated notification", v94, 2u);
            swift_slowDealloc();
          }

          sub_1006F842C();
        }
        swift_beginAccess();
        sub_1002A6D00(v58, (uint64_t)&v288);
        swift_endAccess();
        sub_10024D338((uint64_t)&v288);
        sub_10024D338((uint64_t)v291);
        goto LABEL_32;
      }
      goto LABEL_111;
    }
    __break(1u);
    goto LABEL_109;
  }
  uint64_t v290 = 0;
  long long v288 = 0u;
  long long v289 = 0u;
  sub_10000A7E8((uint64_t)&v288, &qword_100976A10);
  sub_100278C8C((uint64_t)v297, (uint64_t)v291);
  sub_10000A844(&qword_10096B430);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v290 = 0;
    long long v288 = 0u;
    long long v289 = 0u;
    sub_10000A7E8((uint64_t)&v288, &qword_100976A18);
    uint64_t v268 = 0;
    goto LABEL_100;
  }
  uint64_t v68 = sub_1002AF688(&v288, (uint64_t)v294);
  __chkstk_darwin(v68);
  *(&v256 - 2) = (uint64_t)v294;
  int v69 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions];
  swift_beginAccess();
  uint64_t v50 = 0;
  uint64_t v70 = sub_100451F6C((uint64_t (*)(uint64_t))sub_1004ED0B0, (uint64_t)(&v256 - 4));
  uint64_t v71 = *(void *)(*(void *)v69 + 16);
  if (v71 < v70)
  {
LABEL_109:
    __break(1u);
    goto LABEL_110;
  }
  sub_1005A5880(v70, v71);
  uint64_t v72 = swift_endAccess();
  __chkstk_darwin(v72);
  *(&v256 - 2) = (uint64_t)v294;
  uint64_t v73 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions];
  swift_beginAccess();
  uint64_t v74 = sub_100451FAC((uint64_t (*)(uint64_t))sub_1004ED0B0, (uint64_t)(&v256 - 4));
  uint64_t v75 = *(void *)(*(void *)v73 + 16);
  if (v75 < v74)
  {
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
    goto LABEL_112;
  }
  uint64_t v268 = 0;
  sub_1005A5860(v74, v75);
  swift_endAccess();
  uint64_t v77 = v295;
  uint64_t v76 = v296;
  sub_10026BB6C(v294, v295);
  (*(void (**)(uint64_t))(*(void *)(v76 + 8) + 88))(v77);
  uint64_t v79 = v295;
  uint64_t v78 = v296;
  sub_10026BB6C(v294, v295);
  uint64_t v80 = (*(uint64_t (**)(uint64_t))(*(void *)(v78 + 8) + 40))(v79);
  uint64_t v81 = v273;
  uint64_t v83 = v270;
  uint64_t v82 = v271;
  if (v80 == 3)
  {
    sub_1006E5BC0();
    sub_1006E9424();
    uint64_t v84 = (uint64_t)v269;
    Date.init()();
    sub_1006D5DAC(v84);
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v84, v83);
    uint64_t v86 = v295;
    uint64_t v85 = v296;
    sub_10026BB6C(v294, v295);
    if ((*(uint64_t (**)(uint64_t))(*(void *)(v85 + 8) + 40))(v86) == 3)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v87 = String._bridgeToObjectiveC()();
      NSString v88 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      sub_1000D289C(1, v87, v88);

      uint64_t v82 = v271;
    }
    else
    {
      sub_100278C8C((uint64_t)v294, (uint64_t)v291);
      char v105 = Logger.logObject.getter();
      os_log_type_t v106 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v105, v106))
      {
        Swift::String v107 = a2;
        Swift::String v108 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v288 = swift_slowAlloc();
        *(_DWORD *)Swift::String v108 = 136315138;
        uint64_t v110 = v292;
        uint64_t v109 = v293;
        sub_10026BB6C(v291, v292);
        (*(void (**)(uint64_t))(*(void *)(v109 + 8) + 40))(v110);
        uint64_t v111 = sub_10050938C();
        *(void *)&long long v280 = sub_100254634(v111, v112, (uint64_t *)&v288);
        uint64_t v83 = v270;
        uint64_t v82 = v271;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10024D338((uint64_t)v291);
        _os_log_impl((void *)&_mh_execute_header, v105, v106, "Dynamic store not set for %s", v108, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        a2 = v107;
        swift_slowDealloc();
      }
      else
      {
        sub_10024D338((uint64_t)v291);
      }

      uint64_t v81 = v273;
    }
  }
  uint64_t v114 = v295;
  uint64_t v113 = v296;
  sub_10026BB6C(v294, v295);
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v113 + 8) + 40))(v114) == 5) {
    sub_1006CD9D4();
  }
  uint64_t v116 = v295;
  uint64_t v115 = v296;
  sub_10026BB6C(v294, v295);
  uint64_t v117 = (*(uint64_t (**)(uint64_t))(*(void *)(v115 + 8) + 40))(v116);
  sub_100278C8C((uint64_t)v294, (uint64_t)v291);
  if (v117 == 8)
  {
    sub_10024D338((uint64_t)v291);
  }
  else
  {
    uint64_t v119 = v292;
    uint64_t v118 = v293;
    sub_10026BB6C(v291, v292);
    uint64_t v120 = (*(uint64_t (**)(uint64_t))(*(void *)(v118 + 8) + 40))(v119);
    sub_10024D338((uint64_t)v291);
    if (v120 != 5) {
      goto LABEL_68;
    }
  }
  uint64_t v122 = v295;
  uint64_t v121 = v296;
  sub_10026BB6C(v294, v295);
  (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)(v121 + 8) + 64))(&v280, v122);
  if (!v281)
  {
    sub_10000A7E8((uint64_t)&v280, &qword_10097BB50);
    sub_100278C8C((uint64_t)v297, (uint64_t)&v288);
    id v151 = Logger.logObject.getter();
    os_log_type_t v152 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v151, v152))
    {
      unsigned __int8 v153 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v280 = swift_slowAlloc();
      *(_DWORD *)unsigned __int8 v153 = 136315138;
      sub_10026BB6C(&v288, *((uint64_t *)&v289 + 1));
      sub_100361140((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v154 = dispatch thunk of CustomStringConvertible.description.getter();
      v277[0] = sub_100254634(v154, v155, (uint64_t *)&v280);
      uint64_t v83 = v270;
      uint64_t v82 = v271;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10024D338((uint64_t)&v288);
      _os_log_impl((void *)&_mh_execute_header, v151, v152, "No peer device for session: %s", v153, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10024D338((uint64_t)&v288);
    }

LABEL_66:
    uint64_t v166 = v295;
    uint64_t v165 = v296;
    sub_10026BB6C(v294, v295);
    if ((*(uint64_t (**)(uint64_t))(*(void *)(v165 + 8) + 40))(v166) == 5)
    {
      uint64_t v167 = v264;
      Date.init()();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v167, 0, 1, v83);
      uint64_t v168 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager];
      swift_beginAccess();
      uint64_t v169 = *(void *)(v168 + 24);
      uint64_t v170 = *(void *)(v168 + 32);
      sub_1002AF758(v168, v169);
      (*(void (**)(char *, uint64_t, uint64_t))(v170 + 16))(v167, v169, v170);
      swift_endAccess();
    }
LABEL_68:
    uint64_t v172 = v295;
    uint64_t v171 = v296;
    sub_10026BB6C(v294, v295);
    if ((*(uint64_t (**)(uint64_t))(*(void *)(v171 + 8) + 40))(v172) != 8) {
      goto LABEL_96;
    }
    char v173 = sub_1005097B4(*(void *)(v297[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type));
    sub_100278C8C((uint64_t)v294, (uint64_t)&v288);
    if (v173)
    {
      sub_10024D338((uint64_t)&v288);
    }
    else
    {
      uint64_t v174 = *((void *)&v289 + 1);
      uint64_t v175 = v290;
      sub_10026BB6C(&v288, *((uint64_t *)&v289 + 1));
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v175 + 16))(v174, v175))
      {
        sub_10024D338((uint64_t)&v288);
LABEL_78:
        sub_100278C8C((uint64_t)v294, (uint64_t)&v280);
        long long v187 = a2;
        unint64_t v188 = Logger.logObject.getter();
        os_log_type_t v189 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v188, v189))
        {
          unsigned int v190 = (_DWORD *)swift_slowAlloc();
          v272 = a2;
          uint64_t v191 = v190;
          *unsigned int v190 = 67109376;
          uint64_t v192 = v281;
          uint64_t v193 = v282;
          sub_10026BB6C(&v280, v281);
          LODWORD(v192) = (*(uint64_t (**)(uint64_t, uint64_t))(v193 + 16))(v192, v193) & 1;
          sub_10024D338((uint64_t)&v280);
          LODWORD(v277[0]) = v192;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *((_WORD *)v191 + 4) = 1024;
          uint64_t v194 = (uint64_t)&v187[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
          swift_beginAccess();
          uint64_t v195 = v258;
          sub_10024A330(v194, v258, &qword_100974EA0);
          uint64_t v196 = v276;
          LODWORD(v193) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v273 + 48))(v195, 1, v276) != 1;
          sub_10000A7E8(v195, &qword_100974EA0);
          LODWORD(v280) = v193;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          _os_log_impl((void *)&_mh_execute_header, v188, v189, "Request arming UI as requested by Mac (%{BOOL}d) or ongoing unlock session during registration (%{BOOL}d)", (uint8_t *)v191, 0xEu);
          a2 = v272;
          uint64_t v81 = v273;
          swift_slowDealloc();
        }
        else
        {
          sub_10024D338((uint64_t)&v280);

          uint64_t v196 = v276;
        }
        sub_1006F76CC();
        uint64_t v197 = (uint64_t)v262;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56))(v262, 1, 1, v196);
        uint64_t v198 = (uint64_t)&v187[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
        swift_beginAccess();
        sub_10026B410(v197, v198, &qword_100974EA0);
        swift_endAccess();
        goto LABEL_96;
      }
      uint64_t v185 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
      swift_beginAccess();
      uint64_t v186 = v260;
      sub_10024A330(v185, v260, &qword_100974EA0);
      LODWORD(v185) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v186, 1, v276);
      sub_10000A7E8(v186, &qword_100974EA0);
      sub_10024D338((uint64_t)&v288);
      if (v185 != 1) {
        goto LABEL_78;
      }
    }
    if (sub_1005097B4(*(void *)(v297[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type)))
    {
      v272 = a2;
      uint64_t v176 = a2;
      uint64_t v177 = Logger.logObject.getter();
      os_log_type_t v178 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v177, v178))
      {
        uint64_t v179 = swift_slowAlloc();
        v274 = (char *)swift_slowAlloc();
        *(void *)&long long v280 = v274;
        *(_DWORD *)uint64_t v179 = 67109378;
        uint64_t v180 = swift_unknownObjectWeakLoadStrong();

        swift_unknownObjectRelease();
        LODWORD(v277[0]) = v180 != 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        *(_WORD *)(v179 + 8) = 2080;
        uint64_t v181 = &v176[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
        swift_beginAccess();
        uint64_t v182 = v276;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v181, 1, v276))
        {
          uint64_t v183 = 7104878;
          unint64_t v184 = 0xE300000000000000;
        }
        else
        {
          v199 = v275;
          (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v275, v181, v182);
          uint64_t v200 = UUID.uuidString.getter();
          uint64_t v201 = v81;
          uint64_t v183 = v200;
          unint64_t v184 = v202;
          (*(void (**)(char *, uint64_t))(v201 + 8))(v199, v182);
        }
        v277[0] = sub_100254634(v183, v184, (uint64_t *)&v280);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v177, v178, "Calling back to delegate (exists: %{BOOL}d), for sessionID: %s", (uint8_t *)v179, 0x12u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v203 = v276;
      uint64_t v204 = swift_unknownObjectWeakLoadStrong();
      a2 = v272;
      if (v204)
      {
        uint64_t v205 = (void *)v204;
        uint64_t v206 = (uint64_t)&v176[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
        swift_beginAccess();
        uint64_t v207 = (uint64_t)v259;
        sub_10024A330(v206, (uint64_t)v259, &qword_100974EA0);
        uint64_t v208 = v273;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v273 + 48))(v207, 1, v203) != 1)
        {
          uint64_t v219 = v257;
          (*(void (**)(char *, uint64_t, uint64_t))(v208 + 32))(v257, v207, v203);
          uint64_t v220 = v203;
          Class v221 = UUID._bridgeToObjectiveC()().super.isa;
          id v222 = sub_10070E650(0xBu, 0, 0xE000000000000000);
          [v205 manager:v176 didFailAuthenticationFor:v221 error:v222];
          swift_unknownObjectRelease();

          (*(void (**)(char *, uint64_t))(v208 + 8))(v219, v220);
          uint64_t v223 = (uint64_t)v262;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v208 + 56))(v262, 1, 1, v220);
          swift_beginAccess();
          sub_10026B410(v223, v206, &qword_100974EA0);
          swift_endAccess();
          uint64_t v81 = v208;
          goto LABEL_96;
        }
        swift_unknownObjectRelease();
        sub_10000A7E8(v207, &qword_100974EA0);
      }
      unint64_t v209 = v176;
      v210 = Logger.logObject.getter();
      os_log_type_t v211 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v210, v211))
      {
        uint64_t v212 = swift_slowAlloc();
        v274 = (char *)swift_slowAlloc();
        v287 = v274;
        *(_DWORD *)uint64_t v212 = 67109378;
        uint64_t v213 = swift_unknownObjectWeakLoadStrong();

        swift_unknownObjectRelease();
        LODWORD(v280) = v213 != 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        *(_WORD *)(v212 + 8) = 2080;
        uint64_t v214 = &v209[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
        swift_beginAccess();
        uint64_t v215 = v273;
        uint64_t v216 = v276;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v273 + 48))(v214, 1, v276))
        {
          uint64_t v217 = 7104878;
          unint64_t v218 = 0xE300000000000000;
        }
        else
        {
          uint64_t v224 = v275;
          (*(void (**)(char *, char *, uint64_t))(v215 + 16))(v275, v214, v216);
          uint64_t v217 = UUID.uuidString.getter();
          unint64_t v218 = v225;
          (*(void (**)(char *, uint64_t))(v215 + 8))(v224, v216);
        }
        uint64_t v286 = sub_100254634(v217, v218, (uint64_t *)&v287);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v210, v211, "Could not call back to delegate (exists: %{BOOL}d), for sessionID: %s", (uint8_t *)v212, 0x12u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      a2 = v272;
      uint64_t v81 = v273;
    }
LABEL_96:
    uint64_t v227 = v295;
    uint64_t v226 = v296;
    sub_10026BB6C(v294, v295);
    if ((*(uint64_t (**)(uint64_t))(*(void *)(v226 + 8) + 40))(v227) != 8)
    {
      uint64_t v228 = swift_unknownObjectWeakLoadStrong();
      if (v228)
      {
        uint64_t v229 = (void *)v228;
        uint64_t v231 = v295;
        uint64_t v230 = v296;
        sub_10026BB6C(v294, v295);
        uint64_t v232 = v275;
        (*(void (**)(uint64_t))(*(void *)(v230 + 8) + 32))(v231);
        Class v233 = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v81 + 8))(v232, v276);
        [v229 manager:a2 didEnableAuthenticationFor:v233];

        swift_unknownObjectRelease();
      }
    }
    goto LABEL_99;
  }
  sub_1002AF688(&v280, (uint64_t)&v288);
  uint64_t v50 = (char *)*((void *)&v289 + 1);
  uint64_t v123 = v290;
  sub_10026BB6C(&v288, *((uint64_t *)&v289 + 1));
  uint64_t v124 = (*(uint64_t (**)(char *, uint64_t))(v123 + 8))(v50, v123);
  if (!v125)
  {
LABEL_112:
    __break(1u);
    goto LABEL_113;
  }
  sub_1006F9558(v124, v125);
  swift_bridgeObjectRelease();
  uint64_t v50 = (char *)*((void *)&v289 + 1);
  uint64_t v126 = v290;
  sub_10026BB6C(&v288, *((uint64_t *)&v289 + 1));
  uint64_t v127 = (*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v50, v126);
  if (!v128)
  {
LABEL_113:
    __break(1u);
    goto LABEL_114;
  }
  uint64_t v129 = v127;
  uint64_t v130 = v128;
  swift_beginAccess();
  char v131 = sub_1005803EC(&v280, v129, v130);
  uint64_t v133 = v132;
  uint64_t v134 = type metadata accessor for RegistrationState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 48))(v133, 1, v134)) {
    *(unsigned char *)(v133 + *(int *)(v134 + 20)) = 0;
  }
  ((void (*)(long long *, void))v131)(&v280, 0);
  swift_endAccess();
  Swift::String v135 = v266;
  swift_bridgeObjectRelease();
  Swift::String v136 = v265;
  uint64_t v137 = (uint64_t)v272;
  (*((void (**)(char *, uint64_t, char *))v135 + 2))(v265, v267, v272);
  sub_100278C8C((uint64_t)&v288, (uint64_t)&v280);
  sub_100278C8C((uint64_t)&v288, (uint64_t)v277);
  Swift::String v138 = a2;
  uint64_t v50 = a2;
  Swift::String v139 = Logger.logObject.getter();
  int v140 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v139, (os_log_type_t)v140))
  {

    sub_10024D338((uint64_t)&v280);
    sub_10024D338((uint64_t)v277);

    (*((void (**)(char *, uint64_t))v135 + 1))(v136, v137);
    uint64_t v83 = v270;
LABEL_65:
    uint64_t v82 = v271;
    sub_10024D338((uint64_t)&v288);
    a2 = v138;
    goto LABEL_66;
  }
  LODWORD(v274) = v140;
  uint64_t v141 = swift_slowAlloc();
  v269 = (char *)swift_slowAlloc();
  v283[0] = (uint64_t)v269;
  *(_DWORD *)uint64_t v141 = 136315394;
  uint64_t v142 = v281;
  uint64_t v143 = v282;
  sub_10026BB6C(&v280, v281);
  uint64_t v144 = (*(uint64_t (**)(uint64_t, uint64_t))(v143 + 8))(v142, v143);
  if (v145)
  {
    uint64_t v146 = v263;
    sub_1006D4404(v144, v145, v263);
    uint64_t v147 = v146;
    swift_bridgeObjectRelease();
    uint64_t v83 = v270;
    uint64_t v148 = v271;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v271 + 48))(v147, 1, v270) == 1)
    {
      sub_10000A7E8(v147, (uint64_t *)&unk_100975040);
      unint64_t v149 = 0xE90000000000003ELL;
      uint64_t v150 = 0x676E697373696D3CLL;
    }
    else
    {
      uint64_t v156 = Date.description.getter();
      uint64_t v157 = v147;
      uint64_t v150 = v156;
      unint64_t v149 = v158;
      (*(void (**)(uint64_t, uint64_t))(v148 + 8))(v157, v83);
    }
    uint64_t v284 = sub_100254634(v150, v149, v283);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)&v280);
    *(_WORD *)(v141 + 12) = 2080;
    uint64_t v159 = v278;
    uint64_t v160 = v279;
    sub_10026BB6C(v277, v278);
    uint64_t v161 = (*(uint64_t (**)(uint64_t, uint64_t))(v160 + 8))(v159, v160);
    if (v162)
    {
      uint64_t v163 = v161;
      unint64_t v164 = v162;
    }
    else
    {
      uint64_t v163 = 0xD000000000000015;
      uint64_t v284 = 0;
      unint64_t v285 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v164 = 0x80000001007B7770;
    }
    uint64_t v284 = sub_100254634(v163, v164, v283);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)v277);
    _os_log_impl((void *)&_mh_execute_header, v139, (os_log_type_t)v274, "Recording last registration date as %s for device: %s", (uint8_t *)v141, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*((void (**)(char *, uint64_t))v266 + 1))(v265, v137);
    uint64_t v81 = v273;
    goto LABEL_65;
  }
LABEL_114:

  uint64_t result = sub_10024D338((uint64_t)v277);
  __break(1u);
  return result;
}

uint64_t sub_1004EC63C(unsigned char *__src, unsigned char *a2)
{
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_1004EC700(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_1004EC63C(__src, &__src[a2]);
  }
  type metadata accessor for __DataStorage();
  swift_allocObject();
  __DataStorage.init(bytes:length:)();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  type metadata accessor for Data.RangeReference();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

id sub_1004EC7B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v5 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_lastUnlockDate;
  uint64_t v16 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(_OWORD *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken) = xmmword_100770AE0;
  *(void *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_aksAuthSession) = 0;
  *(_OWORD *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_authToken) = xmmword_100770AE0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingSucceeded) = 0;
  sub_1004D49BC(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics);
  *(unsigned char *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_isConfirmationSent) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a4, v11);
  id v17 = sub_1002BC7FC(a1, a2, a3, v14, a5);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a4, v11);
  return v17;
}

uint64_t sub_1004EC978()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  sub_100250CC4(*(void *)(v0 + 48), *(void *)(v0 + 56));

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1004EC9C8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10000A6F0;
  return sub_1004DA9E0(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1004ECA9C()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1004ECADC()
{
}

uint64_t sub_1004ECAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1004ECAF4()
{
  return swift_release();
}

uint64_t sub_1004ECAFC()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1004ECB34()
{
  sub_1004DB460(*(unsigned char *)(v0 + 16));
}

uint64_t sub_1004ECB40(void *a1)
{
  return sub_1006FC968(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t sub_1004ECB60()
{
  sub_100250CC4(*(void *)(v0 + 24), *(void *)(v0 + 32));
  sub_10024D338(v0 + 40);

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1004ECBA8()
{
  return sub_1004D83CC(v0[2], v0[3], v0[4], (uint64_t)(v0 + 5));
}

uint64_t sub_1004ECBB8()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  sub_100250CC4(*(void *)(v0 + 48), *(void *)(v0 + 56));

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1004ECC08(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10000A6F0;
  return sub_1004D84BC(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1004ECCDC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1004ECD14()
{
}

void sub_1004ECD50()
{
  sub_1004DDC14(*(void **)(v0 + 16));
}

uint64_t sub_1004ECD58()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1004ECD98()
{
  sub_1004DDDAC(*(unsigned int *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1004ECDC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004ECE30()
{
  uint64_t v1 = (int *)(type metadata accessor for AuthenticationSecurityRequest(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();

  uint64_t v6 = v0 + v1[7] + v3;
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1004ECF2C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AuthenticationSecurityRequest(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10000A6F4;
  return sub_1004D51B4(a1, v5, v6, v7, v8);
}

uint64_t sub_1004ED028(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1004ED088()
{
  return sub_1004D5F34();
}

uint64_t sub_1004ED0B0(void *a1)
{
  return sub_1004ECB40(a1) & 1;
}

uint64_t sub_1004ED104@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SFAirDrop.ContactInfo.Handle();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(uint64_t (**)(uint64_t))(**(void **)NameDropIdentity.shared.unsafeMutableAddressor() + 136);
  uint64_t v8 = swift_retain();
  uint64_t v9 = (void *)v7(v8);
  swift_release();
  if (!v9)
  {
    if (qword_100969EC8 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_10000B47C(v22, (uint64_t)qword_100976A40);
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "User has no NameDrop identity, returning nil for myContactInfo", v25, 2u);
      swift_slowDealloc();
    }

    goto LABEL_21;
  }
  uint64_t v10 = CNContact.boopDefaultHandle.getter();
  uint64_t v12 = v11;
  uint64_t v13 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v13 = v10 & 0xFFFFFFFFFFFFLL;
  }
  if (!v13)
  {
    swift_bridgeObjectRelease();
    if (qword_100969EC8 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_10000B47C(v26, (uint64_t)qword_100976A40);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v18, v19)) {
      goto LABEL_20;
    }
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    uint64_t v21 = "User's NameDrop identity has no handles, returning nil for myContactInfo";
    goto LABEL_19;
  }
  uint64_t v14 = v10;
  uint64_t v15 = CNContact.vCardForBoopingDefaultHandle()();
  if (v16 >> 60 == 15)
  {
    swift_bridgeObjectRelease();
    if (qword_100969EC8 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_10000B47C(v17, (uint64_t)qword_100976A40);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v18, v19)) {
      goto LABEL_20;
    }
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    uint64_t v21 = "User's NameDrop identity could not be converted to a vCard, returning nil for myContactInfo";
LABEL_19:
    _os_log_impl((void *)&_mh_execute_header, v18, v19, v21, v20, 2u);
    swift_slowDealloc();
LABEL_20:

LABEL_21:
    uint64_t v27 = type metadata accessor for SFAirDrop.ContactInfo();
    uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
    return v28(a1, 1, 1, v27);
  }
  uint64_t v42 = v15;
  uint64_t v40 = a1;
  uint64_t v41 = CNContact.boopPresentedName.getter();
  uint64_t v39 = v30;
  char v31 = CNContact.boopDefaultHandleIsEmail.getter();
  id v32 = [v1 myGivenName];
  id v33 = v32;
  if (v31)
  {
    if (v32)
    {
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      uint64_t v38 = 0;
    }
    uint64_t v34 = v40;
    *uint64_t v6 = v14;
    v6[1] = v12;
    uint64_t v35 = (unsigned int *)&enum case for SFAirDrop.ContactInfo.Handle.email(_:);
  }
  else
  {
    if (v32)
    {
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      uint64_t v38 = 0;
    }
    uint64_t v34 = v40;
    *uint64_t v6 = v14;
    v6[1] = v12;
    uint64_t v35 = (unsigned int *)&enum case for SFAirDrop.ContactInfo.Handle.phone(_:);
  }
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, *v35, v3);
  SFAirDrop.ContactInfo.init(givenName:fullName:handle:vcard:)();

  uint64_t v36 = type metadata accessor for SFAirDrop.ContactInfo();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v34, 0, 1, v36);
}

id sub_1004ED5F0()
{
  uint64_t v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (id *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10025AE8C(v0, (uint64_t)v6);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1004EE780((uint64_t)v6, (uint64_t)v3);
      uint64_t v8 = (uint64_t *)&v3[*(int *)(v1 + 56)];
      unint64_t v9 = v8[1];
      if (v9 >> 60 == 15)
      {
        uint64_t v10 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
        uint64_t v11 = (uint64_t)v3;
        goto LABEL_7;
      }
      uint64_t v14 = *v8;
      id v15 = objc_allocWithZone((Class)PFMediaCapabilities);
      sub_10025ADCC(v14, v9);
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      id v12 = [v15 initWithOpaqueRepresentation:isa];

      sub_100316A18();
      if (v17)
      {
        Swift::String v18 = String.lowercased()();
        swift_bridgeObjectRelease();
        Swift::String v27 = v18;
        v26[10] = 6513005;
        v26[11] = 0xE300000000000000;
        sub_10024A1FC();
        char v19 = StringProtocol.contains<A>(_:)();
        swift_bridgeObjectRelease();
        if (v19)
        {
          sub_10000A844(&qword_1009771A0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
          uint64_t v21 = (void *)PFMediaCapabilitiesOutOfBandHintsPlatformKey;
          *(void *)(inited + 32) = PFMediaCapabilitiesOutOfBandHintsPlatformKey;
          id v22 = objc_allocWithZone((Class)NSNumber);
          id v23 = v21;
          id v24 = [v22 initWithInteger:1];
          *(void *)(inited + 64) = sub_1004EE7E4();
          *(void *)(inited + 40) = v24;
          sub_100246BF4(inited);
          type metadata accessor for PFMediaCapabilitiesOutOfBandHintsKey(0);
          sub_1004EE824();
          Class v25 = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v12 setOutOfBandHints:v25];
        }
      }
      sub_100250CB0(v14, v9);
      sub_1004EE87C((uint64_t)v3, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      return v12;
    case 2u:
      uint64_t v7 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint;
      goto LABEL_6;
    case 3u:

      return 0;
    default:
      uint64_t v7 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
LABEL_6:
      uint64_t v10 = v7;
      uint64_t v11 = (uint64_t)v6;
LABEL_7:
      sub_1004EE87C(v11, v10);
      return 0;
  }
}

uint64_t sub_1004ED940()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100976A40);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100976A40);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1004EDA08()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDAirDropPlatformUISessionManagerUnsupported()
{
  return self;
}

uint64_t sub_1004EDA64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  return _objc_release_x2();
}

uint64_t sub_1004EDA74()
{
  return sub_1004EE774(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1004EDAAC()
{
  sub_100261080(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDAirDropPlatformNotificationManagerUnsupported()
{
  return self;
}

uint64_t sub_1004EDB08(uint64_t a1, uint64_t a2)
{
  *(void *)(*(void *)v2 + 24) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t sub_1004EDB50@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SFAirDrop.NearbySharingInteraction();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A844((uint64_t *)&unk_10096C2A0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004EE70C(a1, (uint64_t)v10);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
  if (result == 1)
  {
    id v12 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v13(v7, v10, v4);
    sub_10000A844(&qword_10096C558);
    unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    id v12 = (void *)swift_allocObject();
    *((_OWORD *)v12 + 1) = xmmword_10076E7A0;
    uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v13)((char *)v12 + v14, v7, v4);
  }
  *a2 = v12;
  return result;
}

uint64_t sub_1004EDD00()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDAirDropPlatformNearFieldServiceUnsupported()
{
  return self;
}

uint64_t sub_1004EDD64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  return swift_unknownObjectRelease();
}

uint64_t sub_1004EDD78(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for UUID();
  *(void *)(v1 + 24) = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v2 = static AirDropActor.shared;
  return _swift_task_switch(sub_1004EDE40, v2, 0);
}

uint64_t sub_1004EDE40()
{
  UUID.init()();
  SFAirDropClient.BoopAtADistance.ServerInfo.init(applicationLabel:publicKeyData:bonjourUUID:)();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1004EDECC()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return sub_1004EE774(v1);
}

uint64_t sub_1004EDF78@<X0>(uint64_t a1@<X8>)
{
  v15[1] = a1;
  uint64_t v1 = sub_10000A844(&qword_100977178);
  __chkstk_darwin(v1);
  uint64_t v2 = sub_10000A844(&qword_100977180);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_10096C2A0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A844(&qword_100977188);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SFAirDrop.NearbySharingInteraction();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 1, 1, v13);
  Just.init(_:)();
  sub_10000A844(&qword_10096C538);
  Just.map<A>(_:)();
  sub_1002AE308(&qword_100977190, &qword_100977180);
  Publisher<>.values.getter();
  sub_1002AE308(&qword_100977198, &qword_100977178);
  SFNoThrowAsyncSequence.init<A>(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1004EE290@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t type metadata accessor for SDAirDropPlatformLockStateManagerSupported()
{
  return self;
}

id sub_1004EE320()
{
  id result = [self sharedMonitor];
  if (result)
  {
    uint64_t v1 = result;
    id v2 = [result deviceKeyBagLocked];

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004EE380(void *a1, uint64_t a2)
{
  id v4 = [self defaultCenter];
  sub_10026BB6C(a1, a1[3]);
  uint64_t v5 = _bridgeAnythingToObjectiveC<A>(_:)();
  if (qword_100969C10 != -1) {
    swift_once();
  }
  [v4 addObserver:v5 selector:a2 name:qword_100994488 object:0];

  return swift_unknownObjectRelease();
}

uint64_t sub_1004EE458(void *a1)
{
  id v2 = [self defaultCenter];
  sub_10026BB6C(a1, a1[3]);
  [v2 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

  return swift_unknownObjectRelease();
}

uint64_t type metadata accessor for SDAirDropPlatformLockStateManagerUnsupported()
{
  return self;
}

uint64_t type metadata accessor for SDAirDropPlatformUISessionManagerFactory()
{
  return self;
}

uint64_t type metadata accessor for SDAirDropPlatformNotificationManagerFactory()
{
  return self;
}

uint64_t type metadata accessor for SDAirDropPlatformNearFieldServiceFactory()
{
  return self;
}

uint64_t type metadata accessor for SDAirDropPlatformLockStateManagerFactory()
{
  return self;
}

uint64_t sub_1004EE5A0()
{
  uint64_t v0 = type metadata accessor for SFPlatform();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SFAirDropUserDefaults();
  uint64_t v4 = static SFAirDropUserDefaults.shared.getter();
  int v5 = SFAirDropUserDefaults.walkAwayEnabled.getter();

  static SFPlatform.macOS.getter();
  LOBYTE(v4) = static SFPlatform.isPlatform(_:)();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  if ((v4 & 1) != 0
    || (static SFPlatform.iOS.getter(), char v7 = static SFPlatform.isPlatform(_:)(), v6(v3, v0), (v7 & 1) != 0))
  {
    int v8 = 1;
  }
  else
  {
    static SFPlatform.visionOS.getter();
    int v8 = static SFPlatform.isPlatform(_:)();
    v6(v3, v0);
  }
  return v5 & v8 & (SFDeviceClassCodeGet() != 4);
}

uint64_t sub_1004EE70C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_10096C2A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004EE774(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1004EE780(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1004EE7E4()
{
  unint64_t result = qword_1009745A0;
  if (!qword_1009745A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1009745A0);
  }
  return result;
}

unint64_t sub_1004EE824()
{
  unint64_t result = qword_10096AE80;
  if (!qword_10096AE80)
  {
    type metadata accessor for PFMediaCapabilitiesOutOfBandHintsKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096AE80);
  }
  return result;
}

uint64_t sub_1004EE87C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_1004EE8E0(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v44 = *a2;
    *a1 = *a2;
    a1 = (void *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (void *)((char *)a1 + v9);
    unint64_t v14 = (void *)((char *)a2 + v9);
    uint64_t v46 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v46;
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (void *)((char *)a1 + v15);
    Swift::String v18 = (void *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = (void *)((char *)a1 + v16);
    uint64_t v21 = (void *)((char *)a2 + v16);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = a3[9];
    uint64_t v24 = a3[10];
    Class v25 = (void *)((char *)a1 + v23);
    uint64_t v26 = (void *)((char *)a2 + v23);
    uint64_t v27 = v26[1];
    void *v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = (void *)((char *)a1 + v24);
    uint64_t v29 = (void *)((char *)a2 + v24);
    uint64_t v30 = v29[1];
    void *v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = a3[12];
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *((unsigned char *)a1 + v31) = *((unsigned char *)a2 + v31);
    uint64_t v32 = a3[13];
    id v33 = (void *)((char *)a1 + v32);
    uint64_t v34 = (void *)((char *)a2 + v32);
    uint64_t v35 = *v34;
    unint64_t v36 = v34[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10025ADCC(v35, v36);
    *id v33 = v35;
    v33[1] = v36;
    uint64_t v37 = a3[14];
    uint64_t v38 = (char *)a1 + v37;
    uint64_t v39 = (char *)a2 + v37;
    uint64_t v40 = type metadata accessor for UUID();
    uint64_t v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
    v41(v38, v39, v40);
    v41((char *)a1 + a3[15], (char *)a2 + a3[15], v40);
    uint64_t v42 = a3[17];
    *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
    *((unsigned char *)a1 + v42) = *((unsigned char *)a2 + v42);
    uint64_t v43 = a3[19];
    *((unsigned char *)a1 + a3[18]) = *((unsigned char *)a2 + a3[18]);
    *((unsigned char *)a1 + v43) = *((unsigned char *)a2 + v43);
  }
  return a1;
}

uint64_t sub_1004EEB20(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CC4(*(void *)(a1 + a2[13]), *(void *)(a1 + a2[13] + 8));
  uint64_t v5 = a1 + a2[14];
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v9)((void *)(v6 - 8), v5, v6);
  uint64_t v7 = a1 + a2[15];

  return v9(v7, v6);
}

uint64_t sub_1004EEC70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v44 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v44;
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)(a1 + v14);
  uint64_t v17 = (void *)(a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)(a1 + v15);
  uint64_t v20 = (void *)(a2 + v15);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = (void *)(a1 + v22);
  Class v25 = (void *)(a2 + v22);
  uint64_t v26 = v25[1];
  void *v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = (void *)(a1 + v23);
  uint64_t v28 = (void *)(a2 + v23);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  uint64_t v30 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v30) = *(unsigned char *)(a2 + v30);
  uint64_t v31 = a3[13];
  uint64_t v32 = (uint64_t *)(a1 + v31);
  id v33 = (uint64_t *)(a2 + v31);
  uint64_t v34 = *v33;
  unint64_t v35 = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10025ADCC(v34, v35);
  *uint64_t v32 = v34;
  v32[1] = v35;
  uint64_t v36 = a3[14];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = type metadata accessor for UUID();
  uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16);
  v40(v37, v38, v39);
  v40(a1 + a3[15], a2 + a3[15], v39);
  uint64_t v41 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v41) = *(unsigned char *)(a2 + v41);
  uint64_t v42 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(unsigned char *)(a1 + v42) = *(unsigned char *)(a2 + v42);
  return a1;
}

uint64_t sub_1004EEE60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[10];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  uint64_t v25 = a3[13];
  uint64_t v26 = (uint64_t *)(a1 + v25);
  uint64_t v27 = (uint64_t *)(a2 + v25);
  uint64_t v28 = *v27;
  unint64_t v29 = v27[1];
  sub_10025ADCC(*v27, v29);
  uint64_t v30 = *v26;
  unint64_t v31 = v26[1];
  *uint64_t v26 = v28;
  v26[1] = v29;
  sub_100250CC4(v30, v31);
  uint64_t v32 = a3[14];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = type metadata accessor for UUID();
  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 24);
  v36(v33, v34, v35);
  v36(a1 + a3[15], a2 + a3[15], v35);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  return a1;
}

uint64_t sub_1004EF0C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  uint64_t v10 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  uint64_t v11 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  v15(a1 + a3[15], a2 + a3[15], v14);
  uint64_t v16 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v17 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  return a1;
}

uint64_t sub_1004EF228(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[9];
  uint64_t v28 = (void *)(a1 + v27);
  unint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  void *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[10];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (uint64_t *)(a2 + v32);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  *uint64_t v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v37) = *(unsigned char *)(a2 + v37);
  uint64_t v38 = a3[13];
  uint64_t v39 = *(void *)(a1 + v38);
  unint64_t v40 = *(void *)(a1 + v38 + 8);
  *(_OWORD *)(a1 + v38) = *(_OWORD *)(a2 + v38);
  sub_100250CC4(v39, v40);
  uint64_t v41 = a3[14];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  uint64_t v44 = type metadata accessor for UUID();
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 40);
  v45(v42, v43, v44);
  v45(a1 + a3[15], a2 + a3[15], v44);
  uint64_t v46 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v46) = *(unsigned char *)(a2 + v46);
  uint64_t v47 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(unsigned char *)(a1 + v47) = *(unsigned char *)(a2 + v47);
  return a1;
}

uint64_t sub_1004EF40C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004EF420);
}

uint64_t sub_1004EF420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for UUID();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 56);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1004EF550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004EF564);
}

uint64_t sub_1004EF564(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Date();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for UUID();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 56);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for SDNearFieldTap()
{
  uint64_t result = qword_100977218;
  if (!qword_100977218) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1004EF6E0()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for UUID();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1004EF7E8@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  id v8 = [a1 date];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  id v9 = [a1 identifier];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v13 = (int *)type metadata accessor for SDNearFieldTap();
  uint64_t v14 = (uint64_t *)(a4 + v13[5]);
  *uint64_t v14 = v10;
  v14[1] = v12;
  id v15 = [a1 contactID];
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v19 = 0;
  }
  uint64_t v20 = (uint64_t *)(a4 + v13[6]);
  *uint64_t v20 = v17;
  v20[1] = v19;
  id v21 = sub_10017EEAC(a1);
  if (v21)
  {
    uint64_t v22 = v21;
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v25 = 0;
  }
  uint64_t v26 = (uint64_t *)(a4 + v13[7]);
  *uint64_t v26 = v23;
  v26[1] = v25;
  id v27 = sub_10017EF10(a1);
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v31 = v30;
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v31 = 0;
  }
  uint64_t v32 = (uint64_t *)(a4 + v13[8]);
  *uint64_t v32 = v29;
  v32[1] = v31;
  id v33 = sub_10017EF74(a1);
  if (v33)
  {
    uint64_t v34 = v33;
    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v37 = v36;
  }
  else
  {
    uint64_t v35 = 0;
    uint64_t v37 = 0;
  }
  uint64_t v38 = (uint64_t *)(a4 + v13[9]);
  *uint64_t v38 = v35;
  v38[1] = v37;
  id v39 = [a1 applicationLabel];
  uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v42 = v41;

  uint64_t v43 = (uint64_t *)(a4 + v13[10]);
  *uint64_t v43 = v40;
  v43[1] = v42;
  *(unsigned char *)(a4 + v13[12]) = [a1 isSameAccount];
  id v44 = sub_10017EE2C(a1);
  uint64_t v45 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v47 = v46;

  uint64_t v48 = (uint64_t *)(a4 + v13[13]);
  uint64_t *v48 = v45;
  v48[1] = v47;
  id v49 = sub_10017EFD8(a1);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  *(unsigned char *)(a4 + v13[16]) = [a1 shouldForceSingleBandAWDLMode];
  if (sub_10017F06C()) {
    unsigned __int8 v50 = sub_10017F090(a1);
  }
  else {
    unsigned __int8 v50 = 2;
  }
  *(unsigned char *)(a4 + v13[17]) = v50;
  if (sub_10017F0E0()) {
    unsigned __int8 v51 = sub_10017F104(a1);
  }
  else {
    unsigned __int8 v51 = 2;
  }
  char v52 = a2 & 1;
  *(unsigned char *)(a4 + v13[18]) = v51;
  unsigned __int8 v53 = [a1 flags];

  *(unsigned char *)(a4 + v13[19]) = v53 & 1;
  *(unsigned char *)(a4 + v13[11]) = v52;
  uint64_t v54 = a4 + v13[15];
  uint64_t v55 = type metadata accessor for UUID();
  uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 32);

  return v56(v54, a3, v55);
}

uint64_t sub_1004EFB20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  __chkstk_darwin(v6);
  id v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SFAirDropClient.BoopAtADistance.ServerInfo();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  SFAirDropClient.BoopAtADistance.TapEvent.date.getter();
  uint64_t v13 = SFAirDropClient.BoopAtADistance.TapEvent.identifier.getter();
  uint64_t v15 = v14;
  uint64_t v16 = (int *)type metadata accessor for SDNearFieldTap();
  uint64_t v17 = (uint64_t *)(a3 + v16[5]);
  *uint64_t v17 = v13;
  v17[1] = v15;
  uint64_t v18 = SFAirDropClient.BoopAtADistance.TapEvent.contactID.getter();
  uint64_t v19 = (uint64_t *)(a3 + v16[6]);
  *uint64_t v19 = v18;
  v19[1] = v20;
  uint64_t v21 = SFAirDropClient.BoopAtADistance.TapEvent.deviceName.getter();
  uint64_t v22 = (uint64_t *)(a3 + v16[7]);
  uint64_t *v22 = v21;
  v22[1] = v23;
  uint64_t v24 = SFAirDropClient.BoopAtADistance.TapEvent.deviceModel.getter();
  uint64_t v25 = (uint64_t *)(a3 + v16[8]);
  uint64_t *v25 = v24;
  v25[1] = v26;
  uint64_t v27 = SFAirDropClient.BoopAtADistance.TapEvent.accountID.getter();
  uint64_t v28 = (uint64_t *)(a3 + v16[9]);
  uint64_t *v28 = v27;
  v28[1] = v29;
  uint64_t v30 = SFAirDropClient.BoopAtADistance.TapEvent.applicationLabel.getter();
  uint64_t v31 = (uint64_t *)(a3 + v16[10]);
  *uint64_t v31 = v30;
  v31[1] = v32;
  uint64_t v42 = a1;
  *(unsigned char *)(a3 + v16[11]) = (SFAirDropClient.BoopAtADistance.Transaction.isInitiator.getter() & 1) == 0;
  *(unsigned char *)(a3 + v16[12]) = SFAirDropClient.BoopAtADistance.TapEvent.isSameAccount.getter() & 1;
  SFAirDropClient.BoopAtADistance.Transaction.identifier.getter();
  SFAirDropClient.BoopAtADistance.TapEvent.remoteServerInfo.getter();
  uint64_t v33 = SFAirDropClient.BoopAtADistance.ServerInfo.publicKeyData.getter();
  uint64_t v35 = v34;
  uint64_t v36 = *(void (**)(char *, uint64_t))(v10 + 8);
  v36(v12, v9);
  uint64_t v37 = (uint64_t *)(a3 + v16[13]);
  *uint64_t v37 = v33;
  v37[1] = v35;
  SFAirDropClient.BoopAtADistance.TapEvent.remoteServerInfo.getter();
  SFAirDropClient.BoopAtADistance.ServerInfo.bonjourUUID.getter();
  v36(v12, v9);
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(a3 + v16[14], v8, v44);
  *(unsigned char *)(a3 + v16[16]) = SFAirDropClient.BoopAtADistance.TapEvent.shouldForceSingleBandAWDLMode.getter() & 1;
  *(unsigned char *)(a3 + v16[17]) = SFAirDropClient.BoopAtADistance.TapEvent.isKnownIdentity.getter() & 1;
  LOBYTE(v33) = SFAirDropClient.BoopAtADistance.TapEvent.isUnsupportedApplicationLabel.getter();
  uint64_t v38 = type metadata accessor for SFAirDropClient.BoopAtADistance.TapEvent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(a2, v38);
  uint64_t v39 = type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v42, v39);
  *(unsigned char *)(a3 + v16[18]) = v33 & 1;
  *(unsigned char *)(a3 + v16[19]) = 1;
  return result;
}

uint64_t sub_1004EFE60(uint64_t a1)
{
  uint64_t v89 = type metadata accessor for SDNearFieldTap();
  uint64_t v2 = __chkstk_darwin(v89);
  uint64_t v86 = (uint64_t)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  os_log_t v87 = (os_log_t)((char *)&v83 - v4);
  uint64_t v5 = type metadata accessor for NWEndpoint();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v83 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v83 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v83 - v16;
  sub_10032436C(a1);
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = a1;
  uint64_t v21 = a1;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v22(v17, v21, v5);
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
  }
  else
  {
    uint64_t v83 = v15;
    uint64_t v84 = v12;
    uint64_t v85 = v9;
    sub_100324384((uint64_t)v17);
    uint64_t v24 = v23;
    uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    uint64_t v25 = v6 + 8;
    uint64_t v26 = v27;
    v27((uint64_t)v17, v5);
    swift_bridgeObjectRelease();
    if (!v24)
    {
      uint64_t v89 = v25;
      uint64_t v58 = v20;
      if (qword_100969ED0 != -1) {
        swift_once();
      }
      uint64_t v59 = type metadata accessor for Logger();
      sub_10000B47C(v59, (uint64_t)qword_1009771A8);
      uint64_t v60 = (uint64_t)v83;
      v22(v83, v20, v5);
      uint64_t v61 = v84;
      v22(v84, v20, v5);
      uint64_t v62 = (uint64_t)v85;
      v22(v85, v58, v5);
      uint64_t v63 = Logger.logObject.getter();
      int v64 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v63, (os_log_type_t)v64))
      {
        os_log_t v87 = v63;
        LODWORD(v88) = v64;
        uint64_t v65 = swift_slowAlloc();
        uint64_t v92 = swift_slowAlloc();
        *(_DWORD *)uint64_t v65 = 136315650;
        unint64_t v66 = sub_10032439C(v60);
        if (v67)
        {
          unint64_t v68 = v67;
        }
        else
        {
          uint64_t v90 = 0;
          unint64_t v91 = 0xE000000000000000;
          _StringGuts.grow(_:)(17);
          swift_bridgeObjectRelease();
          unint64_t v68 = 0x80000001007B7770;
          unint64_t v66 = 0xD000000000000015;
        }
        uint64_t v73 = (uint64_t)v84;
        uint64_t v90 = (char *)sub_100254634(v66, v68, &v92);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v26(v60, v5);
        *(_WORD *)(v65 + 12) = 2080;
        unint64_t v74 = sub_10032436C(v73);
        if (v75)
        {
          unint64_t v76 = v75;
        }
        else
        {
          uint64_t v90 = 0;
          unint64_t v91 = 0xE000000000000000;
          _StringGuts.grow(_:)(17);
          swift_bridgeObjectRelease();
          unint64_t v76 = 0x80000001007B7770;
          unint64_t v74 = 0xD000000000000015;
        }
        uint64_t v90 = (char *)sub_100254634(v74, v76, &v92);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v26(v73, v5);
        *(_WORD *)(v65 + 22) = 2080;
        uint64_t v77 = (uint64_t)v85;
        unint64_t v78 = sub_100324384((uint64_t)v85);
        if (v79)
        {
          unint64_t v80 = v79;
          uint64_t v81 = v26;
        }
        else
        {
          uint64_t v81 = v26;
          uint64_t v90 = 0;
          unint64_t v91 = 0xE000000000000000;
          _StringGuts.grow(_:)(17);
          swift_bridgeObjectRelease();
          unint64_t v80 = 0x80000001007B7770;
          unint64_t v78 = 0xD000000000000015;
        }
        uint64_t v90 = (char *)sub_100254634(v78, v80, &v92);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v81(v77, v5);
        os_log_t v82 = v87;
        _os_log_impl((void *)&_mh_execute_header, v87, (os_log_type_t)v88, "SDAirDropNearFieldService Failed to get endpoint identifier from endpoint.deviceName:%s endpoint.deviceIdentifier:%s endpoint.contactID:%s ", (uint8_t *)v65, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        v26(v60, v5);
        v26((uint64_t)v61, v5);
        v26(v62, v5);
      }
      return 0;
    }
  }
  uint64_t v28 = v20;
  uint64_t v29 = sub_10032436C(v20);
  uint64_t v32 = v88;
  uint64_t v31 = v89;
  if (v30)
  {
    uint64_t v33 = v29;
    unint64_t v34 = v30;
    if (qword_100969ED0 != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    sub_10000B47C(v35, (uint64_t)qword_1009771A8);
    os_log_t v36 = v87;
    sub_1004F22BC(v32, (uint64_t)v87);
    swift_bridgeObjectRetain_n();
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v85 = (char *)swift_slowAlloc();
      uint64_t v90 = v85;
      *(_DWORD *)uint64_t v39 = 136315394;
      uint64_t v40 = (uint64_t *)((char *)v36 + *(int *)(v31 + 20));
      uint64_t v41 = v33;
      uint64_t v42 = *v40;
      unint64_t v43 = v40[1];
      swift_bridgeObjectRetain();
      uint64_t v92 = sub_100254634(v42, v43, (uint64_t *)&v90);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v33 = v41;
      swift_bridgeObjectRelease();
      sub_1004F2320((uint64_t)v36);
      *(_WORD *)(v39 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v92 = sub_100254634(v41, v34, (uint64_t *)&v90);
      uint64_t v32 = v88;
      uint64_t v31 = v89;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "SDAirDropNearFieldService Comparing tap with browser endpoint {tap: %s, endpointIdentifier: %s}", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1004F2320((uint64_t)v36);

      swift_bridgeObjectRelease_n();
    }
    uint64_t v44 = (void *)(v32 + *(int *)(v31 + 20));
    if (*v44 == v33 && v34 == v44[1]) {
      goto LABEL_31;
    }
    char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v45) {
      return 1;
    }
  }
  uint64_t v46 = sub_100324384(v28);
  if (v47)
  {
    uint64_t v48 = v46;
    unint64_t v49 = v47;
    if (qword_100969ED0 != -1) {
      swift_once();
    }
    uint64_t v50 = type metadata accessor for Logger();
    sub_10000B47C(v50, (uint64_t)qword_1009771A8);
    uint64_t v51 = v86;
    sub_1004F22BC(v32, v86);
    swift_bridgeObjectRetain_n();
    char v52 = Logger.logObject.getter();
    os_log_type_t v53 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v88 = v48;
      uint64_t v54 = swift_slowAlloc();
      uint64_t v92 = swift_slowAlloc();
      *(_DWORD *)uint64_t v54 = 136315394;
      uint64_t v55 = (uint64_t *)(v51 + *(int *)(v31 + 24));
      if (v55[1])
      {
        uint64_t v56 = *v55;
        unint64_t v57 = v55[1];
      }
      else
      {
        uint64_t v56 = 0xD000000000000015;
        uint64_t v90 = 0;
        unint64_t v91 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        unint64_t v57 = 0x80000001007B7770;
      }
      swift_bridgeObjectRetain();
      uint64_t v90 = (char *)sub_100254634(v56, v57, &v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1004F2320(v86);
      *(_WORD *)(v54 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v48 = v88;
      uint64_t v90 = (char *)sub_100254634(v88, v49, &v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "SDAirDropNearFieldService Comparing tap with browser endpoint {tap: %s, endpointContactID: %s}", (uint8_t *)v54, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v31 = v89;
    }
    else
    {
      sub_1004F2320(v51);

      swift_bridgeObjectRelease_n();
    }
    int v69 = (void *)(v32 + *(int *)(v31 + 24));
    uint64_t v70 = v69[1];
    if (v70)
    {
      if (*v69 == v48 && v70 == v49)
      {
LABEL_31:
        swift_bridgeObjectRelease();
        return 1;
      }
      char v72 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v72) {
        return 1;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

uint64_t sub_1004F08F4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_1009771A8);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_1009771A8);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void *sub_1004F09BC@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_1004F09DC()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1004F0A3C()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1004F0A8C()
{
  uint64_t v44 = type metadata accessor for OSLogDateFormatter.Style();
  uint64_t v42 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  char v2 = (char *)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for OSLogDateFormatter();
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A844(&qword_10096C618);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (int *)type metadata accessor for SDNearFieldTap();
  uint64_t v13 = v0;
  uint64_t v14 = (uint64_t *)(v0 + v12[10]);
  uint64_t v15 = (void *)v14[1];
  uint64_t v46 = *v14;
  sub_100394300();
  swift_bridgeObjectRetain();
  uint64_t v16 = (void *)static NSUserDefaults.airdrop.getter();
  SFAirDropUserDefaults.boopInteractionTypeOverride.getter();

  uint64_t v17 = type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType();
  LODWORD(v16) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v11, 1, v17);
  sub_1004F237C((uint64_t)v11);
  if (v16 != 1)
  {
    uint64_t v48 = v46;
    unint64_t v49 = (unint64_t)v15;
    v18._uint64_t countAndFlagsBits = 0x6469727265766F5BLL;
    v18._unint64_t object = (void *)0xEB000000005D6E65;
    String.append(_:)(v18);
    uint64_t v15 = (void *)v49;
    uint64_t v46 = v48;
  }
  uint64_t v48 = 0;
  unint64_t v49 = 0xE000000000000000;
  _StringGuts.grow(_:)(159);
  v19._uint64_t countAndFlagsBits = 542130516;
  v19._unint64_t object = (void *)0xE400000000000000;
  String.append(_:)(v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v13, v5);
  uint64_t v20 = v42;
  uint64_t v21 = v44;
  (*(void (**)(char *, void, uint64_t))(v42 + 104))(v2, enum case for OSLogDateFormatter.Style.timeNoTimeZone(_:), v44);
  static FormatStyle<>.oslog(_:)();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v2, v21);
  sub_1004F24D8(&qword_100977288, (void (*)(uint64_t))&type metadata accessor for OSLogDateFormatter);
  uint64_t v22 = v45;
  Date.formatted<A>(_:)();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v4, v22);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  String.append(_:)(v47);
  swift_bridgeObjectRelease();
  v23._uint64_t countAndFlagsBits = 32;
  v23._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  uint64_t v24 = (uint64_t *)(v13 + v12[5]);
  uint64_t v25 = *v24;
  uint64_t v26 = (void *)v24[1];
  swift_bridgeObjectRetain();
  v27._uint64_t countAndFlagsBits = v25;
  v27._unint64_t object = v26;
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  unint64_t v28 = 0xE500000000000000;
  v29._uint64_t countAndFlagsBits = 0x20726F6620;
  v29._unint64_t object = (void *)0xE500000000000000;
  String.append(_:)(v29);
  v30._uint64_t countAndFlagsBits = v46;
  v30._unint64_t object = v15;
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  v31._uint64_t countAndFlagsBits = 0x6F63206874697720;
  v31._unint64_t object = (void *)0xEF203A746361746ELL;
  String.append(_:)(v31);
  Swift::String v47 = *(Swift::String *)(v13 + v12[6]);
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  v32._uint64_t countAndFlagsBits = 0x203A6570797420;
  v32._unint64_t object = (void *)0xE700000000000000;
  String.append(_:)(v32);
  LOBYTE(v47._countAndFlagsBits) = *(unsigned char *)(v13 + v12[11]);
  _print_unlocked<A, B>(_:_:)();
  v33._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v33._unint64_t object = (void *)0x80000001007BFBE0;
  String.append(_:)(v33);
  type metadata accessor for UUID();
  sub_1004F24D8((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
  v34._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  v35._uint64_t countAndFlagsBits = 0xD000000000000012;
  v35._unint64_t object = (void *)0x80000001007BFC00;
  String.append(_:)(v35);
  LOBYTE(v47._countAndFlagsBits) = *(unsigned char *)(v13 + v12[17]);
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  v36._unint64_t object = (void *)0x80000001007BFC20;
  v36._uint64_t countAndFlagsBits = 0xD000000000000020;
  String.append(_:)(v36);
  LOBYTE(v47._countAndFlagsBits) = *(unsigned char *)(v13 + v12[18]);
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  v37._unint64_t object = (void *)0x80000001007BFC50;
  v37._uint64_t countAndFlagsBits = 0xD000000000000020;
  String.append(_:)(v37);
  if (*(unsigned char *)(v13 + v12[16])) {
    uint64_t v38 = 1702195828;
  }
  else {
    uint64_t v38 = 0x65736C6166;
  }
  if (*(unsigned char *)(v13 + v12[16])) {
    unint64_t v28 = 0xE400000000000000;
  }
  unint64_t v39 = v28;
  String.append(_:)(*(Swift::String *)&v38);
  swift_bridgeObjectRelease();
  return v48;
}

unint64_t sub_1004F10D8(char a1)
{
  unint64_t result = 1702125924;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x614E656369766564;
      break;
    case 4:
      unint64_t result = 0x6F4D656369766564;
      break;
    case 5:
      unint64_t result = 0x49746E756F636361;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 1701869940;
      break;
    case 8:
      unint64_t result = 0x6341656D61537369;
      break;
    case 9:
      unint64_t result = 0xD000000000000019;
      break;
    case 10:
      unint64_t result = 0xD000000000000018;
      break;
    case 11:
      unint64_t result = 0x746361736E617274;
      break;
    case 12:
    case 14:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 13:
      unint64_t result = 0x496E776F6E4B7369;
      break;
    case 15:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1004F12E4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000A844(&qword_1009772A8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  sub_1004F23DC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v13) = 0;
  type metadata accessor for Date();
  sub_1004F24D8(&qword_100975A08, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v9 = type metadata accessor for SDNearFieldTap();
  LOBYTE(v13) = 1;
  KeyedEncodingContainer.encode(_:forKey:)();
  LOBYTE(v13) = 2;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  LOBYTE(v13) = 3;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  LOBYTE(v13) = 4;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  LOBYTE(v13) = 5;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  LOBYTE(v13) = 6;
  KeyedEncodingContainer.encode(_:forKey:)();
  LOBYTE(v13) = *(unsigned char *)(v3 + *(int *)(v9 + 44));
  char v14 = 7;
  sub_1004F2484();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  LOBYTE(v13) = 8;
  KeyedEncodingContainer.encode(_:forKey:)();
  long long v13 = *(_OWORD *)(v3 + *(int *)(v9 + 52));
  char v14 = 9;
  sub_1002CC290();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  uint64_t v12 = v6;
  LOBYTE(v13) = 10;
  type metadata accessor for UUID();
  sub_1004F24D8(&qword_10096D3E8, (void (*)(uint64_t))&type metadata accessor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  LOBYTE(v13) = 11;
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  LOBYTE(v13) = 12;
  KeyedEncodingContainer.encode(_:forKey:)();
  LOBYTE(v13) = 13;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  LOBYTE(v13) = 14;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  LOBYTE(v13) = 15;
  KeyedEncodingContainer.encode(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v8, v5);
}

uint64_t sub_1004F17C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v74 = *(void *)(v4 - 8);
  uint64_t v75 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v65 - v8;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v71 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_10000A844(&qword_100977290);
  uint64_t v68 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  char v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v78 = (int *)type metadata accessor for SDNearFieldTap();
  __chkstk_darwin(v78);
  uint64_t v77 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v72 = (uint64_t)a1;
  sub_10026BB6C(a1, v16);
  sub_1004F23DC();
  int v69 = v14;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  uint64_t v70 = v10;
  if (v2)
  {
    uint64_t v76 = v2;
    LODWORD(v73) = 0;
    unsigned int v18 = 0;
  }
  else
  {
    uint64_t v65 = v7;
    unint64_t v66 = v9;
    uint64_t v17 = v68;
    LOBYTE(v79) = 0;
    sub_1004F24D8(&qword_1009759F8, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    Swift::String v31 = v77;
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v77, v12, v10);
    LOBYTE(v79) = 1;
    uint64_t v32 = KeyedDecodingContainer.decode(_:forKey:)();
    Swift::String v33 = v78;
    Swift::String v34 = (uint64_t *)&v31[v78[5]];
    uint64_t *v34 = v32;
    v34[1] = v35;
    LOBYTE(v79) = 2;
    uint64_t v36 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    Swift::String v37 = (uint64_t *)&v31[v33[6]];
    *Swift::String v37 = v36;
    v37[1] = v38;
    LOBYTE(v79) = 3;
    uint64_t v39 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v40 = (uint64_t *)&v31[v33[7]];
    *uint64_t v40 = v39;
    v40[1] = v41;
    LOBYTE(v79) = 4;
    uint64_t v42 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v43 = (uint64_t *)&v31[v33[8]];
    *uint64_t v43 = v42;
    v43[1] = v44;
    LOBYTE(v79) = 5;
    uint64_t v45 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v46 = (uint64_t *)&v31[v33[9]];
    *uint64_t v46 = v45;
    v46[1] = v47;
    LOBYTE(v79) = 6;
    uint64_t v48 = KeyedDecodingContainer.decode(_:forKey:)();
    unint64_t v49 = (uint64_t *)&v31[v33[10]];
    *unint64_t v49 = v48;
    v49[1] = v50;
    char v80 = 7;
    sub_1004F2430();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v31[v33[11]] = v79;
    LOBYTE(v79) = 8;
    v31[MEMORY[0x30]] = KeyedDecodingContainer.decode(_:forKey:)() & 1;
    char v80 = 9;
    sub_1002CC1F4();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v76 = 0;
    *(_OWORD *)&v77[v78[13]] = v79;
    LOBYTE(v79) = 10;
    sub_1004F24D8((unint64_t *)&unk_10096D3D0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v51 = v76;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v76 = v51;
    if (v51)
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v69, v73);
      LODWORD(v73) = 0;
      unsigned int v18 = 639;
    }
    else
    {
      char v52 = *(void (**)(char *, char *, uint64_t))(v74 + 32);
      v52(&v77[v78[14]], v66, v75);
      LOBYTE(v79) = 11;
      uint64_t v53 = v76;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v76 = v53;
      if (!v53)
      {
        v52(&v77[v78[15]], v65, v75);
        LOBYTE(v79) = 12;
        uint64_t v54 = v76;
        char v55 = KeyedDecodingContainer.decode(_:forKey:)();
        uint64_t v76 = v54;
        if (!v54)
        {
          v77[v78[16]] = v55 & 1;
          LOBYTE(v79) = 13;
          uint64_t v56 = v76;
          char v57 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
          uint64_t v76 = v56;
          if (!v56)
          {
            v77[v78[17]] = v57;
            LOBYTE(v79) = 14;
            uint64_t v58 = v76;
            char v59 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
            uint64_t v76 = v58;
            if (!v58)
            {
              v77[v78[18]] = v59;
              LOBYTE(v79) = 15;
              uint64_t v60 = v76;
              char v61 = KeyedDecodingContainer.decode(_:forKey:)();
              uint64_t v76 = v60;
              if (!v60)
              {
                char v62 = v61;
                (*(void (**)(char *, uint64_t))(v17 + 8))(v69, v73);
                char v63 = v62 & 1;
                uint64_t v64 = (uint64_t)v77;
                v77[v78[19]] = v63;
                sub_1004F22BC(v64, v67);
                sub_10024D338(v72);
                return sub_1004F2320(v64);
              }
            }
          }
        }
        (*(void (**)(char *, uint64_t))(v17 + 8))(v69, v73);
        sub_10024D338(v72);
        LOBYTE(v30) = 1;
        int v22 = 1;
        int v23 = 1;
        int v24 = 1;
        int v25 = 1;
        int v26 = 1;
        int v27 = 1;
        LODWORD(v73) = 1;
        LODWORD(v72) = 1;
        Swift::String v19 = v77;
        uint64_t v20 = v78;
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(v69, v73);
      unsigned int v18 = 1663;
      LODWORD(v73) = 1;
    }
  }
  Swift::String v19 = v77;
  uint64_t v20 = v78;
  uint64_t result = sub_10024D338(v72);
  int v22 = (v18 >> 2) & 1;
  int v23 = (v18 >> 3) & 1;
  int v24 = (v18 >> 4) & 1;
  int v25 = (v18 >> 5) & 1;
  int v26 = (v18 >> 6) & 1;
  int v27 = (v18 >> 9) & 1;
  if ((v18 & 1) == 0)
  {
    LODWORD(v72) = 0;
    if ((v18 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
  LODWORD(v72) = 0;
  int v30 = (v18 >> 1) & 1;
LABEL_16:
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v19, v70);
  if ((v30 & 1) == 0)
  {
LABEL_6:
    if (v22) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = swift_bridgeObjectRelease();
  if (v22)
  {
LABEL_7:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v28 = v74;
    if ((v23 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v28 = v74;
  if (!v23)
  {
LABEL_8:
    if (v24) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = swift_bridgeObjectRelease();
  if (v24)
  {
LABEL_9:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v25 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  if (!v25)
  {
LABEL_10:
    if (v26) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = swift_bridgeObjectRelease();
  if (v26)
  {
LABEL_11:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v27 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  if (!v27)
  {
LABEL_12:
    if (v73) {
      goto LABEL_13;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = sub_100250CC4(*(void *)&v19[v20[13]], *(void *)&v19[v20[13] + 8]);
  if (v73)
  {
LABEL_13:
    Swift::String v29 = *(uint64_t (**)(char *, uint64_t))(v28 + 8);
    uint64_t result = v29(&v19[v20[14]], v75);
    if ((v72 & 1) == 0) {
      return result;
    }
    return v29(&v19[v20[15]], v75);
  }
LABEL_24:
  if (!v72) {
    return result;
  }
  Swift::String v29 = *(uint64_t (**)(char *, uint64_t))(v28 + 8);
  return v29(&v19[v20[15]], v75);
}

unint64_t sub_1004F21D4()
{
  return sub_1004F10D8(*v0);
}

uint64_t sub_1004F21DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1004F2918(a1, a2);
  *a3 = result;
  return result;
}

void sub_1004F2204(unsigned char *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_1004F2210(uint64_t a1)
{
  unint64_t v2 = sub_1004F23DC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004F224C(uint64_t a1)
{
  unint64_t v2 = sub_1004F23DC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004F2288@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004F17C8(a1, a2);
}

uint64_t sub_1004F22A0(void *a1)
{
  return sub_1004F12E4(a1);
}

uint64_t sub_1004F22BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDNearFieldTap();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004F2320(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDNearFieldTap();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004F237C(uint64_t a1)
{
  uint64_t v2 = sub_10000A844(&qword_10096C618);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1004F23DC()
{
  unint64_t result = qword_100977298;
  if (!qword_100977298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100977298);
  }
  return result;
}

unint64_t sub_1004F2430()
{
  unint64_t result = qword_1009772A0;
  if (!qword_1009772A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009772A0);
  }
  return result;
}

unint64_t sub_1004F2484()
{
  unint64_t result = qword_1009772B0;
  if (!qword_1009772B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009772B0);
  }
  return result;
}

uint64_t sub_1004F24D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SDNearFieldTap.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SDNearFieldTap.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *uint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004F267CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDNearFieldTap.CodingKeys()
{
  return &type metadata for SDNearFieldTap.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SDNearFieldTapType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004F2780);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDNearFieldTapType()
{
  return &type metadata for SDNearFieldTapType;
}

unint64_t sub_1004F27BC()
{
  unint64_t result = qword_1009772B8;
  if (!qword_1009772B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009772B8);
  }
  return result;
}

unint64_t sub_1004F2814()
{
  unint64_t result = qword_1009772C0;
  if (!qword_1009772C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009772C0);
  }
  return result;
}

unint64_t sub_1004F286C()
{
  unint64_t result = qword_1009772C8;
  if (!qword_1009772C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009772C8);
  }
  return result;
}

unint64_t sub_1004F28C4()
{
  unint64_t result = qword_1009772D0;
  if (!qword_1009772D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009772D0);
  }
  return result;
}

uint64_t sub_1004F2918(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001007BFC80 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x614E656369766564 && a2 == 0xEA0000000000656DLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F4D656369766564 && a2 == 0xEB000000006C6564 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x49746E756F636361 && a2 == 0xE900000000000044 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001007BFCA0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6341656D61537369 && a2 == 0xED0000746E756F63 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001007BFCC0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001007BFCE0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xED000044496E6F69 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001007BFD00 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x496E776F6E4B7369 && a2 == 0xEF797469746E6564 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001007BFD20 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001007BFD40)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 15;
    }
    else {
      return 16;
    }
  }
}

unint64_t sub_1004F2FB0()
{
  unint64_t result = qword_1009772D8;
  if (!qword_1009772D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009772D8);
  }
  return result;
}

uint64_t sub_1004F3004(char a1)
{
  BOOL v2 = (void *)v1[3];
  if ((a1 & 1) == 0)
  {
    uint64_t isEscapingClosureAtFileLocation = v2;
    id v11 = 0;
    goto LABEL_5;
  }
  int v3 = self;
  uint64_t isEscapingClosureAtFileLocation = v2;
  id v5 = [v3 tokenForCurrentProcess];
  [v5 realToken];
  long long v19 = v23;
  *(_OWORD *)uint64_t v20 = aBlock;

  id v6 = objc_allocWithZone((Class)STActivityAttribution);
  long long aBlock = *(_OWORD *)v20;
  long long v23 = v19;
  BOOL v7 = [v6 initWithAuditToken:&aBlock];
  if (qword_100969EE0 != -1) {
    goto LABEL_7;
  }
  while (1)
  {
    int v8 = (void *)qword_100994850;
    id v9 = objc_allocWithZone((Class)STStatusItemsStatusDomainStatusItemAttribution);
    id v10 = v8;
    id v11 = [v9 initWithStatusItemIdentifier:v10 activityAttribution:v7];

LABEL_5:
    uint64_t v21 = (void *)v1[2];
    BOOL v7 = (void *)swift_allocObject();
    uint64_t v7[2] = v2;
    v7[3] = v11;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_1004F3948;
    *(void *)(v12 + 24) = v7;
    int v24 = sub_1004F3960;
    uint64_t v25 = v12;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v23 = sub_1004F37C8;
    *((void *)&v23 + 1) = &unk_1008DDDA8;
    BOOL v2 = _Block_copy(&aBlock);
    id v13 = v11;
    swift_retain();
    id v14 = (id)isEscapingClosureAtFileLocation;
    swift_release();
    uint64_t v15 = swift_allocObject();
    swift_weakInit();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v15;
    *(void *)(v16 + 24) = v11;
    int v24 = sub_1004F3A18;
    uint64_t v25 = v16;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v23 = sub_100296520;
    *((void *)&v23 + 1) = &unk_1008DDE20;
    uint64_t v1 = _Block_copy(&aBlock);
    id v17 = v13;
    swift_release();
    [v21 updateVolatileData:v2 completion:v1];

    _Block_release(v1);
    _Block_release(v2);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_7:
    swift_once();
  }
  return result;
}

uint64_t sub_1004F3344()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_1009772E0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_1009772E0);
  if (qword_100969C48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994528);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

NSString sub_1004F340C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100994850 = (uint64_t)result;
  return result;
}

id sub_1004F3444(void *a1, void *a2, void *a3, void *a4)
{
  p_inst_meths = &OBJC_PROTOCOL___NSNetServiceBrowserDelegate.inst_meths;
  if (a3)
  {
    uint64_t v8 = qword_100969ED8;
    id v9 = a3;
    if (v8 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000B47C(v10, (uint64_t)qword_1009772E0);
    id v11 = v9;
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      int v26 = (void *)swift_slowAlloc();
      *(_DWORD *)id v14 = 138412290;
      int v27 = a4;
      id v15 = v11;
      p_inst_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___NSNetServiceBrowserDelegate + 24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *int v26 = a3;

      a4 = v27;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Removing attribution: %@", v14, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    [a1 removeAttribution:v11, v26];
  }
  if (a4)
  {
    uint64_t v16 = p_inst_meths[475];
    id v17 = a4;
    if (v16 != (__objc2_meth_list *)-1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_10000B47C(v18, (uint64_t)qword_1009772E0);
    long long v19 = v17;
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      int v22 = (uint8_t *)swift_slowAlloc();
      long long v23 = (void *)swift_slowAlloc();
      *(_DWORD *)int v22 = 138412290;
      int v24 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v23 = a4;

      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Adding attribution: %@", v22, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v20 = v19;
    }

    [a1 addAttribution:v19];
  }
  return [a2 setUserInitiated:1];
}

void sub_1004F37C8(uint64_t a1, void *a2, void *a3)
{
  unsigned int v4 = *(void (**)(id, id))(a1 + 32);
  id v6 = a2;
  id v5 = a3;
  v4(v6, v5);
}

void sub_1004F3834(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    unsigned int v4 = *(void **)(Strong + 24);
    *(void *)(Strong + 24) = a2;
    id v5 = a2;
    swift_release();
  }
}

uint64_t sub_1004F38A4()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDTempPairingStatusItemController()
{
  return self;
}

uint64_t sub_1004F3908()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1004F3948(void *a1, void *a2)
{
  return sub_1004F3444(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1004F3950()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004F3960()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1004F3988(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1004F3998()
{
  return swift_release();
}

uint64_t sub_1004F39A0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004F39D8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1004F3A18()
{
  sub_1004F3834(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1004F3A28()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_1009773A0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_1009773A0);
  if (qword_100969CD8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946D8);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1004F3AF0(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  type metadata accessor for __DataStorage();
  swift_allocObject();
  v12[0] = 0x2000000000;
  v12[1] = __DataStorage.init(length:)() | 0x4000000000000000;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      swift_retain();
      sub_1004F5F4C((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, v2, v12);
      sub_100250CC4(a1, a2);
      break;
    case 2uLL:
      uint64_t v7 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      sub_1004F5F4C(v8, v9, v7, v3, v12);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(v11, 0, 14);
      id v6 = (char *)v11;
      goto LABEL_7;
    default:
      v11[0] = a1;
      LOWORD(v11[1]) = a2;
      BYTE2(v11[1]) = BYTE2(a2);
      BYTE3(v11[1]) = BYTE3(a2);
      BYTE4(v11[1]) = BYTE4(a2);
      BYTE5(v11[1]) = BYTE5(a2);
      id v6 = (char *)v11 + BYTE6(a2);
LABEL_7:
      sub_1004F4900((uint64_t)v11, (uint64_t)v6, v2, v12);
      break;
  }
  return v12[0];
}

unint64_t sub_1004F3CF0()
{
  return sub_1004F3D28(0xD00000000000002CLL, 0x80000001007B8F00);
}

unint64_t sub_1004F3D0C()
{
  return sub_1004F3D28(0xD00000000000002ALL, 0x80000001007C0200);
}

unint64_t sub_1004F3D28(uint64_t a1, uint64_t a2)
{
  sub_10000A844(&qword_10096EA38);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007706B0;
  *(void *)(inited + 32) = kSecClass;
  type metadata accessor for CFString(0);
  *(void *)(inited + 40) = kSecClassGenericPassword;
  *(void *)(inited + 64) = v6;
  *(void *)(inited + 72) = kSecAttrAccessGroup;
  *(void *)(inited + 80) = 0xD00000000000001BLL;
  *(void *)(inited + 88) = 0x80000001007B6520;
  *(void *)(inited + 104) = &type metadata for String;
  *(void *)(inited + 112) = kSecAttrAccount;
  *(void *)(inited + 120) = a1;
  *(void *)(inited + 128) = a2;
  *(void *)(inited + 144) = &type metadata for String;
  *(void *)(inited + 152) = kSecAttrService;
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + 24);
  *(void *)(inited + 160) = v7;
  *(void *)(inited + 168) = v8;
  *(void *)(inited + 184) = &type metadata for String;
  *(void *)(inited + 192) = kSecUseDataProtectionKeychain;
  *(void *)(inited + 224) = &type metadata for Bool;
  *(unsigned char *)(inited + 200) = 1;
  CFStringRef v9 = (id)kSecClass;
  CFStringRef v10 = (id)kSecClassGenericPassword;
  CFStringRef v11 = (id)kSecAttrAccessGroup;
  CFStringRef v12 = (id)kSecAttrAccount;
  CFStringRef v13 = (id)kSecAttrService;
  swift_bridgeObjectRetain();
  CFStringRef v14 = (id)kSecUseDataProtectionKeychain;
  return sub_1002464E0(inited);
}

void *sub_1004F3E6C()
{
  NSString result = (void *)String.utf8CString.getter();
  off_1009773B8 = result;
  return result;
}

void *sub_1004F3EAC()
{
  NSString result = (void *)String.utf8CString.getter();
  off_1009773C0 = result;
  return result;
}

void sub_1004F3EEC()
{
  sub_1004F3CF0();
  type metadata accessor for CFString(0);
  sub_1004F67EC((unint64_t *)&qword_10096AE70, type metadata accessor for CFString);
  CFDictionaryRef isa = Dictionary._bridgeToObjectiveC()().super.isa;
  OSStatus v1 = SecItemDelete(isa);

  if (v1)
  {
    if (qword_100969EE8 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000B47C(v2, (uint64_t)qword_1009773A0);
    swift_bridgeObjectRetain();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = swift_slowAlloc();
      uint64_t v6 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 138412546;
      Class v7 = Dictionary._bridgeToObjectiveC()().super.isa;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v6 = v7;
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v5 + 12) = 1024;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to delete keychain item: %@, error: %d", (uint8_t *)v5, 0x12u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1004F4160(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  sub_10025ADCC(a1, a2);
  sub_1004F6400(a1, a2);
  sub_100250CC4(a1, a2);
  uint64_t v6 = v2[7];
  if (v6)
  {
    uint64_t v7 = v3[6];
    sub_10000A844(&qword_10096EA38);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100771F40;
    *(void *)(inited + 32) = kSecValueData;
    *(void *)(inited + 40) = a1;
    *(void *)(inited + 48) = a2;
    *(void *)(inited + 64) = &type metadata for Data;
    *(void *)(inited + 72) = kSecAttrAccessible;
    *(void *)(inited + 80) = v7;
    *(void *)(inited + 88) = v6;
    *(void *)(inited + 104) = &type metadata for String;
    *(void *)(inited + 112) = kSecAttrLabel;
    CFStringRef v9 = (void *)v3[3];
    uint64_t v19 = v3[2];
    sub_10025ADCC(a1, a2);
    swift_bridgeObjectRetain();
    CFStringRef v10 = (id)kSecValueData;
    CFStringRef v11 = (id)kSecAttrAccessible;
    CFStringRef v12 = (id)kSecAttrLabel;
    swift_bridgeObjectRetain();
    v13._uint64_t countAndFlagsBits = v19;
    v13._unint64_t object = v9;
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    *(void *)(inited + 120) = 0x3A676E69676E6172;
    *(void *)(inited + 128) = 0xE900000000000020;
    *(void *)(inited + 144) = &type metadata for String;
    *(void *)(inited + 152) = kSecAttrIsInvisible;
    *(void *)(inited + 184) = &type metadata for Bool;
    *(unsigned char *)(inited + 160) = 1;
    CFStringRef v14 = (id)kSecAttrIsInvisible;
    unint64_t v15 = sub_1002464E0(inited);
    unint64_t v16 = sub_1004F3CF0();
    sub_10024BE80(v16, v15);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v18 = 10;
    *(void *)(v18 + 8) = 0xD00000000000002CLL;
    *(void *)(v18 + 16) = 0x80000001007C01D0;
    return swift_willThrow();
  }
}

void sub_1004F4374(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 + 96);
  unint64_t v5 = *(void *)(v2 + 104);
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  sub_10025ADCC(a1, a2);
  sub_100250CB0(v4, v5);
  id v6 = [objc_allocWithZone((Class)SDAutoUnlockEscrowSecretInfo) init];
  if (v6)
  {
    uint64_t v7 = v6;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v7 setSecret:isa];

    id v9 = [v7 data];
    if (v9)
    {
      CFStringRef v10 = v9;
      uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v13 = v12;
      unint64_t v26 = v12;

      sub_10000A844(&qword_10096EA38);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1007709D0;
      *(void *)(inited + 32) = kSecValueData;
      *(void *)(inited + 40) = v11;
      *(void *)(inited + 48) = v13;
      *(void *)(inited + 64) = &type metadata for Data;
      *(void *)(inited + 72) = kSecAttrAccessible;
      type metadata accessor for CFString(0);
      *(void *)(inited + 80) = kSecAttrAccessibleAfterFirstUnlock;
      *(void *)(inited + 104) = v15;
      *(void *)(inited + 112) = kSecAttrLabel;
      unint64_t v16 = *(void **)(v3 + 24);
      uint64_t v27 = *(void *)(v3 + 16);
      CFStringRef v17 = (id)kSecValueData;
      sub_10025ADCC(v11, v26);
      CFStringRef v18 = (id)kSecAttrAccessible;
      CFStringRef v19 = (id)kSecAttrAccessibleAfterFirstUnlock;
      CFStringRef v20 = (id)kSecAttrLabel;
      swift_bridgeObjectRetain();
      v21._uint64_t countAndFlagsBits = v27;
      v21._unint64_t object = v16;
      String.append(_:)(v21);
      swift_bridgeObjectRelease();
      *(void *)(inited + 144) = &type metadata for String;
      *(void *)(inited + 120) = 0x203A776F72637365;
      *(void *)(inited + 128) = 0xE800000000000000;
      unint64_t v22 = sub_1002464E0(inited);
      unint64_t v23 = sub_1004F3D0C();
      sub_10024BE80(v23, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100250CC4(v11, v26);
    }
    else
    {
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v25 = 10;
      *(void *)(v25 + 8) = 0xD000000000000036;
      *(void *)(v25 + 16) = 0x80000001007C0190;
      swift_willThrow();
    }
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v24 = 10;
    *(void *)(v24 + 8) = 0xD00000000000002DLL;
    *(void *)(v24 + 16) = 0x80000001007C0160;
    swift_willThrow();
  }
}

void sub_1004F4640()
{
  uint64_t v1 = v0;
  uint64_t v2 = (const void *)sub_1004F3D0C();
  uint64_t v3 = sub_10024CD18(v2);
  unint64_t v5 = v4;
  swift_bridgeObjectRelease();
  if (v5 >> 60 == 15)
  {
    Class isa = 0;
  }
  else
  {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100250CB0(v3, v5);
  }
  id v21 = [objc_allocWithZone((Class)SDAutoUnlockEscrowSecretInfo) initWithData:isa];

  if (v21 && (id v7 = [v21 secret]) != 0)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    unint64_t v11 = 0xF000000000000000;
  }
  uint64_t v12 = *(void *)(v1 + 96);
  unint64_t v13 = *(void *)(v1 + 104);
  *(void *)(v1 + 96) = v9;
  *(void *)(v1 + 104) = v11;
  sub_100250CB0(v12, v13);
  if (qword_100969EE8 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_10000B47C(v14, (uint64_t)qword_1009773A0);
  swift_retain_n();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    CFStringRef v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)CFStringRef v17 = 136315138;
    uint64_t v22 = v18;
    sub_100278C78(*(void *)(v1 + 96), *(void *)(v1 + 104));
    sub_10000A844(&qword_10096B260);
    uint64_t v19 = String.init<A>(describing:)();
    sub_100254634(v19, v20, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Loaded escrow: %s", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

void sub_1004F4900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (qword_100969EF8 != -1) {
    swift_once();
  }
  if (qword_100969EF0 != -1) {
    swift_once();
  }
  sub_1004F5FF8(a4);
}

uint64_t sub_1004F49E8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CC4(*(void *)(v0 + 64), *(void *)(v0 + 72));
  sub_100250CB0(*(void *)(v0 + 80), *(void *)(v0 + 88));
  sub_100250CB0(*(void *)(v0 + 96), *(void *)(v0 + 104));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000A7E8(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDate, (uint64_t *)&unk_100975040);
  sub_10000A7E8(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID, &qword_100974EA0);
  sub_10000A7E8(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionStartDate, (uint64_t *)&unk_100975040);
  sub_10000A7E8(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationSessionID, &qword_100974EA0);
  sub_10000A7E8(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationStartDate, (uint64_t *)&unk_100975040);
  sub_100250CB0(*(void *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_sessionKey), *(void *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_sessionKey + 8));
  return v0;
}

uint64_t sub_1004F4AD8()
{
  sub_1004F49E8();

  return swift_deallocClassInstance();
}

uint64_t sub_1004F4B30()
{
  return _s9RemoteLTKCMa();
}

uint64_t _s9RemoteLTKCMa()
{
  uint64_t result = qword_1009773F8;
  if (!qword_1009773F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1004F4B84()
{
  sub_1004F4CCC(319, (unint64_t *)&qword_100973960, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F)
  {
    sub_1004F4CCC(319, (unint64_t *)&qword_10096C2B0, (void (*)(uint64_t))&type metadata accessor for UUID);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1004F4CCC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1004F4D20()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_10000A844(&qword_100974EA0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v98 = (uint64_t)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v6 = (char *)&v92 - v5;
  uint64_t v101 = type metadata accessor for UUID();
  uint64_t v100 = *(void *)(v101 - 8);
  uint64_t v7 = __chkstk_darwin(v101);
  uint64_t v96 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v94 = (char *)&v92 - v9;
  uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v99 = (uint64_t)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v97 = (uint64_t)&v92 - v14;
  __chkstk_darwin(v13);
  os_log_type_t v16 = (char *)&v92 - v15;
  uint64_t v104 = type metadata accessor for Date();
  uint64_t v17 = *(void *)(v104 - 8);
  uint64_t v18 = __chkstk_darwin(v104);
  unint64_t v20 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v95 = (char *)&v92 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v92 - v23;
  v110._uint64_t countAndFlagsBits = 0;
  v110._unint64_t object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(44);
  swift_bridgeObjectRelease();
  v110._uint64_t countAndFlagsBits = 0xD000000000000015;
  v110._unint64_t object = (void *)0x80000001007BFFF0;
  uint64_t v25 = v0[2];
  unint64_t v26 = (void *)v0[3];
  swift_bridgeObjectRetain();
  v27._uint64_t countAndFlagsBits = v25;
  v27._unint64_t object = v26;
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  v28._uint64_t countAndFlagsBits = 0xD000000000000013;
  v28._unint64_t object = (void *)0x80000001007C0010;
  String.append(_:)(v28);
  uint64_t v29 = v0[8];
  unint64_t v30 = v0[9];
  uint64_t v31 = 0;
  switch(v30 >> 62)
  {
    case 1uLL:
      LODWORD(v31) = HIDWORD(v29) - v29;
      if (__OFSUB__(HIDWORD(v29), v29))
      {
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
        JUMPOUT(0x1004F5B90);
      }
      uint64_t v31 = (int)v31;
LABEL_6:
      os_log_type_t v93 = v20;
      uint64_t v103 = v17;
      v109._uint64_t countAndFlagsBits = v31;
      v36._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v36);
      swift_bridgeObjectRelease();
      Swift::String v111 = v110;
      v110._uint64_t countAndFlagsBits = 0;
      v110._unint64_t object = (void *)0xE000000000000000;
      _StringGuts.grow(_:)(18);
      swift_bridgeObjectRelease();
      v110._uint64_t countAndFlagsBits = 0xD000000000000010;
      v110._unint64_t object = (void *)0x80000001007C0030;
      uint64_t v37 = v0[4];
      uint64_t v38 = (void *)v0[5];
      swift_bridgeObjectRetain();
      v39._uint64_t countAndFlagsBits = v37;
      v39._unint64_t object = v38;
      String.append(_:)(v39);
      swift_bridgeObjectRelease();
      String.append(_:)(v110);
      swift_bridgeObjectRelease();
      v110._uint64_t countAndFlagsBits = 0;
      v110._unint64_t object = (void *)0xE000000000000000;
      _StringGuts.grow(_:)(45);
      v40._unint64_t object = (void *)0x80000001007C0050;
      v40._uint64_t countAndFlagsBits = 0xD000000000000010;
      String.append(_:)(v40);
      uint64_t v41 = 0;
      unint64_t v42 = v0[11];
      if (v42 >> 60 != 15)
      {
        uint64_t v47 = v1[10];
        switch(v42 >> 62)
        {
          case 1uLL:
            LODWORD(v41) = HIDWORD(v47) - v47;
            if (__OFSUB__(HIDWORD(v47), v47)) {
              goto LABEL_51;
            }
            uint64_t v41 = (int)v41;
            break;
          case 2uLL:
            uint64_t v50 = *(void *)(v47 + 16);
            uint64_t v49 = *(void *)(v47 + 24);
            BOOL v35 = __OFSUB__(v49, v50);
            uint64_t v41 = v49 - v50;
            if (!v35) {
              break;
            }
            __break(1u);
LABEL_18:
            sub_100250CB0(v47, v42);
            uint64_t v41 = 0;
            break;
          case 3uLL:
            goto LABEL_18;
          default:
            sub_100250CB0(v47, v1[11]);
            uint64_t v41 = BYTE6(v42);
            break;
        }
      }
      v109._uint64_t countAndFlagsBits = v41;
      LOBYTE(v109._object) = v42 >> 60 == 15;
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      v43._uint64_t countAndFlagsBits = 0x53776F7263736520;
      v43._unint64_t object = (void *)0xEC0000003D657A69;
      String.append(_:)(v43);
      unint64_t v44 = v1[13];
      if (v44 >> 60 == 15)
      {
        uint64_t v45 = 0;
        uint64_t v46 = v103;
      }
      else
      {
        uint64_t v48 = v1[12];
        uint64_t v46 = v103;
        switch(v44 >> 62)
        {
          case 1uLL:
            LODWORD(v45) = HIDWORD(v48) - v48;
            if (__OFSUB__(HIDWORD(v48), v48)) {
              goto LABEL_52;
            }
            uint64_t v45 = (int)v45;
            break;
          case 2uLL:
            uint64_t v52 = *(void *)(v48 + 16);
            uint64_t v51 = *(void *)(v48 + 24);
            BOOL v35 = __OFSUB__(v51, v52);
            uint64_t v45 = v51 - v52;
            if (!v35) {
              break;
            }
            __break(1u);
LABEL_24:
            sub_100250CB0(v48, v44);
            uint64_t v45 = 0;
            break;
          case 3uLL:
            goto LABEL_24;
          default:
            sub_100250CB0(v48, v1[13]);
            uint64_t v45 = BYTE6(v44);
            break;
        }
      }
      v109._uint64_t countAndFlagsBits = v45;
      LOBYTE(v109._object) = v44 >> 60 == 15;
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      v53._uint64_t countAndFlagsBits = 0x676E697269617020;
      v53._unint64_t object = (void *)0xEB000000003D4449;
      String.append(_:)(v53);
      Swift::String v109 = (Swift::String)*((_OWORD *)v1 + 7);
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      String.append(_:)(v110);
      swift_bridgeObjectRelease();
      uint64_t v54 = (void *)v1[17];
      if (v54)
      {
        uint64_t v55 = v1[16];
        v110._uint64_t countAndFlagsBits = 0;
        v110._unint64_t object = (void *)0xE000000000000000;
        swift_bridgeObjectRetain();
        _StringGuts.grow(_:)(18);
        swift_bridgeObjectRelease();
        v110._uint64_t countAndFlagsBits = 0xD000000000000010;
        v110._unint64_t object = (void *)0x80000001007C0140;
        v56._uint64_t countAndFlagsBits = v55;
        v56._unint64_t object = v54;
        String.append(_:)(v56);
        swift_bridgeObjectRelease();
        String.append(_:)(v110);
        swift_bridgeObjectRelease();
      }
      uint64_t v57 = (uint64_t)v1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDate;
      swift_beginAccess();
      sub_10024A330(v57, (uint64_t)v16, (uint64_t *)&unk_100975040);
      uint64_t v58 = v104;
      uint64_t v102 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
      if (v102(v16, 1, v104) == 1)
      {
        sub_10000A7E8((uint64_t)v16, (uint64_t *)&unk_100975040);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v24, v16, v58);
        v109._uint64_t countAndFlagsBits = 0;
        v109._unint64_t object = (void *)0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease();
        v109._uint64_t countAndFlagsBits = 0xD000000000000012;
        v109._unint64_t object = (void *)0x80000001007C0120;
        sub_1004F67EC(&qword_100974530, (void (*)(uint64_t))&type metadata accessor for Date);
        v59._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v59);
        swift_bridgeObjectRelease();
        String.append(_:)(v109);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v24, v58);
      }
      v109._uint64_t countAndFlagsBits = 0;
      v109._unint64_t object = (void *)0xE000000000000000;
      _StringGuts.grow(_:)(36);
      swift_bridgeObjectRelease();
      v109._uint64_t countAndFlagsBits = 0xD000000000000022;
      v109._unint64_t object = (void *)0x80000001007C0070;
      if (*((unsigned char *)v1
           + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDateAsUnlockDate))
        uint64_t v60 = 1702195828;
      else {
        uint64_t v60 = 0x65736C6166;
      }
      if (*((unsigned char *)v1
           + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDateAsUnlockDate))
        unint64_t v61 = 0xE400000000000000;
      else {
        unint64_t v61 = 0xE500000000000000;
      }
      unint64_t v62 = v61;
      String.append(_:)(*(Swift::String *)&v60);
      swift_bridgeObjectRelease();
      String.append(_:)(v109);
      swift_bridgeObjectRelease();
      uint64_t v63 = (uint64_t)v1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID;
      swift_beginAccess();
      uint64_t v64 = v63;
      uint64_t v65 = v6;
      sub_10024A330(v64, (uint64_t)v6, &qword_100974EA0);
      uint64_t v66 = v100;
      uint64_t v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48);
      uint64_t v68 = v101;
      if (v67(v6, 1, v101) == 1)
      {
        sub_10000A7E8((uint64_t)v6, &qword_100974EA0);
      }
      else
      {
        int v69 = v94;
        (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v94, v65, v68);
        v108._uint64_t countAndFlagsBits = 0;
        v108._unint64_t object = (void *)0xE000000000000000;
        _StringGuts.grow(_:)(19);
        swift_bridgeObjectRelease();
        v108._uint64_t countAndFlagsBits = 0xD000000000000011;
        v108._unint64_t object = (void *)0x80000001007C0100;
        sub_1004F67EC((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
        v70._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v70);
        swift_bridgeObjectRelease();
        String.append(_:)(v108);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v69, v68);
      }
      uint64_t v71 = (uint64_t)v1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionStartDate;
      swift_beginAccess();
      uint64_t v72 = v71;
      uint64_t v73 = v97;
      sub_10024A330(v72, v97, (uint64_t *)&unk_100975040);
      uint64_t v74 = v104;
      if (v102((char *)v73, 1, v104) == 1)
      {
        sub_10000A7E8(v73, (uint64_t *)&unk_100975040);
      }
      else
      {
        uint64_t v75 = v103;
        uint64_t v76 = v95;
        (*(void (**)(char *, uint64_t, uint64_t))(v103 + 32))(v95, v73, v74);
        v107._uint64_t countAndFlagsBits = 0;
        v107._unint64_t object = (void *)0xE000000000000000;
        _StringGuts.grow(_:)(26);
        swift_bridgeObjectRelease();
        v107._uint64_t countAndFlagsBits = 0xD000000000000018;
        v107._unint64_t object = (void *)0x80000001007C00E0;
        sub_1004F67EC(&qword_100974530, (void (*)(uint64_t))&type metadata accessor for Date);
        v77._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v77);
        swift_bridgeObjectRelease();
        String.append(_:)(v107);
        swift_bridgeObjectRelease();
        uint64_t v78 = v75;
        uint64_t v68 = v101;
        (*(void (**)(char *, uint64_t))(v78 + 8))(v76, v74);
      }
      uint64_t v79 = (uint64_t)v1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationSessionID;
      swift_beginAccess();
      uint64_t v80 = v79;
      uint64_t v81 = v98;
      sub_10024A330(v80, v98, &qword_100974EA0);
      if (v67((char *)v81, 1, v68) == 1)
      {
        sub_10000A7E8(v81, &qword_100974EA0);
      }
      else
      {
        uint64_t v82 = v100;
        uint64_t v83 = v96;
        (*(void (**)(char *, uint64_t, uint64_t))(v100 + 32))(v96, v81, v68);
        v106._uint64_t countAndFlagsBits = 0;
        v106._unint64_t object = (void *)0xE000000000000000;
        _StringGuts.grow(_:)(25);
        swift_bridgeObjectRelease();
        v106._uint64_t countAndFlagsBits = 0xD000000000000017;
        v106._unint64_t object = (void *)0x80000001007C00C0;
        sub_1004F67EC((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
        v84._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v84);
        swift_bridgeObjectRelease();
        String.append(_:)(v106);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v68);
      }
      uint64_t v85 = (uint64_t)v1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationStartDate;
      swift_beginAccess();
      uint64_t v86 = v85;
      uint64_t v87 = v99;
      sub_10024A330(v86, v99, (uint64_t *)&unk_100975040);
      if (v102((char *)v87, 1, v74) == 1)
      {
        sub_10000A7E8(v87, (uint64_t *)&unk_100975040);
      }
      else
      {
        uint64_t v88 = v103;
        uint64_t v89 = v93;
        (*(void (**)(char *, uint64_t, uint64_t))(v103 + 32))(v93, v87, v74);
        v105._uint64_t countAndFlagsBits = 0;
        v105._unint64_t object = (void *)0xE000000000000000;
        _StringGuts.grow(_:)(25);
        swift_bridgeObjectRelease();
        v105._uint64_t countAndFlagsBits = 0xD000000000000017;
        v105._unint64_t object = (void *)0x80000001007C00A0;
        sub_1004F67EC(&qword_100974530, (void (*)(uint64_t))&type metadata accessor for Date);
        v90._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v90);
        swift_bridgeObjectRelease();
        String.append(_:)(v105);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v88 + 8))(v89, v74);
      }
      return v111._countAndFlagsBits;
    case 2uLL:
      uint64_t v34 = v29 + 16;
      uint64_t v33 = *(void *)(v29 + 16);
      uint64_t v32 = *(void *)(v34 + 8);
      BOOL v35 = __OFSUB__(v32, v33);
      uint64_t v31 = v32 - v33;
      if (!v35) {
        goto LABEL_6;
      }
      goto LABEL_50;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v31 = BYTE6(v30);
      goto LABEL_6;
  }
}

uint64_t sub_1004F5BC0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000A844(&qword_100977660);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10026BB6C(a1, a1[3]);
  sub_1004F7198();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v11) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    long long v11 = *(_OWORD *)(v3 + 32);
    v10[15] = 2;
    sub_1002CC290();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v11) = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1004F5D88()
{
  return sub_1004F4D20();
}

uint64_t sub_1004F5DAC()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4449656369766564;
      break;
    case 2:
      uint64_t result = 0x654B64656E676973;
      break;
    case 3:
      uint64_t result = 0x49676E6972696170;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1004F5E50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1004F6C18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004F5E78(uint64_t a1)
{
  unint64_t v2 = sub_1004F7198();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004F5EB4(uint64_t a1)
{
  unint64_t v2 = sub_1004F7198();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_1004F5EF0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1004F6E10(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1004F5F34(void *a1)
{
  return sub_1004F5BC0(a1);
}

void sub_1004F5F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = __DataStorage._bytes.getter();
  if (v9)
  {
    uint64_t v10 = __DataStorage._offset.getter();
    if (__OFSUB__(a1, v10))
    {
LABEL_13:
      __break(1u);
      return;
    }
    v9 += a1 - v10;
  }
  BOOL v11 = __OFSUB__(a2, a1);
  uint64_t v12 = a2 - a1;
  if (v11)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v13 = __DataStorage._length.getter();
  if (v13 >= v12) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v13;
  }
  uint64_t v15 = v9 + v14;
  if (v9) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = 0;
  }
  sub_1004F4900(v9, v16, a4, a5);
}

void sub_1004F5FF8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v1 = a1[1];
  switch(v1 >> 62)
  {
    case 1uLL:
      *(void *)&long long v9 = *a1;
      *((void *)&v9 + 1) = v1 & 0x3FFFFFFFFFFFFFFFLL;
      sub_1004F6304((int *)&v9);
      uint64_t v4 = v9;
      unint64_t v5 = *((void *)&v9 + 1) | 0x4000000000000000;
      goto LABEL_4;
    case 2uLL:
      *(void *)&long long v9 = *a1;
      *((void *)&v9 + 1) = v1 & 0x3FFFFFFFFFFFFFFFLL;
      Data.LargeSlice.ensureUniqueReference()();
      uint64_t v6 = *((void *)&v9 + 1);
      uint64_t v7 = *(void *)(v9 + 16);
      uint64_t v8 = *(void *)(v9 + 24);
      if (!__DataStorage._bytes.getter())
      {
        __break(1u);
        JUMPOUT(0x1004F62F4);
      }
      if (__OFSUB__(v7, __DataStorage._offset.getter()))
      {
        __break(1u);
LABEL_11:
        __break(1u);
      }
      if (__OFSUB__(v8, v7)) {
        goto LABEL_11;
      }
      __DataStorage._length.getter();
      CryptoHKDF();
      *a1 = v9;
      a1[1] = v6 | 0x8000000000000000;
      return;
    case 3uLL:
      *(void *)((char *)&v9 + 7) = 0;
      *(void *)&long long v9 = 0;
      CryptoHKDF();
      return;
    default:
      LOWORD(v9) = *a1;
      BYTE2(v9) = BYTE2(v2);
      BYTE3(v9) = BYTE3(v2);
      BYTE4(v9) = BYTE4(v2);
      BYTE5(v9) = BYTE5(v2);
      BYTE6(v9) = BYTE6(v2);
      BYTE7(v9) = HIBYTE(v2);
      WORD4(v9) = v1;
      BYTE10(v9) = BYTE2(v1);
      BYTE11(v9) = BYTE3(v1);
      BYTE12(v9) = BYTE4(v1);
      BYTE13(v9) = BYTE5(v1);
      BYTE14(v9) = BYTE6(v1);
      CryptoHKDF();
      uint64_t v4 = v9;
      unint64_t v5 = DWORD2(v9) | ((unint64_t)BYTE12(v9) << 32) | ((unint64_t)BYTE13(v9) << 40) | ((unint64_t)BYTE14(v9) << 48);
LABEL_4:
      *a1 = v4;
      a1[1] = v5;
      return;
  }
}

void sub_1004F6304(int *a1)
{
  Data.InlineSlice.ensureUniqueReference()();
  uint64_t v2 = *a1;
  if (a1[1] < (int)v2)
  {
    __break(1u);
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (__DataStorage._bytes.getter())
  {
    if (!__OFSUB__(v2, __DataStorage._offset.getter()))
    {
      __DataStorage._length.getter();
      CryptoHKDF();
      return;
    }
    goto LABEL_6;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_1004F6400(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 + 80);
  unint64_t v5 = *(void *)(v2 + 88);
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  sub_100278C78(a1, a2);
  sub_100250CB0(v4, v5);
  uint64_t v7 = *(void *)(v2 + 80);
  unint64_t v6 = *(void *)(v2 + 88);
  if (v6 >> 60 == 15)
  {
    uint64_t v8 = (uint64_t *)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_sessionKey);
    uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_sessionKey);
    unint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_sessionKey + 8);
    *uint64_t v8 = v7;
    v8[1] = v6;
  }
  else
  {
    sub_10025ADCC(*(void *)(v2 + 80), *(void *)(v2 + 88));
    uint64_t v11 = sub_1004F3AF0(v7, v6);
    uint64_t v13 = v12;
    sub_100250CB0(v7, v6);
    uint64_t v14 = (uint64_t *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_sessionKey);
    uint64_t v9 = *(void *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_sessionKey);
    unint64_t v10 = *(void *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_sessionKey + 8);
    *uint64_t v14 = v11;
    v14[1] = v13;
  }

  return sub_100250CB0(v9, v10);
}

uint64_t sub_1004F64E8(long long *a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)(v3 + 80) = xmmword_100770AE0;
  *(_OWORD *)(v3 + 96) = xmmword_100770AE0;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  uint64_t v5 = v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDate;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  *(unsigned char *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDateAsUnlockDate) = 0;
  uint64_t v8 = v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID;
  uint64_t v9 = type metadata accessor for UUID();
  unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  v7(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionStartDate, 1, 1, v6);
  v10(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationSessionID, 1, 1, v9);
  v7(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationStartDate, 1, 1, v6);
  *(_OWORD *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_sessionKey) = xmmword_100770AE0;
  long long v11 = a1[1];
  long long v22 = *a1;
  long long v21 = v11;
  *(_OWORD *)(v3 + 16) = v22;
  *(_OWORD *)(v3 + 32) = v11;
  sub_1004F6728((uint64_t)(a1 + 3), (uint64_t)v20);
  sub_1004F6728((uint64_t)v20, v3 + 112);
  sub_1004F6790((uint64_t)&v22);
  sub_1004F6790((uint64_t)&v21);
  sub_1004F6790((uint64_t)v20);
  swift_bridgeObjectRelease();
  long long v19 = a1[2];
  *(_OWORD *)(v3 + 64) = v19;
  *(void *)(v3 + 48) = a2;
  *(void *)(v3 + 56) = a3;
  sub_1004F67BC((uint64_t)&v19);
  sub_1004F4640();
  uint64_t v12 = (const void *)sub_1004F3CF0();
  uint64_t v13 = sub_10024CD18(v12);
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();
  sub_1004F6400(v13, v15);
  sub_100250CB0(v13, v15);
  return v3;
}

uint64_t sub_1004F6728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_10096B540);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004F6790(uint64_t a1)
{
  return a1;
}

uint64_t sub_1004F67BC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1004F67EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s9RemoteLTKC18FileRepresentationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CC4(*(void *)(a1 + 32), *(void *)(a1 + 40));

  return swift_bridgeObjectRelease();
}

void *_s9RemoteLTKC18FileRepresentationVwcp(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[4];
  unint64_t v7 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10025ADCC(v6, v7);
  a1[4] = v6;
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  swift_bridgeObjectRetain();
  return a1;
}

void *_s9RemoteLTKC18FileRepresentationVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[4];
  unint64_t v5 = a2[5];
  sub_10025ADCC(v4, v5);
  uint64_t v6 = a1[4];
  unint64_t v7 = a1[5];
  a1[4] = v4;
  a1[5] = v5;
  sub_100250CC4(v6, v7);
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s9RemoteLTKC18FileRepresentationVwta(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a1[4];
  unint64_t v7 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  sub_100250CC4(v6, v7);
  uint64_t v8 = *(void *)(a2 + 56);
  a1[6] = *(void *)(a2 + 48);
  a1[7] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s9RemoteLTKC18FileRepresentationVMa()
{
  return &_s9RemoteLTKC18FileRepresentationVN;
}

uint64_t sub_1004F6A18(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_OWORD *)(v8 + 80) = xmmword_100770AE0;
  *(_OWORD *)(v8 + 96) = xmmword_100770AE0;
  *(_OWORD *)(v8 + 112) = 0u;
  *(_OWORD *)(v8 + 128) = 0u;
  uint64_t v11 = v8 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDate;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  v13(v11, 1, 1, v12);
  *(unsigned char *)(v8 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDateAsUnlockDate) = 0;
  uint64_t v14 = v8 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID;
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  v16(v14, 1, 1, v15);
  v13(v8 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionStartDate, 1, 1, v12);
  v16(v8 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationSessionID, 1, 1, v15);
  v13(v8 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationStartDate, 1, 1, v12);
  *(_OWORD *)(v8 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_sessionKey) = xmmword_100770AE0;
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  *(void *)(v8 + 48) = a7;
  *(void *)(v8 + 56) = a8;
  *(void *)(v8 + 64) = a5;
  *(void *)(v8 + 72) = a6;
  swift_bridgeObjectRetain();
  sub_10025ADCC(a5, a6);
  v17._uint64_t countAndFlagsBits = 95;
  v17._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  v18._uint64_t countAndFlagsBits = a1;
  v18._unint64_t object = a2;
  String.append(_:)(v18);
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  return v8;
}

uint64_t sub_1004F6C18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449656369766564 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x654B64656E676973 && a2 == 0xED00006174614479 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x49676E6972696170 && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1004F6E10@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_10000A844(&qword_100977650);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  sub_1004F7198();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_10024D338((uint64_t)a1);
  }
  LOBYTE(v29) = 0;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  uint64_t v27 = v9;
  LOBYTE(v29) = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v28 = v13;
  uint64_t v26 = v12;
  char v31 = 2;
  sub_1002CC1F4();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v14 = v29;
  LOBYTE(v29) = 3;
  unint64_t v24 = v30;
  uint64_t v25 = v14;
  sub_10025ADCC(v14, v30);
  uint64_t v15 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v17 = v16;
  Swift::String v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v23 = v15;
  v18(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v19 = v28;
  swift_bridgeObjectRetain();
  unint64_t v21 = v24;
  uint64_t v20 = v25;
  sub_10025ADCC(v25, v24);
  swift_bridgeObjectRetain();
  sub_100250CC4(v20, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10024D338((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CC4(v20, v21);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v27;
  a2[1] = v11;
  a2[2] = v26;
  a2[3] = v19;
  a2[4] = v20;
  a2[5] = v21;
  a2[6] = v23;
  a2[7] = v17;
  return result;
}

unint64_t sub_1004F7198()
{
  unint64_t result = qword_100977658;
  if (!qword_100977658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100977658);
  }
  return result;
}

unsigned char *_s9RemoteLTKC18FileRepresentationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004F72B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9RemoteLTKC18FileRepresentationV10CodingKeysOMa()
{
  return &_s9RemoteLTKC18FileRepresentationV10CodingKeysON;
}

unint64_t sub_1004F72F4()
{
  unint64_t result = qword_100977668;
  if (!qword_100977668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100977668);
  }
  return result;
}

unint64_t sub_1004F734C()
{
  unint64_t result = qword_100977670;
  if (!qword_100977670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100977670);
  }
  return result;
}

unint64_t sub_1004F73A4()
{
  unint64_t result = qword_100977678;
  if (!qword_100977678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100977678);
  }
  return result;
}

uint64_t sub_1004F73F8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100977680);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100977680);
  if (qword_100969CD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946C0);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1004F74C0(uint64_t a1)
{
  v2[133] = v1;
  v2[132] = a1;
  sub_10000A844(&qword_10096C920);
  v2[134] = swift_task_alloc();
  v2[135] = type metadata accessor for SDAuthenticationCommonOperationInput();
  v2[136] = swift_task_alloc();
  v2[137] = swift_task_alloc();
  return _swift_task_switch(sub_1004F7598, v1, 0);
}

uint64_t sub_1004F7598()
{
  uint64_t v62 = v0;
  uint64_t v1 = (void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 1064);
  uint64_t v3 = OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_timer;
  *(void *)(v0 + 1104) = OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_timer;
  if (*(void *)(v2 + v3))
  {
    uint64_t v4 = qword_100969F00;
    swift_retain();
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000B47C(v5, (uint64_t)qword_100977680);
    unsigned int v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Response timer cancelled", v8, 2u);
      swift_slowDealloc();
    }

    sub_10000A844(&qword_10096BAF0);
    Task.cancel()();
    swift_release();
  }
  sub_10024A330(*(void *)(v0 + 1056), v0 + 96, (uint64_t *)&unk_1009778D8);
  if (*(void *)(v0 + 120))
  {
    uint64_t v9 = v0 + 56;
    uint64_t v10 = (uint64_t *)(v0 + 856);
    sub_1002AF688((long long *)(v0 + 96), v0 + 56);
    if (qword_100969F00 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000B47C(v11, (uint64_t)qword_100977680);
    sub_100278C8C(v0 + 56, v0 + 416);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      v61[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      sub_100278C8C(v0 + 416, v0 + 136);
      sub_10000A844(&qword_100977940);
      uint64_t v15 = String.init<A>(describing:)();
      *(void *)(v0 + 1048) = sub_100254634(v15, v16, v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10024D338(v0 + 416);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Received input %s)", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v10 = (uint64_t *)(v0 + 856);
      swift_slowDealloc();
    }
    else
    {
      sub_10024D338(v0 + 416);
    }

    uint64_t v26 = *(void *)(v0 + 80);
    uint64_t v27 = sub_10026BB6C((void *)(v0 + 56), v26);
    *(void *)(v0 + 880) = v26;
    uint64_t v28 = sub_100278AE4(v10);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v28, v27, v26);
    sub_1004FC5C0((uint64_t)v10);
    uint64_t v29 = *(void *)(v0 + 1064);
    sub_10024D338((uint64_t)v10);
    sub_100278C8C(v29 + 112, v0 + 376);
    uint64_t v30 = *(void *)(v0 + 400);
    uint64_t v31 = *(void *)(v0 + 408);
    sub_10026BB6C((void *)(v0 + 376), v30);
    uint64_t v32 = v29 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext;
    swift_beginAccess();
    sub_100278C8C(v32, v0 + 296);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 80))(v0 + 56, v0 + 296, v30, v31);
    sub_10024D338(v0 + 296);
    uint64_t v1 = (void *)(v0 + 16);
    sub_1002AF688((long long *)(v0 + 336), v0 + 16);
    sub_10024D338(v0 + 376);
    goto LABEL_24;
  }
  uint64_t v17 = *(void **)(v0 + 1064);
  sub_10000A7E8(v0 + 96, (uint64_t *)&unk_1009778D8);
  uint64_t v18 = (uint64_t)(v17 + 14);
  uint64_t v19 = v17[17];
  uint64_t v20 = v17[18];
  unint64_t v21 = sub_10026BB6C(v17 + 14, v19);
  uint64_t v22 = *(void *)(v19 - 8);
  uint64_t v23 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v22 + 16))(v23, v21, v19);
  LOBYTE(v21) = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v19);
  swift_task_dealloc();
  if (v21)
  {
    uint64_t v9 = v0 + 576;
    sub_100278C8C(v18, v0 + 576);
    uint64_t v24 = *(void *)(v0 + 600);
    uint64_t v25 = *(void *)(v0 + 608);
    sub_10026BB6C((void *)(v0 + 576), v24);
    (*(void (**)(uint64_t, uint64_t))(v25 + 72))(v24, v25);
LABEL_24:
    sub_10024D338(v9);
    uint64_t v47 = *(void *)(v0 + 40);
    uint64_t v48 = *(void *)(v0 + 48);
    sub_10026BB6C(v1, v47);
    uint64_t v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 16))(v47, v48);
    if ((v49 & 0x100000000) == 0)
    {
      int v50 = v49;
      if (qword_100969F00 != -1) {
        swift_once();
      }
      uint64_t v51 = type metadata accessor for Logger();
      sub_10000B47C(v51, (uint64_t)qword_100977680);
      uint64_t v52 = Logger.logObject.getter();
      os_log_type_t v53 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v52, v53))
      {
        uint64_t v54 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v54 = 67109120;
        *(_DWORD *)(v0 + 1148) = v50;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v52, v53, "Using userID for keybag: %u", v54, 8u);
        swift_slowDealloc();
      }
    }
    if (qword_100969B78 != -1) {
      swift_once();
    }
    uint64_t v55 = *(void *)(v0 + 1064);
    uint64_t v56 = *(void *)(v0 + 40);
    uint64_t v57 = *(void *)(v0 + 48);
    sub_10026BB6C(v1, v56);
    uint64_t v58 = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 16))(v56, v57);
    *(_DWORD *)(v0 + 1136) = v58;
    *(unsigned char *)(v0 + 1140) = BYTE4(v58) & 1;
    uint64_t v59 = swift_task_alloc();
    *(void *)(v0 + 1112) = v59;
    *(void *)(v59 + 16) = v1;
    *(void *)(v59 + 24) = v55;
    sub_10000BAE8(&qword_1009778F8, (void (*)(uint64_t))type metadata accessor for SDAuthenticationSessionExecutor);
    uint64_t v60 = (void *)swift_task_alloc();
    *(void *)(v0 + 1120) = v60;
    *uint64_t v60 = v0;
    v60[1] = sub_1004F813C;
    uint64_t v64 = 54;
    uint64_t v65 = (char *)&type metadata for () + 8;
    return TaskLocal.withValue<A>(_:operation:isolation:file:line:)();
  }
  uint64_t v33 = *(void *)(v0 + 1064);
  uint64_t v34 = *(void *)(v0 + 1056);
  v61[0] = 0;
  v61[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(70);
  *(void *)(v0 + 984) = 0;
  *(void *)(v0 + 992) = 0xE000000000000000;
  v35._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v35._unint64_t object = (void *)0x80000001007C02E0;
  String.append(_:)(v35);
  sub_100278C8C(v18, v0 + 176);
  sub_10026BB6C((void *)(v0 + 176), *(void *)(v0 + 200));
  swift_getDynamicType();
  sub_10024D338(v0 + 176);
  v36._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v36);
  swift_bridgeObjectRelease();
  v37._unint64_t object = (void *)0x80000001007C0300;
  v37._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v37);
  sub_10024A330(v34, v0 + 216, (uint64_t *)&unk_1009778D8);
  sub_10000A844((uint64_t *)&unk_1009778D8);
  v38._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v38);
  swift_bridgeObjectRelease();
  v39._uint64_t countAndFlagsBits = 0xD000000000000014;
  v39._unint64_t object = (void *)0x80000001007C0320;
  String.append(_:)(v39);
  uint64_t v40 = v33 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext;
  swift_beginAccess();
  sub_100278C8C(v40, v0 + 256);
  sub_10000A844(&qword_10096BDF0);
  _print_unlocked<A, B>(_:_:)();
  sub_10024D338(v0 + 256);
  uint64_t v41 = *(void *)(v0 + 984);
  uint64_t v42 = *(void *)(v0 + 992);
  sub_10024D280();
  uint64_t v43 = swift_allocError();
  *(_DWORD *)uint64_t v44 = 10;
  *(void *)(v44 + 8) = v41;
  *(void *)(v44 + 16) = v42;
  swift_willThrow();
  *(void *)(v0 + 1040) = v43;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    sub_1004FA7F8(*(_DWORD *)(v0 + 960), *(void *)(v0 + 968), *(void *)(v0 + 976));
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_errorRelease();
    *(void *)(v0 + 1016) = v43;
    swift_errorRetain();
    type metadata accessor for SFAuthenticationError(0);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      sub_1004FA7F8(*(_DWORD *)(v0 + 1144), 0, 0xE000000000000000);
    }
    else
    {
      swift_errorRelease();
      *(void *)(v0 + 1000) = 0;
      *(void *)(v0 + 1008) = 0xE000000000000000;
      *(void *)(v0 + 1032) = v43;
      _print_unlocked<A, B>(_:_:)();
      sub_1004FA7F8(0xAu, *(void *)(v0 + 1000), *(void *)(v0 + 1008));
      swift_bridgeObjectRelease();
    }
  }
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
  return v45();
}

uint64_t sub_1004F813C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 1064);
    swift_task_dealloc();
    uint64_t v4 = sub_1004F8B80;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 1064);
    swift_task_dealloc();
    uint64_t v4 = sub_1004F8268;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1004F8268()
{
  uint64_t v54 = v0;
  uint64_t v1 = v0 + 16;
  uint64_t v2 = *(void **)(v0 + 1064);
  uint64_t v3 = (void *)((char *)v2 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext);
  swift_beginAccess();
  sub_10026F6D4(v3, (uint64_t *)(v0 + 16));
  swift_endAccess();
  uint64_t v4 = v2[17];
  uint64_t v5 = v2[18];
  uint64_t v6 = sub_10026BB6C(v2 + 14, v4);
  uint64_t v7 = *(void *)(v4 - 8);
  uint64_t v8 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v7 + 16))(v8, v6, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v4);
  swift_task_dealloc();
  sub_100278C8C(v0 + 16, v0 + 736);
  sub_10000A844(&qword_10096BDF0);
  sub_10000A844(&qword_100977900);
  if (swift_dynamicCast())
  {
    uint64_t v9 = *(void *)(v0 + 1128);
    uint64_t v10 = *(void *)(v0 + 1096);
    sub_1002AF688((long long *)(v0 + 776), v0 + 696);
    sub_100278C8C(v10, v0 + 456);
    sub_10026BB6C((void *)(v0 + 456), *(void *)(v0 + 480));
    uint64_t v11 = *(void *)(v0 + 720);
    uint64_t v12 = *(void *)(v0 + 728);
    sub_1002AF758(v0 + 696, v11);
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
    uint64_t v15 = *(void *)(v0 + 1096);
    if (v9)
    {
      sub_1004FC2A0(*(void *)(v0 + 1096));
      sub_10024D338(v0 + 456);
      sub_10024D338(v0 + 696);
      sub_10024D338(v0 + 16);
      *(void *)(v0 + 1040) = v9;
      swift_errorRetain();
      sub_10000A844(&qword_10096BAF0);
      if (swift_dynamicCast())
      {
        swift_errorRelease();
        sub_1004FA7F8(*(_DWORD *)(v0 + 960), *(void *)(v0 + 968), *(void *)(v0 + 976));
        swift_bridgeObjectRelease();
        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        *(void *)(v0 + 1016) = v9;
        swift_errorRetain();
        type metadata accessor for SFAuthenticationError(0);
        if (swift_dynamicCast())
        {
          swift_errorRelease();
          sub_1004FA7F8(*(_DWORD *)(v0 + 1144), 0, 0xE000000000000000);
        }
        else
        {
          swift_errorRelease();
          *(void *)(v0 + 1000) = 0;
          *(void *)(v0 + 1008) = 0xE000000000000000;
          *(void *)(v0 + 1032) = v9;
          _print_unlocked<A, B>(_:_:)();
          sub_1004FA7F8(0xAu, *(void *)(v0 + 1000), *(void *)(v0 + 1008));
          swift_bridgeObjectRelease();
        }
        swift_errorRelease();
      }
      goto LABEL_19;
    }
    uint64_t v16 = v13;
    unint64_t v17 = v14;
    uint64_t v52 = *(void *)(v0 + 1080);
    uint64_t v18 = *(void *)(v0 + 720);
    uint64_t v19 = *(void *)(v0 + 728);
    sub_10026BB6C((void *)(v0 + 696), v18);
    uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
    sub_1006DF18C(v16, v17, v15 + 40, v20, *(void *)(v15 + *(int *)(v52 + 28)));
    sub_100250CC4(v16, v17);
    sub_10024D338(v0 + 456);
    sub_10024D338(v0 + 696);
    uint64_t v1 = v0 + 16;
  }
  else
  {
    *(void *)(v0 + 808) = 0;
    *(_OWORD *)(v0 + 776) = 0u;
    *(_OWORD *)(v0 + 792) = 0u;
    sub_10000A7E8(v0 + 776, &qword_100977908);
  }
  sub_100278C8C(v1, v0 + 816);
  sub_10000A844(&qword_100977910);
  if (swift_dynamicCast())
  {
    sub_10024D338(v0 + 656);
    if (qword_100969F00 != -1) {
      swift_once();
    }
    uint64_t v21 = *(void *)(v0 + 1096);
    uint64_t v22 = *(void *)(v0 + 1088);
    uint64_t v23 = type metadata accessor for Logger();
    sub_10000B47C(v23, (uint64_t)qword_100977680);
    sub_1003CEF58(v21, v22);
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    BOOL v26 = os_log_type_enabled(v24, v25);
    uint64_t v27 = *(void *)(v0 + 1088);
    if (v26)
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315138;
      type metadata accessor for UUID();
      sub_10000BAE8((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 1024) = sub_100254634(v29, v30, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1004FC2A0(v27);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "sessionDidComplete for %s", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1004FC2A0(*(void *)(v0 + 1088));
    }

    uint64_t v43 = *(void **)(v0 + 1096);
    uint64_t v44 = *(void *)(v0 + 1080);
    sub_10026BB6C(v43, v43[3]);
    sub_1006FACD0((uint64_t)v43 + *(int *)(v44 + 24));
    uint64_t v45 = (uint64_t)v43;
    goto LABEL_17;
  }
  sub_100278C8C(v1, v0 + 536);
  sub_10000A844(&qword_100977918);
  int v31 = swift_dynamicCast();
  uint64_t v32 = *(void *)(v0 + 1104);
  uint64_t v33 = *(void *)(v0 + 1096);
  uint64_t v34 = *(void *)(v0 + 1072);
  uint64_t v35 = *(void *)(v0 + 1064);
  if (!v31)
  {
    *(void *)(v0 + 528) = 0;
    *(_OWORD *)(v0 + 496) = 0u;
    *(_OWORD *)(v0 + 512) = 0u;
    sub_10000A7E8(v0 + 496, &qword_100977920);
    uint64_t v46 = *(void *)(v35 + 152);
    uint64_t v47 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v34, 1, 1, v47);
    uint64_t v48 = swift_allocObject();
    swift_weakInit();
    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = 0;
    *(void *)(v49 + 24) = 0;
    *(void *)(v49 + 32) = v46;
    *(void *)(v49 + 40) = v48;
    *(_DWORD *)(v49 + 48) = 12;
    *(void *)(v35 + v32) = sub_10028CAC4(v34, (uint64_t)&unk_100977930, v49);
    swift_release();
    uint64_t v45 = v33;
LABEL_17:
    sub_1004FC2A0(v45);
    goto LABEL_18;
  }
  sub_1002AF688((long long *)(v0 + 496), v0 + 616);
  uint64_t v36 = *(void *)(v0 + 640);
  uint64_t v37 = *(void *)(v0 + 648);
  sub_10026BB6C((void *)(v0 + 616), v36);
  int v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v36, v37);
  uint64_t v39 = *(void *)(v35 + 152);
  uint64_t v40 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v34, 1, 1, v40);
  uint64_t v41 = swift_allocObject();
  swift_weakInit();
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = 0;
  *(void *)(v42 + 24) = 0;
  *(void *)(v42 + 32) = v39;
  *(void *)(v42 + 40) = v41;
  *(_DWORD *)(v42 + 48) = v38;
  *(void *)(v35 + v32) = sub_10028CAC4(v34, (uint64_t)&unk_100977938, v42);
  swift_release();
  sub_1004FC2A0(v33);
  sub_10024D338(v0 + 616);
LABEL_18:
  sub_10024D338(v1);
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v50 = *(uint64_t (**)(void))(v0 + 8);
  return v50();
}

uint64_t sub_1004F8B80()
{
  sub_10024D338(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 1128);
  *(void *)(v0 + 1040) = v1;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    sub_1004FA7F8(*(_DWORD *)(v0 + 960), *(void *)(v0 + 968), *(void *)(v0 + 976));
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_errorRelease();
    *(void *)(v0 + 1016) = v1;
    swift_errorRetain();
    type metadata accessor for SFAuthenticationError(0);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      sub_1004FA7F8(*(_DWORD *)(v0 + 1144), 0, 0xE000000000000000);
    }
    else
    {
      swift_errorRelease();
      *(void *)(v0 + 1000) = 0;
      *(void *)(v0 + 1008) = 0xE000000000000000;
      *(void *)(v0 + 1032) = v1;
      _print_unlocked<A, B>(_:_:)();
      sub_1004FA7F8(0xAu, *(void *)(v0 + 1000), *(void *)(v0 + 1008));
      swift_bridgeObjectRelease();
    }
  }
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1004F8D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[22] = a2;
  v3[23] = a3;
  uint64_t v5 = type metadata accessor for UUID();
  v3[24] = v5;
  v3[25] = *(void *)(v5 - 8);
  v3[26] = swift_task_alloc();
  v3[27] = type metadata accessor for SDAuthenticationCommonOperationInput();
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  return _swift_task_switch(sub_1004F8E54, a3, 0);
}

uint64_t sub_1004F8E54()
{
  int v50 = v0;
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  uint64_t v4 = sub_10026BB6C(v1, v2);
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t v6 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v5 + 16))(v6, v4, v2);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  v0[30] = v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v2);
  swift_task_dealloc();
  uint64_t v8 = *(void *)(v7 + 16);
  v0[31] = v8;
  if (v8)
  {
    uint64_t v9 = v0 + 2;
    v0[32] = 0;
    sub_100278C8C(v0[30] + 32, (uint64_t)(v0 + 2));
    if (qword_100969F00 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000B47C(v10, (uint64_t)qword_100977680);
    sub_100278C8C((uint64_t)(v0 + 2), (uint64_t)(v0 + 7));
    swift_retain_n();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = v0[29];
      uint64_t v14 = v0[26];
      uint64_t v15 = v0[25];
      uint64_t v42 = v0[27];
      uint64_t v43 = v0[24];
      uint64_t v16 = (void *)v0[23];
      loga = v11;
      uint64_t v17 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315394;
      uint64_t v49 = v45;
      uint64_t v18 = v16[17];
      uint64_t v19 = v16[18];
      uint64_t v20 = sub_10026BB6C(v16 + 14, v18);
      uint64_t v21 = *(void *)(v18 - 8);
      os_log_type_t type = v12;
      uint64_t v22 = swift_task_alloc();
      (*(void (**)(uint64_t, void *, uint64_t))(v21 + 16))(v22, v20, v18);
      (*(void (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19);
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v18);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v13 + *(int *)(v42 + 24), v43);
      sub_1004FC2A0(v13);
      UUID.uuidString.getter();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v43);
      sub_10054D6A8(8);
      uint64_t v9 = v0 + 2;
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      uint64_t v23 = static String._fromSubstring(_:)();
      unint64_t v25 = v24;
      swift_bridgeObjectRelease();
      *(void *)(v17 + 4) = sub_100254634(v23, v25, &v49);
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v17 + 12) = 2080;
      sub_10026BB6C(v0 + 7, v0[10]);
      swift_getDynamicType();
      uint64_t v26 = _typeName(_:qualified:)();
      *(void *)(v17 + 14) = sub_100254634(v26, v27, &v49);
      swift_bridgeObjectRelease();
      sub_10024D338((uint64_t)(v0 + 7));
      uint64_t v11 = loga;
      _os_log_impl((void *)&_mh_execute_header, loga, type, "%s: Running step: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
      sub_10024D338((uint64_t)(v0 + 7));
    }

    unint64_t v30 = (void *)v0[23];
    int v31 = v30 + 14;
    sub_100278C8C(v0[22], (uint64_t)(v0 + 12));
    uint64_t v32 = v0[15];
    uint64_t v33 = sub_10026BB6C(v0 + 12, v32);
    uint64_t v34 = v0[5];
    uint64_t v46 = (uint64_t)v33;
    os_log_t log = (os_log_t)v0[6];
    uint64_t v35 = sub_10026BB6C(v9, v34);
    uint64_t v36 = v30[17];
    uint64_t v37 = v30[18];
    sub_10026BB6C(v31, v36);
    uint64_t v38 = *(void *)(v36 - 8);
    uint64_t v39 = swift_task_alloc();
    v0[33] = v39;
    (*(void (**)(void))(v38 + 16))();
    (*(void (**)(uint64_t, uint64_t))(v37 + 24))(v36, v37);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v36);
    uint64_t v40 = (void *)swift_task_alloc();
    v0[34] = v40;
    *uint64_t v40 = v0;
    v40[1] = sub_1004F94CC;
    uint64_t v41 = v0[28];
    return sub_1004FA370((uint64_t)(v0 + 17), v46, (uint64_t)v35, v41, v34, v32, (uint64_t)log);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = (uint64_t (*)(void))v0[1];
    return v28();
  }
}

uint64_t sub_1004F94CC()
{
  uint64_t v2 = (void *)*v1;
  v2[35] = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[23];
  sub_1004FC2A0(v2[28]);
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1004F9C30;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = sub_1004F9630;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1004F9630()
{
  uint64_t v46 = v0;
  uint64_t v1 = (void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 256) + 1;
  sub_10024D338(v3);
  sub_1002AF688((long long *)(v0 + 136), v3);
  sub_10024D338(v0 + 96);
  sub_10024D338(v0 + 16);
  if (v4 == v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 256) + 1;
    *(void *)(v0 + 256) = v7;
    sub_100278C8C(*(void *)(v0 + 240) + 40 * v7 + 32, v0 + 16);
    if (qword_100969F00 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000B47C(v8, (uint64_t)qword_100977680);
    sub_100278C8C(v0 + 16, v0 + 56);
    swift_retain_n();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = *(void *)(v0 + 232);
      os_log_type_t typea = v10;
      uint64_t v13 = *(void *)(v0 + 200);
      uint64_t v12 = *(void *)(v0 + 208);
      uint64_t v14 = *(void *)(v0 + 184);
      uint64_t v38 = *(void *)(v0 + 216);
      uint64_t v39 = *(void *)(v0 + 192);
      os_log_t log = v9;
      uint64_t v15 = (void *)(v14 + 112);
      uint64_t v40 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136315394;
      uint64_t v16 = v14;
      uint64_t v17 = *(void *)(v14 + 136);
      uint64_t v18 = *(void *)(v16 + 144);
      uint64_t v19 = sub_10026BB6C(v15, v17);
      uint64_t v20 = *(void *)(v17 - 8);
      uint64_t v21 = swift_task_alloc();
      (*(void (**)(uint64_t, void *, uint64_t))(v20 + 16))(v21, v19, v17);
      (*(void (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v17);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v11 + *(int *)(v38 + 24), v39);
      sub_1004FC2A0(v11);
      UUID.uuidString.getter();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v39);
      sub_10054D6A8(8);
      swift_bridgeObjectRelease();
      uint64_t v1 = (void *)(v0 + 96);
      swift_task_dealloc();
      uint64_t v22 = static String._fromSubstring(_:)();
      unint64_t v24 = v23;
      swift_bridgeObjectRelease();
      *(void *)(v40 + 4) = sub_100254634(v22, v24, &v45);
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v40 + 12) = 2080;
      sub_10026BB6C((void *)(v0 + 56), *(void *)(v0 + 80));
      swift_getDynamicType();
      uint64_t v25 = _typeName(_:qualified:)();
      *(void *)(v40 + 14) = sub_100254634(v25, v26, &v45);
      swift_bridgeObjectRelease();
      sub_10024D338(v0 + 56);
      uint64_t v9 = log;
      _os_log_impl((void *)&_mh_execute_header, log, typea, "%s: Running step: %s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
      sub_10024D338(v0 + 56);
    }

    unint64_t v27 = *(void **)(v0 + 184);
    sub_100278C8C(*(void *)(v0 + 176), (uint64_t)v1);
    uint64_t v28 = *(void *)(v0 + 120);
    uint64_t v29 = sub_10026BB6C(v1, v28);
    uint64_t v30 = *(void *)(v0 + 40);
    uint64_t type = (uint64_t)v29;
    uint64_t v44 = *(void *)(v0 + 48);
    int v31 = sub_10026BB6C((void *)(v0 + 16), v30);
    uint64_t v32 = v27[17];
    uint64_t v33 = v27[18];
    sub_10026BB6C(v27 + 14, v32);
    uint64_t v34 = *(void *)(v32 - 8);
    uint64_t v35 = swift_task_alloc();
    *(void *)(v0 + 264) = v35;
    (*(void (**)(void))(v34 + 16))();
    (*(void (**)(uint64_t, uint64_t))(v33 + 24))(v32, v33);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v32);
    uint64_t v36 = (void *)swift_task_alloc();
    *(void *)(v0 + 272) = v36;
    *uint64_t v36 = v0;
    v36[1] = sub_1004F94CC;
    uint64_t v37 = *(void *)(v0 + 224);
    return sub_1004FA370(v0 + 136, type, (uint64_t)v31, v37, v30, v28, v44);
  }
}

uint64_t sub_1004F9C30()
{
  swift_task_dealloc();
  sub_10024D338(v0 + 96);
  sub_10024D338(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1004F9CDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v40 - v6;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100969F00 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000B47C(v12, (uint64_t)qword_100977680);
  swift_retain_n();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  int v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    os_log_t v44 = v13;
    uint64_t v16 = swift_slowAlloc();
    int v43 = v15;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v42 = v18;
    uint64_t v45 = v5;
    uint64_t v41 = v17;
    *(_DWORD *)uint64_t v17 = 136315138;
    v40[2] = v17 + 12;
    v50[0] = v18;
    v40[1] = v17 + 4;
    uint64_t v20 = v1[17];
    uint64_t v19 = v1[18];
    uint64_t v21 = sub_10026BB6C(v1 + 14, v20);
    v40[0] = v40;
    uint64_t v22 = v2;
    uint64_t v23 = *(void *)(v20 - 8);
    __chkstk_darwin(v21);
    uint64_t v25 = (char *)v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v23 + 16))(v25);
    (*(void (**)(uint64_t, uint64_t))(v19 + 24))(v20, v19);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v20);
    uint64_t v2 = v22;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, &v7[*(int *)(v22 + 24)], v8);
    sub_1004FC2A0((uint64_t)v7);
    sub_10000BAE8((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v28 = v27;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    *(void *)&long long v48 = sub_100254634(v26, v28, v50);
    uint64_t v5 = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_log_t v29 = v44;
    _os_log_impl((void *)&_mh_execute_header, v44, (os_log_type_t)v43, "Invalidating session %s", v41, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v30 = (uint64_t)v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext;
  swift_beginAccess();
  sub_100278C8C(v30, (uint64_t)&v48);
  sub_10000A844(&qword_10096BDF0);
  sub_10000A844(&qword_1009778C0);
  if (swift_dynamicCast())
  {
    sub_1002AF688(v46, (uint64_t)v50);
    uint64_t v31 = v51;
    uint64_t v32 = v52;
    sub_10026BB6C(v50, v51);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v32 + 16))(&v48, v31, v32);
    sub_10026BB6C(&v48, v49);
    sub_100425B8C();
    sub_10024D338((uint64_t)&v48);
    sub_10024D338((uint64_t)v50);
  }
  else
  {
    uint64_t v47 = 0;
    memset(v46, 0, sizeof(v46));
    sub_10000A7E8((uint64_t)v46, &qword_1009778C8);
  }
  uint64_t v33 = v1[17];
  uint64_t v34 = v1[18];
  uint64_t v35 = sub_10026BB6C(v1 + 14, v33);
  uint64_t v36 = *(void *)(v33 - 8);
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)v40 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v36 + 16))(v38);
  (*(void (**)(uint64_t, uint64_t))(v34 + 24))(v33, v34);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v33);
  sub_10024A330((uint64_t)&v5[*(int *)(v2 + 36)], (uint64_t)&v48, &qword_1009778D0);
  if (v49)
  {
    sub_1002AF688(&v48, (uint64_t)v50);
    sub_1004FC2A0((uint64_t)v5);
    sub_10026BB6C(v50, v51);
    sub_1003CFA20();
    return sub_10024D338((uint64_t)v50);
  }
  else
  {
    sub_10000A7E8((uint64_t)&v48, &qword_1009778D0);
    return sub_1004FC2A0((uint64_t)v5);
  }
}

uint64_t sub_1004FA370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[10] = AssociatedTypeWitness;
  v8[11] = *(void *)(AssociatedTypeWitness - 8);
  v8[12] = swift_task_alloc();
  v8[13] = *(void *)(a6 - 8);
  v8[14] = swift_task_alloc();
  return _swift_task_switch(sub_1004FA4AC, v7, 0);
}

uint64_t sub_1004FA4AC()
{
  uint64_t v9 = v0[8];
  (*(void (**)(void, void, void))(v0[13] + 16))(v0[14], v0[3], v0[7]);
  swift_dynamicCast();
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 16) + **(int **)(v9 + 16));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  void *v1 = v0;
  v1[1] = sub_1004FA5F8;
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[2];
  return v8(v6, v2, v4, v5, v3);
}

uint64_t sub_1004FA5F8()
{
  uint64_t v2 = (void *)*v1;
  v2[16] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[9];
    return _swift_task_switch(sub_1004FA76C, v3, 0);
  }
  else
  {
    (*(void (**)(void, void))(v2[11] + 8))(v2[12], v2[10]);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_1004FA76C()
{
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1004FA7F8(unsigned int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v120 = a2;
  unsigned int v121 = a1;
  uint64_t v118 = type metadata accessor for UUID();
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v116 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for SDAuthenticationCommonOperationInput();
  uint64_t v7 = __chkstk_darwin(v115);
  uint64_t v114 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v109 - v9;
  unsigned __int8 v122 = 1;
  uint64_t v11 = (uint64_t)v3 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext;
  swift_beginAccess();
  sub_100278C8C(v11, (uint64_t)v125);
  sub_10000A844(&qword_10096BDF0);
  sub_10000A844(&qword_1009778B0);
  if (swift_dynamicCast())
  {
    sub_1002AF688(v123, (uint64_t)v126);
    unsigned __int8 v122 = *(unsigned char *)sub_10026BB6C(v126, v127);
    if (qword_100969F00 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000B47C(v12, (uint64_t)qword_100977680);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v13, v14))
    {
      int v15 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)int v15 = 67109120;
      swift_beginAccess();
      LODWORD(v125[0]) = v122;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Should Send Timeout = %{BOOL}d", v15, 8u);
      swift_slowDealloc();
    }

    sub_10024D338((uint64_t)v126);
  }
  else
  {
    uint64_t v124 = 0;
    memset(v123, 0, sizeof(v123));
    sub_10000A7E8((uint64_t)v123, &qword_1009778B8);
  }
  if (v121 == 12)
  {
    swift_beginAccess();
    int v16 = v122;
  }
  else
  {
    int v16 = 1;
  }
  uint64_t v17 = v4[17];
  uint64_t v18 = v4[18];
  uint64_t v119 = v4 + 14;
  uint64_t v19 = sub_10026BB6C(v4 + 14, v17);
  uint64_t v20 = *(void *)(v17 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v109 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v22);
  LOBYTE(v18) = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v17);
  if (v18)
  {
    if (v16) {
      goto LABEL_39;
    }
    goto LABEL_22;
  }
  if (v16)
  {
    uint64_t v23 = [objc_allocWithZone((Class)SDAuthenticationResponse) init];
    uint64_t v24 = v23;
    if (v23)
    {
      [v23 setVersion:1];
      unint64_t v112 = v24;
      uint64_t v25 = v4[17];
      uint64_t v26 = v4[18];
      unint64_t v27 = sub_10026BB6C(v119, v25);
      Swift::String v111 = &v109;
      uint64_t v28 = *(void *)(v25 - 8);
      __chkstk_darwin(v27);
      uint64_t v30 = (char *)&v109 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v28 + 16))(v30);
      uint64_t v31 = a3;
      uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v26 + 24);
      Swift::String v110 = v112;
      v32(v25, v26);
      a3 = v31;
      uint64_t v33 = v121;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v25);
      uint64_t v34 = v117;
      uint64_t v35 = v116;
      uint64_t v36 = v118;
      (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v116, &v10[*(int *)(v115 + 24)], v118);
      sub_1004FC2A0((uint64_t)v10);
      UUID.uuidString.getter();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
      NSString v37 = String._bridgeToObjectiveC()();
      uint64_t v24 = v112;
      swift_bridgeObjectRelease();
      id v38 = v110;
      [v110 setSessionID:v37];

      [v38 setErrorCode:v33];
    }
    if (qword_100969F00 != -1) {
      swift_once();
    }
    uint64_t v39 = type metadata accessor for Logger();
    uint64_t v40 = sub_10000B47C(v39, (uint64_t)qword_100977680);
    uint64_t v41 = v24;
    swift_bridgeObjectRetain_n();
    uint64_t v42 = v41;
    int v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.default.getter();
    BOOL v45 = os_log_type_enabled(v43, v44);
    uint64_t v113 = a3;
    if (v45)
    {
      uint64_t v109 = v40;
      unint64_t v112 = v42;
      Swift::String v110 = v10;
      Swift::String v111 = v4;
      uint64_t v46 = swift_slowAlloc();
      uint64_t v47 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 138412546;
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v48 = v121;
      *(void *)(v48 + 8) = v120;
      *(void *)(v48 + 16) = a3;
      swift_bridgeObjectRetain();
      uint64_t v49 = _swift_stdlib_bridgeErrorToNSError();
      v126[0] = v49;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v47 = v49;
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v46 + 12) = 2112;
      if (v24)
      {
        uint64_t v42 = v112;
        v126[0] = (uint64_t)v112;
        int v50 = v112;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v51 = v24;
        uint64_t v4 = v111;
      }
      else
      {
        v126[0] = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v51 = 0;
        uint64_t v4 = v111;
        uint64_t v42 = v112;
      }
      v47[1] = v51;

      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Reporting error %@ to remote device as %@", (uint8_t *)v46, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      a3 = v113;
      uint64_t v10 = (char *)v110;
      if (v24)
      {
LABEL_31:
        id v60 = [v42 data];
        if (v60)
        {
          unint64_t v61 = v60;
          uint64_t v62 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          Swift::String v110 = v63;

          uint64_t v64 = v4[17];
          uint64_t v65 = v4[18];
          unint64_t v112 = v42;
          uint64_t v66 = v119;
          uint64_t v67 = sub_10026BB6C(v119, v64);
          Swift::String v111 = &v109;
          uint64_t v68 = *(void *)(v64 - 8);
          __chkstk_darwin(v67);
          Swift::String v70 = (char *)&v109 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v68 + 16))(v70);
          (*(void (**)(uint64_t, uint64_t))(v65 + 24))(v64, v65);
          (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v64);
          sub_100278C8C((uint64_t)v10, (uint64_t)v126);
          sub_1004FC2A0((uint64_t)v10);
          sub_10026BB6C(v126, v127);
          uint64_t v71 = v4[17];
          uint64_t v72 = v4[18];
          uint64_t v73 = sub_10026BB6C(v66, v71);
          uint64_t v109 = (uint64_t)&v109;
          uint64_t v74 = *(void *)(v71 - 8);
          __chkstk_darwin(v73);
          uint64_t v76 = (char *)&v109 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v74 + 16))(v76);
          uint64_t v77 = (uint64_t)v114;
          (*(void (**)(uint64_t, uint64_t))(v72 + 24))(v71, v72);
          (*(void (**)(char *, uint64_t))(v74 + 8))(v76, v71);
          sub_100278C8C(v77 + 40, (uint64_t)v125);
          sub_1004FC2A0(v77);
          uint64_t v78 = v4[17];
          uint64_t v79 = v4[18];
          uint64_t v80 = sub_10026BB6C(v66, v78);
          uint64_t v81 = *(void *)(v78 - 8);
          __chkstk_darwin(v80);
          uint64_t v83 = (char *)&v109 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v81 + 16))(v83);
          unint64_t v84 = (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 8))(v78, v79);
          (*(void (**)(char *, uint64_t))(v81 + 8))(v83, v78);
          unint64_t v85 = (unint64_t)v110;
          sub_1006DF18C(v62, (uint64_t)v110, (uint64_t)v125, 1, v84);
          sub_100250CC4(v62, v85);

          sub_10024D338((uint64_t)v125);
          a3 = v113;
          sub_10024D338((uint64_t)v126);
          goto LABEL_39;
        }
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      if (v24) {
        goto LABEL_31;
      }
    }
    uint64_t v86 = v42;
    uint64_t v87 = Logger.logObject.getter();
    os_log_type_t v88 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v87, v88))
    {
      uint64_t v89 = (uint8_t *)swift_slowAlloc();
      unint64_t v112 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v89 = 138412290;
      if (v24)
      {
        v126[0] = (uint64_t)v86;
        Swift::String v90 = v86;
      }
      else
      {
        v126[0] = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v112 = v24;

      _os_log_impl((void *)&_mh_execute_header, v87, v88, "Could not convert response to data: %@", v89, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      a3 = v113;
    }
    else
    {
    }
    goto LABEL_39;
  }
LABEL_22:
  if (qword_100969F00 != -1) {
    swift_once();
  }
  uint64_t v52 = type metadata accessor for Logger();
  sub_10000B47C(v52, (uint64_t)qword_100977680);
  swift_bridgeObjectRetain_n();
  uint64_t v53 = Logger.logObject.getter();
  os_log_type_t v54 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v55 = swift_slowAlloc();
    uint64_t v56 = v10;
    uint64_t v57 = (void *)swift_slowAlloc();
    unint64_t v112 = (void *)swift_slowAlloc();
    v126[0] = (uint64_t)v112;
    *(_DWORD *)uint64_t v55 = 138412546;
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v58 = v121;
    *(void *)(v58 + 8) = v120;
    *(void *)(v58 + 16) = a3;
    swift_bridgeObjectRetain();
    uint64_t v59 = _swift_stdlib_bridgeErrorToNSError();
    v125[0] = v59;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v57 = v59;
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v55 + 12) = 2080;
    v125[0] = sub_100254634(0x65736C6166, 0xE500000000000000, v126);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v53, v54, "Not sending error: %@ to remote device since sendError is %s", (uint8_t *)v55, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    uint64_t v10 = v56;
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
LABEL_39:
  uint64_t v91 = v4[17];
  uint64_t v92 = v4[18];
  os_log_type_t v93 = v119;
  char v94 = sub_10026BB6C(v119, v91);
  uint64_t v95 = *(void *)(v91 - 8);
  __chkstk_darwin(v94);
  uint64_t v97 = (char *)&v109 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v95 + 16))(v97);
  (*(void (**)(uint64_t, uint64_t))(v92 + 24))(v91, v92);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v97, v91);
  sub_100278C8C((uint64_t)v10, (uint64_t)v126);
  sub_1004FC2A0((uint64_t)v10);
  sub_10026BB6C(v126, v127);
  uint64_t v98 = v4[17];
  uint64_t v99 = v4[18];
  uint64_t v100 = sub_10026BB6C(v93, v98);
  uint64_t v101 = *(void *)(v98 - 8);
  __chkstk_darwin(v100);
  uint64_t v103 = (char *)&v109 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v101 + 16))(v103);
  uint64_t v104 = (uint64_t)v114;
  (*(void (**)(uint64_t, uint64_t))(v99 + 24))(v98, v99);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v103, v98);
  uint64_t v105 = v117;
  uint64_t v106 = (uint64_t)v116;
  uint64_t v107 = v118;
  (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v116, v104 + *(int *)(v115 + 24), v118);
  sub_1004FC2A0(v104);
  sub_1006FCB18(v106, v121, v120, a3);
  (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v106, v107);
  return sub_10024D338((uint64_t)v126);
}

uint64_t sub_1004FBAA0(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(_DWORD *)(v6 + 104) = a6;
  *(void *)(v6 + 48) = a5;
  *(double *)(v6 + 40) = a1;
  uint64_t v7 = type metadata accessor for ContinuousClock();
  *(void *)(v6 + 56) = v7;
  *(void *)(v6 + 64) = *(void *)(v7 - 8);
  *(void *)(v6 + 72) = swift_task_alloc();
  return _swift_task_switch(sub_1004FBB68, 0, 0);
}

uint64_t sub_1004FBB68()
{
  static Task<>.checkCancellation()();
  uint64_t v1 = static Duration.seconds(_:)();
  uint64_t v3 = v2;
  ContinuousClock.init()();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1004FBC90;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_1004FBC90()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = *(void *)(*(void *)v1 + 56);
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_1004FBFBC;
  }
  else {
    uint64_t v5 = sub_1004FBE00;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1004FBE00()
{
  uint64_t v1 = v0[11];
  static Task<>.checkCancellation()();
  if (v1) {
    goto LABEL_2;
  }
  if (qword_100969F00 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_100977680);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Response timer fired", v7, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[12] = Strong;
  if (!Strong)
  {
LABEL_2:
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    return _swift_task_switch(sub_1004FC020, Strong, 0);
  }
}

uint64_t sub_1004FBFBC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1004FC020()
{
  sub_1004FA7F8(*(_DWORD *)(v0 + 104), 0xD00000000000001ELL, 0x80000001007C0380);
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1004FC0B0()
{
  sub_10024D338(v0 + 112);
  swift_unknownObjectRelease();
  sub_10000A7E8(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_responseTimerContinuation, &qword_100977958);
  swift_release();
  sub_10024D338(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_1004FC128()
{
  return type metadata accessor for SDAuthenticationSessionExecutor();
}

uint64_t type metadata accessor for SDAuthenticationSessionExecutor()
{
  uint64_t result = qword_1009776E0;
  if (!qword_1009776E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1004FC17C()
{
  sub_1004FC244();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1004FC244()
{
  if (!qword_100977700[0])
  {
    sub_100247840((uint64_t *)&unk_10096BA90);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, qword_100977700);
    }
  }
}

uint64_t sub_1004FC2A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004FC2FC(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  os_log_type_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *os_log_type_t v6 = v2;
  v6[1] = sub_10000A6F0;
  return sub_1004F8D50(a1, v5, v4);
}

uint64_t sub_1004FC3A8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004FC3E4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  double v6 = *(double *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  int v8 = *(_DWORD *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_1004FBAA0(v6, a1, v4, v5, v7, v8);
}

uint64_t sub_1004FC4B4()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 52, 7);
}

uint64_t sub_1004FC4F4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  double v6 = *(double *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  int v8 = *(_DWORD *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10000A6F4;
  return sub_1004FBAA0(v6, a1, v4, v5, v7, v8);
}

void sub_1004FC5C0(uint64_t a1)
{
  sub_10024D2D4(a1, (uint64_t)v18);
  sub_10000A844(&qword_100977948);
  if (swift_dynamicCast())
  {
    sub_1002AF688(v16, (uint64_t)v19);
    uint64_t v1 = v20;
    uint64_t v2 = v21;
    sub_10026BB6C(v19, v20);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2))
    {
      uint64_t v3 = v20;
      uint64_t v4 = v21;
      sub_10026BB6C(v19, v20);
      LODWORD(v4) = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
      *(void *)&v16[0] = 0;
      *((void *)&v16[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(32);
      swift_bridgeObjectRelease();
      *(void *)&v16[0] = 0xD00000000000001ELL;
      *((void *)&v16[0] + 1) = 0x80000001007BA950;
      id v5 = (id)SFAuthenticationErrorToString();
      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      int v8 = v7;

      v9._uint64_t countAndFlagsBits = v6;
      v9._unint64_t object = v8;
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      long long v10 = v16[0];
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v11 = v4;
      *(_OWORD *)(v11 + 8) = v10;
      swift_willThrow();
    }
    sub_10024D338((uint64_t)v19);
  }
  else
  {
    uint64_t v17 = 0;
    memset(v16, 0, sizeof(v16));
    sub_10000A7E8((uint64_t)v16, &qword_100977950);
    if (qword_100969F00 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000B47C(v12, (uint64_t)qword_100977680);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v13, v14))
    {
      int v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Message does not support error reporting", v15, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1004FC82C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100977960);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100977960);
  if (qword_100969CD8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946D8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1004FC8F4(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (void *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_cacheDirectoryBlock);
  *uint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = (void *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_protectionClassBlock);
  *uint64_t v7 = 0;
  v7[1] = 0;
  uint64_t v8 = OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_ltkLock;
  sub_10000A844((uint64_t *)&unk_10096D4C0);
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 16) = 0;
  *(void *)(v3 + v8) = v9;
  *(void *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_localLTKByID) = &_swiftEmptyDictionarySingleton;
  *(unsigned char *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_ltksLoaded) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_checkAndStartRegistration) = 1;
  *(unsigned char *)(v3 + 16) = a1;
  v10._uint64_t countAndFlagsBits = qword_10077AB68[a1];
  v10._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 0xA3A734B544C20;
  v11._unint64_t object = (void *)0xE700000000000000;
  String.append(_:)(v11);
  uint64_t v12 = (void *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_label);
  *uint64_t v12 = 0x207373616C43;
  v12[1] = 0xE600000000000000;
  uint64_t v13 = v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_cacheDirectory;
  uint64_t v14 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a2, v14);
  return v3;
}

uint64_t sub_1004FCA5C@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1002551BC(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

void sub_1004FCAD4(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_ltksLoaded;
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_ltksLoaded) & 1) == 0)
  {
    sub_1004FE570();
    if (v2)
    {
      if (qword_100969F08 != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      sub_10000B47C(v6, (uint64_t)qword_100977960);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        Swift::String v11 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v9 = 138412290;
        swift_errorRetain();
        uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *Swift::String v11 = v12;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "failed to load LTKS, error:%@", v9, 0xCu);
        sub_10000A844(&qword_10096B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
      if (*(unsigned char *)(a1 + v5) != 1)
      {
        char v10 = 0;
        goto LABEL_14;
      }
    }
    else
    {
      *(unsigned char *)(a1 + v5) = 1;
    }
  }
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_checkAndStartRegistration) == 1)
  {
    *(unsigned char *)(a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_checkAndStartRegistration) = 0;
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
  }
LABEL_14:
  *a2 = v10;
}

uint64_t sub_1004FCD2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10)
{
  uint64_t v100 = a8;
  int v101 = a7;
  int v103 = a6;
  uint64_t v109 = a4;
  uint64_t v102 = a9;
  int v13 = a5 & 1;
  uint64_t v14 = type metadata accessor for UTType();
  uint64_t v106 = *(void *)(v14 - 8);
  uint64_t v107 = v14;
  __chkstk_darwin(v14);
  int v16 = (char *)v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for URL.DirectoryHint();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for URL();
  uint64_t v114 = *(unsigned __int8 **)(v112 - 8);
  uint64_t v21 = __chkstk_darwin(v112);
  uint64_t v23 = (os_unfair_lock_s *)((char *)v97 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21);
  Swift::String v110 = (os_unfair_lock_s *)((char *)v97 - v24);
  uint64_t v108 = a1;
  uint64_t v25 = (uint64_t *)(a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_localLTKByID);
  swift_beginAccess();
  uint64_t v104 = v25;
  uint64_t v26 = *v25;
  uint64_t v27 = *(void *)(v26 + 16);
  uint64_t v111 = a2;
  unsigned int v105 = v13;
  if (!v27)
  {
LABEL_12:
    uint64_t v40 = v111;
    v115[0] = v111;
    v115[1] = a3;
    (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for URL.DirectoryHint.notDirectory(_:), v17);
    sub_10024A1FC();
    URL.appending<A>(path:directoryHint:)();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    static UTType.propertyList.getter();
    uint64_t v51 = (uint64_t)v110;
    URL.appendingPathExtension(for:)();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v16, v107);
    uint64_t v52 = (void (*)(os_unfair_lock_s *, uint64_t))*((void *)v114 + 1);
    v114 += 8;
    v52(v23, v112);
    id v53 = [self defaultManager];
    URL.path(percentEncoded:)(1);
    unint64_t v54 = a3;
    NSString v55 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unsigned int v56 = [v53 fileExistsAtPath:v55];

    if (v56)
    {
      uint64_t v57 = v113;
      uint64_t v58 = sub_1004FEDE4(v51);
      uint64_t v38 = v57;
      int v41 = v109;
      if (v57)
      {
        uint64_t v59 = (char *)v51;
        return ((uint64_t (*)(char *, uint64_t))v52)(v59, v112);
      }
      uint64_t v36 = (unsigned __int8 *)v58;
      uint64_t v40 = v111;
      uint64_t v39 = v54;
      if (*(void *)(v58 + 16) == v111 && *(void *)(v58 + 24) == v54
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        unsigned __int8 v63 = v36[32];
        swift_retain();
        if (sub_1005E8FB4(v63, v41) & 1) != 0 && (((v105 == 0) ^ v36[33]))
        {
          v52(v110, v112);
          swift_release();
          goto LABEL_47;
        }
      }
      else
      {
        swift_retain();
      }
      if (qword_100969F08 != -1) {
        swift_once();
      }
      uint64_t v65 = type metadata accessor for Logger();
      sub_10000B47C(v65, (uint64_t)qword_100977960);
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      uint64_t v66 = Logger.logObject.getter();
      int v67 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v66, (os_log_type_t)v67))
      {
        LODWORD(v107) = v67;
        uint64_t v113 = 0;
        uint64_t v68 = swift_slowAlloc();
        uint64_t v106 = swift_slowAlloc();
        v115[0] = v106;
        *(_DWORD *)uint64_t v68 = 136315906;
        swift_retain();
        unint64_t v69 = sub_10030D54C();
        unint64_t v71 = v70;
        swift_release();
        uint64_t v116 = sub_100254634(v69, v71, v115);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v98 = v36;
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v68 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v116 = sub_100254634(v111, v54, v115);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v68 + 22) = 2080;
        unint64_t v72 = 0xE700000000000000;
        uint64_t v73 = 0x6E776F6E6B6E75;
        uint64_t v38 = v113;
        switch((char)v109)
        {
          case 1:
            unint64_t v72 = 0xEE00656E6F68506BLL;
            uint64_t v73 = 0x636F6C6E5563616DLL;
            break;
          case 2:
            unint64_t v72 = 0xEC00000043737361;
            uint64_t v73 = 0x6C436B636F6C6E75;
            break;
          case 3:
            unint64_t v72 = 0xEF6B636F6C6E5565;
            uint64_t v73 = 0x646F4D7473657567;
            break;
          default:
            break;
        }
        uint64_t v116 = sub_100254634(v73, v72, v115);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v68 + 32) = 2080;
        if (v105) {
          uint64_t v75 = 7955787;
        }
        else {
          uint64_t v75 = 1801678668;
        }
        if (v105) {
          unint64_t v76 = 0xE300000000000000;
        }
        else {
          unint64_t v76 = 0xE400000000000000;
        }
        uint64_t v116 = sub_100254634(v75, v76, v115);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v66, (os_log_type_t)v107, "Loaded LocalLTK %s has different identifier:%s or feature:%s or role:%s", (uint8_t *)v68, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        uint64_t v36 = v98;
        swift_release();

        v52(v110, v112);
        uint64_t v39 = v54;
        uint64_t v40 = v111;
      }
      else
      {
        swift_release_n();
        swift_bridgeObjectRelease_n();

        v52(v110, v112);
      }
      int v41 = v109;
    }
    else
    {
      int v41 = v109;
      uint64_t v60 = v113;
      unint64_t v61 = (unsigned __int8 *)sub_1004FF204(v40, v54, v109, v105);
      uint64_t v38 = v60;
      if (v60)
      {
        uint64_t v59 = (char *)v110;
        return ((uint64_t (*)(char *, uint64_t))v52)(v59, v112);
      }
      uint64_t v36 = v61;
      uint64_t v39 = v54;
      v52(v110, v112);
      if (!v36)
      {
        if ((v103 & 1) == 0)
        {
          sub_10024D280();
          swift_allocError();
          *(_DWORD *)uint64_t v74 = 10;
          *(void *)(v74 + 8) = 0xD00000000000001ELL;
          *(void *)(v74 + 16) = 0x80000001007C0440;
          return swift_willThrow();
        }
        goto LABEL_52;
      }
    }
LABEL_47:
    char v77 = v103;
    uint64_t v35 = swift_retain();
    NSString v37 = v36;
    if ((v77 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_48;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1005838BC(a2, a3);
  if ((v29 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v30 = *(unsigned __int8 **)(*(void *)(v26 + 56) + 8 * v28);
  swift_retain();
  uint64_t v99 = a3;
  swift_bridgeObjectRelease();
  uint64_t v31 = swift_bridgeObjectRelease();
  v97[1] = v97;
  __chkstk_darwin(v31);
  v97[-2] = sub_100500948;
  v97[-1] = v30;
  uint64_t v33 = v32 + 4;
  uint64_t v98 = v30;
  swift_retain();
  os_unfair_lock_lock(v33);
  uint64_t v34 = v113;
  sub_1003CEC58(v115);
  uint64_t v113 = v34;
  if (v34)
  {
    os_unfair_lock_unlock(v33);
    __break(1u);
    goto LABEL_69;
  }
  os_unfair_lock_unlock(v33);
  if ((v115[0] & 1) == 0)
  {
    swift_beginAccess();
    a3 = v99;
    swift_bridgeObjectRetain();
    sub_1002AA1A8(v111, a3);
    swift_endAccess();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_12;
  }
  uint64_t v36 = v98;
  NSString v37 = v98;
  uint64_t v38 = v113;
  uint64_t v39 = v99;
  uint64_t v40 = v111;
  int v41 = v109;
  if ((v103 & 1) == 0)
  {
LABEL_6:
    if (qword_100969F08 != -1) {
      swift_once();
    }
    uint64_t v42 = type metadata accessor for Logger();
    sub_10000B47C(v42, (uint64_t)qword_100977960);
    swift_retain_n();
    int v43 = Logger.logObject.getter();
    uint64_t v44 = (uint64_t)v36;
    os_log_type_t v45 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v43, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      uint64_t v114 = v37;
      v115[0] = v47;
      *(_DWORD *)uint64_t v46 = 136315138;
      uint64_t v113 = (uint64_t)(v46 + 4);
      swift_retain();
      unint64_t v48 = sub_10030D54C();
      uint64_t v99 = v39;
      unint64_t v50 = v49;
      swift_release();
      uint64_t v116 = sub_100254634(v48, v50, v115);
      uint64_t v40 = v111;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      uint64_t v39 = v99;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v43, v45, "Loaded LocalLTK %s, return it for non-pairing flows", v46, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v64 = v44;
    goto LABEL_57;
  }
LABEL_48:
  if (v101)
  {
    uint64_t v78 = v39;
  }
  else
  {
    uint64_t v78 = v39;
    __chkstk_darwin(v35);
    v97[-2] = sub_1005008F4;
    v97[-1] = v36;
    uint64_t v23 = v81 + 4;
    os_unfair_lock_lock(v81 + 4);
    sub_100500910(v115);
    if (v38) {
      goto LABEL_69;
    }
    uint64_t v38 = 0;
    BOOL v82 = a10;
    os_unfair_lock_unlock(v23);
    uint64_t v83 = v115[0];
    if (a10) {
      BOOL v82 = (sub_10057BE20(v100, a10, v115[0]) & 1) != 0 && *(void *)(v83 + 16) == 1;
    }
    uint64_t v86 = *(void *)(v83 + 16);
    uint64_t v35 = swift_bridgeObjectRelease();
    if (v86 && !v82)
    {
      if (qword_100969F08 != -1) {
        swift_once();
      }
      uint64_t v87 = type metadata accessor for Logger();
      sub_10000B47C(v87, (uint64_t)qword_100977960);
      swift_retain_n();
      os_log_type_t v88 = Logger.logObject.getter();
      uint64_t v89 = (uint64_t)v36;
      os_log_type_t v90 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v88, v90))
      {
        uint64_t v114 = v37;
        uint64_t v91 = (uint8_t *)swift_slowAlloc();
        uint64_t v113 = swift_slowAlloc();
        v115[0] = v113;
        *(_DWORD *)uint64_t v91 = 136315138;
        uint64_t v112 = (uint64_t)(v91 + 4);
        swift_retain();
        unint64_t v92 = sub_10030D54C();
        unint64_t v94 = v93;
        swift_release();
        uint64_t v116 = sub_100254634(v92, v94, v115);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        uint64_t v40 = v111;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v88, v90, "Found loaded LocalLTK %s, return it for pairing", v91, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      uint64_t v64 = v89;
      uint64_t v95 = v104;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v116 = *v95;
      *uint64_t v95 = 0x8000000000000000;
      sub_1005942FC(v89, v40, v78, isUniquelyReferenced_nonNull_native);
      *uint64_t v95 = v116;
      goto LABEL_58;
    }
  }
  __chkstk_darwin(v35);
  v97[-2] = sub_10050092C;
  v97[-1] = v36;
  uint64_t v23 = v79 + 4;
  os_unfair_lock_lock(v79 + 4);
  sub_1002CEA38(v80);
  if (v38)
  {
LABEL_69:
    os_unfair_lock_unlock(v23);
    __break(1u);
    JUMPOUT(0x1004FDD20);
  }
  os_unfair_lock_unlock(v23);
  swift_beginAccess();
  uint64_t v39 = v78;
  sub_1002AA1A8(v40, v78);
  swift_endAccess();
  swift_release();
  swift_release();
LABEL_52:
  uint64_t v64 = sub_1004FFBD0(v40, v39, v41, v105);
LABEL_57:
  unint64_t v84 = v104;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  char v85 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v116 = *v84;
  *unint64_t v84 = 0x8000000000000000;
  sub_1005942FC(v64, v40, v39, v85);
  *unint64_t v84 = v116;
LABEL_58:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t result = swift_release();
  *uint64_t v102 = v64;
  return result;
}

void sub_1004FDD30()
{
  uint64_t v63 = type metadata accessor for DispatchWorkItemFlags();
  int64_t v1 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v62 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for DispatchQoS();
  uint64_t v3 = *(os_unfair_lock_s **)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v60 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [self sharedTransport];
  id v65 = v5;
  if (!v5) {
    return;
  }
  if (qword_10096A198 != -1) {
    goto LABEL_48;
  }
LABEL_3:
  if (qword_100994D10)
  {
    __chkstk_darwin(v5);
    *(&v46 - 2) = (int64_t)sub_1005007AC;
    *(&v46 - 1) = (int64_t)v0;
    uint64_t v7 = v6 + 4;
    uint64_t v59 = (char *)v8;
    os_unfair_lock_lock(v7);
    uint64_t v0 = &v46 - 4;
    uint64_t v9 = 0;
    sub_100500810(aBlock);
    os_unfair_lock_unlock(v7);
    uint64_t v12 = aBlock[0];
    int64_t v13 = 0;
    uint64_t v14 = aBlock[0] + 64;
    uint64_t v15 = 1 << *(unsigned char *)(aBlock[0] + 32);
    uint64_t v16 = -1;
    if (v15 < 64) {
      uint64_t v16 = ~(-1 << v15);
    }
    unint64_t v17 = v16 & *(void *)(aBlock[0] + 64);
    int64_t v18 = (unint64_t)(v15 + 63) >> 6;
    uint64_t v57 = v69;
    uint64_t v58 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue;
    unsigned int v56 = (void (**)(char *, uint64_t))(v1 + 8);
    NSString v55 = v3 + 2;
    *(void *)&long long v11 = 136315138;
    long long v54 = v11;
    id v53 = (char *)&type metadata for Any + 8;
    uint64_t v48 = aBlock[0];
    uint64_t v47 = aBlock[0] + 64;
    int64_t v46 = v18;
    while (1)
    {
      if (v17)
      {
        unint64_t v19 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        unint64_t v20 = v19 | (v13 << 6);
      }
      else
      {
        if (__OFADD__(v13++, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        if (v13 >= v18) {
          goto LABEL_41;
        }
        unint64_t v22 = *(void *)(v14 + 8 * v13);
        if (!v22)
        {
          int64_t v23 = v13 + 1;
          if (v13 + 1 >= v18) {
            goto LABEL_41;
          }
          unint64_t v22 = *(void *)(v14 + 8 * v23);
          if (!v22)
          {
            int64_t v23 = v13 + 2;
            if (v13 + 2 >= v18) {
              goto LABEL_41;
            }
            unint64_t v22 = *(void *)(v14 + 8 * v23);
            if (!v22)
            {
              int64_t v23 = v13 + 3;
              if (v13 + 3 >= v18) {
                goto LABEL_41;
              }
              unint64_t v22 = *(void *)(v14 + 8 * v23);
              if (!v22)
              {
                int64_t v23 = v13 + 4;
                if (v13 + 4 >= v18)
                {
LABEL_41:

                  swift_release();
                  return;
                }
                unint64_t v22 = *(void *)(v14 + 8 * v23);
                if (!v22)
                {
                  while (1)
                  {
                    int64_t v13 = v23 + 1;
                    if (__OFADD__(v23, 1)) {
                      break;
                    }
                    if (v13 >= v18) {
                      goto LABEL_41;
                    }
                    unint64_t v22 = *(void *)(v14 + 8 * v13);
                    ++v23;
                    if (v22) {
                      goto LABEL_23;
                    }
                  }
LABEL_47:
                  __break(1u);
LABEL_48:
                  id v5 = (id)swift_once();
                  goto LABEL_3;
                }
              }
            }
          }
          int64_t v13 = v23;
        }
LABEL_23:
        unint64_t v17 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      int64_t v1 = *(void *)(*(void *)(v12 + 56) + 8 * v20);
      uint64_t v24 = *(unsigned __int8 *)(v1 + 32);
      uint64_t v64 = 8;
      switch(v24)
      {
        case 1:
          goto LABEL_26;
        case 3:
          uint64_t v64 = 10;
LABEL_26:
          unint64_t v52 = v17;
          __chkstk_darwin(v10);
          *(&v46 - 2) = (int64_t)sub_100500828;
          *(&v46 - 1) = v1;
          uint64_t v3 = v25 + 4;
          swift_retain();
          os_unfair_lock_lock(v3);
          sub_100500810(aBlock);
          os_unfair_lock_unlock(v3);
          uint64_t v0 = (int64_t *)aBlock[0];
          uint64_t v26 = *(void *)(aBlock[0] + 16);
          if (v26)
          {
            int64_t v50 = v13;
            uint64_t v51 = v9;
            uint64_t v49 = aBlock[0];
            uint64_t v27 = (unint64_t *)(aBlock[0] + 40);
            do
            {
              uint64_t v3 = (os_unfair_lock_s *)*(v27 - 1);
              unint64_t v38 = *v27;
              swift_bridgeObjectRetain();
              NSString v39 = String._bridgeToObjectiveC()();
              id v40 = [v65 idsDeviceForUniqueID:v39];

              if (v40)
              {
                swift_bridgeObjectRelease();
                char v28 = *(unsigned char *)(v1 + 33);
                id v29 = v59;
                uint64_t v66 = *(void *)&v59[v58];
                uint64_t v30 = swift_allocObject();
                *(void *)(v30 + 16) = v64;
                *(void *)(v30 + 24) = v40;
                *(unsigned char *)(v30 + 32) = v28;
                *(void *)(v30 + 40) = v29;
                void v69[2] = sub_100500884;
                v69[3] = v30;
                aBlock[0] = (uint64_t)_NSConcreteStackBlock;
                aBlock[1] = 1107296256;
                v69[0] = sub_100296520;
                v69[1] = &unk_1008DE050;
                uint64_t v31 = _Block_copy(aBlock);
                id v32 = v29;
                uint64_t v3 = (os_unfair_lock_s *)v40;
                uint64_t v33 = v60;
                static DispatchQoS.unspecified.getter();
                int v67 = _swiftEmptyArrayStorage;
                sub_1005008AC((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
                sub_10000A844((uint64_t *)&unk_10096C490);
                sub_1002B4B9C();
                int64_t v34 = v1;
                uint64_t v36 = v62;
                uint64_t v35 = v63;
                dispatch thunk of SetAlgebra.init<A>(_:)();
                OS_dispatch_queue.async(group:qos:flags:execute:)();
                _Block_release(v31);
                NSString v37 = v36;
                int64_t v1 = v34;
                (*v56)(v37, v35);
                (*(void (**)(char *, uint64_t))&v55->_os_unfair_lock_opaque)(v33, v61);

                swift_release();
              }
              else
              {
                if (qword_100969F08 != -1) {
                  swift_once();
                }
                uint64_t v41 = type metadata accessor for Logger();
                sub_10000B47C(v41, (uint64_t)qword_100977960);
                swift_bridgeObjectRetain();
                uint64_t v42 = Logger.logObject.getter();
                os_log_type_t v43 = static os_log_type_t.error.getter();
                if (os_log_type_enabled(v42, v43))
                {
                  uint64_t v44 = swift_slowAlloc();
                  aBlock[0] = swift_slowAlloc();
                  *(_DWORD *)uint64_t v44 = v54;
                  swift_bridgeObjectRetain();
                  *(void *)(v44 + 4) = sub_100254634((uint64_t)v3, v38, aBlock);
                  swift_bridgeObjectRelease_n();
                  _os_log_impl((void *)&_mh_execute_header, v42, v43, "Could not find idsDevice %s for registration", (uint8_t *)v44, 0xCu);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }
                else
                {

                  swift_bridgeObjectRelease_n();
                }
              }
              v27 += 2;
              --v26;
            }
            while (v26);
            swift_release();
            uint64_t v12 = v48;
            uint64_t v9 = v51;
            uint64_t v14 = v47;
            int64_t v18 = v46;
            int64_t v13 = v50;
            uint64_t v0 = (int64_t *)v49;
          }
          else
          {
            swift_release();
          }
          uint64_t v10 = swift_bridgeObjectRelease();
          unint64_t v17 = v52;
          break;
        default:
          continue;
      }
    }
  }
  id v45 = v65;
}

void sub_1004FE570()
{
  uint64_t isUniquelyReferenced_nonNull_native = v1;
  uint64_t v3 = v0;
  uint64_t v4 = type metadata accessor for URL();
  unint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v71 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A844((uint64_t *)&unk_10096AC10);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_assert_owner((const os_unfair_lock *)(*(void *)(v0
                                                                 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_ltkLock)
                                                     + 16));
  if (qword_100969F08 != -1) {
LABEL_34:
  }
    swift_once();
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = sub_10000B47C(v10, (uint64_t)qword_100977960);
  swift_retain();
  unint64_t v69 = (void *)v11;
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  BOOL v14 = os_log_type_enabled(v12, v13);
  int v67 = v9;
  if (v14)
  {
    uint64_t v70 = isUniquelyReferenced_nonNull_native;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    v73[0] = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315138;
    unint64_t v66 = v5;
    uint64_t v16 = *(void *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_label);
    unint64_t v17 = *(void *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_label + 8);
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_100254634(v16, v17, (uint64_t *)v73);
    uint64_t isUniquelyReferenced_nonNull_native = v70;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    unint64_t v5 = v66;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Loading %s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
  id v18 = [self defaultManager];
  URL._bridgeToObjectiveC()((NSURL *)OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_cacheDirectory);
  unint64_t v20 = v19;
  v73[0] = 0;
  id v21 = [v18 contentsOfDirectoryAtURL:v19 includingPropertiesForKeys:0 options:0 error:v73];

  id v22 = v73[0];
  if (v21)
  {
    uint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    id v24 = v22;
    uint64_t v25 = v23;

    uint64_t v26 = *(void *)(v23 + 16);
    if (v26)
    {
      v56[2] = v25;
      id v57 = v18;
      unint64_t v69 = (void *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_localLTKByID);
      char v28 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      unint64_t v27 = v5 + 16;
      uint64_t v9 = (char *)(v25 + ((*(unsigned __int8 *)(v27 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 64)));
      uint64_t v29 = *(void *)(v27 + 56);
      uint64_t v62 = v3;
      uint64_t v63 = (unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 32);
      uint64_t v61 = (void (**)(char *, char *, uint64_t))(v27 + 16);
      uint64_t v59 = v29;
      uint64_t v60 = (void (**)(char *, uint64_t))(v27 - 8);
      uint64_t v64 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 40);
      id v65 = v28;
      v56[1] = (v27 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      unint64_t v66 = v27;
      while (1)
      {
        uint64_t v31 = v67;
        v65(v67, v9, v4);
        id v32 = *v64;
        (*v64)(v31, 0, 1, v4);
        if ((*v63)(v31, 1, v4) == 1)
        {

          goto LABEL_31;
        }
        uint64_t v33 = (uint64_t)v71;
        (*v61)(v71, v31, v4);
        uint64_t v34 = sub_1004FEDE4(v33);
        if (isUniquelyReferenced_nonNull_native)
        {

          (*v60)(v71, v4);
          goto LABEL_31;
        }
        uint64_t v35 = v34;
        uint64_t v58 = v32;
        uint64_t v68 = v26;
        uint64_t v70 = 0;
        uint64_t v3 = v4;
        uint64_t v37 = *(void *)(v34 + 16);
        uint64_t v36 = *(void *)(v34 + 24);
        uint64_t v4 = (uint64_t)v69;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v72 = *(void *)v4;
        uint64_t v38 = v72;
        *(void *)uint64_t v4 = 0x8000000000000000;
        unint64_t v5 = sub_1005838BC(v37, v36);
        uint64_t v40 = *(void *)(v38 + 16);
        BOOL v41 = (v39 & 1) == 0;
        uint64_t v42 = v40 + v41;
        if (__OFADD__(v40, v41))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
        uint64_t v4 = v39;
        if (*(void *)(v38 + 24) >= v42)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t isUniquelyReferenced_nonNull_native = v72;
            if (v39) {
              goto LABEL_8;
            }
          }
          else
          {
            sub_10058FC48();
            uint64_t isUniquelyReferenced_nonNull_native = v72;
            if (v4) {
              goto LABEL_8;
            }
          }
        }
        else
        {
          sub_10058ACD0(v42, isUniquelyReferenced_nonNull_native);
          uint64_t v43 = sub_1005838BC(v37, v36);
          if ((v4 & 1) != (v44 & 1))
          {
            KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
            __break(1u);
            return;
          }
          unint64_t v5 = v43;
          uint64_t isUniquelyReferenced_nonNull_native = v72;
          if (v4)
          {
LABEL_8:
            uint64_t v30 = *(void *)(isUniquelyReferenced_nonNull_native + 56);
            swift_release();
            *(void *)(v30 + 8 * v5) = v35;
            goto LABEL_9;
          }
        }
        *(void *)(isUniquelyReferenced_nonNull_native + 8 * (v5 >> 6) + 64) |= 1 << v5;
        id v45 = (uint64_t *)(*(void *)(isUniquelyReferenced_nonNull_native + 48) + 16 * v5);
        uint64_t *v45 = v37;
        v45[1] = v36;
        *(void *)(*(void *)(isUniquelyReferenced_nonNull_native + 56) + 8 * v5) = v35;
        uint64_t v46 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
        BOOL v47 = __OFADD__(v46, 1);
        uint64_t v48 = v46 + 1;
        if (v47) {
          goto LABEL_33;
        }
        *(void *)(isUniquelyReferenced_nonNull_native + 16) = v48;
        swift_bridgeObjectRetain();
LABEL_9:
        *unint64_t v69 = isUniquelyReferenced_nonNull_native;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_release();
        uint64_t v4 = v3;
        (*v60)(v71, v3);
        v9 += v59;
        uint64_t v26 = v68 - 1;
        uint64_t isUniquelyReferenced_nonNull_native = v70;
        if (v68 == 1)
        {
          id v18 = v57;
          v58(v67, 1, 1, v3);
          goto LABEL_30;
        }
      }
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v67, 1, 1, v4);
LABEL_30:

LABEL_31:
    swift_bridgeObjectRelease();
  }
  else
  {
    id v49 = v73[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    swift_retain_n();
    int64_t v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v50, v51))
    {
      unint64_t v52 = (uint8_t *)swift_slowAlloc();
      id v53 = (void *)swift_slowAlloc();
      id v57 = v18;
      v73[0] = v53;
      *(_DWORD *)unint64_t v52 = 136315138;
      unint64_t v71 = (char *)(v52 + 4);
      sub_1005008AC((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v54 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v72 = sub_100254634(v54, v55, (uint64_t *)v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "Failed to list items in %s", v52, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_1004FEDE4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = Data.init(contentsOf:options:)();
  if (!v1)
  {
    uint64_t v9 = v7;
    unint64_t v10 = v8;
    uint64_t v30 = v4;
    uint64_t v11 = swift_allocObject();
    swift_weakInit();
    uint64_t v12 = swift_allocObject();
    swift_weakInit();
    sub_10025ADCC(v9, v10);
    uint64_t v4 = sub_10030DFA0(v9, v10, (uint64_t)sub_100500774, v11, (uint64_t)sub_100500790, v12);
    if (qword_100969F08 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10000B47C(v14, (uint64_t)qword_100977960);
    uint64_t v15 = v30;
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v6, a1, v3);
    swift_retain_n();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    int v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v33 = v29;
      *(_DWORD *)uint64_t v19 = 136315394;
      v26[1] = v19 + 4;
      swift_retain();
      os_log_t v28 = v16;
      unint64_t v20 = sub_10030D54C();
      int v27 = v18;
      unint64_t v22 = v21;
      swift_release();
      uint64_t v31 = sub_100254634(v20, v22, &v33);
      v26[2] = &v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2080;
      sub_1005008AC((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v31 = sub_100254634(v23, v24, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v3);
      os_log_t v25 = v28;
      _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v27, "Loaded LocalLTK %s from %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100250CC4(v9, v10);
    }
    else
    {
      sub_100250CC4(v9, v10);
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v3);
    }
  }
  return v4;
}

id sub_1004FF204(uint64_t a1, uint64_t a2, char a3, char a4)
{
  unint64_t v9 = sub_10024D0A4();
  unint64_t v10 = (const void *)sub_10039EC38(v9);
  uint64_t v11 = sub_10024CD18(v10);
  unint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if (v13 >> 60 == 15)
  {
    if (qword_100969F08 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10000B47C(v14, (uint64_t)qword_100977960);
    swift_bridgeObjectRetain();
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v17 = 136315138;
      type metadata accessor for CFString(0);
      sub_1005008AC((unint64_t *)&qword_10096AE70, type metadata accessor for CFString);
      swift_bridgeObjectRetain();
      uint64_t v18 = Dictionary.description.getter();
      unint64_t v20 = v19;
      swift_bridgeObjectRelease();
      sub_100254634(v18, v20, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Failed to query keychain with %s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
LABEL_27:

      return 0;
    }

    swift_bridgeObjectRelease_n();
    return 0;
  }
  char v65 = a3;
  swift_bridgeObjectRelease();
  id v21 = objc_allocWithZone((Class)SDAutoUnlockLTKInfo);
  sub_10025ADCC(v11, v13);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100250CB0(v11, v13);
  id v23 = [v21 initWithData:isa];

  if (!v23)
  {
    uint64_t v34 = v11;
    if (qword_100969F08 != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    sub_10000B47C(v35, (uint64_t)qword_100977960);
    sub_100278C78(v11, v13);
    sub_10025ADCC(v11, v13);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v15, v36))
    {
      sub_100250CB0(v34, v13);
      sub_100250CB0(v34, v13);
      sub_100250CC4(v34, v13);
      goto LABEL_27;
    }
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v66 = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 136315138;
    sub_10025ADCC(v34, v13);
    uint64_t v38 = Data.description.getter();
    unint64_t v40 = v39;
    sub_100250CB0(v34, v13);
    sub_100254634(v38, v40, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100250CB0(v34, v13);
    sub_100250CB0(v34, v13);
    _os_log_impl((void *)&_mh_execute_header, v15, v36, "Failed to deserialize SDAutoUnlockLTKInfo with %s", v37, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_100250CB0(v34, v13);
    return 0;
  }
  uint64_t v63 = v11;
  id v64 = v23;
  id result = [v23 ltk];
  if (!result)
  {
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  os_log_t v25 = result;
  uint64_t v26 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v28 = v27;

  sub_1002FFF40(v65 == 2, v26, v28);
  if (v4)
  {
    sub_100250CC4(v26, v28);
    if (qword_100969F08 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_10000B47C(v29, (uint64_t)qword_100977960);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 138412290;
      swift_errorRetain();
      uint64_t v66 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v33 = v66;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Failed to validate previously saved local LTK, error: %@, will try to re-generate", v32, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      sub_100250CB0(v63, v13);
    }
    else
    {
      sub_100250CB0(v63, v13);

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    return 0;
  }
  sub_100250CC4(v26, v28);
  id result = [v64 ltk];
  if (!result) {
    goto LABEL_32;
  }
  BOOL v41 = result;
  uint64_t v42 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v61 = v43;
  uint64_t v62 = v42;

  id result = [v64 ltkID];
  if (result)
  {
    char v44 = result;
    char v60 = a4 & 1;
    uint64_t v45 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v59 = v46;

    uint64_t v47 = swift_allocObject();
    swift_weakInit();
    uint64_t v48 = swift_allocObject();
    swift_weakInit();
    _s8LocalLTKCMa();
    swift_allocObject();
    *(void *)&long long v58 = sub_100500774;
    *((void *)&v58 + 1) = v47;
    uint64_t v49 = sub_100308B14(a1, a2, v65, v60, v62, v61, v45, v59, v58, (uint64_t)sub_100500790, v48);
    uint64_t v50 = qword_100969F08;
    swift_bridgeObjectRetain();
    if (v50 != -1) {
      swift_once();
    }
    uint64_t v51 = type metadata accessor for Logger();
    sub_10000B47C(v51, (uint64_t)qword_100977960);
    swift_retain_n();
    unint64_t v52 = Logger.logObject.getter();
    os_log_type_t v53 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      *(_DWORD *)uint64_t v54 = 136315138;
      swift_retain();
      unint64_t v55 = sub_10030D54C();
      unint64_t v57 = v56;
      swift_release();
      sub_100254634(v55, v57, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "Loaded from keychain: %s", v54, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100250CB0(v63, v13);
    }
    else
    {
      sub_100250CB0(v11, v13);

      swift_release_n();
    }
    return (id)v49;
  }
LABEL_33:
  __break(1u);
  return result;
}