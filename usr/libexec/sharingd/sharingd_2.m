uint64_t sub_1002F2C0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(void *)(*(void *)v0 + 256);
  swift_task_dealloc();
  swift_errorRelease();
  return _swift_task_switch(sub_1002F2D38, v1, 0);
}

uint64_t sub_1002F2D38()
{
  (*(void (**)(void, void))(v0 + 264))(*(void *)(v0 + 224), *(void *)(v0 + 168));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002F2E20()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 256);
  swift_task_dealloc();
  swift_errorRelease();
  return _swift_task_switch(sub_1002F2F4C, v1, 0);
}

uint64_t sub_1002F2F4C()
{
  (*(void (**)(void, void))(v0 + 296))(*(void *)(v0 + 192), *(void *)(v0 + 168));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002F3030(uint64_t a1, uint64_t a2)
{
  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_10096DE90);
  v3[17] = v4;
  v3[18] = *(void *)(v4 - 8);
  v3[19] = swift_task_alloc();
  uint64_t v5 = sub_10000A844(&qword_10096DE80);
  v3[20] = v5;
  v3[21] = *(void *)(v5 - 8);
  v3[22] = swift_task_alloc();
  uint64_t v6 = sub_10000A844(&qword_10096DE68);
  v3[23] = v6;
  v3[24] = *(void *)(v6 - 8);
  v3[25] = swift_task_alloc();
  uint64_t v7 = sub_10000A844(&qword_10096DE50);
  v3[26] = v7;
  v3[27] = *(void *)(v7 - 8);
  v3[28] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v8 = static AirDropActor.shared;
  return _swift_task_switch(sub_1002F3250, v8, 0);
}

uint64_t sub_1002F3250()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[14];
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_helloConnection);
  if (v3) {
    BOOL v4 = v2 == v3;
  }
  else {
    BOOL v4 = 0;
  }
  if (v4)
  {
    v11 = v0 + 27;
    uint64_t v17 = v0[27];
    v14 = v0 + 26;
    uint64_t v18 = v0[26];
    uint64_t v15 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_helloContinuation;
    swift_beginAccess();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v18)) {
      goto LABEL_27;
    }
    uint64_t v16 = 28;
  }
  else
  {
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_askConnection);
    if (v5) {
      BOOL v6 = v2 == v5;
    }
    else {
      BOOL v6 = 0;
    }
    if (v6)
    {
      v11 = v0 + 24;
      uint64_t v19 = v0[24];
      v14 = v0 + 23;
      uint64_t v20 = v0[23];
      uint64_t v15 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_askContinuation;
      swift_beginAccess();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v15, 1, v20)) {
        goto LABEL_27;
      }
      uint64_t v16 = 25;
    }
    else
    {
      uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadConnection);
      if (v7) {
        BOOL v8 = v2 == v7;
      }
      else {
        BOOL v8 = 0;
      }
      if (v8)
      {
        v11 = v0 + 21;
        uint64_t v21 = v0[21];
        v14 = v0 + 20;
        uint64_t v22 = v0[20];
        uint64_t v15 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadContinuation;
        swift_beginAccess();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v15, 1, v22)) {
          goto LABEL_27;
        }
        uint64_t v16 = 22;
      }
      else
      {
        uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_exchangeConnection);
        if (v9) {
          BOOL v10 = v2 == v9;
        }
        else {
          BOOL v10 = 0;
        }
        if (!v10) {
          goto LABEL_27;
        }
        v11 = v0 + 18;
        uint64_t v12 = v0[18];
        v14 = v0 + 17;
        uint64_t v13 = v0[17];
        uint64_t v15 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_exchangeContinuation;
        swift_beginAccess();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v15, 1, v13)) {
          goto LABEL_27;
        }
        uint64_t v16 = 19;
      }
    }
  }
  uint64_t v23 = v0[v16];
  uint64_t v24 = *v14;
  uint64_t v25 = *v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*v11 + 16))(v23, v15, v24);
  SFProgressContinuation.fail(with:)();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
LABEL_27:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v26 = (uint64_t (*)(void))v0[1];
  return v26();
}

uint64_t sub_1002F3500(uint64_t a1)
{
  uint64_t v2 = sub_10000A844(&qword_10096DE80);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SFAirDrop.Progress();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100969B68 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000B47C(v10, (uint64_t)qword_10096DD80);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v20 = v5;
    uint64_t v21 = v3;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    v25[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    SFAirDrop.Progress.percent.getter();
    uint64_t v22 = a1;
    if (v14)
    {
      unint64_t v17 = 0x80000001007B8890;
      unint64_t v15 = 0xD000000000000015;
    }
    else
    {
      unint64_t v15 = Double.description.getter();
      unint64_t v17 = v16;
    }
    uint64_t v24 = sub_100254634(v15, v17, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Upload progress %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v3 = v21;
    uint64_t v5 = v20;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v18 = v23 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadContinuation;
  swift_beginAccess();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v18, 1, v2);
  if (!result)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v18, v2);
    SFProgressContinuation.yield(_:)();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

uint64_t sub_1002F3898()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844(&qword_10096DE80);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100969B68 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_10096DD80);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v18 = v3;
    uint64_t v9 = v5;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = v1;
    v11 = (uint8_t *)v10;
    os_log_type_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)v11 = 138412290;
    swift_errorRetain();
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v19 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v12 = v13;
    uint64_t v5 = v9;
    uint64_t v3 = v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Send compression failed %@", v11, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v1 = v17;
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v14 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadContinuation;
  swift_beginAccess();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v14, 1, v2);
  if (!result)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v14, v2);
    SFProgressContinuation.fail(with:)();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

uint64_t sub_1002F3E04()
{
  return type metadata accessor for SDAirDropSendConnection(0);
}

uint64_t type metadata accessor for SDAirDropSendConnection(uint64_t a1)
{
  return sub_10000B93C(a1, (uint64_t *)&unk_10096DE30);
}

void sub_1002F3E2C()
{
  type metadata accessor for SDAirDropDiscoveredEndpoint(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for SFAirDropSend.Request();
    if (v1 <= 0x3F)
    {
      sub_1002F6024(319, &qword_10096DE40, (void (*)(uint64_t))_s12HelloRequestVMa);
      if (v2 <= 0x3F)
      {
        sub_1002F41EC(319, &qword_10096DE48, &qword_10096DE50);
        if (v3 <= 0x3F)
        {
          sub_1002F6024(319, &qword_10096DE58, (void (*)(uint64_t))_s14descr1008C9AB9V10AskRequestVMa);
          if (v4 <= 0x3F)
          {
            sub_1002F41EC(319, &qword_10096DE60, &qword_10096DE68);
            if (v5 <= 0x3F)
            {
              sub_1002F6024(319, &qword_10096DE70, (void (*)(uint64_t))_s14descr1008C92C9V13UploadRequestVMa);
              if (v6 <= 0x3F)
              {
                sub_1002F41EC(319, &qword_10096DE78, &qword_10096DE80);
                if (v7 <= 0x3F)
                {
                  sub_1002F41EC(319, &qword_10096DE88, (uint64_t *)&unk_10096DE90);
                  if (v8 <= 0x3F)
                  {
                    type metadata accessor for SDAirDropSendConnectionTelemetry(319);
                    if (v9 <= 0x3F)
                    {
                      type metadata accessor for SFNWInterfaceType();
                      if (v10 <= 0x3F) {
                        swift_updateClassMetadata2();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_1002F41EC(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_100247840(a3);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for SDAirDropSendConnectionTelemetry(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10096DEF8);
}

uint64_t *sub_1002F425C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void *)(v7 - 8);
    unint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = a3[5];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v9((uint64_t *)((char *)a2 + v16), 1, v7))
    {
      uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    if (v9((uint64_t *)((char *)a2 + v20), 1, v7))
    {
      uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
    }
    uint64_t v24 = a3[8];
    uint64_t v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    if (v9((uint64_t *)((char *)a2 + v24), 1, v7))
    {
      uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v25, v26, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
    }
    uint64_t v28 = a3[9];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    if (v9((uint64_t *)v30, 1, v7))
    {
      uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v29, v30, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1002F46E4(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (!v5(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + a2[5];
  if (!v5(v6, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v6, v4);
  }
  uint64_t v7 = a1 + a2[6];
  if (!v5(v7, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v7, v4);
  }
  uint64_t v8 = a1 + a2[7];
  if (!v5(v8, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v8, v4);
  }
  uint64_t v9 = a1 + a2[8];
  if (!v5(v9, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v9, v4);
  }
  uint64_t v10 = a1 + a2[9];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v10, 1, v4);
  if (!result)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
    return v12(v10, v4);
  }
  return result;
}

char *sub_1002F4910(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  if (v8(&a2[v18], 1, v6))
  {
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  if (v8(&a2[v22], 1, v6))
  {
    uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v23, v24, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v23, 0, 1, v6);
  }
  uint64_t v26 = a3[9];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  if (v8(v28, 1, v6))
  {
    uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v27, v28, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v27, 0, 1, v6);
  }
  return a1;
}

char *sub_1002F4D48(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v19, v20, v6);
LABEL_19:
  uint64_t v24 = a3[7];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  int v27 = v8(&a1[v24], 1, v6);
  int v28 = v8(v26, 1, v6);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
LABEL_24:
    uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v25, v26, v6);
LABEL_25:
  uint64_t v30 = a3[8];
  uint64_t v31 = &a1[v30];
  v32 = &a2[v30];
  int v33 = v8(&a1[v30], 1, v6);
  int v34 = v8(v32, 1, v6);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v31, v32, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v31, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
LABEL_30:
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v31, v32, v6);
LABEL_31:
  uint64_t v36 = a3[9];
  v37 = &a1[v36];
  v38 = &a2[v36];
  int v39 = v8(&a1[v36], 1, v6);
  int v40 = v8(v38, 1, v6);
  if (!v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v37, v38, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v37, v6);
    goto LABEL_36;
  }
  if (v40)
  {
LABEL_36:
    uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v37, v38, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v37, 0, 1, v6);
  return a1;
}

char *sub_1002F53BC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  int v15 = &a1[v14];
  int v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  if (v8(&a2[v18], 1, v6))
  {
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  if (v8(&a2[v22], 1, v6))
  {
    uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v23, v24, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v23, 0, 1, v6);
  }
  uint64_t v26 = a3[9];
  int v27 = &a1[v26];
  int v28 = &a2[v26];
  if (v8(v28, 1, v6))
  {
    uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v27, v28, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v27, 0, 1, v6);
  }
  return a1;
}

char *sub_1002F57F4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v19, v20, v6);
LABEL_19:
  uint64_t v24 = a3[7];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  int v27 = v8(&a1[v24], 1, v6);
  int v28 = v8(v26, 1, v6);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
LABEL_24:
    uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v25, v26, v6);
LABEL_25:
  uint64_t v30 = a3[8];
  uint64_t v31 = &a1[v30];
  v32 = &a2[v30];
  int v33 = v8(&a1[v30], 1, v6);
  int v34 = v8(v32, 1, v6);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v31, v32, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v31, 0, 1, v6);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
LABEL_30:
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v31, v32, v6);
LABEL_31:
  uint64_t v36 = a3[9];
  v37 = &a1[v36];
  v38 = &a2[v36];
  int v39 = v8(&a1[v36], 1, v6);
  int v40 = v8(v38, 1, v6);
  if (!v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v37, v38, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v37, v6);
    goto LABEL_36;
  }
  if (v40)
  {
LABEL_36:
    uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v37, v38, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v37, 0, 1, v6);
  return a1;
}

uint64_t sub_1002F5E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002F5E7C);
}

uint64_t sub_1002F5E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_100975040);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1002F5EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002F5F00);
}

uint64_t sub_1002F5F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_100975040);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_1002F5F74()
{
  sub_1002F6024(319, (unint64_t *)&qword_100973960, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1002F6024(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1002F6078()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  unint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v24 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v24 - v12;
  sub_10024A330(v0, (uint64_t)v6, (uint64_t *)&unk_100975040);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v14(v6, 1, v7) == 1)
  {
    uint64_t v15 = (uint64_t)v6;
LABEL_5:
    sub_10000A7E8(v15, (uint64_t *)&unk_100975040);
    return 0;
  }
  int v16 = v6;
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v16, v7);
  uint64_t v18 = type metadata accessor for SDAirDropSendConnectionTelemetry(0);
  sub_10024A330(v0 + *(int *)(v18 + 20), (uint64_t)v4, (uint64_t *)&unk_100975040);
  if (v14(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v15 = (uint64_t)v4;
    goto LABEL_5;
  }
  v17(v11, v4, v7);
  Date.timeIntervalSince(_:)();
  double v21 = v20;
  int v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v11, v7);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v22)(v13, v7);
  double v23 = v21 * 1000.0;
  if ((~COERCE__INT64(v21 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v23 < 9.22337204e18) {
    return (uint64_t)v23;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1002F6348()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  unint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v24 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v24 - v12;
  sub_10024A330(v0, (uint64_t)v6, (uint64_t *)&unk_100975040);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v14(v6, 1, v7) == 1)
  {
    uint64_t v15 = (uint64_t)v6;
LABEL_5:
    sub_10000A7E8(v15, (uint64_t *)&unk_100975040);
    return 0;
  }
  int v16 = v6;
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v16, v7);
  uint64_t v18 = type metadata accessor for SDAirDropSendConnectionTelemetry(0);
  sub_10024A330(v0 + *(int *)(v18 + 24), (uint64_t)v4, (uint64_t *)&unk_100975040);
  if (v14(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v15 = (uint64_t)v4;
    goto LABEL_5;
  }
  v17(v11, v4, v7);
  Date.timeIntervalSince(_:)();
  double v21 = v20;
  int v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v11, v7);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v22)(v13, v7);
  double v23 = v21 * 1000.0;
  if ((~COERCE__INT64(v21 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v23 < 9.22337204e18) {
    return (uint64_t)v23;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1002F6618()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  unint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v25 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v14 = type metadata accessor for SDAirDropSendConnectionTelemetry(0);
  sub_10024A330(v0 + *(int *)(v14 + 28), (uint64_t)v6, (uint64_t *)&unk_100975040);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_10000A7E8(v16, (uint64_t *)&unk_100975040);
    return 0;
  }
  uint64_t v26 = v11;
  uint64_t v17 = v6;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v18(v13, v17, v7);
  sub_10024A330(v0 + *(int *)(v14 + 32), (uint64_t)v4, (uint64_t *)&unk_100975040);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }
  double v20 = v26;
  v18(v26, v4, v7);
  Date.timeIntervalSince(_:)();
  double v22 = v21;
  double v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v20, v7);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v23)(v13, v7);
  double v24 = v22 * 1000.0;
  if ((~COERCE__INT64(v22 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v24 < 9.22337204e18) {
    return (uint64_t)v24;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1002F68F8()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  unint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v25 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v14 = type metadata accessor for SDAirDropSendConnectionTelemetry(0);
  sub_10024A330(v0 + *(int *)(v14 + 28), (uint64_t)v6, (uint64_t *)&unk_100975040);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_10000A7E8(v16, (uint64_t *)&unk_100975040);
    return 0;
  }
  uint64_t v26 = v11;
  uint64_t v17 = v6;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v18(v13, v17, v7);
  sub_10024A330(v0 + *(int *)(v14 + 36), (uint64_t)v4, (uint64_t *)&unk_100975040);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }
  double v20 = v26;
  v18(v26, v4, v7);
  Date.timeIntervalSince(_:)();
  double v22 = v21;
  double v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v20, v7);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v23)(v13, v7);
  double v24 = v22 * 1000.0;
  if ((~COERCE__INT64(v22 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v24 < 9.22337204e18) {
    return (uint64_t)v24;
  }
LABEL_12:
  __break(1u);
  return result;
}

void *sub_1002F6BD8()
{
  if (sub_1002F6078() >= 1)
  {
    sub_1002F6078();
    Class isa = Int._bridgeToObjectiveC()().super.super.isa;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_100592944((uint64_t)isa, 0x6E65536F6C6C6568, 0xEB00000000534D74, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  if (sub_1002F6348() >= 1)
  {
    sub_1002F6348();
    Class v2 = Int._bridgeToObjectiveC()().super.super.isa;
    char v3 = swift_isUniquelyReferenced_nonNull_native();
    sub_100592944((uint64_t)v2, 0x6E69466F6C6C6568, 0xEF534D6465687369, v3);
    swift_bridgeObjectRelease();
  }
  if (sub_1002F6618() >= 1)
  {
    sub_1002F6618();
    Class v4 = Int._bridgeToObjectiveC()().super.super.isa;
    char v5 = swift_isUniquelyReferenced_nonNull_native();
    sub_100592944((uint64_t)v4, 0x4D746E65536B7361, 0xE900000000000053, v5);
    swift_bridgeObjectRelease();
  }
  if (sub_1002F68F8() >= 1)
  {
    sub_1002F68F8();
    Class v6 = Int._bridgeToObjectiveC()().super.super.isa;
    char v7 = swift_isUniquelyReferenced_nonNull_native();
    sub_100592944((uint64_t)v6, 0x73696E69466B7361, 0xED0000534D646568, v7);
    swift_bridgeObjectRelease();
  }
  return &_swiftEmptyDictionarySingleton;
}

uint64_t sub_1002F6DA4()
{
  _StringGuts.grow(_:)(107);
  v0._countAndFlagsBits = 0xD000000000000031;
  v0._object = (void *)0x80000001007B87E0;
  String.append(_:)(v0);
  sub_1002F6078();
  v1._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = 0xD000000000000013;
  v2._object = (void *)0x80000001007B8820;
  String.append(_:)(v2);
  sub_1002F6348();
  v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 0x746E65536B736120;
  v4._object = (void *)0xED0000202D20534DLL;
  String.append(_:)(v4);
  sub_1002F6618();
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._object = (void *)0x80000001007B8840;
  v6._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v6);
  sub_1002F68F8();
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 62;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  return 0;
}

uint64_t sub_1002F6F68(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1002F6FC8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 208) = a4;
  *(void *)(v5 + 80) = a3;
  *(void *)(v5 + 88) = v4;
  *(void *)(v5 + 64) = a1;
  *(void *)(v5 + 72) = a2;
  *(void *)(v5 + 96) = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  *(void *)(v5 + 104) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFNWInterfaceType();
  *(void *)(v5 + 112) = v6;
  *(void *)(v5 + 120) = *(void *)(v6 - 8);
  *(void *)(v5 + 128) = swift_task_alloc();
  *(void *)(v5 + 136) = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  *(void *)(v5 + 144) = static AirDropActor.shared;
  return _swift_task_switch(sub_1002F710C, v7, 0);
}

uint64_t sub_1002F710C()
{
  uint64_t v53 = v0;
  if (qword_100969B68 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 64);
  Swift::String v2 = *(void **)(v0 + 88);
  unint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = type metadata accessor for Logger();
  *(void *)(v0 + 152) = sub_10000B47C(v4, (uint64_t)qword_10096DD80);
  sub_10025ADCC(v1, v3);
  id v5 = v2;
  sub_10025ADCC(v1, v3);
  id v6 = v5;
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = *(char **)(v0 + 88);
  uint64_t v11 = &off_10096D000;
  uint64_t v13 = *(void *)(v0 + 64);
  unint64_t v12 = *(void *)(v0 + 72);
  if (v9)
  {
    os_log_type_t v50 = v8;
    log = v7;
    uint64_t v14 = swift_slowAlloc();
    v52[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315394;
    sub_10025ADCC(v13, v12);
    uint64_t v15 = Data.description.getter();
    unint64_t v17 = v16;
    sub_100250CC4(v13, v12);
    *(void *)(v0 + 48) = sub_100254634(v15, v17, v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100250CC4(v13, v12);
    uint64_t v18 = v13;
    uint64_t v19 = (uint8_t *)v14;
    sub_100250CC4(v18, v12);
    *(_WORD *)(v14 + 12) = 2080;
    if (*(void *)&v10[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadConnection])
    {
      uint64_t v20 = *(void *)(v0 + 136);
      swift_retain();
      sub_10065D92C(v20);
      swift_release();
    }
    else
    {
      double v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v21, v22))
      {
        double v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)double v23 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "UPLOAD connection is not active", v23, 2u);
        swift_slowDealloc();
      }
      uint64_t v24 = *(void *)(v0 + 136);
      uint64_t v26 = *(void *)(v0 + 112);
      uint64_t v25 = *(void *)(v0 + 120);

      (*(void (**)(uint64_t, void, uint64_t))(v25 + 104))(v24, enum case for SFNWInterfaceType.other(_:), v26);
    }
    uint64_t v27 = *(void *)(v0 + 136);
    uint64_t v28 = *(void *)(v0 + 112);
    uint64_t v29 = *(void *)(v0 + 120);
    uint64_t v30 = *(void **)(v0 + 88);
    sub_1002FA308(&qword_10096DF98, (void (*)(uint64_t))&type metadata accessor for SFNWInterfaceType);
    uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v33 = v32;
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    *(void *)(v0 + 56) = sub_100254634(v31, v33, v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, log, v50, "Sending compressed data %s on interface %s", v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v11 = &off_10096D000;
  }
  else
  {
    sub_100250CC4(*(void *)(v0 + 64), *(void *)(v0 + 72));
    sub_100250CC4(v13, v12);
  }
  uint64_t v34 = *(void *)(v0 + 88);
  uint64_t v35 = v11[442];
  *(void *)(v0 + 160) = v35;
  uint64_t v36 = *(void *)((char *)&v35->Flags + v34);
  *(void *)(v0 + 168) = v36;
  if (v36
    && (uint64_t v37 = *(void *)(v34 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadContext),
        (*(void *)(v0 + 176) = v37) != 0))
  {
    sub_1002FA830(v34 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint, *(void *)(v0 + 104), type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t EnumCaseMultiPayload = (int)swift_getEnumCaseMultiPayload();
    int v39 = off_1008D6508[EnumCaseMultiPayload];
    uint64_t v40 = *(void *)((char *)&unk_100772450 + EnumCaseMultiPayload * 8);
    uint64_t v41 = *(void *)(v0 + 104);
    swift_retain();
    swift_unknownObjectRetain();
    sub_1002F6F68(v41, (uint64_t (*)(void))v39);
    v42 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v42;
    void *v42 = v0;
    v42[1] = sub_1002F76E4;
    char v43 = *(unsigned char *)(v0 + 208);
    uint64_t v44 = *(void *)(v0 + 64);
    uint64_t v45 = *(void *)(v0 + 72);
    return sub_100664428(v37, v44, v45, v40, v43);
  }
  else
  {
    uint64_t v47 = type metadata accessor for SFAirDropSend.Failure();
    sub_1002FA308(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v47 - 8) + 104))(v48, enum case for SFAirDropSend.Failure.cancelled(_:), v47);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v49 = *(uint64_t (**)(void))(v0 + 8);
    return v49();
  }
}

uint64_t sub_1002F76E4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  if (v0) {
    uint64_t v4 = sub_1002F7B4C;
  }
  else {
    uint64_t v4 = sub_1002F7810;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002F7810()
{
  if (*(void *)(*(void *)(v0 + 88) + *(void *)(v0 + 160)))
  {
    uint64_t v1 = *(void *)(v0 + 128);
    swift_retain();
    sub_10065D92C(v1);
    swift_release();
  }
  else
  {
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "UPLOAD connection is not active", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v6 = *(void *)(v0 + 120);
    uint64_t v5 = *(void *)(v0 + 128);
    uint64_t v7 = *(void *)(v0 + 112);

    (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for SFNWInterfaceType.other(_:), v7);
  }
  uint64_t v9 = *(void *)(v0 + 120);
  uint64_t v8 = *(void *)(v0 + 128);
  uint64_t v10 = *(void *)(v0 + 112);
  char v11 = *(unsigned char *)(v0 + 208);
  uint64_t v12 = *(void *)(v0 + 88) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_lastActiveInterfaceType;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 40))(v12, v8, v10);
  swift_endAccess();
  if (v11)
  {
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = *(void *)(v0 + 80);
      unint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v16 = 134217984;
      *(void *)(v0 + 40) = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Total bytes read %ld", v16, 0xCu);
      swift_slowDealloc();
    }

    unint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Finished sending UPLOAD", v19, 2u);
      swift_slowDealloc();
    }

    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_1002F7BDC;
    return sub_1002F037C();
  }
  else
  {
    swift_unknownObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
}

uint64_t sub_1002F7B4C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002F7BDC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144);
  swift_task_dealloc();
  return _swift_task_switch(sub_1002F7CEC, v1, 0);
}

uint64_t sub_1002F7CEC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002F7D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  v4[12] = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v4[13] = swift_task_alloc();
  v4[14] = type metadata accessor for SDAirDropMessage();
  v4[15] = swift_task_alloc();
  sub_10000A844(&qword_10096DF68);
  v4[16] = swift_task_alloc();
  uint64_t v5 = _s14descr1008C92C9V13UploadRequestVMa();
  v4[17] = v5;
  v4[18] = *(void *)(v5 - 8);
  v4[19] = swift_task_alloc();
  sub_10000A844(&qword_10096DFA8);
  v4[20] = swift_task_alloc();
  sub_10000A844(&qword_10096DF58);
  v4[21] = swift_task_alloc();
  uint64_t v6 = _s14descr1008C9AB9V10AskRequestVMa();
  v4[22] = v6;
  v4[23] = *(void *)(v6 - 8);
  v4[24] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  v4[25] = static AirDropActor.shared;
  return _swift_task_switch(sub_1002F7FC0, v7, 0);
}

uint64_t sub_1002F7FC0()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadConnection);
  v0[26] = v2;
  if (!v2)
  {
LABEL_4:
    uint64_t v7 = type metadata accessor for SFAirDropSend.Failure();
    sub_1002FA308(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v7 - 8) + 104))(v8, enum case for SFAirDropSend.Failure.badRequest(_:), v7);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  uint64_t v3 = v0[22];
  uint64_t v4 = v0[23];
  uint64_t v5 = v0[21];
  uint64_t v6 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_askRequest;
  swift_beginAccess();
  sub_10024A330(v6, v5, &qword_10096DF58);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) == 1)
  {
    sub_10000A7E8(v0[21], &qword_10096DF58);
    goto LABEL_4;
  }
  uint64_t v11 = v0[24];
  uint64_t v12 = v0[22];
  uint64_t v13 = v0[20];
  sub_1002FA430(v0[21], v11, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_10024A330(v11 + *(int *)(v12 + 20), v13, &qword_10096DFA8);
  uint64_t v14 = type metadata accessor for SFAirDrop.TransferType();
  uint64_t v15 = *(void *)(v14 - 8);
  LODWORD(v13) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
  swift_retain();
  uint64_t v16 = v0[20];
  if (v13 == 1)
  {
    sub_10000A7E8(v16, &qword_10096DFA8);
LABEL_11:
    sub_1006159D8();
    uint64_t v41 = v18;
    uint64_t v39 = v19;
    uint64_t v40 = sub_10061BC54();
    uint64_t v38 = v20;
    goto LABEL_12;
  }
  char v17 = SFAirDrop.TransferType.isOnlyExchange.getter();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);
  if ((v17 & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v40 = 0;
  uint64_t v41 = 0;
  uint64_t v38 = 0;
  uint64_t v39 = 0;
LABEL_12:
  uint64_t v21 = v0[18];
  uint64_t v22 = v0[19];
  uint64_t v24 = v0[16];
  uint64_t v23 = (int *)v0[17];
  uint64_t v25 = v0[15];
  uint64_t v42 = v0[13];
  uint64_t v26 = v0[11];
  uint64_t v27 = v0[9];
  uint64_t v28 = v0[10];
  uint64_t v29 = v0[8];
  sub_10024A330(v0[24], v22, (uint64_t *)&unk_10096DFB0);
  *(void *)(v22 + v23[5]) = v29;
  uint64_t v30 = (void *)(v22 + v23[6]);
  void *v30 = v27;
  v30[1] = v28;
  *(_OWORD *)(v22 + v23[7]) = xmmword_100770AE0;
  *(unsigned char *)(v22 + v23[8]) = 0;
  uint64_t v31 = (void *)(v22 + v23[9]);
  *uint64_t v31 = v41;
  v31[1] = v39;
  unint64_t v32 = (uint64_t *)(v22 + v23[10]);
  uint64_t *v32 = v40;
  v32[1] = v38;
  sub_1002FA830(v22, v24, (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v21 + 56))(v24, 0, 1, v23);
  uint64_t v33 = v26 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadRequest;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_10026B410(v24, v33, &qword_10096DF68);
  swift_endAccess();
  sub_1002FA830(v22, v25, (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
  swift_storeEnumTagMultiPayload();
  uint64_t v34 = sub_1006A97C4();
  v0[27] = v34;
  sub_1002F6F68(v25, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  *(void *)(v26 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadContext) = v34;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  sub_1002FA830(v26 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint, v42, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t EnumCaseMultiPayload = (int)swift_getEnumCaseMultiPayload();
  uint64_t v36 = *(void *)((char *)&unk_100772470 + EnumCaseMultiPayload * 8);
  sub_1002F6F68(v0[13], (uint64_t (*)(void))off_1008D6528[EnumCaseMultiPayload]);
  uint64_t v37 = (void *)swift_task_alloc();
  v0[28] = v37;
  void *v37 = v0;
  v37[1] = sub_1002F8534;
  return sub_100664428((uint64_t)v34, 0, 0xC000000000000000, v36, 0);
}

uint64_t sub_1002F8534()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 200);
  if (v0) {
    uint64_t v4 = sub_1002F882C;
  }
  else {
    uint64_t v4 = sub_1002F8660;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002F8660()
{
  if (qword_100969B68 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10096DD80);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Sent Initial UPLOAD Request", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[24];
  uint64_t v6 = v0[19];

  swift_unknownObjectRelease();
  swift_release();
  sub_1002F6F68(v6, (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
  sub_1002F6F68(v5, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1002F882C()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[19];
  swift_unknownObjectRelease();
  swift_release();
  sub_1002F6F68(v2, (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
  sub_1002F6F68(v1, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1002F8938()
{
  uint64_t v1 = (int *)_s14descr1008C9A51V15ExchangeRequestVMa(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);

  uint64_t v5 = v0 + v3;
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3 + v1[7];
  uint64_t v8 = type metadata accessor for SFAirDrop.ContactInfo.Handle();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v10 = (uint64_t *)(v5 + v1[8]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_100250CC4(*v10, v11);
  }
  uint64_t v12 = (void *)(v5 + v1[9]);
  if (v12[9])
  {
    swift_bridgeObjectRelease();
    unint64_t v13 = v12[3];
    if (v13 >> 60 != 15) {
      sub_100250CC4(v12[2], v13);
    }
    sub_100250CC4(v12[4], v12[5]);
    sub_100250CC4(v12[6], v12[7]);
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1002F8B34(uint64_t a1)
{
  uint64_t v4 = *(void *)(_s14descr1008C9A51V15ExchangeRequestVMa(0) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F0;
  return sub_1002ECBC8(a1, v5, v6);
}

uint64_t sub_1002F8C18()
{
  uint64_t v1 = (int *)_s14descr1008C9A51V15ExchangeRequestVMa(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);

  uint64_t v5 = v0 + v3;
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3 + v1[7];
  uint64_t v8 = type metadata accessor for SFAirDrop.ContactInfo.Handle();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v10 = (uint64_t *)(v5 + v1[8]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_100250CC4(*v10, v11);
  }
  uint64_t v12 = (void *)(v5 + v1[9]);
  if (v12[9])
  {
    swift_bridgeObjectRelease();
    unint64_t v13 = v12[3];
    if (v13 >> 60 != 15) {
      sub_100250CC4(v12[2], v13);
    }
    sub_100250CC4(v12[4], v12[5]);
    sub_100250CC4(v12[6], v12[7]);
    swift_bridgeObjectRelease();
  }
  swift_release();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1002F8E30(uint64_t a1)
{
  uint64_t v4 = *(void *)(_s14descr1008C9A51V15ExchangeRequestVMa(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_1002ED0A0(a1, v6, v7, v8);
}

uint64_t sub_1002F8F48(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  return sub_1002EDB38(a1, v4);
}

uint64_t sub_1002F8FE8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002F9020()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002F9058()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002F9098(uint64_t a1)
{
  return sub_1002F0FA0(a1);
}

uint64_t sub_1002F90A0()
{
  uint64_t v1 = type metadata accessor for NWConnection.State();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1002F917C()
{
  uint64_t v2 = *(void *)(type metadata accessor for NWConnection.State() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_10000A6F4;
  *(void *)(v4 + 80) = v3;
  *(_OWORD *)(v4 + 64) = v5;
  return _swift_task_switch(sub_1002F1244, 0, 0);
}

id sub_1002F9268(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_DWORD *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_receiverFeatureFlags] = 0;
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_primaryConnection] = 0;
  uint64_t v12 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_helloRequest];
  uint64_t v13 = _s12HelloRequestVMa();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_helloContinuation];
  uint64_t v15 = sub_10000A844(&qword_10096DE50);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_helloConnection] = 0;
  uint64_t v16 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_askRequest];
  uint64_t v17 = _s14descr1008C9AB9V10AskRequestVMa();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_askConnection] = 0;
  uint64_t v18 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_askContinuation];
  uint64_t v19 = sub_10000A844(&qword_10096DE68);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  uint64_t v20 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadRequest];
  uint64_t v21 = _s14descr1008C92C9V13UploadRequestVMa();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadContext] = 0;
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadConnection] = 0;
  uint64_t v22 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadContinuation];
  uint64_t v23 = sub_10000A844(&qword_10096DE80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_sandboxTokenURLPairs] = _swiftEmptyArrayStorage;
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_sendCompressionAdapter] = 0;
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_exchangeConnection] = 0;
  uint64_t v24 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_exchangeContinuation];
  uint64_t v25 = sub_10000A844((uint64_t *)&unk_10096DE90);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_errorConnection] = 0;
  uint64_t v26 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_lastActiveInterfaceType];
  uint64_t v27 = enum case for SFNWInterfaceType.awdl(_:);
  uint64_t v28 = type metadata accessor for SFNWInterfaceType();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v26, v27, v28);
  uint64_t v29 = v6;
  sub_10065E4D0();
  sub_1002FA830(a1, (uint64_t)&v29[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint], type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(void *)&v29[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_queue] = a4;
  *(void *)&v29[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_deviceStatus] = a2;
  *(void *)&v29[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_pseudonymService] = a3;
  uint64_t v30 = &v29[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_sendRequest];
  uint64_t v31 = type metadata accessor for SFAirDropSend.Request();
  uint64_t v32 = *(void *)(v31 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v30, a5, v31);
  uint64_t v33 = &v29[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_telemetry];
  uint64_t v34 = type metadata accessor for Date();
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56);
  v35(v33, 1, 1, v34);
  uint64_t v36 = (int *)type metadata accessor for SDAirDropSendConnectionTelemetry(0);
  v35(&v33[v36[5]], 1, 1, v34);
  v35(&v33[v36[6]], 1, 1, v34);
  v35(&v33[v36[7]], 1, 1, v34);
  v35(&v33[v36[8]], 1, 1, v34);
  v35(&v33[v36[9]], 1, 1, v34);
  id v37 = a4;
  id v38 = a2;
  swift_retain();

  v44.receiver = v29;
  v44.super_class = ObjectType;
  id v39 = [super init];
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(a5, v31);
  sub_1002F6F68(a1, type metadata accessor for SDAirDropDiscoveredEndpoint);
  return v39;
}

uint64_t sub_1002F97FC(NSObject *a1, void (*a2)(void))
{
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002FA830(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint, (uint64_t)v7, type metadata accessor for SDAirDropDiscoveredEndpoint);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1002FA430((uint64_t)v7, (uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    uint64_t v11 = (uint64_t *)&v10[*(int *)(v8 + 40)];
    uint64_t v12 = v11[1];
    if (v12)
    {
      uint64_t v13 = *v11;
      swift_bridgeObjectRetain();
      uint64_t v14 = sec_trust_copy_ref(a1);
      char v15 = sub_10045F40C(v13, v12, v14);

      swift_bridgeObjectRelease();
      if (qword_100969B68 != -1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      sub_10000B47C(v16, (uint64_t)qword_10096DD80);
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v17, v18)) {
        goto LABEL_13;
      }
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 67109120;
      v24[3] = v15 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Validated appleID and secTrust - receiver trusted: %{BOOL}d", v19, 8u);
    }
    else
    {
      if (qword_100969B68 != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      sub_10000B47C(v20, (uint64_t)qword_10096DD80);
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v17, v21))
      {
        char v15 = 1;
        goto LABEL_13;
      }
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v21, "No appleID for receiver present - handling as unknown receiver", v22, 2u);
      char v15 = 1;
    }
    swift_slowDealloc();
LABEL_13:

    a2(v15 & 1);
    return sub_1002F6F68((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  }
  sub_1002F6F68((uint64_t)v7, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1002F9BB8(uint64_t a1, NSObject *a2, void (*a3)(void))
{
}

uint64_t sub_1002F9BC0(uint64_t a1, void (*a2)(void))
{
  return sub_1002F0F10(a1, a2);
}

uint64_t sub_1002F9BC8()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002F9C08(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F0;
  return sub_1002EFFC4(a1, v4, v5, v6);
}

uint64_t sub_1002F9CBC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002F9CFC(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_10000A6F0;
  return sub_1002EBD20(a1, v5, v4);
}

unint64_t sub_1002F9DA4()
{
  unint64_t result = qword_10096E060;
  if (!qword_10096E060)
  {
    sub_100247840((uint64_t *)&unk_10096C8B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096E060);
  }
  return result;
}

uint64_t sub_1002F9E00()
{
  uint64_t v1 = (int *)(_s14descr1008C9841V12ErrorRequestVMa() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;

  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for SFAirDrop.TransferIdentifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v6 + v1[7];
  uint64_t v9 = type metadata accessor for CodableError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1002F9F2C(uint64_t a1)
{
  uint64_t v4 = *(void *)(_s14descr1008C9841V12ErrorRequestVMa() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F0;
  return sub_1002EE670(a1, v5, v6);
}

uint64_t sub_1002FA010()
{
  uint64_t v1 = (int *)(_s14descr1008C9841V12ErrorRequestVMa() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for SFAirDrop.TransferIdentifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v6 + v1[7];
  uint64_t v9 = type metadata accessor for CodableError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();

  return _swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_1002FA150(uint64_t a1)
{
  uint64_t v4 = *(void *)(_s14descr1008C9841V12ErrorRequestVMa() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_1002EECBC(a1, v6, v7, v8);
}

uint64_t sub_1002FA268(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  return sub_1002EF368(a1, v4);
}

uint64_t sub_1002FA308(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002FA350()
{
  uint64_t v1 = *(void *)(_s12HelloRequestVMa() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;

  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1002FA430(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002FA498(uint64_t a1)
{
  uint64_t v4 = *(void *)(_s12HelloRequestVMa() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F0;
  return sub_1002E7494(a1, v5, v6);
}

uint64_t sub_1002FA57C()
{
  uint64_t v1 = *(void *)(_s12HelloRequestVMa() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  swift_release();

  return _swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_1002FA678(uint64_t a1)
{
  uint64_t v4 = *(void *)(_s12HelloRequestVMa() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_1002E7F98(a1, v6, v7, v8);
}

uint64_t sub_1002FA790(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  return sub_1002E8C3C(a1, v4);
}

uint64_t sub_1002FA830(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002FA898()
{
  uint64_t v1 = (int *)_s14descr1008C9AB9V10AskRequestVMa();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);

  uint64_t v5 = v0 + v3;
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  }
  uint64_t v8 = v5 + v1[5];
  uint64_t v9 = type metadata accessor for SFAirDrop.TransferType();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = (uint64_t *)(v5 + v1[6]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    sub_100250CC4(*v11, v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = (uint64_t *)(v5 + v1[14]);
  unint64_t v14 = v13[1];
  if (v14 >> 60 != 15) {
    sub_100250CC4(*v13, v14);
  }
  char v15 = (uint64_t *)(v5 + v1[15]);
  unint64_t v16 = v15[1];
  if (v16 >> 60 != 15) {
    sub_100250CC4(*v15, v16);
  }
  uint64_t v17 = (uint64_t *)(v5 + v1[17]);
  unint64_t v18 = v17[1];
  if (v18 >> 60 != 15) {
    sub_100250CC4(*v17, v18);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1002FAB44(uint64_t a1)
{
  uint64_t v4 = *(void *)(_s14descr1008C9AB9V10AskRequestVMa() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F4;
  return sub_1002E9848(a1, v5, v6);
}

uint64_t sub_1002FAC28()
{
  uint64_t v1 = (int *)_s14descr1008C9AB9V10AskRequestVMa();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);

  uint64_t v5 = v0 + v3;
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  }
  uint64_t v8 = v5 + v1[5];
  uint64_t v9 = type metadata accessor for SFAirDrop.TransferType();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v11 = (uint64_t *)(v5 + v1[6]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    sub_100250CC4(*v11, v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = (uint64_t *)(v5 + v1[14]);
  unint64_t v14 = v13[1];
  if (v14 >> 60 != 15) {
    sub_100250CC4(*v13, v14);
  }
  char v15 = (uint64_t *)(v5 + v1[15]);
  unint64_t v16 = v15[1];
  if (v16 >> 60 != 15) {
    sub_100250CC4(*v15, v16);
  }
  uint64_t v17 = (uint64_t *)(v5 + v1[17]);
  unint64_t v18 = v17[1];
  if (v18 >> 60 != 15) {
    sub_100250CC4(*v17, v18);
  }
  swift_release();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1002FAEF0(uint64_t a1)
{
  uint64_t v4 = *(void *)(_s14descr1008C9AB9V10AskRequestVMa() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_1002E9FC4(a1, v6, v7, v8);
}

uint64_t sub_1002FB008()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002FB040(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  return sub_1002EB010(a1, v4);
}

uint64_t sub_1002FB0E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  unint64_t v3 = *(void *)(a1 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CB0(v2, v3);
  return a1;
}

uint64_t sub_1002FB17C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NWTXTRecord();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  NSString v9 = String._bridgeToObjectiveC()();
  int Boolean = GestaltGetBoolean();

  if (Boolean) {
    uint64_t v11 = 2043;
  }
  else {
    uint64_t v11 = 1019;
  }
  type metadata accessor for SFAirDropUserDefaults();
  unint64_t v12 = (void *)static SFAirDropUserDefaults.shared.getter();
  char v13 = SFAirDropUserDefaults.helloFeatureFlagsEnabled.getter();

  uint64_t v14 = 12288;
  if (v13) {
    uint64_t v14 = 12292;
  }
  unint64_t v34 = v14 | v11;
  uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v17 = v16;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v33 = &_swiftEmptyDictionarySingleton;
  unint64_t v34 = 0x8000000000000000;
  sub_100592950(v15, v17, v6, v8, isUniquelyReferenced_nonNull_native);
  unint64_t v34 = (unint64_t)v33;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (![*(id *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropDeviceSupportManager_deviceStatus) enableStrangers]|| (sub_10045F6E0() & 1) == 0|| (id v19 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropDeviceSupportManager_nearbyAgent), "bleAuthTag")) == 0)
  {
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = v30;
    goto LABEL_12;
  }
  uint64_t v20 = v19;
  uint64_t v21 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v23 = v22;

  Swift::String v24 = Data.base64EncodedString(options:)(0);
  sub_100250CC4(v21, v23);
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v27 = v26;
  if (!v24._object)
  {
LABEL_12:
    sub_1002A8F58(v25, v27);
    goto LABEL_13;
  }
  uint64_t v28 = (void *)v34;
  char v29 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v33 = v28;
  unint64_t v34 = 0x8000000000000000;
  sub_100592950(v24._countAndFlagsBits, (uint64_t)v24._object, v25, v27, v29);
  unint64_t v34 = (unint64_t)v33;
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NWTXTRecord.init(_:)();
  uint64_t v31 = NWTXTRecord.data.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v31;
}

uint64_t type metadata accessor for SDAirDropDeviceSupportManager()
{
  return self;
}

uint64_t sub_1002FB534()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10096E158);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10096E158);
  if (qword_100969CD8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946D8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1002FB5FC()
{
  sub_10000A844(&qword_10096E178);
  swift_allocObject();
  uint64_t result = TaskLocal.init(wrappedValue:)();
  qword_1009943E0 = result;
  return result;
}

void sub_1002FB658()
{
  uint64_t v1 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
  v1[2] = 16;
  v1[4] = 0;
  uint64_t v2 = v1 + 4;
  v1[5] = 0;
  if (qword_100969B78 != -1) {
    swift_once();
  }
  TaskLocal.get()();
  if ((v6 & 1) == 0 && v5 && v5 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t bag_uuid = aks_get_bag_uuid();
    sub_1002FE68C(bag_uuid, 0xD00000000000001ALL, 0x80000001007B8990);
    if (v0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      id v4 = [objc_allocWithZone((Class)NSUUID) initWithUUIDBytes:v2];
      swift_bridgeObjectRelease();
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    }
  }
}

unint64_t sub_1002FB78C(uint64_t a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, char a9)
{
  unint64_t v9 = a8;
  unint64_t v13 = a8 >> 60;
  unsigned int v14 = sub_1002FE8FC(a1, a2, (a8 >> 60 != 15) & (a9 ^ 1));
  if (qword_100969B70 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_10000B47C(v15, (uint64_t)qword_10096E158);
  unint64_t v53 = a4 >> 62;
  sub_10025ADCC(a3, a4);
  sub_10025ADCC(a5, a6);
  sub_10025ADCC(a3, a4);
  sub_10025ADCC(a5, a6);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  uint64_t v18 = v17;
  unint64_t v59 = a4;
  unsigned int v57 = v14;
  if (os_log_type_enabled(v16, v17))
  {
    unint64_t v51 = v13;
    uint64_t v19 = swift_slowAlloc();
    unint64_t v52 = v9;
    uint64_t v20 = (void *)swift_slowAlloc();
    v64[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315650;
    uint64_t v21 = sub_1002FE108(v14);
    log = v16;
    uint64_t v22 = a3;
    sub_100254634(v21, v23, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2112;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v20 = isa;
    sub_100250CC4(v22, a4);
    sub_100250CC4(v22, a4);
    *(_WORD *)(v19 + 22) = 2112;
    *(NSData *)&v62[1] = Data._bridgeToObjectiveC()();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v20[1] = *(void *)&v62[1];
    a3 = v22;
    sub_100250CC4(a5, a6);
    sub_100250CC4(a5, a6);
    _os_log_impl((void *)&_mh_execute_header, log, (os_log_type_t)v18, "Creating AKSSession with flags: %s localLTK: %@ remoteLTK: %@", (uint8_t *)v19, 0x20u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    unint64_t v9 = v52;
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    unint64_t v13 = v51;
    swift_slowDealloc();
  }
  else
  {
    sub_100250CC4(a3, a4);
    sub_100250CC4(a3, a4);
    sub_100250CC4(a5, a6);
    sub_100250CC4(a5, a6);
  }
  unsigned int v63 = 0;
  BOOL v25 = v13 >= 0xF;
  if (v13 >= 0xF) {
    uint64_t v26 = 0;
  }
  else {
    uint64_t v26 = a7;
  }
  if (v25) {
    unint64_t v27 = 0xC000000000000000;
  }
  else {
    unint64_t v27 = v9;
  }
  switch(v27 >> 62)
  {
    case 1uLL:
      if (v26 >> 32 < (int)v26)
      {
        __break(1u);
        goto LABEL_48;
      }
      unint64_t v32 = a4;
      sub_10025ADCC(a3, a4);
      uint64_t v18 = a6;
      sub_10025ADCC(a5, a6);
      sub_10025ADCC(a3, a4);
      sub_10025ADCC(a5, a6);
      sub_100278C78(a7, v9);
      sub_10025ADCC(v26, v27);
      uint64_t v35 = sub_1002FEB64((int)v26, v26 >> 32, v27 & 0x3FFFFFFFFFFFFFFFLL, a3, a4, a5, a6, v57);
      if (v58) {
        goto LABEL_52;
      }
      uint64_t v34 = v35;
      sub_100250CC4(v26, v27);
      sub_100250CC4(a3, a4);
      sub_100250CC4(a5, a6);
      uint64_t v36 = a3;
      unint64_t v37 = a4;
      goto LABEL_39;
    case 2uLL:
      unint64_t v54 = v27;
      uint64_t v18 = v27 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v30 = *(void *)(v26 + 16);
      uint64_t v31 = *(void *)(v26 + 24);
      unint64_t v32 = v59;
      sub_10025ADCC(a3, v59);
      unint64_t v27 = v9;
      sub_10025ADCC(a5, a6);
      sub_10025ADCC(a3, v59);
      sub_10025ADCC(a5, a6);
      sub_100278C78(a7, v9);
      swift_retain();
      swift_retain();
      uint64_t v33 = sub_1002FEB64(v30, v31, v18, a3, v59, a5, a6, v57);
      if (!v58)
      {
        uint64_t v34 = v33;
        swift_release();
        swift_release();
        sub_100250CC4(a3, v59);
        sub_100250CC4(a5, a6);
        sub_100250CC4(a3, v59);
        unint64_t v27 = v54;
        goto LABEL_40;
      }
      sub_100250CC4(a3, v59);
      sub_100250CC4(a5, a6);
      sub_100250CC4(a3, v59);
      sub_100250CC4(a5, a6);
      swift_release();
      swift_release();
      __break(1u);
LABEL_52:
      sub_100250CC4(a3, v32);
      sub_100250CC4(a5, a6);
      sub_100250CC4(a3, v32);
      sub_100250CC4(a5, a6);
      sub_100250CC4(v26, v27);
      __break(1u);
LABEL_53:
      sub_100250CC4(a3, v18);
      a4 = a6;
      sub_100250CC4(a5, a6);
      sub_100250CC4(a3, v18);
      sub_100250CC4(a5, a6);
      sub_100250CC4(a5, a6);
      uint64_t v49 = a5;
      goto LABEL_58;
    case 3uLL:
      memset(v64, 0, 14);
      sub_10025ADCC(a5, a6);
      sub_10025ADCC(a5, a6);
      switch((int)v53)
      {
        case 1:
          if (a3 >> 32 < (int)a3) {
            goto LABEL_49;
          }
          uint64_t v18 = a4;
          sub_10025ADCC(a3, a4);
          sub_10025ADCC(a3, a4);
          sub_10025ADCC(a5, a6);
          sub_10025ADCC(a3, a4);
          sub_10025ADCC(a5, a6);
          sub_100278C78(a7, v9);
          uint64_t v44 = sub_1002FEA84((int)a3, a3 >> 32, a4 & 0x3FFFFFFFFFFFFFFFLL, a5, a6);
          if (v58) {
            goto LABEL_56;
          }
          uint64_t v34 = v44;
          sub_100250CC4(a3, a4);
          sub_100250CC4(a5, a6);
          sub_100250CC4(a5, a6);
          sub_100250CC4(a3, a4);
          break;
        case 2:
          unint64_t v55 = v27;
          uint64_t v18 = a4 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v39 = *(void *)(a3 + 16);
          uint64_t v38 = *(void *)(a3 + 24);
          sub_10025ADCC(a3, a4);
          sub_10025ADCC(a5, a6);
          sub_10025ADCC(a3, a4);
          sub_10025ADCC(a5, a6);
          sub_100278C78(a7, v9);
          swift_retain();
          swift_retain();
          uint64_t v40 = sub_1002FEA84(v39, v38, a4 & 0x3FFFFFFFFFFFFFFFLL, a5, a6);
          if (v58) {
            goto LABEL_54;
          }
          uint64_t v34 = v40;
          swift_release();
          swift_release();
          goto LABEL_37;
        case 3:
          goto LABEL_28;
        default:
          *(void *)&v62[1] = a3;
          v62[3] = a4;
          LOWORD(v62[4]) = WORD2(a4);
          uint64_t v18 = a4;
          sub_10025ADCC(a3, a4);
          sub_10025ADCC(a5, a6);
          sub_10025ADCC(a3, a4);
          sub_10025ADCC(a5, a6);
          sub_100278C78(a7, v9);
          uint64_t v28 = a5;
          unint64_t v29 = a6;
          goto LABEL_19;
      }
LABEL_33:
      a4 = v18;
      goto LABEL_38;
    default:
      v64[0] = v26;
      LOWORD(v64[1]) = v27;
      BYTE2(v64[1]) = BYTE2(v27);
      BYTE3(v64[1]) = BYTE3(v27);
      BYTE4(v64[1]) = BYTE4(v27);
      BYTE5(v64[1]) = BYTE5(v27);
      sub_10025ADCC(a5, a6);
      sub_10025ADCC(a5, a6);
      switch((int)v53)
      {
        case 1:
          unint64_t v55 = v27;
          if (a3 >> 32 < (int)a3) {
            goto LABEL_50;
          }
          sub_10025ADCC(a3, a4);
          sub_10025ADCC(a3, a4);
          sub_10025ADCC(a5, a6);
          sub_10025ADCC(a3, a4);
          sub_10025ADCC(a5, a6);
          sub_100278C78(a7, v9);
          uint64_t v45 = sub_1002FEA84((int)a3, a3 >> 32, a4 & 0x3FFFFFFFFFFFFFFFLL, a5, a6);
          if (v58) {
            goto LABEL_57;
          }
          uint64_t v34 = v45;
          sub_100250CC4(a3, a4);
LABEL_37:
          sub_100250CC4(a5, a6);
          sub_100250CC4(a5, a6);
          sub_100250CC4(a3, a4);
          unint64_t v27 = v55;
          goto LABEL_38;
        case 2:
          uint64_t v18 = a4 & 0x3FFFFFFFFFFFFFFFLL;
          uint64_t v56 = *(void *)(a3 + 16);
          unint64_t v41 = v9;
          uint64_t v42 = *(void *)(a3 + 24);
          sub_10025ADCC(a3, a4);
          sub_10025ADCC(a5, a6);
          sub_10025ADCC(a3, a4);
          sub_10025ADCC(a5, a6);
          sub_100278C78(a7, v41);
          swift_retain();
          swift_retain();
          uint64_t v43 = sub_1002FEA84(v56, v42, a4 & 0x3FFFFFFFFFFFFFFFLL, a5, a6);
          if (v58)
          {
LABEL_54:
            sub_100250CC4(a3, a4);
            sub_100250CC4(a5, a6);
            sub_100250CC4(a3, a4);
            sub_100250CC4(a5, a6);
            sub_100250CC4(a5, a6);
            sub_100250CC4(a5, a6);
            swift_release();
            swift_release();
            __break(1u);
LABEL_55:
            sub_100250CC4(a3, a4);
            sub_100250CC4(a5, a6);
            sub_100250CC4(a3, a4);
            sub_100250CC4(a5, a6);
            sub_100250CC4(a5, a6);
            sub_100250CC4(a5, a6);
            __break(1u);
LABEL_56:
            sub_100250CC4(a3, v18);
            a4 = a6;
            sub_100250CC4(a5, a6);
            sub_100250CC4(a3, v18);
            sub_100250CC4(a5, a6);
            sub_100250CC4(a5, a6);
            sub_100250CC4(a5, a6);
            sub_100250CC4(a3, v18);
            __break(1u);
LABEL_57:
            sub_100250CC4(a3, a4);
            sub_100250CC4(a5, a6);
            sub_100250CC4(a3, a4);
            sub_100250CC4(a5, a6);
            sub_100250CC4(a5, a6);
            sub_100250CC4(a5, a6);
            uint64_t v49 = a3;
LABEL_58:
            sub_100250CC4(v49, a4);
            __break(1u);
            JUMPOUT(0x1002FC774);
          }
          uint64_t v34 = v43;
          swift_release();
          swift_release();
          sub_100250CC4(a5, a6);
          sub_100250CC4(a5, a6);
          sub_100250CC4(a3, a4);
LABEL_38:
          sub_100250CC4(a5, a6);
          uint64_t v36 = a3;
          unint64_t v37 = a4;
LABEL_39:
          sub_100250CC4(v36, v37);
LABEL_40:
          sub_100250CC4(a5, a6);
          sub_1002FE68C(v34, 0xD00000000000001CLL, 0x80000001007B8A20);
          uint64_t v46 = v63;
          if (qword_100969B78 != -1) {
            swift_once();
          }
          TaskLocal.get()();
          sub_100250CC4(v26, v27);
          unint64_t v47 = 0;
          if ((v64[0] & 0x100000000) == 0 && LODWORD(v64[0]))
          {
            if ((v64[0] & 0x80000000) == 0)
            {
              unint64_t v47 = (unint64_t)-LODWORD(v64[0]) << 32;
              return v47 | v46;
            }
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
          }
          return v47 | v46;
        case 3:
LABEL_28:
          memset(&v62[1], 0, 14);
          sub_10025ADCC(a3, a4);
          sub_10025ADCC(a5, a6);
          sub_10025ADCC(a3, a4);
          sub_10025ADCC(a5, a6);
          sub_100278C78(a7, v9);
          sub_1002FCAC0(a5, a6, v62);
          if (v58) {
            goto LABEL_55;
          }
          sub_100250CC4(a5, a6);
          sub_100250CC4(a5, a6);
          sub_100250CC4(a3, a4);
          uint64_t v34 = v62[0];
          goto LABEL_38;
        default:
          *(void *)&v62[1] = a3;
          LOWORD(v62[3]) = a4;
          *(_DWORD *)((char *)&v62[3] + 2) = a4 >> 16;
          uint64_t v18 = a4;
          sub_10025ADCC(a3, a4);
          sub_10025ADCC(a5, a6);
          sub_10025ADCC(a3, a4);
          sub_10025ADCC(a5, a6);
          sub_100278C78(a7, v9);
          uint64_t v28 = a5;
          unint64_t v29 = a6;
LABEL_19:
          sub_1002FCAC0(v28, v29, v62);
          if (v58) {
            goto LABEL_53;
          }
          sub_100250CC4(a5, a6);
          sub_100250CC4(a5, a6);
          sub_100250CC4(a3, v18);
          uint64_t v34 = v62[0];
          goto LABEL_33;
      }
  }
}

uint64_t sub_1002FC7A4@<X0>(uint64_t a1@<X2>, unint64_t a2@<X3>, uint64_t a3@<X4>, unint64_t a4@<X5>, uint64_t a5@<X6>, _DWORD *a6@<X8>)
{
  uint64_t v9 = a2;
  uint64_t v10 = a1;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_10025ADCC(a3, a4);
      sub_10025ADCC(v10, v9);
      int v18 = sub_1002FEA84((int)v10, v10 >> 32, v9 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
      if (v6) {
        goto LABEL_16;
      }
      int v16 = v18;
      sub_100250CC4(v10, v9);
      goto LABEL_11;
    case 2uLL:
      uint64_t v9 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v13 = *(void *)(a1 + 16);
      uint64_t v14 = *(void *)(a1 + 24);
      sub_10025ADCC(a3, a4);
      swift_retain();
      swift_retain();
      int v15 = sub_1002FEA84(v13, v14, v9, a3, a4);
      if (v6) {
        goto LABEL_15;
      }
      int v16 = v15;
      swift_release();
      swift_release();
LABEL_11:
      uint64_t result = sub_100250CC4(a3, a4);
      break;
    case 3uLL:
      memset(v21, 0, 14);
      uint64_t v9 = a5;
      sub_10025ADCC(a3, a4);
      uint64_t v11 = a3;
      unint64_t v12 = a4;
      goto LABEL_6;
    default:
      v21[0] = a1;
      LOWORD(v21[1]) = a2;
      BYTE2(v21[1]) = BYTE2(a2);
      BYTE3(v21[1]) = BYTE3(a2);
      BYTE4(v21[1]) = BYTE4(a2);
      BYTE5(v21[1]) = BYTE5(a2);
      uint64_t v9 = (uint64_t)v21 + BYTE6(a2);
      uint64_t v10 = a5;
      sub_10025ADCC(a3, a4);
      uint64_t v11 = a3;
      unint64_t v12 = a4;
LABEL_6:
      sub_1002FCAC0(v11, v12, &v20);
      if (v6)
      {
        sub_100250CC4(a3, a4);
        __break(1u);
LABEL_15:
        sub_100250CC4(a3, a4);
        swift_release();
        swift_release();
        __break(1u);
LABEL_16:
        sub_100250CC4(a3, a4);
        sub_100250CC4(v10, v9);
        __break(1u);
        JUMPOUT(0x1002FCAB0);
      }
      uint64_t result = sub_100250CC4(a3, a4);
      int v16 = v20;
      break;
  }
  *a6 = v16;
  return result;
}

uint64_t sub_1002FCAC0@<X0>(uint64_t a1@<X2>, unint64_t a2@<X3>, _DWORD *a3@<X8>)
{
  unint64_t v5 = a2;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1)
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
      }
      else
      {
        sub_10025ADCC(a1, a2);
        if (!__DataStorage._bytes.getter() || !__OFSUB__((int)a1, __DataStorage._offset.getter()))
        {
          __DataStorage._length.getter();
          sub_1002FCD9C(v13);
          if (!v3)
          {
            uint64_t result = sub_100250CC4(a1, v5);
            goto LABEL_16;
          }
LABEL_23:
          sub_100250CC4(a1, v5);
          __break(1u);
          JUMPOUT(0x1002FCD8CLL);
        }
      }
      __break(1u);
      return result;
    case 2uLL:
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v8 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      unint64_t v5 = __DataStorage._bytes.getter();
      if (!v5) {
        goto LABEL_6;
      }
      uint64_t v9 = __DataStorage._offset.getter();
      if (__OFSUB__(v7, v9)) {
        goto LABEL_20;
      }
      v5 += v7 - v9;
LABEL_6:
      if (__OFSUB__(v8, v7)) {
        goto LABEL_19;
      }
      __DataStorage._length.getter();
      sub_1002FCD9C(v13);
      if (v3)
      {
        swift_release();
        swift_release();
        __break(1u);
        goto LABEL_23;
      }
      swift_release();
      uint64_t result = swift_release();
LABEL_16:
      int v11 = v13[0];
LABEL_17:
      *a3 = v11;
      return result;
    case 3uLL:
      memset(v13, 0, 14);
      goto LABEL_10;
    default:
      v13[0] = a1;
      LOWORD(v13[1]) = a2;
      BYTE2(v13[1]) = BYTE2(a2);
      BYTE3(v13[1]) = BYTE3(a2);
      BYTE4(v13[1]) = BYTE4(a2);
      BYTE5(v13[1]) = BYTE5(a2);
LABEL_10:
      uint64_t result = sub_1002FCD9C(&v12);
      int v11 = v12;
      goto LABEL_17;
  }
}

uint64_t sub_1002FCD9C@<X0>(_DWORD *a1@<X8>)
{
  if (qword_100969B78 != -1) {
    swift_once();
  }
  TaskLocal.get()();
  if ((v14 & 1) == 0 && v13 && v13 < 0)
  {
    __break(1u);
LABEL_22:
    swift_once();
    goto LABEL_8;
  }
  uint64_t result = aks_remote_session();
  if (result != -536870211)
  {
LABEL_20:
    *a1 = result;
    return result;
  }
  uint64_t v10 = a1;
  if (qword_100969B70 != -1) {
    goto LABEL_22;
  }
LABEL_8:
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000B47C(v3, (uint64_t)qword_10096E158);
  id v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Received no memory error when creating session, clearing and retrying", v6, 2u);
    swift_slowDealloc();
  }

  if (aks_remote_session_reset_all())
  {
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 67109120;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to aks_remote_session_reset_all, errCode: %d", v9, 8u);
      swift_slowDealloc();
    }
  }
  TaskLocal.get()();
  uint64_t result = 0;
  if (v12)
  {
    a1 = v10;
LABEL_19:
    uint64_t result = aks_remote_session();
    goto LABEL_20;
  }
  a1 = v10;
  if (!v11 || (v11 & 0x80000000) == 0) {
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002FD0A8(int a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v22 = 0;
  unint64_t v23 = 0;
  uint64_t v10 = a3;
  uint64_t v11 = a2;
  switch(a3 >> 62)
  {
    case 1uLL:
      if (a2 >> 32 < (int)a2) {
        __break(1u);
      }
      sub_10025ADCC(a5, a6);
      sub_10025ADCC(v11, v10);
      uint64_t v18 = sub_1002FFE60((int)v11, v11 >> 32, v10 & 0x3FFFFFFFFFFFFFFFLL, a5, a6, a1, a4, (uint64_t)&v23, (uint64_t)&v22);
      if (v6) {
        goto LABEL_16;
      }
      uint64_t v17 = v18;
      sub_100250CC4(v11, v10);
      goto LABEL_11;
    case 2uLL:
      uint64_t v10 = a3 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v14 = *(void *)(a2 + 16);
      uint64_t v15 = *(void *)(a2 + 24);
      sub_10025ADCC(a5, a6);
      swift_retain();
      swift_retain();
      uint64_t v16 = sub_1002FFE60(v14, v15, v10, a5, a6, a1, a4, (uint64_t)&v23, (uint64_t)&v22);
      if (v6) {
        goto LABEL_15;
      }
      uint64_t v17 = v16;
      swift_release();
      swift_release();
LABEL_11:
      sub_100250CC4(a5, a6);
      break;
    case 3uLL:
      memset(v21, 0, 14);
      sub_10025ADCC(a5, a6);
      int v13 = (char *)v21;
      goto LABEL_6;
    default:
      v21[0] = a2;
      LOWORD(v21[1]) = a3;
      BYTE2(v21[1]) = BYTE2(a3);
      BYTE3(v21[1]) = BYTE3(a3);
      BYTE4(v21[1]) = BYTE4(a3);
      BYTE5(v21[1]) = BYTE5(a3);
      uint64_t v11 = (uint64_t)v21 + BYTE6(a3);
      sub_10025ADCC(a5, a6);
      int v13 = (char *)v21 + BYTE6(v10);
LABEL_6:
      sub_1002FD3D0((uint64_t)v21, (uint64_t)v13, a5, a1, a4, (uint64_t)&v23, (uint64_t)&v22, &v20);
      if (v6)
      {
        sub_100250CC4(a5, a6);
        __break(1u);
LABEL_15:
        sub_100250CC4(a5, a6);
        swift_release();
        swift_release();
        __break(1u);
LABEL_16:
        sub_100250CC4(a5, a6);
        sub_100250CC4(v11, v10);
        __break(1u);
        JUMPOUT(0x1002FD3C0);
      }
      sub_100250CC4(a5, a6);
      uint64_t v17 = v20;
      break;
  }
  return sub_1002FEC44(v17, v23, v22, 0xD000000000000019, 0x80000001007B8AA0);
}

uint64_t sub_1002FD3D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, _DWORD *a8@<X8>)
{
  uint64_t v78 = a7;
  uint64_t v79 = a6;
  uint64_t v83 = a5;
  int v84 = a4;
  uint64_t v86 = a3;
  v80 = a8;
  uint64_t v81 = a2;
  uint64_t v88 = a1;
  uint64_t v87 = type metadata accessor for AKSKeyClass();
  v85 = *(char **)(v87 - 8);
  uint64_t v8 = __chkstk_darwin(v87);
  uint64_t v10 = (char *)v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (uint64_t)v75 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)v75 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)v75 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)v75 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  BOOL v25 = (char *)v75 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (uint64_t)v75 - v27;
  __chkstk_darwin(v26);
  uint64_t v31 = (char *)v75 - v30;
  uint64_t v82 = v32;
  switch(v29 >> 62)
  {
    case 1uLL:
      uint64_t v35 = v86;
      uint64_t v36 = (int)v86;
      uint64_t v31 = (char *)((v35 >> 32) - (int)v35);
      if (v35 >> 32 >= (int)v35)
      {
        unint64_t v77 = v29;
        sub_10025ADCC(v86, v29);
        if (__DataStorage._bytes.getter())
        {
          uint64_t v37 = __DataStorage._offset.getter();
          uint64_t v38 = v85;
          if (__OFSUB__(v36, v37))
          {
LABEL_100:
            __break(1u);
LABEL_101:
            __break(1u);
LABEL_102:
            __break(1u);
            goto LABEL_103;
          }
        }
        else
        {
          uint64_t v38 = v85;
        }
        uint64_t v49 = __DataStorage._length.getter();
        if (v49 >= (uint64_t)v31) {
          os_log_type_t v50 = v31;
        }
        else {
          os_log_type_t v50 = (char *)v49;
        }
        if (qword_100969B78 != -1) {
          swift_once();
        }
        TaskLocal.get()();
        int v51 = 0;
        if ((v91[0] & 0x100000000) == 0 && LODWORD(v91[0]))
        {
          if ((v91[0] & 0x80000000) != 0) {
            goto LABEL_105;
          }
          int v51 = -LODWORD(v91[0]);
        }
        v85 = v50;
        LODWORD(v76) = v51;
        if ((_BYTE)v84)
        {
          if (v84 == 1) {
            unint64_t v52 = (unsigned int *)&enum case for AKSKeyClass.cku(_:);
          }
          else {
            unint64_t v52 = (unsigned int *)&enum case for AKSKeyClass.dku(_:);
          }
        }
        else
        {
          unint64_t v52 = (unsigned int *)&enum case for AKSKeyClass.aku(_:);
        }
        v69 = (void (*)(char *, void, uint64_t))*((void *)v38 + 13);
        uint64_t v70 = v87;
        v69(v19, *v52, v87);
        uint64_t v71 = AKSKeyClass.rawValue.getter();
        v72 = (void (*)(char *, uint64_t))*((void *)v38 + 1);
        v72(v19, v70);
        if (v71 >= (uint64_t)0xFFFFFFFF80000000)
        {
          if (v71 <= 0x7FFFFFFF)
          {
            uint64_t v73 = v87;
            v69(v16, *(unsigned int *)*(&off_1008D6570 + (char)v83), v87);
            uint64_t v74 = AKSKeyClass.rawValue.getter();
            v72(v16, v73);
            if (v74 >= (uint64_t)0xFFFFFFFF80000000)
            {
              if (v74 <= 0x7FFFFFFF)
              {
                int v62 = aks_sign_signing_key();
                uint64_t result = sub_100250CC4(v86, v77);
                goto LABEL_79;
              }
              goto LABEL_99;
            }
LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
            goto LABEL_100;
          }
          goto LABEL_95;
        }
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
        goto LABEL_96;
      }
      __break(1u);
LABEL_81:
      swift_once();
LABEL_19:
      TaskLocal.get()();
      uint64_t v33 = 0;
      uint64_t v10 = (char *)v87;
      uint64_t v44 = v85;
      if ((v90 & 1) == 0 && v89)
      {
        if (v89 < 0)
        {
LABEL_103:
          __break(1u);
          goto LABEL_104;
        }
        uint64_t v33 = -v89;
      }
      if ((_BYTE)v84)
      {
        if (v84 == 1) {
          uint64_t v45 = (unsigned int *)&enum case for AKSKeyClass.cku(_:);
        }
        else {
          uint64_t v45 = (unsigned int *)&enum case for AKSKeyClass.dku(_:);
        }
      }
      else
      {
        uint64_t v45 = (unsigned int *)&enum case for AKSKeyClass.aku(_:);
      }
      unsigned int v57 = (void (*)(char *, void, uint64_t))*((void *)v85 + 13);
      v57(v31, *v45, v87);
      uint64_t v13 = AKSKeyClass.rawValue.getter();
      unint64_t v59 = (void (*)(uint64_t, char *))*((void *)v44 + 1);
      uint64_t v22 = v44 + 8;
      uint64_t v58 = v59;
      v59((uint64_t)v31, v10);
      if (v13 < (uint64_t)0xFFFFFFFF80000000)
      {
LABEL_85:
        __break(1u);
      }
      else if (v13 <= 0x7FFFFFFF)
      {
        v57((char *)v28, *(unsigned int *)*(&off_1008D6570 + (char)v83), (uint64_t)v10);
        uint64_t v60 = AKSKeyClass.rawValue.getter();
        v58(v28, v10);
        if (v60 < (uint64_t)0xFFFFFFFF80000000)
        {
LABEL_90:
          __break(1u);
        }
        else if (v60 <= 0x7FFFFFFF)
        {
LABEL_64:
          uint64_t result = aks_sign_signing_key();
          int v62 = result;
          goto LABEL_79;
        }
        __break(1u);
        goto LABEL_92;
      }
      __break(1u);
LABEL_87:
      swift_once();
LABEL_31:
      TaskLocal.get()();
      int v47 = 0;
      if ((v91[0] & 0x100000000) == 0 && LODWORD(v91[0]))
      {
        if ((v91[0] & 0x80000000) != 0)
        {
LABEL_104:
          __break(1u);
LABEL_105:
          __break(1u);
        }
        int v47 = -LODWORD(v91[0]);
      }
      uint64_t v76 = v28;
      unint64_t v77 = v33;
      v85 = v31;
      v75[3] = v47;
      if ((_BYTE)v84)
      {
        if (v84 == 1) {
          uint64_t v48 = (unsigned int *)&enum case for AKSKeyClass.cku(_:);
        }
        else {
          uint64_t v48 = (unsigned int *)&enum case for AKSKeyClass.dku(_:);
        }
      }
      else
      {
        uint64_t v48 = (unsigned int *)&enum case for AKSKeyClass.aku(_:);
      }
      unsigned int v63 = (void (*)(uint64_t, void, uint64_t))*((void *)v22 + 13);
      uint64_t v64 = v87;
      v63(v13, *v48, v87);
      uint64_t v65 = AKSKeyClass.rawValue.getter();
      v66 = (void (*)(uint64_t, uint64_t))*((void *)v22 + 1);
      v66(v13, v64);
      if (v65 < (uint64_t)0xFFFFFFFF80000000)
      {
LABEL_92:
        __break(1u);
        goto LABEL_93;
      }
      if (v65 > 0x7FFFFFFF)
      {
LABEL_93:
        __break(1u);
        goto LABEL_94;
      }
      uint64_t v67 = v87;
      v63((uint64_t)v10, *(unsigned int *)*(&off_1008D6570 + (char)v83), v87);
      uint64_t v68 = AKSKeyClass.rawValue.getter();
      v66((uint64_t)v10, v67);
      if (v68 < (uint64_t)0xFFFFFFFF80000000)
      {
LABEL_96:
        __break(1u);
        goto LABEL_97;
      }
      if (v68 > 0x7FFFFFFF)
      {
LABEL_97:
        __break(1u);
        goto LABEL_98;
      }
      int v62 = aks_sign_signing_key();
      swift_release();
      uint64_t result = swift_release();
LABEL_79:
      _DWORD *v80 = v62;
      return result;
    case 2uLL:
      uint64_t v33 = v29 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v39 = *(void *)(v86 + 16);
      uint64_t v40 = *(void *)(v86 + 24);
      swift_retain();
      swift_retain();
      uint64_t v41 = __DataStorage._bytes.getter();
      if (v41)
      {
        uint64_t v42 = v41;
        uint64_t v43 = __DataStorage._offset.getter();
        if (__OFSUB__(v39, v43)) {
          goto LABEL_101;
        }
        uint64_t v31 = (char *)(v42 + v39 - v43);
      }
      else
      {
        uint64_t v31 = 0;
      }
      uint64_t v22 = v85;
      uint64_t v28 = v40 - v39;
      if (__OFSUB__(v40, v39))
      {
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
        goto LABEL_85;
      }
      uint64_t v46 = __DataStorage._length.getter();
      if (v46 < v28) {
        uint64_t v28 = v46;
      }
      if (qword_100969B78 != -1) {
        goto LABEL_87;
      }
      goto LABEL_31;
    case 3uLL:
      memset(v91, 0, 14);
      if (qword_100969B78 == -1) {
        goto LABEL_19;
      }
      goto LABEL_81;
    default:
      v91[0] = v86;
      LOWORD(v91[1]) = v29;
      BYTE2(v91[1]) = BYTE2(v29);
      unint64_t v77 = v29;
      BYTE3(v91[1]) = BYTE3(v29);
      BYTE4(v91[1]) = BYTE4(v29);
      BYTE5(v91[1]) = BYTE5(v29);
      if (qword_100969B78 != -1) {
        swift_once();
      }
      TaskLocal.get()();
      uint64_t v33 = 0;
      uint64_t v10 = (char *)v87;
      if ((v90 & 1) != 0 || !v89) {
        goto LABEL_8;
      }
      if (v89 < 0) {
        goto LABEL_102;
      }
      uint64_t v33 = -v89;
LABEL_8:
      if ((_BYTE)v84)
      {
        if (v84 == 1) {
          uint64_t v34 = (unsigned int *)&enum case for AKSKeyClass.cku(_:);
        }
        else {
          uint64_t v34 = (unsigned int *)&enum case for AKSKeyClass.dku(_:);
        }
      }
      else
      {
        uint64_t v34 = (unsigned int *)&enum case for AKSKeyClass.aku(_:);
      }
      unint64_t v53 = v85;
      uint64_t v13 = *((void *)v85 + 13);
      ((void (*)(char *, void, uint64_t))v13)(v25, *v34, v87);
      uint64_t v28 = AKSKeyClass.rawValue.getter();
      unint64_t v55 = (void (*)(char *, char *))*((void *)v53 + 1);
      uint64_t v31 = v53 + 8;
      unint64_t v54 = v55;
      v55(v25, v10);
      if (v28 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_83;
      }
      if (v28 > 0x7FFFFFFF) {
        goto LABEL_84;
      }
      ((void (*)(char *, void, char *))v13)(v22, *(unsigned int *)*(&off_1008D6570 + (char)v83), v10);
      uint64_t v56 = AKSKeyClass.rawValue.getter();
      v54(v22, v10);
      if (v56 < (uint64_t)0xFFFFFFFF80000000)
      {
        __break(1u);
      }
      else if (v56 <= 0x7FFFFFFF)
      {
        goto LABEL_64;
      }
      __break(1u);
      goto LABEL_90;
  }
}

_DWORD *sub_1002FDE90@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

Swift::Int sub_1002FDE9C()
{
  Swift::UInt32 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1002FDEE4()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1002FDF10()
{
  Swift::UInt32 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1002FDF54(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_1002FDF5C@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_1002FDF70@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_1002FDF84@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1002FDF98(_DWORD *a1, int *a2)
{
  int v3 = *a2;
  int v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_1002FDFC8@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(_DWORD *)a2 = v3;
  *(unsigned char *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_1002FDFF4@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  *v2 |= *result;
  int v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_1002FE018(_DWORD *result)
{
  *v1 |= *result;
  return result;
}

_DWORD *sub_1002FE02C(_DWORD *result)
{
  *v1 &= *result;
  return result;
}

_DWORD *sub_1002FE040(_DWORD *result)
{
  *v1 ^= *result;
  return result;
}

_DWORD *sub_1002FE054@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1002FE068(_DWORD *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1002FE07C(_DWORD *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1002FE090(_DWORD *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1002FE0A4()
{
  return *v0 == 0;
}

_DWORD *sub_1002FE0B4(_DWORD *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_1002FE0C8@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v3 = sub_10024A0E4(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1002FE108(__int16 a1)
{
  unint64_t v3 = sub_100249DCC((uint64_t)&off_1008D2190);
  sub_10000A844(&qword_10096E170);
  swift_arrayDestroy();
  int64_t v4 = 0;
  unint64_t v6 = v3 + 64;
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v7 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  __int16 v31 = a1;
  int v9 = a1 & 0x7F;
  unint64_t v10 = v8 & v5;
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = (char *)_swiftEmptyArrayStorage;
  if ((v8 & v5) == 0) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v13 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v4 << 6))
  {
    if (v9 == *(_DWORD *)(*(void *)(v3 + 48) + 4 * i))
    {
      uint64_t v18 = (uint64_t *)(*(void *)(v3 + 56) + 16 * i);
      uint64_t v19 = *v18;
      uint64_t v1 = v18[1];
      swift_bridgeObjectRetain();
      uint64_t v32 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v12 = sub_100253208(0, *((void *)v12 + 2) + 1, 1, v12);
      }
      unint64_t v21 = *((void *)v12 + 2);
      unint64_t v20 = *((void *)v12 + 3);
      if (v21 >= v20 >> 1) {
        uint64_t v12 = sub_100253208((char *)(v20 > 1), v21 + 1, 1, v12);
      }
      *((void *)v12 + 2) = v21 + 1;
      uint64_t v22 = &v12[16 * v21];
      *((void *)v22 + 4) = v32;
      *((void *)v22 + 5) = v1;
      if (v10) {
        goto LABEL_4;
      }
    }
    else if (v10)
    {
      goto LABEL_4;
    }
LABEL_7:
    int64_t v15 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v11) {
      break;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v4;
    if (v16) {
      goto LABEL_20;
    }
    int64_t v4 = v15 + 1;
    if (v15 + 1 >= v11) {
      break;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v4);
    if (v16) {
      goto LABEL_20;
    }
    int64_t v4 = v15 + 2;
    if (v15 + 2 >= v11) {
      break;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v4);
    if (v16) {
      goto LABEL_20;
    }
    int64_t v17 = v15 + 3;
    if (v17 >= v11) {
      break;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v17);
    if (!v16)
    {
      while (1)
      {
        int64_t v4 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          break;
        }
        if (v4 >= v11) {
          goto LABEL_27;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v4);
        ++v17;
        if (v16) {
          goto LABEL_20;
        }
      }
LABEL_40:
      __break(1u);
LABEL_41:
      uint64_t v12 = sub_100253208(0, *((void *)v12 + 2) + 1, 1, v12);
      goto LABEL_29;
    }
    int64_t v4 = v17;
LABEL_20:
    unint64_t v10 = (v16 - 1) & v16;
  }
LABEL_27:
  swift_release();
  LOWORD(v1) = v31;
  if ((v31 & 0x80) == 0) {
    goto LABEL_32;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_41;
  }
LABEL_29:
  unint64_t v24 = *((void *)v12 + 2);
  unint64_t v23 = *((void *)v12 + 3);
  if (v24 >= v23 >> 1) {
    uint64_t v12 = sub_100253208((char *)(v23 > 1), v24 + 1, 1, v12);
  }
  *((void *)v12 + 2) = v24 + 1;
  BOOL v25 = &v12[16 * v24];
  *((void *)v25 + 4) = 0x74616E696769726FLL;
  *((void *)v25 + 5) = 0xEA0000000000726FLL;
LABEL_32:
  if ((v1 & 0x100) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_100253208(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v27 = *((void *)v12 + 2);
    unint64_t v26 = *((void *)v12 + 3);
    if (v27 >= v26 >> 1) {
      uint64_t v12 = sub_100253208((char *)(v26 > 1), v27 + 1, 1, v12);
    }
    *((void *)v12 + 2) = v27 + 1;
    uint64_t v28 = &v12[16 * v27];
    *((void *)v28 + 4) = 0x6665524D4341;
    *((void *)v28 + 5) = 0xE600000000000000;
  }
  sub_10000A844((uint64_t *)&unk_100974C30);
  sub_1002FE630();
  uint64_t v29 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_1002FE46C()
{
  return sub_1002FE108(*v0);
}

void *sub_1002FE474(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Data.Iterator();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = &_swiftEmptyArrayStorage;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v9)
      {
        if (v9 >= 1)
        {
          sub_10000A844(&qword_10096B300);
          uint64_t v8 = (void *)swift_allocObject();
          size_t v12 = j__malloc_size(v8);
          v8[2] = v9;
          v8[3] = 2 * v12 - 64;
        }
        sub_10025ADCC(a1, a2);
        uint64_t v13 = Data._copyContents(initializing:)();
        sub_100250CC4(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if (v13 != v9)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x1002FE620);
        }
      }
      return v8;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return v8;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
}

unint64_t sub_1002FE630()
{
  unint64_t result = qword_10096CE90;
  if (!qword_10096CE90)
  {
    sub_100247840((uint64_t *)&unk_100974C30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096CE90);
  }
  return result;
}

uint64_t sub_1002FE68C(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result)
  {
    int v5 = result;
    if (qword_100969B70 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_10096E158);
    swift_bridgeObjectRetain_n();
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_100254634(a2, a3, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v9 + 12) = 1024;
      LODWORD(v17) = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s, AKS errCode: %d", (uint8_t *)v9, 0x12u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v15 = a2;
    unint64_t v16 = a3;
    swift_bridgeObjectRetain();
    v10._countAndFlagsBits = 0x646F43727265202CLL;
    v10._object = (void *)0xEB00000000203A65;
    String.append(_:)(v10);
    LODWORD(v17) = v5;
    v11._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v11);
    swift_bridgeObjectRelease();
    uint64_t v12 = v15;
    unint64_t v13 = v16;
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v14 = 10;
    *(void *)(v14 + 8) = v12;
    *(void *)(v14 + 16) = v13;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1002FE8FC(uint64_t a1, char a2, char a3)
{
  switch(a1)
  {
    case 1:
    case 4:
      uint64_t result = 10;
      if (a2) {
        return result | 0x80;
      }
      return result;
    case 2:
      uint64_t result = 5;
      if ((a2 & 1) == 0) {
        return result;
      }
      return result | 0x80;
    case 3:
      uint64_t result = 7;
      if ((a2 & 1) == 0) {
        return result;
      }
      return result | 0x80;
    case 5:
      uint64_t result = 1;
      if ((a2 & 1) == 0) {
        return result;
      }
      return result | 0x80;
    case 6:
      uint64_t result = 4;
      if ((a2 & 1) == 0) {
        return result;
      }
      return result | 0x80;
    case 7:
      uint64_t result = 11;
      if ((a2 & 1) == 0) {
        return result;
      }
      return result | 0x80;
    case 8:
      uint64_t result = 12;
      if ((a2 & 1) == 0) {
        return result;
      }
      return result | 0x80;
    case 9:
      if (a3) {
        uint64_t result = 263;
      }
      else {
        uint64_t result = 7;
      }
      if ((a2 & 1) == 0) {
        return result;
      }
      return result | 0x80;
    case 10:
      uint64_t result = 2;
      if ((a2 & 1) == 0) {
        return result;
      }
      return result | 0x80;
    default:
      _StringGuts.grow(_:)(28);
      swift_bridgeObjectRelease();
      v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v4);
      swift_bridgeObjectRelease();
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      JUMPOUT(0x1002FEA5CLL);
  }
}

uint64_t sub_1002FEA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = __DataStorage._bytes.getter();
  if (result)
  {
    uint64_t result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result)) {
      goto LABEL_8;
    }
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  __DataStorage._length.getter();
  uint64_t result = sub_1002FCAC0(a4, a5, &v11);
  if (!v10) {
    return v11;
  }
  return result;
}

uint64_t sub_1002FEB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  uint64_t result = __DataStorage._bytes.getter();
  if (result)
  {
    uint64_t result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result)) {
      goto LABEL_8;
    }
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  __DataStorage._length.getter();
  uint64_t result = sub_1002FC7A4(a4, a5, a6, a7, a8, &v17);
  if (!v16) {
    return v17;
  }
  return result;
}

uint64_t sub_1002FEC44(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1002FE68C(a1, a4, a5);
  if (!v5)
  {
    if (a2 && a3 >= 1)
    {
      uint64_t v11 = sub_1004EC700(a2, a3);
      free(a2);
      return v11;
    }
    else
    {
      if (qword_100969B70 != -1) {
        swift_once();
      }
      uint64_t v12 = type metadata accessor for Logger();
      sub_10000B47C(v12, (uint64_t)qword_10096E158);
      swift_bridgeObjectRetain_n();
      unint64_t v13 = Logger.logObject.getter();
      os_log_type_t v14 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 136315138;
        swift_bridgeObjectRetain();
        sub_100254634(a4, a5, &v20);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s, no AKS output", v15, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v20 = a4;
      unint64_t v21 = a5;
      swift_bridgeObjectRetain();
      v16._countAndFlagsBits = 0x74756F206F6E202CLL;
      v16._object = (void *)0xEB00000000747570;
      String.append(_:)(v16);
      uint64_t v17 = v20;
      unint64_t v18 = v21;
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v19 = 10;
      *(void *)(v19 + 8) = v17;
      *(void *)(v19 + 16) = v18;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1002FEEA8(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = a1;
  uint64_t v5 = type metadata accessor for AKSRefKeyParam();
  uint64_t v46 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v45 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v40 - v8;
  uint64_t v10 = (uint64_t *)type metadata accessor for AKSKeyClass();
  uint64_t v48 = *(v10 - 1);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v44 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  os_log_type_t v14 = (char *)&v40 - v13;
  if (qword_100969B70 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_10000B47C(v15, (uint64_t)qword_10096E158);
  Swift::String v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v16, v17))
  {

    uint64_t v52 = 0;
    unint64_t v53 = 0;
    if ((a2 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    uint64_t v25 = sub_100413648();
    if (v3) {
      return v5;
    }
    uint64_t v27 = v25;
    unint64_t v28 = v26;
    type metadata accessor for AKSRefKeyParams();
    swift_allocObject();
    AKSRefKeyParams.init()();
    uint64_t v29 = v46;
    uint64_t v43 = *(uint64_t **)(v46 + 104);
    ((void (*)(char *, void, uint64_t))v43)(v9, enum case for AKSRefKeyParam.remoteSessionSigningKeyCertificate(_:), v5);
    sub_10025ADCC(v27, v28);
    sub_1002FE474(v27, v28);
    uint64_t v47 = v5;
    sub_100250CC4(v27, v28);
    dispatch thunk of AKSRefKeyParams.set_data(key:value:)();
    unint64_t v41 = v28;
    uint64_t v42 = v27;
    uint64_t v30 = v9;
    __int16 v31 = *(void (**)(char *, uint64_t))(v29 + 8);
    uint64_t v32 = v47;
    v31(v30, v47);
    swift_release();
    uint64_t v33 = v45;
    ((void (*)(char *, void, uint64_t))v43)(v45, enum case for AKSRefKeyParam.remoteSessionSigningKeyType(_:), v32);
    dispatch thunk of AKSRefKeyParams.set_number(key:value:)();
    v31(v33, v32);
    dispatch thunk of AKSRefKeyParams.serialize()();
    a2 = v41;
    if (qword_100969B78 == -1)
    {
LABEL_26:
      TaskLocal.get()();
      if ((v51 & 1) != 0 || !v50 || (v50 & 0x80000000) == 0)
      {
        uint64_t v35 = v48;
        uint64_t v36 = v44;
        (*(void (**)(char *, void, uint64_t *))(v48 + 104))(v44, *(unsigned int *)*(&off_1008D6570 + (char)v49), v10);
        uint64_t v37 = AKSKeyClass.rawValue.getter();
        (*(void (**)(char *, uint64_t *))(v35 + 8))(v36, v10);
        if (v37 < (uint64_t)0xFFFFFFFF80000000)
        {
          __break(1u);
        }
        else
        {
          uint64_t v38 = v42;
          if (v37 <= 0x7FFFFFFF)
          {
            uint64_t signing_key_with_params = aks_create_signing_key_with_params();
            swift_bridgeObjectRelease();
            uint64_t v5 = sub_1002FEC44(signing_key_with_params, v53, v52, 0xD00000000000001BLL, 0x80000001007B89B0);
            swift_release();
            sub_100250CC4(v38, a2);
            return v5;
          }
        }
        __break(1u);
      }
      __break(1u);
    }
LABEL_36:
    swift_once();
    goto LABEL_26;
  }
  uint64_t v42 = v2;
  uint64_t v43 = v10;
  uint64_t v47 = v5;
  uint64_t v18 = swift_slowAlloc();
  unint64_t v53 = (unsigned char *)swift_slowAlloc();
  *(_DWORD *)uint64_t v18 = 136315394;
  uint64_t v52 = sub_100254634(qword_1007726C8[(char)v49], 0xE100000000000000, (uint64_t *)&v53);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  *(_WORD *)(v18 + 12) = 1024;
  if (qword_100969B78 != -1) {
    swift_once();
  }
  uint64_t v10 = &v52;
  TaskLocal.get()();
  int v19 = 0;
  if ((v52 & 0x100000000) == 0 && v52)
  {
    if ((v52 & 0x80000000) != 0)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    int v19 = -(int)v52;
  }
  LODWORD(v52) = v19;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  _os_log_impl((void *)&_mh_execute_header, v16, v17, "Generating LTK of class %s, keybag: %d", (uint8_t *)v18, 0x12u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  uint64_t v3 = v42;
  uint64_t v10 = v43;
  uint64_t v5 = v47;
  uint64_t v52 = 0;
  unint64_t v53 = 0;
  if (a2) {
    goto LABEL_22;
  }
LABEL_11:
  if (qword_100969B78 != -1) {
    swift_once();
  }
  TaskLocal.get()();
  uint64_t v5 = 0;
  if ((v51 & 1) == 0 && v50)
  {
    if (v50 < 0)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    uint64_t v5 = -v50;
  }
  uint64_t v20 = v48;
  (*(void (**)(char *, void, uint64_t *))(v48 + 104))(v14, *(unsigned int *)*(&off_1008D6570 + (char)v49), v10);
  uint64_t v21 = AKSKeyClass.rawValue.getter();
  uint64_t v22 = *(void (**)(char *, uint64_t *))(v20 + 8);
  a2 = v20 + 8;
  v22(v14, v10);
  if (v21 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v21 > 0x7FFFFFFF)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t signing_key = aks_create_signing_key();
  uint64_t v24 = sub_1002FEC44(signing_key, v53, v52, 0xD00000000000001BLL, 0x80000001007B89B0);
  if (!v3) {
    return v24;
  }
  return v5;
}

uint64_t sub_1002FF680(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1)
      {
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        swift_once();
LABEL_27:
        TaskLocal.get()();
        if ((v9 & 1) != 0 || !v8 || (v8 & 0x80000000) == 0)
        {
LABEL_30:
          uint64_t v4 = aks_remote_peer_drop();
          return sub_1002FE68C(v4, 0xD00000000000001ELL, 0x80000001007B8A00);
        }
        goto LABEL_38;
      }
      sub_10025ADCC(a1, a2);
      if (__DataStorage._bytes.getter() && __OFSUB__((int)a1, __DataStorage._offset.getter()))
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
      }
      __DataStorage._length.getter();
      if (qword_100969B78 != -1) {
        swift_once();
      }
      TaskLocal.get()();
      if ((v11 & 1) == 0 && v10 && v10 < 0) {
        goto LABEL_39;
      }
      uint64_t v4 = aks_remote_peer_drop();
      sub_100250CC4(a1, a2);
      return sub_1002FE68C(v4, 0xD00000000000001ELL, 0x80000001007B8A00);
    case 2uLL:
      uint64_t v5 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      if (__DataStorage._bytes.getter() && __OFSUB__(v5, __DataStorage._offset.getter())) {
        goto LABEL_36;
      }
      if (__OFSUB__(v6, v5)) {
        goto LABEL_33;
      }
      __DataStorage._length.getter();
      if (qword_100969B78 != -1) {
        swift_once();
      }
      TaskLocal.get()();
      if ((v11 & 1) == 0 && v10 && v10 < 0) {
        goto LABEL_40;
      }
      uint64_t v4 = aks_remote_peer_drop();
      swift_release();
      swift_release();
      return sub_1002FE68C(v4, 0xD00000000000001ELL, 0x80000001007B8A00);
    case 3uLL:
      if (qword_100969B78 == -1) {
        goto LABEL_27;
      }
      goto LABEL_34;
    default:
      if (qword_100969B78 != -1) {
        swift_once();
      }
      TaskLocal.get()();
      if ((v9 & 1) != 0 || !v8 || (v8 & 0x80000000) == 0) {
        goto LABEL_30;
      }
      goto LABEL_37;
  }
}

uint64_t sub_1002FFA60(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 >= (int)a1)
      {
        sub_10025ADCC(a1, a2);
        if (!__DataStorage._bytes.getter() || !__OFSUB__((int)a1, __DataStorage._offset.getter()))
        {
          __DataStorage._length.getter();
          if (qword_100969B78 != -1) {
            swift_once();
          }
          TaskLocal.get()();
          if ((v12 & 1) != 0 || !v11 || (v11 & 0x80000000) == 0)
          {
            uint64_t state = aks_remote_peer_get_state();
            sub_100250CC4(a1, a2);
            goto LABEL_31;
          }
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      swift_once();
LABEL_27:
      TaskLocal.get()();
      if ((v10 & 1) == 0 && v9 && v9 < 0) {
        goto LABEL_40;
      }
LABEL_30:
      uint64_t state = aks_remote_peer_get_state();
LABEL_31:
      uint64_t result = sub_1002FE68C(state, 0xD000000000000023, 0x80000001007B8AF0);
      if (!v2) {
        return 0;
      }
      return result;
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v7 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      if (__DataStorage._bytes.getter() && __OFSUB__(v6, __DataStorage._offset.getter())) {
        goto LABEL_38;
      }
      if (__OFSUB__(v7, v6)) {
        goto LABEL_35;
      }
      __DataStorage._length.getter();
      if (qword_100969B78 != -1) {
        swift_once();
      }
      TaskLocal.get()();
      if ((v12 & 1) == 0 && v11 && v11 < 0) {
        goto LABEL_42;
      }
      uint64_t state = aks_remote_peer_get_state();
      swift_release();
      swift_release();
      goto LABEL_31;
    case 3uLL:
      if (qword_100969B78 == -1) {
        goto LABEL_27;
      }
      goto LABEL_36;
    default:
      if (qword_100969B78 != -1) {
        swift_once();
      }
      TaskLocal.get()();
      if ((v10 & 1) != 0 || !v9 || (v9 & 0x80000000) == 0) {
        goto LABEL_30;
      }
      goto LABEL_39;
  }
}

uint64_t sub_1002FFE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result = __DataStorage._bytes.getter();
  uint64_t v16 = result;
  if (result)
  {
    uint64_t result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v16 += a1 - result;
  }
  BOOL v17 = __OFSUB__(a2, a1);
  uint64_t v18 = a2 - a1;
  if (v17)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v19 = __DataStorage._length.getter();
  if (v19 >= v18) {
    uint64_t v20 = v18;
  }
  else {
    uint64_t v20 = v19;
  }
  uint64_t v21 = v16 + v20;
  if (v16) {
    uint64_t v22 = v21;
  }
  else {
    uint64_t v22 = 0;
  }
  uint64_t result = sub_1002FD3D0(v16, v22, a4, a6, a7, a8, a9, &v24);
  if (!v23) {
    return v24;
  }
  return result;
}

uint64_t sub_1002FFF40(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v33 = a1;
  uint64_t v5 = type metadata accessor for AKSKeyClass();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  int v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  char v12 = (char *)&v31 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v31 - v14;
  __chkstk_darwin(v13);
  unint64_t v17 = (unint64_t)&v31 - v16;
  switch(a3 >> 62)
  {
    case 1uLL:
      int v9 = (char *)(int)a2;
      if (a2 >> 32 < (int)a2) {
        goto LABEL_46;
      }
      sub_10025ADCC(a2, a3);
      if (!__DataStorage._bytes.getter() || !__OFSUB__((int)a2, __DataStorage._offset.getter())) {
        goto LABEL_36;
      }
      goto LABEL_57;
    case 2uLL:
      uint64_t v32 = v5;
      uint64_t v20 = *(void *)(a2 + 16);
      uint64_t v5 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v21 = __DataStorage._bytes.getter();
      if (!v21)
      {
        a3 &= 0x3FFFFFFFFFFFFFFFuLL;
        char v12 = 0;
        if (!__OFSUB__(v5, v20)) {
          goto LABEL_18;
        }
LABEL_35:
        __break(1u);
LABEL_36:
        __DataStorage._length.getter();
        if (qword_100969B78 == -1) {
          goto LABEL_37;
        }
        goto LABEL_53;
      }
      uint64_t v22 = v21;
      a3 &= 0x3FFFFFFFFFFFFFFFuLL;
      uint64_t v23 = __DataStorage._offset.getter();
      if (__OFSUB__(v20, v23))
      {
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
        goto LABEL_59;
      }
      char v12 = (char *)(v22 + v20 - v23);
      if (__OFSUB__(v5, v20)) {
        goto LABEL_35;
      }
LABEL_18:
      __DataStorage._length.getter();
      if (qword_100969B78 != -1) {
LABEL_50:
      }
        swift_once();
      TaskLocal.get()();
      uint64_t v5 = v32;
      if ((v36[0] & 0x100000000) == 0 && LODWORD(v36[0]) && (v36[0] & 0x80000000) != 0)
      {
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, *(unsigned int *)*(&off_1008D6570 + (char)v33), v32);
      uint64_t v24 = AKSKeyClass.rawValue.getter();
      uint64_t v25 = *(void (**)(char *, uint64_t))(v6 + 8);
      v6 += 8;
      v25(v9, v5);
      if (v24 < (uint64_t)0xFFFFFFFF80000000)
      {
        __break(1u);
        goto LABEL_52;
      }
      if (v24 > 0x7FFFFFFF)
      {
LABEL_52:
        __break(1u);
LABEL_53:
        swift_once();
LABEL_37:
        TaskLocal.get()();
        if ((v36[0] & 0x100000000) == 0 && LODWORD(v36[0]) && (v36[0] & 0x80000000) != 0) {
LABEL_61:
        }
          __break(1u);
        (*(void (**)(char *, void, uint64_t))(v6 + 104))(v12, *(unsigned int *)*(&off_1008D6570 + (char)v33), v5);
        uint64_t v29 = AKSKeyClass.rawValue.getter();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
        if (v29 < (uint64_t)0xFFFFFFFF80000000)
        {
          __break(1u);
        }
        else if (v29 <= 0x7FFFFFFF)
        {
          uint64_t v26 = aks_validate_local_key();
          sub_100250CC4(a2, a3);
          return sub_1002FE68C(v26, 0xD000000000000020, 0x80000001007B89D0);
        }
        __break(1u);
        goto LABEL_56;
      }
      uint64_t v26 = aks_validate_local_key();
      swift_release();
      swift_release();
      return sub_1002FE68C(v26, 0xD000000000000020, 0x80000001007B89D0);
    case 3uLL:
      memset(v36, 0, 14);
      if (qword_100969B78 == -1) {
        goto LABEL_26;
      }
      goto LABEL_47;
    default:
      v36[0] = a2;
      LOWORD(v36[1]) = a3;
      BYTE2(v36[1]) = BYTE2(a3);
      BYTE3(v36[1]) = BYTE3(a3);
      BYTE4(v36[1]) = BYTE4(a3);
      BYTE5(v36[1]) = BYTE5(a3);
      if (qword_100969B78 != -1) {
        swift_once();
      }
      TaskLocal.get()();
      unint64_t v17 = 0;
      if ((v35 & 1) != 0 || !v34) {
        goto LABEL_8;
      }
      if (v34 < 0) {
        goto LABEL_58;
      }
      unint64_t v17 = -v34;
LABEL_8:
      (*(void (**)(char *, void, uint64_t))(v6 + 104))(v15, *(unsigned int *)*(&off_1008D6570 + (char)v33), v5);
      uint64_t v18 = AKSKeyClass.rawValue.getter();
      uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
      v6 += 8;
      v19(v15, v5);
      if (v18 < (uint64_t)0xFFFFFFFF80000000)
      {
        __break(1u);
      }
      else if (v18 <= 0x7FFFFFFF)
      {
        goto LABEL_32;
      }
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      swift_once();
LABEL_26:
      TaskLocal.get()();
      a2 = 0;
      if ((v35 & 1) == 0 && v34)
      {
        if (v34 < 0)
        {
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
        a2 = -v34;
      }
      (*(void (**)(unint64_t, void, uint64_t))(v6 + 104))(v17, *(unsigned int *)*(&off_1008D6570 + (char)v33), v5);
      uint64_t v27 = AKSKeyClass.rawValue.getter();
      unint64_t v28 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
      v6 += 8;
      v28(v17, v5);
      if (v27 < (uint64_t)0xFFFFFFFF80000000)
      {
        __break(1u);
      }
      else if (v27 <= 0x7FFFFFFF)
      {
LABEL_32:
        uint64_t v26 = aks_validate_local_key();
        return sub_1002FE68C(v26, 0xD000000000000020, 0x80000001007B89D0);
      }
      __break(1u);
      goto LABEL_50;
  }
}

ValueMetadata *type metadata accessor for AKSSessionFlags()
{
  return &type metadata for AKSSessionFlags;
}

unint64_t sub_100300638()
{
  unint64_t result = qword_10096E180;
  if (!qword_10096E180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096E180);
  }
  return result;
}

unint64_t sub_100300690()
{
  unint64_t result = qword_10096E188;
  if (!qword_10096E188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096E188);
  }
  return result;
}

unint64_t sub_1003006E8()
{
  unint64_t result = qword_10096E190;
  if (!qword_10096E190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096E190);
  }
  return result;
}

unint64_t sub_100300740()
{
  unint64_t result = qword_10096E198;
  if (!qword_10096E198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096E198);
  }
  return result;
}

uint64_t sub_100300794(uint64_t a1, unint64_t a2)
{
  uint64_t result = sub_1002FFA60(a1, a2);
  if (!v2 && v4)
  {
    if (qword_100969B70 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000B47C(v5, (uint64_t)qword_10096E158);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "wrapped_escrow_record_status for peer is not valid", v8, 2u);
      swift_slowDealloc();
    }

    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v9 = 10;
    *(void *)(v9 + 8) = 0xD000000000000020;
    *(void *)(v9 + 16) = 0x80000001007B8AC0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1003008D0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10096E1A0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10096E1A0);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100300998()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v2 - 8);
  int v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100969B80 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000B47C(v5, (uint64_t)qword_10096E1A0);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "SDAirDropSendService start", v8, 2u);
    swift_slowDealloc();
  }

  uint64_t v9 = v1[14];
  uint64_t v10 = v1[15];
  sub_10026BB6C(v1 + 11, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
  uint64_t v12 = qword_100969B90;
  swift_retain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = static AirDropActor.shared;
  uint64_t v14 = sub_100305620((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v13;
  v15[3] = v14;
  v15[4] = v1;
  swift_retain();
  sub_10028CAC4((uint64_t)v4, (uint64_t)&unk_10096E2A8, (uint64_t)v15);
  swift_release();
  sub_100667B98(0);
  v1[8] = &_swiftEmptyDictionarySingleton;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100300C1C(uint64_t a1, uint64_t a2)
{
  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  uint64_t v4 = type metadata accessor for SFAirDropSend.Request();
  v3[12] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[13] = v5;
  v3[14] = *(void *)(v5 + 64);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  sub_10000A844(&qword_10096C920);
  v3[17] = swift_task_alloc();
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_10096C7C0);
  v3[18] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[19] = v7;
  v3[20] = *(void *)(v7 + 64);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SFAirDrop.TransferType();
  v3[24] = v8;
  v3[25] = *(void *)(v8 - 8);
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for SFAirDropClient.Identifier();
  v3[28] = v9;
  v3[29] = *(void *)(v9 - 8);
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for UUID();
  v3[32] = v10;
  v3[33] = *(void *)(v10 - 8);
  v3[34] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v11 = static AirDropActor.shared;
  v3[35] = static AirDropActor.shared;
  return _swift_task_switch(sub_100300F1C, v11, 0);
}

uint64_t sub_100300F1C()
{
  v0[36] = *(void *)(v0[11] + 72);
  SFAirDropSend.Request.endpointID.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[37] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100300FC8;
  uint64_t v2 = v0[34];
  return sub_100468370(v2);
}

uint64_t sub_100300FC8(uint64_t a1)
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 280);
  uint64_t v4 = *(void *)(*(void *)v1 + 272);
  uint64_t v5 = *(void *)(*(void *)v1 + 264);
  uint64_t v6 = *(void *)(*(void *)v1 + 256);
  v2[38] = a1;
  swift_task_dealloc();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v2[39] = v7;
  v2[40] = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v4, v6);
  return _swift_task_switch(sub_100301150, v3, 0);
}

uint64_t sub_100301150()
{
  v72 = v0;
  if (*(void *)(v0[38] + 16))
  {
    if (qword_100969B80 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_10000B47C(v1, (uint64_t)qword_10096E1A0);
    swift_bridgeObjectRetain_n();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      v71[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 136315138;
      type metadata accessor for SDAirDropDiscoveredEndpoint(0);
      sub_100305620(&qword_10096B4F0, (void (*)(uint64_t))type metadata accessor for SDAirDropDiscoveredEndpoint);
      swift_bridgeObjectRetain();
      uint64_t v5 = Set.description.getter();
      unint64_t v7 = v6;
      swift_bridgeObjectRelease();
      v0[7] = sub_100254634(v5, v7, v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Starting send to %s", v4, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    uint64_t v22 = v0[31];
    if (Strong)
    {
      uint64_t v24 = v0[29];
      uint64_t v23 = v0[30];
      uint64_t v25 = v0[28];
      sub_10042D258(v23);
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v22, v23, v25);
    }
    else
    {
      (*(void (**)(void, void, void))(v0[29] + 104))(v0[31], enum case for SFAirDropClient.Identifier.daemon(_:), v0[28]);
    }
    uint64_t v27 = v0[26];
    uint64_t v26 = v0[27];
    uint64_t v28 = v0[24];
    uint64_t v29 = v0[25];
    SFAirDropSend.Request.type.getter();
    (*(void (**)(uint64_t, void, uint64_t))(v29 + 104))(v27, enum case for SFAirDrop.TransferType.peerPayment(_:), v28);
    char v30 = static SFAirDrop.TransferType.== infix(_:_:)();
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v31(v27, v28);
    v31(v26, v28);
    if (v30)
    {
      uint64_t v32 = v0[31];
      uint64_t v33 = v0[28];
      uint64_t v34 = v0[29];
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
      (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))(v32, enum case for SFAirDropClient.Identifier.wallet(_:), v33);
    }
    uint64_t v35 = v0[38];
    unint64_t v54 = (void (*)(uint64_t, uint64_t))v0[39];
    uint64_t v36 = v0[34];
    uint64_t v37 = v0[31];
    uint64_t v53 = v0[32];
    uint64_t v60 = v0[29];
    uint64_t v61 = v0[28];
    uint64_t v65 = v0[22];
    uint64_t v67 = v0[21];
    uint64_t v68 = v0[23];
    uint64_t v38 = v0[19];
    uint64_t v59 = v0[20];
    uint64_t v64 = v0[18];
    uint64_t v70 = v0[17];
    uint64_t v56 = v0[12];
    uint64_t v57 = v0[16];
    uint64_t v58 = v0[11];
    uint64_t v39 = v0[10];
    uint64_t v55 = v0[13];
    SFAirDropSend.Request.endpointID.getter();
    sub_1004689A4(v36, (uint64_t)(v0 + 2));
    v54(v36, v53);
    uint64_t v40 = SFAirDropSend.Request.requestSource.getter();
    sub_10053CEB8(v39, v35, (uint64_t)(v0 + 2), v40, v41, v37, v68);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    SFProgressTask.split()();
    uint64_t v42 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v70, 1, 1, v42);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v67, v65, v64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v57, v39, v56);
    unint64_t v43 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    unint64_t v44 = (v59 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v45 = (*(unsigned __int8 *)(v55 + 80) + v44 + 8) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
    uint64_t v46 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v38 + 32))(v46 + v43, v67, v64);
    *(void *)(v46 + v44) = v58;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v55 + 32))(v46 + v45, v57, v56);
    swift_retain();
    static Task<>.noThrow(priority:operation:)();
    swift_release();
    swift_release();
    sub_10000A7E8(v70, &qword_10096C920);
    uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v47(v65, v64);
    v47(v68, v64);
    sub_10000A7E8((uint64_t)(v0 + 2), &qword_100974FE0);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v37, v61);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v48 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_100969B80 != -1) {
      swift_once();
    }
    uint64_t v8 = v0[15];
    uint64_t v9 = v0[12];
    uint64_t v10 = v0[13];
    uint64_t v11 = v0[10];
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000B47C(v12, (uint64_t)qword_10096E1A0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v11, v9);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      unsigned int v63 = (void (*)(uint64_t, uint64_t))v0[39];
      uint64_t v15 = v0[34];
      uint64_t v16 = v0[32];
      uint64_t v62 = v0[15];
      uint64_t v66 = v0[13];
      uint64_t v69 = v0[12];
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      v71[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      SFAirDropSend.Request.endpointID.getter();
      sub_100305620((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v20 = v19;
      v63(v15, v16);
      v0[8] = sub_100254634(v18, v20, v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v62, v69);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "No resolved endpoints from initial endpoint: %s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v0[13] + 8))(v0[15], v0[12]);
    }

    uint64_t v49 = type metadata accessor for SFAirDropSend.Failure();
    sub_100305620(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
    swift_allocError();
    uint64_t v51 = v50;
    SFAirDropSend.Request.endpointID.getter();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v49 - 8) + 104))(v51, enum case for SFAirDropSend.Failure.missingEndpoint(_:), v49);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v48 = (uint64_t (*)(void))v0[1];
  }
  return v48();
}

uint64_t sub_100301BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[21] = a3;
  v4[22] = a4;
  v4[20] = a2;
  uint64_t v5 = type metadata accessor for UUID();
  v4[23] = v5;
  v4[24] = *(void *)(v5 - 8);
  v4[25] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFAirDrop.DisplayPriority();
  v4[26] = v6;
  v4[27] = *(void *)(v6 - 8);
  v4[28] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SFAirDropSend.Transfer.State();
  v4[29] = v7;
  v4[30] = *(void *)(v7 - 8);
  v4[31] = swift_task_alloc();
  uint64_t v8 = sub_10000A844(&qword_10096E2F0);
  v4[32] = v8;
  v4[33] = *(void *)(v8 - 8);
  v4[34] = swift_task_alloc();
  sub_10000A844(&qword_100975070);
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  v4[38] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v4[39] = v9;
  v4[40] = *(void *)(v9 - 8);
  v4[41] = swift_task_alloc();
  v4[42] = swift_task_alloc();
  v4[43] = swift_task_alloc();
  v4[44] = swift_task_alloc();
  v4[45] = swift_task_alloc();
  v4[46] = swift_task_alloc();
  v4[47] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SFAirDropSend.Transfer();
  v4[48] = v10;
  v4[49] = *(void *)(v10 - 8);
  v4[50] = swift_task_alloc();
  v4[51] = swift_task_alloc();
  v4[52] = swift_task_alloc();
  v4[53] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v11 = static AirDropActor.shared;
  v4[54] = static AirDropActor.shared;
  return _swift_task_switch(sub_100301F7C, v11, 0);
}

uint64_t sub_100301F7C()
{
  uint64_t v24 = v0;
  v0[55] = sub_10000A844((uint64_t *)&unk_10096C7C0);
  SFProgressTask.initialValue.getter();
  SFAirDropSend.Transfer.id.getter();
  if (qword_100969B80 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[46];
  uint64_t v1 = v0[47];
  uint64_t v3 = v0[39];
  uint64_t v4 = v0[40];
  uint64_t v5 = type metadata accessor for Logger();
  v0[56] = sub_10000B47C(v5, (uint64_t)qword_10096E1A0);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[57] = v6;
  v0[58] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v1, v3);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[46];
  uint64_t v11 = v0[39];
  uint64_t v12 = v0[40];
  if (v9)
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    sub_100305620(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[19] = sub_100254634(v14, v15, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v16(v10, v11);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "SDAirDropSendService.transfers ADD {id: %s}", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v16(v0[46], v0[39]);
  }

  v0[59] = v16;
  uint64_t v17 = (void *)v0[21];
  uint64_t v18 = v17[14];
  uint64_t v19 = v17[15];
  sub_10026BB6C(v17 + 11, v18);
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v19 + 40) + **(int **)(v19 + 40));
  unint64_t v20 = (void *)swift_task_alloc();
  v0[60] = v20;
  *unint64_t v20 = v0;
  v20[1] = sub_1003022C0;
  return v22(v18, v19);
}

uint64_t sub_1003022C0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 488) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 432);
  if (v0) {
    uint64_t v4 = sub_100303410;
  }
  else {
    uint64_t v4 = sub_1003023EC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1003023EC()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[57];
  uint64_t v2 = v0[53];
  uint64_t v4 = v0[48];
  uint64_t v3 = v0[49];
  uint64_t v5 = v0[47];
  uint64_t v6 = v0[45];
  uint64_t v8 = v0[38];
  uint64_t v7 = v0[39];
  v0[62] = *(void *)(v0[21] + 16);
  v1(v6, v5, v7);
  BOOL v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[63] = v9;
  v0[64] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v9(v8, v2, v4);
  uint64_t v10 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56);
  v0[65] = v10;
  v0[66] = (v3 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v10(v8, 0, 1, v4);
  uint64_t v11 = (void (*)(void *, void))CurrentValueSubject.value.modify();
  sub_1004672CC(v8, v6);
  v11(v0 + 10, 0);
  SFProgressTask.makeAsyncIterator()();
  v0[67] = v0[59];
  uint64_t v12 = static AirDropActor.shared;
  uint64_t v13 = sub_100305620((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v14 = (void *)swift_task_alloc();
  v0[68] = v14;
  void *v14 = v0;
  v14[1] = sub_1003025E0;
  uint64_t v15 = v0[37];
  uint64_t v16 = v0[32];
  return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v15, v12, v13, v16, v0 + 16);
}

uint64_t sub_1003025E0()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 432);
  if (v0) {
    uint64_t v4 = sub_100303944;
  }
  else {
    uint64_t v4 = sub_1003026F4;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1003026F4()
{
  uint64_t v102 = v0;
  uint64_t v2 = *(void *)(v0 + 384);
  uint64_t v1 = *(void *)(v0 + 392);
  uint64_t v3 = *(void *)(v0 + 296);
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v4(v3, 1, v2) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 264) + 8))(*(void *)(v0 + 272), *(void *)(v0 + 256));
    (*(void (**)(void, void, void))(v0 + 456))(*(void *)(v0 + 336), *(void *)(v0 + 376), *(void *)(v0 + 312));
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = *(void *)(v0 + 336);
    uint64_t v9 = *(void *)(v0 + 312);
    uint64_t v10 = *(void *)(v0 + 320);
    if (v7)
    {
      v100 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v101 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      sub_100305620(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
      uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 136) = sub_100254634(v12, v13, &v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v14 = v10 + 8;
      v100(v8, v9);
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "SDAirDropSendService.transfers REMOVE {id: %s}", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v14 = v10 + 8;
      (*(void (**)(void, void))(v0 + 472))(*(void *)(v0 + 336), *(void *)(v0 + 312));
    }

    *(void *)(v0 + 552) = v14;
    uint64_t v39 = *(void *)(v0 + 384);
    uint64_t v40 = *(void *)(v0 + 392);
    uint64_t v41 = *(void *)(v0 + 360);
    uint64_t v42 = *(void *)(v0 + 304);
    (*(void (**)(uint64_t, void, void))(v0 + 456))(v41, *(void *)(v0 + 376), *(void *)(v0 + 312));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v42, 1, 1, v39);
    unint64_t v43 = (void (*)(uint64_t, void))CurrentValueSubject.value.modify();
    sub_1004672CC(v42, v41);
    v43(v0 + 16, 0);
    SFAirDropSend.Request.endpointID.getter();
    unint64_t v44 = (void *)swift_task_alloc();
    *(void *)(v0 + 560) = v44;
    *unint64_t v44 = v0;
    v44[1] = sub_100303108;
    uint64_t v45 = *(void *)(v0 + 200);
    return sub_100468F98(v45);
  }
  else
  {
    v95 = v4;
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 456);
    v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504);
    uint64_t v17 = *(void *)(v0 + 408);
    uint64_t v16 = *(void *)(v0 + 416);
    uint64_t v18 = *(void *)(v0 + 376);
    uint64_t v19 = *(void *)(v0 + 352);
    uint64_t v20 = *(void *)(v0 + 312);
    int v89 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32);
    v89(v16, v3, v2);
    v15(v19, v18, v20);
    v93(v17, v16, v2);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    BOOL v23 = os_log_type_enabled(v21, v22);
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v0 + 536);
    uint64_t v25 = *(void *)(v0 + 408);
    uint64_t v27 = *(void *)(v0 + 384);
    uint64_t v26 = *(void *)(v0 + 392);
    uint64_t v28 = *(void *)(v0 + 352);
    uint64_t v29 = *(void *)(v0 + 312);
    if (v23)
    {
      uint64_t v87 = *(void *)(v0 + 408);
      uint64_t v98 = *(void *)(v0 + 384);
      uint64_t v31 = *(void *)(v0 + 240);
      uint64_t v30 = *(void *)(v0 + 248);
      uint64_t v92 = *(void *)(v0 + 232);
      uint64_t v32 = swift_slowAlloc();
      uint64_t v101 = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 136315394;
      sub_100305620(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
      uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter();
      os_log_type_t type = v22;
      *(void *)(v32 + 4) = sub_100254634(v33, v34, &v101);
      swift_bridgeObjectRelease();
      v24(v28, v29);
      *(_WORD *)(v32 + 12) = 2080;
      SFAirDropSend.Transfer.state.getter();
      sub_100305620(&qword_10096E2F8, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Transfer.State);
      uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v37 = v36;
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v92);
      *(void *)(v32 + 14) = sub_100254634(v35, v37, &v101);
      swift_bridgeObjectRelease();
      uint64_t v38 = v98;
      v99 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      v99(v87, v38);
      _os_log_impl((void *)&_mh_execute_header, v21, type, "SDAirDropSendService.transfers UPDATE {id: %s, state: %s}", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v24(*(void *)(v0 + 352), *(void *)(v0 + 312));
      v99 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      v99(v25, v27);
    }

    uint64_t v47 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 520);
    uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504);
    uint64_t v49 = *(void *)(v0 + 416);
    uint64_t v50 = *(void *)(v0 + 384);
    uint64_t v51 = *(void *)(v0 + 288);
    (*(void (**)(void, void, void))(v0 + 456))(*(void *)(v0 + 344), *(void *)(v0 + 376), *(void *)(v0 + 312));
    v48(v51, v49, v50);
    v47(v51, 0, 1, v50);
    v94 = (void (*)(void))CurrentValueSubject.value.modify();
    uint64_t v53 = v52;
    if (v95(v51, 1, v50) == 1)
    {
      uint64_t v54 = *(void *)(v0 + 344);
      sub_10000A7E8(*(void *)(v0 + 288), &qword_100975070);
      swift_bridgeObjectRetain();
      unint64_t v55 = sub_10058392C(v54);
      LOBYTE(v54) = v56;
      swift_bridgeObjectRelease();
      if (v54)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v0 + 144) = *v53;
        *uint64_t v53 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_10058E314();
        }
        uint64_t v58 = *(void *)(v0 + 384);
        uint64_t v59 = *(void *)(v0 + 392);
        uint64_t v60 = *(void *)(v0 + 280);
        (*(void (**)(unint64_t, void))(v0 + 536))(*(void *)(*(void *)(v0 + 144) + 48) + *(void *)(*(void *)(v0 + 320) + 72) * v55, *(void *)(v0 + 312));
        uint64_t v61 = *(void *)(v0 + 144);
        v89(v60, *(void *)(v61 + 56) + *(void *)(v59 + 72) * v55, v58);
        sub_1002ABDC4(v55, v61);
        *uint64_t v53 = v61;
        swift_bridgeObjectRelease();
        uint64_t v62 = 0;
      }
      else
      {
        uint64_t v62 = 1;
      }
      unsigned int v63 = (uint64_t *)(v0 + 472);
      uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
      uint64_t v70 = *(void *)(v0 + 344);
      uint64_t v71 = *(void *)(v0 + 312);
      uint64_t v72 = *(void *)(v0 + 280);
      (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0 + 520))(v72, v62, 1, *(void *)(v0 + 384));
      v69(v70, v71);
      sub_10000A7E8(v72, &qword_100975070);
    }
    else
    {
      unsigned int v63 = (uint64_t *)(v0 + 536);
      uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v0 + 536);
      uint64_t v65 = *(void *)(v0 + 400);
      uint64_t v66 = *(void *)(v0 + 344);
      uint64_t v67 = *(void *)(v0 + 312);
      v89(v65, *(void *)(v0 + 288), *(void *)(v0 + 384));
      char v68 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v101 = *v53;
      *uint64_t v53 = 0x8000000000000000;
      sub_100592F28(v65, v66, v68);
      *uint64_t v53 = v101;
      swift_bridgeObjectRelease();
      v64(v66, v67);
    }
    uint64_t v73 = *(void *)(v0 + 416);
    uint64_t v96 = *(void *)(v0 + 384);
    uint64_t v97 = *v63;
    uint64_t v75 = *(void *)(v0 + 240);
    uint64_t v74 = *(void *)(v0 + 248);
    uint64_t v76 = *(void *)(v0 + 224);
    unint64_t v77 = *(void **)(v0 + 168);
    uint64_t v91 = *(void *)(v0 + 232);
    uint64_t v78 = v77 + 11;
    uint64_t v79 = *(void *)(v0 + 216);
    uint64_t v90 = *(void *)(v0 + 208);
    v94();
    sub_100569294(v73);
    uint64_t v80 = v77[14];
    uint64_t v81 = v77[15];
    sub_10026BB6C(v78, v80);
    SFAirDropSend.Transfer.state.getter();
    SFAirDropSend.Transfer.displayPriority.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 48))(v74, v76, v80, v81);
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v76, v90);
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v91);
    v99(v73, v96);
    *(void *)(v0 + 536) = v97;
    uint64_t v82 = static AirDropActor.shared;
    uint64_t v83 = sub_100305620((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    int v84 = (void *)swift_task_alloc();
    *(void *)(v0 + 544) = v84;
    *int v84 = v0;
    v84[1] = sub_1003025E0;
    uint64_t v85 = *(void *)(v0 + 296);
    uint64_t v86 = *(void *)(v0 + 256);
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v85, v82, v83, v86, v0 + 128);
  }
}

uint64_t sub_100303108()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 432);
  uint64_t v2 = *(void *)(*(void *)v0 + 200);
  uint64_t v3 = *(void *)(*(void *)v0 + 192);
  uint64_t v4 = *(void *)(*(void *)v0 + 184);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_100303274, v1, 0);
}

uint64_t sub_100303274()
{
  uint64_t v1 = *(void *)(v0 + 424);
  uint64_t v3 = *(void *)(v0 + 384);
  uint64_t v2 = *(void *)(v0 + 392);
  (*(void (**)(void, void))(v0 + 472))(*(void *)(v0 + 376), *(void *)(v0 + 312));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100303410()
{
  uint64_t v33 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
  (*(void (**)(void, void, void))(v0 + 456))(*(void *)(v0 + 328), *(void *)(v0 + 376), *(void *)(v0 + 312));
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void *)(v0 + 328);
    uint64_t v5 = *(void *)(v0 + 312);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v30 = (void *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_100305620(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
    uint64_t v7 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 120) = sub_100254634(v7, v8, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v1(v4, v5);
    *(_WORD *)(v6 + 12) = 2112;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 112) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v30 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "SDAirDropSendService.transfers ERROR {id: %s, error: %@}", (uint8_t *)v6, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 328);
    uint64_t v11 = *(void *)(v0 + 312);
    swift_errorRelease();
    v1(v10, v11);
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(void, void, void))(v0 + 456))(*(void *)(v0 + 336), *(void *)(v0 + 376), *(void *)(v0 + 312));
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v15 = *(void *)(v0 + 336);
  uint64_t v16 = *(void *)(v0 + 312);
  uint64_t v17 = *(void *)(v0 + 320);
  if (v14)
  {
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315138;
    sub_100305620(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 136) = sub_100254634(v19, v20, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v21 = v17 + 8;
    v31(v15, v16);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "SDAirDropSendService.transfers REMOVE {id: %s}", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v21 = v17 + 8;
    (*(void (**)(void, void))(v0 + 472))(*(void *)(v0 + 336), *(void *)(v0 + 312));
  }

  *(void *)(v0 + 552) = v21;
  uint64_t v22 = *(void *)(v0 + 384);
  uint64_t v23 = *(void *)(v0 + 392);
  uint64_t v24 = *(void *)(v0 + 360);
  uint64_t v25 = *(void *)(v0 + 304);
  (*(void (**)(uint64_t, void, void))(v0 + 456))(v24, *(void *)(v0 + 376), *(void *)(v0 + 312));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v25, 1, 1, v22);
  uint64_t v26 = (void (*)(uint64_t, void))CurrentValueSubject.value.modify();
  sub_1004672CC(v25, v24);
  v26(v0 + 16, 0);
  SFAirDropSend.Request.endpointID.getter();
  uint64_t v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 560) = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_100303108;
  uint64_t v28 = *(void *)(v0 + 200);
  return sub_100468F98(v28);
}

uint64_t sub_100303944()
{
  uint64_t v33 = v0;
  (*(void (**)(void, void))(*(void *)(v0 + 264) + 8))(*(void *)(v0 + 272), *(void *)(v0 + 256));
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 536);
  (*(void (**)(void, void, void))(v0 + 456))(*(void *)(v0 + 328), *(void *)(v0 + 376), *(void *)(v0 + 312));
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void *)(v0 + 328);
    uint64_t v5 = *(void *)(v0 + 312);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v30 = (void *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_100305620(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
    uint64_t v7 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 120) = sub_100254634(v7, v8, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v1(v4, v5);
    *(_WORD *)(v6 + 12) = 2112;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 112) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v30 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "SDAirDropSendService.transfers ERROR {id: %s, error: %@}", (uint8_t *)v6, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 328);
    uint64_t v11 = *(void *)(v0 + 312);
    swift_errorRelease();
    v1(v10, v11);
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(void, void, void))(v0 + 456))(*(void *)(v0 + 336), *(void *)(v0 + 376), *(void *)(v0 + 312));
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v15 = *(void *)(v0 + 336);
  uint64_t v16 = *(void *)(v0 + 312);
  uint64_t v17 = *(void *)(v0 + 320);
  if (v14)
  {
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315138;
    sub_100305620(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 136) = sub_100254634(v19, v20, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v21 = v17 + 8;
    v31(v15, v16);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "SDAirDropSendService.transfers REMOVE {id: %s}", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v21 = v17 + 8;
    (*(void (**)(void, void))(v0 + 472))(*(void *)(v0 + 336), *(void *)(v0 + 312));
  }

  *(void *)(v0 + 552) = v21;
  uint64_t v22 = *(void *)(v0 + 384);
  uint64_t v23 = *(void *)(v0 + 392);
  uint64_t v24 = *(void *)(v0 + 360);
  uint64_t v25 = *(void *)(v0 + 304);
  (*(void (**)(uint64_t, void, void))(v0 + 456))(v24, *(void *)(v0 + 376), *(void *)(v0 + 312));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v25, 1, 1, v22);
  uint64_t v26 = (void (*)(uint64_t, void))CurrentValueSubject.value.modify();
  sub_1004672CC(v25, v24);
  v26(v0 + 16, 0);
  SFAirDropSend.Request.endpointID.getter();
  uint64_t v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 560) = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_100303108;
  uint64_t v28 = *(void *)(v0 + 200);
  return sub_100468F98(v28);
}

uint64_t sub_100303E9C(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  sub_10000A844(&qword_100975070);
  v2[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropSend.Transfer();
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v2[16] = static AirDropActor.shared;
  return _swift_task_switch(sub_100304080, v6, 0);
}

uint64_t sub_100304080()
{
  uint64_t v27 = v0;
  if (qword_100969B80 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[13];
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000B47C(v5, (uint64_t)qword_10096E1A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v1, v4);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v10 = v0[14];
  uint64_t v9 = v0[15];
  uint64_t v11 = v0[13];
  if (v8)
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    sub_100305620(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[3] = sub_100254634(v13, v14, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Canceling send transfer %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v10 + 8))(v0[15], v0[13]);
  }

  CurrentValueSubject.value.getter();
  uint64_t v15 = v0[2];
  if (*(void *)(v15 + 16) && (unint64_t v16 = sub_10058392C(v0[4]), (v17 & 1) != 0))
  {
    (*(void (**)(void, unint64_t, void))(v0[11] + 16))(v0[9], *(void *)(v15 + 56) + *(void *)(v0[11] + 72) * v16, v0[10]);
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v18 = 1;
  }
  uint64_t v19 = v0[10];
  uint64_t v20 = v0[11];
  uint64_t v21 = v0[9];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v21, v18, 1, v19);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v21, 1, v19) == 1)
  {
    sub_10000A7E8(v0[9], &qword_100975070);
    sub_10053DE50(v0[4]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[11] + 32))(v0[12], v0[9], v0[10]);
    SFAirDropSend.Transfer.endpointID.getter();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1003044A8;
    uint64_t v24 = v0[8];
    return sub_100468F98(v24);
  }
}

uint64_t sub_1003044A8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 128);
  uint64_t v2 = *(void *)(*(void *)v0 + 64);
  uint64_t v3 = *(void *)(*(void *)v0 + 56);
  uint64_t v4 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_100304614, v1, 0);
}

uint64_t sub_100304614()
{
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  sub_10053DE50(v0[4]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1003046DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  uint64_t v5 = sub_10000A844(&qword_10096E2B0);
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  uint64_t v6 = sub_10000A844(&qword_10096E2B8);
  v4[9] = v6;
  v4[10] = *(void *)(v6 - 8);
  v4[11] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  v4[12] = static AirDropActor.shared;
  return _swift_task_switch(sub_10030483C, v7, 0);
}

uint64_t sub_10030483C()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  v0[2] = *(void *)(v0[5] + 16);
  sub_10000A844(&qword_10096E2C0);
  sub_1002AE308(&qword_10096E2C8, &qword_10096E2C0);
  Publisher<>.values.getter();
  AsyncPublisher.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = static AirDropActor.shared;
  uint64_t v5 = sub_100305620((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  BOOL v8 = (char *)&dword_1009709C0 + dword_1009709C0;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[13] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1003049D8;
  return ((uint64_t (*)(uint64_t, uint64_t, void *))v8)(v4, v5, v0 + 3);
}

uint64_t sub_1003049D8(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 96);
  *(void *)(*(void *)v1 + 112) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100304AF0, v2, 0);
}

uint64_t sub_100304AF0()
{
  unint64_t v16 = v0;
  uint64_t v1 = v0[14];
  if (v1)
  {
    if (qword_100969B80 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000B47C(v2, (uint64_t)qword_10096E1A0);
    swift_bridgeObjectRetain_n();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136315138;
      type metadata accessor for SFAirDrop.TransferIdentifier();
      type metadata accessor for SFAirDropSend.Transfer();
      sub_100305620(&qword_10096C610, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
      swift_bridgeObjectRetain();
      uint64_t v6 = Dictionary.description.getter();
      unint64_t v8 = v7;
      swift_bridgeObjectRelease();
      v0[4] = sub_100254634(v6, v8, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Send transfers updates in daemon: %s", v5, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_1003644BC(v1, (uint64_t)&_swiftEmptyDictionarySingleton);
    swift_bridgeObjectRelease();
    uint64_t v11 = static AirDropActor.shared;
    uint64_t v12 = sub_100305620((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    unint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1009709C0 + dword_1009709C0);
    uint64_t v13 = (void *)swift_task_alloc();
    v0[13] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1003049D8;
    return v14(v11, v12);
  }
  else
  {
    (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

id *sub_100304E7C()
{
  swift_release();

  sub_100261080((uint64_t)(v0 + 5));
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  sub_10024D338((uint64_t)(v0 + 11));

  return v0;
}

uint64_t sub_100304EE4()
{
  sub_100304E7C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDAirDropSendService()
{
  return self;
}

uint64_t sub_100304F3C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100304F7C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_10000A6F4;
  return sub_1003046DC(a1, v4, v5, v6);
}

void *sub_100305030(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, long long *a6)
{
  unint64_t v7 = v6;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v22 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v8 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v11);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v12 - 8);
  v6[6] = 0;
  swift_unknownObjectWeakInit();
  sub_1002B62F0();
  static DispatchQoS.default.getter();
  uint64_t v29 = _swiftEmptyArrayStorage;
  sub_100305620((unint64_t *)&unk_100974840, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000A844((uint64_t *)&unk_10096A1B0);
  sub_1002AE308((unint64_t *)&qword_100974850, (uint64_t *)&unk_10096A1B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v22);
  uint64_t v13 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v6[16] = v13;
  unint64_t v14 = v23;
  uint64_t v15 = v24;
  v6[3] = v23;
  v6[4] = v15;
  unint64_t v16 = v26;
  v7[7] = v25;
  v7[8] = &_swiftEmptyDictionarySingleton;
  v7[9] = v16;
  id v17 = v14;
  id v18 = v15;
  swift_retain();
  id v19 = v16;
  uint64_t v29 = (void *)sub_100245E64((uint64_t)_swiftEmptyArrayStorage);
  sub_10000A844(&qword_10096E2C0);
  swift_allocObject();
  v7[2] = CurrentValueSubject.init(_:)();
  type metadata accessor for SDAirDropSendStateMachine();
  swift_allocObject();
  id v20 = v13;
  v7[10] = sub_10053E360((uint64_t)v20, (uint64_t)v17, (uint64_t)v19, v27, (uint64_t)v18);
  sub_1002AF688(v28, (uint64_t)(v7 + 11));
  return v7;
}

uint64_t sub_10030535C()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_10096C7C0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = type metadata accessor for SFAirDropSend.Request();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1003054C4(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(sub_10000A844((uint64_t *)&unk_10096C7C0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SFAirDropSend.Request() - 8) + 80);
  uint64_t v9 = v7 + v8 + 8;
  uint64_t v10 = v1 + v6;
  uint64_t v11 = *(void *)(v1 + v7);
  uint64_t v12 = v1 + (v9 & ~v8);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v13;
  *uint64_t v13 = v3;
  v13[1] = sub_10000A6F4;
  return sub_100301BE0(a1, v10, v11, v12);
}

uint64_t sub_100305620(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100305668()
{
  uint64_t v1 = type metadata accessor for AuthenticationDevice();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = _s30IndividualPersonaVolumeManagerC5StateOMa(0);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100307358(v0, (uint64_t)v7);
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 5, v1);
  uint64_t v9 = 0x6E776F6E6B6E75;
  switch(v8)
  {
    case 1:
      return v9;
    case 2:
      uint64_t v9 = 0x6465726961706E75;
      break;
    case 3:
      uint64_t v9 = 0x646572696170;
      break;
    case 4:
      uint64_t v9 = 0x64656B636F6CLL;
      break;
    case 5:
      uint64_t v9 = 0x6E696B636F6C6E75;
      break;
    default:
      sub_10030741C((uint64_t)v7, (uint64_t)v4);
      v12[0] = 0;
      v12[1] = 0xE000000000000000;
      v10._countAndFlagsBits = 0x64656B636F6C6E75;
      v10._object = (void *)0xEC00000020796220;
      String.append(_:)(v10);
      _print_unlocked<A, B>(_:_:)();
      uint64_t v9 = v12[0];
      sub_100307480((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AuthenticationDevice);
      break;
  }
  return v9;
}

uint64_t sub_1003058B4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication30IndividualPersonaVolumeManager_logger;
  uint64_t v2 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  sub_10024D338(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication30IndividualPersonaVolumeManager_volumeManager);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_100307480(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication30IndividualPersonaVolumeManager_state, _s30IndividualPersonaVolumeManagerC5StateOMa);
  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_100305A04()
{
  sub_1003058B4();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_100305A30()
{
  return _s30IndividualPersonaVolumeManagerCMa(0);
}

uint64_t _s30IndividualPersonaVolumeManagerCMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10096E378);
}

uint64_t sub_100305A58()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = _s30IndividualPersonaVolumeManagerC5StateOMa(319);
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t _s30IndividualPersonaVolumeManagerC5StateOMa(uint64_t a1)
{
  return sub_10000B93C(a1, (uint64_t *)&unk_10096E5F0);
}

uint64_t *sub_100305B90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    unint64_t v7 = (int *)type metadata accessor for AuthenticationDevice();
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 5, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      uint64_t v12 = a2[5];
      a1[4] = a2[4];
      a1[5] = v12;
      *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
      uint64_t v13 = v7[9];
      __dst = (char *)a1 + v13;
      uint64_t v31 = v8;
      unint64_t v14 = (char *)a2 + v13;
      uint64_t v15 = type metadata accessor for UUID();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v32(v14, 1, v15))
      {
        uint64_t v17 = sub_10000A844(&qword_100974EA0);
        memcpy(__dst, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
      }
      uint64_t v18 = v7[10];
      id v19 = (uint64_t *)((char *)a1 + v18);
      id v20 = (uint64_t *)((char *)a2 + v18);
      uint64_t v21 = v20[1];
      *id v19 = *v20;
      v19[1] = v21;
      uint64_t v22 = v7[11];
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      *((void *)v23 + 2) = *((void *)v24 + 2);
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      uint64_t v25 = v7[12];
      uint64_t v26 = *(void **)((char *)a2 + v25);
      *(uint64_t *)((char *)a1 + v25) = (uint64_t)v26;
      uint64_t v27 = *(void (**)(uint64_t *, void, uint64_t, int *))(v31 + 56);
      swift_bridgeObjectRetain();
      id v28 = v26;
      v27(a1, 0, 5, v7);
    }
  }
  return a1;
}

void sub_100305E3C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AuthenticationDevice();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 5, v2))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = a1 + *(int *)(v2 + 36);
    uint64_t v4 = type metadata accessor for UUID();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    swift_bridgeObjectRelease();
    uint64_t v6 = *(void **)(a1 + *(int *)(v2 + 48));
  }
}

void *sub_100305F80(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for AuthenticationDevice();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(a2, 5, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    uint64_t v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    uint64_t v10 = a2[5];
    a1[4] = a2[4];
    a1[5] = v10;
    *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
    uint64_t v11 = v6[9];
    __dst = (char *)a1 + v11;
    uint64_t v30 = v7;
    uint64_t v12 = (char *)a2 + v11;
    uint64_t v13 = type metadata accessor for UUID();
    uint64_t v14 = *(void *)(v13 - 8);
    id v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28(v12, 1, v13))
    {
      uint64_t v15 = sub_10000A844(&qword_100974EA0);
      memcpy(__dst, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    uint64_t v16 = v6[10];
    uint64_t v17 = (void *)((char *)a1 + v16);
    uint64_t v18 = (void *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = v6[11];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    *((void *)v21 + 2) = *((void *)v22 + 2);
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    uint64_t v23 = v6[12];
    uint64_t v24 = *(void **)((char *)a2 + v23);
    *(void *)((char *)a1 + v23) = v24;
    uint64_t v25 = *(void (**)(void *, void, uint64_t, int *))(v30 + 56);
    swift_bridgeObjectRetain();
    id v26 = v24;
    v25(a1, 0, 5, v6);
  }
  return a1;
}

uint64_t sub_1003061F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for AuthenticationDevice();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 5, v6);
  int v10 = v8(a2, 5, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_100307480(a1, (uint64_t (*)(void))type metadata accessor for AuthenticationDevice);
      goto LABEL_7;
    }
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
    uint64_t v16 = v6[9];
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (void *)(a2 + v16);
    uint64_t v19 = type metadata accessor for UUID();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
    int v22 = v21(v17, 1, v19);
    int v23 = v21(v18, 1, v19);
    if (v22)
    {
      if (!v23)
      {
        (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_16:
        uint64_t v36 = v6[10];
        unint64_t v37 = (void *)(a1 + v36);
        uint64_t v38 = (void *)(a2 + v36);
        void *v37 = *v38;
        v37[1] = v38[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v39 = v6[11];
        uint64_t v40 = (void *)(a1 + v39);
        uint64_t v41 = (void *)(a2 + v39);
        *uint64_t v40 = *v41;
        v40[1] = v41[1];
        v40[2] = v41[2];
        uint64_t v42 = v6[12];
        unint64_t v43 = *(void **)(a2 + v42);
        unint64_t v44 = *(void **)(a1 + v42);
        *(void *)(a1 + v42) = v43;
        id v45 = v43;

        return a1;
      }
    }
    else
    {
      if (!v23)
      {
        (*(void (**)(void *, void *, uint64_t))(v20 + 24))(v17, v18, v19);
        goto LABEL_16;
      }
      (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
    }
    uint64_t v35 = sub_10000A844(&qword_100974EA0);
    memcpy(v17, v18, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_16;
  }
  if (v10)
  {
LABEL_7:
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  uint64_t v11 = v6[9];
  __dst = (void *)(a1 + v11);
  uint64_t v12 = (const void *)(a2 + v11);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v47 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v47(v12, 1, v13))
  {
    uint64_t v15 = sub_10000A844(&qword_100974EA0);
    memcpy(__dst, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(__dst, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  uint64_t v24 = v6[10];
  uint64_t v25 = (void *)(a1 + v24);
  id v26 = (void *)(a2 + v24);
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  uint64_t v27 = v6[11];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = (long long *)(a2 + v27);
  long long v30 = *v29;
  *(void *)(v28 + 16) = *((void *)v29 + 2);
  *(_OWORD *)uint64_t v28 = v30;
  uint64_t v31 = v6[12];
  uint64_t v32 = *(void **)(a2 + v31);
  *(void *)(a1 + v31) = v32;
  uint64_t v33 = *(void (**)(uint64_t, void, uint64_t, int *))(v7 + 56);
  swift_bridgeObjectRetain();
  id v34 = v32;
  v33(a1, 0, 5, v6);
  return a1;
}

_OWORD *sub_1003066DC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for AuthenticationDevice();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 5, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    long long v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    a1[2] = a2[2];
    *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
    uint64_t v9 = v6[9];
    int v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for UUID();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_10000A844(&qword_100974EA0);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *(_OWORD *)((char *)a1 + v6[10]) = *(_OWORD *)((char *)a2 + v6[10]);
    uint64_t v15 = v6[11];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    *((void *)v16 + 2) = *((void *)v17 + 2);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(void *)((char *)a1 + v6[12]) = *(void *)((char *)a2 + v6[12]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v7 + 56))(a1, 0, 5, v6);
  }
  return a1;
}

uint64_t sub_1003068F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for AuthenticationDevice();
  uint64_t v7 = *((void *)v6 - 1);
  long long v8 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 5, v6);
  int v10 = v8(a2, 5, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_100307480(a1, (uint64_t (*)(void))type metadata accessor for AuthenticationDevice);
      goto LABEL_7;
    }
    uint64_t v18 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v18;
    swift_bridgeObjectRelease();
    uint64_t v19 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v19;
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v20;
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
    uint64_t v21 = v6[9];
    int v22 = (void *)(a1 + v21);
    int v23 = (void *)(a2 + v21);
    uint64_t v24 = type metadata accessor for UUID();
    uint64_t v25 = *(void *)(v24 - 8);
    id v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
    int v27 = v26(v22, 1, v24);
    int v28 = v26(v23, 1, v24);
    if (v27)
    {
      if (!v28)
      {
        (*(void (**)(void *, void *, uint64_t))(v25 + 32))(v22, v23, v24);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_16:
        uint64_t v33 = v6[10];
        id v34 = (void *)(a1 + v33);
        uint64_t v35 = (uint64_t *)(a2 + v33);
        uint64_t v37 = *v35;
        uint64_t v36 = v35[1];
        *id v34 = v37;
        v34[1] = v36;
        swift_bridgeObjectRelease();
        uint64_t v38 = v6[11];
        uint64_t v39 = a1 + v38;
        uint64_t v40 = a2 + v38;
        *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
        *(void *)(v39 + 16) = *(void *)(v40 + 16);
        uint64_t v41 = v6[12];
        uint64_t v42 = *(void **)(a1 + v41);
        *(void *)(a1 + v41) = *(void *)(a2 + v41);

        return a1;
      }
    }
    else
    {
      if (!v28)
      {
        (*(void (**)(void *, void *, uint64_t))(v25 + 40))(v22, v23, v24);
        goto LABEL_16;
      }
      (*(void (**)(void *, uint64_t))(v25 + 8))(v22, v24);
    }
    uint64_t v32 = sub_10000A844(&qword_100974EA0);
    memcpy(v22, v23, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_16;
  }
  if (v10)
  {
LABEL_7:
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  uint64_t v12 = v6[9];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_10000A844(&qword_100974EA0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  *(_OWORD *)(a1 + v6[10]) = *(_OWORD *)(a2 + v6[10]);
  uint64_t v29 = v6[11];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(void *)(v30 + 16) = *(void *)(v31 + 16);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(void *)(a1 + v6[12]) = *(void *)(a2 + v6[12]);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v7 + 56))(a1, 0, 5, v6);
  return a1;
}

uint64_t sub_100306D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100306D34);
}

uint64_t sub_100306D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuthenticationDevice();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 6) {
    return v5 - 5;
  }
  else {
    return 0;
  }
}

uint64_t sub_100306DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100306DB4);
}

uint64_t sub_100306DB4(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 5);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for AuthenticationDevice();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_100306E38(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AuthenticationDevice();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 5, v2);
}

uint64_t sub_100306EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuthenticationDevice();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 5, v4);
}

uint64_t sub_100306F10()
{
  uint64_t result = type metadata accessor for AuthenticationDevice();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_100306F88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuthenticationDevice();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = _s30IndividualPersonaVolumeManagerC5StateOMa(0);
  __chkstk_darwin(v8 - 8);
  int v10 = (uint64_t *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_10000A844(&qword_10096E600);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_100307358(a1, (uint64_t)v14);
  sub_100307358(a2, v15);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  switch(v16((uint64_t)v14, 5, v4))
  {
    case 1u:
      if (v16(v15, 5, v4) != 1) {
        goto LABEL_13;
      }
      goto LABEL_27;
    case 2u:
      if (v16(v15, 5, v4) == 2) {
        goto LABEL_27;
      }
      goto LABEL_13;
    case 3u:
      if (v16(v15, 5, v4) == 3) {
        goto LABEL_27;
      }
      goto LABEL_13;
    case 4u:
      if (v16(v15, 5, v4) == 4) {
        goto LABEL_27;
      }
      goto LABEL_13;
    case 5u:
      if (v16(v15, 5, v4) != 5) {
        goto LABEL_13;
      }
      goto LABEL_27;
    default:
      sub_100307358((uint64_t)v14, (uint64_t)v10);
      if (v16(v15, 5, v4))
      {
        sub_100307480((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AuthenticationDevice);
LABEL_13:
        sub_1003073BC((uint64_t)v14);
        return 0;
      }
      sub_10030741C(v15, (uint64_t)v7);
      uint64_t v18 = v10[1];
      uint64_t v19 = v7[1];
      if (!v18)
      {
        if (!v19) {
          goto LABEL_26;
        }
LABEL_24:
        sub_100307480((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AuthenticationDevice);
        sub_100307480((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AuthenticationDevice);
        goto LABEL_25;
      }
      if (!v19) {
        goto LABEL_24;
      }
      if (*v10 != *v7 || v18 != v19)
      {
        char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_100307480((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AuthenticationDevice);
        sub_100307480((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AuthenticationDevice);
        if (v21) {
          goto LABEL_27;
        }
LABEL_25:
        sub_100307480((uint64_t)v14, _s30IndividualPersonaVolumeManagerC5StateOMa);
        return 0;
      }
LABEL_26:
      sub_100307480((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AuthenticationDevice);
      sub_100307480((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AuthenticationDevice);
LABEL_27:
      sub_100307480((uint64_t)v14, _s30IndividualPersonaVolumeManagerC5StateOMa);
      return 1;
  }
}

uint64_t sub_100307358(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s30IndividualPersonaVolumeManagerC5StateOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003073BC(uint64_t a1)
{
  uint64_t v2 = sub_10000A844(&qword_10096E600);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10030741C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuthenticationDevice();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100307480(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1003074E0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10096E608);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10096E608);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1003075A8(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropReceive.AskRequest();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v2[12] = v5;
  v2[13] = *(void *)(v5 - 8);
  v2[14] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v2[15] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferType();
  v2[16] = v6;
  v2[17] = *(void *)(v6 - 8);
  v2[18] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  return _swift_task_switch(sub_1003077E4, v7, 0);
}

uint64_t sub_1003077E4()
{
  unint64_t v55 = v0;
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[16];
  SFAirDropReceive.AskRequest.type.getter();
  char v4 = SFAirDrop.TransferType.isLinks.getter();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  if ((v4 & 1) == 0)
  {
LABEL_24:
    BOOL v23 = 0;
    goto LABEL_31;
  }
  uint64_t v5 = v0[13];
  uint64_t v6 = SFAirDropReceive.AskRequest.urlItems.getter();
  uint64_t v7 = 0;
  uint64_t v48 = v6 + 56;
  uint64_t v8 = -1;
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  if (-v9 < 64) {
    uint64_t v8 = ~(-1 << -(char)v9);
  }
  unint64_t v10 = v8 & *(void *)(v6 + 56);
  os_log_t log = (os_log_t)((unint64_t)(63 - v9) >> 6);
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      goto LABEL_21;
    }
    uint64_t v13 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v13 >= (uint64_t)log) {
      goto LABEL_25;
    }
    unint64_t v14 = *(void *)(v48 + 8 * v13);
    ++v7;
    if (!v14)
    {
      uint64_t v7 = v13 + 1;
      if (v13 + 1 >= (uint64_t)log) {
        goto LABEL_25;
      }
      unint64_t v14 = *(void *)(v48 + 8 * v7);
      if (!v14)
      {
        uint64_t v7 = v13 + 2;
        if (v13 + 2 >= (uint64_t)log) {
          goto LABEL_25;
        }
        unint64_t v14 = *(void *)(v48 + 8 * v7);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v7 << 6);
LABEL_21:
    uint64_t v16 = v0[15];
    uint64_t v17 = v0[12];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))(v16, *(void *)(v6 + 48) + *(void *)(v5 + 72) * v12, v17);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v16, 0, 1, v17);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v16, 1, v17) == 1) {
      goto LABEL_26;
    }
    uint64_t v18 = v0[14];
    uint64_t v19 = v0[12];
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 32))(v18, v0[15], v19);
    URL._bridgeToObjectiveC()(v20);
    uint64_t v22 = v21;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v18, v19);
    LOBYTE(v18) = SFIsiCloudFamilyLink();

    if ((v18 & 1) == 0)
    {
      swift_release();
      goto LABEL_24;
    }
  }
  uint64_t v15 = v13 + 3;
  if (v15 >= (uint64_t)log)
  {
LABEL_25:
    (*(void (**)(void, uint64_t, uint64_t, void))(v5 + 56))(v0[15], 1, 1, v0[12]);
LABEL_26:
    swift_release();
    sub_1003081DC();
    id v24 = sub_1005E2E34(0xD000000000000010, 0x80000001007B8D30, 1);
    uint64_t v44 = v0[5];
    id v45 = *(void **)(v44 + 16);
    *(void *)(v44 + 16) = v24;

    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v48 + 8 * v15);
  if (v14)
  {
    uint64_t v7 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v7 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v7 >= (uint64_t)log) {
      goto LABEL_25;
    }
    unint64_t v14 = *(void *)(v48 + 8 * v7);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_35:
  __break(1u);
  swift_once();
  uint64_t v25 = v0[10];
  uint64_t v26 = v0[11];
  uint64_t v27 = v0[9];
  uint64_t v28 = v0[4];
  uint64_t v29 = type metadata accessor for Logger();
  sub_10000B47C(v29, (uint64_t)qword_10096E608);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v26, v28, v27);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.error.getter();
  BOOL v32 = os_log_type_enabled(v30, v31);
  uint64_t v33 = v0[10];
  uint64_t v34 = v0[11];
  uint64_t v35 = v0[9];
  if (v32)
  {
    os_log_type_t type = v31;
    uint64_t v37 = v0[7];
    uint64_t v36 = v0[8];
    uint64_t v49 = v0[9];
    uint64_t v38 = v0[6];
    uint64_t v39 = swift_slowAlloc();
    uint64_t v52 = (void *)swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 136315394;
    loga = v30;
    SFAirDropReceive.AskRequest.id.getter();
    sub_10024E048();
    uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v42 = v41;
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
    v0[2] = sub_100254634(v40, v42, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v49);
    *(_WORD *)(v39 + 12) = 2112;
    swift_errorRetain();
    uint64_t v43 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v52 = v43;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, loga, type, "Failed to get iCloud Family app for ask request %s: %@", (uint8_t *)v39, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v35);
    swift_errorRelease();
    swift_errorRelease();
  }
LABEL_30:
  BOOL v23 = *(void *)(v0[5] + 16) != 0;
LABEL_31:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v46 = (uint64_t (*)(BOOL))v0[1];
  return v46(v23);
}

uint64_t type metadata accessor for SDAirDropContentHandleriCloudFamilyLinks()
{
  return self;
}

uint64_t sub_100307E64@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandleriCloudFamilyLinks();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_100307E9C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_1003075A8(a1);
}

uint64_t sub_100307F38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_10097F1D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v9 = *(void **)(v8 + 16);
  uint64_t v10 = type metadata accessor for SFAirDropReceive.ItemDestination();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
  id v11 = v9;
  sub_10039FAA0(a1, v9, 1, a2);

  return sub_10024DFE8((uint64_t)v7);
}

void sub_100308038(uint64_t a1, char a2)
{
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = 95;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  String.append(_:)((Swift::String)xmmword_1008D2568);
  swift_bridgeObjectRelease();
  if (a2)
  {
    v4._countAndFlagsBits = 0x4C4154495041435FLL;
    v4._object = (void *)0xEC00000044455A49;
    String.append(_:)(v4);
  }
  v5._countAndFlagsBits = 0x545845545FLL;
  v5._object = (void *)0xE500000000000000;
  String.append(_:)(v5);
  sub_10000A844((uint64_t *)&unk_100977CB0);
  swift_arrayDestroy();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = (id)SFLocalizedStringForKey();

  if (v7)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1003081DC()
{
  unint64_t result = qword_100974C50;
  if (!qword_100974C50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100974C50);
  }
  return result;
}

uint64_t *AirDropActor.shared.unsafeMutableAddressor()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  return &static AirDropActor.shared;
}

uint64_t sub_100308268()
{
  type metadata accessor for AirDropActor();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  static AirDropActor.shared = v0;
  return result;
}

uint64_t static AirDropActor.shared.getter()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t AirDropActor.deinit()
{
  swift_defaultActor_destroy();
  return v0;
}

uint64_t AirDropActor.__deallocating_deinit()
{
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

unint64_t sub_100308354()
{
  unint64_t result = qword_1009744A0;
  if (!qword_1009744A0)
  {
    type metadata accessor for AirDropActor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009744A0);
  }
  return result;
}

uint64_t type metadata accessor for AirDropActor()
{
  return self;
}

uint64_t sub_1003083CC()
{
  return static GlobalActor.sharedUnownedExecutor.getter(v0);
}

void *sub_1003083D4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = a1;
  sub_100255530(0, v1, 0);
  unint64_t result = (void *)sub_10030DF18(v2);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  uint64_t v7 = v2 + 64;
  uint64_t v26 = v2 + 80;
  int64_t v27 = v1;
  int v28 = v4;
  uint64_t v29 = v2 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(v2 + 32))
  {
    unint64_t v10 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v2 + 36) != v4) {
      goto LABEL_24;
    }
    uint64_t v30 = v6;
    id v11 = *(void **)(*(void *)(v2 + 56) + 8 * v5);
    uint64_t v12 = v11[3];
    uint64_t v13 = v11[5];
    uint64_t v33 = v11[4];
    uint64_t v34 = v11[2];
    uint64_t v15 = v11[8];
    unint64_t v14 = v11[9];
    uint64_t v16 = v11[15];
    uint64_t v32 = v11[14];
    swift_bridgeObjectRetain();
    uint64_t v31 = v13;
    swift_bridgeObjectRetain();
    unint64_t v35 = v14;
    sub_10025ADCC(v15, v14);
    uint64_t v17 = v2;
    unint64_t v18 = _swiftEmptyArrayStorage[2];
    unint64_t v19 = _swiftEmptyArrayStorage[3];
    unint64_t result = (void *)swift_bridgeObjectRetain();
    if (v18 >= v19 >> 1) {
      unint64_t result = (void *)sub_100255530(v19 > 1, v18 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v18 + 1;
    uint64_t v20 = &_swiftEmptyArrayStorage[8 * v18];
    v20[4] = v34;
    v20[5] = v12;
    v20[6] = v33;
    v20[7] = v31;
    v20[8] = v15;
    v20[9] = v35;
    v20[10] = v32;
    v20[11] = v16;
    int64_t v8 = 1 << *(unsigned char *)(v17 + 32);
    if (v5 >= v8) {
      goto LABEL_25;
    }
    uint64_t v7 = v29;
    uint64_t v21 = *(void *)(v29 + 8 * v10);
    if ((v21 & (1 << v5)) == 0) {
      goto LABEL_26;
    }
    uint64_t v2 = v17;
    int v4 = v28;
    if (*(_DWORD *)(v17 + 36) != v28) {
      goto LABEL_27;
    }
    unint64_t v22 = v21 & (-2 << (v5 & 0x3F));
    if (v22)
    {
      int64_t v8 = __clz(__rbit64(v22)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v9 = v27;
    }
    else
    {
      unint64_t v23 = v10 + 1;
      unint64_t v24 = (unint64_t)(v8 + 63) >> 6;
      int64_t v9 = v27;
      if (v10 + 1 < v24)
      {
        unint64_t v25 = *(void *)(v29 + 8 * v23);
        if (v25)
        {
LABEL_20:
          int64_t v8 = __clz(__rbit64(v25)) + (v23 << 6);
        }
        else
        {
          while (v24 - 2 != v10)
          {
            unint64_t v25 = *(void *)(v26 + 8 * v10++);
            if (v25)
            {
              unint64_t v23 = v10 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v6 = v30 + 1;
    uint64_t v5 = v8;
    if (v30 + 1 == v9) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_10030864C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10096E7A8);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10096E7A8);
  if (qword_100969CD8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946D8);
  Swift::String v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100308714()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  BOOL v2 = v1 == 2;
  unsigned int v3 = 0x1020100u >> (8 * v1);
  if (*(unsigned char *)(v0 + 33)) {
    return v2;
  }
  else {
    return v3;
  }
}

uint64_t sub_100308740()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  BOOL v2 = v1 == 2;
  unsigned int v3 = 0x1020100u >> (8 * v1);
  if (*(unsigned char *)(v0 + 33)) {
    return v3;
  }
  else {
    return v2;
  }
}

uint64_t sub_10030876C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (*(unsigned char *)(a1 + 120) == 1)
  {
    uint64_t v3 = *(void *)(a1 + 72);
    unint64_t v2 = *(void *)(a1 + 80);
    *a2 = v3;
    a2[1] = v2;
    return sub_10025ADCC(v3, v2);
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v5 = 10;
    *(void *)(v5 + 8) = 0xD00000000000001ELL;
    *(void *)(v5 + 16) = 0x80000001007B8EB0;
    return swift_willThrow();
  }
}

uint64_t sub_1003087FC@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 120);
  return result;
}

uint64_t sub_100308808@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(a1 + 104);
  uint64_t v6 = *(void *)(v3 + 64);
  uint64_t v5 = v3 + 64;
  uint64_t v4 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(*(void *)(a1 + 104) + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  uint64_t v9 = v8 & v4;
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  while (1)
  {
    if (v9)
    {
      v9 &= v9 - 1;
      goto LABEL_5;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v10) {
      goto LABEL_23;
    }
    uint64_t v17 = *(void *)(v5 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v10) {
        goto LABEL_23;
      }
      uint64_t v17 = *(void *)(v5 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v10) {
          goto LABEL_23;
        }
        uint64_t v17 = *(void *)(v5 + 8 * v12);
        if (!v17)
        {
          int64_t v12 = v16 + 3;
          if (v16 + 3 >= v10) {
            goto LABEL_23;
          }
          uint64_t v17 = *(void *)(v5 + 8 * v12);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v9 = (v17 - 1) & v17;
LABEL_5:
    swift_retain();
    v13._countAndFlagsBits = sub_1004F4D20();
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    v14._countAndFlagsBits = 10;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    v15._countAndFlagsBits = 9;
    v15._object = (void *)0xE100000000000000;
    String.append(_:)(v15);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v10)
  {
LABEL_23:
    uint64_t result = swift_release();
    *a2 = 0;
    a2[1] = 0xE000000000000000;
    return result;
  }
  uint64_t v17 = *(void *)(v5 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_23;
    }
    uint64_t v17 = *(void *)(v5 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1003089F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 96);
  unint64_t v2 = *(void *)(a1 + 104);
  *a2 = v3;
  a2[1] = v2;
  return sub_100278C78(v3, v2);
}

void sub_100308A2C(uint64_t a1, uint64_t a2, unint64_t a3)
{
}

uint64_t sub_100308A58(uint64_t a1)
{
  return sub_100308AC0(a1, (void (*)(void))&type metadata accessor for PropertyListEncoder, (uint64_t (*)(void))&PropertyListEncoder.init(), &qword_10096E7C0);
}

uint64_t sub_100308A8C(uint64_t a1)
{
  return sub_100308AC0(a1, (void (*)(void))&type metadata accessor for PropertyListDecoder, (uint64_t (*)(void))&PropertyListDecoder.init(), &qword_10096E7C8);
}

uint64_t sub_100308AC0(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void), uint64_t *a4)
{
  a2(0);
  swift_allocObject();
  uint64_t result = a3();
  *a4 = result;
  return result;
}

uint64_t sub_100308B14(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11)
{
  char v18 = a4 & 1;
  *(void *)(v11 + 104) = &_swiftEmptyDictionarySingleton;
  sub_10000A844((uint64_t *)&unk_10096D4C0);
  uint64_t v19 = swift_allocObject();
  *(_DWORD *)(v19 + 16) = 0;
  *(void *)(v11 + 112) = v19;
  *(unsigned char *)(v11 + 120) = 1;
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  *(unsigned char *)(v11 + 32) = a3;
  *(unsigned char *)(v11 + 33) = v18;
  *(void *)(v11 + 72) = a5;
  *(void *)(v11 + 80) = a6;
  *(void *)(v11 + 88) = a7;
  *(void *)(v11 + 96) = a8;
  *(_OWORD *)(v11 + 40) = a9;
  *(void *)(v11 + 56) = a10;
  *(void *)(v11 + 64) = a11;
  return v11;
}

void sub_100308BE0()
{
}

void sub_100308C0C()
{
  if (qword_100969B98 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_10096E7A8);
  swift_retain_n();
  int v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_retain();
    uint64_t v4 = sub_1004F4D20();
    unint64_t v6 = v5;
    swift_release();
    sub_100254634(v4, v6, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Storing %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v7 = swift_release_n();
  }
  uint64_t v8 = __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  int64_t v10 = v9 + 4;
  os_unfair_lock_lock(v9 + 4);
  sub_10030F73C(v11);
  os_unfair_lock_unlock(v10);
}

uint64_t sub_100308E70(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 120) == 1)
  {
    uint64_t v4 = *(void *)(a2 + 32);
    uint64_t v5 = *(void *)(a2 + 40);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *(void *)(a1 + 104);
    *(void *)(a1 + 104) = 0x8000000000000000;
    sub_10059318C(a2, v4, v5, isUniquelyReferenced_nonNull_native);
    *(void *)(a1 + 104) = v9;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    return sub_10030BAAC();
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v8 = 10;
    *(void *)(v8 + 8) = 0xD00000000000001ELL;
    *(void *)(v8 + 16) = 0x80000001007B8EB0;
    return swift_willThrow();
  }
}

uint64_t sub_100308F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID;
  swift_beginAccess();
  return sub_10024A330(v3, a2, &qword_100974EA0);
}

void sub_10030900C()
{
  int v1 = (os_unfair_lock_s *)(*(void *)(v0 + 112) + 16);
  os_unfair_lock_lock(v1);
  sub_10030E790(&v2);
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1003090C4(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v79 = a4;
  uint64_t v77 = a3;
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v6 - 8);
  uint64_t v83 = &v74[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_10000A844(&qword_100974EA0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v85 = &v74[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v82 = &v74[-v12];
  __chkstk_darwin(v11);
  Swift::String v14 = &v74[-v13];
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v81 = &v74[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = &v74[-v20];
  uint64_t v22 = __chkstk_darwin(v19);
  unint64_t v24 = &v74[-v23];
  uint64_t v25 = __chkstk_darwin(v22);
  os_log_t v78 = (os_log_t)&v74[-v26];
  __chkstk_darwin(v25);
  int v28 = &v74[-v27];
  uint64_t v87 = a1;
  uint64_t v29 = a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID;
  swift_beginAccess();
  sub_10024A330(v29, (uint64_t)v14, &qword_100974EA0);
  int v84 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48);
  int v30 = v84(v14, 1, v15);
  uint64_t v86 = a2;
  if (v30 == 1)
  {
    sub_10000A7E8((uint64_t)v14, &qword_100974EA0);
    uint64_t v31 = v87;
    uint64_t v32 = v16;
    goto LABEL_15;
  }
  (*(void (**)(NSObject *, unsigned char *, uint64_t))(v16 + 32))(v28, v14, v15);
  uint64_t v80 = v28;
  if (static UUID.== infix(_:_:)())
  {
    uint64_t v33 = (uint64_t)v82;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v82, 1, 1, v15);
    swift_beginAccess();
    sub_10026B410(v33, v29, &qword_100974EA0);
    swift_endAccess();
    uint64_t v34 = type metadata accessor for Date();
    uint64_t v35 = (uint64_t)v83;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v83, 1, 1, v34);
    uint64_t v31 = v87;
    uint64_t v36 = v87 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionStartDate;
    swift_beginAccess();
    sub_10026B410(v35, v36, (uint64_t *)&unk_100975040);
    swift_endAccess();
    uint64_t v32 = v16;
    if (qword_100969B98 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_10000B47C(v37, (uint64_t)qword_10096E7A8);
    os_log_t v38 = v78;
    (*(void (**)(os_log_t, unsigned char *, uint64_t))(v16 + 16))(v78, v86, v15);
    unint64_t v39 = v79;
    swift_bridgeObjectRetain_n();
    uint64_t v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.default.getter();
    int v42 = v41;
    BOOL v43 = os_log_type_enabled(v40, v41);
    uint64_t v44 = v80;
    if (!v43)
    {
      swift_bridgeObjectRelease_n();

      unsigned int v63 = *(void (**)(os_log_t, uint64_t))(v32 + 8);
      v63(v38, v15);
      v63(v44, v15);
      goto LABEL_15;
    }
    uint64_t v45 = swift_slowAlloc();
    int v75 = v42;
    uint64_t v46 = v45;
    uint64_t v76 = (uint64_t *)swift_slowAlloc();
    v90[0] = (uint64_t)v76;
    *(_DWORD *)uint64_t v46 = 136315394;
    sub_10000B9C8((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v47 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v88 = sub_100254634(v47, v48, v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v49 = *(void (**)(os_log_t, uint64_t))(v32 + 8);
    v49(v38, v15);
    *(_WORD *)(v46 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v88 = sub_100254634(v77, v39, v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v40, (os_log_type_t)v75, "Cleared active sessionID %s with remoteDevice %s", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v49(v80, v15);
  }
  else
  {
    if (qword_100969B98 != -1) {
      swift_once();
    }
    uint64_t v50 = type metadata accessor for Logger();
    sub_10000B47C(v50, (uint64_t)qword_10096E7A8);
    uint64_t v32 = v16;
    uint64_t v51 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 16);
    uint64_t v52 = v80;
    v51(v24, v80, v15);
    v51(v21, v86, v15);
    uint64_t v53 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.default.getter();
    int v55 = v54;
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v56 = swift_slowAlloc();
      uint64_t v79 = swift_slowAlloc();
      v90[0] = v79;
      *(_DWORD *)uint64_t v56 = 136315394;
      sub_10000B9C8((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      os_log_t v78 = v53;
      LODWORD(v77) = v55;
      uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v88 = sub_100254634(v57, v58, v90);
      uint64_t v76 = &v89;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v59 = *(void (**)(unsigned char *, uint64_t))(v32 + 8);
      v59(v24, v15);
      *(_WORD *)(v56 + 12) = 2080;
      uint64_t v60 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v88 = sub_100254634(v60, v61, v90);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v59(v21, v15);
      os_log_t v62 = v78;
      _os_log_impl((void *)&_mh_execute_header, v78, (os_log_type_t)v77, "Active sessionID %s in remoteLTK is not cleared as it doesn't match the input: %s", (uint8_t *)v56, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v59(v80, v15);
    }
    else
    {

      uint64_t v64 = *(void (**)(unsigned char *, uint64_t))(v32 + 8);
      v64(v21, v15);
      v64(v24, v15);
      v64(v52, v15);
    }
  }
  uint64_t v31 = v87;
LABEL_15:
  uint64_t v65 = v31 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationSessionID;
  swift_beginAccess();
  uint64_t v66 = v85;
  sub_10024A330(v65, (uint64_t)v85, &qword_100974EA0);
  if (v84(v66, 1, v15) == 1) {
    return sub_10000A7E8((uint64_t)v66, &qword_100974EA0);
  }
  char v68 = v81;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v32 + 32))(v81, v66, v15);
  char v69 = static UUID.== infix(_:_:)();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v32 + 8))(v68, v15);
  if (v69)
  {
    uint64_t v70 = (uint64_t)v82;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v82, 1, 1, v15);
    swift_beginAccess();
    sub_10026B410(v70, v65, &qword_100974EA0);
    swift_endAccess();
    uint64_t v71 = type metadata accessor for Date();
    uint64_t v72 = (uint64_t)v83;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v83, 1, 1, v71);
    uint64_t v73 = v31 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationStartDate;
    swift_beginAccess();
    sub_10026B410(v72, v73, (uint64_t *)&unk_100975040);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_100309B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v81 = a4;
  uint64_t v7 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v78 = (uint64_t)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v77 = (char *)&v69 - v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v69 - v12;
  uint64_t v79 = type metadata accessor for Date();
  uint64_t v80 = *(void *)(v79 - 8);
  uint64_t v14 = __chkstk_darwin(v79);
  int v75 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v82 = (char *)&v69 - v16;
  uint64_t v17 = sub_10000A844(&qword_100974EA0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v76 = (uint64_t)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v69 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v69 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v69 - v26;
  uint64_t v28 = type metadata accessor for UUID();
  uint64_t v29 = __chkstk_darwin(v28);
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v69 - v32;
  if (*(unsigned char *)(a1 + 120) != 1)
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v42 = 10;
    unint64_t v43 = 0xD00000000000001ELL;
    unint64_t v44 = 0x80000001007B8EB0;
LABEL_9:
    *(void *)(v42 + 8) = v43;
    *(void *)(v42 + 16) = v44;
    return swift_willThrow();
  }
  uint64_t v73 = v31;
  uint64_t v74 = v30;
  swift_beginAccess();
  uint64_t v34 = *(void *)(a1 + 104);
  if (!*(void *)(v34 + 16))
  {
LABEL_8:
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v42 = 33;
    unint64_t v43 = 0x746F6D6572206F4ELL;
    unint64_t v44 = 0xED00004B544C2065;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1005838BC(a2, a3);
  if ((v36 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v37 = *(void *)(*(void *)(v34 + 56) + 8 * v35);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v72 = v37;
  uint64_t v38 = v37 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationSessionID;
  swift_beginAccess();
  uint64_t v71 = v38;
  sub_10024A330(v38, (uint64_t)v27, &qword_100974EA0);
  uint64_t v39 = v74;
  uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
  unsigned int v41 = v40(v27, 1, v28);
  char v69 = v40;
  if (v41 == 1)
  {
    sub_10000A7E8((uint64_t)v27, &qword_100974EA0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v33, v27, v28);
    char v46 = static UUID.== infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v33, v28);
    if (v46) {
      return swift_release();
    }
  }
  Date.init()();
  uint64_t v47 = v72 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationStartDate;
  swift_beginAccess();
  uint64_t v70 = v47;
  sub_10024A330(v47, (uint64_t)v13, (uint64_t *)&unk_100975040);
  uint64_t v48 = v80;
  uint64_t v49 = v79;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v13, 1, v79) == 1)
  {
    sub_10000A7E8((uint64_t)v13, (uint64_t *)&unk_100975040);
    uint64_t v50 = v71;
  }
  else
  {
    uint64_t v51 = v75;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v75, v13, v49);
    uint64_t v50 = v71;
    sub_10024A330(v71, (uint64_t)v25, &qword_100974EA0);
    if (v69(v25, 1, v28) == 1)
    {
      (*(void (**)(char *, uint64_t))(v48 + 8))(v51, v49);
      sub_10000A7E8((uint64_t)v25, &qword_100974EA0);
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v74 + 32))(v73, v25, v28);
      Date.timeIntervalSince1970.getter();
      double v53 = v52;
      Date.timeIntervalSince1970.getter();
      double v55 = v53 - v54;
      uint64_t v56 = v51;
      if (v55 >= 0.0 && v55 < 60.0)
      {
        unint64_t v83 = 0;
        unint64_t v84 = 0xE000000000000000;
        _StringGuts.grow(_:)(43);
        swift_bridgeObjectRelease();
        unint64_t v83 = 0xD000000000000029;
        unint64_t v84 = 0x80000001007B8ED0;
        sub_10000B9C8((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v57 = v73;
        v58._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v58);
        swift_bridgeObjectRelease();
        unint64_t v59 = v83;
        unint64_t v60 = v84;
        sub_10024D280();
        swift_allocError();
        *(_DWORD *)uint64_t v61 = 38;
        *(void *)(v61 + 8) = v59;
        *(void *)(v61 + 16) = v60;
        swift_willThrow();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v57, v28);
        os_log_t v62 = *(void (**)(char *, uint64_t))(v80 + 8);
        v62(v56, v49);
        return ((uint64_t (*)(char *, uint64_t))v62)(v82, v49);
      }
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v73, v28);
      uint64_t v48 = v80;
      (*(void (**)(char *, uint64_t))(v80 + 8))(v51, v49);
    }
  }
  uint64_t v63 = v74;
  (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v22, v81, v28);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v22, 0, 1, v28);
  uint64_t v64 = (uint64_t)v22;
  uint64_t v65 = v76;
  sub_10024D388(v64, v76, &qword_100974EA0);
  swift_beginAccess();
  sub_10026B410(v65, v50, &qword_100974EA0);
  swift_endAccess();
  uint64_t v66 = (uint64_t)v77;
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v77, v82, v49);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v66, 0, 1, v49);
  uint64_t v67 = v78;
  sub_10024D388(v66, v78, (uint64_t *)&unk_100975040);
  uint64_t v68 = v70;
  swift_beginAccess();
  sub_10026B410(v67, v68, (uint64_t *)&unk_100975040);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_10030A47C@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t result = sub_100250ED4(v2);
  *a1 = result;
  return result;
}

uint64_t sub_10030A4DC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v3 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 104);
  uint64_t v7 = v6 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v6 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  char v36 = (char *)_swiftEmptyArrayStorage;
  while (v10)
  {
    unint64_t v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v15 = v14 | (v13 << 6);
LABEL_22:
    uint64_t v19 = *(void **)(*(void *)(v6 + 56) + 8 * v15);
    if (!v19[17])
    {
      uint64_t v20 = (uint64_t)v19 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID;
      swift_beginAccess();
      sub_10024A330(v20, (uint64_t)v5, &qword_100974EA0);
      uint64_t v21 = type metadata accessor for UUID();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v5, 1, v21) == 1)
      {
        swift_retain();
        sub_10000A7E8((uint64_t)v5, &qword_100974EA0);
        uint64_t v22 = v19[5];
        uint64_t v33 = v19[4];
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v34 = v22;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          char v36 = sub_100253208(0, *((void *)v36 + 2) + 1, 1, v36);
        }
        unint64_t v25 = *((void *)v36 + 2);
        unint64_t v24 = *((void *)v36 + 3);
        unint64_t v26 = v25 + 1;
        if (v25 >= v24 >> 1)
        {
          unint64_t v32 = v25 + 1;
          uint64_t v30 = sub_100253208((char *)(v24 > 1), v25 + 1, 1, v36);
          unint64_t v26 = v32;
          char v36 = v30;
        }
        uint64_t v27 = v36;
        *((void *)v36 + 2) = v26;
        uint64_t v28 = &v27[16 * v25];
        uint64_t v29 = v34;
        *((void *)v28 + 4) = v33;
        *((void *)v28 + 5) = v29;
        uint64_t result = swift_release();
      }
      else
      {
        uint64_t result = sub_10000A7E8((uint64_t)v5, &qword_100974EA0);
      }
    }
  }
  int64_t v16 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v16 >= v11) {
    goto LABEL_30;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v16);
  ++v13;
  if (v17) {
    goto LABEL_21;
  }
  int64_t v13 = v16 + 1;
  if (v16 + 1 >= v11) {
    goto LABEL_30;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v13);
  if (v17) {
    goto LABEL_21;
  }
  int64_t v13 = v16 + 2;
  if (v16 + 2 >= v11) {
    goto LABEL_30;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v13);
  if (v17) {
    goto LABEL_21;
  }
  int64_t v13 = v16 + 3;
  if (v16 + 3 >= v11) {
    goto LABEL_30;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v13);
  if (v17)
  {
LABEL_21:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
    goto LABEL_22;
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v11)
  {
LABEL_30:
    uint64_t result = swift_release();
    *uint64_t v35 = v36;
    return result;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17)
  {
    int64_t v13 = v18;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v13 >= v11) {
      goto LABEL_30;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_21;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void sub_10030A7FC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (qword_100969B98 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_10096E7A8);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_100254634(a3, a4, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Store rangingKey for %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v10 = swift_bridgeObjectRelease_n();
  }
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v12 = __chkstk_darwin(v11);
  __chkstk_darwin(v12);
  unint64_t v14 = v13 + 4;
  os_unfair_lock_lock(v13 + 4);
  sub_1002CEA38(v15);
  os_unfair_lock_unlock(v14);
}

uint64_t sub_10030AA98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t result = swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 104);
  if (*(void *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1005838BC(a2, a3);
    if (v11)
    {
      uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void *)(v12 + 112);
      uint64_t v13 = *(void *)(v12 + 120);
      swift_bridgeObjectRetain();
      uint64_t result = swift_release();
      *a4 = v14;
      a4[1] = v13;
      return result;
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  *a4 = 0;
  a4[1] = 0;
  return result;
}

uint64_t sub_10030AB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 104);
  if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1005838BC(a2, a3);
    if (v9)
    {
      uint64_t v10 = *(void **)(*(void *)(v7 + 56) + 8 * v8);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10030C4E8(v10);
      return swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_10030AC4C(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v6 = a1[15];
  if (!v6)
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v16 = 10;
    unint64_t v17 = 0xD00000000000001DLL;
    int64_t v18 = "No pairingID for remoteDevice";
LABEL_15:
    *(void *)(v16 + 8) = v17;
    *(void *)(v16 + 16) = (unint64_t)(v18 - 32) | 0x8000000000000000;
    swift_willThrow();
    return;
  }
  BOOL v11 = a1[14] == a2 && v6 == a3;
  if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    unint64_t v17 = 0xD000000000000012;
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v16 = 1;
    int64_t v18 = "pairingID mismatch";
    goto LABEL_15;
  }
  if (qword_100969B98 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000B47C(v12, (uint64_t)qword_10096E7A8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    swift_bridgeObjectRetain();
    sub_100254634(a4, a5, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_100254634(a2, a3, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Removing remoteLTK for %s, pairingID=%s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_10030C4E8(a1);
}

uint64_t sub_10030AF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  os_log_type_t v14 = (char *)&v20 - v13;
  *(void *)(a1 + 128) = a2;
  *(void *)(a1 + 136) = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  Date.init()();
  uint64_t v15 = type metadata accessor for Date();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 0, 1, v15);
  sub_10024D388((uint64_t)v14, (uint64_t)v12, (uint64_t *)&unk_100975040);
  uint64_t v16 = a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDate;
  swift_beginAccess();
  sub_10026B410((uint64_t)v12, v16, (uint64_t *)&unk_100975040);
  swift_endAccess();
  *(unsigned char *)(a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDateAsUnlockDate) = 0;
  uint64_t v17 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
  uint64_t v18 = a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID;
  swift_beginAccess();
  sub_10026B410((uint64_t)v8, v18, &qword_100974EA0);
  return swift_endAccess();
}

uint64_t sub_10030B19C(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v24[5] = a5;
  uint64_t v10 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v24 - v17;
  if ((a2 & 1) == 0)
  {
    sub_100300794(a1[8], a1[9]);
    if (v5) {
      swift_errorRelease();
    }
  }
  a1[16] = a3;
  a1[17] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  Date.init()();
  uint64_t v19 = type metadata accessor for Date();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
  sub_10024D388((uint64_t)v18, (uint64_t)v16, (uint64_t *)&unk_100975040);
  uint64_t v20 = (uint64_t)a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDate;
  swift_beginAccess();
  sub_10026B410((uint64_t)v16, v20, (uint64_t *)&unk_100975040);
  swift_endAccess();
  *((unsigned char *)a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDateAsUnlockDate) = 1;
  uint64_t v21 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v12, 1, 1, v21);
  uint64_t v22 = (uint64_t)a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID;
  swift_beginAccess();
  sub_10026B410((uint64_t)v12, v22, &qword_100974EA0);
  swift_endAccess();
  a1[14] = a3;
  a1[15] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_10030BAAC();
}

uint64_t sub_10030B438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t result = swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 104);
  if (*(void *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1005838BC(a2, a3);
    if (v11)
    {
      uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void *)(v12 + 128);
      uint64_t v13 = *(void *)(v12 + 136);
      swift_bridgeObjectRetain();
      uint64_t result = swift_release();
      *a4 = v14;
      a4[1] = v13;
      return result;
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  *a4 = 0;
  a4[1] = 0;
  return result;
}

uint64_t sub_10030B514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 104);
  if (*(void *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1005838BC(a2, a3);
    if (v10)
    {
      uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v11 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDate;
      swift_beginAccess();
      sub_10024A330(v12, a4, (uint64_t *)&unk_100975040);
      return swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = type metadata accessor for Date();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a4, 1, 1, v14);
}

uint64_t sub_10030B654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 104);
  if (!*(void *)(v9 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1005838BC(a2, a3);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
LABEL_5:
    char v13 = 0;
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v13 = *(unsigned char *)(v12 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDateAsUnlockDate);
  uint64_t result = swift_release();
LABEL_6:
  *a4 = v13;
  return result;
}

uint64_t sub_10030B734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)(a1 + 104) + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1005838BC(a2, a3);
    char v10 = v9;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = 0;
  }
  *a4 = v10 & 1;
  return result;
}

uint64_t sub_10030B7E4()
{
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v3 = v2;
  id v4 = [objc_allocWithZone((Class)SDAutoUnlockLTKInfo) init];
  if (v4)
  {
    uint64_t v5 = v4;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v5 setLtk:isa];

    Class v7 = Data._bridgeToObjectiveC()().super.isa;
    [v5 setLtkID:v7];

    [v5 setVersion:2];
    sub_10000A844(&qword_10096EA38);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1007709D0;
    *(void *)(inited + 32) = kSecValueData;
    CFStringRef v9 = (id)kSecValueData;
    id v10 = [v5 data];
    if (v10)
    {
      char v11 = v10;
      uint64_t v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v14 = v13;
    }
    else
    {
      uint64_t v12 = 0;
      unint64_t v14 = 0xF000000000000000;
    }
    uint64_t v17 = sub_10000A844(&qword_10096B260);
    *(void *)(inited + 40) = v12;
    *(void *)(inited + 48) = v14;
    *(void *)(inited + 64) = v17;
    *(void *)(inited + 72) = kSecAttrAccessible;
    *(void *)(inited + 80) = v1;
    *(void *)(inited + 88) = v3;
    *(void *)(inited + 104) = &type metadata for String;
    *(void *)(inited + 112) = kSecAttrLabel;
    strcpy((char *)v28, "Auto Unlock: ");
    HIWORD(v28[1]) = -4864;
    uint64_t v18 = *(void *)(v0 + 16);
    uint64_t v19 = *(void **)(v0 + 24);
    CFStringRef v20 = (id)kSecAttrAccessible;
    CFStringRef v21 = (id)kSecAttrLabel;
    swift_bridgeObjectRetain();
    v22._countAndFlagsBits = v18;
    v22._object = v19;
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    uint64_t v23 = v28[0];
    uint64_t v24 = v28[1];
    *(void *)(inited + 144) = &type metadata for String;
    *(void *)(inited + 120) = v23;
    *(void *)(inited + 128) = v24;
    unint64_t v25 = sub_1002464E0(inited);
    unint64_t v26 = sub_10024D0A4();
    uint64_t v27 = sub_10039EC38(v26);
    swift_bridgeObjectRelease();
    sub_10024BE80(v27, v25);

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v15 = 10;
    *(void *)(v15 + 8) = 0xD000000000000026;
    *(void *)(v15 + 16) = 0x80000001007B8F50;
    return swift_willThrow();
  }
}

uint64_t sub_10030BAAC()
{
  uint64_t v2 = sub_10000A844((uint64_t *)&unk_10096AC10);
  __chkstk_darwin(v2 - 8);
  double v52 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v53 = *(void *)(v4 - 8);
  uint64_t v54 = v4;
  __chkstk_darwin(v4);
  uint64_t v51 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v57 = *(void *)(v0 + 16);
  LODWORD(v56) = *(unsigned __int8 *)(v0 + 33);
  LODWORD(v55) = *(unsigned __int8 *)(v0 + 32);
  uint64_t v8 = *(void *)(v0 + 72);
  unint64_t v7 = *(void *)(v0 + 80);
  uint64_t v10 = *(void *)(v0 + 88);
  unint64_t v9 = *(void *)(v0 + 96);
  swift_beginAccess();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10025ADCC(v8, v7);
  sub_10025ADCC(v10, v9);
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_1003083D4(v11);
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_100969BA0 != -1) {
    swift_once();
  }
  uint64_t v58 = v57;
  uint64_t v59 = v6;
  char v60 = v56;
  char v61 = v55;
  uint64_t v62 = v8;
  unint64_t v63 = v7;
  uint64_t v64 = v10;
  unint64_t v65 = v9;
  uint64_t v66 = v12;
  sub_10030E688();
  uint64_t v13 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  if (v1)
  {
    swift_errorRelease();
    swift_bridgeObjectRelease();
    sub_100250CC4(v8, v7);
    sub_100250CC4(v10, v9);
    swift_bridgeObjectRelease();
    if (qword_100969B98 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10000B47C(v15, (uint64_t)qword_10096E7A8);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Failed to serialize LocalLTK to plist", v18, 2u);
      swift_slowDealloc();
    }

    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v19 = 10;
    *(void *)(v19 + 8) = 0xD00000000000001CLL;
    *(void *)(v19 + 16) = 0x80000001007B8F30;
    return swift_willThrow();
  }
  uint64_t v55 = v13;
  unint64_t v56 = v14;
  swift_bridgeObjectRelease();
  sub_100250CC4(v8, v7);
  sub_100250CC4(v10, v9);
  swift_bridgeObjectRelease();
  CFStringRef v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 40);
  int v22 = *(unsigned __int8 *)(v0 + 32);
  BOOL v23 = v22 == 2;
  unsigned int v24 = 0x1020100u >> (8 * v22);
  if (*(unsigned char *)(v0 + 33)) {
    uint64_t v25 = v23;
  }
  else {
    uint64_t v25 = v24;
  }
  swift_retain();
  uint64_t v26 = (uint64_t)v52;
  v21(v57, v6, v25);
  swift_release();
  uint64_t v28 = v53;
  uint64_t v27 = v54;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v26, 1, v54) == 1)
  {
    sub_10000A7E8(v26, (uint64_t *)&unk_10096AC10);
    if (qword_100969B98 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_10000B47C(v29, (uint64_t)qword_10096E7A8);
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      unint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Failed to get cache directory", v32, 2u);
      swift_slowDealloc();
    }

    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v33 = 10;
    *(void *)(v33 + 8) = 0xD00000000000001CLL;
    *(void *)(v33 + 16) = 0x80000001007B8F30;
    swift_willThrow();
    uint64_t v34 = v55;
    unint64_t v35 = v56;
    return sub_100250CC4(v34, v35);
  }
  char v36 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v51, v26, v27);
  uint64_t v37 = *(void (**)(uint64_t))(v0 + 56);
  int v38 = *(unsigned __int8 *)(v0 + 32);
  BOOL v39 = v38 == 2;
  unsigned int v40 = 0x1020100u >> (8 * v38);
  if (*(unsigned char *)(v0 + 33)) {
    uint64_t v41 = v39;
  }
  else {
    uint64_t v41 = v40;
  }
  swift_retain();
  v37(v41);
  char v43 = v42;
  swift_release();
  if ((v43 & 1) == 0)
  {
    uint64_t v45 = v55;
    unint64_t v44 = v56;
    Data.write(to:options:)();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v36, v27);
    uint64_t v34 = v45;
    unint64_t v35 = v44;
    return sub_100250CC4(v34, v35);
  }
  if (qword_100969B98 != -1) {
    swift_once();
  }
  uint64_t v46 = type metadata accessor for Logger();
  sub_10000B47C(v46, (uint64_t)qword_10096E7A8);
  uint64_t v47 = Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v49 = 0;
    _os_log_impl((void *)&_mh_execute_header, v47, v48, "Failed to get protection class", v49, 2u);
    swift_slowDealloc();
  }

  sub_10024D280();
  swift_allocError();
  *(_DWORD *)uint64_t v50 = 10;
  *(void *)(v50 + 8) = 0xD00000000000001CLL;
  *(void *)(v50 + 16) = 0x80000001007B8F30;
  swift_willThrow();
  sub_100250CC4(v55, v56);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v36, v27);
}

uint64_t sub_10030C1A0()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0 + 112) + 16);
  os_unfair_lock_lock(v1);
  sub_1002CEA38(v2);
  os_unfair_lock_unlock(v1);
  return v4;
}

uint64_t sub_10030C24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = sub_10000A844(&qword_100974EA0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  unint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v26 - v15;
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, a2, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
  sub_10024D388((uint64_t)v16, (uint64_t)v14, &qword_100974EA0);
  uint64_t v19 = a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID;
  swift_beginAccess();
  sub_10026B410((uint64_t)v14, v19, &qword_100974EA0);
  swift_endAccess();
  Date.init()();
  uint64_t v20 = type metadata accessor for Date();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 0, 1, v20);
  sub_10024D388((uint64_t)v10, (uint64_t)v8, (uint64_t *)&unk_100975040);
  uint64_t v21 = a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionStartDate;
  swift_beginAccess();
  sub_10026B410((uint64_t)v8, v21, (uint64_t *)&unk_100975040);
  swift_endAccess();
  uint64_t v22 = *(void *)(a1 + 64);
  unint64_t v23 = *(void *)(a1 + 72);
  unsigned int v24 = v26;
  uint64_t *v26 = v22;
  v24[1] = v23;
  return sub_10025ADCC(v22, v23);
}

void sub_10030C4E8(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  if (qword_100969B98 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_10096E7A8);
  swift_retain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v17 = v1;
    uint64_t v9 = swift_slowAlloc();
    v18[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v10 = a1[4];
    unint64_t v11 = a1[5];
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_100254634(v10, v11, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    swift_retain();
    uint64_t v12 = sub_1004F4D20();
    unint64_t v14 = v13;
    swift_release();
    uint64_t v19 = sub_100254634(v12, v14, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Removing remoteLTK for %s: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v4 = v17;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_1002FF680(a1[8], a1[9]);
  if (v3) {
    swift_errorRelease();
  }
  sub_1004F3EEC();
  uint64_t v15 = a1[4];
  uint64_t v16 = a1[5];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1002A9644(v15, v16);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(*(void *)(v4 + 104) + 16)) {
    sub_10030BAAC();
  }
  else {
    sub_10030C7AC();
  }
}

void sub_10030C7AC()
{
  uint64_t v2 = sub_10000A844((uint64_t *)&unk_10096AC10);
  __chkstk_darwin(v2 - 8);
  unint64_t v83 = (char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v84 = v4;
  uint64_t v85 = v5;
  uint64_t v6 = __chkstk_darwin(v4);
  os_log_type_t v8 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v83 - v9;
  *(unsigned char *)(v0 + 120) = 0;
  swift_beginAccess();
  uint64_t v86 = v0;
  uint64_t v11 = *(void *)(v0 + 104);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v88 = v11 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v89 = (unint64_t)(v13 + 63) >> 6;
  CFStringRef v99 = kSecClass;
  CFStringRef v98 = kSecClassGenericPassword;
  CFStringRef v97 = kSecAttrAccessGroup;
  CFStringRef v96 = kSecAttrAccount;
  CFStringRef v95 = kSecAttrService;
  CFStringRef v94 = kSecUseDataProtectionKeychain;
  uint64_t v102 = v11;
  swift_bridgeObjectRetain();
  uint64_t v16 = 0;
  *((void *)&v17 + 1) = 10;
  long long v93 = xmmword_1007706B0;
  unint64_t v91 = 0x80000001007B8F00;
  unint64_t v92 = 0x80000001007B6520;
  uint64_t v90 = (char *)&type metadata for Any + 8;
  *(void *)&long long v17 = 138412546;
  long long v87 = v17;
  v100 = v8;
  uint64_t v101 = v10;
  while (1)
  {
    if (v15)
    {
      v105 = (void (*)(char *, uint64_t))((v15 - 1) & v15);
      v106 = v16;
      unint64_t v18 = __clz(__rbit64(v15)) | ((void)v16 << 6);
      goto LABEL_22;
    }
    int64_t v19 = (int64_t)(v16 + 1);
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_52;
    }
    if (v19 >= v89) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v88 + 8 * v19);
    int64_t v21 = (int64_t)(v16 + 1);
    if (!v20)
    {
      int64_t v21 = (int64_t)(v16 + 2);
      if ((uint64_t)(v16 + 2) >= v89) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v88 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = (int64_t)(v16 + 3);
        if ((uint64_t)(v16 + 3) >= v89) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v88 + 8 * v21);
        if (!v20) {
          break;
        }
      }
    }
LABEL_21:
    v105 = (void (*)(char *, uint64_t))((v20 - 1) & v20);
    v106 = (char *)v21;
    unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
LABEL_22:
    unint64_t v23 = *(void **)(*(void *)(v102 + 56) + 8 * v18);
    sub_10000A844(&qword_10096EA38);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v93;
    uint64_t v25 = (__CFString *)v99;
    *(void *)(inited + 32) = v99;
    type metadata accessor for CFString(0);
    uint64_t v103 = v26;
    uint64_t v1 = (NSDictionary *)v97;
    uint64_t v27 = (__CFString *)v98;
    *(void *)(inited + 40) = v98;
    *(void *)(inited + 64) = v26;
    *(void *)(inited + 72) = v1;
    unint64_t v28 = v92;
    *(void *)(inited + 80) = 0xD00000000000001BLL;
    *(void *)(inited + 88) = v28;
    uint64_t v30 = (__CFString *)v95;
    uint64_t v29 = (__CFString *)v96;
    *(void *)(inited + 104) = &type metadata for String;
    *(void *)(inited + 112) = v29;
    unint64_t v31 = v91;
    *(void *)(inited + 120) = 0xD00000000000002CLL;
    *(void *)(inited + 128) = v31;
    *(void *)(inited + 144) = &type metadata for String;
    *(void *)(inited + 152) = v30;
    uint64_t v32 = v23[3];
    *(void *)(inited + 160) = v23[2];
    *(void *)(inited + 168) = v32;
    uint64_t v33 = (__CFString *)v94;
    *(void *)(inited + 184) = &type metadata for String;
    *(void *)(inited + 192) = v33;
    *(void *)(inited + 224) = &type metadata for Bool;
    *(unsigned char *)(inited + 200) = 1;
    v104 = v23;
    swift_retain();
    uint64_t v34 = v25;
    unint64_t v35 = v27;
    char v36 = v1;
    uint64_t v37 = v29;
    int v38 = v30;
    swift_bridgeObjectRetain();
    BOOL v39 = v33;
    sub_1002464E0(inited);
    sub_10000B9C8((unint64_t *)&qword_10096AE70, type metadata accessor for CFString);
    CFDictionaryRef isa = Dictionary._bridgeToObjectiveC()().super.isa;
    OSStatus v41 = SecItemDelete(isa);

    if (v41)
    {
      if (qword_100969EE8 != -1) {
        swift_once();
      }
      uint64_t v42 = type metadata accessor for Logger();
      sub_10000B47C(v42, (uint64_t)qword_1009773A0);
      swift_bridgeObjectRetain();
      char v43 = Logger.logObject.getter();
      os_log_type_t v44 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = swift_slowAlloc();
        uint64_t v1 = (NSDictionary *)swift_slowAlloc();
        *(_DWORD *)uint64_t v45 = v87;
        v46.super.CFDictionaryRef isa = Dictionary._bridgeToObjectiveC()().super.isa;
        *(NSDictionary *)(v45 + 4) = v46;
        v1->super.CFDictionaryRef isa = v46.super.isa;
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v45 + 12) = 1024;
        *(_DWORD *)(v45 + 14) = v41;
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "Failed to delete keychain item: %@, error: %d", (uint8_t *)v45, 0x12u);
        sub_10000A844(&qword_10096B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_release();
      }
      else
      {
        swift_release();

        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    os_log_type_t v8 = v100;
    uint64_t v10 = v101;
    unint64_t v15 = (unint64_t)v105;
    uint64_t v16 = v106;
  }
  uint64_t v22 = v16 + 4;
  if ((uint64_t)(v16 + 4) < v89)
  {
    unint64_t v20 = *(void *)(v88 + 8 * (void)v22);
    if (!v20)
    {
      while (1)
      {
        int64_t v21 = (int64_t)(v22 + 1);
        if (__OFADD__(v22, 1)) {
          break;
        }
        if (v21 >= v89) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v88 + 8 * v21);
        ++v22;
        if (v20) {
          goto LABEL_21;
        }
      }
LABEL_52:
      __break(1u);
LABEL_53:
      swift_once();
      goto LABEL_30;
    }
    int64_t v21 = (int64_t)(v16 + 4);
    goto LABEL_21;
  }
LABEL_28:
  swift_release();
  uint64_t v47 = *(char **)(v86 + 16);
  v105 = *(void (**)(char *, uint64_t))(v86 + 24);
  v106 = v47;
  sub_10024D0A4();
  type metadata accessor for CFString(0);
  sub_10000B9C8((unint64_t *)&qword_10096AE70, type metadata accessor for CFString);
  CFDictionaryRef v48 = Dictionary._bridgeToObjectiveC()().super.isa;
  LODWORD(v1) = SecItemDelete(v48);

  if (!v1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  if (qword_100969B98 != -1) {
    goto LABEL_53;
  }
LABEL_30:
  uint64_t v49 = type metadata accessor for Logger();
  sub_10000B47C(v49, (uint64_t)qword_10096E7A8);
  swift_bridgeObjectRetain();
  uint64_t v50 = Logger.logObject.getter();
  os_log_type_t v51 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = swift_slowAlloc();
    uint64_t v53 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v52 = v87;
    Class v54 = Dictionary._bridgeToObjectiveC()().super.isa;
    v108[0] = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v53 = v54;
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v52 + 12) = 1024;
    LODWORD(v108[0]) = v1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "Failed to delete keychain item: %@, error:%d", (uint8_t *)v52, 0x12u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    os_log_type_t v8 = v100;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v10 = v101;
LABEL_35:
  uint64_t v55 = *(void (**)(char *, void (*)(void, void), uint64_t))(v86 + 40);
  int v56 = *(unsigned __int8 *)(v86 + 32);
  BOOL v57 = v56 == 2;
  unsigned int v58 = 0x1020100u >> (8 * v56);
  if (*(unsigned char *)(v86 + 33)) {
    uint64_t v59 = v57;
  }
  else {
    uint64_t v59 = v58;
  }
  swift_retain();
  uint64_t v60 = (uint64_t)v83;
  v55(v106, (void (*)(void, void))v105, v59);
  swift_release();
  uint64_t v61 = v84;
  uint64_t v62 = v85;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v60, 1, v84) == 1)
  {
    sub_10000A7E8(v60, (uint64_t *)&unk_10096AC10);
    if (qword_100969B98 != -1) {
      swift_once();
    }
    uint64_t v63 = type metadata accessor for Logger();
    sub_10000B47C(v63, (uint64_t)qword_10096E7A8);
    uint64_t v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v66 = 0;
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "Failed to get LocalLTK plist path", v66, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v10, v60, v61);
    id v67 = [self defaultManager];
    URL._bridgeToObjectiveC()(v68);
    uint64_t v70 = v69;
    v108[0] = 0;
    unsigned int v71 = [v67 removeItemAtURL:v69 error:v108];

    if (v71)
    {
      uint64_t v72 = *(void (**)(char *, uint64_t))(v62 + 8);
      id v73 = v108[0];
      v72(v10, v61);
    }
    else
    {
      id v74 = v108[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_100969B98 != -1) {
        swift_once();
      }
      uint64_t v75 = type metadata accessor for Logger();
      sub_10000B47C(v75, (uint64_t)qword_10096E7A8);
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v8, v10, v61);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v76 = Logger.logObject.getter();
      os_log_type_t v77 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v76, v77))
      {
        uint64_t v78 = swift_slowAlloc();
        v104 = (void *)swift_slowAlloc();
        v106 = (char *)swift_slowAlloc();
        v108[0] = v106;
        *(_DWORD *)uint64_t v78 = 136315394;
        v105 = (void (*)(char *, uint64_t))(v78 + 4);
        sub_10000B9C8((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v79 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v107 = sub_100254634(v79, v80, (uint64_t *)v108);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v105 = *(void (**)(char *, uint64_t))(v85 + 8);
        v105(v8, v61);
        *(_WORD *)(v78 + 12) = 2112;
        swift_errorRetain();
        uint64_t v81 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v107 = v81;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v104 = v81;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v76, v77, "Failed to delete %s, error: %@", (uint8_t *)v78, 0x16u);
        sub_10000A844(&qword_10096B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        v105(v101, v61);
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
        uint64_t v82 = *(void (**)(char *, uint64_t))(v62 + 8);
        v82(v8, v61);
        swift_errorRelease();
        v82(v10, v61);
      }
    }
  }
}

uint64_t sub_10030D4A4()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_100250CC4(*(void *)(v0 + 72), *(void *)(v0 + 80));
  sub_100250CC4(*(void *)(v0 + 88), *(void *)(v0 + 96));
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_10030D4F4()
{
  sub_10030D4A4();

  return swift_deallocClassInstance();
}

uint64_t _s8LocalLTKCMa()
{
  return self;
}

unint64_t sub_10030D54C()
{
  _StringGuts.grow(_:)(37);
  swift_bridgeObjectRelease();
  unint64_t v30 = 0xD000000000000014;
  unint64_t v31 = 0x80000001007B8E50;
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 0x626F6C4279656B20;
  v4._object = (void *)0xED00003D657A6953;
  String.append(_:)(v4);
  uint64_t v5 = *(void *)(v0 + 72);
  switch(*(void *)(v0 + 80) >> 62)
  {
    case 1:
      if (!__OFSUB__(HIDWORD(v5), v5)) {
        goto LABEL_5;
      }
      __break(1u);
LABEL_33:
      __break(1u);
      JUMPOUT(0x10030D9F0);
    case 2:
      if (!__OFSUB__(*(void *)(v5 + 24), *(void *)(v5 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_33;
    default:
LABEL_5:
      v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v6);
      swift_bridgeObjectRelease();
      _StringGuts.grow(_:)(19);
      swift_bridgeObjectRelease();
      v29._countAndFlagsBits = 0x6572757461656620;
      v29._object = (void *)0xE90000000000003DLL;
      unint64_t v7 = 0xE700000000000000;
      uint64_t v8 = 0x6E776F6E6B6E75;
      switch(*(unsigned char *)(v0 + 32))
      {
        case 1:
          unint64_t v7 = 0xEE00656E6F68506BLL;
          uint64_t v8 = 0x636F6C6E5563616DLL;
          break;
        case 2:
          unint64_t v7 = 0xEC00000043737361;
          uint64_t v8 = 0x6C436B636F6C6E75;
          break;
        case 3:
          unint64_t v7 = 0xEF6B636F6C6E5565;
          uint64_t v8 = 0x646F4D7473657567;
          break;
        default:
          break;
      }
      unint64_t v9 = v7;
      String.append(_:)(*(Swift::String *)&v8);
      swift_bridgeObjectRelease();
      v10._countAndFlagsBits = 0x3D656C6F7220;
      v10._object = (void *)0xE600000000000000;
      String.append(_:)(v10);
      if (*(unsigned char *)(v0 + 33)) {
        uint64_t v11 = 7955787;
      }
      else {
        uint64_t v11 = 1801678668;
      }
      if (*(unsigned char *)(v0 + 33)) {
        unint64_t v12 = 0xE300000000000000;
      }
      else {
        unint64_t v12 = 0xE400000000000000;
      }
      unint64_t v13 = v12;
      String.append(_:)(*(Swift::String *)&v11);
      swift_bridgeObjectRelease();
      String.append(_:)(v29);
      swift_bridgeObjectRelease();
      _StringGuts.grow(_:)(35);
      swift_bridgeObjectRelease();
      v29._countAndFlagsBits = 0x654B6C61636F6C20;
      v29._object = (void *)0xEF3D7373616C4379;
      uint64_t v14 = *(char *)(v0 + 32);
      if (*(unsigned char *)(v0 + 33) == 1)
      {
        if (v14 == 2) {
          uint64_t v15 = 67;
        }
        else {
          uint64_t v15 = 65;
        }
      }
      else
      {
        uint64_t v15 = qword_100772B70[v14];
      }
      unint64_t v16 = 0xE100000000000000;
      String.append(_:)(*(Swift::String *)&v15);
      swift_bridgeObjectRelease();
      v17._object = (void *)0x80000001007B8E70;
      v17._countAndFlagsBits = 0xD000000000000010;
      String.append(_:)(v17);
      uint64_t v18 = *(char *)(v0 + 32);
      if (*(unsigned char *)(v0 + 33))
      {
        uint64_t v19 = qword_100772B70[v18];
      }
      else if (v18 == 2)
      {
        uint64_t v19 = 67;
      }
      else
      {
        uint64_t v19 = 65;
      }
      unint64_t v20 = 0xE100000000000000;
      String.append(_:)(*(Swift::String *)&v19);
      swift_bridgeObjectRelease();
      String.append(_:)(v29);
      swift_bridgeObjectRelease();
      _StringGuts.grow(_:)(44);
      swift_bridgeObjectRelease();
      v29._countAndFlagsBits = 0xD00000000000001FLL;
      v29._object = (void *)0x80000001007B8E90;
      if (*(unsigned char *)(v0 + 120)) {
        uint64_t v21 = 1702195828;
      }
      else {
        uint64_t v21 = 0x65736C6166;
      }
      if (*(unsigned char *)(v0 + 120)) {
        unint64_t v22 = 0xE400000000000000;
      }
      else {
        unint64_t v22 = 0xE500000000000000;
      }
      unint64_t v23 = v22;
      String.append(_:)(*(Swift::String *)&v21);
      swift_bridgeObjectRelease();
      v24._countAndFlagsBits = 0x4C65746F6D655220;
      v24._object = (void *)0xED00000A3A534B54;
      String.append(_:)(v24);
      String.append(_:)(v29);
      uint64_t v25 = swift_bridgeObjectRelease();
      __chkstk_darwin(v25);
      uint64_t v27 = v26 + 4;
      os_unfair_lock_lock(v26 + 4);
      sub_10030DED4(&v29);
      os_unfair_lock_unlock(v27);
      String.append(_:)(v29);
      swift_bridgeObjectRelease();
      return v30;
  }
}

unint64_t sub_10030DA10()
{
  return sub_10030D54C();
}

uint64_t sub_10030DA34(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000A844(&qword_10096EA80);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  sub_10030F1E4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v10) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v10) = *(unsigned char *)(v3 + 16);
    char v11 = 1;
    sub_10030F334();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v10) = *(unsigned char *)(v3 + 17);
    char v11 = 2;
    sub_10030F388();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    long long v10 = *(_OWORD *)(v3 + 24);
    char v11 = 3;
    sub_1002CC290();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    long long v10 = *(_OWORD *)(v3 + 40);
    char v11 = 4;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    *(void *)&long long v10 = *(void *)(v3 + 56);
    char v11 = 5;
    sub_10000A844(&qword_10096EA68);
    sub_10030F3DC(&qword_10096EA98, (void (*)(void))sub_10030F44C);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10030DCE8()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701605234;
      break;
    case 2:
      uint64_t result = 0x65727574616566;
      break;
    case 3:
      uint64_t result = 0x6174614479656BLL;
      break;
    case 4:
      uint64_t result = 0x496174614479656BLL;
      break;
    case 5:
      uint64_t result = 0x544C65746F6D6572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10030DDB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10030EAA0(a1, a2);
  *a3 = result;
  return result;
}

void sub_10030DDD8(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_10030DDE4(uint64_t a1)
{
  unint64_t v2 = sub_10030F1E4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10030DE20(uint64_t a1)
{
  unint64_t v2 = sub_10030F1E4();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10030DE5C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10030ED30(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_10030DEA0(void *a1)
{
  return sub_10030DA34(a1);
}

uint64_t sub_10030DEB8@<X0>(void *a1@<X8>)
{
  return sub_100308808(v1, a1);
}

void *sub_10030DED4@<X0>(void *a1@<X8>)
{
  double result = (*(void *(**)(void *__return_ptr))(v1 + 16))(v6);
  if (!v2)
  {
    uint64_t v5 = v6[1];
    *a1 = v6[0];
    a1[1] = v5;
  }
  return result;
}

uint64_t sub_10030DF18(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  long long v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_10030DFA0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v7 = v6;
  if (qword_100969BA8 != -1) {
LABEL_23:
  }
    swift_once();
  uint64_t v13 = qword_10096E7C8;
  sub_10030E52C();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (v7)
  {
    swift_release();
    swift_release();
    sub_100250CC4(a1, a2);
    return v13;
  }
  uint64_t v43 = a3;
  a3 = v58;
  _s8LocalLTKCMa();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 104) = &_swiftEmptyDictionarySingleton;
  uint64_t v49 = (void *)(v13 + 104);
  sub_10000A844((uint64_t *)&unk_10096D4C0);
  uint64_t v14 = swift_allocObject();
  *(_DWORD *)(v14 + 16) = 0;
  *(void *)(v13 + 112) = v14;
  *(unsigned char *)(v13 + 120) = 1;
  *(void *)(v13 + 16) = v50;
  *(void *)(v13 + 24) = v51;
  *(unsigned char *)(v13 + 32) = v53;
  *(unsigned char *)(v13 + 33) = v52;
  *(void *)(v13 + 72) = v54;
  *(void *)(v13 + 80) = v55;
  *(void *)(v13 + 88) = v56;
  unint64_t v15 = v57;
  *(void *)(v13 + 96) = v57;
  *(void *)(v13 + 40) = v43;
  *(void *)(v13 + 48) = a4;
  *(void *)(v13 + 56) = a5;
  *(void *)(v13 + 64) = a6;
  if (!*(void *)(v58 + 16))
  {
    swift_bridgeObjectRetain();
    sub_10025ADCC(v54, v55);
    uint64_t v38 = v56;
    sub_10025ADCC(v56, v57);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v39 = v54;
    unint64_t v40 = v55;
LABEL_19:
    sub_100250CC4(v39, v40);
    sub_100250CC4(v38, v15);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_100250CC4(a1, a2);
    swift_bridgeObjectRelease();
    return v13;
  }
  uint64_t v48 = *(void *)(v58 + 16);
  uint64_t v42 = a1;
  unint64_t v44 = a2;
  swift_bridgeObjectRetain();
  sub_10025ADCC(v54, v55);
  sub_10025ADCC(v56, v57);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  a1 = 32;
  uint64_t v46 = v13;
  while (1)
  {
    long long v18 = *(_OWORD *)(a3 + a1);
    long long v19 = *(_OWORD *)(a3 + a1 + 16);
    long long v20 = *(_OWORD *)(a3 + a1 + 48);
    v59[2] = *(_OWORD *)(a3 + a1 + 32);
    v59[3] = v20;
    v59[0] = v18;
    v59[1] = v19;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;
    _s9RemoteLTKCMa();
    swift_allocObject();
    sub_10030E580((uint64_t)v59);
    sub_10030E580((uint64_t)v59);
    uint64_t v24 = sub_1004F64E8(v59, v21, v23);
    sub_10030E5E4((uint64_t)v59);
    uint64_t v47 = a1;
    a6 = a3;
    a3 = 0;
    a5 = *(void *)(v24 + 32);
    a2 = *(void *)(v24 + 40);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v60 = (void *)*v49;
    uint64_t v26 = v60;
    *uint64_t v49 = 0x8000000000000000;
    unint64_t v7 = sub_1005838BC(a5, a2);
    uint64_t v28 = v26[2];
    BOOL v29 = (v27 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29))
    {
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    a1 = v27;
    if (v26[3] < v30) {
      break;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_10058E72C();
    }
LABEL_14:
    uint64_t v33 = v60;
    a3 = a6;
    if (a1)
    {
      uint64_t v16 = v60[7];
      swift_release();
      *(void *)(v16 + 8 * v7) = v24;
    }
    else
    {
      v60[(v7 >> 6) + 8] |= 1 << v7;
      uint64_t v34 = (uint64_t *)(v33[6] + 16 * v7);
      *uint64_t v34 = a5;
      v34[1] = a2;
      *(void *)(v33[7] + 8 * v7) = v24;
      uint64_t v35 = v33[2];
      BOOL v36 = __OFADD__(v35, 1);
      uint64_t v37 = v35 + 1;
      if (v36) {
        goto LABEL_22;
      }
      v33[2] = v37;
      swift_bridgeObjectRetain();
    }
    *uint64_t v49 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_10030E5E4((uint64_t)v59);
    swift_release();
    a1 = v47 + 64;
    BOOL v17 = v48-- == 1;
    uint64_t v13 = v46;
    if (v17)
    {
      swift_bridgeObjectRelease();
      swift_release();
      unint64_t v40 = v55;
      a2 = v44;
      unint64_t v15 = v57;
      a1 = v42;
      uint64_t v38 = v56;
      uint64_t v39 = v54;
      goto LABEL_19;
    }
  }
  sub_100588B98(v30, isUniquelyReferenced_nonNull_native);
  uint64_t v31 = sub_1005838BC(a5, a2);
  if ((a1 & 1) == (v32 & 1))
  {
    unint64_t v7 = v31;
    goto LABEL_14;
  }
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

unint64_t sub_10030E52C()
{
  unint64_t result = qword_10096EA30;
  if (!qword_10096EA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096EA30);
  }
  return result;
}

uint64_t sub_10030E580(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  unint64_t v3 = *(void *)(a1 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10025ADCC(v2, v3);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10030E5E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  unint64_t v3 = *(void *)(a1 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CC4(v2, v3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10030E648@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10030C24C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_10030E664()
{
  return sub_1006CC01C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void (**)(uint64_t))(v0 + 40));
}

unint64_t sub_10030E688()
{
  unint64_t result = qword_10096EA40;
  if (!qword_10096EA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096EA40);
  }
  return result;
}

uint64_t sub_10030E6DC()
{
  return sub_1004F4160(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10030E708(uint64_t a1)
{
  return sub_1003090C4(a1, *(unsigned char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10030E714@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = 0;
  return result;
}

uint64_t sub_10030E754@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1006CC1E8(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 40));
  if (!v2) {
    *a1 = result & 1;
  }
  return result;
}

void *sub_10030E790@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_10030E7D4()
{
  return sub_100308E70(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t _s8LocalLTKC18FileRepresentationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_100250CC4(*(void *)(a1 + 24), *(void *)(a1 + 32));
  sub_100250CC4(*(void *)(a1 + 40), *(void *)(a1 + 48));

  return swift_bridgeObjectRelease();
}

uint64_t _s8LocalLTKC18FileRepresentationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v5 = *(void *)(a2 + 24);
  unint64_t v6 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_10025ADCC(v5, v6);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  unint64_t v8 = *(void *)(a2 + 48);
  sub_10025ADCC(v7, v8);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s8LocalLTKC18FileRepresentationVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v4 = *(void *)(a2 + 24);
  unint64_t v5 = *(void *)(a2 + 32);
  sub_10025ADCC(v4, v5);
  uint64_t v6 = *(void *)(a1 + 24);
  unint64_t v7 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  sub_100250CC4(v6, v7);
  uint64_t v8 = *(void *)(a2 + 40);
  unint64_t v9 = *(void *)(a2 + 48);
  sub_10025ADCC(v8, v9);
  uint64_t v10 = *(void *)(a1 + 40);
  unint64_t v11 = *(void *)(a1 + 48);
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  sub_100250CC4(v10, v11);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s9RemoteLTKC18FileRepresentationVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s8LocalLTKC18FileRepresentationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v5 = *(void *)(a1 + 24);
  unint64_t v6 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_100250CC4(v5, v6);
  uint64_t v7 = *(void *)(a1 + 40);
  unint64_t v8 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_100250CC4(v7, v8);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9RemoteLTKC18FileRepresentationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s9RemoteLTKC18FileRepresentationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s8LocalLTKC18FileRepresentationVMa()
{
  return &_s8LocalLTKC18FileRepresentationVN;
}

uint64_t sub_10030EAA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65727574616566 && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614479656BLL && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x496174614479656BLL && a2 == 0xE900000000000044 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x544C65746F6D6572 && a2 == 0xEA0000000000734BLL)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_10030ED30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A844(&qword_10096EA48);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  sub_10030F1E4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_10024D338((uint64_t)a1);
  }
  LOBYTE(v33) = 0;
  uint64_t v10 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v12 = v11;
  char v36 = 1;
  sub_10030F238();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  int v35 = v33;
  char v36 = 2;
  sub_10030F28C();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  int v31 = v33;
  char v36 = 3;
  unint64_t v32 = sub_1002CC1F4();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  char v36 = 4;
  unint64_t v29 = v34;
  uint64_t v30 = v33;
  sub_10025ADCC(v33, v34);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  unint64_t v32 = 0;
  uint64_t v14 = v33;
  unint64_t v13 = v34;
  v26[1] = sub_10000A844(&qword_10096EA68);
  unint64_t v27 = v13;
  char v36 = 5;
  uint64_t v28 = v14;
  sub_10025ADCC(v14, v13);
  sub_10030F3DC(&qword_10096EA70, (void (*)(void))sub_10030F2E0);
  unint64_t v15 = v32;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    unint64_t v17 = v27;
    uint64_t v16 = v28;
    sub_100250CC4(v28, v27);
    unint64_t v19 = v29;
    uint64_t v18 = v30;
    sub_100250CC4(v30, v29);
    swift_bridgeObjectRelease();
    unint64_t v20 = v32;
    sub_10024D338((uint64_t)a1);
    swift_bridgeObjectRelease();
    uint64_t result = sub_100250CC4(v18, v19);
    if (!v20) {
      return sub_100250CC4(v16, v17);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    unint64_t v32 = v33;
    swift_bridgeObjectRetain();
    unint64_t v21 = v29;
    sub_10025ADCC(v30, v29);
    unint64_t v22 = v27;
    uint64_t v23 = v28;
    sub_10025ADCC(v28, v27);
    swift_bridgeObjectRetain();
    sub_100250CC4(v23, v22);
    uint64_t v24 = v30;
    sub_100250CC4(v30, v21);
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_100250CC4(v24, v21);
    sub_100250CC4(v23, v22);
    unint64_t v25 = v32;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = v10;
    *(void *)(a2 + 8) = v12;
    *(unsigned char *)(a2 + 16) = v35;
    *(unsigned char *)(a2 + 17) = v31;
    *(void *)(a2 + 24) = v24;
    *(void *)(a2 + 32) = v21;
    *(void *)(a2 + 40) = v23;
    *(void *)(a2 + 48) = v22;
    *(void *)(a2 + 56) = v25;
  }
  return result;
}

unint64_t sub_10030F1E4()
{
  unint64_t result = qword_10096EA50;
  if (!qword_10096EA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096EA50);
  }
  return result;
}

unint64_t sub_10030F238()
{
  unint64_t result = qword_10096EA58;
  if (!qword_10096EA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096EA58);
  }
  return result;
}

unint64_t sub_10030F28C()
{
  unint64_t result = qword_10096EA60;
  if (!qword_10096EA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096EA60);
  }
  return result;
}

unint64_t sub_10030F2E0()
{
  unint64_t result = qword_10096EA78;
  if (!qword_10096EA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096EA78);
  }
  return result;
}

unint64_t sub_10030F334()
{
  unint64_t result = qword_10096EA88;
  if (!qword_10096EA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096EA88);
  }
  return result;
}

unint64_t sub_10030F388()
{
  unint64_t result = qword_10096EA90;
  if (!qword_10096EA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096EA90);
  }
  return result;
}

uint64_t sub_10030F3DC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100247840(&qword_10096EA68);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10030F44C()
{
  unint64_t result = qword_10096EAA0;
  if (!qword_10096EAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096EAA0);
  }
  return result;
}

uint64_t _s8LocalLTKC18FileRepresentationV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s8LocalLTKC18FileRepresentationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10030F5FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8LocalLTKC18FileRepresentationV10CodingKeysOMa()
{
  return &_s8LocalLTKC18FileRepresentationV10CodingKeysON;
}

unint64_t sub_10030F638()
{
  unint64_t result = qword_10096EAA8;
  if (!qword_10096EAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096EAA8);
  }
  return result;
}

unint64_t sub_10030F690()
{
  unint64_t result = qword_10096EAB0;
  if (!qword_10096EAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096EAB0);
  }
  return result;
}

unint64_t sub_10030F6E8()
{
  unint64_t result = qword_10096EAB8;
  if (!qword_10096EAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096EAB8);
  }
  return result;
}

uint64_t sub_10030F73C(uint64_t a1)
{
  return sub_1002CEA38(a1);
}

void *sub_10030F754(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
    unint64_t result = (void *)sub_100255550(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      unsigned int v6 = v5;
      id v7 = [v5 handle];
      if (v7)
      {
        int v8 = v7;
        uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v11 = v10;
      }
      else
      {

        uint64_t v9 = 0;
        uint64_t v11 = 0;
      }
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1) {
        sub_100255550(v12 > 1, v13 + 1, 1);
      }
      ++v4;
      _swiftEmptyArrayStorage[2] = v13 + 1;
      uint64_t v14 = &_swiftEmptyArrayStorage[2 * v13];
      v14[4] = v9;
      v14[5] = v11;
      if (v2 == v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_10030F8E4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10096EAC0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10096EAC0);
  if (qword_100969CE8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994708);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_10030F9AC()
{
  type metadata accessor for SDContactStore();
  uint64_t v0 = (void *)swift_allocObject();
  uint64_t v1 = (void *)CNContactStoreMeContactDidChangeNotification;
  v0[2] = CNContactStoreDidChangeNotification;
  v0[3] = v1;
  id v2 = objc_allocWithZone((Class)CNContactStore);
  int v3 = CNContactStoreDidChangeNotification;
  id v4 = v1;
  id result = [v2 init];
  v0[4] = result;
  qword_100994408 = (uint64_t)v0;
  return result;
}

unint64_t sub_10030FA38(uint64_t a1, void *a2)
{
  int v3 = v2;
  uint64_t v125 = a1;
  v126 = a2;
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_10096EB80);
  __chkstk_darwin(v4 - 8);
  v124 = (char *)&v115 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PersonNameComponents();
  uint64_t v123 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  unint64_t v12 = (char *)&v115 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  unint64_t v15 = (char *)&v115 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v115 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  unint64_t v21 = (char *)&v115 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v115 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v115 - v25;
  unint64_t v27 = v3;
  id v28 = [v3 contactIdentifier];
  if (!v28)
  {
    v120 = v18;
    v121 = v21;
    v117 = v9;
    v118 = v12;
    v119 = v15;
    v122 = v26;
    id v36 = [v3 personHandle];
    uint64_t v37 = (uint64_t)v124;
    if (v36)
    {
      id v38 = v36;
      id v39 = [v36 value];
      if (v39)
      {
        unint64_t v40 = v39;
        uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v43 = v42;

        id v44 = [v38 type];
        if (v44)
        {
          if (v44 == (id)1)
          {
            unint64_t v127 = 0;
            unint64_t v128 = 0xE000000000000000;
            _StringGuts.grow(_:)(30);
            swift_bridgeObjectRelease();
            unint64_t v45 = 0xD000000000000019;
            uint64_t v46 = "pvp(PS520,searchByEmail('";
            goto LABEL_21;
          }
          if (v44 == (id)2)
          {
            unint64_t v127 = 0;
            unint64_t v128 = 0xE000000000000000;
            _StringGuts.grow(_:)(36);
            swift_bridgeObjectRelease();
            unint64_t v45 = 0xD00000000000001FLL;
            uint64_t v46 = "pvp(PS520,searchByPhoneNumber('";
LABEL_21:
            unint64_t v127 = v45;
            unint64_t v128 = (unint64_t)(v46 - 32) | 0x8000000000000000;
            v83._countAndFlagsBits = v41;
            v83._object = v43;
            String.append(_:)(v83);
            swift_bridgeObjectRelease();
            uint64_t v84 = 2697511;
            unint64_t v85 = 0xE300000000000000;
LABEL_31:
            String.append(_:)(*(Swift::String *)&v84);

            uint64_t v69 = v127;
            uint64_t v70 = (void *)v128;
            goto LABEL_18;
          }
          if (qword_100969BB0 != -1) {
            swift_once();
          }
          uint64_t v86 = type metadata accessor for Logger();
          sub_10000B47C(v86, (uint64_t)qword_10096EAC0);
          id v38 = v38;
          long long v87 = Logger.logObject.getter();
          os_log_type_t v88 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v87, v88))
          {
            int64_t v89 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)int64_t v89 = 134217984;
            unint64_t v127 = (unint64_t)[v38 type];
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            _os_log_impl((void *)&_mh_execute_header, v87, v88, "Invalid INPerson handle type: %ld", v89, 0xCu);
            swift_slowDealloc();
          }
          else
          {
          }
        }
        unint64_t v127 = 0;
        unint64_t v128 = 0xE000000000000000;
        _StringGuts.grow(_:)(55);
        v94._countAndFlagsBits = 0xD000000000000033;
        v94._object = (void *)0x80000001007B9250;
        String.append(_:)(v94);
        v95._countAndFlagsBits = v41;
        v95._object = v43;
        String.append(_:)(v95);
        swift_bridgeObjectRelease();
        uint64_t v84 = 10537;
        unint64_t v85 = 0xE200000000000000;
        goto LABEL_31;
      }
    }
    id v47 = [v27 nameComponents];
    if (v47)
    {
      uint64_t v48 = v47;
      static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v49 = v123;
      uint64_t v50 = v6;
      uint64_t v51 = *(void (**)(uint64_t, char *, uint64_t))(v123 + 32);
      v51(v37, v24, v6);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v37, 0, 1, v6);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v37, 1, v6) != 1)
      {
        char v52 = v122;
        v51((uint64_t)v122, (char *)v37, v6);
        PersonNameComponents.givenName.getter();
        uint64_t v54 = v53;
        swift_bridgeObjectRelease();
        unint64_t v55 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
        uint64_t v56 = v121;
        v55(v121, v52, v50);
        uint64_t v116 = v50;
        if (v54)
        {
          PersonNameComponents.familyName.getter();
          uint64_t v58 = v57;
          uint64_t v59 = *(void (**)(char *, uint64_t))(v49 + 8);
          v59(v56, v50);
          swift_bridgeObjectRelease();
          if (v58)
          {
            id v60 = [objc_allocWithZone((Class)NSPersonNameComponentsFormatter) init];
            uint64_t v61 = v122;
            Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
            id v63 = [v60 stringFromPersonNameComponents:isa];

            uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v66 = v65;

            unint64_t v127 = 0;
            unint64_t v128 = 0xE000000000000000;
            _StringGuts.grow(_:)(33);
            swift_bridgeObjectRelease();
            unint64_t v127 = 0xD00000000000001CLL;
            unint64_t v128 = 0x80000001007B9230;
            v67._countAndFlagsBits = v64;
            v67._object = v66;
            String.append(_:)(v67);
            swift_bridgeObjectRelease();
            v68._countAndFlagsBits = 2697511;
            v68._object = (void *)0xE300000000000000;
            String.append(_:)(v68);
            uint64_t v69 = v127;
            uint64_t v70 = (void *)v128;
            uint64_t v72 = v125;
            unsigned int v71 = v126;
LABEL_41:
            v59(v61, v116);
            goto LABEL_19;
          }
        }
        else
        {
          uint64_t v59 = *(void (**)(char *, uint64_t))(v49 + 8);
          v59(v56, v50);
        }
        uint64_t v90 = v122;
        uint64_t v91 = PersonNameComponents.givenName.getter();
        if (v92)
        {
          unint64_t v127 = 0x3133535028707670;
          unint64_t v128 = 0xEA00000000002C32;
          String.append(_:)(*(Swift::String *)&v91);
          swift_bridgeObjectRelease();
          v93._countAndFlagsBits = 41;
          v93._object = (void *)0xE100000000000000;
          String.append(_:)(v93);
          uint64_t v69 = v127;
          uint64_t v70 = (void *)v128;
          uint64_t v72 = v125;
          unsigned int v71 = v126;
          uint64_t v61 = v90;
          goto LABEL_41;
        }
        uint64_t v96 = PersonNameComponents.familyName.getter();
        CFStringRef v98 = v97;
        CFStringRef v99 = v120;
        v100 = v55;
        uint64_t v101 = v116;
        v100(v120, v90, v116);
        if (v98)
        {
          v59(v99, v101);
LABEL_39:
          uint64_t v72 = v125;
          unsigned int v71 = v126;
          uint64_t v61 = v122;
LABEL_40:
          unint64_t v127 = 0;
          unint64_t v128 = 0xE000000000000000;
          _StringGuts.grow(_:)(45);
          swift_bridgeObjectRelease();
          unint64_t v127 = 0x4C494E2874786574;
          unint64_t v128 = 0xEF202C333353502CLL;
          v107._countAndFlagsBits = v96;
          v107._object = v98;
          String.append(_:)(v107);
          swift_bridgeObjectRelease();
          v108._object = (void *)0x80000001007B9170;
          v108._countAndFlagsBits = 0xD00000000000001CLL;
          String.append(_:)(v108);
          uint64_t v69 = v127;
          uint64_t v70 = (void *)v128;
          goto LABEL_41;
        }
        uint64_t v96 = PersonNameComponents.nickname.getter();
        CFStringRef v98 = v102;
        uint64_t v103 = v119;
        v100(v119, v99, v101);
        if (v98)
        {
          v59(v103, v101);
          v104 = v99;
LABEL_38:
          v59(v104, v101);
          goto LABEL_39;
        }
        uint64_t v96 = PersonNameComponents.middleName.getter();
        CFStringRef v98 = v105;
        v106 = v118;
        v100(v118, v103, v101);
        if (v98)
        {
LABEL_37:
          v59(v106, v101);
          v59(v103, v101);
          v104 = v120;
          goto LABEL_38;
        }
        uint64_t v96 = PersonNameComponents.namePrefix.getter();
        CFStringRef v98 = v109;
        v100(v117, v106, v101);
        if (!v98)
        {
          uint64_t v110 = PersonNameComponents.nameSuffix.getter();
          if (!v111)
          {
            id v113 = [v27 displayName];
            uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            CFStringRef v98 = v114;

            uint64_t v101 = v116;
            v59(v117, v116);
            goto LABEL_37;
          }
          uint64_t v96 = v110;
          CFStringRef v98 = v111;
        }
        uint64_t v72 = v125;
        unsigned int v71 = v126;
        uint64_t v61 = v122;
        uint64_t v112 = v116;
        v59(v117, v116);
        v59(v118, v112);
        v59(v103, v112);
        v59(v120, v112);
        goto LABEL_40;
      }
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v123 + 56))(v37, 1, 1, v6);
    }
    sub_100313B80(v37);
    unint64_t v127 = 0;
    unint64_t v128 = 0xE000000000000000;
    _StringGuts.grow(_:)(45);
    swift_bridgeObjectRelease();
    unint64_t v127 = 0x4C494E2874786574;
    unint64_t v128 = 0xEF202C333353502CLL;
    id v73 = [v27 displayName];
    uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v76 = v75;

    v77._countAndFlagsBits = v74;
    v77._object = v76;
    String.append(_:)(v77);
    swift_bridgeObjectRelease();
    unint64_t v35 = 0x80000001007B9170;
    unint64_t v34 = 0xD00000000000001CLL;
    goto LABEL_17;
  }
  unint64_t v29 = v28;
  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v32 = v31;

  unint64_t v127 = 0;
  unint64_t v128 = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  unint64_t v127 = 0xD000000000000015;
  unint64_t v128 = 0x80000001007B92D0;
  v33._countAndFlagsBits = v30;
  v33._object = v32;
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  unint64_t v34 = 10535;
  unint64_t v35 = 0xE200000000000000;
LABEL_17:
  String.append(_:)(*(Swift::String *)&v34);
  uint64_t v69 = v127;
  uint64_t v70 = (void *)v128;
LABEL_18:
  uint64_t v72 = v125;
  unsigned int v71 = v126;
LABEL_19:
  unint64_t v127 = 0;
  unint64_t v128 = 0xE000000000000000;
  _StringGuts.grow(_:)(152);
  v78._countAndFlagsBits = v69;
  v78._object = v70;
  String.append(_:)(v78);
  swift_bridgeObjectRelease();
  v79._countAndFlagsBits = 0xD00000000000005FLL;
  v79._object = (void *)0x80000001007B9190;
  String.append(_:)(v79);
  v80._countAndFlagsBits = v72;
  v80._object = v71;
  String.append(_:)(v80);
  v81._countAndFlagsBits = 0xD000000000000035;
  v81._object = (void *)0x80000001007B91F0;
  String.append(_:)(v81);
  return v127;
}

uint64_t sub_10031070C(uint64_t a1, int a2, void *aBlock)
{
  v3[2] = _Block_copy(aBlock);
  if (a1)
  {
    sub_10000B740(0, &qword_10096EB28);
    a1 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  v3[3] = a1;
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  v3[4] = v6;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10096EB20 + dword_10096EB20);
  uint64_t v8 = (void *)swift_task_alloc();
  v3[5] = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_100310818;
  return v10(a1, v5, v7);
}

uint64_t sub_100310818(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  uint64_t v6 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void (***)(void, void, void))(v5 + 16);
  swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v8 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
    ((void (**)(void, void, void *))v7)[2](v7, 0, v8);

    _Block_release(v7);
  }
  else
  {
    ((void (**)(void, void *, void))v7)[2](v7, a1, 0);
    _Block_release(v7);
  }
  uint64_t v9 = *(uint64_t (**)(void))(v6 + 8);
  return v9();
}

uint64_t sub_1003109D4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_10000A844(&qword_10096BAF0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    if (a2) {
      uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else {
      uint64_t v8 = 0;
    }
    uint64_t v10 = v8;
    sub_100313B18((uint64_t)&v10, *(void *)(*(void *)(v3 + 64) + 40));
    return swift_continuation_throwingResume();
  }
}

id sub_100310AF4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDSuggestionCreationUtilities();
  return [super dealloc];
}

uint64_t type metadata accessor for SDSuggestionCreationUtilities()
{
  return self;
}

uint64_t sub_100310B50()
{
  _Block_release(*(const void **)(v0 + 32));

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100310B98()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_10000A6F4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int, void *))((char *)&dword_10096EB00 + dword_10096EB00);
  return v6(v2, v3, v4);
}

id sub_100310C58(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = 0;
  id v8 = [v4 initWithBundleIdentifier:v7 requireValid:a3 & 1 platform:a4 error:&v12];

  if (v8)
  {
    id v9 = v12;
  }
  else
  {
    id v10 = v12;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v8;
}

id sub_100310D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  if (a2)
  {
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    if (a4) {
      goto LABEL_3;
    }
  }
  else
  {
    NSString v18 = 0;
    if (a4)
    {
LABEL_3:
      NSString v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      if (a6) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  NSString v19 = 0;
  if (a6)
  {
LABEL_4:
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v21 = a9;
    if (a7) {
      goto LABEL_5;
    }
LABEL_10:
    v22.super.Class isa = 0;
    uint64_t v23 = a12;
    if (v21) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_9:
  NSString v20 = 0;
  uint64_t v21 = a9;
  if (!a7) {
    goto LABEL_10;
  }
LABEL_5:
  sub_10000B740(0, &qword_10096EB40);
  v22.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v23 = a12;
  if (v21)
  {
LABEL_6:
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
LABEL_11:
  NSString v24 = 0;
LABEL_12:
  if (!v23)
  {
    NSString v25 = 0;
    uint64_t v26 = a15;
    if (a14) {
      goto LABEL_14;
    }
LABEL_16:
    NSString v27 = 0;
    goto LABEL_17;
  }
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v26 = a15;
  if (!a14) {
    goto LABEL_16;
  }
LABEL_14:
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_17:
  id v28 = v18;
  id v29 = [v31 initWithBundleID:v18 conversationIdentifier:v19 groupName:v20 recipients:v22.super.isa derivedIntentIdentifier:v24 image:a10 reason:v25 reasonType:v27 score:v26];

  return v29;
}

uint64_t sub_100310F30()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_10000A6F0;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_10097FA78 + dword_10097FA78);
  return v6(v2, v3, v4);
}

uint64_t sub_100310FF4()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100311034(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  NSString v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *NSString v7 = v2;
  v7[1] = sub_10000A6F0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_10097FA80 + dword_10097FA80);
  return v8(a1, v4, v5, v6);
}

id sub_100311100(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SDContactStore();
  uint64_t v35 = v11;
  id v36 = &off_1008E0CB8;
  v34[0] = a3;
  swift_retain();
  id v12 = [a4 customIdentifier];
  if (v12 || (id v12 = [a4 contactIdentifier]) != 0)
  {
    uint64_t v13 = v12;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v14 = a2;
    if (a2) {
      goto LABEL_10;
    }
  }
  else
  {
    UUID.init()();
    UUID.uuidString.getter();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v14 = a2;
    if (a2) {
      goto LABEL_10;
    }
  }
  id v15 = [a4 personHandle];
  uint64_t v16 = v15;
  if (v15 && (id v17 = [v15 value], v16, v17))
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v18;
  }
  else
  {
    uint64_t v14 = 0;
  }
LABEL_10:
  swift_bridgeObjectRetain();
  id v19 = [a4 displayName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v20 = *sub_10026BB6C(v34, v35);
  uint64_t v32 = v11;
  Swift::String v33 = &off_1008E0CB8;
  v31[0] = v20;
  swift_retain();
  id v21 = [a4 contactIdentifier];
  if (v21)
  {
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v24 = v23;

    sub_10026BB6C(v31, v32);
    id v21 = (id)sub_1005CAC30(v22, v24);
    swift_bridgeObjectRelease();
  }
  sub_10024D338((uint64_t)v31);
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (v14)
  {
    NSString v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v26 = 0;
  }
  id v27 = objc_allocWithZone((Class)_PSRecipient);
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v29 = [v27 initWithIdentifier:v25 handle:v26 displayName:v28 contact:v21];

  sub_10024D338((uint64_t)v34);
  return v29;
}

id sub_10031143C()
{
  sub_10000B740(0, (unint64_t *)&qword_1009745A0);
  swift_bridgeObjectRetain();
  Class isa = NSNumber.init(integerLiteral:)(1).super.super.isa;
  Class v1 = NSNumber.init(integerLiteral:)(0).super.super.isa;
  id v2 = objc_allocWithZone((Class)GDKnosisRequest);
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 initWithKGQ:v3 query:v4 limit:isa offset:v1];

  id v6 = [objc_allocWithZone((Class)GDXPCKnosisService) init];
  id v11 = 0;
  id v7 = [v6 executeKGQ:v5 error:&v11];
  if (v7)
  {
    id v8 = v11;
  }
  else
  {
    id v9 = v11;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }

  return v7;
}

uint64_t sub_1003115E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[18] = a2;
  v3[19] = a3;
  v3[17] = a1;
  return _swift_task_switch(sub_100311608, 0, 0);
}

uint64_t sub_100311608()
{
  Class v1 = self;
  NSString v2 = [v1 defaultDatabaseDirectory];
  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    NSString v2 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v3 = [v1 storeWithDirectory:v2 readOnly:1];

  v0[10] = v3;
  sub_10000A844(&qword_10096EB48);
  Optional.tryUnwrap(_:file:line:)();
  uint64_t v5 = v0[18];
  uint64_t v4 = v0[19];
  unint64_t v6 = v0[17];

  id v22 = (id)v0[16];
  v0[20] = v22;
  id v7 = objc_allocWithZone((Class)NSSortDescriptor);
  NSString v8 = String._bridgeToObjectiveC()();
  id v21 = [v7 initWithKey:v8 ascending:0];
  v0[21] = v21;

  sub_10000A844((uint64_t *)&unk_10096EE60);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100771F40;
  *(void *)(v9 + 56) = &type metadata for String;
  *(void *)(v9 + 64) = sub_1002E695C();
  *(void *)(v9 + 32) = v5;
  *(void *)(v9 + 40) = v4;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  unint64_t v11 = v0[17];
  sub_10000B740(0, &qword_10096EB50);
  *(void *)(v9 + 96) = &type metadata for Int;
  *(void *)(v9 + 104) = &protocol witness table for Int;
  *(void *)(v9 + 72) = v10;
  id v12 = sub_10030F754(v11);
  *(void *)(v9 + 136) = sub_10000A844(&qword_10096EB58);
  unint64_t v13 = sub_100313ABC();
  *(void *)(v9 + 112) = v12;
  *(void *)(v9 + 176) = &type metadata for Int;
  *(void *)(v9 + 184) = &protocol witness table for Int;
  *(void *)(v9 + 144) = v13;
  *(void *)(v9 + 152) = v10;
  uint64_t v14 = NSPredicate.init(format:_:)();
  v0[22] = v14;
  sub_10000A844(&qword_10096B2E8);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_10076E7A0;
  *(void *)(v15 + 56) = sub_10000B740(0, &qword_10096EB68);
  *(void *)(v15 + 32) = v21;
  id v16 = v14;
  id v17 = v21;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  v0[23] = isa;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[7] = v0 + 16;
  v0[3] = sub_100311A68;
  uint64_t v19 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1003109D4;
  v0[13] = &unk_1008D6850;
  v0[14] = v19;
  [v22 queryInteractionsUsingPredicate:v16 sortDescriptors:isa limit:1 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100311A68()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 192) = v1;
  if (v1) {
    NSString v2 = sub_10031236C;
  }
  else {
    NSString v2 = sub_100311B78;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100311B78()
{
  uint64_t v50 = v0;
  uint64_t v1 = (uint8_t *)(v0 + 128);
  NSString v2 = *(void **)(v0 + 176);
  id v3 = *(void **)(v0 + 184);
  if (*(void *)(v0 + 128))
  {
    unint64_t v4 = (unint64_t)sub_100262014(*(void *)(v0 + 128));
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v4 = 0;
  }

  if (qword_100969BB0 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000B47C(v5, (uint64_t)qword_10096EAC0);
  swift_bridgeObjectRetain_n();
  unint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v1 = (uint8_t *)swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    *(_DWORD *)uint64_t v1 = 136315138;
    if (!v4)
    {
      uint64_t v9 = 0;
      goto LABEL_18;
    }
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v4 >> 62) {
      goto LABEL_39;
    }
    uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v9)
    {
      while (1)
      {
LABEL_14:
        swift_bridgeObjectRelease();
LABEL_18:
        *(void *)(v0 + 80) = v9;
        sub_10000A844(&qword_10096EB70);
        uint64_t v12 = String.init<A>(describing:)();
        *(void *)(v0 + 80) = sub_100254634(v12, v13, &v49);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "Found interaction %s", v1, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        if (!v4) {
          goto LABEL_30;
        }
LABEL_19:
        uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
        if (v4 >> 62)
        {
          swift_bridgeObjectRetain();
          unint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v6)
          {
LABEL_29:
            swift_bridgeObjectRelease();
            goto LABEL_30;
          }
        }
        else
        {
          unint64_t v6 = *(NSObject **)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v6) {
            goto LABEL_29;
          }
        }
        if ((v4 & 0xC000000000000001) != 0) {
          break;
        }
        if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v14 = *(id *)(v4 + 32);
LABEL_24:
          uint64_t v15 = v14;
          swift_bridgeObjectRelease();
          id v16 = [v15 derivedIntentIdentifier];

          if (!v16) {
            goto LABEL_30;
          }
          uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v19 = v18;

          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          uint64_t v20 = Logger.logObject.getter();
          os_log_type_t v21 = static os_log_type_t.default.getter();
          BOOL v22 = os_log_type_enabled(v20, v21);
          uint64_t v23 = *(void **)(v0 + 168);
          unint64_t v24 = *(void *)(v0 + 152);
          NSString v25 = *(void **)(v0 + 160);
          if (v22)
          {
            uint64_t v42 = *(void *)(v0 + 144);
            id v47 = *(void **)(v0 + 176);
            unint64_t v45 = *(void **)(v0 + 168);
            uint64_t v26 = swift_slowAlloc();
            uint64_t v49 = swift_slowAlloc();
            *(_DWORD *)uint64_t v26 = 136315650;
            id v44 = v25;
            swift_bridgeObjectRetain();
            *(void *)(v0 + 80) = sub_100254634(v17, v19, &v49);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v26 + 12) = 2080;
            sub_10000B740(0, &qword_10096EB40);
            os_log_type_t type = v21;
            swift_bridgeObjectRetain();
            uint64_t v27 = Array.description.getter();
            unint64_t v29 = v28;
            swift_bridgeObjectRelease();
            *(void *)(v0 + 80) = sub_100254634(v27, v29, &v49);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v26 + 22) = 2080;
            swift_bridgeObjectRetain();
            *(void *)(v0 + 80) = sub_100254634(v42, v24, &v49);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v20, type, "Found derived intent identifier %s for recipients %s and bundle ID %s", (uint8_t *)v26, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }
          goto LABEL_34;
        }
        __break(1u);
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v9 = result;
        if (result) {
          goto LABEL_10;
        }
      }
      id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_24;
    }
LABEL_10:
    if ((v4 & 0xC000000000000001) != 0)
    {
      id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_13;
    }
    if (*(void *)(v8 + 16))
    {
      id v11 = *(id *)(v4 + 32);
LABEL_13:
      uint64_t v9 = (uint64_t)v11;
      goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    if (v4) {
      goto LABEL_19;
    }
LABEL_30:
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.default.getter();
    BOOL v32 = os_log_type_enabled(v30, v31);
    Swift::String v33 = *(void **)(v0 + 168);
    unint64_t v34 = *(void *)(v0 + 152);
    uint64_t v35 = *(void **)(v0 + 160);
    if (v32)
    {
      uint64_t v43 = *(void *)(v0 + 144);
      uint64_t v48 = *(void **)(v0 + 176);
      uint64_t v46 = *(void **)(v0 + 168);
      uint64_t v36 = swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 136315394;
      sub_10000B740(0, &qword_10096EB40);
      swift_bridgeObjectRetain();
      uint64_t v37 = Array.description.getter();
      unint64_t v39 = v38;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 80) = sub_100254634(v37, v39, &v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v36 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 80) = sub_100254634(v43, v34, &v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "No interaction was found for recipients %s and bundle ID %s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v17 = 0;
    unint64_t v19 = 0;
LABEL_34:
    unint64_t v40 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
    return v40(v17, v19);
  }
  return result;
}

uint64_t sub_10031236C()
{
  uint64_t v1 = (void *)v0[23];
  id v3 = (void *)v0[21];
  NSString v2 = (void *)v0[22];
  unint64_t v4 = (void *)v0[20];
  swift_willThrow();

  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1003123FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[23] = a2;
  v3[24] = a3;
  v3[22] = a1;
  return _swift_task_switch(sub_100312420, 0, 0);
}

void sub_100312420()
{
  unint64_t v85 = v0;
  NSString v2 = v0 + 22;
  unint64_t v1 = v0[22];
  if (!v1)
  {
LABEL_56:
    uint64_t v70 = (void (*)(void))v0[1];
    v70(0);
    return;
  }
  if (!(v1 >> 62))
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_4;
    }
    goto LABEL_55;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  if (!v3)
  {
LABEL_55:
    swift_bridgeObjectRelease();
    goto LABEL_56;
  }
LABEL_4:
  uint64_t v5 = v0[23];
  uint64_t v4 = v0[24];
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v5 && v6 == v4) {
    goto LABEL_11;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    if (qword_100969BB0 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000B47C(v12, (uint64_t)qword_10096EAC0);
    swift_bridgeObjectRetain_n();
    unint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    BOOL v15 = os_log_type_enabled(v13, v14);
    unint64_t v16 = v0[24];
    if (v15)
    {
      uint64_t v17 = v0[23];
      unint64_t v18 = (uint8_t *)swift_slowAlloc();
      v84[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v18 = 136315138;
      swift_bridgeObjectRetain();
      v0[21] = sub_100254634(v17, v16, v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Skipping conversion of provided recipients to suggestion for activity %s since SPI will be used instead", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    goto LABEL_56;
  }
  uint64_t v10 = v0[23];
  uint64_t v9 = v0[24];
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v10 && v11 == v9)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v19) {
    goto LABEL_12;
  }
  uint64_t v78 = v3;
  if (qword_100969BB0 != -1) {
LABEL_60:
  }
    swift_once();
  Swift::String v79 = v2 - 10;
  uint64_t v20 = type metadata accessor for Logger();
  v0[25] = sub_10000B47C(v20, (uint64_t)qword_10096EAC0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  BOOL v23 = os_log_type_enabled(v21, v22);
  unint64_t v24 = v0[24];
  unint64_t v74 = v1;
  if (v23)
  {
    uint64_t v76 = v0[23];
    uint64_t v25 = swift_slowAlloc();
    v84[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136315394;
    sub_10000B740(0, &qword_10096EB28);
    swift_bridgeObjectRetain();
    uint64_t v26 = Array.description.getter();
    unint64_t v28 = v27;
    swift_bridgeObjectRelease();
    uint64_t v29 = v26;
    unint64_t v1 = v74;
    v0[19] = sub_100254634(v29, v28, v84);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v25 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[20] = sub_100254634(v76, v24, v84);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Converting provided recipients %s for activity type %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v30 = v0[23];
  uint64_t v31 = v0[24];
  v0[5] = v30;
  v0[6] = v31;
  swift_bridgeObjectRetain_n();
  uint64_t active_platform = dyld_get_active_platform();
  id v33 = objc_allocWithZone((Class)LSApplicationExtensionRecord);
  id v34 = sub_100310C58(v30, v31, 0, active_platform);
  swift_bridgeObjectRelease();
  id v35 = [v34 containingBundleRecord];
  if (v35
    && (uint64_t v36 = v35,
        id v37 = [v35 bundleIdentifier],
        v36,
        v37))
  {
    uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v40 = v39;
  }
  else
  {

    swift_bridgeObjectRetain();
    uint64_t v38 = v0[23];
    uint64_t v40 = v0[24];
  }
  v0[5] = v38;
  v0[6] = v40;
  *Swift::String v79 = _swiftEmptyArrayStorage;
  if (v78 < 1)
  {
    __break(1u);
    return;
  }
  unint64_t v81 = v0[22] & 0xC000000000000001;
  swift_beginAccess();
  uint64_t v41 = 0;
  v2 -= 10;
  do
  {
    if (v81) {
      id v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v42 = *(id *)(v1 + 8 * v41 + 32);
    }
    id v43 = v42;
    uint64_t v44 = v0[5];
    unint64_t v45 = (void *)v0[6];
    swift_bridgeObjectRetain();
    uint64_t v82 = v43;
    sub_10030FA38(v44, v45);
    swift_bridgeObjectRelease();
    id v46 = sub_10031143C();
    swift_bridgeObjectRelease();
    Swift::String v77 = v46;
    id v47 = [v46 answers];
    sub_10000B740(0, &qword_10096EB38);
    unint64_t v48 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v48 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v54 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v54)
      {
LABEL_39:
        swift_bridgeObjectRelease();
        goto LABEL_40;
      }
    }
    else if (!*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_39;
    }
    if ((v48 & 0xC000000000000001) != 0)
    {
      id v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_60;
      }
      id v49 = *(id *)(v48 + 32);
    }
    uint64_t v50 = v49;
    swift_bridgeObjectRelease();
    id v51 = [v50 answerId];

    if (v51)
    {
      uint64_t v80 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v53 = v52;

      goto LABEL_41;
    }
LABEL_40:
    uint64_t v80 = 0;
    uint64_t v53 = 0;
LABEL_41:
    swift_bridgeObjectRetain_n();
    id v55 = v82;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v56 = v55;
    uint64_t v57 = Logger.logObject.getter();
    os_log_type_t type = static os_log_type_t.default.getter();
    BOOL v58 = os_log_type_enabled(v57, type);
    unint64_t v75 = v0[24];
    if (v58)
    {
      uint64_t v71 = v0[23];
      uint64_t v59 = swift_slowAlloc();
      uint64_t v72 = (void *)swift_slowAlloc();
      v84[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v59 = 136315906;
      v0[7] = v80;
      v0[8] = v53;
      swift_bridgeObjectRetain();
      sub_10000A844(&qword_10096B540);
      uint64_t v60 = String.init<A>(describing:)();
      v0[13] = sub_100254634(v60, v61, v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v59 + 12) = 2112;
      v0[14] = v56;
      id v62 = v56;
      NSString v2 = v79;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v72 = v56;

      *(_WORD *)(v59 + 22) = 2080;
      swift_bridgeObjectRetain();
      v0[15] = sub_100254634(v44, (unint64_t)v45, v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v59 + 32) = 2080;
      swift_bridgeObjectRetain();
      v0[16] = sub_100254634(v71, v75, v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v57, type, "Found handle %s for recipient %@ with suggestion bundle ID %s for activity type %s", (uint8_t *)v59, 0x2Au);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      unint64_t v1 = v74;
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    if (qword_100969BB8 != -1) {
      swift_once();
    }
    uint64_t v63 = qword_100994408;
    swift_retain();
    id v64 = sub_100311100(v80, v53, v63, v56);

    swift_bridgeObjectRelease();
    swift_release();
    id v65 = v64;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    ++v41;
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  while (v78 != v41);
  swift_bridgeObjectRelease();
  uint64_t v66 = v0[12];
  uint64_t v67 = v0[5];
  uint64_t v68 = v0[6];
  v0[26] = v66;
  v0[27] = v68;
  Swift::String v83 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10096EB30 + dword_10096EB30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v69 = (void *)swift_task_alloc();
  v0[28] = v69;
  *uint64_t v69 = v0;
  v69[1] = sub_100313420;
  v83(v66, v67, v68);
}

uint64_t sub_100313420(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 232) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_100313770;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v6 + 240) = a2;
    *(void *)(v6 + 248) = a1;
    uint64_t v7 = sub_100313564;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_100313564()
{
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[30];
  uint64_t v2 = v0[31];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[12];
  id v6 = objc_allocWithZone((Class)_PSSuggestion);
  id v7 = sub_100310D3C(v1, v4, 0, 0, 0, 0, v5, v2, v3, 0, 0x6E61747369737361, 0xE900000000000074, 0x6E61747369737361, 0xE900000000000074, 0);
  char v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v14 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412290;
    v0[9] = v7;
    id v11 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v14 = v7;

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Final created suggestion: %@", v10, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v12 = (uint64_t (*)(id))v0[1];
  return v12(v7);
}

uint64_t sub_100313770()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to get derived intent identifier: %@", v3, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v8 = v0[12];
  id v9 = objc_allocWithZone((Class)_PSSuggestion);
  id v10 = sub_100310D3C(v7, v6, 0, 0, 0, 0, v8, 0, 0, 0, 0x6E61747369737361, 0xE900000000000074, 0x6E61747369737361, 0xE900000000000074, 0);
  id v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    unint64_t v13 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v14 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v13 = 138412290;
    v0[9] = v10;
    id v15 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v14 = v10;

    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Final created suggestion: %@", v13, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  unint64_t v16 = (uint64_t (*)(id))v0[1];
  return v16(v10);
}

unint64_t sub_100313ABC()
{
  unint64_t result = qword_10096EB60;
  if (!qword_10096EB60)
  {
    sub_100247840(&qword_10096EB58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096EB60);
  }
  return result;
}

uint64_t sub_100313B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_10096EB78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100313B80(uint64_t a1)
{
  uint64_t v2 = sub_10000A844((uint64_t *)&unk_10096EB80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100313BE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v12 - 8);
  os_log_type_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v15);
  uint64_t v17 = (id *)((char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10031C288(v1, (uint64_t)v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10031C220((uint64_t)v17, (uint64_t)v7, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      uint64_t v18 = *v7;
      swift_bridgeObjectRetain();
      char v19 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
      uint64_t v20 = (uint64_t)v7;
      goto LABEL_5;
    case 2u:
      sub_10031C220((uint64_t)v17, (uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      uint64_t v18 = UUID.uuidString.getter();
      char v19 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint;
      uint64_t v20 = (uint64_t)v4;
      goto LABEL_5;
    case 3u:
      id v21 = *v17;
      id v22 = [*v17 identifier];
      if (!v22)
      {
        __break(1u);
        JUMPOUT(0x100313F5CLL);
      }
      BOOL v23 = v22;
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      return v18;
    default:
      sub_10031C220((uint64_t)v17, (uint64_t)v14, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      sub_10031430C();
      uint64_t v18 = UUID.uuidString.getter();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      char v19 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
      uint64_t v20 = (uint64_t)v14;
LABEL_5:
      sub_10031C1C0(v20, v19);
      return v18;
  }
}

nw_endpoint_t sub_100313F6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (uint64_t *)((char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10031C288(v1, (uint64_t)v13, type metadata accessor for SDAirDropDiscoveredEndpoint);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10031C220((uint64_t)v13, (uint64_t)v7, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      uint64_t v23 = NWEndpoint.nw.getter();
      if (!v23) {
        goto LABEL_9;
      }
      nw_endpoint_t bonjour_service = (nw_endpoint_t)v23;
      uint64_t v16 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
      uint64_t v17 = (uint64_t)v7;
      break;
    case 2u:
      sub_10031C220((uint64_t)v13, (uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      UUID.uuidString.getter();
      uint64_t v18 = String.utf8CString.getter();
      swift_bridgeObjectRelease();
      nw_endpoint_t bonjour_service = nw_endpoint_create_bonjour_service((const char *)(v18 + 32), "_asquic._udp", "local");
      swift_release();
      sub_10000A844(&qword_10096EE80);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_10076E7A0;
      uint64_t v20 = *v4;
      unint64_t v21 = v4[1];
      *(void *)(v19 + 32) = *v4;
      *(void *)(v19 + 40) = v21;
      sub_10025ADCC(v20, v21);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      nw_endpoint_set_public_keys();

      uint64_t v16 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint;
      uint64_t v17 = (uint64_t)v4;
      break;
    case 3u:
      goto LABEL_10;
    default:
      sub_10031C220((uint64_t)v13, (uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      uint64_t v14 = NWEndpoint.nw.getter();
      if (!v14)
      {
        __break(1u);
LABEL_9:
        __break(1u);
LABEL_10:
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        JUMPOUT(0x1003142FCLL);
      }
      nw_endpoint_t bonjour_service = (nw_endpoint_t)v14;
      uint64_t v16 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
      uint64_t v17 = (uint64_t)v10;
      break;
  }
  sub_10031C1C0(v17, v16);
  return bonjour_service;
}

uint64_t sub_10031430C()
{
  if (!NWEndpoint.nw.getter()) {
    __break(1u);
  }
  nw_endpoint_get_service_identifier();
  swift_unknownObjectRelease();
  return UUID.init(uuid:)();
}

uint64_t sub_1003143B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (id *)((char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10031C288(v2, (uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10031C220((uint64_t)v15, (uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      if (v9[*(int *)(v7 + 52)] == 1)
      {
        uint64_t v23 = enum case for SFAirDrop.DeviceRelationship.sameAccount(_:);
        uint64_t v24 = type metadata accessor for SFAirDrop.DeviceRelationship();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(a1, v23, v24);
      }
      else
      {
        uint64_t v28 = *(void *)&v9[*(int *)(v7 + 44) + 8];
        uint64_t v29 = type metadata accessor for SFAirDrop.DeviceRelationship();
        if (v28) {
          uint64_t v30 = (unsigned int *)&enum case for SFAirDrop.DeviceRelationship.contact(_:);
        }
        else {
          uint64_t v30 = (unsigned int *)&enum case for SFAirDrop.DeviceRelationship.stranger(_:);
        }
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v29 - 8) + 104))(a1, *v30, v29);
      }
      uint64_t v31 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
      uint64_t v32 = (uint64_t)v9;
      return sub_10031C1C0(v32, v31);
    case 2u:
      sub_10031C220((uint64_t)v15, (uint64_t)v6, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      if (v6[*(int *)(v4 + 32)] == 1)
      {
        uint64_t v18 = enum case for SFAirDrop.DeviceRelationship.sameAccount(_:);
        uint64_t v19 = type metadata accessor for SFAirDrop.DeviceRelationship();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(a1, v18, v19);
      }
      else
      {
        uint64_t v25 = *(void *)&v6[*(int *)(v4 + 28) + 8];
        uint64_t v26 = type metadata accessor for SFAirDrop.DeviceRelationship();
        if (v25) {
          unint64_t v27 = (unsigned int *)&enum case for SFAirDrop.DeviceRelationship.contact(_:);
        }
        else {
          unint64_t v27 = (unsigned int *)&enum case for SFAirDrop.DeviceRelationship.stranger(_:);
        }
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(a1, *v27, v26);
      }
      uint64_t v31 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint;
      uint64_t v32 = (uint64_t)v6;
      return sub_10031C1C0(v32, v31);
    case 3u:

      uint64_t v20 = enum case for SFAirDrop.DeviceRelationship.classroom(_:);
      uint64_t v21 = type metadata accessor for SFAirDrop.DeviceRelationship();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(a1, v20, v21);
    default:
      sub_10031C220((uint64_t)v15, (uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      if ((sub_100314B68() & 0x80000) != 0)
      {
        uint64_t v17 = (unsigned int *)&enum case for SFAirDrop.DeviceRelationship.sameAccount(_:);
      }
      else
      {
        if (!NWEndpoint.nw.getter())
        {
          __break(1u);
          JUMPOUT(0x100314894);
        }
        uint64_t contact_id = nw_endpoint_get_contact_id();
        swift_unknownObjectRelease();
        if (contact_id)
        {
          String.init(cString:)();
          swift_bridgeObjectRelease();
          uint64_t v17 = (unsigned int *)&enum case for SFAirDrop.DeviceRelationship.contact(_:);
        }
        else
        {
          uint64_t v17 = (unsigned int *)&enum case for SFAirDrop.DeviceRelationship.stranger(_:);
        }
      }
      uint64_t v33 = *v17;
      uint64_t v34 = type metadata accessor for SFAirDrop.DeviceRelationship();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(a1, v33, v34);
      uint64_t v31 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
      uint64_t v32 = (uint64_t)v12;
      return sub_10031C1C0(v32, v31);
  }
}

uint64_t sub_1003148A4()
{
  uint64_t v0 = type metadata accessor for SFString();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = NWEndpoint.nw.getter();
  if (result)
  {
    uint64_t device_name = nw_endpoint_get_device_name();
    swift_unknownObjectRelease();
    if (!device_name) {
      return 0;
    }
    uint64_t v6 = String.init(cString:)();
    uint64_t v8 = v7;
    if ((sub_100314B68() & 0x4000000000) != 0)
    {
      (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for SFString.maybeContact(_:), v0);
      sub_10000A844((uint64_t *)&unk_10096EE60);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_10076E7A0;
      *(void *)(v9 + 56) = &type metadata for String;
      *(void *)(v9 + 64) = sub_1002E695C();
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v8;
      uint64_t v6 = SFString.format(_:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100314A58()
{
  return sub_100314B68();
}

uint64_t sub_100314A78()
{
  if ((sub_100314B68() & 0x4000000000) != 0 || (sub_100314B68() & 0x8000000000) != 0)
  {
    if ((sub_100314B68() & 0x4000000000) != 0 || (sub_100314B68() & 8) != 0) {
      return 1;
    }
    sub_1003148A4();
    if (v0)
    {
      v1._countAndFlagsBits = 4408910;
      v1._object = (void *)0xE300000000000000;
      Swift::Bool v2 = String.hasPrefix(_:)(v1);
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  return 0;
}

uint64_t sub_100314B68()
{
  uint64_t v0 = sub_10000A844(&qword_10096EE58);
  __chkstk_darwin(v0 - 8);
  Swift::Bool v2 = (char *)&v33[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for NWTXTRecord();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v33[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  NWEndpoint.txtRecord.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_10000A7E8((uint64_t)v2, &qword_10096EE58);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  uint64_t result = NWTXTRecord.subscript.getter();
  if (!v8)
  {
LABEL_62:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return 0;
  }
  uint64_t v9 = v8;
  uint64_t v10 = HIBYTE(v8) & 0xF;
  uint64_t v11 = result & 0xFFFFFFFFFFFFLL;
  if ((v9 & 0x2000000000000000) != 0) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v12)
  {
    swift_bridgeObjectRelease();
    goto LABEL_62;
  }
  if ((v9 & 0x1000000000000000) != 0)
  {
    unint64_t v14 = sub_10031B6CC(result, v9, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_10031BA58);
    char v16 = v31;
    goto LABEL_40;
  }
  if ((v9 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v13 = (unsigned __int8 *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v13 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    unint64_t v14 = (unint64_t)sub_10031BA58(v13, v11, 10);
    char v16 = v15 & 1;
LABEL_40:
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      return v14;
    }
    goto LABEL_62;
  }
  v33[0] = result;
  v33[1] = v9 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v10)
    {
      if (v10 != 1 && (BYTE1(result) - 48) <= 9u)
      {
        unint64_t v14 = (BYTE1(result) - 48);
        if (v10 == 2) {
          goto LABEL_39;
        }
        if ((BYTE2(result) - 48) <= 9u)
        {
          unint64_t v14 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
          uint64_t v20 = v10 - 3;
          if (v20)
          {
            uint64_t v21 = (unsigned __int8 *)v33 + 3;
            while (1)
            {
              unsigned int v22 = *v21 - 48;
              if (v22 > 9) {
                goto LABEL_36;
              }
              if (!is_mul_ok(v14, 0xAuLL)) {
                goto LABEL_36;
              }
              BOOL v18 = __CFADD__(10 * v14, v22);
              unint64_t v14 = 10 * v14 + v22;
              if (v18) {
                goto LABEL_36;
              }
              char v16 = 0;
              ++v21;
              if (!--v20) {
                goto LABEL_40;
              }
            }
          }
          goto LABEL_39;
        }
      }
      goto LABEL_36;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v10 && (result - 48) <= 9u)
      {
        unint64_t v14 = (result - 48);
        if (v10 == 1) {
          goto LABEL_39;
        }
        if ((BYTE1(result) - 48) <= 9u)
        {
          unint64_t v14 = 10 * (result - 48) + (BYTE1(result) - 48);
          uint64_t v23 = v10 - 2;
          if (v23)
          {
            uint64_t v24 = (unsigned __int8 *)v33 + 2;
            while (1)
            {
              unsigned int v25 = *v24 - 48;
              if (v25 > 9) {
                goto LABEL_36;
              }
              if (!is_mul_ok(v14, 0xAuLL)) {
                goto LABEL_36;
              }
              BOOL v18 = __CFADD__(10 * v14, v25);
              unint64_t v14 = 10 * v14 + v25;
              if (v18) {
                goto LABEL_36;
              }
              char v16 = 0;
              ++v24;
              if (!--v23) {
                goto LABEL_40;
              }
            }
          }
          goto LABEL_39;
        }
      }
LABEL_36:
      unint64_t v14 = 0;
LABEL_37:
      char v16 = 1;
      goto LABEL_40;
    }
    if (v10)
    {
      if (v10 != 1)
      {
        unsigned __int8 v17 = BYTE1(result) - 48;
        if ((BYTE1(result) - 48) <= 9u)
        {
          unint64_t v14 = 0;
          BOOL v18 = v17 == 0;
          unint64_t v19 = -(uint64_t)v17;
          if (!v18) {
            goto LABEL_37;
          }
          if (v10 == 2)
          {
            char v16 = 0;
            unint64_t v14 = v19;
            goto LABEL_40;
          }
          unsigned __int8 v26 = BYTE2(result) - 48;
          if ((BYTE2(result) - 48) <= 9u && is_mul_ok(v19, 0xAuLL))
          {
            unint64_t v27 = 10 * v19;
            unint64_t v14 = v27 - v26;
            if (v27 >= v26)
            {
              uint64_t v28 = v10 - 3;
              if (v28)
              {
                uint64_t v29 = (unsigned __int8 *)v33 + 3;
                while (1)
                {
                  unsigned int v30 = *v29 - 48;
                  if (v30 > 9) {
                    goto LABEL_36;
                  }
                  if (!is_mul_ok(v14, 0xAuLL)) {
                    goto LABEL_36;
                  }
                  BOOL v18 = 10 * v14 >= v30;
                  unint64_t v14 = 10 * v14 - v30;
                  if (!v18) {
                    goto LABEL_36;
                  }
                  char v16 = 0;
                  ++v29;
                  if (!--v28) {
                    goto LABEL_40;
                  }
                }
              }
LABEL_39:
              char v16 = 0;
              goto LABEL_40;
            }
          }
        }
      }
      goto LABEL_36;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100314FE0()
{
  uint64_t v0 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10031430C();
  sub_10031A534(&qword_10096C4C8, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (!NWEndpoint.nw.getter())
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return;
  }
  uint64_t contact_id = nw_endpoint_get_contact_id();
  swift_unknownObjectRelease();
  if (contact_id)
  {
    String.init(cString:)();
    Hasher._combine(_:)(1u);
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  sub_1003148A4();
  if (v5)
  {
    Hasher._combine(_:)(1u);
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  if (!NWEndpoint.nw.getter()) {
    goto LABEL_14;
  }
  uint64_t device_id = nw_endpoint_get_device_id();
  swift_unknownObjectRelease();
  if (device_id)
  {
    String.init(cString:)();
    Hasher._combine(_:)(1u);
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Swift::UInt64 v7 = sub_100314B68();
  Hasher._combine(_:)(v7);
  Swift::UInt64 v8 = sub_100314B68();
  Hasher._combine(_:)(v8);
}

Swift::Int sub_100315274(uint64_t a1, uint64_t a2)
{
  return sub_100315CCC(a1, a2, (void (*)(unsigned char *))sub_100314FE0);
}

Swift::Int sub_100315290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100315D30(a1, a2, a3, (void (*)(unsigned char *))sub_100314FE0);
}

void sub_1003152B0()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  uint64_t v1 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  uint64_t v2 = v0 + v1[6];
  if (*(unsigned char *)(v2 + 8) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Swift::UInt v3 = *(void *)v2;
    Hasher._combine(_:)(1u);
    Hasher._combine(_:)(v3);
  }
  if (*(void *)(v0 + v1[7] + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  if (*(void *)(v0 + v1[8] + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  if (*(void *)(v0 + v1[9] + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  if (*(void *)(v0 + v1[10] + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  if (*(void *)(v0 + v1[11] + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  if (*(void *)(v0 + v1[12] + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(*(unsigned char *)(v0 + v1[13]));
  uint64_t v4 = (uint64_t *)(v0 + v1[14]);
  unint64_t v5 = v4[1];
  if (v5 >> 60 == 15)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    uint64_t v6 = *v4;
    Hasher._combine(_:)(1u);
    sub_10025ADCC(v6, v5);
    Data.hash(into:)();
    sub_100250CB0(v6, v5);
  }
}

Swift::Int sub_100315578(uint64_t a1, uint64_t a2)
{
  return sub_100315CCC(a1, a2, (void (*)(unsigned char *))sub_1003152B0);
}

Swift::Int sub_100315594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100315D30(a1, a2, a3, (void (*)(unsigned char *))sub_1003152B0);
}

uint64_t sub_1003155AC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

Swift::Int sub_1003155BC()
{
  Hasher.init(_seed:)();
  Data.hash(into:)();
  uint64_t v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  type metadata accessor for UUID();
  sub_10031A534(&qword_10096C4C8, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  if (*(void *)(v0 + *(int *)(v1 + 28) + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(*(unsigned char *)(v0 + *(int *)(v1 + 32)));
  return Hasher._finalize()();
}

void sub_1003156D8()
{
  uint64_t v1 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v1);
  Swift::UInt v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (void **)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10031C288(v0, (uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10031C220((uint64_t)v12, (uint64_t)v6, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      Hasher._combine(_:)(1uLL);
      sub_1003152B0();
      uint64_t v13 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
      uint64_t v14 = (uint64_t)v6;
      goto LABEL_9;
    case 2u:
      sub_10031C220((uint64_t)v12, (uint64_t)v3, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      Hasher._combine(_:)(2uLL);
      Data.hash(into:)();
      type metadata accessor for UUID();
      sub_10031A534(&qword_10096C4C8, (void (*)(uint64_t))&type metadata accessor for UUID);
      dispatch thunk of Hashable.hash(into:)();
      if (*(void *)&v3[*(int *)(v1 + 28) + 8])
      {
        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        Hasher._combine(_:)(0);
      }
      Hasher._combine(_:)(v3[*(int *)(v1 + 32)]);
      uint64_t v13 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint;
      uint64_t v14 = (uint64_t)v3;
      goto LABEL_9;
    case 3u:
      char v15 = *v12;
      Hasher._combine(_:)(3uLL);
      id v16 = v15;
      NSObject.hash(into:)();

      return;
    default:
      sub_10031C220((uint64_t)v12, (uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      Hasher._combine(_:)(0);
      sub_100314FE0();
      uint64_t v13 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
      uint64_t v14 = (uint64_t)v9;
LABEL_9:
      sub_10031C1C0(v14, v13);
      return;
  }
}

void sub_100315A78(uint64_t a1, uint64_t a2)
{
  Data.hash(into:)();
  type metadata accessor for UUID();
  sub_10031A534(&qword_10096C4C8, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  if (*(void *)(v2 + *(int *)(a2 + 28) + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(*(unsigned char *)(v2 + *(int *)(a2 + 32)));
}

Swift::Int sub_100315B70(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  Data.hash(into:)();
  type metadata accessor for UUID();
  sub_10031A534(&qword_10096C4C8, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  if (*(void *)(v2 + *(int *)(a2 + 28) + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(*(unsigned char *)(v2 + *(int *)(a2 + 32)));
  return Hasher._finalize()();
}

uint64_t sub_100315C80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = UUID.uuidString.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

Swift::Int sub_100315CB4(uint64_t a1, uint64_t a2)
{
  return sub_100315CCC(a1, a2, (void (*)(unsigned char *))sub_1003156D8);
}

Swift::Int sub_100315CCC(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *))
{
  Hasher.init(_seed:)();
  a3(v5);
  return Hasher._finalize()();
}

Swift::Int sub_100315D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100315D30(a1, a2, a3, (void (*)(unsigned char *))sub_1003156D8);
}

Swift::Int sub_100315D30(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  Hasher.init(_seed:)();
  a4(v6);
  return Hasher._finalize()();
}

uint64_t sub_100315D74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100313BE0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100315DA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (uint64_t *)((char *)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v15);
  uint64_t v17 = (void **)((char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10031C288(v1, (uint64_t)v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10031C220((uint64_t)v17, (uint64_t)v7, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      uint64_t v86 = 0;
      unint64_t v87 = 0xE000000000000000;
      _StringGuts.grow(_:)(37);
      v60._countAndFlagsBits = 0x2072756F6A6E6F42;
      v60._object = (void *)0xE90000000000003CLL;
      String.append(_:)(v60);
      uint64_t v61 = *v7;
      id v62 = (void *)v7[1];
      swift_bridgeObjectRetain();
      v63._countAndFlagsBits = v61;
      v63._object = v62;
      String.append(_:)(v63);
      swift_bridgeObjectRelease();
      v64._countAndFlagsBits = 544034336;
      v64._object = (void *)0xE400000000000000;
      String.append(_:)(v64);
      *(void *)&long long v85 = sub_100316798();
      *((void *)&v85 + 1) = v65;
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      swift_bridgeObjectRelease();
      v66._countAndFlagsBits = 543444256;
      v66._object = (void *)0xE400000000000000;
      String.append(_:)(v66);
      *(void *)&long long v85 = sub_100316A18();
      *((void *)&v85 + 1) = v67;
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      swift_bridgeObjectRelease();
      v68._countAndFlagsBits = 541346080;
      v68._object = (void *)0xE400000000000000;
      String.append(_:)(v68);
      *(void *)&long long v85 = sub_100316C8C();
      *((void *)&v85 + 1) = v69;
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      swift_bridgeObjectRelease();
      v70._countAndFlagsBits = 0x2044494320;
      v70._object = (void *)0xE500000000000000;
      String.append(_:)(v70);
      *(void *)&long long v85 = sub_100316F00();
      *((void *)&v85 + 1) = v71;
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      swift_bridgeObjectRelease();
      v72._countAndFlagsBits = 62;
      v72._object = (void *)0xE100000000000000;
      String.append(_:)(v72);
      uint64_t v44 = v86;
      unint64_t v45 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
      uint64_t v46 = (uint64_t)v7;
      goto LABEL_18;
    case 2u:
      sub_10031C220((uint64_t)v17, (uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      uint64_t v86 = 0;
      unint64_t v87 = 0xE000000000000000;
      _StringGuts.grow(_:)(27);
      v47._countAndFlagsBits = 0x6C6569467261654ELL;
      v47._object = (void *)0xEB000000003C2064;
      String.append(_:)(v47);
      v48._countAndFlagsBits = UUID.uuidString.getter();
      String.append(_:)(v48);
      swift_bridgeObjectRelease();
      v49._countAndFlagsBits = 0x2044494320;
      v49._object = (void *)0xE500000000000000;
      String.append(_:)(v49);
      long long v85 = *(_OWORD *)((char *)v4 + *(int *)(v2 + 28));
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      v50._countAndFlagsBits = 541806624;
      v50._object = (void *)0xE400000000000000;
      String.append(_:)(v50);
      uint64_t v51 = *v4;
      unint64_t v52 = v4[1];
      sub_10025ADCC(*v4, v52);
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_100250CC4(v51, v52);
      id v54 = [(objc_class *)isa description];
      uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v57 = v56;

      v58._countAndFlagsBits = v55;
      v58._object = v57;
      String.append(_:)(v58);

      swift_bridgeObjectRelease();
      v59._countAndFlagsBits = 62;
      v59._object = (void *)0xE100000000000000;
      String.append(_:)(v59);
      uint64_t v44 = v86;
      unint64_t v45 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint;
      uint64_t v46 = (uint64_t)v4;
      goto LABEL_18;
    case 3u:
      id v73 = *v17;
      uint64_t v86 = 0;
      unint64_t v87 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      v74._object = (void *)0xEB000000003C206DLL;
      v74._countAndFlagsBits = 0x6F6F727373616C43;
      String.append(_:)(v74);
      id v75 = [v73 identifier];
      if (!v75)
      {
        __break(1u);
        JUMPOUT(0x100316784);
      }
      uint64_t v76 = v75;
      uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      Swift::String v79 = v78;

      v80._countAndFlagsBits = v77;
      v80._object = v79;
      String.append(_:)(v80);
      swift_bridgeObjectRelease();
      v81._countAndFlagsBits = 544034336;
      v81._object = (void *)0xE400000000000000;
      String.append(_:)(v81);
      *(void *)&long long v85 = sub_100316798();
      *((void *)&v85 + 1) = v82;
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      swift_bridgeObjectRelease();
      v83._countAndFlagsBits = 62;
      v83._object = (void *)0xE100000000000000;
      String.append(_:)(v83);

      return v86;
    default:
      sub_10031C220((uint64_t)v17, (uint64_t)v14, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      uint64_t v86 = 0;
      unint64_t v87 = 0xE000000000000000;
      _StringGuts.grow(_:)(73);
      v18._object = (void *)0x80000001007B92F0;
      v18._countAndFlagsBits = 0xD000000000000015;
      String.append(_:)(v18);
      sub_10031430C();
      sub_10031A534((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      v19._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v19);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v20._countAndFlagsBits = 544034336;
      v20._object = (void *)0xE400000000000000;
      String.append(_:)(v20);
      *(void *)&long long v85 = sub_100316798();
      *((void *)&v85 + 1) = v21;
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      swift_bridgeObjectRelease();
      v22._countAndFlagsBits = 543444256;
      v22._object = (void *)0xE400000000000000;
      String.append(_:)(v22);
      *(void *)&long long v85 = sub_100316A18();
      *((void *)&v85 + 1) = v23;
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      swift_bridgeObjectRelease();
      v24._countAndFlagsBits = 541346080;
      v24._object = (void *)0xE400000000000000;
      String.append(_:)(v24);
      *(void *)&long long v85 = sub_100316C8C();
      *((void *)&v85 + 1) = v25;
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      swift_bridgeObjectRelease();
      v26._countAndFlagsBits = 0x2044494320;
      v26._object = (void *)0xE500000000000000;
      String.append(_:)(v26);
      *(void *)&long long v85 = sub_100316F00();
      *((void *)&v85 + 1) = v27;
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      swift_bridgeObjectRelease();
      v28._countAndFlagsBits = 542458144;
      v28._object = (void *)0xE400000000000000;
      String.append(_:)(v28);
      uint64_t v29 = sub_100314B68();
      uint64_t v30 = 1702195828;
      unint64_t v31 = 0xE400000000000000;
      if ((v29 & 0x4000000000) == 0)
      {
        uint64_t v32 = sub_100314B68();
        BOOL v33 = (v32 & 0x8000000000) == 0;
        if ((v32 & 0x8000000000) != 0) {
          uint64_t v30 = 1702195828;
        }
        else {
          uint64_t v30 = 0x65736C6166;
        }
        if (v33) {
          unint64_t v31 = 0xE500000000000000;
        }
        else {
          unint64_t v31 = 0xE400000000000000;
        }
      }
      unint64_t v34 = v31;
      String.append(_:)(*(Swift::String *)&v30);
      swift_bridgeObjectRelease();
      v35._countAndFlagsBits = 541999904;
      v35._object = (void *)0xE400000000000000;
      String.append(_:)(v35);
      char v36 = sub_100314A78();
      BOOL v37 = (v36 & 1) == 0;
      if (v36) {
        uint64_t v38 = 1702195828;
      }
      else {
        uint64_t v38 = 0x65736C6166;
      }
      if (v37) {
        unint64_t v39 = 0xE500000000000000;
      }
      else {
        unint64_t v39 = 0xE400000000000000;
      }
      unint64_t v40 = v39;
      String.append(_:)(*(Swift::String *)&v38);
      swift_bridgeObjectRelease();
      v41._countAndFlagsBits = 541476384;
      v41._object = (void *)0xE400000000000000;
      String.append(_:)(v41);
      *(void *)&long long v85 = sub_100314B68();
      type metadata accessor for RPFeatureFlags(0);
      _print_unlocked<A, B>(_:_:)();
      v42._countAndFlagsBits = 541479712;
      v42._object = (void *)0xE400000000000000;
      String.append(_:)(v42);
      *(void *)&long long v85 = sub_100314B68();
      type metadata accessor for RPStatusFlags(0);
      _print_unlocked<A, B>(_:_:)();
      v43._countAndFlagsBits = 62;
      v43._object = (void *)0xE100000000000000;
      String.append(_:)(v43);
      uint64_t v44 = v86;
      unint64_t v45 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
      uint64_t v46 = (uint64_t)v14;
LABEL_18:
      sub_10031C1C0(v46, v45);
      return v44;
  }
}

uint64_t sub_100316798()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (id *)((char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10031C288(v1, (uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10031C220((uint64_t)v10, (uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      uint64_t v11 = *(void *)&v4[*(int *)(v2 + 36)];
      swift_bridgeObjectRetain();
      sub_10031C1C0((uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      break;
    case 2u:
      sub_10031C1C0((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      uint64_t v11 = 0;
      break;
    case 3u:
      id v12 = *v10;
      id v13 = [*v10 displayName];
      if (!v13)
      {
        __break(1u);
        JUMPOUT(0x100316A08);
      }
      uint64_t v14 = v13;
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      break;
    default:
      sub_10031C220((uint64_t)v10, (uint64_t)v7, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      uint64_t v11 = sub_1003148A4();
      sub_10031C1C0((uint64_t)v7, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      break;
  }
  return v11;
}

uint64_t sub_100316A18()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (id *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10031C288(v1, (uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10031C220((uint64_t)v10, (uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      uint64_t device_model = *(void *)&v4[*(int *)(v2 + 32)];
      swift_bridgeObjectRetain();
      id v12 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
      uint64_t v13 = (uint64_t)v4;
      goto LABEL_10;
    case 2u:
      sub_10031C1C0((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      goto LABEL_7;
    case 3u:

LABEL_7:
      uint64_t device_model = 0;
      break;
    default:
      sub_10031C220((uint64_t)v10, (uint64_t)v7, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      if (!NWEndpoint.nw.getter())
      {
        __break(1u);
        JUMPOUT(0x100316C7CLL);
      }
      uint64_t device_model = nw_endpoint_get_device_model();
      swift_unknownObjectRelease();
      if (device_model) {
        uint64_t device_model = String.init(cString:)();
      }
      id v12 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
      uint64_t v13 = (uint64_t)v7;
LABEL_10:
      sub_10031C1C0(v13, v12);
      break;
  }
  return device_model;
}

uint64_t sub_100316C8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (id *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10031C288(v1, (uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10031C220((uint64_t)v10, (uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      uint64_t device_id = *(void *)&v4[*(int *)(v2 + 28)];
      swift_bridgeObjectRetain();
      id v12 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
      uint64_t v13 = (uint64_t)v4;
      goto LABEL_10;
    case 2u:
      sub_10031C1C0((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      goto LABEL_7;
    case 3u:

LABEL_7:
      uint64_t device_id = 0;
      break;
    default:
      sub_10031C220((uint64_t)v10, (uint64_t)v7, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      if (!NWEndpoint.nw.getter())
      {
        __break(1u);
        JUMPOUT(0x100316EF0);
      }
      uint64_t device_id = nw_endpoint_get_device_id();
      swift_unknownObjectRelease();
      if (device_id) {
        uint64_t device_id = String.init(cString:)();
      }
      id v12 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
      uint64_t v13 = (uint64_t)v7;
LABEL_10:
      sub_10031C1C0(v13, v12);
      break;
  }
  return device_id;
}

uint64_t sub_100316F00()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (id *)((char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10031C288(v1, (uint64_t)v13, type metadata accessor for SDAirDropDiscoveredEndpoint);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10031C220((uint64_t)v13, (uint64_t)v7, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      uint64_t contact_id = *(void *)&v7[*(int *)(v5 + 44)];
      swift_bridgeObjectRetain();
      uint64_t v15 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
      uint64_t v16 = (uint64_t)v7;
      goto LABEL_9;
    case 2u:
      sub_10031C220((uint64_t)v13, (uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      uint64_t contact_id = *(void *)&v4[*(int *)(v2 + 28)];
      swift_bridgeObjectRetain();
      uint64_t v15 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint;
      uint64_t v16 = (uint64_t)v4;
      goto LABEL_9;
    case 3u:

      return 0;
    default:
      sub_10031C220((uint64_t)v13, (uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      if (!NWEndpoint.nw.getter())
      {
        __break(1u);
        JUMPOUT(0x1003171ECLL);
      }
      uint64_t contact_id = nw_endpoint_get_contact_id();
      swift_unknownObjectRelease();
      if (contact_id) {
        uint64_t contact_id = String.init(cString:)();
      }
      uint64_t v15 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
      uint64_t v16 = (uint64_t)v10;
LABEL_9:
      sub_10031C1C0(v16, v15);
      return contact_id;
  }
}

unint64_t sub_1003171FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10031C288(v1, (uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    sub_10031C220((uint64_t)v10, (uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    unint64_t v12 = v4[*(int *)(v2 + 36)];
    sub_10031C1C0((uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  }
  else if (EnumCaseMultiPayload)
  {
    sub_10031C1C0((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
    return 0;
  }
  else
  {
    sub_10031C220((uint64_t)v10, (uint64_t)v7, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    unint64_t v12 = ((unint64_t)sub_100314B68() >> 4) & 1;
    sub_10031C1C0((uint64_t)v7, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  }
  return v12;
}

uint64_t sub_100317418()
{
  uint64_t v22 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v22);
  uint64_t v21 = (uint64_t)&v21 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v1 = __chkstk_darwin(v24);
  uint64_t v25 = (id *)((char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - v3;
  uint64_t v5 = type metadata accessor for SFAirDrop.DeviceRelationship();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v21 - v10;
  sub_1003143B4((uint64_t)&v21 - v10);
  uint64_t v23 = *(void (**)(char *, void, uint64_t))(v6 + 104);
  v23(v9, enum case for SFAirDrop.DeviceRelationship.contact(_:), v5);
  sub_10031A534(&qword_10096EE88, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.DeviceRelationship);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  uint64_t v13 = v27;
  uint64_t v12 = v28;
  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  v14(v11, v5);
  sub_10031C288(v26, (uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint);
  if (v12 == v13)
  {
    BOOL v15 = 1;
  }
  else
  {
    sub_1003143B4((uint64_t)v11);
    v23(v9, enum case for SFAirDrop.DeviceRelationship.sameAccount(_:), v5);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    BOOL v15 = v28 == v27;
    v14(v9, v5);
    v14(v11, v5);
  }
  sub_10031C1C0((uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v16 = v25;
  sub_10031C288(v26, (uint64_t)v25, type metadata accessor for SDAirDropDiscoveredEndpoint);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v18 = v21;
      sub_10031C220((uint64_t)v16, v21, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      uint64_t v19 = *(void *)(v18 + *(int *)(v22 + 40) + 8);
      swift_bridgeObjectRetain();
      sub_10031C1C0(v18, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      if (v19)
      {
        swift_bridgeObjectRelease();
      }
      else if (!v15)
      {
        return v15;
      }
      return 1;
    case 2u:
      uint64_t v17 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint;
      goto LABEL_9;
    case 3u:

      return 0;
    default:
      uint64_t v17 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
LABEL_9:
      sub_10031C1C0((uint64_t)v16, v17);
      return v15;
  }
}

uint64_t SDAirDropFlags.hashValue.getter(uint64_t result)
{
  if (result < 0) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100317878()
{
  return sub_10031A534(&qword_10096EB90, type metadata accessor for SDAirDropFlags);
}

uint64_t sub_1003178C0()
{
  uint64_t result = *v0;
  if (*v0 < 0) {
    __break(1u);
  }
  return result;
}

void sub_1003178D0()
{
  SDAirDropFlags.hash(into:)(*v0);
}

void sub_1003178FC()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  SDAirDropFlags.hash(into:)(v1);
}

Swift::Int sub_100317928()
{
  return Hasher._finalize()();
}

uint64_t sub_100317940(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWEndpoint();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_1003179AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NWEndpoint();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_100317A10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWEndpoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_100317A74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWEndpoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_100317AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWEndpoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_100317B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWEndpoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_100317BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100317BB4);
}

uint64_t sub_100317BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWEndpoint();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100317C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100317C34);
}

uint64_t sub_100317C34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWEndpoint();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10096EBF0);
}

uint64_t sub_100317CC4()
{
  uint64_t result = type metadata accessor for NWEndpoint();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_100317D50(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v44 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for NWEndpoint();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    BOOL v15 = (char *)v4 + v13;
    uint64_t v16 = (char *)a2 + v13;
    *(void *)BOOL v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = (void *)((char *)v4 + v14);
    uint64_t v18 = (void *)((char *)a2 + v14);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    uint64_t v22 = (void *)((char *)v4 + v20);
    uint64_t v23 = (void *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = (void *)((char *)v4 + v21);
    uint64_t v26 = (void *)((char *)a2 + v21);
    uint64_t v48 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v48;
    uint64_t v27 = a3[10];
    uint64_t v28 = a3[11];
    uint64_t v29 = (void *)((char *)v4 + v27);
    uint64_t v30 = (void *)((char *)a2 + v27);
    uint64_t v31 = v30[1];
    void *v29 = *v30;
    v29[1] = v31;
    uint64_t v32 = (void *)((char *)v4 + v28);
    BOOL v33 = (void *)((char *)a2 + v28);
    uint64_t v34 = v33[1];
    void *v32 = *v33;
    v32[1] = v34;
    uint64_t v35 = a3[12];
    uint64_t v36 = a3[13];
    BOOL v37 = (void *)((char *)v4 + v35);
    uint64_t v38 = (void *)((char *)a2 + v35);
    uint64_t v39 = v38[1];
    void *v37 = *v38;
    v37[1] = v39;
    *((unsigned char *)v4 + v36) = *((unsigned char *)a2 + v36);
    uint64_t v40 = a3[14];
    Swift::String v41 = (char *)v4 + v40;
    Swift::String v42 = (void *)((char *)a2 + v40);
    unint64_t v43 = *(void *)((char *)a2 + v40 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v43 >> 60 == 15)
    {
      *(_OWORD *)Swift::String v41 = *(_OWORD *)v42;
    }
    else
    {
      uint64_t v45 = *v42;
      sub_10025ADCC(*v42, v43);
      *(void *)Swift::String v41 = v45;
      *((void *)v41 + 1) = v43;
    }
    uint64_t v46 = a3[16];
    *((unsigned char *)v4 + a3[15]) = *((unsigned char *)a2 + a3[15]);
    *((unsigned char *)v4 + v46) = *((unsigned char *)a2 + v46);
  }
  return v4;
}

uint64_t sub_100317F60(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for NWEndpoint();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t *)(a1 + *(int *)(a2 + 56));
  unint64_t v8 = v7[1];
  if (v8 >> 60 != 15)
  {
    uint64_t v9 = *v7;
    return sub_100250CC4(v9, v8);
  }
  return result;
}

void *sub_100318070(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  unint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for NWEndpoint();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  BOOL v15 = (char *)a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = (void *)((char *)a1 + v13);
  uint64_t v17 = (void *)((char *)a2 + v13);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)((char *)a1 + v19);
  uint64_t v22 = (void *)((char *)a2 + v19);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = (void *)((char *)a1 + v20);
  uint64_t v25 = (void *)((char *)a2 + v20);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = a3[10];
  uint64_t v28 = a3[11];
  uint64_t v29 = (void *)((char *)a1 + v27);
  uint64_t v30 = (void *)((char *)a2 + v27);
  uint64_t v31 = v30[1];
  void *v29 = *v30;
  v29[1] = v31;
  uint64_t v32 = (void *)((char *)a1 + v28);
  BOOL v33 = (void *)((char *)a2 + v28);
  uint64_t v34 = v33[1];
  void *v32 = *v33;
  v32[1] = v34;
  uint64_t v35 = a3[12];
  uint64_t v36 = a3[13];
  BOOL v37 = (void *)((char *)a1 + v35);
  uint64_t v38 = (void *)((char *)a2 + v35);
  uint64_t v39 = v38[1];
  void *v37 = *v38;
  v37[1] = v39;
  *((unsigned char *)a1 + v36) = *((unsigned char *)a2 + v36);
  uint64_t v40 = a3[14];
  uint64_t v46 = (char *)a1 + v40;
  Swift::String v41 = (void *)((char *)a2 + v40);
  unint64_t v42 = *(void *)((char *)a2 + v40 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v42 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v41;
  }
  else
  {
    uint64_t v43 = *v41;
    sub_10025ADCC(*v41, v42);
    *(void *)uint64_t v46 = v43;
    *((void *)v46 + 1) = v42;
  }
  uint64_t v44 = a3[16];
  *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  *((unsigned char *)a1 + v44) = *((unsigned char *)a2 + v44);
  return a1;
}

void *sub_100318238(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  unint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for NWEndpoint();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)v12;
  v11[8] = v12[8];
  *(void *)uint64_t v11 = v13;
  uint64_t v14 = a3[7];
  BOOL v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *BOOL v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[10];
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[11];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[12];
  uint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (void *)((char *)a2 + v29);
  void *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  uint64_t v32 = a3[14];
  BOOL v33 = (void *)((char *)a1 + v32);
  uint64_t v34 = (void *)((char *)a2 + v32);
  unint64_t v35 = *(void *)((char *)a2 + v32 + 8);
  if (*(void *)((char *)a1 + v32 + 8) >> 60 != 15)
  {
    if (v35 >> 60 != 15)
    {
      uint64_t v37 = *v34;
      sub_10025ADCC(v37, v35);
      uint64_t v38 = *v33;
      unint64_t v39 = v33[1];
      *BOOL v33 = v37;
      v33[1] = v35;
      sub_100250CC4(v38, v39);
      goto LABEL_8;
    }
    sub_10026F904((uint64_t)v33);
    goto LABEL_6;
  }
  if (v35 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)BOOL v33 = *(_OWORD *)v34;
    goto LABEL_8;
  }
  uint64_t v36 = *v34;
  sub_10025ADCC(v36, v35);
  *BOOL v33 = v36;
  v33[1] = v35;
LABEL_8:
  *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  return a1;
}

_OWORD *sub_1003184A4(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  unint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for NWEndpoint();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  uint64_t v13 = (char *)a2 + v10;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  uint64_t v14 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  uint64_t v15 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v15) = *(_OWORD *)((char *)a2 + v15);
  uint64_t v16 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  *((unsigned char *)a1 + v16) = *((unsigned char *)a2 + v16);
  uint64_t v17 = a3[15];
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
  *((unsigned char *)a1 + v17) = *((unsigned char *)a2 + v17);
  *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  return a1;
}

void *sub_1003185B0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  unint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for NWEndpoint();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = (void *)((char *)a1 + v12);
  uint64_t v16 = (void *)((char *)a2 + v12);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[9];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[10];
  uint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (void *)((char *)a2 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  void *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[11];
  unint64_t v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (void *)((char *)a2 + v34);
  uint64_t v38 = *v36;
  uint64_t v37 = v36[1];
  *unint64_t v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[12];
  uint64_t v40 = (void *)((char *)a1 + v39);
  Swift::String v41 = (void *)((char *)a2 + v39);
  uint64_t v43 = *v41;
  uint64_t v42 = v41[1];
  *uint64_t v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[14];
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  uint64_t v45 = (void *)((char *)a1 + v44);
  uint64_t v46 = (void *)((char *)a2 + v44);
  unint64_t v47 = *(void *)((char *)a1 + v44 + 8);
  if (v47 >> 60 != 15)
  {
    unint64_t v48 = v46[1];
    if (v48 >> 60 != 15)
    {
      uint64_t v49 = *v45;
      *uint64_t v45 = *v46;
      v45[1] = v48;
      sub_100250CC4(v49, v47);
      goto LABEL_6;
    }
    sub_10026F904((uint64_t)v45);
  }
  *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
LABEL_6:
  uint64_t v50 = a3[16];
  *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  *((unsigned char *)a1 + v50) = *((unsigned char *)a2 + v50);
  return a1;
}

uint64_t sub_100318770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100318784);
}

uint64_t sub_100318784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for NWEndpoint();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100318834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100318848);
}

uint64_t sub_100318848(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for NWEndpoint();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10096EC80);
}

uint64_t sub_100318910()
{
  uint64_t result = type metadata accessor for NWEndpoint();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1003189DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        uint64_t v22 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
        uint64_t v23 = v22[5];
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = type metadata accessor for NWEndpoint();
        uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        v27(v24, v25, v26);
        uint64_t v28 = v22[6];
        uint64_t v29 = (char *)a1 + v28;
        uint64_t v30 = (char *)a2 + v28;
        *(void *)uint64_t v29 = *(void *)v30;
        v29[8] = v30[8];
        uint64_t v31 = v22[7];
        uint64_t v32 = (uint64_t *)((char *)a1 + v31);
        uint64_t v33 = (uint64_t *)((char *)a2 + v31);
        uint64_t v34 = v33[1];
        void *v32 = *v33;
        v32[1] = v34;
        uint64_t v35 = v22[8];
        uint64_t v36 = (uint64_t *)((char *)a1 + v35);
        uint64_t v37 = (uint64_t *)((char *)a2 + v35);
        uint64_t v60 = v37[1];
        *uint64_t v36 = *v37;
        v36[1] = v60;
        uint64_t v38 = v22[9];
        uint64_t v39 = (uint64_t *)((char *)a1 + v38);
        uint64_t v40 = (uint64_t *)((char *)a2 + v38);
        uint64_t v41 = v40[1];
        *uint64_t v39 = *v40;
        v39[1] = v41;
        uint64_t v42 = v22[10];
        uint64_t v43 = (uint64_t *)((char *)a1 + v42);
        uint64_t v44 = (uint64_t *)((char *)a2 + v42);
        uint64_t v45 = v44[1];
        *uint64_t v43 = *v44;
        v43[1] = v45;
        uint64_t v46 = v22[11];
        unint64_t v47 = (uint64_t *)((char *)a1 + v46);
        unint64_t v48 = (uint64_t *)((char *)a2 + v46);
        uint64_t v49 = v48[1];
        *unint64_t v47 = *v48;
        v47[1] = v49;
        uint64_t v50 = v22[12];
        uint64_t v51 = (uint64_t *)((char *)a1 + v50);
        unint64_t v52 = (uint64_t *)((char *)a2 + v50);
        uint64_t v53 = v52[1];
        *uint64_t v51 = *v52;
        v51[1] = v53;
        *((unsigned char *)a1 + v22[13]) = *((unsigned char *)a2 + v22[13]);
        uint64_t v54 = v22[14];
        Swift::String v59 = (char *)a1 + v54;
        uint64_t v55 = (_OWORD *)((char *)a2 + v54);
        unint64_t v56 = *(uint64_t *)((char *)a2 + v54 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v56 >> 60 == 15)
        {
          *(_OWORD *)Swift::String v59 = *v55;
        }
        else
        {
          uint64_t v57 = *(void *)v55;
          sub_10025ADCC(v57, v56);
          *(void *)Swift::String v59 = v57;
          *((void *)v59 + 1) = v56;
        }
        *((unsigned char *)a1 + v22[15]) = *((unsigned char *)a2 + v22[15]);
        *((unsigned char *)a1 + v22[16]) = *((unsigned char *)a2 + v22[16]);
        break;
      case 2u:
        uint64_t v8 = *a2;
        unint64_t v9 = a2[1];
        sub_10025ADCC(*a2, v9);
        *a1 = v8;
        a1[1] = v9;
        uint64_t v10 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
        uint64_t v11 = v10[5];
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
        *(uint64_t *)((char *)a1 + v10[6]) = *(uint64_t *)((char *)a2 + v10[6]);
        uint64_t v15 = v10[7];
        uint64_t v16 = (uint64_t *)((char *)a1 + v15);
        uint64_t v17 = (uint64_t *)((char *)a2 + v15);
        uint64_t v18 = v17[1];
        *uint64_t v16 = *v17;
        v16[1] = v18;
        *((unsigned char *)a1 + v10[8]) = *((unsigned char *)a2 + v10[8]);
        *((unsigned char *)a1 + v10[9]) = *((unsigned char *)a2 + v10[9]);
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v19 = (void *)*a2;
        *a1 = *a2;
        id v20 = v19;
        break;
      default:
        uint64_t v6 = type metadata accessor for NWEndpoint();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10096EDE8);
}

void sub_100318DAC(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v2 = type metadata accessor for NWEndpoint();
      uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
      v3(a1, v2);
      break;
    case 1u:
      swift_bridgeObjectRelease();
      uint64_t v7 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
      uint64_t v8 = a1 + *(int *)(v7 + 20);
      uint64_t v9 = type metadata accessor for NWEndpoint();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = (uint64_t *)(a1 + *(int *)(v7 + 56));
      unint64_t v11 = v10[1];
      if (v11 >> 60 != 15)
      {
        uint64_t v12 = *v10;
        sub_100250CC4(v12, v11);
      }
      break;
    case 2u:
      sub_100250CC4(*(void *)a1, *(void *)(a1 + 8));
      uint64_t v4 = a1 + *(int *)(type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0) + 20);
      uint64_t v5 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 3u:
      uint64_t v6 = *(void **)a1;

      break;
    default:
      return;
  }
}

uint64_t *sub_100319008(uint64_t *a1, uint64_t *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      uint64_t v19 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
      uint64_t v20 = v19[5];
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = type metadata accessor for NWEndpoint();
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v24(v21, v22, v23);
      uint64_t v25 = v19[6];
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      *(void *)uint64_t v26 = *(void *)v27;
      v26[8] = v27[8];
      uint64_t v28 = v19[7];
      uint64_t v29 = (uint64_t *)((char *)a1 + v28);
      uint64_t v30 = (uint64_t *)((char *)a2 + v28);
      uint64_t v31 = v30[1];
      void *v29 = *v30;
      v29[1] = v31;
      uint64_t v32 = v19[8];
      uint64_t v33 = (uint64_t *)((char *)a1 + v32);
      uint64_t v34 = (uint64_t *)((char *)a2 + v32);
      uint64_t v57 = v34[1];
      *uint64_t v33 = *v34;
      v33[1] = v57;
      uint64_t v35 = v19[9];
      uint64_t v36 = (uint64_t *)((char *)a1 + v35);
      uint64_t v37 = (uint64_t *)((char *)a2 + v35);
      uint64_t v38 = v37[1];
      *uint64_t v36 = *v37;
      v36[1] = v38;
      uint64_t v39 = v19[10];
      uint64_t v40 = (uint64_t *)((char *)a1 + v39);
      uint64_t v41 = (uint64_t *)((char *)a2 + v39);
      uint64_t v42 = v41[1];
      *uint64_t v40 = *v41;
      v40[1] = v42;
      uint64_t v43 = v19[11];
      uint64_t v44 = (uint64_t *)((char *)a1 + v43);
      uint64_t v45 = (uint64_t *)((char *)a2 + v43);
      uint64_t v46 = v45[1];
      *uint64_t v44 = *v45;
      v44[1] = v46;
      uint64_t v47 = v19[12];
      unint64_t v48 = (uint64_t *)((char *)a1 + v47);
      uint64_t v49 = (uint64_t *)((char *)a2 + v47);
      uint64_t v50 = v49[1];
      *unint64_t v48 = *v49;
      v48[1] = v50;
      *((unsigned char *)a1 + v19[13]) = *((unsigned char *)a2 + v19[13]);
      uint64_t v51 = v19[14];
      unint64_t v56 = (char *)a1 + v51;
      unint64_t v52 = (_OWORD *)((char *)a2 + v51);
      unint64_t v53 = *(uint64_t *)((char *)a2 + v51 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v53 >> 60 == 15)
      {
        *(_OWORD *)unint64_t v56 = *v52;
      }
      else
      {
        uint64_t v54 = *(void *)v52;
        sub_10025ADCC(v54, v53);
        *(void *)unint64_t v56 = v54;
        *((void *)v56 + 1) = v53;
      }
      *((unsigned char *)a1 + v19[15]) = *((unsigned char *)a2 + v19[15]);
      *((unsigned char *)a1 + v19[16]) = *((unsigned char *)a2 + v19[16]);
      break;
    case 2u:
      uint64_t v5 = *a2;
      unint64_t v6 = a2[1];
      sub_10025ADCC(*a2, v6);
      *a1 = v5;
      a1[1] = v6;
      uint64_t v7 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
      uint64_t v8 = v7[5];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      *(uint64_t *)((char *)a1 + v7[6]) = *(uint64_t *)((char *)a2 + v7[6]);
      uint64_t v12 = v7[7];
      uint64_t v13 = (uint64_t *)((char *)a1 + v12);
      uint64_t v14 = (uint64_t *)((char *)a2 + v12);
      uint64_t v15 = v14[1];
      *uint64_t v13 = *v14;
      v13[1] = v15;
      *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
      *((unsigned char *)a1 + v7[9]) = *((unsigned char *)a2 + v7[9]);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 3u:
      uint64_t v16 = (void *)*a2;
      *a1 = *a2;
      id v17 = v16;
      break;
    default:
      uint64_t v4 = type metadata accessor for NWEndpoint();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_100319368(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_10031C1C0((uint64_t)a1, type metadata accessor for SDAirDropDiscoveredEndpoint);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        id v17 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
        uint64_t v18 = v17[5];
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = type metadata accessor for NWEndpoint();
        uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v22(v19, v20, v21);
        uint64_t v23 = v17[6];
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = *(void *)v25;
        v24[8] = v25[8];
        *(void *)uint64_t v24 = v26;
        uint64_t v27 = v17[7];
        uint64_t v28 = (uint64_t *)((char *)a1 + v27);
        uint64_t v29 = (uint64_t *)((char *)a2 + v27);
        *uint64_t v28 = *v29;
        v28[1] = v29[1];
        uint64_t v30 = v17[8];
        uint64_t v31 = (uint64_t *)((char *)a1 + v30);
        uint64_t v32 = (uint64_t *)((char *)a2 + v30);
        *uint64_t v31 = *v32;
        v31[1] = v32[1];
        uint64_t v33 = v17[9];
        uint64_t v34 = (uint64_t *)((char *)a1 + v33);
        uint64_t v35 = (uint64_t *)((char *)a2 + v33);
        *uint64_t v34 = *v35;
        v34[1] = v35[1];
        uint64_t v36 = v17[10];
        uint64_t v37 = (uint64_t *)((char *)a1 + v36);
        uint64_t v38 = (uint64_t *)((char *)a2 + v36);
        void *v37 = *v38;
        v37[1] = v38[1];
        uint64_t v39 = v17[11];
        uint64_t v40 = (uint64_t *)((char *)a1 + v39);
        uint64_t v41 = (uint64_t *)((char *)a2 + v39);
        *uint64_t v40 = *v41;
        v40[1] = v41[1];
        uint64_t v42 = v17[12];
        uint64_t v43 = (uint64_t *)((char *)a1 + v42);
        uint64_t v44 = (uint64_t *)((char *)a2 + v42);
        *uint64_t v43 = *v44;
        v43[1] = v44[1];
        *((unsigned char *)a1 + v17[13]) = *((unsigned char *)a2 + v17[13]);
        uint64_t v45 = v17[14];
        uint64_t v46 = (char *)a1 + v45;
        uint64_t v47 = (_OWORD *)((char *)a2 + v45);
        unint64_t v48 = *(uint64_t *)((char *)a2 + v45 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v48 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v46 = *v47;
        }
        else
        {
          uint64_t v49 = *(void *)v47;
          sub_10025ADCC(v49, v48);
          *(void *)uint64_t v46 = v49;
          *((void *)v46 + 1) = v48;
        }
        *((unsigned char *)a1 + v17[15]) = *((unsigned char *)a2 + v17[15]);
        *((unsigned char *)a1 + v17[16]) = *((unsigned char *)a2 + v17[16]);
        break;
      case 2u:
        uint64_t v5 = *a2;
        unint64_t v6 = a2[1];
        sub_10025ADCC(*a2, v6);
        *a1 = v5;
        a1[1] = v6;
        uint64_t v7 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
        uint64_t v8 = v7[5];
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
        *(uint64_t *)((char *)a1 + v7[6]) = *(uint64_t *)((char *)a2 + v7[6]);
        uint64_t v12 = v7[7];
        uint64_t v13 = (uint64_t *)((char *)a1 + v12);
        uint64_t v14 = (uint64_t *)((char *)a2 + v12);
        *uint64_t v13 = *v14;
        v13[1] = v14[1];
        *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
        *((unsigned char *)a1 + v7[9]) = *((unsigned char *)a2 + v7[9]);
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v15 = (void *)*a2;
        *a1 = *a2;
        id v16 = v15;
        break;
      default:
        uint64_t v4 = type metadata accessor for NWEndpoint();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for SDAirDropDiscoveredEndpoint(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10096ED58);
}

_OWORD *sub_100319744(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v8 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    *(void *)((char *)a1 + v8[6]) = *(void *)((char *)a2 + v8[6]);
    *(_OWORD *)((char *)a1 + v8[7]) = *(_OWORD *)((char *)a2 + v8[7]);
    *((unsigned char *)a1 + v8[8]) = *((unsigned char *)a2 + v8[8]);
    *((unsigned char *)a1 + v8[9]) = *((unsigned char *)a2 + v8[9]);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    uint64_t v13 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
    uint64_t v14 = v13[5];
    uint64_t v15 = (char *)a1 + v14;
    id v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for NWEndpoint();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    uint64_t v18 = v13[6];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    *(void *)uint64_t v19 = *(void *)v20;
    v19[8] = v20[8];
    *(_OWORD *)((char *)a1 + v13[7]) = *(_OWORD *)((char *)a2 + v13[7]);
    *(_OWORD *)((char *)a1 + v13[8]) = *(_OWORD *)((char *)a2 + v13[8]);
    *(_OWORD *)((char *)a1 + v13[9]) = *(_OWORD *)((char *)a2 + v13[9]);
    *(_OWORD *)((char *)a1 + v13[10]) = *(_OWORD *)((char *)a2 + v13[10]);
    *(_OWORD *)((char *)a1 + v13[11]) = *(_OWORD *)((char *)a2 + v13[11]);
    *(_OWORD *)((char *)a1 + v13[12]) = *(_OWORD *)((char *)a2 + v13[12]);
    *((unsigned char *)a1 + v13[13]) = *((unsigned char *)a2 + v13[13]);
    *(_OWORD *)((char *)a1 + v13[14]) = *(_OWORD *)((char *)a2 + v13[14]);
    *((unsigned char *)a1 + v13[15]) = *((unsigned char *)a2 + v13[15]);
    *((unsigned char *)a1 + v13[16]) = *((unsigned char *)a2 + v13[16]);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for NWEndpoint();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1003199B4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10031C1C0((uint64_t)a1, type metadata accessor for SDAirDropDiscoveredEndpoint);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v8 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
      uint64_t v9 = v8[5];
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      *(void *)((char *)a1 + v8[6]) = *(void *)((char *)a2 + v8[6]);
      *(_OWORD *)((char *)a1 + v8[7]) = *(_OWORD *)((char *)a2 + v8[7]);
      *((unsigned char *)a1 + v8[8]) = *((unsigned char *)a2 + v8[8]);
      *((unsigned char *)a1 + v8[9]) = *((unsigned char *)a2 + v8[9]);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v13 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
      uint64_t v14 = v13[5];
      uint64_t v15 = (char *)a1 + v14;
      id v16 = (char *)a2 + v14;
      uint64_t v17 = type metadata accessor for NWEndpoint();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      uint64_t v18 = v13[6];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      *(void *)uint64_t v19 = *(void *)v20;
      v19[8] = v20[8];
      *(_OWORD *)((char *)a1 + v13[7]) = *(_OWORD *)((char *)a2 + v13[7]);
      *(_OWORD *)((char *)a1 + v13[8]) = *(_OWORD *)((char *)a2 + v13[8]);
      *(_OWORD *)((char *)a1 + v13[9]) = *(_OWORD *)((char *)a2 + v13[9]);
      *(_OWORD *)((char *)a1 + v13[10]) = *(_OWORD *)((char *)a2 + v13[10]);
      *(_OWORD *)((char *)a1 + v13[11]) = *(_OWORD *)((char *)a2 + v13[11]);
      *(_OWORD *)((char *)a1 + v13[12]) = *(_OWORD *)((char *)a2 + v13[12]);
      *((unsigned char *)a1 + v13[13]) = *((unsigned char *)a2 + v13[13]);
      *(_OWORD *)((char *)a1 + v13[14]) = *(_OWORD *)((char *)a2 + v13[14]);
      *((unsigned char *)a1 + v13[15]) = *((unsigned char *)a2 + v13[15]);
      *((unsigned char *)a1 + v13[16]) = *((unsigned char *)a2 + v13[16]);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = type metadata accessor for NWEndpoint();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100319C48()
{
  uint64_t result = type metadata accessor for NWEndpoint();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_100319D54(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_10025ADCC(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v14 = (uint64_t *)((char *)a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    void *v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *((unsigned char *)a1 + v17) = *((unsigned char *)a2 + v17);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100319E78(uint64_t a1, uint64_t a2)
{
  sub_100250CC4(*(void *)a1, *(void *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t *sub_100319F18(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_10025ADCC(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[7];
  *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
  uint64_t v13 = (uint64_t *)((char *)a1 + v12);
  uint64_t v14 = (uint64_t *)((char *)a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v16) = *((unsigned char *)a2 + v16);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_100319FEC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_10025ADCC(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_100250CC4(v8, v9);
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = (uint64_t *)((char *)a1 + v14);
  uint64_t v16 = (uint64_t *)((char *)a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

_OWORD *sub_10031A0EC(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  unint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  uint64_t v11 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  return a1;
}

uint64_t *sub_10031A1A0(uint64_t *a1, _OWORD *a2, int *a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_100250CC4(v6, v7);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *(uint64_t *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_unknownObjectRelease();
  uint64_t v12 = a3[7];
  uint64_t v13 = (uint64_t *)((char *)a1 + v12);
  uint64_t v14 = (uint64_t *)((char *)a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v17) = *((unsigned char *)a2 + v17);
  return a1;
}

uint64_t sub_10031A27C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10031A290);
}

uint64_t sub_10031A290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_10031A354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10031A368);
}

uint64_t sub_10031A368(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10031A428()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_10031A4E0()
{
  return &protocol witness table for String;
}

uint64_t sub_10031A4EC()
{
  return sub_10031A534(&qword_10096EE30, (void (*)(uint64_t))type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
}

uint64_t sub_10031A534(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10031A57C()
{
  return sub_10031A534(&qword_10096EE38, (void (*)(uint64_t))type metadata accessor for SDAirDropDiscoveredEndpoint);
}

uint64_t sub_10031A5C4()
{
  return sub_10031A534((unint64_t *)&unk_10096EE40, (void (*)(uint64_t))type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
}

uint64_t sub_10031A60C()
{
  return sub_10031A534(&qword_10096C4C8, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_10031A654()
{
  return sub_10031A534(&qword_10096EE50, (void (*)(uint64_t))type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
}

uint64_t sub_10031A69C(uint64_t a1, uint64_t a2)
{
  uint64_t v60 = a1;
  uint64_t v61 = a2;
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  uint64_t v7 = __chkstk_darwin(v6);
  Swift::String v59 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v58 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (uint64_t *)((char *)&v58 - v12);
  uint64_t v14 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v58 - v18;
  uint64_t v20 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v20);
  uint64_t v22 = (id *)((char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10031C288(v2, (uint64_t)v22, type metadata accessor for SDAirDropDiscoveredEndpoint);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10031C220((uint64_t)v22, (uint64_t)v13, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      uint64_t v30 = v60;
      uint64_t v29 = v61;
      if (*v13 == v60 && v13[1] == v61)
      {
        sub_10031C288((uint64_t)v13, (uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
        uint64_t v33 = (uint64_t)v59;
      }
      else
      {
        char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_10031C288((uint64_t)v13, (uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
        uint64_t v33 = (uint64_t)v59;
        if ((v32 & 1) == 0)
        {
          uint64_t v34 = &v11[*(int *)(v6 + 28)];
          uint64_t v35 = *((void *)v34 + 1);
          if (!v35)
          {
            sub_10031C1C0((uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
            sub_10031C288((uint64_t)v13, v33, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_55:
            uint64_t v55 = (void *)(v33 + *(int *)(v6 + 44));
            uint64_t v56 = v55[1];
            if (v56)
            {
              if (*v55 == v30 && v56 == v29) {
                char v40 = 1;
              }
              else {
                char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
              }
              swift_bridgeObjectRetain();
              sub_10031C1C0(v33, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
              sub_10031C1C0((uint64_t)v13, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_33:
              swift_bridgeObjectRelease();
              return v40 & 1;
            }
            swift_bridgeObjectRetain();
            unint64_t v53 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
            sub_10031C1C0(v33, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
            uint64_t v54 = (uint64_t)v13;
LABEL_62:
            sub_10031C1C0(v54, v53);
            swift_bridgeObjectRelease();
            char v40 = 0;
            return v40 & 1;
          }
          if (*(void *)v34 != v30 || v35 != v29)
          {
            char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
            sub_10031C1C0((uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
            sub_10031C288((uint64_t)v13, v33, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
            if ((v37 & 1) == 0) {
              goto LABEL_55;
            }
LABEL_36:
            unint64_t v48 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
            sub_10031C1C0(v33, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
            uint64_t v49 = (uint64_t)v13;
            goto LABEL_48;
          }
        }
      }
      sub_10031C1C0((uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      sub_10031C288((uint64_t)v13, v33, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      goto LABEL_36;
    case 2u:
      sub_10031C220((uint64_t)v22, (uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      if (UUID.uuidString.getter() == v60 && v38 == v61) {
        char v40 = 1;
      }
      else {
        char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      sub_10031C1C0((uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      return v40 & 1;
    case 3u:
      id v41 = *v22;
      id v42 = [*v22 identifier];
      if (!v42) {
        goto LABEL_66;
      }
      uint64_t v43 = v42;
      uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v46 = v45;

      if (v44 != v60 || v46 != v61)
      {
        char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();

        goto LABEL_33;
      }

      swift_bridgeObjectRelease();
      goto LABEL_49;
    default:
      sub_10031C220((uint64_t)v22, (uint64_t)v19, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      if (!NWEndpoint.nw.getter())
      {
        __break(1u);
LABEL_66:
        __break(1u);
        goto LABEL_67;
      }
      uint64_t device_id = nw_endpoint_get_device_id();
      swift_unknownObjectRelease();
      uint64_t v25 = v60;
      uint64_t v24 = v61;
      if (!device_id)
      {
        sub_10031C288((uint64_t)v19, (uint64_t)v17, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
LABEL_41:
        if (NWEndpoint.nw.getter())
        {
          uint64_t contact_id = nw_endpoint_get_contact_id();
          swift_unknownObjectRelease();
          if (contact_id)
          {
            if (String.init(cString:)() == v25 && v51 == v24) {
              char v40 = 1;
            }
            else {
              char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
            }
            sub_10031C1C0((uint64_t)v17, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            sub_10031C1C0((uint64_t)v19, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            swift_bridgeObjectRelease();
            return v40 & 1;
          }
          swift_bridgeObjectRetain();
          unint64_t v53 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
          sub_10031C1C0((uint64_t)v17, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          uint64_t v54 = (uint64_t)v19;
          goto LABEL_62;
        }
LABEL_67:
        __break(1u);
        JUMPOUT(0x10031AE18);
      }
      if (String.init(cString:)() != v25 || v26 != v24)
      {
        char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        sub_10031C288((uint64_t)v19, (uint64_t)v17, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        if (v28) {
          goto LABEL_47;
        }
        goto LABEL_41;
      }
      swift_bridgeObjectRelease();
      sub_10031C288((uint64_t)v19, (uint64_t)v17, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
LABEL_47:
      unint64_t v48 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
      sub_10031C1C0((uint64_t)v17, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      uint64_t v49 = (uint64_t)v19;
LABEL_48:
      sub_10031C1C0(v49, v48);
LABEL_49:
      char v40 = 1;
      return v40 & 1;
  }
}

unint64_t sub_10031AE28(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (id *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10031C288(v2, (uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10031C1C0((uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      goto LABEL_7;
    case 2u:
      sub_10031C220((uint64_t)v9, (uint64_t)v6, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      unint64_t v13 = UUID.uuidString.getter();
      sub_10031C1C0((uint64_t)v6, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      break;
    case 3u:
      id v14 = *v9;
      id v15 = [*v9 identifier];
      if (!v15)
      {
        __break(1u);
        JUMPOUT(0x10031B08CLL);
      }
      uint64_t v16 = v15;
      unint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      break;
    default:
      sub_10031C1C0((uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      id v10 = [a2 idSelfIdentity];
      if (v10
        && (v11 = v10, id v12 = [v10 idsDeviceID],
                       v11,
                       v12))
      {
        unint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else
      {
LABEL_7:
        unint64_t v13 = sub_10045F7D8();
      }
      break;
  }
  return v13;
}

uint64_t sub_10031B09C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v8);
  id v10 = (id *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10031C288(v1, (uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10031C220((uint64_t)v10, (uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      unint64_t v13 = &v4[*(int *)(v2 + 24)];
      if (v13[8])
      {
        sub_10031C1C0((uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      }
      else
      {
        uint64_t v14 = *(void *)v13;
        sub_10031C1C0((uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
        if ((v14 & 0x1000) != 0) {
          goto LABEL_7;
        }
      }
      uint64_t result = 2;
      break;
    case 2u:
      sub_10031C1C0((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      uint64_t result = 3;
      break;
    case 3u:

LABEL_7:
      uint64_t result = 0;
      break;
    default:
      sub_10031C220((uint64_t)v10, (uint64_t)v7, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      char v11 = sub_100314B68();
      sub_10031C1C0((uint64_t)v7, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      if ((v11 & 8) != 0) {
        uint64_t result = 3;
      }
      else {
        uint64_t result = 1;
      }
      break;
  }
  return result;
}

uint64_t sub_10031B32C@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_10025ADCC(a2, a3);
      id v10 = (char *)__DataStorage._bytes.getter();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = __DataStorage._offset.getter();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = __DataStorage._length.getter();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x10031B590);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_100250CC4(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)__DataStorage._bytes.getter();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = __DataStorage._offset.getter();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = __DataStorage._length.getter();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

void *sub_10031B5A0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_10000A844(&qword_10096B300);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_10031B608(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = String.UTF16View.index(_:offsetBy:)();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = String.UTF8View._foreignIndex(_:offsetBy:)();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_10031B684(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_10031B7DC(a1, a2, a3);
}

unsigned __int8 *sub_10031B69C(unsigned __int8 *a1, uint64_t a2, int64_t a3)
{
  return sub_10031BA58(a1, a2, a3);
}

uint64_t sub_10031B6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10031B6CC(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_10031B7DC);
}

uint64_t sub_10031B6CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = String.init<A>(_:)();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_10031BCD4();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (void *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  uint64_t v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_10031B7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10031B6CC(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_10031BA58);
}

unsigned __int8 *sub_10031B7DC(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_10031BA58(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v13 = v9 * a3;
              unsigned __int8 v14 = v11 + v12;
              BOOL v15 = v13 >= v14;
              unint64_t v9 = v13 - v14;
              if (!v15) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v25 = a3 + 48;
      unsigned __int8 v26 = a3 + 55;
      unsigned __int8 v27 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v25 = 58;
      }
      else
      {
        unsigned __int8 v27 = 97;
        unsigned __int8 v26 = 65;
      }
      if (result)
      {
        unint64_t v28 = 0;
        do
        {
          unsigned int v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27) {
                return 0;
              }
              char v30 = -87;
            }
            else
            {
              char v30 = -55;
            }
          }
          else
          {
            char v30 = -48;
          }
          if (!is_mul_ok(v28, a3)) {
            return 0;
          }
          unint64_t v31 = v28 * a3;
          unsigned __int8 v32 = v29 + v30;
          BOOL v15 = __CFADD__(v31, v32);
          unint64_t v28 = v31 + v32;
          if (v15) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v16 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v17 = a3 + 48;
  unsigned __int8 v18 = a3 + 55;
  unsigned __int8 v19 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v17 = 58;
  }
  else
  {
    unsigned __int8 v19 = 97;
    unsigned __int8 v18 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  char v20 = result + 1;
  do
  {
    unsigned int v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19) {
          return 0;
        }
        char v22 = -87;
      }
      else
      {
        char v22 = -55;
      }
    }
    else
    {
      char v22 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v23 = v9 * a3;
    unsigned __int8 v24 = v21 + v22;
    BOOL v15 = __CFADD__(v23, v24);
    unint64_t v9 = v23 + v24;
    if (v15) {
      return 0;
    }
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

uint64_t sub_10031BCD4()
{
  unint64_t v0 = String.subscript.getter();
  uint64_t v4 = sub_10031BD54(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10031BD54(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_10031BEAC(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_10031B5A0(v9, 0),
          unint64_t v12 = sub_10031BFAC((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = static String._uncheckedFromUTF8(_:)();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return static String._uncheckedFromUTF8(_:)();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  _StringObject.sharedUTF8.getter();
LABEL_4:

  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_10031BEAC(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_10031B608(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_10031B608(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_10031BFAC(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_10031B608(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = _StringObject.sharedUTF8.getter();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_10031B608(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = String.UTF8View._foreignIndex(after:)();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_10031C1C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10031C220(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10031C288(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10031C2F0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_10031B32C((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_10031C3C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = __DataStorage._bytes.getter();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  __DataStorage._length.getter();
  sub_10031B32C(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_10031C480(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x10031C6E8);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_10025ADCC(a3, a4);
                  sub_10025ADCC(a1, a2);
                  char v17 = sub_10031C3C8((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_100250CC4(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_10025ADCC(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_10031C3C8(v21, v22, v20, a3, a4);
                  sub_100250CC4(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_10025ADCC(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_10025ADCC(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_10031C2F0(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_100250CC4(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_10031C718(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  Swift::String v93 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v92 = (char *)&v92 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v96 = (char *)&v92 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  CFStringRef v98 = (char *)&v92 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  Swift::String v95 = (char *)&v92 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v99 = (uint64_t)&v92 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v101 = (uint64_t)&v92 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v100 = (uint64_t)&v92 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v97 = (uint64_t)&v92 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  Swift::String v94 = (char *)&v92 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  unint64_t v27 = (char *)&v92 - v26;
  __chkstk_darwin(v25);
  unsigned int v29 = (char *)&v92 - v28;
  uint64_t v30 = type metadata accessor for UUID();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v92 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v92 - v35;
  sub_10031430C();
  sub_10031430C();
  char v37 = static UUID.== infix(_:_:)();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v31 + 8);
  v38(v34, v30);
  uint64_t v39 = v36;
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  v38(v39, v30);
  sub_10031C288(a1, (uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  sub_10031C288(a2, (uint64_t)v27, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  if ((v37 & 1) == 0)
  {
    sub_10031C1C0((uint64_t)v27, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_10031C1C0((uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    uint64_t v49 = (uint64_t)v98;
    uint64_t v48 = v99;
    uint64_t v51 = (uint64_t)v95;
    uint64_t v50 = (uint64_t)v96;
    uint64_t v44 = (uint64_t)v94;
LABEL_20:
    sub_10031C288(v40, v44, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    uint64_t v56 = v97;
    sub_10031C288(v41, v97, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    uint64_t v57 = v100;
    goto LABEL_21;
  }
  uint64_t result = NWEndpoint.nw.getter();
  if (!result)
  {
    __break(1u);
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  uint64_t contact_id = nw_endpoint_get_contact_id();
  swift_unknownObjectRelease();
  uint64_t v44 = (uint64_t)v94;
  if (contact_id)
  {
    uint64_t v45 = String.init(cString:)();
    uint64_t v47 = v46;
  }
  else
  {
    uint64_t v45 = 0;
    uint64_t v47 = 0;
  }
  uint64_t result = NWEndpoint.nw.getter();
  if (!result) {
    goto LABEL_86;
  }
  uint64_t v52 = nw_endpoint_get_contact_id();
  swift_unknownObjectRelease();
  if (!v52)
  {
    if (v47) {
      goto LABEL_15;
    }
    uint64_t v55 = 0;
LABEL_17:
    uint64_t v41 = a2;
    uint64_t v40 = a1;
    sub_10031C1C0((uint64_t)v27, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_10031C1C0((uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    uint64_t v49 = (uint64_t)v98;
    uint64_t v48 = v99;
    if (!v55) {
      goto LABEL_30;
    }
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v53 = String.init(cString:)();
  uint64_t v55 = v54;
  if (!v47) {
    goto LABEL_17;
  }
  if (!v54)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    sub_10031C1C0((uint64_t)v27, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_10031C1C0((uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    swift_bridgeObjectRelease_n();
    uint64_t v41 = a2;
    uint64_t v40 = a1;
    uint64_t v49 = (uint64_t)v98;
    uint64_t v48 = v99;
LABEL_19:
    uint64_t v50 = (uint64_t)v96;
    uint64_t v51 = (uint64_t)v95;
    goto LABEL_20;
  }
  if (v45 == v53 && v47 == v54)
  {
    swift_bridgeObjectRelease();
    sub_10031C1C0((uint64_t)v27, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_10031C1C0((uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    swift_bridgeObjectRelease();
    uint64_t v41 = a2;
    uint64_t v40 = a1;
    uint64_t v49 = (uint64_t)v98;
    uint64_t v48 = v99;
LABEL_30:
    sub_10031C288(v40, v44, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    uint64_t v56 = v97;
    sub_10031C288(v41, v97, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    goto LABEL_31;
  }
  char v68 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  sub_10031C1C0((uint64_t)v27, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  sub_10031C1C0((uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  swift_bridgeObjectRelease();
  uint64_t v40 = a1;
  sub_10031C288(a1, v44, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  uint64_t v41 = a2;
  uint64_t v56 = v97;
  sub_10031C288(a2, v97, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  uint64_t v49 = (uint64_t)v98;
  uint64_t v48 = v99;
  uint64_t v51 = (uint64_t)v95;
  uint64_t v50 = (uint64_t)v96;
  uint64_t v57 = v100;
  if ((v68 & 1) == 0)
  {
LABEL_21:
    sub_10031C1C0(v56, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_10031C1C0(v44, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
LABEL_22:
    sub_10031C288(v40, v57, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    uint64_t v58 = v101;
    sub_10031C288(v41, v101, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    goto LABEL_23;
  }
LABEL_31:
  uint64_t v62 = sub_1003148A4();
  uint64_t v64 = v63;
  uint64_t v65 = sub_1003148A4();
  uint64_t v67 = v66;
  if (!v64)
  {
    sub_10031C1C0(v56, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_10031C1C0(v44, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    if (!v67) {
      goto LABEL_40;
    }
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  if (!v66)
  {
    swift_bridgeObjectRetain();
    sub_10031C1C0(v56, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_10031C1C0(v44, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    swift_bridgeObjectRelease_n();
LABEL_42:
    uint64_t v51 = (uint64_t)v95;
    uint64_t v50 = (uint64_t)v96;
    uint64_t v57 = v100;
    goto LABEL_22;
  }
  if (v62 == v65 && v64 == v66)
  {
    swift_bridgeObjectRelease();
    sub_10031C1C0(v97, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_10031C1C0(v44, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    swift_bridgeObjectRelease();
LABEL_40:
    sub_10031C288(v40, v100, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_10031C288(v41, v101, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    uint64_t v51 = (uint64_t)v95;
    uint64_t v50 = (uint64_t)v96;
    goto LABEL_44;
  }
  char v69 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  sub_10031C1C0(v97, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  sub_10031C1C0(v44, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  swift_bridgeObjectRelease();
  uint64_t v70 = v100;
  sub_10031C288(v40, v100, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  uint64_t v58 = v101;
  uint64_t v57 = v70;
  sub_10031C288(v41, v101, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  uint64_t v51 = (uint64_t)v95;
  uint64_t v50 = (uint64_t)v96;
  if ((v69 & 1) == 0)
  {
LABEL_23:
    sub_10031C1C0(v58, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_10031C1C0(v57, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
LABEL_24:
    sub_10031C288(v40, v48, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_10031C288(v41, v51, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    goto LABEL_25;
  }
LABEL_44:
  uint64_t result = NWEndpoint.nw.getter();
  if (!result)
  {
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  uint64_t device_id = nw_endpoint_get_device_id();
  swift_unknownObjectRelease();
  if (device_id)
  {
    uint64_t v72 = String.init(cString:)();
    uint64_t v74 = v73;
  }
  else
  {
    uint64_t v72 = 0;
    uint64_t v74 = 0;
  }
  uint64_t result = NWEndpoint.nw.getter();
  if (!result) {
    goto LABEL_88;
  }
  uint64_t v75 = nw_endpoint_get_device_id();
  swift_unknownObjectRelease();
  if (!v75)
  {
    if (v74) {
      goto LABEL_56;
    }
    uint64_t v78 = 0;
LABEL_58:
    uint64_t v49 = (uint64_t)v98;
    sub_10031C1C0(v101, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_10031C1C0(v100, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    uint64_t v48 = v99;
    if (!v78) {
      goto LABEL_60;
    }
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  uint64_t v76 = String.init(cString:)();
  uint64_t v78 = v77;
  if (!v74) {
    goto LABEL_58;
  }
  if (!v77)
  {
LABEL_56:
    swift_bridgeObjectRetain();
    sub_10031C1C0(v101, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_10031C1C0(v100, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    swift_bridgeObjectRelease_n();
    uint64_t v49 = (uint64_t)v98;
    uint64_t v48 = v99;
    goto LABEL_24;
  }
  if (v72 == v76 && v74 == v77)
  {
    swift_bridgeObjectRelease();
    sub_10031C1C0(v101, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_10031C1C0(v100, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    swift_bridgeObjectRelease();
    uint64_t v48 = v99;
LABEL_60:
    sub_10031C288(v40, v48, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_10031C288(v41, v51, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    goto LABEL_61;
  }
  char v83 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  sub_10031C1C0(v101, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  sub_10031C1C0(v100, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  swift_bridgeObjectRelease();
  uint64_t v48 = v99;
  sub_10031C288(v40, v99, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  sub_10031C288(v41, v51, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  uint64_t v49 = (uint64_t)v98;
  if ((v83 & 1) == 0)
  {
LABEL_25:
    sub_10031C1C0(v51, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_10031C1C0(v48, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
LABEL_26:
    uint64_t v60 = (uint64_t)v92;
    uint64_t v59 = (uint64_t)v93;
    sub_10031C288(v40, v49, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_10031C288(v41, v50, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    goto LABEL_27;
  }
LABEL_61:
  uint64_t result = NWEndpoint.nw.getter();
  if (!result)
  {
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  uint64_t device_model = nw_endpoint_get_device_model();
  swift_unknownObjectRelease();
  if (device_model)
  {
    uint64_t v80 = String.init(cString:)();
    uint64_t v82 = v81;
  }
  else
  {
    uint64_t v80 = 0;
    uint64_t v82 = 0;
  }
  uint64_t result = NWEndpoint.nw.getter();
  if (result)
  {
    uint64_t v84 = nw_endpoint_get_device_model();
    swift_unknownObjectRelease();
    if (v84)
    {
      uint64_t v85 = String.init(cString:)();
      uint64_t v87 = v86;
      if (v82)
      {
        uint64_t v49 = (uint64_t)v98;
        if (v86)
        {
          if (v80 == v85 && v82 == v86)
          {
            swift_bridgeObjectRelease();
            sub_10031C1C0(v51, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            sub_10031C1C0(v99, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            swift_bridgeObjectRelease();
LABEL_80:
            sub_10031C288(v40, v49, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            sub_10031C288(v41, v50, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            uint64_t v60 = (uint64_t)v92;
            uint64_t v59 = (uint64_t)v93;
            goto LABEL_81;
          }
          char v91 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          sub_10031C1C0(v51, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          sub_10031C1C0(v99, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          swift_bridgeObjectRelease();
          sub_10031C288(v40, v49, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          sub_10031C288(v41, v50, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          uint64_t v60 = (uint64_t)v92;
          uint64_t v59 = (uint64_t)v93;
          if (v91)
          {
LABEL_81:
            uint64_t v88 = sub_100314B68();
            uint64_t v89 = sub_100314B68();
            sub_10031C1C0(v50, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            sub_10031C1C0(v49, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            sub_10031C288(v40, v60, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            sub_10031C288(v41, v59, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            if (v88 == v89)
            {
              uint64_t v90 = sub_100314B68();
              BOOL v61 = v90 == sub_100314B68();
              goto LABEL_29;
            }
LABEL_28:
            BOOL v61 = 0;
LABEL_29:
            sub_10031C1C0(v59, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            sub_10031C1C0(v60, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            return v61;
          }
LABEL_27:
          sub_10031C1C0(v50, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          sub_10031C1C0(v49, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          sub_10031C288(v40, v60, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          sub_10031C288(v41, v59, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          goto LABEL_28;
        }
        goto LABEL_75;
      }
      uint64_t v49 = (uint64_t)v98;
    }
    else
    {
      uint64_t v49 = (uint64_t)v98;
      if (v82)
      {
LABEL_75:
        swift_bridgeObjectRetain();
        sub_10031C1C0(v51, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        sub_10031C1C0(v99, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        swift_bridgeObjectRelease_n();
        goto LABEL_26;
      }
      uint64_t v87 = 0;
    }
    sub_10031C1C0(v51, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_10031C1C0(v99, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    if (!v87) {
      goto LABEL_80;
    }
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
LABEL_90:
  __break(1u);
  return result;
}

uint64_t sub_10031D658(void *a1, void *a2)
{
  v111 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  uint64_t v4 = __chkstk_darwin(v111);
  uint64_t v102 = &v99[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __chkstk_darwin(v4);
  v105 = &v99[-v7];
  uint64_t v8 = __chkstk_darwin(v6);
  v104 = &v99[-v9];
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v103 = &v99[-v11];
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v110 = &v99[-v13];
  uint64_t v14 = __chkstk_darwin(v12);
  v106 = &v99[-v15];
  uint64_t v16 = __chkstk_darwin(v14);
  Swift::String v107 = &v99[-v17];
  uint64_t v18 = __chkstk_darwin(v16);
  Swift::String v108 = &v99[-v19];
  uint64_t v20 = __chkstk_darwin(v18);
  v109 = &v99[-v21];
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v101 = &v99[-v23];
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = &v99[-v25];
  uint64_t v27 = __chkstk_darwin(v24);
  unsigned int v29 = &v99[-v28];
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v32 = &v99[-v31];
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v35 = &v99[-v34];
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v38 = &v99[-v37];
  uint64_t v39 = __chkstk_darwin(v36);
  uint64_t v41 = &v99[-v40];
  __chkstk_darwin(v39);
  uint64_t v43 = &v99[-v42];
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_10031C288((uint64_t)a1, (uint64_t)&v99[-v42], type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  }
  else
  {
    char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_10031C288((uint64_t)a1, (uint64_t)v43, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if ((v44 & 1) == 0)
    {
      sub_10031C1C0((uint64_t)v43, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      sub_10031C288((uint64_t)a1, (uint64_t)v41, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      sub_10031C288((uint64_t)a2, (uint64_t)v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      sub_10031C1C0((uint64_t)v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      sub_10031C1C0((uint64_t)v41, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_15:
      uint64_t v50 = (uint64_t)v106;
      sub_10031C288((uint64_t)a1, (uint64_t)v35, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      sub_10031C288((uint64_t)a2, (uint64_t)v32, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      uint64_t v51 = (uint64_t)v110;
      goto LABEL_16;
    }
  }
  sub_10031C1C0((uint64_t)v43, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_10031C288((uint64_t)a1, (uint64_t)v41, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_10031C288((uint64_t)a2, (uint64_t)v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  uint64_t v45 = v111[7];
  uint64_t v46 = &v41[v45];
  uint64_t v47 = *(void *)&v41[v45 + 8];
  uint64_t v48 = &v38[v45];
  uint64_t v49 = v48[1];
  if (!v47)
  {
    swift_bridgeObjectRetain();
    sub_10031C1C0((uint64_t)v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0((uint64_t)v41, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if (!v49) {
      goto LABEL_11;
    }
    goto LABEL_14;
  }
  if (!v49)
  {
    swift_bridgeObjectRetain();
    sub_10031C1C0((uint64_t)v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0((uint64_t)v41, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (*v46 == *v48 && v47 == v49)
  {
    swift_bridgeObjectRetain();
    sub_10031C1C0((uint64_t)v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0((uint64_t)v41, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    swift_bridgeObjectRelease();
LABEL_11:
    sub_10031C288((uint64_t)a1, (uint64_t)v35, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C288((uint64_t)a2, (uint64_t)v32, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    uint64_t v50 = (uint64_t)v106;
    uint64_t v51 = (uint64_t)v110;
    goto LABEL_31;
  }
  int v100 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRetain();
  sub_10031C1C0((uint64_t)v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_10031C1C0((uint64_t)v41, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  swift_bridgeObjectRelease();
  sub_10031C288((uint64_t)a1, (uint64_t)v35, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_10031C288((uint64_t)a2, (uint64_t)v32, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  uint64_t v50 = (uint64_t)v106;
  uint64_t v51 = (uint64_t)v110;
  if ((v100 & 1) == 0)
  {
LABEL_16:
    sub_10031C1C0((uint64_t)v32, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0((uint64_t)v35, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_17:
    uint64_t v52 = (uint64_t)v101;
    uint64_t v53 = (uint64_t)v102;
    sub_10031C288((uint64_t)a1, (uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C288((uint64_t)a2, (uint64_t)v26, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_18;
  }
LABEL_31:
  uint64_t v62 = v111[8];
  uint64_t v63 = &v35[v62];
  uint64_t v64 = *(void *)&v35[v62 + 8];
  uint64_t v65 = &v32[v62];
  uint64_t v66 = v65[1];
  if (!v64)
  {
    swift_bridgeObjectRetain();
    sub_10031C1C0((uint64_t)v32, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0((uint64_t)v35, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if (!v66) {
      goto LABEL_37;
    }
    goto LABEL_39;
  }
  if (!v66)
  {
    swift_bridgeObjectRetain();
    sub_10031C1C0((uint64_t)v32, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0((uint64_t)v35, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_39:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (*v63 == *v65 && v64 == v66)
  {
    swift_bridgeObjectRetain();
    sub_10031C1C0((uint64_t)v32, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0((uint64_t)v35, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    swift_bridgeObjectRelease();
LABEL_37:
    sub_10031C288((uint64_t)a1, (uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C288((uint64_t)a2, (uint64_t)v26, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    uint64_t v52 = (uint64_t)v101;
    uint64_t v53 = (uint64_t)v102;
    goto LABEL_41;
  }
  char v67 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRetain();
  sub_10031C1C0((uint64_t)v32, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  uint64_t v51 = (uint64_t)v110;
  sub_10031C1C0((uint64_t)v35, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  swift_bridgeObjectRelease();
  sub_10031C288((uint64_t)a1, (uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_10031C288((uint64_t)a2, (uint64_t)v26, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  uint64_t v52 = (uint64_t)v101;
  uint64_t v53 = (uint64_t)v102;
  if ((v67 & 1) == 0)
  {
LABEL_18:
    sub_10031C1C0((uint64_t)v26, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0((uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_19:
    uint64_t v55 = (uint64_t)v103;
    uint64_t v54 = (uint64_t)v104;
    sub_10031C288((uint64_t)a1, v52, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    uint64_t v56 = v109;
    sub_10031C288((uint64_t)a2, (uint64_t)v109, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_20;
  }
LABEL_41:
  uint64_t v68 = v111[9];
  char v69 = &v29[v68];
  uint64_t v70 = *(void *)&v29[v68 + 8];
  uint64_t v71 = &v26[v68];
  uint64_t v72 = v71[1];
  if (!v70)
  {
    swift_bridgeObjectRetain();
    sub_10031C1C0((uint64_t)v26, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0((uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if (!v72) {
      goto LABEL_47;
    }
    goto LABEL_49;
  }
  if (!v72)
  {
    swift_bridgeObjectRetain();
    sub_10031C1C0((uint64_t)v26, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0((uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_49:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (*v69 == *v71 && v70 == v72)
  {
    swift_bridgeObjectRetain();
    sub_10031C1C0((uint64_t)v26, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0((uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    swift_bridgeObjectRelease();
LABEL_47:
    sub_10031C288((uint64_t)a1, v52, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    uint64_t v56 = v109;
    sub_10031C288((uint64_t)a2, (uint64_t)v109, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    uint64_t v55 = (uint64_t)v103;
    uint64_t v54 = (uint64_t)v104;
    goto LABEL_51;
  }
  LODWORD(v106) = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRetain();
  sub_10031C1C0((uint64_t)v26, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  uint64_t v51 = (uint64_t)v110;
  sub_10031C1C0((uint64_t)v29, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  swift_bridgeObjectRelease();
  sub_10031C288((uint64_t)a1, v52, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  uint64_t v56 = v109;
  sub_10031C288((uint64_t)a2, (uint64_t)v109, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  uint64_t v55 = (uint64_t)v103;
  uint64_t v54 = (uint64_t)v104;
  if ((v106 & 1) == 0)
  {
LABEL_20:
    sub_10031C1C0((uint64_t)v56, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0(v52, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_21:
    uint64_t v57 = v108;
    sub_10031C288((uint64_t)a1, (uint64_t)v108, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    uint64_t v58 = v107;
    sub_10031C288((uint64_t)a2, (uint64_t)v107, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_22;
  }
LABEL_51:
  uint64_t v73 = v111[10];
  uint64_t v74 = (void *)(v52 + v73);
  uint64_t v75 = *(int **)(v52 + v73 + 8);
  uint64_t v76 = &v56[v73];
  uint64_t v77 = (int *)v76[1];
  if (!v75)
  {
    swift_bridgeObjectRetain();
    sub_10031C1C0((uint64_t)v109, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0(v52, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if (!v77) {
      goto LABEL_57;
    }
    goto LABEL_59;
  }
  if (!v77)
  {
    v111 = v75;
    swift_bridgeObjectRetain();
    sub_10031C1C0((uint64_t)v56, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0(v52, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_59:
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  if (*v74 == *v76 && v75 == v77)
  {
    swift_bridgeObjectRetain();
    sub_10031C1C0((uint64_t)v109, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0(v52, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    swift_bridgeObjectRelease();
LABEL_57:
    uint64_t v57 = v108;
    sub_10031C288((uint64_t)a1, (uint64_t)v108, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    uint64_t v58 = v107;
    sub_10031C288((uint64_t)a2, (uint64_t)v107, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_61;
  }
  LODWORD(v106) = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRetain();
  sub_10031C1C0((uint64_t)v109, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  uint64_t v51 = (uint64_t)v110;
  sub_10031C1C0(v52, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  swift_bridgeObjectRelease();
  uint64_t v57 = v108;
  sub_10031C288((uint64_t)a1, (uint64_t)v108, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  uint64_t v58 = v107;
  sub_10031C288((uint64_t)a2, (uint64_t)v107, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  if ((v106 & 1) == 0)
  {
LABEL_22:
    sub_10031C1C0((uint64_t)v58, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0((uint64_t)v57, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_23:
    sub_10031C288((uint64_t)a1, v50, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C288((uint64_t)a2, v51, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_24;
  }
LABEL_61:
  uint64_t v78 = v111[11];
  Swift::String v79 = &v57[v78];
  uint64_t v80 = *(int **)&v57[v78 + 8];
  uint64_t v81 = &v58[v78];
  uint64_t v82 = (int *)v81[1];
  if (!v80)
  {
    swift_bridgeObjectRetain();
    sub_10031C1C0((uint64_t)v58, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0((uint64_t)v108, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if (!v82) {
      goto LABEL_67;
    }
    goto LABEL_69;
  }
  if (!v82)
  {
    v111 = v80;
    swift_bridgeObjectRetain();
    sub_10031C1C0((uint64_t)v58, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0((uint64_t)v57, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_69:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  if (*v79 == *v81 && v80 == v82)
  {
    swift_bridgeObjectRetain();
    sub_10031C1C0((uint64_t)v107, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0((uint64_t)v108, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    swift_bridgeObjectRelease();
LABEL_67:
    sub_10031C288((uint64_t)a1, v50, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C288((uint64_t)a2, v51, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_71;
  }
  char v83 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRetain();
  sub_10031C1C0((uint64_t)v107, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  uint64_t v51 = (uint64_t)v110;
  sub_10031C1C0((uint64_t)v108, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  swift_bridgeObjectRelease();
  sub_10031C288((uint64_t)a1, v50, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_10031C288((uint64_t)a2, v51, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  if ((v83 & 1) == 0)
  {
LABEL_24:
    sub_10031C1C0(v51, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0(v50, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_25:
    sub_10031C288((uint64_t)a1, v55, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C288((uint64_t)a2, v54, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_26;
  }
LABEL_71:
  uint64_t v84 = v111[12];
  uint64_t v85 = (void *)(v50 + v84);
  uint64_t v86 = *(void *)(v50 + v84 + 8);
  uint64_t v87 = (void *)(v51 + v84);
  uint64_t v88 = v87[1];
  if (!v86)
  {
    swift_bridgeObjectRetain();
    sub_10031C1C0(v51, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0(v50, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if (!v88) {
      goto LABEL_77;
    }
    goto LABEL_79;
  }
  if (!v88)
  {
    swift_bridgeObjectRetain();
    sub_10031C1C0(v51, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0(v50, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_79:
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  if (*v85 == *v87 && v86 == v88)
  {
    swift_bridgeObjectRetain();
    sub_10031C1C0(v51, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0(v50, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    swift_bridgeObjectRelease();
LABEL_77:
    sub_10031C288((uint64_t)a1, v55, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C288((uint64_t)a2, v54, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_81;
  }
  char v89 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRetain();
  sub_10031C1C0(v51, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_10031C1C0(v50, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  swift_bridgeObjectRelease();
  sub_10031C288((uint64_t)a1, v55, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_10031C288((uint64_t)a2, v54, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  if ((v89 & 1) == 0)
  {
LABEL_26:
    sub_10031C1C0(v54, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0(v55, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    uint64_t v59 = v105;
    sub_10031C288((uint64_t)a1, (uint64_t)v105, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C288((uint64_t)a2, v53, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
LABEL_27:
    sub_10031C1C0(v53, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0((uint64_t)v59, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    goto LABEL_28;
  }
LABEL_81:
  uint64_t v90 = v111;
  int v91 = *(unsigned __int8 *)(v55 + v111[13]);
  sub_10031C1C0(v55, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  int v92 = *(unsigned __int8 *)(v54 + v90[13]);
  sub_10031C1C0(v54, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  uint64_t v59 = v105;
  sub_10031C288((uint64_t)a1, (uint64_t)v105, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  sub_10031C288((uint64_t)a2, v53, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  if (v91 != v92) {
    goto LABEL_27;
  }
  uint64_t v93 = v90[14];
  uint64_t v95 = *(void *)&v59[v93];
  unint64_t v94 = *(void *)&v59[v93 + 8];
  uint64_t v96 = (uint64_t *)(v53 + v93);
  uint64_t v97 = *v96;
  unint64_t v98 = v96[1];
  if (v94 >> 60 == 15)
  {
    sub_100278C78(v97, v98);
    sub_10031C1C0(v53, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0((uint64_t)v59, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if (v98 >> 60 == 15)
    {
      sub_100250CB0(v95, v94);
      char v60 = 1;
      return v60 & 1;
    }
  }
  else
  {
    if (v98 >> 60 != 15)
    {
      sub_100278C78(v95, v94);
      sub_100278C78(v97, v98);
      sub_100278C78(v95, v94);
      char v60 = sub_10031C480(v95, v94, v97, v98);
      sub_100250CB0(v97, v98);
      sub_100250CB0(v95, v94);
      sub_10031C1C0(v53, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      sub_10031C1C0((uint64_t)v59, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      sub_100250CB0(v95, v94);
      return v60 & 1;
    }
    sub_10025ADCC(v95, v94);
    sub_10025ADCC(v95, v94);
    sub_10031C1C0(v53, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_10031C1C0((uint64_t)v59, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_100250CB0(v95, v94);
  }
  sub_100250CB0(v95, v94);
  sub_100250CB0(v97, v98);
LABEL_28:
  char v60 = 0;
  return v60 & 1;
}

uint64_t sub_10031E9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v36 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v35 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v35 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v35 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v35 - v19;
  char v21 = sub_10031C480(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
  sub_10031C288(a1, (uint64_t)v20, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  sub_10031C288(a2, (uint64_t)v18, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  if ((v21 & 1) == 0)
  {
    sub_10031C1C0((uint64_t)v18, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_10031C1C0((uint64_t)v20, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_10031C288(a1, (uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_10031C288(a2, (uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    goto LABEL_12;
  }
  char v22 = static UUID.== infix(_:_:)();
  sub_10031C1C0((uint64_t)v18, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  sub_10031C1C0((uint64_t)v20, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  sub_10031C288(a1, (uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  sub_10031C288(a2, (uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  if ((v22 & 1) == 0)
  {
LABEL_12:
    sub_10031C1C0((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_10031C1C0((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    goto LABEL_13;
  }
  uint64_t v23 = *(int *)(v4 + 28);
  uint64_t v24 = &v15[v23];
  uint64_t v25 = *(void *)&v15[v23 + 8];
  uint64_t v26 = &v12[v23];
  uint64_t v27 = *((void *)v26 + 1);
  if (!v25)
  {
    swift_bridgeObjectRetain();
    sub_10031C1C0((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_10031C1C0((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    if (!v27)
    {
LABEL_20:
      sub_10031C288(a1, (uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      uint64_t v30 = v36;
      sub_10031C288(a2, v36, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
LABEL_21:
      char v33 = v9[*(int *)(v4 + 32)];
      sub_10031C1C0((uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      char v34 = *(unsigned char *)(v30 + *(int *)(v4 + 32));
      sub_10031C1C0(v30, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      char v31 = v33 ^ v34 ^ 1;
      return v31 & 1;
    }
    swift_bridgeObjectRelease();
LABEL_13:
    uint64_t v30 = v36;
    sub_10031C288(a1, (uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_10031C288(a2, v30, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    goto LABEL_14;
  }
  if (!v27)
  {
    swift_bridgeObjectRetain();
    sub_10031C1C0((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_10031C1C0((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (*(void *)v24 == *(void *)v26 && v25 == v27)
  {
    swift_bridgeObjectRetain();
    sub_10031C1C0((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    sub_10031C1C0((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRetain();
  sub_10031C1C0((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  sub_10031C1C0((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  swift_bridgeObjectRelease();
  sub_10031C288(a1, (uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  uint64_t v30 = v36;
  sub_10031C288(a2, v36, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  if (v29) {
    goto LABEL_21;
  }
LABEL_14:
  sub_10031C1C0(v30, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  sub_10031C1C0((uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  char v31 = 0;
  return v31 & 1;
}

uint64_t sub_10031EEC0(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v36 = (uint64_t)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (void **)((char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v35 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (uint64_t *)((char *)&v35 - v18);
  __chkstk_darwin(v17);
  char v21 = (char *)&v35 - v20;
  uint64_t v22 = sub_10000A844((uint64_t *)&unk_10096EE70);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v25 = (char *)&v35 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = (void **)&v25[*(int *)(v23 + 56)];
  sub_10031C288(v37, (uint64_t)v25, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_10031C288(v38, (uint64_t)v26, type metadata accessor for SDAirDropDiscoveredEndpoint);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10031C288((uint64_t)v25, (uint64_t)v19, type metadata accessor for SDAirDropDiscoveredEndpoint);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_10031C220((uint64_t)v26, (uint64_t)v6, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
        char v27 = sub_10031D658(v19, v6);
        uint64_t v28 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
        sub_10031C1C0((uint64_t)v6, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
        uint64_t v29 = (uint64_t)v19;
        goto LABEL_8;
      }
      sub_10031C1C0((uint64_t)v19, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      goto LABEL_14;
    case 2u:
      sub_10031C288((uint64_t)v25, (uint64_t)v16, type metadata accessor for SDAirDropDiscoveredEndpoint);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        sub_10031C1C0((uint64_t)v16, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
        goto LABEL_14;
      }
      uint64_t v30 = v36;
      sub_10031C220((uint64_t)v26, v36, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      char v27 = sub_10031E9C4((uint64_t)v16, v30);
      uint64_t v28 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint;
      sub_10031C1C0(v30, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      uint64_t v29 = (uint64_t)v16;
LABEL_8:
      char v31 = v28;
      goto LABEL_16;
    case 3u:
      sub_10031C288((uint64_t)v25, (uint64_t)v13, type metadata accessor for SDAirDropDiscoveredEndpoint);
      uint64_t v32 = *v13;
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        char v33 = *v26;
        sub_10031F3F4();
        char v27 = static NSObject.== infix(_:_:)();

        goto LABEL_17;
      }

      goto LABEL_14;
    default:
      sub_10031C288((uint64_t)v25, (uint64_t)v21, type metadata accessor for SDAirDropDiscoveredEndpoint);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_10031C1C0((uint64_t)v21, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
LABEL_14:
        sub_10000A7E8((uint64_t)v25, (uint64_t *)&unk_10096EE70);
        char v27 = 0;
      }
      else
      {
        sub_10031C220((uint64_t)v26, (uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        char v27 = sub_10031C718((uint64_t)v21, (uint64_t)v9);
        sub_10031C1C0((uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        uint64_t v29 = (uint64_t)v21;
        char v31 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
LABEL_16:
        sub_10031C1C0(v29, v31);
LABEL_17:
        sub_10031C1C0((uint64_t)v25, type metadata accessor for SDAirDropDiscoveredEndpoint);
      }
      return v27 & 1;
  }
}

unint64_t sub_10031F3F4()
{
  unint64_t result = qword_10096D418;
  if (!qword_10096D418)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10096D418);
  }
  return result;
}

uint64_t type metadata accessor for SDAirDropContentHandlerMixedTypes()
{
  return self;
}

uint64_t sub_10031F458@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerMixedTypes();
  uint64_t result = swift_allocObject();
  *a1 = result;
  return result;
}

uint64_t sub_10031F48C()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  unint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return sub_10031F944(v1, v0, 1);
}

uint64_t sub_10031F53C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_1003A07DC(a1, a2, 0, a3);
}

uint64_t sub_10031F590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_10097F1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v9 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a2, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  sub_10039FAA0(a1, 0, 1, a3);
  return sub_10024DFE8((uint64_t)v8);
}

void sub_10031F6C4(uint64_t a1, char a2)
{
  uint64_t v3 = *(void *)(SFAirDropReceive.AskRequest.files.getter() + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(SFAirDropReceive.AskRequest.urlItems.getter() + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = v3 + v4;
  if (__OFADD__(v3, v4))
  {
    __break(1u);
  }
  else
  {
    sub_10000A844(&qword_10096D760);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
    strcpy((char *)(inited + 32), "GENERIC_ITEM");
    *(unsigned char *)(inited + 45) = 0;
    *(_WORD *)(inited + 46) = -5120;
    *(void *)(inited + 48) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7._countAndFlagsBits = 95;
    v7._object = (void *)0xE100000000000000;
    String.append(_:)(v7);
    v8._countAndFlagsBits = 0x5F434952454E4547;
    v8._object = (void *)0xEC0000004D455449;
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
    if (v5 > 1)
    {
      v9._countAndFlagsBits = 0x4C4152554C505FLL;
      v9._object = (void *)0xE700000000000000;
      String.append(_:)(v9);
    }
    swift_bridgeObjectRelease();
    if (a2)
    {
      v10._countAndFlagsBits = 0x4C4154495041435FLL;
      v10._object = (void *)0xEC00000044455A49;
      String.append(_:)(v10);
    }
    v11._countAndFlagsBits = 0x545845545FLL;
    v11._object = (void *)0xE500000000000000;
    String.append(_:)(v11);
    swift_setDeallocating();
    sub_10000A844((uint64_t *)&unk_100977CB0);
    swift_arrayDestroy();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v13 = (id)SFLocalizedStringForKey();

    if (v13)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10000A844((uint64_t *)&unk_10096EE60);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_10076E7A0;
      *(void *)(v14 + 56) = &type metadata for Int;
      *(void *)(v14 + 64) = &protocol witness table for Int;
      *(void *)(v14 + 32) = v5;
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
}

uint64_t sub_10031F944(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_10031F954()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10096EF58);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10096EF58);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10031FA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v39 = a1;
  uint64_t v40 = type metadata accessor for SFNWInterfaceType();
  uint64_t v3 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = 0x80000001007B93D0;
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = (id)SFLocalizedStringForKey();

  if (v8)
  {
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v6 = v9;
  }
  else
  {
    uint64_t v37 = 0xD000000000000012;
  }
  unint64_t v10 = 0x80000001007B93F0;
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = (id)SFLocalizedStringForKey();

  if (v12)
  {
    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v13;
  }
  else
  {
    uint64_t v36 = 0xD000000000000016;
  }
  uint64_t v14 = 0xD00000000000001ALL;
  unint64_t v15 = 0x80000001007B9410;
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = (id)SFLocalizedStringForKey();

  uint64_t v38 = a2;
  if (v17)
  {
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v18;
  }
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = (id)SFLocalizedStringForKey();

  unint64_t v41 = v15;
  unint64_t v42 = v10;
  if (v20)
  {
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v34 = 0xD000000000000018;
  }
  uint64_t v21 = 0xD000000000000013;
  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = (id)SFLocalizedStringForKey();

  unint64_t v43 = v6;
  if (v23)
  {
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = (id)SFLocalizedStringForKey();

  uint64_t v35 = v14;
  if (v25)
  {
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v33 = 0xD000000000000012;
  }
  uint64_t v26 = 0xD000000000000013;
  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = (id)SFLocalizedStringForKey();

  if (v28)
  {
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  type metadata accessor for SFAirDropUserDefaults();
  uint64_t v29 = (void *)static SFAirDropUserDefaults.shared.getter();
  char v30 = SFAirDropUserDefaults.verboseWalkAway.getter();

  sub_10066940C((uint64_t)v5);
  int v31 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v40);
  if (v31 == enum case for SFNWInterfaceType.awdl(_:))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v30) {
      return v37;
    }
    goto LABEL_24;
  }
  if (v31 == enum case for SFNWInterfaceType.cellular(_:))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v36;
  }
  if (v31 == enum case for SFNWInterfaceType.directWired(_:))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  if (v31 == enum case for SFNWInterfaceType.localWiFi(_:))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v30) {
      return v34;
    }
    goto LABEL_24;
  }
  if (v31 == enum case for SFNWInterfaceType.other(_:))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v30) {
      return v21;
    }
    goto LABEL_24;
  }
  if (v31 == enum case for SFNWInterfaceType.wifi(_:))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v30) {
      return v33;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    return v39;
  }
  if (v31 != enum case for SFNWInterfaceType.wired(_:))
  {
    uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v30)
  {
    swift_bridgeObjectRelease();
    return v26;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  return v35;
}

uint64_t sub_10032003C()
{
  uint64_t v42 = type metadata accessor for SFNWInterfaceType();
  uint64_t v0 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (uint64_t)&v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = (id)SFLocalizedStringForKey();

  if (v3)
  {
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v4 = 0xD000000000000012;
  }
  unint64_t v5 = 0x80000001007B93F0;
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = (id)SFLocalizedStringForKey();

  uint64_t v38 = v4;
  if (v7)
  {
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v8;
  }
  else
  {
    uint64_t v37 = 0xD000000000000016;
  }
  unint64_t v9 = 0x80000001007B9410;
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = (id)SFLocalizedStringForKey();

  if (v11)
  {
    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v9 = v12;
  }
  else
  {
    uint64_t v36 = 0xD00000000000001ALL;
  }
  uint64_t v13 = 0xD000000000000018;
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = (id)SFLocalizedStringForKey();

  unint64_t v43 = v9;
  if (v15)
  {
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v40 = v16;
  }
  else
  {
    unint64_t v40 = 0x80000001007B9430;
  }
  uint64_t v17 = 0xD000000000000013;
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = (id)SFLocalizedStringForKey();

  unint64_t v44 = v5;
  if (v19)
  {
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = (id)SFLocalizedStringForKey();

  if (v21)
  {
    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v35 = 0xD000000000000012;
  }
  uint64_t v22 = 0xD000000000000013;
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = (id)SFLocalizedStringForKey();

  if (v24)
  {
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  type metadata accessor for SFAirDropUserDefaults();
  id v25 = (void *)static SFAirDropUserDefaults.shared.getter();
  char v26 = SFAirDropUserDefaults.verboseWalkAway.getter();

  if (!*(void *)(v39 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadConnection))
  {
    if (qword_100969B68 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_10000B47C(v30, (uint64_t)qword_10096DD80);
    int v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "UPLOAD connection is not active", v33, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(uint64_t, void, uint64_t))(v0 + 104))(v41, enum case for SFNWInterfaceType.other(_:), v42);
    goto LABEL_29;
  }
  uint64_t v39 = v13;
  char v27 = v26;
  swift_retain();
  uint64_t v28 = v41;
  sub_10065D92C(v41);
  swift_release();
  int v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 88))(v28, v42);
  if (v29 == enum case for SFNWInterfaceType.awdl(_:))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v27) {
      return v38;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v29 == enum case for SFNWInterfaceType.cellular(_:))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v37;
  }
  char v26 = v27;
  if (v29 == enum case for SFNWInterfaceType.directWired(_:))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v36;
  }
  if (v29 == enum case for SFNWInterfaceType.localWiFi(_:))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v27) {
      return v39;
    }
    goto LABEL_33;
  }
  if (v29 == enum case for SFNWInterfaceType.other(_:))
  {
LABEL_29:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v26) {
      return v17;
    }
    goto LABEL_33;
  }
  if (v29 == enum case for SFNWInterfaceType.wifi(_:))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v27) {
      return v35;
    }
    goto LABEL_33;
  }
  if (v29 == enum case for SFNWInterfaceType.wired(_:))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v27) {
      uint64_t v17 = v22;
    }
    else {
      uint64_t v17 = v36;
    }
    swift_bridgeObjectRelease();
    return v17;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_100320760()
{
  v1[7] = v0;
  sub_10000A844(&qword_10096C920);
  v1[8] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for SFAirDropSend.Failure();
  v1[9] = v2;
  v1[10] = *(void *)(v2 - 8);
  v1[11] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for SFAirDropSend.Transfer.State();
  v1[12] = v3;
  v1[13] = *(void *)(v3 - 8);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropSend.Transfer();
  v1[16] = v4;
  v1[17] = *(void *)(v4 - 8);
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  v1[20] = static AirDropActor.shared;
  return _swift_task_switch(sub_100320964, v5, 0);
}

uint64_t sub_100320964()
{
  uint64_t v72 = v0;
  uint64_t v1 = (id *)(v0 + 7);
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[17];
  uint64_t v5 = v0[15];
  uint64_t v7 = v0[12];
  uint64_t v6 = v0[13];
  uint64_t v8 = v0[7] + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  swift_beginAccess();
  uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v70(v2, v8, v3);
  SFAirDropSend.Transfer.state.getter();
  char v69 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v69(v2, v3);
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v5, v7);
  if (v9 == enum case for SFAirDropSend.Transfer.State.transferFailed(_:))
  {
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[10];
    uint64_t v11 = v0[11];
    uint64_t v13 = v0[9];
    (*(void (**)(uint64_t, void))(v0[13] + 96))(v10, v0[12]);
    uint64_t v14 = sub_10000A844(&qword_10096EFF8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v11, v10 + *(int *)(v14 + 48), v13);
    int v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 88))(v11, v13);
    BOOL v18 = v15 == enum case for SFAirDropSend.Failure.resolveFailure(_:)
       || v15 == enum case for SFAirDropSend.Failure.receiverDeclined(_:)
       || v15 == enum case for SFAirDropSend.Failure.cancelled(_:)
       || v15 == enum case for SFAirDropSend.Failure.insufficientStorage(_:);
    char v19 = v18;
    if (!v18) {
      (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
    }
    uint64_t v20 = v0[15];
    uint64_t v21 = type metadata accessor for SFAirDropSend.Transfer.Metrics();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
    if ((v19 & 1) == 0)
    {
      NSString v23 = (void *)v0[7];
      uint64_t v22 = v0[8];
      uint64_t v24 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v22, 1, 1, v24);
      uint64_t v25 = static AirDropActor.shared;
      uint64_t v26 = sub_100323DF0((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
      char v27 = (void *)swift_allocObject();
      v27[2] = v25;
      v27[3] = v26;
      v27[4] = v23;
      id v28 = v23;
      swift_retain();
      v0[21] = sub_10028CFA8(v22, (uint64_t)&unk_10096F008, (uint64_t)v27);
      int v29 = (void *)swift_task_alloc();
      v0[22] = v29;
      void *v29 = v0;
      v29[1] = sub_1003211D8;
      return Task<>.value.getter();
    }
  }
  else if (v9 == enum case for SFAirDropSend.Transfer.State.completedSuccessfully(_:))
  {
    uint64_t v30 = v0[15];
    (*(void (**)(uint64_t, void))(v0[13] + 96))(v30, v0[12]);
    sub_10000A844((uint64_t *)&unk_100974570);
    swift_bridgeObjectRelease();
    uint64_t v31 = type metadata accessor for SFAirDropSend.Transfer.Metrics();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
  }
  else
  {
    id v32 = *v1;
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v33, v34))
    {
      os_log_type_t type = v34;
      uint64_t v35 = v0[18];
      uint64_t v62 = v33;
      uint64_t v36 = v0[16];
      uint64_t v68 = v8;
      uint64_t v37 = v0[13];
      uint64_t v38 = v0[14];
      uint64_t v39 = v0[12];
      uint64_t v65 = (void *)v0[7];
      unint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      uint64_t v63 = v40;
      *(_DWORD *)unint64_t v40 = 136315138;
      v70(v35, v68, v36);
      SFAirDropSend.Transfer.state.getter();
      v69(v35, v36);
      sub_100323DF0(&qword_10096E2F8, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Transfer.State);
      uint64_t v41 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v43 = v42;
      unint64_t v44 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
      uint64_t v45 = v38;
      uint64_t v8 = v68;
      v44(v45, v39);
      v0[6] = sub_100254634(v41, v43, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v62, type, "runPostTransferEndedSteps invalid transfer state. Skipping. {transfer.state: %s}", v63, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v44(v0[15], v0[12]);
    }
    else
    {
      uint64_t v46 = v0[13];
      uint64_t v47 = (void *)v0[7];

      (*(void (**)(void, void))(v46 + 8))(v0[15], v0[12]);
    }
  }
  id v48 = *v1;
  uint64_t v49 = Logger.logObject.getter();
  os_log_type_t v50 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = v0[18];
    uint64_t v52 = v0[16];
    uint64_t v54 = v0[13];
    uint64_t v53 = v0[14];
    uint64_t v64 = v0[12];
    typea = (void *)v0[7];
    uint64_t v55 = (uint8_t *)swift_slowAlloc();
    uint64_t v71 = swift_slowAlloc();
    *(_DWORD *)uint64_t v55 = 136315138;
    v70(v51, v8, v52);
    SFAirDropSend.Transfer.state.getter();
    v69(v51, v52);
    sub_100323DF0(&qword_10096E2F8, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Transfer.State);
    uint64_t v56 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v58 = v57;
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, v64);
    v0[5] = sub_100254634(v56, v58, &v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "Transer Linger SKIPPED. {transfer.state: %s}", v55, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    id v59 = *v1;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v60 = (uint64_t (*)(void))v0[1];
  return v60();
}

uint64_t sub_1003211D8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 160);
  swift_task_dealloc();
  return _swift_task_switch(sub_1003212E8, v1, 0);
}

uint64_t sub_1003212E8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100321394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a4;
  uint64_t v5 = type metadata accessor for ContinuousClock();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v4[11] = static AirDropActor.shared;
  return _swift_task_switch(sub_100321490, v6, 0);
}

uint64_t sub_100321490()
{
  *(void *)(v0 + 96) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log;
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Transfer Linger START", v3, 2u);
    swift_slowDealloc();
  }

  ContinuousClock.init()();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1003215E4;
  return v6(5000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_1003215E4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = *(void *)(*v1 + 72);
  uint64_t v5 = *(void *)(*v1 + 64);
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 88);
  if (v0) {
    uint64_t v7 = sub_10032184C;
  }
  else {
    uint64_t v7 = sub_10032176C;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_10032176C()
{
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Send StateMachine Linger END", v3, 2u);
    swift_slowDealloc();
  }

  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10032184C()
{
  uint64_t v10 = v0;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    uint64_t v9 = v4;
    swift_getErrorValue();
    uint64_t v5 = Error.localizedDescription.getter();
    *(void *)(v0 + 48) = sub_100254634(v5, v6, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Transfer Linger FAILED {error: %s}", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100321A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100321AD0(a1, (uint64_t (*)(void))&type metadata accessor for SFAirDropSend.Transfer.State, (void (*)(uint64_t))&SFAirDropSend.Transfer.state.getter, "Transfer changed status %s -> %s", (void (*)(uint64_t))&SFAirDropSend.Transfer.update(state:), a2);
}

uint64_t sub_100321A88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100321AD0(a1, (uint64_t (*)(void))&type metadata accessor for SFAirDrop.DisplayPriority, (void (*)(uint64_t))&SFAirDropSend.Transfer.displayPriority.getter, "Transfer changed display priority %s -> %s", (void (*)(uint64_t))&SFAirDropSend.Transfer.update(displayPriority:), a2);
}

uint64_t sub_100321AD0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, void (*a3)(uint64_t)@<X2>, const char *a4@<X3>, void (*a5)(uint64_t)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v66 = a5;
  BOOL v61 = a4;
  uint64_t v62 = a3;
  uint64_t v68 = a6;
  uint64_t v9 = type metadata accessor for SFAirDropSend.Transfer();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v64 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v53 - v13;
  uint64_t v15 = a2(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  os_log_t v58 = (os_log_t)((char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v53 - v20;
  __chkstk_darwin(v19);
  uint64_t v22 = *(void (**)(void))(v16 + 16);
  uint64_t v63 = (char *)&v53 - v23;
  uint64_t v65 = a1;
  id v59 = v22;
  v22();
  uint64_t v24 = v6;
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.debug.getter();
  int v60 = v26;
  char v27 = &unk_100994000;
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v67 = v10;
    int v29 = (_DWORD *)v28;
    uint64_t v57 = swift_slowAlloc();
    v70[0] = v57;
    uint64_t v54 = v29;
    _DWORD *v29 = 136315394;
    uint64_t v56 = v29 + 1;
    uint64_t v30 = (char *)v24 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
    swift_beginAccess();
    uint64_t v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v67 + 16))(v14, v30, v9);
    v62(v31);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v14, v9);
    id v32 = v21;
    uint64_t v33 = v21;
    os_log_type_t v34 = v59;
    ((void (*)(os_log_t, char *, uint64_t))v59)(v58, v32, v15);
    uint64_t v35 = String.init<A>(describing:)();
    os_log_t v58 = v25;
    uint64_t v62 = v24;
    unint64_t v37 = v36;
    uint64_t v38 = *(void (**)(char *, uint64_t))(v16 + 8);
    uint64_t v53 = v16 + 8;
    uint64_t v55 = v38;
    v38(v33, v15);
    uint64_t v39 = sub_100254634(v35, v37, v70);
    unint64_t v40 = v54;
    uint64_t v69 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *((_WORD *)v40 + 6) = 2080;
    uint64_t v41 = v63;
    ((void (*)(char *, char *, uint64_t))v34)(v33, v63, v15);
    uint64_t v42 = String.init<A>(describing:)();
    unint64_t v44 = (uint8_t *)v40;
    uint64_t v69 = sub_100254634(v42, v43, v70);
    char v27 = (void *)&unk_100994000;
    uint64_t v24 = v62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v55(v41, v15);
    os_log_t v45 = v58;
    _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v60, v61, v44, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v10 = v67;
    swift_slowDealloc();
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v16 + 8))(v63, v15);
  }
  uint64_t v46 = (char *)v24 + v27[137];
  swift_beginAccess();
  uint64_t v47 = v10;
  id v48 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v49 = v64;
  v48(v64, v46, v9);
  v66(v65);
  os_log_type_t v50 = *(void (**)(char *, uint64_t))(v47 + 8);
  v50(v49, v9);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v47 + 40))(v46, v14, v9);
  swift_endAccess();
  v48(v14, v46, v9);
  CurrentValueSubject.send(_:)();
  v50(v14, v9);
  uint64_t v51 = *(void (**)(char *))((char *)v24
                                      + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_yield);
  v48(v14, v46, v9);
  v51(v14);
  v50(v14, v9);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v48)(v68, v46, v9);
}

uint64_t sub_1003220C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v4 = type metadata accessor for SFAirDropSend.Transfer();
  uint64_t v60 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v62 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  BOOL v61 = (char *)&v52 - v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v52 - v9;
  uint64_t v11 = sub_10000A844(&qword_10097F260);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v52 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v52 - v18;
  sub_100323D88(a1, (uint64_t)&v52 - v18);
  uint64_t v20 = v2;
  uint64_t v21 = Logger.logObject.getter();
  int v22 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v21, (os_log_type_t)v22))
  {
    uint64_t v54 = v14;
    int v56 = v22;
    uint64_t v58 = a1;
    id v59 = v19;
    os_log_t v57 = v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    v64[0] = v55;
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v24 = &v20[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer];
    swift_beginAccess();
    uint64_t v25 = v60;
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v10, v24, v4);
    SFAirDropSend.Transfer.activeInterfaceType.getter();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v4);
    uint64_t v26 = type metadata accessor for SFNWInterfaceType();
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    uint64_t v28 = v4;
    uint64_t v29 = v27;
    if (v53(v17, 1, v26) == 1)
    {
      sub_10000A7E8((uint64_t)v17, &qword_10097F260);
      uint64_t v65 = 0;
      unint64_t v66 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v30 = 0x80000001007B7770;
      unint64_t v31 = 0xD000000000000015;
    }
    else
    {
      unint64_t v31 = SFNWInterfaceType.description.getter();
      unint64_t v30 = v32;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v26);
    }
    uint64_t v65 = sub_100254634(v31, v30, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    uint64_t v33 = (uint64_t)v54;
    sub_100323D88((uint64_t)v59, (uint64_t)v54);
    unsigned int v34 = v53((char *)v33, 1, v26);
    os_log_type_t v35 = v56;
    if (v34 == 1)
    {
      sub_10000A7E8(v33, &qword_10097F260);
      uint64_t v65 = 0;
      unint64_t v66 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v36 = 0x80000001007B7770;
      uint64_t v37 = 0xD000000000000015;
    }
    else
    {
      uint64_t v38 = v33;
      uint64_t v39 = SFNWInterfaceType.description.getter();
      uint64_t v40 = v29;
      uint64_t v37 = v39;
      unint64_t v36 = v41;
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v26);
    }
    uint64_t v65 = sub_100254634(v37, v36, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A7E8((uint64_t)v59, &qword_10097F260);
    os_log_t v42 = v57;
    _os_log_impl((void *)&_mh_execute_header, v57, v35, "Transfer changed active interface type %s -> %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_10000A7E8((uint64_t)v19, &qword_10097F260);
    uint64_t v25 = v60;
    uint64_t v28 = v4;
  }
  unint64_t v43 = &v20[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer];
  swift_beginAccess();
  unint64_t v44 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  os_log_t v45 = v62;
  v44(v62, v43, v28);
  uint64_t v46 = v61;
  SFAirDropSend.Transfer.update(activeInterfaceType:)();
  uint64_t v47 = *(void (**)(char *, uint64_t))(v25 + 8);
  v47(v45, v28);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v43, v46, v28);
  swift_endAccess();
  v44(v46, v43, v28);
  CurrentValueSubject.send(_:)();
  v47(v46, v28);
  id v48 = &v20[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_yield];
  uint64_t v49 = v28;
  os_log_type_t v50 = *(void (**)(char *))v48;
  v44(v46, v43, v49);
  v50(v46);
  v47(v46, v49);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v44)(v63, v43, v49);
}

uint64_t sub_10032274C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v29 = *(void *)(v4 - 8);
  uint64_t v30 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SFAirDropSend.Transfer();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v27 = a1;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    v32[0] = v26;
    uint64_t v28 = v1;
    *(_DWORD *)uint64_t v13 = 136315138;
    v25[1] = v13 + 4;
    SFAirDropSend.Transfer.id.getter();
    uint64_t v14 = SFAirDrop.TransferIdentifier.shortIdentifier.getter();
    unint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v30);
    uint64_t v31 = sub_100254634(v14, v16, v32);
    uint64_t v2 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Begin Send OSTransaction and Power Assertion %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v32[0] = 0;
  v32[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)v32, "airdrop.send[");
  HIWORD(v32[1]) = -4864;
  SFAirDropSend.Transfer.id.getter();
  uint64_t v17 = SFAirDrop.TransferIdentifier.shortIdentifier.getter();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v30);
  v20._countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  v21._countAndFlagsBits = 93;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  String.utf8CString.getter();
  swift_bridgeObjectRelease();
  uint64_t v22 = os_transaction_create();
  swift_release();
  *(void *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_osTransaction) = v22;
  swift_unknownObjectRelease();
  uint64_t result = sub_100052784();
  uint64_t v24 = v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_powerAssertion;
  *(_DWORD *)uint64_t v24 = result;
  *(unsigned char *)(v24 + 4) = 0;
  return result;
}

void sub_100322B14()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_osTransaction;
  if (*(void *)(v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_osTransaction))
  {
    swift_unknownObjectRetain();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Clearing Send OSTransaction", v5, 2u);
      swift_slowDealloc();
    }

    *(void *)(v1 + v2) = 0;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  uint64_t v6 = v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_powerAssertion;
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_powerAssertion + 4) & 1) == 0)
  {
    IOPMAssertionID v7 = *(_DWORD *)v6;
    if (*(_DWORD *)v6)
    {
      uint64_t v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Clearing Send Power Assertion", v10, 2u);
        swift_slowDealloc();
      }

      IOPMAssertionRelease(v7);
      *(_DWORD *)uint64_t v6 = 0;
      *(unsigned char *)(v6 + 4) = 1;
    }
  }
}

uint64_t sub_100322C98(double a1)
{
  uint64_t v3 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SFAirDrop.DisplayPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  os_log_type_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SFAirDropSend.Transfer();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_displayPriorityReturnToNormalTask;
  if (*(void *)(v1
                 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_displayPriorityReturnToNormalTask))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for SFAirDrop.DisplayPriority.high(_:), v6);
  sub_100321A88((uint64_t)v9, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v15 = type metadata accessor for TaskPriority();
  unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  v16(v5, 1, 1, v15);
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v18 = swift_allocObject();
  *(double *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = static Task<>.noThrow(priority:operation:)();
  swift_release();
  sub_10000A7E8((uint64_t)v5, &qword_10096C920);
  *(void *)(v1 + v14) = v19;
  swift_retain();
  swift_release();
  v16(v5, 1, 1, v15);
  swift_retain();
  static Task<>.noThrow(priority:operation:)();
  swift_release_n();
  swift_release();
  return sub_10000A7E8((uint64_t)v5, &qword_10096C920);
}

uint64_t sub_10032301C(double a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 48) = a3;
  *(double *)(v3 + 40) = a1;
  uint64_t v4 = type metadata accessor for SFAirDrop.DisplayPriority();
  *(void *)(v3 + 56) = v4;
  *(void *)(v3 + 64) = *(void *)(v4 - 8);
  *(void *)(v3 + 72) = swift_task_alloc();
  sub_10000A844(&qword_100975070);
  *(void *)(v3 + 80) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for ContinuousClock();
  *(void *)(v3 + 88) = v5;
  *(void *)(v3 + 96) = *(void *)(v5 - 8);
  *(void *)(v3 + 104) = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  *(void *)(v3 + 112) = static AirDropActor.shared;
  return _swift_task_switch(sub_1003231A8, v6, 0);
}

uint64_t sub_1003231A8()
{
  uint64_t v1 = static Duration.seconds(_:)();
  uint64_t v3 = v2;
  ContinuousClock.init()();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100323284;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_100323284()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 104);
  uint64_t v4 = *(void *)(*v1 + 96);
  uint64_t v5 = *(void *)(*v1 + 88);
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v7 = sub_100323574;
  }
  else {
    uint64_t v7 = sub_10032340C;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_10032340C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    uint64_t v4 = v0[9];
    uint64_t v3 = v0[10];
    uint64_t v5 = v0[7];
    uint64_t v6 = v0[8];
    (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v4, enum case for SFAirDrop.DisplayPriority.normal(_:), v5);
    sub_100321A88(v4, v3);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 1;
  }
  uint64_t v8 = v0[10];
  uint64_t v9 = type metadata accessor for SFAirDropSend.Transfer();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, v7, 1, v9);
  sub_10000A7E8(v8, &qword_100975070);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100323574()
{
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003235F0(uint64_t a1, uint64_t a2)
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  *(void *)(v2 + 16) = static AirDropActor.shared;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1003236F0;
  return Task.result.getter(v2 + 32, a2, (char *)&type metadata for () + 8, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_1003236F0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_task_dealloc();
  return _swift_task_switch(sub_100323800, v1, 0);
}

uint64_t sub_100323800()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100323844()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s10BaseRunnerCMa_0();
  return [super dealloc];
}

uint64_t sub_100323A18()
{
  return _s10BaseRunnerCMa_0();
}

uint64_t _s10BaseRunnerCMa_0()
{
  uint64_t result = qword_10096EFC0;
  if (!qword_10096EFC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100323A6C()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SFAirDropSend.Request();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for SFAirDropSend.Transfer();
      if (v3 <= 0x3F) {
        return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t sub_100323BCC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100323C04()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100323C3C(uint64_t a1)
{
  double v4 = *(double *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_10000A6F0;
  return sub_10032301C(v4, a1, v5);
}

uint64_t sub_100323CEC(uint64_t a1)
{
  double v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *double v4 = v2;
  v4[1] = sub_10000A6F4;
  return sub_1003235F0(a1, v1);
}

uint64_t sub_100323D88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_10097F260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100323DF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100323E38()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100323E78(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F0;
  return sub_100321394(a1, v4, v5, v6);
}

id sub_100323F2C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  uint64_t v44 = a7;
  uint64_t v45 = a8;
  uint64_t v47 = a5;
  uint64_t v48 = a6;
  uint64_t v46 = a10;
  uint64_t v42 = a3;
  unint64_t v43 = a9;
  uint64_t v15 = type metadata accessor for SFAirDropSend.Transfer();
  uint64_t v41 = *(void *)(v15 - 8);
  uint64_t v16 = v41;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v10[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_mediaConversionDestinations] = _swiftEmptyArrayStorage;
  *(void *)&v10[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_osTransaction] = 0;
  uint64_t v19 = &v10[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_powerAssertion];
  *(_DWORD *)uint64_t v19 = 0;
  v19[4] = 1;
  *(void *)&v10[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_displayPriorityReturnToNormalTask] = 0;
  os_log_type_t v50 = a1;
  sub_10000A844(&qword_10096F010);
  swift_allocObject();
  Swift::String v20 = v10;
  *(void *)&v20[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints] = CurrentValueSubject.init(_:)();
  os_log_type_t v50 = &_swiftEmptySetSingleton;
  swift_allocObject();
  *(void *)&v20[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_backupEndpoints] = CurrentValueSubject.init(_:)();
  *(void *)&v20[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_deviceStatus] = a2;
  uint64_t v21 = &v20[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest];
  uint64_t v22 = type metadata accessor for SFAirDropSend.Request();
  uint64_t v23 = *(void *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v21, a3, v22);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v25 = a4;
  uint64_t v40 = v15;
  v24(&v20[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer], a4, v15);
  v24(v18, a4, v15);
  sub_10000A844(&qword_10096F018);
  swift_allocObject();
  id v26 = a2;
  *(void *)&v20[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_subject] = CurrentValueSubject.init(_:)();
  uint64_t v27 = &v20[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_yield];
  uint64_t v28 = v45;
  *(void *)uint64_t v27 = v44;
  *((void *)v27 + 1) = v28;
  uint64_t v29 = v43;
  *(void *)&v20[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_queue] = v43;
  uint64_t v30 = &v20[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log];
  uint64_t v31 = type metadata accessor for Logger();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v30, v46, v31);
  unsigned int v34 = &v20[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager];
  uint64_t v35 = v48;
  *(void *)unsigned int v34 = v47;
  *((void *)v34 + 1) = v35;
  swift_retain();
  id v36 = v29;
  swift_unknownObjectRetain();

  uint64_t v37 = (objc_class *)_s10BaseRunnerCMa_0();
  v49.receiver = v20;
  v49.super_class = v37;
  id v38 = [super init];
  sub_10032274C(v25);

  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v31);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v25, v40);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v42, v22);
  return v38;
}

uint64_t sub_1003242F0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10096F020);
  sub_10000B47C(v0, (uint64_t)qword_10096F020);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_10032436C(uint64_t a1)
{
  return sub_1003243CC(a1, (uint64_t (*)(void))&_nw_endpoint_get_device_id);
}

uint64_t sub_100324384(uint64_t a1)
{
  return sub_1003243CC(a1, (uint64_t (*)(void))&_nw_endpoint_get_contact_id);
}

uint64_t sub_10032439C(uint64_t a1)
{
  return sub_1003243CC(a1, (uint64_t (*)(void))&_nw_endpoint_get_device_name);
}

uint64_t sub_1003243B4(uint64_t a1)
{
  return sub_1003243CC(a1, (uint64_t (*)(void))&_nw_endpoint_get_device_model);
}

uint64_t sub_1003243CC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = type metadata accessor for NWEndpoint();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!NWEndpoint.nw.getter())
  {
    if (qword_100969BC8 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000B47C(v12, (uint64_t)qword_10096F020);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v16 = NWEndpoint.debugDescription.getter();
      uint64_t v19 = sub_100254634(v16, v17, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Could not convert endpoint to nw_endpoint %s", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }

    return 0;
  }
  if (!a2())
  {
    swift_unknownObjectRelease();
    return 0;
  }
  uint64_t v8 = String.init(cString:)();
  unint64_t v10 = v9;
  swift_unknownObjectRelease();
  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  if (!v11)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v8;
}

uint64_t sub_10032468C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10096F038);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10096F038);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100324754(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropReceive.AskRequest();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v2[12] = v5;
  v2[13] = *(void *)(v5 - 8);
  v2[14] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v2[15] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferType();
  v2[16] = v6;
  v2[17] = *(void *)(v6 - 8);
  v2[18] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  return _swift_task_switch(sub_100324990, v7, 0);
}

uint64_t sub_100324990()
{
  uint64_t v58 = v0;
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[16];
  SFAirDropReceive.AskRequest.type.getter();
  char v4 = SFAirDrop.TransferType.isLinks.getter();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  if ((v4 & 1) == 0)
  {
LABEL_26:
    BOOL v24 = 0;
    goto LABEL_33;
  }
  uint64_t v5 = v0[13];
  uint64_t v6 = SFAirDropReceive.AskRequest.urlItems.getter();
  int64_t v7 = 0;
  uint64_t v50 = v6 + 56;
  uint64_t v8 = -1;
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  if (-v9 < 64) {
    uint64_t v8 = ~(-1 << -(char)v9);
  }
  unint64_t v10 = v8 & *(void *)(v6 + 56);
  *(void *)os_log_type_t type = v6;
  int64_t v51 = (unint64_t)(63 - v9) >> 6;
  uint64_t v11 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v7 << 6);
      goto LABEL_22;
    }
    int64_t v14 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v51) {
      goto LABEL_27;
    }
    unint64_t v15 = *(void *)(v50 + 8 * v14);
    ++v7;
    if (!v15)
    {
      int64_t v7 = v14 + 1;
      if (v14 + 1 >= v51) {
        goto LABEL_27;
      }
      unint64_t v15 = *(void *)(v50 + 8 * v7);
      if (!v15)
      {
        int64_t v7 = v14 + 2;
        if (v14 + 2 >= v51) {
          goto LABEL_27;
        }
        unint64_t v15 = *(void *)(v50 + 8 * v7);
        if (!v15) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v7 << 6);
LABEL_22:
    uint64_t v17 = v0[15];
    uint64_t v18 = v0[12];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))(v17, *(void *)(*(void *)type + 48) + *(void *)(v5 + 72) * v13, v18);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v17, 0, 1, v18);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v17, 1, v18) == 1) {
      goto LABEL_28;
    }
    (*(void (**)(void, void, void))(v5 + 32))(v0[14], v0[15], v0[12]);
    URL.scheme.getter();
    uint64_t v19 = v0[14];
    uint64_t v20 = v0[12];
    if (v21)
    {
      String.lowercased()();
      swift_bridgeObjectRelease();
      NSString v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      char MyFriendsLink = SFIsFindMyFriendsLink();

      (*v11)(v19, v20);
      if ((MyFriendsLink & 1) == 0)
      {
        swift_release();
        goto LABEL_26;
      }
    }
    else
    {
      (*v11)(v0[14], v0[12]);
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v51)
  {
LABEL_27:
    (*(void (**)(void, uint64_t, uint64_t, void))(v5 + 56))(v0[15], 1, 1, v0[12]);
LABEL_28:
    swift_release();
    id v25 = objc_allocWithZone((Class)LSApplicationRecord);
    id v26 = sub_1006A5458(0xD000000000000010, 0x80000001007B9620, 1);
    uint64_t v46 = v0[5];
    uint64_t v47 = *(void **)(v46 + 16);
    *(void *)(v46 + 16) = v26;

    goto LABEL_32;
  }
  unint64_t v15 = *(void *)(v50 + 8 * v16);
  if (v15)
  {
    int64_t v7 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v7 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v7 >= v51) {
      goto LABEL_27;
    }
    unint64_t v15 = *(void *)(v50 + 8 * v7);
    ++v16;
    if (v15) {
      goto LABEL_21;
    }
  }
LABEL_37:
  __break(1u);
  swift_once();
  uint64_t v27 = v0[10];
  uint64_t v28 = v0[11];
  uint64_t v29 = v0[9];
  uint64_t v30 = v0[4];
  uint64_t v31 = type metadata accessor for Logger();
  sub_10000B47C(v31, (uint64_t)qword_10096F038);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v28, v30, v29);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.error.getter();
  BOOL v34 = os_log_type_enabled(v32, v33);
  uint64_t v35 = v0[10];
  uint64_t v36 = v0[11];
  uint64_t v37 = v0[9];
  if (v34)
  {
    os_log_type_t typea = v33;
    uint64_t v39 = v0[7];
    uint64_t v38 = v0[8];
    uint64_t v52 = v0[9];
    uint64_t v40 = v0[6];
    uint64_t v41 = swift_slowAlloc();
    uint64_t v54 = (void *)swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    *(_DWORD *)uint64_t v41 = 136315394;
    os_log_t log = v32;
    SFAirDropReceive.AskRequest.id.getter();
    sub_10024E048();
    uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v44 = v43;
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    v0[2] = sub_100254634(v42, v44, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v52);
    *(_WORD *)(v41 + 12) = 2112;
    swift_errorRetain();
    uint64_t v45 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v54 = v45;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, typea, "Failed to get FindMy app for ask request %s: %@", (uint8_t *)v41, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v37);
    swift_errorRelease();
    swift_errorRelease();
  }
LABEL_32:
  BOOL v24 = *(void *)(v0[5] + 16) != 0;
LABEL_33:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v48 = (uint64_t (*)(BOOL))v0[1];
  return v48(v24);
}

uint64_t type metadata accessor for SDAirDropContentHandlerFindMyFriendsLinks()
{
  return self;
}

uint64_t sub_10032506C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerFindMyFriendsLinks();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1003250A4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_100324754(a1);
}

uint64_t sub_100325140@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_10097F1D0);
  __chkstk_darwin(v5 - 8);
  int64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void **)(*(void *)v2 + 16);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v9 = type metadata accessor for SFAirDropReceive.ItemDestination();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  id v10 = v8;
  sub_10039FAA0(a1, v8, 1, a2);

  return sub_10024DFE8((uint64_t)v7);
}

void sub_100325244(uint64_t a1, char a2)
{
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = 95;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  v4._countAndFlagsBits = 4607302;
  v4._object = (void *)0xE300000000000000;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  if (a2)
  {
    v5._countAndFlagsBits = 0x4C4154495041435FLL;
    v5._object = (void *)0xEC00000044455A49;
    String.append(_:)(v5);
  }
  v6._countAndFlagsBits = 0x545845545FLL;
  v6._object = (void *)0xE500000000000000;
  String.append(_:)(v6);
  sub_10000A844((uint64_t *)&unk_100977CB0);
  swift_arrayDestroy();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = (id)SFLocalizedStringForKey();

  if (v8)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t _s14descr1008C8969V20IdentityShareRequestVwxx(void *a1)
{
  swift_bridgeObjectRelease();
  unint64_t v2 = a1[3];
  if (v2 >> 60 != 15) {
    sub_100250CC4(a1[2], v2);
  }
  sub_100250CC4(a1[4], a1[5]);
  sub_100250CC4(a1[6], a1[7]);

  return swift_bridgeObjectRelease();
}

uint64_t _s14descr1008C8969V20IdentityShareRequestVwcp(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  Swift::String v5 = a2 + 2;
  unint64_t v6 = a2[3];
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    uint64_t v7 = *(void *)v5;
    sub_10025ADCC(v7, v6);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v6;
  }
  uint64_t v8 = a2[4];
  unint64_t v9 = a2[5];
  sub_10025ADCC(v8, v9);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  uint64_t v10 = a2[6];
  unint64_t v11 = a2[7];
  sub_10025ADCC(v10, v11);
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  uint64_t v12 = a2[9];
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = a2[10];
  swift_bridgeObjectRetain();
  return a1;
}

void *_s14descr1008C8969V20IdentityShareRequestVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2 + 2;
  unint64_t v5 = a2[3];
  if (a1[3] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_10025ADCC(*v4, a2[3]);
      uint64_t v8 = a1[2];
      unint64_t v9 = a1[3];
      a1[2] = v7;
      a1[3] = v5;
      sub_100250CC4(v8, v9);
      goto LABEL_8;
    }
    sub_10026F904((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  uint64_t v6 = *v4;
  sub_10025ADCC(*v4, a2[3]);
  a1[2] = v6;
  a1[3] = v5;
LABEL_8:
  uint64_t v10 = a2[4];
  unint64_t v11 = a2[5];
  sub_10025ADCC(v10, v11);
  uint64_t v12 = a1[4];
  unint64_t v13 = a1[5];
  a1[4] = v10;
  a1[5] = v11;
  sub_100250CC4(v12, v13);
  uint64_t v14 = a2[6];
  unint64_t v15 = a2[7];
  sub_10025ADCC(v14, v15);
  uint64_t v16 = a1[6];
  unint64_t v17 = a1[7];
  a1[6] = v14;
  a1[7] = v15;
  sub_100250CC4(v16, v17);
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  return a1;
}

__n128 _s14descr1008C8969V20IdentityShareRequestVwtk(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

void *_s14descr1008C8969V20IdentityShareRequestVwta(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  long long v5 = (void *)(a2 + 16);
  unint64_t v6 = a1[3];
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = *(void *)(a2 + 24);
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = a1[2];
      a1[2] = *v5;
      a1[3] = v7;
      sub_100250CC4(v8, v6);
      goto LABEL_6;
    }
    sub_10026F904((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
LABEL_6:
  uint64_t v9 = a1[4];
  unint64_t v10 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  sub_100250CC4(v9, v10);
  uint64_t v11 = a1[6];
  unint64_t v12 = a1[7];
  *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  sub_100250CC4(v11, v12);
  uint64_t v13 = *(void *)(a2 + 72);
  a1[8] = *(void *)(a2 + 64);
  a1[9] = v13;
  swift_bridgeObjectRelease();
  a1[10] = *(void *)(a2 + 80);
  return a1;
}

uint64_t _s14descr1008C8969V20IdentityShareRequestVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr1008C8969V20IdentityShareRequestVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s14descr1008C8969V20IdentityShareRequestVMa()
{
  return &_s14descr1008C8969V20IdentityShareRequestVN;
}

unint64_t sub_1003257C4(char a1)
{
  unint64_t result = 0x7265766965636552;
  switch(a1)
  {
    case 1:
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1003258A0(char a1)
{
  unint64_t result = 0x7265766965636552;
  switch(a1)
  {
    case 1:
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10032597C(unsigned __int8 *a1, char *a2)
{
  return sub_1005E8194(*a1, *a2);
}

Swift::Int sub_100325988()
{
  return sub_1005A9D64();
}

uint64_t sub_100325990()
{
  return sub_1005E9494();
}

Swift::Int sub_100325998()
{
  return sub_1005E9B84();
}

unint64_t sub_1003259A0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100325EF0(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1003259D0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1003257C4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1003259FC()
{
  return sub_1003258A0(*v0);
}

unint64_t sub_100325A04@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100325EF0(a1);
  *a2 = result;
  return result;
}

uint64_t sub_100325A2C(uint64_t a1)
{
  unint64_t v2 = sub_100326488();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100325A68(uint64_t a1)
{
  unint64_t v2 = sub_100326488();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100325AA4()
{
  v6[0] = 0;
  v6[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(44);
  uint64_t v4 = 0;
  unint64_t v5 = 0xE000000000000000;
  v1._object = (void *)0x80000001007B9640;
  v1._countAndFlagsBits = 0xD00000000000002ALL;
  String.append(_:)(v1);
  sub_100325E88(v0 + 16, (uint64_t)v6);
  sub_100325E88((uint64_t)v6, (uint64_t)&v3);
  sub_1002CE57C();
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  return v4;
}

uint64_t sub_100325B40(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000A844(&qword_10096F148);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  sub_100326488();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v12) = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v2)
  {
    sub_100325E88(v3 + 16, (uint64_t)v13);
    sub_100325E88((uint64_t)v13, (uint64_t)&v12);
    char v11 = 1;
    sub_1002CC290();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    long long v12 = *(_OWORD *)(v3 + 32);
    char v11 = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    long long v12 = *(_OWORD *)(v3 + 48);
    char v11 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v12) = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_100325D94@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100325F3C(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(void *)(a2 + 80) = v8;
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_100325DF0(void *a1)
{
  return sub_100325B40(a1);
}

uint64_t sub_100325E3C()
{
  return sub_100325AA4();
}

uint64_t sub_100325E88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_10096B260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100325EF0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008D29A0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 6) {
    return 6;
  }
  else {
    return v3;
  }
}

uint64_t sub_100325F3C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_10000A844(&qword_10096F138);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  sub_100326488();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    sub_10024D338((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_100250CB0(0, 0xF000000000000000);
    return v34;
  }
  else
  {
    LOBYTE(v36) = 0;
    uint64_t v9 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v11 = v10;
    char v38 = 1;
    unint64_t v12 = sub_1002CC1F4();
    swift_bridgeObjectRetain();
    unint64_t v35 = v12;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v30 = v9;
    uint64_t v31 = a2;
    uint64_t v13 = v36;
    unint64_t v14 = v37;
    char v38 = 2;
    sub_100278C78(v36, v37);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    char v38 = 3;
    uint64_t v33 = v36;
    unint64_t v29 = v37;
    sub_10025ADCC(v36, v37);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v15 = v36;
    LOBYTE(v36) = 4;
    uint64_t v34 = v15;
    unint64_t v35 = v37;
    sub_10025ADCC(v15, v37);
    uint64_t v28 = KeyedDecodingContainer.decode(_:forKey:)();
    LOBYTE(v36) = 5;
    uint64_t v32 = v16;
    swift_bridgeObjectRetain();
    uint64_t v17 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v27 = v17;
    v18(v8, v5);
    swift_bridgeObjectRetain();
    sub_100278C78(v13, v14);
    uint64_t v19 = v33;
    unint64_t v20 = v29;
    sub_10025ADCC(v33, v29);
    uint64_t v21 = v34;
    unint64_t v22 = v35;
    sub_10025ADCC(v34, v35);
    sub_100250CC4(v21, v22);
    sub_100250CC4(v19, v20);
    sub_100250CB0(v13, v14);
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_100250CB0(v13, v14);
    sub_100250CC4(v19, v20);
    sub_100250CC4(v21, v22);
    uint64_t v23 = v32;
    uint64_t result = swift_bridgeObjectRelease();
    id v25 = v31;
    *uint64_t v31 = v30;
    v25[1] = v11;
    void v25[2] = v13;
    uint64_t v25[3] = v14;
    v25[4] = v19;
    v25[5] = v20;
    v25[6] = v21;
    v25[7] = v22;
    v25[8] = v28;
    v25[9] = v23;
    v25[10] = v27;
  }
  return result;
}

unint64_t sub_100326488()
{
  unint64_t result = qword_10096F140;
  if (!qword_10096F140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096F140);
  }
  return result;
}

unsigned char *_s14descr1008C8969V20IdentityShareRequestV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003265A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr1008C8969V20IdentityShareRequestV10CodingKeysOMa()
{
  return &_s14descr1008C8969V20IdentityShareRequestV10CodingKeysON;
}

unint64_t sub_1003265E4()
{
  unint64_t result = qword_10096F150;
  if (!qword_10096F150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096F150);
  }
  return result;
}

unint64_t sub_10032663C()
{
  unint64_t result = qword_10096F158;
  if (!qword_10096F158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096F158);
  }
  return result;
}

unint64_t sub_100326694()
{
  unint64_t result = qword_10096F160;
  if (!qword_10096F160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096F160);
  }
  return result;
}

uint64_t sub_1003266E8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for URL();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v2[7] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferType();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_10032686C, v5, 0);
}

void sub_10032686C()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  SFAirDropReceive.AskRequest.type.getter();
  char v4 = SFAirDrop.TransferType.isLinks.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if ((v4 & 1) == 0)
  {
    uint64_t v24 = 0;
LABEL_28:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v25 = (void (*)(uint64_t))v0[1];
    v25(v24);
    return;
  }
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[3];
  uint64_t v7 = SFAirDropReceive.AskRequest.urlItems.getter();
  int64_t v8 = 0;
  uint64_t v26 = v7 + 56;
  uint64_t v9 = -1;
  uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
  if (-v10 < 64) {
    uint64_t v9 = ~(-1 << -(char)v10);
  }
  unint64_t v11 = v9 & *(void *)(v7 + 56);
  uint64_t v28 = v7;
  int64_t v27 = (unint64_t)(63 - v10) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v13 = v12 | (v8 << 6);
      goto LABEL_21;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v14 >= v27) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v27) {
        goto LABEL_26;
      }
      unint64_t v15 = *(void *)(v26 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v27) {
          goto LABEL_26;
        }
        unint64_t v15 = *(void *)(v26 + 8 * v8);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_21:
    uint64_t v17 = v0[7];
    uint64_t v18 = v0[4];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))(v17, *(void *)(v28 + 48) + *(void *)(v5 + 72) * v13, v18);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v17, 0, 1, v18);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v17, 1, v18) == 1)
    {
      swift_release();
      uint64_t v24 = 1;
      goto LABEL_27;
    }
    uint64_t v19 = v0[6];
    uint64_t v20 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 32))(v19, v0[7], v20);
    sub_1003ACB84(&off_1008D25B8);
    uint64_t v22 = v21;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v20);
    uint64_t v23 = *(void **)(v6 + 16);
    *(void *)(v6 + 16) = v22;

    if (!*(void *)(v6 + 16))
    {
      swift_release();
      uint64_t v24 = 0;
LABEL_27:
      swift_arrayDestroy();
      goto LABEL_28;
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v27)
  {
LABEL_26:
    uint64_t v24 = 1;
    (*(void (**)(void, uint64_t, uint64_t, void))(v5 + 56))(v0[7], 1, 1, v0[4]);
    swift_release();
    goto LABEL_27;
  }
  unint64_t v15 = *(void *)(v26 + 8 * v16);
  if (v15)
  {
    int64_t v8 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v8 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v8 >= v27) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v8);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_32:
  __break(1u);
}

uint64_t type metadata accessor for SDAirDropContentHandlerMapsLinks()
{
  return self;
}

uint64_t sub_100326BF8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerMapsLinks();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_100326C30(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_1003266E8(a1);
}

uint64_t sub_100326CCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_10097F1D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void **)(*(void *)v2 + 16);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v9 = type metadata accessor for SFAirDropReceive.ItemDestination();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  id v10 = v8;
  sub_10039FAA0(a1, v8, 1, a2);

  return sub_10000A7E8((uint64_t)v7, (uint64_t *)&unk_10097F1D0);
}

uint64_t sub_100326DE0(uint64_t a1, int a2)
{
  uint64_t v3 = sub_10000A844(&qword_10096B258);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v48 - v11;
  unint64_t v13 = *(void *)(SFAirDropReceive.AskRequest.urlItems.getter() + 16);
  swift_bridgeObjectRelease();
  SFAirDropReceive.AskRequest.itemsDescriptionAdvanced.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_10000A7E8((uint64_t)v5, &qword_10096B258);
    goto LABEL_10;
  }
  LODWORD(v48[0]) = a2;
  int64_t v14 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v14(v12, v5, v6);
  v14(v10, v12, v6);
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v10, v6) != enum case for SFAirDropReceive.AskRequest.AdvancedItemsDescription.maps(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    LOBYTE(a2) = v48[0];
    goto LABEL_10;
  }
  (*(void (**)(char *, uint64_t))(v7 + 96))(v10, v6);
  uint64_t v5 = (char *)*((void *)v10 + 2);
  swift_bridgeObjectRelease();
  uint64_t v15 = SFAirDropReceive.AskRequest.itemsDescription.getter();
  LOBYTE(a2) = v48[0];
  if (!v16)
  {
LABEL_10:
    sub_10000A844(&qword_10096D760);
    uint64_t inited = swift_initStackObject();
    v48[0] = xmmword_10076E7A0;
    *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
    *(void *)(inited + 32) = 0x4E494C5F5350414DLL;
    *(void *)(inited + 40) = 0xE90000000000004BLL;
    *(void *)(inited + 48) = v13;
    uint64_t v50 = 0x545F4E5245444F4DLL;
    unint64_t v51 = 0xEF524546534E4152;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24._countAndFlagsBits = 95;
    v24._object = (void *)0xE100000000000000;
    String.append(_:)(v24);
    v25._countAndFlagsBits = 0x4E494C5F5350414DLL;
    v25._object = (void *)0xE90000000000004BLL;
    String.append(_:)(v25);
    swift_bridgeObjectRelease();
    if (v13 > 1)
    {
      v26._countAndFlagsBits = 0x4C4152554C505FLL;
      v26._object = (void *)0xE700000000000000;
      String.append(_:)(v26);
    }
    swift_bridgeObjectRelease();
    if (a2)
    {
      v27._countAndFlagsBits = 0x4C4154495041435FLL;
      v27._object = (void *)0xEC00000044455A49;
      String.append(_:)(v27);
    }
    v28._countAndFlagsBits = 0x545845545FLL;
    v28._object = (void *)0xE500000000000000;
    String.append(_:)(v28);
    swift_setDeallocating();
    sub_10000A844((uint64_t *)&unk_100977CB0);
    swift_arrayDestroy();
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v30 = (id)SFLocalizedStringForKey();

    if (!v30)
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      uint64_t v50 = 0;
      unint64_t v51 = 0xE000000000000000;
      _StringGuts.grow(_:)(32);
      v46._countAndFlagsBits = 0x6E696C207370614DLL;
      v46._object = (void *)0xEF2065707974206BLL;
      String.append(_:)(v46);
      objc_super v49 = v5;
      type metadata accessor for SFAirDropMapsLinkType(0);
      _print_unlocked<A, B>(_:_:)();
      v47._countAndFlagsBits = 0x20746F6E20736920;
      v47._object = (void *)0xEF64656C646E6168;
      String.append(_:)(v47);
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      JUMPOUT(0x10032769CLL);
    }
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = v48[0];
    *(void *)(v31 + 56) = &type metadata for Int;
    *(void *)(v31 + 64) = &protocol witness table for Int;
    *(void *)(v31 + 32) = v13;
    goto LABEL_16;
  }
  uint64_t v17 = v16;
  if (v13 != 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v18 = v15;
  switch((unint64_t)v5)
  {
    case 0uLL:
      sub_10000A844(&qword_10096D760);
      uint64_t v19 = swift_initStackObject();
      uint64_t v20 = v19;
      uint64_t v21 = 0xD00000000000001ALL;
      *(void *)(v19 + 32) = 0xD00000000000001ALL;
      *(_OWORD *)(v19 + 16) = xmmword_10076E7A0;
      uint64_t v22 = "MAPS_LINK_CURRENT_LOCATION";
      goto LABEL_18;
    case 1uLL:
      sub_10000A844(&qword_10096D760);
      uint64_t v20 = swift_initStackObject();
      *(void *)(v20 + 32) = 0xD000000000000014;
      *(_OWORD *)(v20 + 16) = xmmword_10076E7A0;
      *(void *)(v20 + 40) = 0x80000001007B9720;
      *(void *)(v20 + 48) = 1;
      uint64_t v50 = 0x545F4E5245444F4DLL;
      unint64_t v51 = 0xEF524546534E4152;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v39._countAndFlagsBits = 95;
      v39._object = (void *)0xE100000000000000;
      String.append(_:)(v39);
      v40._countAndFlagsBits = 0xD000000000000014;
      v40._object = (void *)0x80000001007B9720;
      String.append(_:)(v40);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    case 2uLL:
      sub_10000A844(&qword_10096D760);
      uint64_t v19 = swift_initStackObject();
      uint64_t v20 = v19;
      uint64_t v21 = 0xD000000000000015;
      *(void *)(v19 + 32) = 0xD000000000000015;
      *(_OWORD *)(v19 + 16) = xmmword_10076E7A0;
      uint64_t v22 = "MAPS_LINK_DROPPED_PIN";
LABEL_18:
      uint64_t v34 = (void *)((unint64_t)(v22 - 32) | 0x8000000000000000);
      *(void *)(v19 + 40) = v34;
      *(void *)(v19 + 48) = 1;
      uint64_t v50 = 0x545F4E5245444F4DLL;
      unint64_t v51 = 0xEF524546534E4152;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35._countAndFlagsBits = 95;
      v35._object = (void *)0xE100000000000000;
      String.append(_:)(v35);
      v36._countAndFlagsBits = v21;
      v36._object = v34;
      String.append(_:)(v36);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    case 3uLL:
      sub_10000A844(&qword_10096D760);
      uint64_t v20 = swift_initStackObject();
      *(_OWORD *)(v20 + 16) = xmmword_10076E7A0;
      strcpy((char *)(v20 + 32), "MAPS_LINK_POI");
      *(_WORD *)(v20 + 46) = -4864;
      *(void *)(v20 + 48) = 1;
      uint64_t v50 = 0x545F4E5245444F4DLL;
      unint64_t v51 = 0xEF524546534E4152;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v37._countAndFlagsBits = 95;
      v37._object = (void *)0xE100000000000000;
      String.append(_:)(v37);
      v38._countAndFlagsBits = 0x4E494C5F5350414DLL;
      v38._object = (void *)0xED0000494F505F4BLL;
      String.append(_:)(v38);
      swift_bridgeObjectRelease();
LABEL_21:
      swift_bridgeObjectRelease();
      if (a2)
      {
        v41._countAndFlagsBits = 0x4C4154495041435FLL;
        v41._object = (void *)0xEC00000044455A49;
        String.append(_:)(v41);
      }
      v42._countAndFlagsBits = 0x545845545FLL;
      v42._object = (void *)0xE500000000000000;
      String.append(_:)(v42);
      swift_setDeallocating();
      uint64_t v5 = *(char **)(v20 + 16);
      sub_10000A844((uint64_t *)&unk_100977CB0);
      swift_arrayDestroy();
      NSString v43 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v44 = (id)SFLocalizedStringForKey();

      if (!v44) {
        goto LABEL_26;
      }
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10000A844((uint64_t *)&unk_10096EE60);
      uint64_t v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = xmmword_10076E7A0;
      *(void *)(v45 + 56) = &type metadata for String;
      *(void *)(v45 + 64) = sub_1002E695C();
      *(void *)(v45 + 32) = v18;
      *(void *)(v45 + 40) = v17;
      break;
    default:
      goto LABEL_27;
  }
LABEL_16:
  uint64_t v32 = static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_1003276AC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10096F250);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10096F250);
  if (qword_100969CD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946C0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100327774()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = (void *)swift_allocObject();
  void v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  v6[5] = v1;
  swift_retain();
  sub_10028CFA8((uint64_t)v4, (uint64_t)&unk_10096FD18, (uint64_t)v6);
  return swift_release();
}

uint64_t sub_100327898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a4;
  v5[11] = a5;
  sub_10000A844(&qword_10096C920);
  v5[12] = swift_task_alloc();
  return _swift_task_switch(sub_10032792C, 0, 0);
}

uint64_t sub_10032792C()
{
  uint64_t v20 = v0;
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = type metadata accessor for TaskPriority();
  long long v18 = *(_OWORD *)(v0 + 80);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_OWORD *)(v3 + 32) = v18;
  swift_retain();
  *(void *)(v18 + 40) = sub_10028CFA8(v1, (uint64_t)&unk_10096FD28, v3);
  swift_release();
  if (qword_100969BD8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_10096F250);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.info.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 80);
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    *(void *)(v0 + 64) = v8;
    type metadata accessor for SDAuthenticationNearbyActionAdvertiser();
    swift_retain();
    uint64_t v10 = String.init<A>(describing:)();
    *(void *)(v0 + 72) = sub_100254634(v10, v11, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s Starting NearbyActionV1 advertise", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v12 = *(void **)(*(void *)(v0 + 80) + 24);
  NSString v13 = String._bridgeToObjectiveC()();
  [v12 setLabel:v13];

  [v12 setIdentifier:SFServiceIdentifierAutoUnlock];
  [v12 setDeviceActionType:55];
  [v12 setAdvertiseRate:30];
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  *(void *)(v0 + 48) = sub_100334B28;
  *(void *)(v0 + 56) = v14;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_1006B210C;
  *(void *)(v0 + 40) = &unk_1008D7030;
  uint64_t v15 = _Block_copy((const void *)(v0 + 16));
  swift_release();
  [v12 activateWithCompletion:v15];
  _Block_release(v15);
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_100327D30()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10000A6F0;
  return sub_100328450(60);
}

void sub_100327DC4(uint64_t a1)
{
  if (a1)
  {
    if (qword_100969BD8 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_10000B47C(v1, (uint64_t)qword_10096F250);
    swift_retain();
    swift_errorRetain();
    swift_retain();
    swift_errorRetain();
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v2))
    {
      uint64_t v3 = swift_slowAlloc();
      uint64_t v4 = (void *)swift_slowAlloc();
      v16[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v3 = 136315394;
      swift_beginAccess();
      swift_weakLoadStrong();
      sub_10000A844(&qword_10096FD30);
      uint64_t v5 = String.init<A>(describing:)();
      sub_100254634(v5, v6, v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v3 + 12) = 2112;
      swift_errorRetain();
      uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v4 = v15;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, "%s: Encountered error while trying to activate NearbyAction advertiser: %@", (uint8_t *)v3, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    if (qword_100969BD8 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10000B47C(v7, (uint64_t)qword_10096F250);
    swift_retain_n();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      v17[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      swift_beginAccess();
      swift_weakLoadStrong();
      sub_10000A844(&qword_10096FD30);
      uint64_t v11 = String.init<A>(describing:)();
      sub_100254634(v11, v12, v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s: Started NearbyAction advertiser", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }

    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      *(unsigned char *)(Strong + 16) = 1;
      swift_release();
    }
  }
}

id sub_100328244()
{
  uint64_t v1 = v0;
  if (qword_100969BD8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10096F250);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    type metadata accessor for SDAuthenticationNearbyActionAdvertiser();
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    uint64_t v9 = sub_100254634(v6, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s: Stopping advertiser", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  if (*(void *)(v1 + 40))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  id result = [*(id *)(v1 + 24) invalidate:v9, v10];
  *(unsigned char *)(v1 + 16) = 0;
  return result;
}

uint64_t sub_100328450(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  uint64_t v3 = type metadata accessor for ContinuousClock.Instant();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for ContinuousClock();
  v2[12] = v4;
  v2[13] = *(void *)(v4 - 8);
  v2[14] = swift_task_alloc();
  return _swift_task_switch(sub_10032857C, 0, 0);
}

uint64_t sub_10032857C()
{
  long long v18 = v0;
  ContinuousClock.init()();
  if (qword_100969BD8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[15] = sub_10000B47C(v1, (uint64_t)qword_10096F250);
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[7];
  if (v4)
  {
    uint64_t v16 = v0[6];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    v0[3] = v5;
    type metadata accessor for SDAuthenticationNearbyActionAdvertiser();
    swift_retain();
    uint64_t v7 = String.init<A>(describing:)();
    v0[4] = sub_100254634(v7, v8, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2048;
    v0[5] = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s: Starting timer for %ld sec", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v9 = v0[10];
  uint64_t v10 = v0[8];
  uint64_t v11 = v0[9];
  static ContinuousClock.now.getter();
  ContinuousClock.Instant.advanced(by:)();
  unint64_t v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[16] = v12;
  v0[17] = (v11 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v12(v9, v10);
  NSString v13 = (void *)swift_task_alloc();
  v0[18] = v13;
  *NSString v13 = v0;
  v13[1] = sub_10032887C;
  uint64_t v14 = v0[11];
  return ContinuousClock.sleep(until:tolerance:)(v14, 0, 0, 1);
}

uint64_t sub_10032887C()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 128);
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0) {
    uint64_t v5 = sub_100328AA8;
  }
  else {
    uint64_t v5 = sub_1003289FC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003289FC()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[12];
  sub_100328CA0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100328AA8()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Ran into error creating timer: %@", v3, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = v0[13];
  uint64_t v6 = v0[14];
  uint64_t v8 = v0[12];
  sub_100328CA0();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

id sub_100328CA0()
{
  if (qword_100969BD8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_10096F250);
  swift_retain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    type metadata accessor for SDAuthenticationNearbyActionAdvertiser();
    swift_retain();
    uint64_t v4 = String.init<A>(describing:)();
    sub_100254634(v4, v5, &v7);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s: Timer fired", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  return sub_100328244();
}

uint64_t sub_100328E68()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDAuthenticationNearbyActionAdvertiser()
{
  return self;
}

uint64_t sub_100328ED4()
{
  *(void *)(v1 + 120) = v0;
  return _swift_task_switch(sub_100328EF4, 0, 0);
}

uint64_t sub_100328EF4()
{
  uint64_t v16 = v0;
  uint64_t v1 = v0;
  os_log_type_t v2 = v0 + 10;
  if (qword_100969BD8 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  v1[16] = sub_10000B47C(v3, (uint64_t)qword_10096F250);
  swift_retain_n();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.info.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v1[15];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    v1[10] = v7;
    type metadata accessor for SDAuthenticationNearbyInfoAdvertiser();
    swift_retain();
    uint64_t v9 = String.init<A>(describing:)();
    v1[10] = sub_100254634(v9, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s Starting NearbyInfo advertise", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v11 = *(void **)(v1[15] + 16);
  NSString v12 = String._bridgeToObjectiveC()();
  [v11 setLabel:v12];

  [v11 setAdvertiseRate:40];
  v1[2] = v1;
  v1[3] = sub_1003291E8;
  uint64_t v13 = swift_continuation_init();
  v1[10] = _NSConcreteStackBlock;
  v1[11] = 0x40000000;
  v1[12] = sub_10036188C;
  v1[13] = &unk_1008D6FA0;
  v1[14] = v13;
  [v11 activateWithCompletion:v2];
  return _swift_continuation_await(v1 + 2);
}

uint64_t sub_1003291E8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 136) = v1;
  if (v1) {
    os_log_type_t v2 = sub_1003294B4;
  }
  else {
    os_log_type_t v2 = sub_1003292F8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003292F8()
{
  uint64_t v11 = v0;
  swift_retain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[15];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v10 = v5;
    v0[10] = v3;
    type metadata accessor for SDAuthenticationNearbyInfoAdvertiser();
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    v0[10] = sub_100254634(v6, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s: Started NearbyInfo advertiser", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1003294B4()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_100329520()
{
  return sub_100329AE8((void (*)(uint64_t, uint64_t))type metadata accessor for SDAuthenticationNearbyInfoAdvertiser, "%s: Stopping advertiser");
}

uint64_t type metadata accessor for SDAuthenticationNearbyInfoAdvertiser()
{
  return self;
}

uint64_t sub_100329564(uint64_t a1)
{
  id v3 = [objc_allocWithZone((Class)CBDiscovery) init];
  *(void *)(v1 + 16) = v3;
  id v4 = v3;
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 setLabel:v5];

  uint64_t v6 = *(void **)(v1 + 16);
  [v6 setUseCase:131088];
  [v6 setBleRSSIThresholdHint:4294967236];
  [v6 setBleScanRate:0];
  id v7 = v6;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v7 setDeviceFilter:isa];

  *(void *)(v1 + 24) = a1;
  return v1;
}

uint64_t sub_100329678()
{
  *(void *)(v1 + 120) = v0;
  return _swift_task_switch(sub_100329698, 0, 0);
}

uint64_t sub_100329698()
{
  uint64_t v15 = v0;
  uint64_t v1 = v0;
  os_log_type_t v2 = v0 + 10;
  if (qword_100969BD8 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000B47C(v3, (uint64_t)qword_10096F250);
  swift_retain_n();
  id v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v1[15];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    v1[10] = v7;
    type metadata accessor for SDAuthenticationBioArmScanner();
    swift_retain();
    uint64_t v9 = String.init<A>(describing:)();
    v1[10] = sub_100254634(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s: Scan starting", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v11 = *(void **)(v1[15] + 16);
  v1[2] = v1;
  v1[3] = sub_100329934;
  uint64_t v12 = swift_continuation_init();
  v1[10] = _NSConcreteStackBlock;
  v1[11] = 0x40000000;
  v1[12] = sub_10036188C;
  v1[13] = &unk_1008D6F88;
  v1[14] = v12;
  [v11 activateWithCompletion:v2];
  return _swift_continuation_await(v1 + 2);
}

uint64_t sub_100329934()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 128) = v1;
  if (v1) {
    os_log_type_t v2 = sub_100329A5C;
  }
  else {
    os_log_type_t v2 = sub_100329A44;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100329A44()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100329A5C()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_100329AC8()
{
  return sub_100329AE8((void (*)(uint64_t, uint64_t))type metadata accessor for SDAuthenticationBioArmScanner, "%s: Scan stopping");
}

id sub_100329AE8(void (*a1)(uint64_t, uint64_t), const char *a2)
{
  uint64_t v5 = v2;
  if (qword_100969BD8 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_10096F250);
  swift_retain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    a1(v10, v11);
    swift_retain();
    uint64_t v12 = String.init<A>(describing:)();
    sub_100254634(v12, v13, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, a2, v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  return [*(id *)(v5 + 16) invalidate];
}

void sub_100329CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_10096F950);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = *(void **)(a2 + 16);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v8;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_100333F58;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10032A9D8;
  aBlock[3] = &unk_1008D6CE0;
  uint64_t v11 = _Block_copy(aBlock);
  swift_release();
  [v7 setDeviceFoundHandler:v11];
  _Block_release(v11);
}

void sub_100329E94(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v65 = a3;
  uint64_t v5 = sub_10000A844(&qword_10096FC28);
  uint64_t v64 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v63 = (void **)((char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_100969BD8 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = sub_10000B47C(v7, (uint64_t)qword_10096F250);
  swift_retain_n();
  id v9 = a1;
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v59 = (void *)swift_slowAlloc();
    uint64_t v60 = swift_slowAlloc();
    v69[0] = v60;
    *(_DWORD *)uint64_t v12 = 136315394;
    uint64_t v61 = v5;
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    sub_10000A844(&qword_10096FC70);
    uint64_t v62 = a2 + 16;
    uint64_t v13 = String.init<A>(describing:)();
    uint64_t Strong = sub_100254634(v13, v14, v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2112;
    uint64_t Strong = (uint64_t)v9;
    id v15 = v9;
    uint64_t v5 = v61;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v59 = v9;

    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s: Found unfiltered device: %@", (uint8_t *)v12, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_beginAccess();
  uint64_t v16 = swift_weakLoadStrong();
  if (!v16)
  {
    swift_retain_n();
    Swift::String v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v36, v37))
    {
      Swift::String v38 = (uint8_t *)swift_slowAlloc();
      v66[0] = swift_slowAlloc();
      *(_DWORD *)Swift::String v38 = 136315138;
      swift_beginAccess();
      uint64_t v67 = swift_weakLoadStrong();
      sub_10000A844(&qword_10096FC70);
      uint64_t v39 = String.init<A>(describing:)();
      uint64_t v67 = sub_100254634(v39, v40, v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "%s: self isn't initialized", v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }

LABEL_20:
    swift_release_n();
    return;
  }
  uint64_t v17 = v16;
  id v18 = [v9 identifier];
  if (!v18)
  {
    swift_retain_n();
    id v41 = v9;
    Swift::String v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      v66[0] = v65;
      *(_DWORD *)uint64_t v44 = 136315394;
      swift_beginAccess();
      uint64_t v67 = swift_weakLoadStrong();
      sub_10000A844(&qword_10096FC70);
      uint64_t v45 = String.init<A>(describing:)();
      uint64_t v67 = sub_100254634(v45, v46, v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2112;
      uint64_t v67 = (uint64_t)v41;
      id v47 = v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(void *)uint64_t v64 = v41;

      _os_log_impl((void *)&_mh_execute_header, v42, v43, "%s: Ignoring device without identifier: %@", (uint8_t *)v44, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();

      return;
    }

    swift_release();
    goto LABEL_20;
  }
  uint64_t v19 = v18;
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  uint64_t v23 = *(void **)(v17 + 24);
  if (!v23[2])
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  char v24 = sub_100361924(v20, v22, v23);
  swift_bridgeObjectRelease();
  if (v24)
  {
LABEL_18:
    uint64_t Strong = (uint64_t)v9;
    id v48 = v9;
    sub_10000A844((uint64_t *)&unk_10096F950);
    objc_super v49 = v63;
    AsyncStream.Continuation.yield(_:)();
    swift_release();
    (*(void (**)(void *, uint64_t))(v64 + 8))(v49, v5);
    return;
  }
  swift_retain_n();
  id v25 = v9;
  swift_retain_n();
  id v26 = v25;
  Swift::String v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v63 = (void *)swift_slowAlloc();
    uint64_t v64 = swift_slowAlloc();
    v66[0] = v64;
    *(_DWORD *)uint64_t v29 = 136315650;
    swift_beginAccess();
    uint64_t v67 = swift_weakLoadStrong();
    sub_10000A844(&qword_10096FC70);
    uint64_t v30 = String.init<A>(describing:)();
    uint64_t v65 = v8;
    uint64_t v67 = sub_100254634(v30, v31, v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v32 = Array.description.getter();
    unint64_t v34 = v33;
    swift_bridgeObjectRelease();
    uint64_t v67 = sub_100254634(v32, v34, v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 22) = 2112;
    uint64_t v67 = (uint64_t)v26;
    id v35 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v63 = v26;

    _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s: Ignoring device not in device filter. Filter: %s, device: %@", (uint8_t *)v29, 0x20u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
  id v50 = v26;
  unint64_t v51 = Logger.logObject.getter();
  os_log_type_t v52 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = (uint8_t *)swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    *(_DWORD *)uint64_t v53 = 136315138;
    id v54 = [v50 idsDeviceID];
    if (v54)
    {
      uint64_t v55 = v54;
      unint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v58 = v57;
    }
    else
    {
      v66[0] = 0;
      v66[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v58 = 0x80000001007B7770;
      unint64_t v56 = 0xD000000000000015;
    }
    v66[0] = sub_100254634(v56, v58, &v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v51, v52, "Ids id: %s", v53, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
  }
  else
  {

    swift_release();
  }
}

uint64_t sub_10032A9DC()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDAuthenticationBioArmScanner()
{
  return self;
}

uint64_t sub_10032AA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_10000A6F4;
  v6[15] = a4;
  return _swift_task_switch(sub_100329698, 0, 0);
}

uint64_t sub_10032AAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[14] = a4;
  v5[15] = a5;
  uint64_t v6 = sub_10000A844(&qword_10096FC28);
  v5[16] = v6;
  v5[17] = *(void *)(v6 - 8);
  v5[18] = swift_task_alloc();
  uint64_t v7 = sub_10000A844(&qword_10096FC30);
  v5[19] = v7;
  v5[20] = *(void *)(v7 - 8);
  v5[21] = swift_task_alloc();
  uint64_t v8 = sub_10000A844(&qword_10096FC38);
  v5[22] = v8;
  v5[23] = *(void *)(v8 - 8);
  v5[24] = swift_task_alloc();
  uint64_t v9 = sub_10000A844(&qword_10096FC40);
  v5[25] = v9;
  v5[26] = *(void *)(v9 - 8);
  v5[27] = swift_task_alloc();
  return _swift_task_switch(sub_10032ACD0, 0, 0);
}

uint64_t sub_10032ACD0()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v4 = v0[21];
  uint64_t v3 = v0[22];
  uint64_t v6 = v0[19];
  uint64_t v5 = v0[20];
  sub_10000B740(0, &qword_10096FC48);
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v6);
  AsyncStream.init(_:bufferingPolicy:_:)();
  AsyncStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  swift_beginAccess();
  swift_beginAccess();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[28] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_10032AE80;
  uint64_t v8 = v0[25];
  return AsyncStream.Iterator.next(isolation:)(v0 + 11, 0, 0, v8);
}

uint64_t sub_10032AE80()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10032AF7C, 0, 0);
}

uint64_t sub_10032AF7C()
{
  uint64_t v50 = v0;
  uint64_t v1 = *(void **)(v0 + 88);
  if (v1)
  {
    if (([*(id *)(v0 + 88) nearbyInfoFlags] & 0x20) == 0)
    {
      if (qword_100969BD8 != -1) {
        swift_once();
      }
      uint64_t v2 = type metadata accessor for Logger();
      sub_10000B47C(v2, (uint64_t)qword_10096F250);
      uint64_t v3 = Logger.logObject.getter();
      os_log_type_t v4 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v3, v4))
      {
        uint64_t v5 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v5 = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, v4, "Device isn't advertising watchLocked. Ignoring", v5, 2u);
        swift_slowDealloc();
      }
      else
      {
      }
      goto LABEL_37;
    }
    id v8 = [v1 idsDeviceID];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = *(void *)(v0 + 112);
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      uint64_t v14 = *(void *)(v10 + 32);
      if (*(void *)(v14 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_1005838BC(v11, v13);
        if (v16) {
          char v17 = *(unsigned char *)(*(void *)(v14 + 56) + v15);
        }
        else {
          char v17 = 0x80;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v17 = 0x80;
      }
      uint64_t v27 = *(void *)(v0 + 112);
      signed int v28 = [v1 rssi];
      uint64_t v29 = *(void *)(v27 + 40);
      swift_bridgeObjectRetain();
      char v30 = sub_10057BE20(v11, v13, v29);
      swift_bridgeObjectRelease();
      if ((v30 & 1) == 0 || v28 > v17)
      {
        uint64_t v35 = *(void *)(v0 + 112);
        swift_beginAccess();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v49 = *(void *)(v35 + 32);
        *(void *)(v35 + 32) = 0x8000000000000000;
        sub_100593198(v28, v11, v13, isUniquelyReferenced_nonNull_native);
        *(void *)(v35 + 32) = v49;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        if (qword_100969BD8 != -1) {
          swift_once();
        }
        uint64_t v37 = type metadata accessor for Logger();
        sub_10000B47C(v37, (uint64_t)qword_10096F250);
        id v38 = v1;
        uint64_t v39 = Logger.logObject.getter();
        os_log_type_t v40 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v39, v40))
        {
          uint64_t v41 = swift_slowAlloc();
          Swift::String v42 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v41 = 138412290;
          *(void *)(v41 + 4) = v38;
          void *v42 = v1;

          _os_log_impl((void *)&_mh_execute_header, v39, v40, "Found unarmed device! %@", (uint8_t *)v41, 0xCu);
          sub_10000A844(&qword_10096B850);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        uint64_t v44 = *(void *)(v0 + 136);
        uint64_t v43 = *(void *)(v0 + 144);
        uint64_t v45 = *(void *)(v0 + 128);
        *(void *)(v0 + 104) = v38;
        sub_10000A844((uint64_t *)&unk_10096F950);
        AsyncStream.Continuation.yield(_:)();
        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      if (qword_100969BD8 != -1) {
        swift_once();
      }
      uint64_t v31 = type metadata accessor for Logger();
      sub_10000B47C(v31, (uint64_t)qword_10096F250);
      id v19 = v1;
      uint64_t v20 = Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v20, v32))
      {

        goto LABEL_37;
      }
      uint64_t v33 = swift_slowAlloc();
      unint64_t v34 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 16777986;
      *(unsigned char *)(v33 + 4) = v17;
      *(_WORD *)(v33 + 5) = 256;
      *(unsigned char *)(v33 + 7) = v28;
      *(_WORD *)(v33 + 8) = 2112;
      *(void *)(v33 + 10) = v19;
      *unint64_t v34 = v1;
      _os_log_impl((void *)&_mh_execute_header, v20, v32, "Ignoring device due to lower RSSI (old: %hhd, new: %hhd). Device: %@", (uint8_t *)v33, 0x12u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
    }
    else
    {
      if (qword_100969BD8 != -1) {
        swift_once();
      }
      uint64_t v18 = type metadata accessor for Logger();
      sub_10000B47C(v18, (uint64_t)qword_10096F250);
      swift_retain_n();
      id v19 = v1;
      uint64_t v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.debug.getter();
      BOOL v22 = os_log_type_enabled(v20, v21);
      uint64_t v23 = *(void *)(v0 + 112);
      if (!v22)
      {

        swift_release_n();
        goto LABEL_37;
      }
      uint64_t v24 = swift_slowAlloc();
      id v48 = (void *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136315394;
      *(void *)(v0 + 96) = v23;
      type metadata accessor for SDAuthenticationBioArmNearbyInfoScanner();
      swift_retain();
      uint64_t v25 = String.init<A>(describing:)();
      *(void *)(v24 + 4) = sub_100254634(v25, v26, &v49);
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v24 + 12) = 2112;
      *(void *)(v24 + 14) = v19;
      *id v48 = v1;

      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s: Ignoring device with IDS device ID: %@", (uint8_t *)v24, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
    }
    swift_slowDealloc();

LABEL_37:
    unint64_t v46 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v46;
    *unint64_t v46 = v0;
    v46[1] = sub_10032AE80;
    uint64_t v47 = *(void *)(v0 + 200);
    return AsyncStream.Iterator.next(isolation:)(v0 + 88, 0, 0, v47);
  }
  (*(void (**)(void, void))(*(void *)(v0 + 208) + 8))(*(void *)(v0 + 216), *(void *)(v0 + 200));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_10032B760()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10032B790()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDAuthenticationBioArmNearbyInfoScanner()
{
  return self;
}

uint64_t sub_10032B804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_10000A6F0;
  v6[15] = a4;
  return _swift_task_switch(sub_100329698, 0, 0);
}

uint64_t sub_10032B8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_10000A844((uint64_t *)&unk_10096F950);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v14 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = 0;
  *((void *)v15 + 3) = 0;
  *((void *)v15 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v15[v14], (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  swift_retain();
  sub_10028CFA8((uint64_t)v12, a4, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_10032BA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  uint64_t v6 = sub_10000A844(&qword_10096FC28);
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  uint64_t v7 = sub_10000A844(&qword_10096FC30);
  v5[11] = v7;
  v5[12] = *(void *)(v7 - 8);
  v5[13] = swift_task_alloc();
  uint64_t v8 = sub_10000A844(&qword_10096FC38);
  v5[14] = v8;
  v5[15] = *(void *)(v8 - 8);
  v5[16] = swift_task_alloc();
  uint64_t v9 = sub_10000A844(&qword_10096FC40);
  v5[17] = v9;
  v5[18] = *(void *)(v9 - 8);
  v5[19] = swift_task_alloc();
  return _swift_task_switch(sub_10032BC68, 0, 0);
}

uint64_t sub_10032BC68()
{
  uint64_t v1 = v0;
  uint64_t v11 = v0 + 2;
  uint64_t v3 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v5 = v0[13];
  uint64_t v4 = v0[14];
  uint64_t v6 = v0[12];
  uint64_t v7 = v1[11];
  sub_10000B740(0, &qword_10096FC48);
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v7);
  AsyncStream.init(_:bufferingPolicy:_:)();
  AsyncStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v8 = (void *)swift_task_alloc();
  v1[20] = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_10032BDE8;
  uint64_t v9 = v1[17];
  return AsyncStream.Iterator.next(isolation:)(v11, 0, 0, v9);
}

uint64_t sub_10032BDE8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10032BEE4, 0, 0);
}

uint64_t sub_10032BEE4()
{
  uint64_t v30 = v0;
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
    if ([*(id *)(v0 + 16) nearbyActionType] == 55)
    {
      if (qword_100969BD8 != -1) {
        swift_once();
      }
      uint64_t v2 = type metadata accessor for Logger();
      sub_10000B47C(v2, (uint64_t)qword_10096F250);
      swift_retain_n();
      id v3 = v1;
      uint64_t v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.default.getter();
      BOOL v6 = os_log_type_enabled(v4, v5);
      uint64_t v7 = *(void *)(v0 + 48);
      if (v6)
      {
        uint64_t v8 = swift_slowAlloc();
        uint64_t v27 = (void *)swift_slowAlloc();
        uint64_t v29 = swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 136315394;
        *(void *)(v0 + 40) = v7;
        type metadata accessor for SDAuthenticationBioArmNearbyActionScanner();
        swift_retain();
        uint64_t v9 = String.init<A>(describing:)();
        *(void *)(v8 + 4) = sub_100254634(v9, v10, &v29);
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v8 + 12) = 2112;
        *(void *)(v8 + 14) = v3;
        *uint64_t v27 = v1;

        _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s: Needs arming! NearbyActionV1 Device: %@", (uint8_t *)v8, 0x16u);
        sub_10000A844(&qword_10096B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();
      }
      uint64_t v23 = *(void *)(v0 + 72);
      uint64_t v22 = *(void *)(v0 + 80);
      uint64_t v24 = *(void *)(v0 + 64);
      *(void *)(v0 + 32) = v3;
      sub_10000A844((uint64_t *)&unk_10096F950);
      AsyncStream.Continuation.yield(_:)();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    }
    else
    {
      if (qword_100969BD8 != -1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      sub_10000B47C(v13, (uint64_t)qword_10096F250);
      swift_retain_n();
      id v14 = v1;
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.default.getter();
      BOOL v17 = os_log_type_enabled(v15, v16);
      uint64_t v18 = *(void *)(v0 + 48);
      if (v17)
      {
        uint64_t v19 = swift_slowAlloc();
        signed int v28 = (void *)swift_slowAlloc();
        uint64_t v29 = swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 136315394;
        *(void *)(v0 + 24) = v18;
        type metadata accessor for SDAuthenticationBioArmNearbyActionScanner();
        swift_retain();
        uint64_t v20 = String.init<A>(describing:)();
        *(void *)(v19 + 4) = sub_100254634(v20, v21, &v29);
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v19 + 12) = 2112;
        *(void *)(v19 + 14) = v14;
        *signed int v28 = v1;

        _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s: Device %@ does not have AUAction bit set", (uint8_t *)v19, 0x16u);
        sub_10000A844(&qword_10096B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
    }
    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_10032BDE8;
    uint64_t v26 = *(void *)(v0 + 136);
    return AsyncStream.Iterator.next(isolation:)(v0 + 16, 0, 0, v26);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 144) + 8))(*(void *)(v0 + 152), *(void *)(v0 + 136));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t type metadata accessor for SDAuthenticationBioArmNearbyActionScanner()
{
  return self;
}

uint64_t sub_10032C478(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = [objc_allocWithZone((Class)RPCompanionLinkClient) init];
  *(void *)(v4 + 16) = v8;
  [v8 setControlFlags:a2];
  id v9 = v8;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v9 setDeviceFilter:isa];

  if ((a4 & 0x100000000) == 0)
  {
    uint64_t v11 = *(void **)(v4 + 16);
    if (([v11 controlFlags] & 0x10000) != 0)
    {
      id v12 = v11;
      [v12 setBleScreenOffScanRate:a4];
    }
  }

  return v4;
}

uint64_t sub_10032C564(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000A844(&qword_10096FCE0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100969BD8 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000B47C(v8, (uint64_t)qword_10096F250);
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Scanning for found devices", v11, 2u);
    swift_slowDealloc();
  }

  sub_10000B740(0, &qword_10096FCE8);
  uint64_t v12 = (*(uint64_t (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for AsyncThrowingStream.Continuation.BufferingPolicy.unbounded<A, B>(_:), v4);
  __chkstk_darwin(v12);
  *(&v14 - 4) = a1;
  *(&v14 - 3) = v2;
  *((unsigned char *)&v14 - 16) = 1;
  return AsyncThrowingStream.init<>(_:bufferingPolicy:_:)();
}

void sub_10032C77C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  LODWORD(v4) = a4;
  uint64_t v8 = sub_10000A844(&qword_10096FCF0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = v10;
  uint64_t v48 = a1;
  if (a2 < 1)
  {
    if (qword_100969BD8 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_10000B47C(v19, (uint64_t)qword_10096F250);
    swift_retain_n();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      LODWORD(v46) = v4;
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = (void **)swift_slowAlloc();
      uint64_t v49 = a3;
      aBlock = v45;
      *(_DWORD *)uint64_t v22 = 136315138;
      v43[1] = v22 + 4;
      unint64_t v44 = (unint64_t)v22;
      type metadata accessor for SDAuthenticationNearbyInfoTemporaryScanner();
      swift_retain();
      uint64_t v23 = String.init<A>(describing:)();
      uint64_t v49 = sub_100254634(v23, v24, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      LOBYTE(v4) = (_BYTE)v46;
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s: Scanning indefinitely", (uint8_t *)v44, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }
  }
  else
  {
    uint64_t v15 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
    char v16 = v4;
    unint64_t v4 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    BOOL v17 = (void *)swift_allocObject();
    v17[2] = 0;
    uint64_t v17[3] = 0;
    v17[4] = a3;
    v17[5] = a2;
    uint64_t v18 = (char *)v17 + v4;
    LOBYTE(v4) = v16;
    a1 = v48;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v18, (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
    swift_retain();
    sub_10028CFA8((uint64_t)v14, (uint64_t)&unk_10096FD00, (uint64_t)v17);
    swift_release();
  }
  uint64_t v25 = *(void **)(a3 + 16);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v26 = v9 + 16;
  unint64_t v46 = v27;
  v27(v11, a1, v8);
  uint64_t v28 = v8;
  uint64_t v29 = a3;
  uint64_t v30 = *(unsigned __int8 *)(v26 + 64);
  unint64_t v44 = ~v30;
  uint64_t v31 = (v30 + 24) & ~v30;
  os_log_type_t v32 = (void (**)(uint64_t, char *, uint64_t))(v26 + 16);
  uint64_t v45 = (void **)(v30 | 7);
  if (v4)
  {
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v29;
    uint64_t v34 = v33 + v31;
    uint64_t v35 = *v32;
    (*v32)(v34, v11, v28);
    id v54 = sub_100334798;
    uint64_t v55 = v33;
    aBlock = _NSConcreteStackBlock;
    uint64_t v51 = 1107296256;
    os_log_type_t v52 = (void (*)(uint64_t, void *))sub_10032A9D8;
    uint64_t v53 = &unk_1008D6F38;
    Swift::String v36 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v37 = &selRef_setDeviceFoundHandler_;
  }
  else
  {
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = v29;
    uint64_t v39 = v38 + v31;
    uint64_t v35 = *v32;
    (*v32)(v39, v11, v28);
    id v54 = sub_100334534;
    uint64_t v55 = v38;
    aBlock = _NSConcreteStackBlock;
    uint64_t v51 = 1107296256;
    os_log_type_t v52 = (void (*)(uint64_t, void *))sub_10032A9D8;
    uint64_t v53 = &unk_1008D6E98;
    Swift::String v36 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v37 = &selRef_setDeviceLostHandler_;
  }
  [v25 *v37 v36];
  _Block_release(v36);
  v46(v11, v48, v28);
  unint64_t v40 = (v30 + 16) & v44;
  uint64_t v41 = swift_allocObject();
  v35(v41 + v40, v11, v28);
  id v54 = sub_100334650;
  uint64_t v55 = v41;
  aBlock = _NSConcreteStackBlock;
  uint64_t v51 = 1107296256;
  os_log_type_t v52 = sub_1006B210C;
  uint64_t v53 = &unk_1008D6EE8;
  Swift::String v42 = _Block_copy(&aBlock);
  swift_release();
  [v25 activateWithCompletion:v42];
  _Block_release(v42);
}

uint64_t sub_10032CDE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  uint64_t v7 = type metadata accessor for ContinuousClock();
  v6[11] = v7;
  v6[12] = *(void *)(v7 - 8);
  v6[13] = swift_task_alloc();
  return _swift_task_switch(sub_10032CEAC, 0, 0);
}

uint64_t sub_10032CEAC()
{
  char v16 = v0;
  if (qword_100969BD8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[14] = sub_10000B47C(v1, (uint64_t)qword_10096F250);
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[8];
    uint64_t v13 = v0[9];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    v0[5] = v4;
    type metadata accessor for SDAuthenticationNearbyInfoTemporaryScanner();
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    v0[6] = sub_100254634(v6, v7, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    v0[7] = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s: Scanning for %ld seconds", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v8 = v0[9];
  uint64_t v9 = 1000000000000000000 * v8;
  uint64_t v10 = ((v8 >> 63) & 0xF21F494C589C0000) + (((unint64_t)v8 * (unsigned __int128)0xDE0B6B3A7640000uLL) >> 64);
  ContinuousClock.init()();
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
  uint64_t v11 = (void *)swift_task_alloc();
  v0[15] = v11;
  void *v11 = v0;
  v11[1] = sub_10032D17C;
  return v14(v9, v10, 0, 0, 1);
}

uint64_t sub_10032D17C()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v3 = v2[13];
  uint64_t v4 = v2[12];
  uint64_t v5 = v2[11];
  if (v0)
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_100334B50;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_10032D314;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_10032D314()
{
  uint64_t v11 = v0;
  v0[2] = 0;
  sub_10000A844(&qword_10096FCF0);
  AsyncThrowingStream.Continuation.finish(throwing:)();
  swift_retain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[8];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v10 = v5;
    v0[3] = v3;
    type metadata accessor for SDAuthenticationNearbyInfoTemporaryScanner();
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    v0[4] = sub_100254634(v6, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s: Finished scanning", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  [*(id *)(v0[8] + 16) invalidate:v10];
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10032D520(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v8 = sub_10000A844(&qword_10096FD08);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100969BD8 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000B47C(v12, (uint64_t)qword_10096F250);
  swift_retain_n();
  id v13 = a1;
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v27 = v11;
    uint64_t v17 = v16;
    uint64_t v18 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v26 = a4;
    uint64_t v31 = a2;
    uint64_t v32 = v19;
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v28 = v9;
    type metadata accessor for SDAuthenticationNearbyInfoTemporaryScanner();
    uint64_t v30 = a3;
    swift_retain();
    uint64_t v29 = v8;
    uint64_t v20 = String.init<A>(describing:)();
    uint64_t v31 = sub_100254634(v20, v21, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v17 + 12) = 2112;
    uint64_t v31 = (uint64_t)v13;
    id v22 = v13;
    uint64_t v8 = v29;
    uint64_t v9 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v18 = v13;

    _os_log_impl((void *)&_mh_execute_header, v14, v15, v26, (uint8_t *)v17, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v11 = v27;
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }
  uint64_t v32 = (uint64_t)v13;
  id v23 = v13;
  sub_10000A844(&qword_10096FCF0);
  AsyncThrowingStream.Continuation.yield(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10032D84C(uint64_t result)
{
  if (result)
  {
    swift_errorRetain();
    sub_10000A844(&qword_10096FCF0);
    return AsyncThrowingStream.Continuation.finish(throwing:)();
  }
  return result;
}

uint64_t type metadata accessor for SDAuthenticationNearbyInfoTemporaryScanner()
{
  return self;
}

uint64_t type metadata accessor for SDAuthenticationWiFiTemporaryScanner()
{
  return self;
}

uint64_t sub_10032D8E4()
{
  v1[7] = v0;
  sub_10000A844(&qword_100974C10);
  v1[8] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for NSNotificationCenter.Notifications.Iterator();
  v1[9] = v2;
  v1[10] = *(void *)(v2 - 8);
  v1[11] = swift_task_alloc();
  return _swift_task_switch(sub_10032D9D4, 0, 0);
}

uint64_t sub_10032D9D4()
{
  unint64_t v24 = v0;
  id v1 = [self sharedMonitor];
  if (!v1)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v4 = v1;
  unsigned __int8 v5 = [v1 deviceKeyBagUnlocked];

  if ((v5 & 1) == 0)
  {
    id v1 = [self sharedManager];
    if (v1)
    {
      uint64_t v6 = v1;
      id v7 = [v1 localAttestedLTK];

      if (v7)
      {
        uint64_t v8 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v10 = v9;

        sub_100250CC4(v8, v10);
        goto LABEL_6;
      }
      if (qword_100969BD8 != -1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      v0[12] = sub_10000B47C(v13, (uint64_t)qword_10096F250);
      uint64_t v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = v0[7];
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        uint64_t v23 = swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 136315138;
        v0[5] = v16;
        sub_10000A844(&qword_10096FCB8);
        uint64_t v18 = String.init<A>(describing:)();
        v0[6] = sub_100254634(v18, v19, &v23);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s: Waiting for keys to be loaded", v17, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      id v20 = [self defaultCenter];
      if (qword_100969C08 != -1) {
        swift_once();
      }
      v0[13] = NSNotificationCenter.notifications(named:object:)();

      swift_retain();
      NSNotificationCenter.Notifications.makeAsyncIterator()();
      uint64_t v21 = sub_100334308(&qword_10096FCB0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator);
      id v22 = (void *)swift_task_alloc();
      v0[14] = v22;
      *id v22 = v0;
      v22[1] = sub_10032DDBC;
      id v1 = (id)v0[8];
      uint64_t v2 = v0[9];
      uint64_t v3 = v21;
      return dispatch thunk of AsyncIteratorProtocol.next()(v1, v2, v3);
    }
LABEL_19:
    __break(1u);
    return dispatch thunk of AsyncIteratorProtocol.next()(v1, v2, v3);
  }
LABEL_6:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_10032DDBC()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10032E0FC;
  }
  else {
    uint64_t v2 = sub_10032DED0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10032DED0()
{
  uint64_t v12 = v0;
  uint64_t v1 = v0[8];
  (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
  uint64_t v2 = type metadata accessor for Notification();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) != 1) {
    sub_10000A7E8(v0[8], &qword_100974C10);
  }
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[7];
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    v0[3] = v5;
    sub_10000A844(&qword_10096FCB8);
    uint64_t v7 = String.init<A>(describing:)();
    v0[4] = sub_100254634(v7, v8, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s: Finished waiting for keys to load", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
  }
  else
  {
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_10032E0FC()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 120);
  sub_10000A844(&qword_10096BAF0);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t type metadata accessor for SDAuthenticationStatusMonitor()
{
  return self;
}

uint64_t sub_10032E1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_10096F950);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v23 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v7 - 8);
  unint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000A844(&qword_10096FBE8);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  os_log_type_t v15 = (char *)&v23 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v16((char *)&v23 - v14, a1, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v15, 0, 1, v4);
  sub_100333730((uint64_t)v15, (uint64_t)v13);
  uint64_t v17 = a2 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_streamContinuation;
  swift_beginAccess();
  sub_100333798((uint64_t)v13, v17);
  swift_endAccess();
  swift_allocObject();
  swift_weakInit();
  AsyncStream.Continuation.onTermination.setter();
  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v9, 1, 1, v18);
  unint64_t v19 = v23;
  v16(v23, a1, v4);
  unint64_t v20 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v21 = (char *)swift_allocObject();
  *((void *)v21 + 2) = 0;
  *((void *)v21 + 3) = 0;
  *((void *)v21 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v21[v20], v19, v4);
  swift_retain();
  sub_10028CFA8((uint64_t)v9, (uint64_t)&unk_10096FBF8, (uint64_t)v21);
  return swift_release();
}

uint64_t sub_10032E4B8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    if (*(void *)(result + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner))
    {
      swift_retain();
      sub_100329AC8();
      swift_release();
    }
    if (*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyActionScanner))
    {
      swift_retain();
      sub_100329AC8();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_10032E554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  v5[10] = a5;
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_10096F950);
  v5[11] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[12] = v7;
  v5[13] = *(void *)(v7 + 64);
  v5[14] = swift_task_alloc();
  sub_10000A844(&qword_10096C920);
  v5[15] = swift_task_alloc();
  return _swift_task_switch(sub_10032E650, 0, 0);
}

id sub_10032E650()
{
  id result = [self sharedMonitor];
  *(void *)(v0 + 128) = result;
  if (result)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10032E70C;
    return (id)sub_10046033C();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10032E70C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 128);
  uint64_t v5 = *v0;
  swift_task_dealloc();

  type metadata accessor for SDAuthenticationStatusMonitor();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 144) = v3;
  *uint64_t v3 = v5;
  v3[1] = sub_10032E858;
  return sub_10032D8E4();
}

uint64_t sub_10032E858()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10032E954, 0, 0);
}

uint64_t sub_10032E954()
{
  uint64_t v51 = v0;
  if (qword_10096A198 != -1) {
    swift_once();
  }
  if (qword_100994D10)
  {
    id v49 = (id)qword_100994D10;
    uint64_t v1 = sub_1006CC8D0();
    if (qword_100969BD8 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000B47C(v2, (uint64_t)qword_10096F250);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    BOOL v5 = os_log_type_enabled(v3, v4);
    uint64_t v6 = v0[9];
    if (v5)
    {
      os_log_t log = v3;
      uint64_t v7 = swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315394;
      v0[6] = v6;
      type metadata accessor for SDAuthenticationBioArmUnarmedDevices();
      swift_retain();
      uint64_t v8 = String.init<A>(describing:)();
      v0[7] = sub_100254634(v8, v9, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v7 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v10 = Array.description.getter();
      unint64_t v12 = v11;
      swift_bridgeObjectRelease();
      v0[8] = sub_100254634(v10, v12, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v3 = log;
      _os_log_impl((void *)&_mh_execute_header, log, v4, "%s: Looking for lock devices %s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();
    }

    if (v1[2])
    {
      uint64_t v22 = v0[14];
      uint64_t v21 = v0[15];
      uint64_t v24 = v0[12];
      uint64_t v23 = v0[13];
      uint64_t v25 = v0[10];
      uint64_t v26 = v0[11];
      uint64_t v47 = v25;
      uint64_t v43 = v0[9];
      os_log_t loga = (os_log_t)type metadata accessor for TaskPriority();
      uint64_t v48 = (void (*)(uint64_t, uint64_t, uint64_t, os_log_t))*((void *)loga[-1].isa + 7);
      v48(v21, 1, 1, loga);
      unint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
      v46(v22, v25, v26);
      uint64_t v27 = *(unsigned __int8 *)(v24 + 80);
      uint64_t v28 = (v27 + 40) & ~v27;
      uint64_t v29 = v1;
      uint64_t v30 = (char *)swift_allocObject();
      *((void *)v30 + 2) = 0;
      *((void *)v30 + 3) = 0;
      *((void *)v30 + 4) = v29;
      uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 32);
      v31(&v30[v28], v22, v26);
      *(void *)&v30[(v23 + v28 + 7) & 0xFFFFFFFFFFFFFFF8] = v43;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_10028CFA8(v21, (uint64_t)&unk_10096FC10, (uint64_t)v30);
      swift_release();
      v48(v21, 1, 1, loga);
      v46(v22, v47, v26);
      uint64_t v32 = (v27 + 48) & ~v27;
      uint64_t v33 = (char *)swift_allocObject();
      *((void *)v33 + 2) = 0;
      *((void *)v33 + 3) = 0;
      *((void *)v33 + 4) = v29;
      *((void *)v33 + 5) = v43;
      v31(&v33[v32], v22, v26);
      swift_retain();
      sub_10028CFA8(v21, (uint64_t)&unk_10096FC20, (uint64_t)v33);
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_retain_n();
      uint64_t v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.default.getter();
      BOOL v36 = os_log_type_enabled(v34, v35);
      uint64_t v37 = v0[9];
      if (v36)
      {
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        uint64_t v50 = swift_slowAlloc();
        *(_DWORD *)uint64_t v38 = 136315138;
        v0[4] = v37;
        type metadata accessor for SDAuthenticationBioArmUnarmedDevices();
        swift_retain();
        uint64_t v39 = String.init<A>(describing:)();
        v0[5] = sub_100254634(v39, v40, &v50);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s: No lock devices. Terminating stream", v38, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();
      }

      AsyncStream.Continuation.finish()();
    }
  }
  else
  {
    if (qword_100969BD8 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000B47C(v13, (uint64_t)qword_10096F250);
    swift_retain_n();
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v17 = v0[9];
    if (v16)
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315138;
      v0[2] = v17;
      type metadata accessor for SDAuthenticationBioArmUnarmedDevices();
      swift_retain();
      uint64_t v19 = String.init<A>(describing:)();
      v0[3] = sub_100254634(v19, v20, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s: Authentication manager isn't running. Not scanning", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = (uint64_t (*)(void))v0[1];
  return v41();
}

uint64_t sub_10032F144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  uint64_t v7 = sub_10000A844(&qword_10096FC28);
  v6[8] = v7;
  v6[9] = *(void *)(v7 - 8);
  v6[10] = swift_task_alloc();
  sub_10000A844(&qword_10096C920);
  v6[11] = swift_task_alloc();
  uint64_t v8 = sub_10000A844(&qword_10096FC30);
  v6[12] = v8;
  v6[13] = *(void *)(v8 - 8);
  v6[14] = swift_task_alloc();
  uint64_t v9 = sub_10000A844(&qword_10096FC38);
  v6[15] = v9;
  v6[16] = *(void *)(v9 - 8);
  v6[17] = swift_task_alloc();
  uint64_t v10 = sub_10000A844(&qword_10096FC40);
  v6[18] = v10;
  v6[19] = *(void *)(v10 - 8);
  v6[20] = swift_task_alloc();
  return _swift_task_switch(sub_10032F35C, 0, 0);
}

uint64_t sub_10032F35C()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[14];
  uint64_t v15 = v0[15];
  uint64_t v5 = v0[12];
  uint64_t v4 = v0[13];
  uint64_t v6 = v0[11];
  type metadata accessor for SDAuthenticationBioArmNearbyActionScanner();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_100329564(v8);
  uint64_t v9 = *(void **)(v7 + 16);
  [v9 setDiscoveryFlags:0x2000000];
  [v9 setBleRSSIThresholdHint:4294967206];
  [v9 setBleScanRate:20];
  [v9 setBleScanRateScreenOff:20];
  [v9 setDiscoveryFlags:34078720];
  [v9 addDiscoveryType:6];
  sub_10000B740(0, &qword_10096FC48);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v3, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v5);
  AsyncStream.init(_:bufferingPolicy:_:)();
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
  unint64_t v11 = (void *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v7;
  swift_retain();
  sub_10028CAC4(v6, (uint64_t)&unk_10096FC80, (uint64_t)v11);
  swift_release();
  swift_release();
  AsyncStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v15);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[21] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10032F608;
  uint64_t v13 = v0[18];
  return AsyncStream.Iterator.next(isolation:)(v0 + 2, 0, 0, v13);
}

uint64_t sub_10032F608()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10032F704, 0, 0);
}

uint64_t sub_10032F704()
{
  uint64_t v22 = v0;
  uint64_t v1 = (void *)v0[2];
  if (v1)
  {
    v0[3] = v1;
    uint64_t v3 = v0[9];
    uint64_t v2 = v0[10];
    uint64_t v4 = v0[8];
    id v5 = v1;
    sub_10000A844((uint64_t *)&unk_10096F950);
    AsyncStream.Continuation.yield(_:)();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    if (qword_100969BD8 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_10096F250);
    id v7 = v5;
    swift_retain_n();
    id v8 = v7;
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    BOOL v11 = os_log_type_enabled(v9, v10);
    uint64_t v12 = v0[7];
    if (v11)
    {
      uint64_t v13 = swift_slowAlloc();
      unint64_t v20 = (void *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315394;
      v0[4] = v12;
      type metadata accessor for SDAuthenticationBioArmUnarmedDevices();
      swift_retain();
      uint64_t v14 = String.init<A>(describing:)();
      *(void *)(v13 + 4) = sub_100254634(v14, v15, &v21);
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v13 + 12) = 2112;
      *(void *)(v13 + 14) = v8;
      *unint64_t v20 = v1;

      _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s: Yielded NearbyAction device: %@", (uint8_t *)v13, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v18 = (void *)swift_task_alloc();
    v0[21] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_10032F608;
    uint64_t v19 = v0[18];
    return AsyncStream.Iterator.next(isolation:)(v0 + 2, 0, 0, v19);
  }
  else
  {
    (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
}

uint64_t sub_10032FA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  uint64_t v7 = sub_10000A844(&qword_10096FC28);
  v6[8] = v7;
  v6[9] = *(void *)(v7 - 8);
  v6[10] = swift_task_alloc();
  sub_10000A844(&qword_10096C920);
  v6[11] = swift_task_alloc();
  uint64_t v8 = sub_10000A844(&qword_10096FC30);
  v6[12] = v8;
  v6[13] = *(void *)(v8 - 8);
  v6[14] = swift_task_alloc();
  uint64_t v9 = sub_10000A844(&qword_10096FC38);
  v6[15] = v9;
  v6[16] = *(void *)(v9 - 8);
  v6[17] = swift_task_alloc();
  uint64_t v10 = sub_10000A844(&qword_10096FC40);
  v6[18] = v10;
  v6[19] = *(void *)(v10 - 8);
  v6[20] = swift_task_alloc();
  return _swift_task_switch(sub_10032FCB0, 0, 0);
}

uint64_t sub_10032FCB0()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[14];
  uint64_t v16 = v0[15];
  uint64_t v5 = v0[12];
  uint64_t v4 = v0[13];
  uint64_t v6 = v0[11];
  uint64_t v8 = v0[5];
  uint64_t v7 = v0[6];
  type metadata accessor for SDAuthenticationBioArmNearbyInfoScanner();
  uint64_t v9 = (void *)swift_allocObject();
  v0[21] = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  v9[4] = sub_100246638((uint64_t)_swiftEmptyArrayStorage);
  v9[5] = &_swiftEmptySetSingleton;
  swift_release();
  sub_100329564(v8);
  uint64_t v10 = (void *)v9[2];
  [v10 setDiscoveryFlags:64];
  [v10 setBleScanRate:30];
  *(void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner) = v9;
  swift_retain();
  swift_release();
  sub_10000B740(0, &qword_10096FC48);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v3, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v5);
  AsyncStream.init(_:bufferingPolicy:_:)();
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = 0;
  v12[3] = 0;
  v12[4] = v9;
  swift_retain();
  sub_10028CAC4(v6, (uint64_t)&unk_10096FC58, (uint64_t)v12);
  swift_release();
  AsyncStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v16);
  uint64_t v13 = (void *)swift_task_alloc();
  v0[22] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_10032FF58;
  uint64_t v14 = v0[18];
  return AsyncStream.Iterator.next(isolation:)(v0 + 2, 0, 0, v14);
}

uint64_t sub_10032FF58()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100330054, 0, 0);
}

uint64_t sub_100330054()
{
  uint64_t v22 = v0;
  uint64_t v1 = (void *)v0[2];
  if (v1)
  {
    v0[3] = v1;
    uint64_t v3 = v0[9];
    uint64_t v2 = v0[10];
    uint64_t v4 = v0[8];
    id v5 = v1;
    sub_10000A844((uint64_t *)&unk_10096F950);
    AsyncStream.Continuation.yield(_:)();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    if (qword_100969BD8 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_10096F250);
    id v7 = v5;
    swift_retain_n();
    id v8 = v7;
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    BOOL v11 = os_log_type_enabled(v9, v10);
    uint64_t v12 = v0[6];
    if (v11)
    {
      uint64_t v13 = swift_slowAlloc();
      unint64_t v20 = (void *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315394;
      v0[4] = v12;
      type metadata accessor for SDAuthenticationBioArmUnarmedDevices();
      swift_retain();
      uint64_t v14 = String.init<A>(describing:)();
      *(void *)(v13 + 4) = sub_100254634(v14, v15, &v21);
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v13 + 12) = 2112;
      *(void *)(v13 + 14) = v8;
      *unint64_t v20 = v1;

      _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s: Yielded NearbyInfo device: %@", (uint8_t *)v13, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v18 = (void *)swift_task_alloc();
    v0[22] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_10032FF58;
    uint64_t v19 = v0[18];
    return AsyncStream.Iterator.next(isolation:)(v0 + 2, 0, 0, v19);
  }
  else
  {
    (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
}

uint64_t sub_1003303F0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return _swift_task_switch(sub_100330414, 0, 0);
}

uint64_t sub_100330414()
{
  id v1 = [*(id *)(v0 + 24) identifier];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v6 = *(uint64_t **)(v0 + 16);
  *uint64_t v6 = v3;
  v6[1] = v5;
  id v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1003304B8(uint64_t a1, uint64_t *a2)
{
  v2[2] = a1;
  sub_10000A844(&qword_100974EA0);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  v2[3] = v4;
  v2[4] = v5;
  v2[5] = v6;
  return _swift_task_switch(sub_100330558, 0, 0);
}

void sub_100330558()
{
  Date.init()();
  id v1 = [self sharedTransport];
  if (!v1)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v2 = v1;
  uint64_t v3 = v0[3];
  UUID.init(uuidString:)();
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
  {
    uint64_t v7 = v0[3];
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }
  id v8 = [v2 idsDeviceForBluetoothID:isa];

  if (!v8) {
    goto LABEL_9;
  }
  uint64_t v9 = v0[2];
  uint64_t v10 = sub_10000A844(&qword_10096FBD8);
  BOOL v11 = (void *)(v9 + *(int *)(v10 + 48));
  v11[3] = sub_10000B740(0, &qword_10097BB60);
  v11[4] = &off_1008E2510;
  void *v11 = v8;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  swift_task_dealloc();
  uint64_t v12 = (void (*)(void))v0[1];
  v12();
}

void sub_100330740()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844(&qword_10096FBE8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_10096F950);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100969BD8 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = sub_10000B47C(v9, (uint64_t)qword_10096F250);
  swift_retain_n();
  BOOL v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v27 = v6;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v26 = v8;
    uint64_t v29 = v1;
    v30[0] = v15;
    uint64_t v25 = v10;
    *(_DWORD *)uint64_t v14 = 136315138;
    type metadata accessor for SDAuthenticationBioArmUnarmedDevices();
    swift_retain();
    uint64_t v16 = String.init<A>(describing:)();
    uint64_t v29 = sub_100254634(v16, v17, v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s: Stopping", v14, 0xCu);
    swift_arrayDestroy();
    id v8 = v26;
    swift_slowDealloc();
    uint64_t v6 = v27;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v18 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_streamContinuation;
  swift_beginAccess();
  sub_1003344B4(v18, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000A7E8((uint64_t)v4, &qword_10096FBE8);
    swift_retain_n();
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v28 = v1;
      uint64_t v29 = v22;
      *(_DWORD *)uint64_t v21 = 136315138;
      type metadata accessor for SDAuthenticationBioArmUnarmedDevices();
      swift_retain();
      uint64_t v23 = String.init<A>(describing:)();
      uint64_t v28 = sub_100254634(v23, v24, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s: No continuation to stop", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    AsyncStream.Continuation.finish()();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_100330BD0()
{
  sub_10000A7E8(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_streamContinuation, &qword_10096FBE8);
  swift_release();

  return swift_release();
}

uint64_t sub_100330C28()
{
  sub_10000A7E8(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_streamContinuation, &qword_10096FBE8);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_100330CB4()
{
  return type metadata accessor for SDAuthenticationBioArmUnarmedDevices();
}

uint64_t type metadata accessor for SDAuthenticationBioArmUnarmedDevices()
{
  uint64_t result = qword_10096F938;
  if (!qword_10096F938) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100330D08()
{
  sub_100330DA4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100330DA4()
{
  if (!qword_10096F948)
  {
    sub_100247840((uint64_t *)&unk_10096F950);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10096F948);
    }
  }
}

uint64_t sub_100330E08(void *a1, char a2)
{
  char v4 = a2 & 1;
  *(void *)(v2 + 16) = &_swiftEmptyDictionarySingleton;
  *(void *)(v2 + 24) = 0;
  *(unsigned char *)(v2 + 32) = 1;
  swift_retain();
  *(_DWORD *)(v2 + 36) = IOPMConnectionGetSystemCapabilities();
  *(void *)(v2 + 40) = a1;
  *(unsigned char *)(v2 + 48) = v4;
  uint64_t v5 = self;
  id v6 = a1;
  id v7 = [v5 standardUserDefaults];
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 dictionaryForKey:v8];

  if (v9
    && (uint64_t v10 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(),
        v9,
        unint64_t v11 = sub_100330F90(v10),
        swift_bridgeObjectRelease(),
        v11))
  {
    swift_beginAccess();
    *(void *)(v2 + 16) = v11;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
  swift_retain();
  sub_100332A48();
  swift_release();

  return v2;
}

unint64_t sub_100330F90(uint64_t a1)
{
  uint64_t v2 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v2 - 8);
  char v4 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_10000A844(&qword_10096B510);
  __chkstk_darwin(v66);
  uint64_t v65 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_10000A844(&qword_10096FC98);
  __chkstk_darwin(v64);
  uint64_t v60 = (uint64_t *)((char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v69 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v62 = (char *)&v54 - v12;
  __chkstk_darwin(v11);
  uint64_t v61 = (char *)&v54 - v13;
  uint64_t v70 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_10000A844(&qword_10096FCA0);
    uint64_t v14 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v14 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v15 = *(void *)(v70 + 64);
  uint64_t v58 = v70 + 64;
  uint64_t v16 = -1;
  uint64_t v17 = -1 << *(unsigned char *)(v70 + 32);
  uint64_t v54 = ~v17;
  if (-v17 < 64) {
    uint64_t v16 = ~(-1 << -(char)v17);
  }
  unint64_t v18 = v16 & v15;
  int64_t v57 = (unint64_t)(63 - v17) >> 6;
  uint64_t v68 = &v75;
  uint64_t v19 = (void (**)(void, void, void, void))(v69 + 56);
  os_log_type_t v20 = (void (**)(char *))(v69 + 32);
  uint64_t v55 = v14 + 8;
  uint64_t v56 = v69 + 40;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v22 = 0;
  uint64_t v67 = (char *)&type metadata for Any + 8;
  uint64_t v63 = v10;
  for (i = v19; ; uint64_t v19 = i)
  {
    if (v18)
    {
      uint64_t v71 = (v18 - 1) & v18;
      int64_t v72 = v22;
      unint64_t v24 = __clz(__rbit64(v18)) | (v22 << 6);
    }
    else
    {
      int64_t v25 = v22 + 1;
      if (__OFADD__(v22, 1)) {
        goto LABEL_37;
      }
      if (v25 >= v57)
      {
LABEL_33:
        sub_10024D330();
        return (unint64_t)v14;
      }
      unint64_t v26 = *(void *)(v58 + 8 * v25);
      int64_t v27 = v22 + 1;
      if (!v26)
      {
        int64_t v27 = v22 + 2;
        if (v22 + 2 >= v57) {
          goto LABEL_33;
        }
        unint64_t v26 = *(void *)(v58 + 8 * v27);
        if (!v26)
        {
          int64_t v27 = v22 + 3;
          if (v22 + 3 >= v57) {
            goto LABEL_33;
          }
          unint64_t v26 = *(void *)(v58 + 8 * v27);
          if (!v26)
          {
            int64_t v27 = v22 + 4;
            if (v22 + 4 >= v57) {
              goto LABEL_33;
            }
            unint64_t v26 = *(void *)(v58 + 8 * v27);
            if (!v26)
            {
              uint64_t v28 = v22 + 5;
              if (v22 + 5 >= v57) {
                goto LABEL_33;
              }
              unint64_t v26 = *(void *)(v58 + 8 * v28);
              if (!v26)
              {
                while (1)
                {
                  int64_t v27 = v28 + 1;
                  if (__OFADD__(v28, 1)) {
                    goto LABEL_38;
                  }
                  if (v27 >= v57) {
                    goto LABEL_33;
                  }
                  unint64_t v26 = *(void *)(v58 + 8 * v27);
                  ++v28;
                  if (v26) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v27 = v22 + 5;
            }
          }
        }
      }
LABEL_26:
      uint64_t v71 = (v26 - 1) & v26;
      int64_t v72 = v27;
      unint64_t v24 = __clz(__rbit64(v26)) + (v27 << 6);
    }
    uint64_t v29 = (uint64_t *)(*(void *)(v70 + 48) + 16 * v24);
    uint64_t v30 = *v29;
    uint64_t v31 = v29[1];
    uint64_t v32 = (uint64_t)v68;
    sub_10024D2D4(*(void *)(v70 + 56) + 32 * v24, (uint64_t)v68);
    v74[0] = v30;
    v74[1] = v31;
    sub_10024D2D4(v32, (uint64_t)v73);
    swift_bridgeObjectRetain_n();
    sub_10000A7E8((uint64_t)v74, &qword_10096FCA8);
    int v33 = swift_dynamicCast();
    uint64_t v34 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*v19;
    if (!v33)
    {
      v34(v4, 1, 1, v7);
      swift_bridgeObjectRelease();
      sub_10000A7E8((uint64_t)v4, (uint64_t *)&unk_100975040);
      sub_10024D330();
      swift_release();
      return 0;
    }
    v34(v4, 0, 1, v7);
    os_log_type_t v35 = v4;
    BOOL v36 = *v20;
    uint64_t v37 = v62;
    uint64_t v38 = v35;
    (*v20)(v62);
    uint64_t v39 = &v65[*(int *)(v66 + 48)];
    ((void (*)(char *, char *, uint64_t))v36)(v39, v37, v7);
    uint64_t v40 = v64;
    uint64_t v41 = v60;
    Swift::String v42 = (char *)v60 + *(int *)(v64 + 48);
    *uint64_t v60 = v30;
    v41[1] = v31;
    ((void (*)(char *, char *, uint64_t))v36)(v42, v39, v7);
    uint64_t v43 = (char *)v41 + *(int *)(v40 + 48);
    uint64_t v44 = *v41;
    uint64_t v45 = v41[1];
    unint64_t v46 = v61;
    ((void (*)(char *, char *, uint64_t))v36)(v61, v43, v7);
    uint64_t v47 = v63;
    ((void (*)(char *, char *, uint64_t))v36)(v63, v46, v7);
    unint64_t result = sub_1005838BC(v44, v45);
    unint64_t v48 = result;
    if (v49)
    {
      uint64_t v23 = (uint64_t *)(v14[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v23 = v44;
      v23[1] = v45;
      unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v69 + 40))(v14[7] + *(void *)(v69 + 72) * v48, v47, v7);
      goto LABEL_8;
    }
    if (v14[2] >= v14[3]) {
      break;
    }
    *(void *)((char *)v55 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v50 = (uint64_t *)(v14[6] + 16 * result);
    *uint64_t v50 = v44;
    v50[1] = v45;
    unint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v36)(v14[7] + *(void *)(v69 + 72) * result, v47, v7);
    uint64_t v51 = v14[2];
    BOOL v52 = __OFADD__(v51, 1);
    uint64_t v53 = v51 + 1;
    if (v52) {
      goto LABEL_36;
    }
    v14[2] = v53;
LABEL_8:
    unint64_t v18 = v71;
    int64_t v22 = v72;
    char v4 = v38;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

unint64_t sub_10033164C(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_10000A844(&qword_10096FCC0);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v34 = v1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(v1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(v1 + 64);
  uint64_t v6 = &v40;
  int64_t v33 = (unint64_t)(63 - v4) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = &qword_10096FCA8;
  uint64_t v10 = (uint64_t *)&unk_10096FCC8;
  uint64_t v11 = (char *)&type metadata for Any + 8;
  while (1)
  {
    if (v5)
    {
      uint64_t v35 = (v5 - 1) & v5;
      int64_t v36 = v8;
      unint64_t v19 = __clz(__rbit64(v5)) | (v8 << 6);
    }
    else
    {
      int64_t v20 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_37;
      }
      if (v20 >= v33)
      {
LABEL_33:
        sub_10024D330();
        return (unint64_t)v2;
      }
      unint64_t v21 = *(void *)(v34 + 8 * v20);
      int64_t v22 = v8 + 1;
      if (!v21)
      {
        int64_t v22 = v8 + 2;
        if (v8 + 2 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v34 + 8 * v22);
        if (!v21)
        {
          int64_t v22 = v8 + 3;
          if (v8 + 3 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = *(void *)(v34 + 8 * v22);
          if (!v21)
          {
            int64_t v22 = v8 + 4;
            if (v8 + 4 >= v33) {
              goto LABEL_33;
            }
            unint64_t v21 = *(void *)(v34 + 8 * v22);
            if (!v21)
            {
              uint64_t v23 = v8 + 5;
              if (v8 + 5 >= v33) {
                goto LABEL_33;
              }
              unint64_t v21 = *(void *)(v34 + 8 * v23);
              if (!v21)
              {
                while (1)
                {
                  int64_t v22 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_38;
                  }
                  if (v22 >= v33) {
                    goto LABEL_33;
                  }
                  unint64_t v21 = *(void *)(v34 + 8 * v22);
                  ++v23;
                  if (v21) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v22 = v8 + 5;
            }
          }
        }
      }
LABEL_26:
      uint64_t v35 = (v21 - 1) & v21;
      int64_t v36 = v22;
      unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
    }
    unint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    sub_10024D2D4(*(void *)(v1 + 56) + 32 * v19, (uint64_t)v6);
    v39[0] = v26;
    v39[1] = v25;
    sub_10024D2D4((uint64_t)v6, (uint64_t)v38);
    swift_bridgeObjectRetain_n();
    sub_10000A7E8((uint64_t)v39, v9);
    sub_10000A844(v10);
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10024D330();
      swift_release();
      return 0;
    }
    unint64_t result = sub_1005838BC(v26, v25);
    unint64_t v27 = result;
    if (v28)
    {
      uint64_t v12 = v11;
      uint64_t v13 = v10;
      uint64_t v14 = v6;
      uint64_t v15 = v1;
      uint64_t v16 = v9;
      uint64_t v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v17 = v26;
      v17[1] = v25;
      uint64_t v9 = v16;
      uint64_t v1 = v15;
      uint64_t v6 = v14;
      uint64_t v10 = v13;
      uint64_t v11 = v12;
      uint64_t v18 = v2[7];
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)(v18 + 8 * v27) = v37;
      goto LABEL_8;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v29 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v29 = v26;
    v29[1] = v25;
    *(void *)(v2[7] + 8 * result) = v37;
    uint64_t v30 = v2[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31) {
      goto LABEL_36;
    }
    v2[2] = v32;
LABEL_8:
    unint64_t v5 = v35;
    int64_t v8 = v36;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

unint64_t sub_1003319D0()
{
  uint64_t v0 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(void *)(v0 + 16) = 128;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  *(_OWORD *)(v0 + 144) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  if (IOPMGetCapabilitiesDescription())
  {
    uint64_t v2 = sub_1003342B8(v0, v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    _StringGuts.grow(_:)(32);
    swift_bridgeObjectRelease();
    v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v3);
    swift_bridgeObjectRelease();
    v4._countAndFlagsBits = 41;
    v4._object = (void *)0xE100000000000000;
    String.append(_:)(v4);
    return 0xD00000000000001DLL;
  }
  return v2;
}

unint64_t sub_100331AEC()
{
  return sub_1003319D0();
}

uint64_t sub_100331AF4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v2 - 8);
  Swift::String v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_10000A7E8((uint64_t)v4, &qword_10096C920);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_10096FCD8;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    void v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_100331D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a4;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  v4[12] = v5;
  v4[13] = *(void *)(v5 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DispatchQoS();
  v4[15] = v6;
  v4[16] = *(void *)(v6 - 8);
  v4[17] = swift_task_alloc();
  return _swift_task_switch(sub_100331E54, 0, 0);
}

id sub_100331E54()
{
  id result = [self sharedMonitor];
  *(void *)(v0 + 144) = result;
  if (result)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100331F10;
    return (id)sub_10046033C();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100331F10()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 144);
  uint64_t v5 = *v0;
  swift_task_dealloc();

  type metadata accessor for SDAuthenticationStatusMonitor();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 160) = v3;
  *uint64_t v3 = v5;
  v3[1] = sub_10033205C;
  return sub_10032D8E4();
}

uint64_t sub_10033205C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100332158, 0, 0);
}

uint64_t sub_100332158()
{
  int64_t v20 = v0;
  if (qword_100969BD8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10096F250);
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[11];
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    v0[9] = v5;
    type metadata accessor for SDAuthenticationRegistrationManager();
    swift_retain();
    uint64_t v7 = String.init<A>(describing:)();
    v0[10] = sub_100254634(v7, v8, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s: Performing Registration when booted", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  uint64_t v10 = v0[16];
  uint64_t v9 = v0[17];
  uint64_t v11 = v0[14];
  uint64_t v12 = v0[12];
  uint64_t v13 = v0[13];
  uint64_t v14 = v0[11];
  uint64_t v18 = v0[15];
  v0[6] = sub_1003344B0;
  v0[7] = v14;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100296520;
  v0[5] = &unk_1008D6E48;
  uint64_t v15 = _Block_copy(v0 + 2);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v0[8] = _swiftEmptyArrayStorage;
  sub_100334308((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002B4B9C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v18);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1003324D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v34 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  int64_t v33 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = (void *)v1[5];
  void *v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  id v13 = v12;
  char v14 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if (v14)
  {
    if (qword_10096A198 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t result = swift_once();
LABEL_3:
  if (qword_100994D10)
  {
    uint64_t v32 = v5;
    uint64_t v16 = qword_100969BD8;
    id v17 = (id)qword_100994D10;
    if (v16 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_10000B47C(v18, (uint64_t)qword_10096F250);
    swift_retain_n();
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v30 = v6;
      uint64_t v35 = v1;
      aBlock[0] = v22;
      *(_DWORD *)uint64_t v21 = 136315138;
      type metadata accessor for SDAuthenticationRegistrationManager();
      uint64_t v31 = v3;
      swift_retain();
      uint64_t v23 = String.init<A>(describing:)();
      uint64_t v35 = (void *)sub_100254634(v23, v24, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      uint64_t v3 = v31;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s: Starting registration", v21, 0xCu);
      swift_arrayDestroy();
      uint64_t v6 = v30;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v17;
    *(void *)(v25 + 24) = v1;
    aBlock[4] = (uint64_t)sub_100334390;
    aBlock[5] = v25;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100296520;
    aBlock[3] = (uint64_t)&unk_1008D6DD0;
    uint64_t v26 = _Block_copy(aBlock);
    id v27 = v17;
    swift_retain();
    char v28 = v33;
    static DispatchQoS.unspecified.getter();
    uint64_t v35 = _swiftEmptyArrayStorage;
    sub_100334308((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002B4B9C();
    uint64_t v29 = v32;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v26);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v29, v2);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v6);

    return swift_release();
  }
  return result;
}

void sub_100332A48()
{
  uint64_t v1 = v0;
  if (qword_100969BD8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10096F250);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    type metadata accessor for SDAuthenticationRegistrationManager();
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    uint64_t v9 = sub_100254634(v6, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s: Adding Observer for keyBagChanged", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  id v8 = [self defaultCenter];
  if (qword_100969C10 != -1) {
    swift_once();
  }
  [v8 addObserver:v1 selector:@selector(handleKeyBagStateChanged) name:qword_100994488 object:v9];
}

uint64_t sub_100332C90()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  os_log_type_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = *(void *)(v0 + 40);
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_100334300;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008D6D80;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v12[1] = _swiftEmptyArrayStorage;
  sub_100334308((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002B4B9C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  return swift_release();
}

unsigned __int8 *sub_100332F40()
{
  swift_beginAccess();
  uint64_t result = (unsigned __int8 *)swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    if (qword_10096A198 != -1) {
      swift_once();
    }
    if (qword_100994D10)
    {
      uint64_t result = (unsigned __int8 *)[self sharedMonitor];
      if (!result)
      {
        __break(1u);
        return result;
      }
      uint64_t v2 = result;
      unsigned int v3 = [result deviceKeyBagLocked];

      if (v3 != v1[48]) {
        sub_1003324D4();
      }
    }
    return (unsigned __int8 *)swift_release();
  }
  return result;
}

uint64_t sub_100333064(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v6 - 8);
  uint64_t v38 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  char v14 = &v30[-v13];
  static Date.now.getter();
  if (qword_100969BD8 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_10000B47C(v15, (uint64_t)qword_10096F250);
  uint64_t v37 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16);
  v37(v12, v14, v8);
  swift_bridgeObjectRetain_n();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  int v18 = v17;
  BOOL v19 = os_log_type_enabled(v16, v17);
  uint64_t v35 = a1;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v34 = v14;
    uint64_t v21 = v20;
    uint64_t v32 = swift_slowAlloc();
    v40[0] = v32;
    *(_DWORD *)uint64_t v21 = 136315394;
    int v31 = v18;
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_100254634(a1, a2, v40);
    uint64_t v33 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 12) = 2080;
    uint64_t v22 = a2;
    sub_100334308(&qword_100974530, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v39 = sub_100254634(v23, v24, v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    int64_t v36 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
    v36(v12, v8);
    _os_log_impl((void *)&_mh_execute_header, v16, (os_log_type_t)v31, "Updating last used for device %s to %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    char v14 = v34;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    uint64_t v22 = a2;
    int64_t v36 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
    v36(v12, v8);
  }

  uint64_t v25 = (uint64_t)v38;
  v37(v38, v14, v8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v25, 0, 1, v8);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1004674E4(v25, v35, v22);
  swift_endAccess();
  id v26 = [self standardUserDefaults];
  swift_bridgeObjectRetain();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v28 = String._bridgeToObjectiveC()();
  [v26 setObject:isa forKey:v28];

  return ((uint64_t (*)(unsigned char *, uint64_t))v36)(v14, v8);
}

void sub_10033352C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 40);
}

uint64_t sub_10033355C()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDAuthenticationRegistrationManager()
{
  return self;
}

ValueMetadata *type metadata accessor for SDAuthenticationRegistrationManager.Capabilities()
{
  return &type metadata for SDAuthenticationRegistrationManager.Capabilities;
}

unint64_t sub_1003335D4()
{
  unint64_t result = qword_10096FBB0;
  if (!qword_10096FBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096FBB0);
  }
  return result;
}

unint64_t sub_10033362C()
{
  unint64_t result = qword_10096FBB8;
  if (!qword_10096FBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096FBB8);
  }
  return result;
}

unint64_t sub_100333684()
{
  unint64_t result = qword_10096FBC0;
  if (!qword_10096FBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096FBC0);
  }
  return result;
}

unint64_t sub_1003336DC()
{
  unint64_t result = qword_10096FBC8;
  if (!qword_10096FBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096FBC8);
  }
  return result;
}

uint64_t sub_100333730(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_10096FBE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100333798(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_10096FBE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100333800()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100333838()
{
  return sub_10032E4B8();
}

uint64_t sub_100333844(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10000A844((uint64_t *)&unk_10096F950) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_10032E554(a1, v5, v6, v7, v8);
}

uint64_t sub_100333944()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_10096F950);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100333A38(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10000A844((uint64_t *)&unk_10096F950) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_10000A6F0;
  return sub_10032F144(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_100333B68()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_10096F950);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100333C48(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10000A844((uint64_t *)&unk_10096F950) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10000A6F0;
  return sub_10032FA98(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_100333D4C(uint64_t a1)
{
  return sub_10032B8B0(a1, v1, (uint64_t)&unk_1008D6C78, (uint64_t)&unk_10096FC68);
}

uint64_t sub_100333D84()
{
  return sub_100260F50(40);
}

uint64_t sub_100333D8C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F4;
  return sub_10032AA40(a1, v4, v5, v6);
}

uint64_t sub_100333E44(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10000A844((uint64_t *)&unk_10096F950) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_10032AAEC(a1, v5, v6, v7, v8);
}

void sub_100333F44(uint64_t a1)
{
  sub_100329CC0(a1, v1);
}

uint64_t sub_100333F4C()
{
  return sub_1003346D0((uint64_t *)&unk_10096F950);
}

void sub_100333F58(void *a1)
{
  uint64_t v3 = *(void *)(sub_10000A844((uint64_t *)&unk_10096F950) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_100329E94(a1, v4, v5);
}

uint64_t sub_100333FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100333FE0()
{
  return swift_release();
}

uint64_t sub_100333FE8(uint64_t a1)
{
  return sub_10032B8B0(a1, v1, (uint64_t)&unk_1008D6D40, (uint64_t)&unk_10096FC90);
}

uint64_t sub_100334020()
{
  return sub_100260F50(40);
}

uint64_t sub_100334028(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F0;
  return sub_10032B804(a1, v4, v5, v6);
}

uint64_t sub_1003340E0()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_10096F950);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003341B8(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10000A844((uint64_t *)&unk_10096F950) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_10032BA84(a1, v5, v6, v7, v8);
}

uint64_t sub_1003342B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
LABEL_9:
    __break(1u);
    return static String._fromUTF8Repairing(_:)(a1, a2);
  }
  uint64_t v3 = a1;
  int v4 = *(unsigned __int8 *)(a1 + 32);
  a1 += 32;
  if (v4)
  {
    a2 = 0;
    uint64_t v5 = v2 - 1;
    uint64_t v6 = v3 + 33;
    while (v5 != a2)
    {
      if (!*(unsigned __int8 *)(v6 + a2++)) {
        return static String._fromUTF8Repairing(_:)(a1, a2);
      }
    }
    __break(1u);
    goto LABEL_9;
  }
  a2 = 0;
  return static String._fromUTF8Repairing(_:)(a1, a2);
}

unsigned __int8 *sub_100334300()
{
  return sub_100332F40();
}

uint64_t sub_100334308(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100334350()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100334390()
{
  sub_1006CCB14(*(unsigned char *)(*(void *)(v0 + 24) + 48));
}

uint64_t sub_1003343BC()
{
  return sub_100260F50(40);
}

uint64_t sub_1003343C4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F4;
  return sub_100331D38(a1, v4, v5, v6);
}

uint64_t sub_100334478()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003344B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_10096FBE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_10033451C(uint64_t a1)
{
  sub_10032C77C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
}

uint64_t sub_100334528()
{
  return sub_1003346D0(&qword_10096FCF0);
}

uint64_t sub_100334534(void *a1)
{
  return sub_100334540(a1, "%s: yielding lost device: %@");
}

uint64_t sub_100334540(void *a1, const char *a2)
{
  uint64_t v5 = *(void *)(sub_10000A844(&qword_10096FCF0) - 8);
  return sub_10032D520(a1, *(void *)(v2 + 16), v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t sub_1003345BC()
{
  uint64_t v1 = sub_10000A844(&qword_10096FCF0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100334650(uint64_t a1)
{
  sub_10000A844(&qword_10096FCF0);

  return sub_10032D84C(a1);
}

uint64_t sub_1003346C4()
{
  return sub_1003346D0(&qword_10096FCF0);
}

uint64_t sub_1003346D0(uint64_t *a1)
{
  uint64_t v2 = sub_10000A844(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 24) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v6, v7);
}

uint64_t sub_100334798(void *a1)
{
  return sub_100334540(a1, "%s: yielding found device: %@");
}

uint64_t sub_1003347A4()
{
  uint64_t v1 = sub_10000A844(&qword_10096FCF0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10033487C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10000A844(&qword_10096FCF0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10000A6F0;
  return sub_10032CDE8(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_100334980()
{
  return sub_100260F50(48);
}

uint64_t sub_100334988(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10000A6F0;
  return sub_100327898(a1, v4, v5, v7, v6);
}

uint64_t sub_100334A48()
{
  return sub_100260F50(48);
}

uint64_t sub_100334A50()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10000A6F0;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10000A6F0;
  return sub_100328450(60);
}

void sub_100334B28(uint64_t a1)
{
}

unint64_t SDAirDropHashError.description.getter(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 2:
      unint64_t result = 0x65442065726F7453;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 5:
      unint64_t result = 0x6D694C2065746152;
      break;
    default:
      return result;
  }
  return result;
}

BOOL static SDAirDropHashError.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void SDAirDropHashError.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int SDAirDropHashError.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

unint64_t sub_100334CD0()
{
  unint64_t result = qword_10096FD38;
  if (!qword_10096FD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096FD38);
  }
  return result;
}

unint64_t sub_100334D24()
{
  return SDAirDropHashError.description.getter(*v0);
}

unsigned char *storeEnumTagSinglePayload for SDAirDropHashError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100334DF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropHashError()
{
  return &type metadata for SDAirDropHashError;
}

uint64_t sub_100334E30(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for URL();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v2[7] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferType();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_100334FB4, v5, 0);
}

void sub_100334FB4()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  SFAirDropReceive.AskRequest.type.getter();
  char v4 = SFAirDrop.TransferType.isLinks.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if ((v4 & 1) == 0)
  {
    uint64_t v24 = 0;
LABEL_28:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (void (*)(uint64_t))v0[1];
    v25(v24);
    return;
  }
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[3];
  uint64_t v7 = SFAirDropReceive.AskRequest.urlItems.getter();
  int64_t v8 = 0;
  uint64_t v26 = v7 + 56;
  uint64_t v9 = -1;
  uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
  if (-v10 < 64) {
    uint64_t v9 = ~(-1 << -(char)v10);
  }
  unint64_t v11 = v9 & *(void *)(v7 + 56);
  uint64_t v28 = v7;
  int64_t v27 = (unint64_t)(63 - v10) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v13 = v12 | (v8 << 6);
      goto LABEL_21;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v14 >= v27) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v27) {
        goto LABEL_26;
      }
      unint64_t v15 = *(void *)(v26 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v27) {
          goto LABEL_26;
        }
        unint64_t v15 = *(void *)(v26 + 8 * v8);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_21:
    uint64_t v17 = v0[7];
    uint64_t v18 = v0[4];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))(v17, *(void *)(v28 + 48) + *(void *)(v5 + 72) * v13, v18);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v17, 0, 1, v18);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v17, 1, v18) == 1)
    {
      swift_release();
      uint64_t v24 = 1;
      goto LABEL_27;
    }
    uint64_t v19 = v0[6];
    uint64_t v20 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 32))(v19, v0[7], v20);
    sub_1003ACB84(&off_1008D26C8);
    uint64_t v22 = v21;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v20);
    uint64_t v23 = *(void **)(v6 + 16);
    *(void *)(v6 + 16) = v22;

    if (!*(void *)(v6 + 16))
    {
      swift_release();
      uint64_t v24 = 0;
LABEL_27:
      swift_arrayDestroy();
      goto LABEL_28;
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v27)
  {
LABEL_26:
    uint64_t v24 = 1;
    (*(void (**)(void, uint64_t, uint64_t, void))(v5 + 56))(v0[7], 1, 1, v0[4]);
    swift_release();
    goto LABEL_27;
  }
  unint64_t v15 = *(void *)(v26 + 8 * v16);
  if (v15)
  {
    int64_t v8 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v8 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v8 >= v27) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v8);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_32:
  __break(1u);
}

uint64_t type metadata accessor for SDAirDropContentHandlerAppStoreLinks()
{
  return self;
}

uint64_t sub_100335340@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerAppStoreLinks();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_100335378(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_100334E30(a1);
}

uint64_t sub_100335414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_10097F1D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void **)(*(void *)v2 + 16);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v9 = type metadata accessor for SFAirDropReceive.ItemDestination();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  id v10 = v8;
  sub_10039FAA0(a1, v8, 1, a2);

  return sub_10024DFE8((uint64_t)v7);
}

void sub_100335518(uint64_t a1, char a2)
{
  uint64_t v3 = SFAirDropReceive.AskRequest.itemsDescription.getter();
  if (v4)
  {
    uint64_t v5 = v3;
    uint64_t v6 = v4;
    swift_bridgeObjectRetain();
    v7._countAndFlagsBits = 95;
    v7._object = (void *)0xE100000000000000;
    String.append(_:)(v7);
    v8._countAndFlagsBits = 0xD000000000000013;
    v8._object = "ITUNES_STORE_LINK_ITUNES_U";
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
    if (a2)
    {
      v9._countAndFlagsBits = 0x4C4154495041435FLL;
      v9._object = (void *)0xEC00000044455A49;
      String.append(_:)(v9);
    }
    v10._countAndFlagsBits = 0x545845545FLL;
    v10._object = (void *)0xE500000000000000;
    String.append(_:)(v10);
    sub_10000A844((uint64_t *)&unk_100977CB0);
    swift_arrayDestroy();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v12 = (id)SFLocalizedStringForKey();

    if (v12)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10000A844((uint64_t *)&unk_10096EE60);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_10076E7A0;
      *(void *)(v13 + 56) = &type metadata for String;
      *(void *)(v13 + 64) = sub_1002E695C();
      *(void *)(v13 + 32) = v5;
      *(void *)(v13 + 40) = v6;
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    v14._countAndFlagsBits = 95;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    String.append(_:)((Swift::String)xmmword_1008D23A8);
    swift_bridgeObjectRelease();
    if (a2)
    {
      v15._countAndFlagsBits = 0x4C4154495041435FLL;
      v15._object = (void *)0xEC00000044455A49;
      String.append(_:)(v15);
    }
    v16._countAndFlagsBits = 0x545845545FLL;
    v16._object = (void *)0xE500000000000000;
    String.append(_:)(v16);
    sub_10000A844((uint64_t *)&unk_100977CB0);
    swift_arrayDestroy();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v18 = (id)SFLocalizedStringForKey();

    if (v18)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      static String.localizedStringWithFormat(_:_:)();
      goto LABEL_10;
    }
  }
  __break(1u);
}

uint64_t sub_10033587C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10096FE28);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10096FE28);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

BOOL sub_100335944(void *a1)
{
  uint64_t v2 = type metadata accessor for DateComponents();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A844(&qword_10096FF20);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  Swift::String v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  NSString v11 = (char *)&v73 - v10;
  id v12 = [a1 emailAddresses];
  uint64_t v13 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_10000A844(&qword_10096FF18);
  unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  id v16 = [a1 phoneNumbers];
  unint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (__OFADD__(v15, v18))
  {
    __break(1u);
LABEL_36:
    v13(v9, 1, 1, v2);
    goto LABEL_37;
  }
  if (v15 + v18 != 1) {
    return 0;
  }
  id v19 = [a1 postalAddresses];
  unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v21) {
    return 0;
  }
  id v22 = [a1 urlAddresses];
  unint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v24) {
    return 0;
  }
  id v25 = [a1 contactRelations];
  unint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v26 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v27) {
    return 0;
  }
  id v28 = [a1 socialProfiles];
  unint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v30) {
    return 0;
  }
  id v31 = [a1 instantMessageAddresses];
  unint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v32 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v33) {
    return 0;
  }
  id v34 = [a1 dates];
  unint64_t v35 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v35 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v36 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v36) {
    return 0;
  }
  id v37 = [a1 birthday];
  if (v37)
  {
    uint64_t v38 = v37;
    static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v11, v5, v2);
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v13(v11, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) != 1)
    {
      uint64_t v39 = (uint64_t)v11;
LABEL_32:
      sub_10000A7E8(v39, &qword_10096FF20);
      return 0;
    }
  }
  else
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v13(v11, 1, 1, v2);
  }
  sub_10000A7E8((uint64_t)v11, &qword_10096FF20);
  id v40 = [a1 nonGregorianBirthday];
  if (!v40) {
    goto LABEL_36;
  }
  uint64_t v41 = v40;
  static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v9, v5, v2);
  v13(v9, 0, 1, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) != 1)
  {
    uint64_t v39 = (uint64_t)v9;
    goto LABEL_32;
  }
LABEL_37:
  sub_10000A7E8((uint64_t)v9, &qword_10096FF20);
  id v42 = [a1 note];
  uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v45 = v44;

  swift_bridgeObjectRelease();
  uint64_t v46 = HIBYTE(v45) & 0xF;
  if ((v45 & 0x2000000000000000) == 0) {
    uint64_t v46 = v43 & 0xFFFFFFFFFFFFLL;
  }
  if (v46) {
    return 0;
  }
  id v47 = [a1 middleName];
  uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v50 = v49;

  swift_bridgeObjectRelease();
  uint64_t v51 = HIBYTE(v50) & 0xF;
  if ((v50 & 0x2000000000000000) == 0) {
    uint64_t v51 = v48 & 0xFFFFFFFFFFFFLL;
  }
  if (v51) {
    return 0;
  }
  id v52 = [a1 nickname];
  uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v55 = v54;

  swift_bridgeObjectRelease();
  uint64_t v56 = HIBYTE(v55) & 0xF;
  if ((v55 & 0x2000000000000000) == 0) {
    uint64_t v56 = v53 & 0xFFFFFFFFFFFFLL;
  }
  if (v56) {
    return 0;
  }
  id v57 = [a1 organizationName];
  uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v60 = v59;

  swift_bridgeObjectRelease();
  uint64_t v61 = HIBYTE(v60) & 0xF;
  if ((v60 & 0x2000000000000000) == 0) {
    uint64_t v61 = v58 & 0xFFFFFFFFFFFFLL;
  }
  if (v61) {
    return 0;
  }
  id v62 = [a1 departmentName];
  uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v65 = v64;

  swift_bridgeObjectRelease();
  uint64_t v66 = HIBYTE(v65) & 0xF;
  if ((v65 & 0x2000000000000000) == 0) {
    uint64_t v66 = v63 & 0xFFFFFFFFFFFFLL;
  }
  if (v66) {
    return 0;
  }
  id v68 = [a1 jobTitle];
  uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v71 = v70;

  swift_bridgeObjectRelease();
  uint64_t v72 = HIBYTE(v71) & 0xF;
  if ((v71 & 0x2000000000000000) == 0) {
    uint64_t v72 = v69 & 0xFFFFFFFFFFFFLL;
  }
  return v72 == 0;
}

uint64_t sub_100336194(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_10000A844(&qword_10096BAF0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    a1 = v3;
    a2 = (void *)v5;
    return _swift_continuation_throwingResumeWithError(a1, a2);
  }
  if (!a2)
  {
    __break(1u);
    return _swift_continuation_throwingResumeWithError(a1, a2);
  }
  **(void **)(*(void *)(v3 + 64) + 40) = a2;
  id v8 = a2;

  return swift_continuation_throwingResume();
}

uint64_t type metadata accessor for SDAirDropContentHandlerExchange()
{
  return self;
}

uint64_t sub_100336278@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerExchange();
  uint64_t result = swift_allocObject();
  *a1 = result;
  return result;
}

uint64_t sub_1003362AC(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = type metadata accessor for SFAirDrop.TransferType();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v3 = static AirDropActor.shared;
  return _swift_task_switch(sub_1003363A4, v3, 0);
}

uint64_t sub_1003363A4()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  SFAirDropReceive.AskRequest.type.getter();
  char v4 = SFAirDrop.TransferType.isOnlyExchange.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5(v4 & 1);
}

void sub_100336448(uint64_t a1, char a2)
{
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = 95;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  v4._countAndFlagsBits = 0xD000000000000013;
  v4._object = "bclass %@ must override %@";
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  if (a2)
  {
    v5._countAndFlagsBits = 0x4C4154495041435FLL;
    v5._object = (void *)0xEC00000044455A49;
    String.append(_:)(v5);
  }
  v6._countAndFlagsBits = 0x545845545FLL;
  v6._object = (void *)0xE500000000000000;
  String.append(_:)(v6);
  sub_10000A844((uint64_t *)&unk_100977CB0);
  swift_arrayDestroy();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = (id)SFLocalizedStringForKey();

  if (v8)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003365C8(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + 529) = a2;
  *(void *)(v2 + 336) = a1;
  uint64_t v3 = sub_10000A844(&qword_10096CC68);
  *(void *)(v2 + 344) = v3;
  *(void *)(v2 + 352) = *(void *)(v3 - 8);
  *(void *)(v2 + 360) = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  *(void *)(v2 + 368) = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URL();
  *(void *)(v2 + 376) = v4;
  *(void *)(v2 + 384) = *(void *)(v4 - 8);
  *(void *)(v2 + 392) = swift_task_alloc();
  *(void *)(v2 + 400) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URLQueryItem();
  *(void *)(v2 + 408) = v5;
  *(void *)(v2 + 416) = *(void *)(v5 - 8);
  *(void *)(v2 + 424) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URLComponents();
  *(void *)(v2 + 432) = v6;
  *(void *)(v2 + 440) = *(void *)(v6 - 8);
  *(void *)(v2 + 448) = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  *(void *)(v2 + 456) = static AirDropActor.shared;
  return _swift_task_switch(sub_100336820, v7, 0);
}

uint64_t sub_100336820()
{
  uint64_t v109 = v0;
  SFAirDrop.ContactInfo.vcard.getter();
  uint64_t v1 = vCardContactProvider.init(data:)();
  unint64_t v3 = v2;
  unint64_t v4 = vCardContactProvider.contacts()();
  sub_100250CC4(v1, v3);
  if (!(v4 >> 62))
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_67:
    swift_bridgeObjectRelease();
    if (qword_100969BE0 == -1)
    {
LABEL_68:
      uint64_t v88 = type metadata accessor for Logger();
      sub_10000B47C(v88, (uint64_t)qword_10096FE28);
      char v89 = Logger.logObject.getter();
      os_log_type_t v90 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v89, v90))
      {
        int v91 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v91 = 0;
        _os_log_impl((void *)&_mh_execute_header, v89, v90, "Failed to import contact which could not be deserialized", v91, 2u);
        swift_slowDealloc();
      }

      uint64_t v92 = type metadata accessor for SFAirDropReceive.Failure();
      sub_100339BBC(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v92 - 8) + 104))(v93, enum case for SFAirDropReceive.Failure.moveToAppFailed(_:), v92);
      swift_willThrow();
      goto LABEL_71;
    }
LABEL_76:
    swift_once();
    goto LABEL_68;
  }
  swift_bridgeObjectRetain();
  uint64_t v87 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v87) {
    goto LABEL_67;
  }
LABEL_3:
  if ((v4 & 0xC000000000000001) == 0)
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v5 = *(id *)(v4 + 32);
      goto LABEL_6;
    }
    __break(1u);
    goto LABEL_76;
  }
  id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_6:
  uint64_t v6 = v5;
  uint64_t v7 = (uint64_t *)(v0 + 200);
  *(void *)(v0 + 464) = v5;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 200) = 0;
  *(void *)(v0 + 208) = 0;
  if (sub_100335944(v6))
  {
    id v104 = [objc_allocWithZone((Class)SFContactInfo) init];
    *(void *)(v0 + 472) = v104;
    id v8 = [v6 emailAddresses];
    uint64_t v9 = sub_10000A844(&qword_10096FF18);
    unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v11)
    {
      uint64_t v102 = v9;
      Swift::String v107 = _swiftEmptyArrayStorage;
      sub_100255510(0, v11 & ~(v11 >> 63), 0);
      if (v11 < 0)
      {
        __break(1u);
LABEL_80:
        __break(1u);
        goto LABEL_81;
      }
      uint64_t v12 = 0;
      uint64_t v13 = v107;
      do
      {
        if ((v10 & 0xC000000000000001) != 0) {
          id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v14 = *(id *)(v10 + 8 * v12 + 32);
        }
        uint64_t v15 = v14;
        id v16 = [v14 value];
        uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v19 = v18;

        Swift::String v107 = v13;
        unint64_t v21 = v13[2];
        unint64_t v20 = v13[3];
        uint64_t v7 = (uint64_t *)(v21 + 1);
        if (v21 >= v20 >> 1)
        {
          sub_100255510(v20 > 1, v21 + 1, 1);
          uint64_t v13 = v107;
        }
        ++v12;
        void v13[2] = v7;
        id v22 = &v13[2 * v21];
        v22[4] = v17;
        v22[5] = v19;
      }
      while (v11 != v12);
      swift_bridgeObjectRelease();
      if (v13[2]) {
        goto LABEL_27;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = _swiftEmptyArrayStorage;
      if (_swiftEmptyArrayStorage[2])
      {
LABEL_27:
        uint64_t v7 = (uint64_t *)v13[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        NSString v27 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
LABEL_30:
        [v104 setEmailAddress:v27];

        id v28 = [v6 phoneNumbers];
        unint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v29 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (!v30)
        {
          swift_bridgeObjectRelease();
          if (_swiftEmptyArrayStorage[2])
          {
LABEL_42:
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            NSString v43 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
LABEL_47:
            [v104 setPhoneNumber:v43];

            id v48 = [objc_allocWithZone((Class)SFClient) init];
            *(void *)(v0 + 480) = v48;
            *(void *)(v0 + 16) = v0;
            *(void *)(v0 + 56) = v0 + 256;
            *(void *)(v0 + 24) = sub_100337724;
            uint64_t v49 = swift_continuation_init();
            *(void *)(v0 + 80) = _NSConcreteStackBlock;
            *(void *)(v0 + 88) = 0x40000000;
            *(void *)(v0 + 96) = sub_100336194;
            *(void *)(v0 + 104) = &unk_1008D71F0;
            *(void *)(v0 + 112) = v49;
            [v48 findContact:v104 completion:v0 + 80];
            return _swift_continuation_await(v0 + 16);
          }
LABEL_46:
          swift_bridgeObjectRelease();
          NSString v43 = 0;
          goto LABEL_47;
        }
        Swift::String v107 = _swiftEmptyArrayStorage;
        sub_100255510(0, v30 & ~(v30 >> 63), 0);
        if ((v30 & 0x8000000000000000) == 0)
        {
          uint64_t v31 = 0;
          unint64_t v32 = v107;
          do
          {
            if ((v29 & 0xC000000000000001) != 0) {
              id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v33 = *(id *)(v29 + 8 * v31 + 32);
            }
            id v34 = v33;
            id v35 = [v33 value];
            id v36 = [v35 stringValue];

            uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v39 = v38;

            Swift::String v107 = v32;
            unint64_t v41 = v32[2];
            unint64_t v40 = v32[3];
            if (v41 >= v40 >> 1)
            {
              sub_100255510(v40 > 1, v41 + 1, 1);
              unint64_t v32 = v107;
            }
            ++v31;
            uint64_t v32[2] = v41 + 1;
            id v42 = &v32[2 * v41];
            v42[4] = v37;
            v42[5] = v39;
          }
          while (v30 != v31);
          swift_bridgeObjectRelease();
          if (v32[2]) {
            goto LABEL_42;
          }
          goto LABEL_46;
        }
        goto LABEL_80;
      }
    }
    swift_bridgeObjectRelease();
    NSString v27 = 0;
    goto LABEL_30;
  }
  if (qword_100969BE0 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for Logger();
  sub_10000B47C(v23, (uint64_t)qword_10096FE28);
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    unint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Creating a new contact because many fields are being shared", v26, 2u);
    swift_slowDealloc();
  }

  if (*(void *)(v0 + 208))
  {
    if (*(unsigned char *)(v0 + 529))
    {
LABEL_25:

LABEL_63:
      uint64_t v85 = *(void *)(v0 + 200);
      uint64_t v84 = *(void *)(v0 + 208);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v86 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
      return v86(v85, v84);
    }
    goto LABEL_51;
  }
  [*(id *)(v0 + 464) mutableCopy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100339B7C();
  swift_dynamicCast();
  unint64_t v44 = *(void **)(v0 + 248);
  CNMutableContact.saveToContactStore()();
  if (v45)
  {
    uint64_t v46 = v0;
    id v47 = *(void **)(v0 + 464);

    uint64_t v0 = v46;
    swift_bridgeObjectRelease();
LABEL_71:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v94 = *(uint64_t (**)(void))(v0 + 8);
    return v94();
  }
  id v50 = [v44 identifier];
  uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v53 = v52;

  swift_bridgeObjectRelease();
  *(void *)(v0 + 200) = v51;
  *(void *)(v0 + 208) = v53;
  if (*(unsigned char *)(v0 + 529)) {
    goto LABEL_25;
  }
LABEL_51:
  uint64_t v102 = v23;
  uint64_t v54 = *(void *)(v0 + 416);
  uint64_t v55 = *(void *)(v0 + 424);
  uint64_t v56 = *(void *)(v0 + 408);
  uint64_t v57 = *(void *)(v0 + 384);
  id v105 = *(id *)(v0 + 376);
  uint64_t v58 = *(void *)(v0 + 368);
  URLComponents.init()();
  URLComponents.scheme.setter();
  URLComponents.host.setter();
  swift_bridgeObjectRetain();
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  sub_10000A844(&qword_10096FF00);
  unint64_t v59 = (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_10076E7A0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v54 + 16))(v60 + v59, v55, v56);
  URLComponents.queryItems.setter();
  URLComponents.url.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, id))(v57 + 48))(v58, 1, v105) == 1)
  {
    sub_10000A7E8(*(void *)(v0 + 368), (uint64_t *)&unk_10096AC10);
    if (qword_100969BE0 == -1)
    {
LABEL_53:
      sub_10000B47C(v102, (uint64_t)qword_10096FE28);
      uint64_t v61 = Logger.logObject.getter();
      os_log_type_t v62 = static os_log_type_t.error.getter();
      uint64_t v103 = v0;
      if (os_log_type_enabled(v61, v62))
      {
        uint64_t v63 = (uint8_t *)swift_slowAlloc();
        uint64_t v106 = swift_slowAlloc();
        *(_DWORD *)uint64_t v63 = 136315138;
        swift_beginAccess();
        if (*(void *)(v0 + 208))
        {
          uint64_t v96 = *v7;
          unint64_t v64 = *(void *)(v0 + 208);
        }
        else
        {
          uint64_t v96 = 0xD000000000000015;
          Swift::String v107 = 0;
          unint64_t v108 = 0xE000000000000000;
          _StringGuts.grow(_:)(17);
          swift_bridgeObjectRelease();
          unint64_t v64 = 0x80000001007B7770;
        }
        uint64_t v82 = *(void *)(v0 + 440);
        uint64_t v100 = *(void *)(v0 + 432);
        uint64_t v101 = *(void *)(v0 + 448);
        uint64_t v83 = *(void *)(v0 + 416);
        unint64_t v98 = *(void **)(v0 + 464);
        uint64_t v99 = *(void *)(v0 + 424);
        uint64_t v97 = *(void *)(v0 + 408);
        swift_bridgeObjectRetain();
        *(void *)(v0 + 272) = sub_100254634(v96, v64, &v106);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v61, v62, "Failed to create URL to launch Contacts for contact ID %s", v63, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v99, v97);
        (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v101, v100);
      }
      else
      {
        uint64_t v74 = (void *)v0;
        uint64_t v75 = *(void **)(v0 + 464);
        uint64_t v77 = v74[55];
        uint64_t v76 = v74[56];
        uint64_t v79 = v74[53];
        uint64_t v78 = v74[54];
        uint64_t v80 = v74[51];
        uint64_t v81 = v74[52];

        (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v79, v80);
        (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v76, v78);
      }
      swift_beginAccess();
      uint64_t v0 = v103;
      goto LABEL_63;
    }
LABEL_81:
    swift_once();
    goto LABEL_53;
  }
  uint64_t v65 = *(void *)(v0 + 400);
  uint64_t v67 = *(void *)(v0 + 376);
  uint64_t v66 = *(void *)(v0 + 384);
  (*(void (**)(uint64_t, void, uint64_t))(v66 + 32))(v65, *(void *)(v0 + 368), v67);
  sub_10000A844(&qword_10096B358);
  unint64_t v68 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  uint64_t v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = xmmword_10076E7A0;
  unint64_t v70 = *(void (**)(unint64_t, uint64_t, uint64_t))(v66 + 16);
  *(void *)(v0 + 496) = v70;
  *(void *)(v0 + 504) = (v66 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v70(v69 + v68, v65, v67);
  *(void *)(v0 + 320) = 0;
  uint64_t v71 = swift_allocObject();
  *(void *)(v71 + 16) = v69;
  *(void *)(v71 + 24) = 0;
  SFProgressTask.init(_:initialProgress:operation:file:line:)();
  uint64_t v72 = (void *)swift_task_alloc();
  *(void *)(v0 + 512) = v72;
  void *v72 = v0;
  v72[1] = sub_100338794;
  uint64_t v73 = *(void *)(v0 + 344);
  return SFProgressTask.finalValue.getter(v0 + 528, v73);
}

uint64_t sub_100337724()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 488) = v2;
  uint64_t v3 = *(void *)(v1 + 456);
  if (v2) {
    unint64_t v4 = sub_100338CEC;
  }
  else {
    unint64_t v4 = sub_100337844;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100337844()
{
  uint64_t v80 = v0;
  uint64_t v1 = *(void **)(v0 + 256);
  if (qword_100969BE0 != -1) {
    swift_once();
  }
  uint64_t v76 = type metadata accessor for Logger();
  sub_10000B47C(v76, (uint64_t)qword_10096FE28);
  id v2 = v1;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v77 = swift_slowAlloc();
    *(_DWORD *)id v5 = 136315138;
    id v6 = [v2 contactIdentifier];
    if (v6)
    {
      uint64_t v7 = v6;
      unint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v10 = v9;
    }
    else
    {
      uint64_t v78 = 0;
      unint64_t v79 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v10 = 0x80000001007B7770;
      unint64_t v8 = 0xD000000000000015;
    }
    *(void *)(v0 + 264) = sub_100254634(v8, v10, &v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing existing contact {fetchedContactInfo.contactIdentifier: %s}", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v11 = [v2 contactIdentifier];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0;
  }
  id v16 = *(void **)(v0 + 472);
  *(void *)(v0 + 216) = v13;
  *(void *)(v0 + 224) = v15;
  uint64_t v78 = 0;
  unint64_t v79 = 0xE000000000000000;
  _StringGuts.grow(_:)(63);
  v17._countAndFlagsBits = 0xD00000000000003CLL;
  v17._object = (void *)0x80000001007B9D70;
  String.append(_:)(v17);
  id v18 = [v16 description];
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v21 = v20;

  v22._countAndFlagsBits = v19;
  v22._object = v21;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 125;
  v23._object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  sub_10000A844(&qword_10096B540);
  Optional.tryUnwrap(_:file:line:)();
  uint64_t v24 = *(void **)(v0 + 480);
  os_log_type_t v25 = *(void **)(v0 + 472);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(v0 + 232);
  uint64_t v26 = *(void *)(v0 + 240);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 200) = v27;
  *(void *)(v0 + 208) = v26;
  if (v26)
  {
    if (*(unsigned char *)(v0 + 529))
    {
LABEL_14:

LABEL_33:
      uint64_t v69 = *(void *)(v0 + 200);
      uint64_t v68 = *(void *)(v0 + 208);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      unint64_t v70 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
      return v70(v69, v68);
    }
  }
  else
  {
    [*(id *)(v0 + 464) mutableCopy];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_100339B7C();
    swift_dynamicCast();
    id v28 = *(void **)(v0 + 248);
    CNMutableContact.saveToContactStore()();
    if (v29)
    {
      uint64_t v30 = *(void **)(v0 + 464);

      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
      return v31();
    }
    id v33 = [v28 identifier];
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v36 = v35;

    swift_bridgeObjectRelease();
    *(void *)(v0 + 200) = v34;
    *(void *)(v0 + 208) = v36;
    if (*(unsigned char *)(v0 + 529)) {
      goto LABEL_14;
    }
  }
  uint64_t v38 = *(void *)(v0 + 416);
  uint64_t v37 = *(void *)(v0 + 424);
  uint64_t v39 = *(void *)(v0 + 408);
  uint64_t v40 = *(void *)(v0 + 376);
  uint64_t v41 = *(void *)(v0 + 384);
  uint64_t v42 = *(void *)(v0 + 368);
  URLComponents.init()();
  URLComponents.scheme.setter();
  URLComponents.host.setter();
  swift_bridgeObjectRetain();
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  sub_10000A844(&qword_10096FF00);
  unint64_t v43 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_10076E7A0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v38 + 16))(v44 + v43, v37, v39);
  URLComponents.queryItems.setter();
  URLComponents.url.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v42, 1, v40) == 1)
  {
    sub_10000A7E8(*(void *)(v0 + 368), (uint64_t *)&unk_10096AC10);
    if (qword_100969BE0 != -1) {
      swift_once();
    }
    sub_10000B47C(v76, (uint64_t)qword_10096FE28);
    uint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v45, v46))
    {
      id v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v77 = swift_slowAlloc();
      *(_DWORD *)id v47 = 136315138;
      swift_beginAccess();
      if (*(void *)(v0 + 208))
      {
        uint64_t v48 = *(void *)(v0 + 200);
        unint64_t v49 = *(void *)(v0 + 208);
      }
      else
      {
        uint64_t v78 = 0;
        unint64_t v79 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        unint64_t v49 = 0x80000001007B7770;
        uint64_t v48 = 0xD000000000000015;
      }
      uint64_t v66 = *(void *)(v0 + 440);
      uint64_t v74 = *(void *)(v0 + 432);
      os_log_t log = *(os_log_t *)(v0 + 448);
      uint64_t v67 = *(void *)(v0 + 416);
      uint64_t v72 = *(void **)(v0 + 464);
      uint64_t v73 = *(void *)(v0 + 424);
      uint64_t v71 = *(void *)(v0 + 408);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 272) = sub_100254634(v48, v49, &v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Failed to create URL to launch Contacts for contact ID %s", v47, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v73, v71);
      (*(void (**)(os_log_t, uint64_t))(v66 + 8))(log, v74);
    }
    else
    {
      unint64_t v59 = *(void **)(v0 + 464);
      uint64_t v61 = *(void *)(v0 + 440);
      uint64_t v60 = *(void *)(v0 + 448);
      uint64_t v63 = *(void *)(v0 + 424);
      uint64_t v62 = *(void *)(v0 + 432);
      uint64_t v64 = *(void *)(v0 + 408);
      uint64_t v65 = *(void *)(v0 + 416);

      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v63, v64);
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
    }
    swift_beginAccess();
    goto LABEL_33;
  }
  uint64_t v50 = *(void *)(v0 + 400);
  uint64_t v52 = *(void *)(v0 + 376);
  uint64_t v51 = *(void *)(v0 + 384);
  (*(void (**)(uint64_t, void, uint64_t))(v51 + 32))(v50, *(void *)(v0 + 368), v52);
  sub_10000A844(&qword_10096B358);
  unint64_t v53 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_10076E7A0;
  uint64_t v55 = *(void (**)(unint64_t, uint64_t, uint64_t))(v51 + 16);
  *(void *)(v0 + 496) = v55;
  *(void *)(v0 + 504) = (v51 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v55(v54 + v53, v50, v52);
  *(void *)(v0 + 320) = 0;
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = v54;
  *(void *)(v56 + 24) = 0;
  SFProgressTask.init(_:initialProgress:operation:file:line:)();
  uint64_t v57 = (void *)swift_task_alloc();
  *(void *)(v0 + 512) = v57;
  *uint64_t v57 = v0;
  v57[1] = sub_100338794;
  uint64_t v58 = *(void *)(v0 + 344);
  return SFProgressTask.finalValue.getter(v0 + 528, v58);
}

uint64_t sub_100338794()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 520) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 456);
  if (v0) {
    os_log_type_t v4 = sub_100339930;
  }
  else {
    os_log_type_t v4 = sub_1003388C0;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1003388C0()
{
  uint64_t v46 = v0;
  if (*(unsigned char *)(v0 + 528))
  {
    uint64_t v1 = *(void *)(v0 + 440);
    uint64_t v43 = *(void *)(v0 + 448);
    uint64_t v2 = *(void *)(v0 + 416);
    uint64_t v39 = *(void *)(v0 + 424);
    uint64_t v41 = *(void *)(v0 + 432);
    uint64_t v4 = *(void *)(v0 + 400);
    uint64_t v3 = *(void *)(v0 + 408);
    uint64_t v6 = *(void *)(v0 + 376);
    uint64_t v5 = *(void *)(v0 + 384);
    uint64_t v7 = *(void *)(v0 + 352);
    uint64_t v8 = *(void *)(v0 + 360);
    uint64_t v9 = *(void *)(v0 + 344);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v39, v3);
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v43, v41);
  }
  else
  {
    if (qword_100969BE0 != -1) {
      swift_once();
    }
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 496);
    uint64_t v11 = *(void *)(v0 + 392);
    uint64_t v12 = *(void *)(v0 + 400);
    uint64_t v13 = *(void *)(v0 + 376);
    uint64_t v14 = type metadata accessor for Logger();
    sub_10000B47C(v14, (uint64_t)qword_10096FE28);
    v10(v11, v12, v13);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t type = static os_log_type_t.error.getter();
    BOOL v16 = os_log_type_enabled(v15, type);
    Swift::String v17 = *(void **)(v0 + 464);
    uint64_t v18 = *(void *)(v0 + 440);
    uint64_t v19 = *(void *)(v0 + 448);
    uint64_t v20 = *(void *)(v0 + 432);
    uint64_t v42 = *(void *)(v0 + 424);
    uint64_t v44 = *(void *)(v0 + 416);
    uint64_t v21 = *(void *)(v0 + 392);
    uint64_t v38 = *(void *)(v0 + 400);
    uint64_t v40 = *(void *)(v0 + 408);
    uint64_t v23 = *(void *)(v0 + 376);
    uint64_t v22 = *(void *)(v0 + 384);
    uint64_t v24 = *(void *)(v0 + 352);
    uint64_t v36 = *(void *)(v0 + 344);
    uint64_t v37 = *(void *)(v0 + 360);
    if (v16)
    {
      uint64_t v34 = *(void *)(v0 + 432);
      os_log_type_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v25 = 136315138;
      sub_100339BBC((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 328) = sub_100254634(v26, v27, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      id v28 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v28(v21, v23);
      _os_log_impl((void *)&_mh_execute_header, v15, type, "Failed to launch Contacts for URL %s", v25, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v37, v36);
      v28(v38, v23);
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v40);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v34);
    }
    else
    {

      uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v29(v21, v23);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v37, v36);
      v29(v38, v23);
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v40);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
    }
  }
  uint64_t v31 = *(void *)(v0 + 200);
  uint64_t v30 = *(void *)(v0 + 208);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v32(v31, v30);
}

uint64_t sub_100338CEC()
{
  uint64_t v88 = v0;
  uint64_t v1 = *(void **)(v0 + 480);
  swift_willThrow();

  uint64_t v2 = *(void *)(v0 + 488);
  uint64_t v3 = (void *)_convertErrorToNSError(_:)();
  id v4 = [v3 domain];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0) {
      goto LABEL_13;
    }
  }
  if ([v3 code] == (id)-6727)
  {
    if (qword_100969BE0 != -1) {
      swift_once();
    }
    uint64_t v11 = *(void **)(v0 + 472);
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000B47C(v12, (uint64_t)qword_10096FE28);
    id v13 = v11;
    swift_errorRetain();
    id v14 = v13;
    swift_errorRetain();
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    BOOL v17 = os_log_type_enabled(v15, v16);
    uint64_t v18 = *(void **)(v0 + 472);
    if (v17)
    {
      uint64_t v85 = v3;
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 138412546;
      *(void *)(v0 + 304) = v18;
      os_log_t log = v15;
      id v21 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v20 = v18;

      *(_WORD *)(v19 + 12) = 2112;
      swift_errorRetain();
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 312) = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v20[1] = v22;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v16, "Contact not found. Creating a new one {predicateContactInfo: %@, error: %@}", (uint8_t *)v19, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      goto LABEL_17;
    }

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    if (!*(void *)(v0 + 208)) {
      goto LABEL_23;
    }
LABEL_20:
    if ((*(unsigned char *)(v0 + 529) & 1) == 0) {
      goto LABEL_28;
    }
LABEL_21:

LABEL_41:
    uint64_t v75 = *(void *)(v0 + 200);
    uint64_t v74 = *(void *)(v0 + 208);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v76 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v76(v75, v74);
  }
LABEL_13:
  if (qword_100969BE0 != -1) {
    swift_once();
  }
  uint64_t v23 = *(void **)(v0 + 472);
  uint64_t v24 = type metadata accessor for Logger();
  sub_10000B47C(v24, (uint64_t)qword_10096FE28);
  id v25 = v23;
  swift_errorRetain();
  id v26 = v25;
  swift_errorRetain();
  unint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.error.getter();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = *(void **)(v0 + 472);
  if (!v29)
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    if (!*(void *)(v0 + 208)) {
      goto LABEL_23;
    }
    goto LABEL_20;
  }
  uint64_t v85 = v3;
  uint64_t v31 = swift_slowAlloc();
  uint64_t v82 = (void *)swift_slowAlloc();
  v87[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v31 = 136315394;
  *(void *)(v0 + 280) = v2;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  uint64_t v32 = String.init<A>(describing:)();
  *(void *)(v0 + 288) = sub_100254634(v32, v33, v87);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  *(_WORD *)(v31 + 12) = 2112;
  *(void *)(v0 + 296) = v30;
  id v34 = v30;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *uint64_t v82 = v30;

  _os_log_impl((void *)&_mh_execute_header, v27, v28, "Error fetching contact. Creating a new one {error: %s, predicateContactInfo: %@}", (uint8_t *)v31, 0x16u);
  sub_10000A844(&qword_10096B850);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

LABEL_17:
  swift_errorRelease();
  if (*(void *)(v0 + 208)) {
    goto LABEL_20;
  }
LABEL_23:
  [*(id *)(v0 + 464) mutableCopy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100339B7C();
  swift_dynamicCast();
  uint64_t v35 = *(void **)(v0 + 248);
  CNMutableContact.saveToContactStore()();
  if (v36)
  {
    uint64_t v37 = *(void **)(v0 + 464);

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
    return v38();
  }
  id v40 = [v35 identifier];
  uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v43 = v42;

  swift_bridgeObjectRelease();
  *(void *)(v0 + 200) = v41;
  *(void *)(v0 + 208) = v43;
  if (*(unsigned char *)(v0 + 529)) {
    goto LABEL_21;
  }
LABEL_28:
  uint64_t v45 = *(void *)(v0 + 416);
  uint64_t v44 = *(void *)(v0 + 424);
  uint64_t v46 = *(void *)(v0 + 408);
  uint64_t v47 = *(void *)(v0 + 376);
  uint64_t v48 = *(void *)(v0 + 384);
  uint64_t v49 = *(void *)(v0 + 368);
  URLComponents.init()();
  URLComponents.scheme.setter();
  URLComponents.host.setter();
  swift_bridgeObjectRetain();
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  sub_10000A844(&qword_10096FF00);
  unint64_t v50 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_10076E7A0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v45 + 16))(v51 + v50, v44, v46);
  URLComponents.queryItems.setter();
  URLComponents.url.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v49, 1, v47) == 1)
  {
    sub_10000A7E8(*(void *)(v0 + 368), (uint64_t *)&unk_10096AC10);
    if (qword_100969BE0 != -1) {
      swift_once();
    }
    uint64_t v52 = type metadata accessor for Logger();
    sub_10000B47C(v52, (uint64_t)qword_10096FE28);
    unint64_t v53 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      uint64_t v86 = swift_slowAlloc();
      *(_DWORD *)uint64_t v55 = 136315138;
      swift_beginAccess();
      if (*(void *)(v0 + 208))
      {
        uint64_t v77 = *(void *)(v0 + 200);
        unint64_t v56 = *(void *)(v0 + 208);
      }
      else
      {
        uint64_t v77 = 0xD000000000000015;
        v87[0] = 0;
        v87[1] = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        unint64_t v56 = 0x80000001007B7770;
      }
      uint64_t v72 = *(void *)(v0 + 440);
      uint64_t v81 = *(void *)(v0 + 432);
      uint64_t v83 = *(void *)(v0 + 448);
      uint64_t v73 = *(void *)(v0 + 416);
      uint64_t v80 = *(void *)(v0 + 424);
      uint64_t v78 = *(void **)(v0 + 464);
      uint64_t v79 = *(void *)(v0 + 408);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 272) = sub_100254634(v77, v56, &v86);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "Failed to create URL to launch Contacts for contact ID %s", v55, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v80, v79);
      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v83, v81);
    }
    else
    {
      uint64_t v67 = *(void *)(v0 + 440);
      uint64_t v66 = *(void *)(v0 + 448);
      uint64_t v69 = *(void *)(v0 + 424);
      uint64_t v68 = *(void *)(v0 + 432);
      uint64_t v70 = *(void *)(v0 + 408);
      uint64_t v71 = *(void *)(v0 + 416);

      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v69, v70);
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v68);
    }
    swift_beginAccess();
    goto LABEL_41;
  }
  uint64_t v57 = *(void *)(v0 + 400);
  uint64_t v59 = *(void *)(v0 + 376);
  uint64_t v58 = *(void *)(v0 + 384);
  (*(void (**)(uint64_t, void, uint64_t))(v58 + 32))(v57, *(void *)(v0 + 368), v59);
  sub_10000A844(&qword_10096B358);
  unint64_t v60 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  uint64_t v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = xmmword_10076E7A0;
  uint64_t v62 = *(void (**)(unint64_t, uint64_t, uint64_t))(v58 + 16);
  *(void *)(v0 + 496) = v62;
  *(void *)(v0 + 504) = (v58 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v62(v61 + v60, v57, v59);
  *(void *)(v0 + 320) = 0;
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = v61;
  *(void *)(v63 + 24) = 0;
  SFProgressTask.init(_:initialProgress:operation:file:line:)();
  uint64_t v64 = (void *)swift_task_alloc();
  *(void *)(v0 + 512) = v64;
  *uint64_t v64 = v0;
  v64[1] = sub_100338794;
  uint64_t v65 = *(void *)(v0 + 344);
  return SFProgressTask.finalValue.getter(v0 + 528, v65);
}

uint64_t sub_100339930()
{
  uint64_t v1 = *(void *)(v0 + 440);
  uint64_t v13 = *(void *)(v0 + 432);
  uint64_t v14 = *(void *)(v0 + 448);
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v12 = *(void *)(v0 + 424);
  uint64_t v4 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 408);
  uint64_t v6 = *(void *)(v0 + 376);
  uint64_t v5 = *(void *)(v0 + 384);
  uint64_t v7 = *(void *)(v0 + 352);
  uint64_t v8 = *(void *)(v0 + 360);
  uint64_t v9 = *(void *)(v0 + 344);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v12, v3);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v14, v13);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_100339A78()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100339AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  char v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v10;
  *char v10 = v4;
  v10[1] = sub_10000A6F4;
  return sub_1003A428C(a1, a2, a3, v9, v8);
}

unint64_t sub_100339B7C()
{
  unint64_t result = qword_10096FF10;
  if (!qword_10096FF10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10096FF10);
  }
  return result;
}

uint64_t sub_100339BBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100339C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  v5[10] = a5;
  v5[7] = a2;
  v5[8] = a3;
  v5[6] = a1;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v5[11] = static AirDropActor.shared;
  return _swift_task_switch(sub_100339CAC, v6, 0);
}

uint64_t sub_100339CAC()
{
  uint64_t v1 = (uint64_t *)v0[6];
  uint64_t v3 = *v1;
  unint64_t v2 = v1[1];
  v0[12] = v2;
  if (v2)
  {
    uint64_t v4 = HIBYTE(v2) & 0xF;
    if ((v2 & 0x2000000000000000) == 0) {
      uint64_t v4 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (v4)
    {
      v0[16] = v2;
      uint64_t v20 = (char *)&dword_100970708 + dword_100970708;
      swift_bridgeObjectRetain_n();
      uint64_t v5 = (void *)swift_task_alloc();
      v0[17] = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_10033A4D0;
      __asm { BR              X8; sub_1003628E0 }
    }
  }
  unint64_t v6 = v0[8];
  if (v6 >> 60 == 15)
  {
    uint64_t v7 = qword_100969BE0;
    swift_bridgeObjectRetain();
    if (v7 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000B47C(v8, (uint64_t)qword_10096FE28);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Missing vCardData to resolve missing appleID", v11, 2u);
      swift_slowDealloc();
    }

    uint64_t v12 = type metadata accessor for SFAirDropReceive.Failure();
    sub_100339BBC(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v12 - 8) + 104))(v13, enum case for SFAirDropReceive.Failure.badRequest(_:), v12);
    swift_willThrow();
    swift_bridgeObjectRelease();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
    return v14();
  }
  else
  {
    uint64_t v16 = v0[7];
    swift_bridgeObjectRetain();
    sub_100278C78(v16, v6);
    id v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100970710 + dword_100970710);
    BOOL v17 = (void *)swift_task_alloc();
    v0[13] = v17;
    *BOOL v17 = v0;
    v17[1] = sub_10033A04C;
    uint64_t v19 = v0[7];
    uint64_t v18 = v0[8];
    return v21(v19, v18, 0, 0);
  }
}

uint64_t sub_10033A04C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)*v3;
  unint64_t v6 = (void *)*v3;
  void v6[2] = v3;
  v6[3] = a1;
  v6[4] = a2;
  v6[5] = v2;
  v6[14] = v2;
  swift_task_dealloc();
  uint64_t v7 = v5[11];
  if (v2)
  {
    uint64_t v8 = sub_10033A190;
  }
  else
  {
    v6[15] = a2;
    uint64_t v8 = sub_10033A200;
  }
  return _swift_task_switch(v8, v7, 0);
}

uint64_t sub_10033A190()
{
  sub_100250CB0(v0[7], v0[8]);
  swift_bridgeObjectRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10033A200()
{
  uint64_t v1 = v0[15];
  sub_100250CB0(v0[7], v0[8]);
  swift_bridgeObjectRelease();
  if (v1)
  {
    v0[16] = v0[15];
    uint64_t v11 = (char *)&dword_100970708 + dword_100970708;
    swift_bridgeObjectRetain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[17] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10033A4D0;
    __asm { BR              X8; sub_1003628E0 }
  }
  if (qword_100969BE0 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000B47C(v3, (uint64_t)qword_10096FE28);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Missing appleID to import identity", v6, 2u);
    swift_slowDealloc();
  }

  uint64_t v7 = type metadata accessor for SFAirDropReceive.Failure();
  sub_100339BBC(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v7 - 8) + 104))(v8, enum case for SFAirDropReceive.Failure.badRequest(_:), v7);
  swift_willThrow();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_10033A4D0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = sub_10033A65C;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 88);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_10033A5F8;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10033A5F8()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10033A65C()
{
  swift_bridgeObjectRelease_n();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10033A6C4()
{
  qword_100994470 = 0xFFFFLL;
}

uint64_t sub_10033A7AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_10024A0E8(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_10033A7EC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10096FF30);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10096FF30);
  if (qword_100969CD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946C0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10033A8B4()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100969BF0 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000B47C(v5, (uint64_t)qword_10096FF30);
  v14[0] = v0;
  unint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v9 = (char *)v14[0] + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
    swift_beginAccess();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v9, 1, v1))
    {
      unint64_t v10 = 0x80000001007BA090;
      unint64_t v11 = 0xD000000000000018;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v9, v1);
      unint64_t v11 = Date.description.getter();
      unint64_t v10 = v13;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    v14[1] = (id)sub_100254634(v11, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Storing last device unlock as %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    id v12 = v14[0];
  }
}

void sub_10033ABAC()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100969BF0 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000B47C(v5, (uint64_t)qword_10096FF30);
  v14[0] = v0;
  unint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v9 = (char *)v14[0] + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastLockDate;
    swift_beginAccess();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v9, 1, v1))
    {
      unint64_t v10 = 0x80000001007BA0F0;
      unint64_t v11 = 0xD000000000000016;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v9, v1);
      unint64_t v11 = Date.description.getter();
      unint64_t v10 = v13;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    v14[1] = (id)sub_100254634(v11, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Storing last device locked as %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    id v12 = v14[0];
  }
}

double sub_10033AEA4()
{
  double result = 3600.0;
  qword_10096FF48 = 0x40AC200000000000;
  return result;
}

void sub_10033AEBC()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_allowsLenientMotionConditions) == 1)
  {
    if (qword_100969BF0 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_10000B47C(v1, (uint64_t)qword_10096FF30);
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      uint64_t v4 = "Allowing lenient motion conditions";
LABEL_10:
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, v4, v3, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    if (qword_100969BF0 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000B47C(v5, (uint64_t)qword_10096FF30);
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      uint64_t v4 = "Denying lenient motion conditions";
      goto LABEL_10;
    }
  }
}

void sub_10033B040()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100969BF0 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000B47C(v5, (uint64_t)qword_10096FF30);
  v14[0] = v0;
  unint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v9 = (char *)v14[0] + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedAndOnWristDate;
    swift_beginAccess();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v9, 1, v1))
    {
      unint64_t v10 = 0x80000001007BA110;
      unint64_t v11 = 0xD000000000000029;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v9, v1);
      unint64_t v11 = Date.description.getter();
      unint64_t v10 = v13;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    v14[1] = (id)sub_100254634(v11, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Storing last device unlocked and on wrist as %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    id v12 = v14[0];
  }
}

BOOL sub_10033B338()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  os_log_type_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
  swift_beginAccess();
  sub_1002BEBA4(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10033FEB0((uint64_t)v3);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  id v9 = [self standardUserDefaults];
  NSString v10 = String._bridgeToObjectiveC()();
  unsigned int v11 = [v9 BOOLForKey:v10];

  if (v11)
  {
    if (qword_100969BF0 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000B47C(v12, (uint64_t)qword_10096FF30);
    unint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "### TESTING ONLY: pretendNotUnlockedRecently is set, returning false for unlockedWithinLast6_5Hrs", v15, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return 0;
  }
  Date.timeIntervalSinceNow.getter();
  double v18 = v17;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v18 >= -23400.0;
}

BOOL sub_10033B628()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  os_log_type_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastLockDate;
  swift_beginAccess();
  sub_1002BEBA4(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10033FEB0((uint64_t)v3);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  id v9 = [self standardUserDefaults];
  NSString v10 = String._bridgeToObjectiveC()();
  unsigned int v11 = [v9 BOOLForKey:v10];

  if (v11)
  {
    if (qword_100969BF0 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000B47C(v12, (uint64_t)qword_10096FF30);
    unint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "### TESTING ONLY: expireEscrowTokens is set, returning phone was locked for more than 1 hr", v15, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return 0;
  }
  Date.timeIntervalSinceNow.getter();
  double v18 = v17;
  if (qword_100969BF8 != -1) {
    swift_once();
  }
  double v19 = *(double *)&qword_10096FF48;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v18 >= -v19;
}

char *sub_10033B948(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v4 - 8);
  uint64_t v68 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate];
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  v8(&v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastLockDate], 1, 1, v7);
  id v9 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator];
  *id v9 = 0;
  v9[1] = 0;
  NSString v10 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator];
  *NSString v10 = 0;
  v10[1] = 0;
  unsigned int v11 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceBiolockedGenerator];
  void *v11 = 0;
  v11[1] = 0;
  uint64_t v12 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceHasPasscodeGenerator];
  *uint64_t v12 = 0;
  v12[1] = 0;
  unint64_t v13 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_sleepModeGenerator];
  *unint64_t v13 = 0;
  v13[1] = 0;
  os_log_type_t v14 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lostModeGenerator];
  void *v14 = 0;
  v14[1] = 0;
  uint64_t v15 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_motionGenerator];
  *uint64_t v15 = 0;
  v15[1] = 0;
  uint64_t v16 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_faceIDEnabledGenerator];
  *uint64_t v16 = 0;
  v16[1] = 0;
  double v17 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeHandler];
  *double v17 = 0;
  v17[1] = 0;
  double v18 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedByPairedUnlockGenerator];
  *double v18 = 0;
  v18[1] = 0;
  double v19 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsBioUnarmedGenerator];
  *double v19 = 0;
  v19[1] = 0;
  uint64_t v20 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInClassDGenerator];
  *uint64_t v20 = 0;
  v20[1] = 0;
  id v21 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInAssertDelayGenerator];
  *id v21 = 0;
  v21[1] = 0;
  *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes] = _swiftEmptyArrayStorage;
  v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_allowsLenientMotionConditions] = 0;
  *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_pearlDevice] = 0;
  v8(&v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedAndOnWristDate], 1, 1, v7);
  *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_queue] = a1;
  v70.receiver = v1;
  v70.super_class = ObjectType;
  id v69 = a1;
  uint64_t v22 = (char *)[v70 init];
  uint64_t v23 = (uint64_t (**)())&v22[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator];
  uint64_t v24 = *(void *)&v22[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator];
  *uint64_t v23 = variable initialization expression of HeadphoneProxFeatureClient.delegate;
  v23[1] = 0;
  id v25 = v22;
  sub_1002CA430(v24);
  id v26 = (id (**)())&v25[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator];
  uint64_t v27 = *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator];
  uint8_t *v26 = sub_10033BFF0;
  v26[1] = 0;
  sub_1002CA430(v27);
  os_log_type_t v28 = (id (**)())&v25[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceBiolockedGenerator];
  uint64_t v29 = *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceBiolockedGenerator];
  *os_log_type_t v28 = sub_10033C00C;
  v28[1] = 0;
  sub_1002CA430(v29);
  uint64_t v30 = (id (**)())&v25[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceHasPasscodeGenerator];
  uint64_t v31 = *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceHasPasscodeGenerator];
  void *v30 = sub_10033C028;
  v30[1] = 0;
  sub_1002CA430(v31);
  uint64_t v32 = (id (**)())&v25[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_sleepModeGenerator];
  uint64_t v33 = *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_sleepModeGenerator];
  void *v32 = sub_10033C088;
  v32[1] = 0;
  sub_1002CA430(v33);
  id v34 = (id (**)())&v25[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lostModeGenerator];
  uint64_t v35 = *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lostModeGenerator];
  *id v34 = sub_10033C0A4;
  v34[1] = 0;
  sub_1002CA430(v35);
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v25;
  uint64_t v37 = (void (**)(uint64_t, uint64_t))&v25[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_motionGenerator];
  uint64_t v38 = *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_motionGenerator];
  void *v37 = sub_100340220;
  v37[1] = (void (*)(uint64_t, uint64_t))v36;
  uint64_t v39 = v25;
  sub_1002CA430(v38);
  uint64_t v40 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v41 = (BOOL (**)())&v39[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_faceIDEnabledGenerator];
  uint64_t v42 = *(void *)&v39[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_faceIDEnabledGenerator];
  *uint64_t v41 = sub_100340228;
  v41[1] = (BOOL (*)())v40;
  sub_1002CA430(v42);
  uint64_t v43 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v44 = (void (**)(uint64_t))&v39[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeHandler];
  uint64_t v45 = *(void *)&v39[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeHandler];
  *uint64_t v44 = sub_100340230;
  v44[1] = (void (*)(uint64_t))v43;
  sub_1002CA430(v45);
  uint64_t v46 = (id (**)())&v39[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedByPairedUnlockGenerator];
  uint64_t v47 = *(void *)&v39[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedByPairedUnlockGenerator];
  *uint64_t v46 = sub_10033CE84;
  v46[1] = 0;
  sub_1002CA430(v47);
  uint64_t v48 = (uint64_t (**)())&v39[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsBioUnarmedGenerator];
  uint64_t v49 = *(void *)&v39[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsBioUnarmedGenerator];
  *uint64_t v48 = sub_10033CEA0;
  v48[1] = 0;
  sub_1002CA430(v49);
  unint64_t v50 = (id (**)())&v39[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInClassDGenerator];
  uint64_t v51 = *(void *)&v39[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInClassDGenerator];
  *unint64_t v50 = sub_10033CF3C;
  v50[1] = 0;
  sub_1002CA430(v51);
  uint64_t v52 = (id (**)())&v39[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInAssertDelayGenerator];
  uint64_t v53 = *(void *)&v39[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInAssertDelayGenerator];
  *uint64_t v52 = sub_10033CFB4;
  v52[1] = 0;
  sub_1002CA430(v53);
  os_log_type_t v54 = *v26;
  if (*v26)
  {
    uint64_t v55 = swift_retain();
    char v56 = ((uint64_t (*)(uint64_t))v54)(v55);
    sub_1002CA430((uint64_t)v54);
    if (v56)
    {
      uint64_t v57 = (uint64_t)v68;
      Date.init()();
      v8((char *)v57, 0, 1, v7);
      uint64_t v58 = (uint64_t)&v39[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate];
      swift_beginAccess();
      sub_100340238(v57, v58);
      swift_endAccess();
    }
  }
  uint64_t v59 = self;
  id v60 = [v59 defaultCenter];
  uint64_t v61 = qword_100969C10;
  uint64_t v62 = v39;
  if (v61 != -1) {
    swift_once();
  }
  [v60 addObserver:v62 selector:"handleKeyBagStateChanged" name:qword_100994488 object:0];

  id v63 = [v59 defaultCenter];
  uint64_t v64 = qword_100969C28;
  uint64_t v65 = v62;
  if (v64 != -1) {
    swift_once();
  }
  [v63 addObserver:v65 selector:"handleOnWristStateChanged" name:qword_1009944A0 object:0];

  sub_10033EC28((uint64_t)sub_1003402A0, (uint64_t)&unk_1008D72A8);
  return v65;
}

id sub_10033BFF0()
{
  return sub_10033CF58((uint64_t)off_1008C6938, (SEL *)&selRef_sharedMonitor, (SEL *)&selRef_deviceKeyBagUnlocked);
}

id sub_10033C00C()
{
  return sub_10033CF58((uint64_t)off_1008C6938, (SEL *)&selRef_sharedMonitor, (SEL *)&selRef_deviceInBiolockout);
}

id sub_10033C028()
{
  id result = [self sharedMonitor];
  if (result)
  {
    uint64_t v1 = result;
    unsigned int v2 = [result deviceKeyBagDisabled];

    return (id)(v2 ^ 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10033C088()
{
  return sub_10033CF58((uint64_t)off_1008C6938, (SEL *)&selRef_sharedMonitor, (SEL *)&selRef_sleepModeOn);
}

id sub_10033C0A4()
{
  return sub_10033CF58((uint64_t)off_1008C6938, (SEL *)&selRef_sharedMonitor, (SEL *)&selRef_lostModeEnabled);
}

void sub_10033C0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v8 - 8);
  NSString v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [objc_allocWithZone((Class)SDUnlockMotionDetector) initWithUnlockType:1];
  id v12 = [self sharedLockManager];
  if (v12)
  {
    unint64_t v13 = v12;
    id v14 = [v12 wristOnDate];

    if (v14)
    {
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v7, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
      {
        Class isa = 0;
      }
      else
      {
        Class isa = Date._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
      Class isa = 0;
    }
    [v11 setWristOnDate:isa];

    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    double v17 = (void *)swift_allocObject();
    v17[2] = v16;
    uint64_t v17[3] = a1;
    v17[4] = a2;
    v17[5] = v11;
    aBlock[4] = sub_100340350;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100296520;
    aBlock[3] = &unk_1008D72F8;
    double v18 = _Block_copy(aBlock);
    swift_retain();
    id v19 = v11;
    swift_release();
    [v19 setMotionDetectedHandler:v18];
    _Block_release(v18);
    [v19 activate];
  }
  else
  {
    __break(1u);
  }
}

id sub_10033C410(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  NSString v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  unint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v15 = (void *)Strong;
    id v16 = *(id *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_queue);

    double v17 = (void *)swift_allocObject();
    v17[2] = a2;
    uint64_t v17[3] = a3;
    v17[4] = a4;
    aBlock[4] = sub_10034039C;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100296520;
    aBlock[3] = &unk_1008D7348;
    double v18 = _Block_copy(aBlock);
    swift_retain();
    id v19 = a4;
    static DispatchQoS.unspecified.getter();
    uint64_t v23 = _swiftEmptyArrayStorage;
    sub_1003402C0((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002B4B9C();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v22);
    swift_release();
  }
  return [a4 invalidate];
}

BOOL sub_10033C70C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (id)Strong;
    unsigned int v2 = *(void **)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_pearlDevice);
    if (v2)
    {
      id v3 = v2;

      id v10 = 0;
      id v1 = [v3 identitiesWithError:&v10];

      id v4 = v10;
      if (!v1)
      {
        id v9 = v10;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        swift_errorRelease();
        return 0;
      }
      sub_10000B740(0, &qword_10096FFB0);
      unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
      id v6 = v4;
    }
    else
    {
      unint64_t v5 = (unint64_t)_swiftEmptyArrayStorage;
    }
  }
  else
  {
    unint64_t v5 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v7 != 0;
}

void sub_10033C89C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  id v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v36 - v7;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v10 = Strong;
    uint64_t v11 = (uint64_t (**)(uint64_t))(Strong
                                           + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator);
    uint64_t v12 = *(uint64_t (**)(uint64_t))(Strong
                                            + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator);
    if (v12
      && (uint64_t v13 = swift_retain(), v14 = v12(v13), sub_1002CA430((uint64_t)v12), (v14 & 1) != 0)
      && (uint64_t v15 = *(uint64_t (**)(uint64_t))((char *)&v10->isa
                                                  + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator)) != 0
      && (uint64_t v16 = swift_retain(), v17 = v15(v16), sub_1002CA430((uint64_t)v15), v17 == 3))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, a1, v2);
      double v18 = (unint64_t *)((char *)v10
                               + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes);
      swift_beginAccess();
      unint64_t v19 = *v18;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *double v18 = v19;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v19 = sub_100253C50(0, *(void *)(v19 + 16) + 1, 1, v19);
        *double v18 = v19;
      }
      unint64_t v22 = *(void *)(v19 + 16);
      unint64_t v21 = *(void *)(v19 + 24);
      if (v22 >= v21 >> 1)
      {
        unint64_t v19 = sub_100253C50(v21 > 1, v22 + 1, 1, v19);
        *double v18 = v19;
      }
      *(void *)(v19 + 16) = v22 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v19+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v22, v8, v2);
      unint64_t v23 = *v18;
      swift_endAccess();
      if (*(void *)(v23 + 16) >= 3uLL)
      {
        swift_beginAccess();
        sub_10033CCFC((uint64_t)v6);
        swift_endAccess();

        (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
        return;
      }
    }
    else
    {
      if (qword_100969BF0 != -1) {
        swift_once();
      }
      uint64_t v24 = type metadata accessor for Logger();
      sub_10000B47C(v24, (uint64_t)qword_10096FF30);
      id v25 = v10;
      id v10 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.debug.getter();
      if (!os_log_type_enabled(v10, v26))
      {

        return;
      }
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 67109376;
      os_log_type_t v28 = *v11;
      BOOL v29 = 1;
      if (*v11)
      {
        uint64_t v30 = swift_retain();
        char v31 = v28(v30);
        sub_1002CA430((uint64_t)v28);
        BOOL v29 = (v31 & 1) == 0;
      }
      v36[0] = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v27 + 8) = 1024;
      uint64_t v32 = *(uint64_t (**)(uint64_t))((char *)&v25->isa
                                              + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator);
      if (v32)
      {
        uint64_t v33 = swift_retain();
        uint64_t v34 = v32(v33);
        sub_1002CA430((uint64_t)v32);
        BOOL v35 = v34 != 3;
      }
      else
      {
        BOOL v35 = 1;
      }
      v36[0] = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v10, v26, "Ignoring wake gesture because device is either locked (%{BOOL}d) or off wrist (%{BOOL}d)", (uint8_t *)v27, 0xEu);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_10033CCFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t result = __chkstk_darwin(v3 - 8);
  id v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  if (!*(void *)(*v1 + 16))
  {
    __break(1u);
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v6, v7 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8);
  if (result != 1)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v6, v8);
    if (*(void *)(v7 + 16)) {
      return sub_1005A5638(0, 1);
    }
    goto LABEL_6;
  }
LABEL_7:
  __break(1u);
  return result;
}

id sub_10033CE84()
{
  return sub_10033CF58((uint64_t)&off_1008C6940, (SEL *)&selRef_sharedLockManager, (SEL *)&selRef_lastUnlockedByPairedUnlock);
}

uint64_t sub_10033CEA0()
{
  if (!sub_10001DA8C()) {
    return 1;
  }
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 BOOLForKey:v1];

  return (uint64_t)v2;
}

id sub_10033CF3C()
{
  return sub_10033CF58((uint64_t)off_1008C6938, (SEL *)&selRef_sharedMonitor, (SEL *)&selRef_deviceIsInClassD);
}

id sub_10033CF58(uint64_t a1, SEL *a2, SEL *a3)
{
  id result = [self *a2];
  if (result)
  {
    uint64_t v5 = result;
    id v6 = [result *a3];

    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10033CFB4()
{
  id result = [self sharedMonitor];
  if (result)
  {
    NSString v1 = result;
    id v2 = [result deviceKeyBagState];

    return (id)(v2 == (id)6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10033D018(uint64_t a1, char *a2, char *a3)
{
  uint64_t v173 = a1;
  v174 = a3;
  uint64_t v172 = sub_10000A844((uint64_t *)&unk_10096BA90);
  uint64_t v155 = *(void *)(v172 - 8);
  __chkstk_darwin(v172);
  uint64_t v153 = v4;
  v154 = (char *)&v151 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v157 = (uint64_t)&v151 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v158 = (uint64_t)&v151 - v8;
  uint64_t v163 = type metadata accessor for AuthenticationSecurityRequest(0);
  uint64_t v9 = __chkstk_darwin(v163);
  uint64_t v160 = (uint64_t)&v151 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v161 = (uint64_t)&v151 - v11;
  uint64_t v168 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v168 - 8);
  uint64_t v13 = __chkstk_darwin(v168);
  v152 = (char *)&v151 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  v156 = (char *)&v151 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v151 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  v162 = (char *)&v151 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v159 = (char *)&v151 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v166 = (char *)&v151 - v25;
  __chkstk_darwin(v24);
  uint64_t v167 = (uint64_t)&v151 - v26;
  uint64_t v27 = *(uint64_t (**)(uint64_t))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator];
  if (v27)
  {
    uint64_t v28 = swift_retain();
    uint64_t v29 = v27(v28);
    sub_1002CA430((uint64_t)v27);
  }
  else
  {
    uint64_t v29 = 0;
  }
  uint64_t v30 = *(uint64_t (**)(uint64_t))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator];
  if (v30)
  {
    uint64_t v31 = swift_retain();
    int v171 = v30(v31);
    sub_1002CA430((uint64_t)v30);
  }
  else
  {
    int v171 = 0;
  }
  uint64_t v32 = *(uint64_t (**)(uint64_t))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceBiolockedGenerator];
  if (v32)
  {
    uint64_t v33 = swift_retain();
    int v169 = v32(v33);
    sub_1002CA430((uint64_t)v32);
  }
  else
  {
    int v169 = 1;
  }
  uint64_t v34 = *(uint64_t (**)(uint64_t))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lostModeGenerator];
  if (v34)
  {
    uint64_t v35 = swift_retain();
    LODWORD(v170) = v34(v35);
    sub_1002CA430((uint64_t)v34);
  }
  else
  {
    LODWORD(v170) = 0;
  }
  uint64_t v36 = *(uint64_t (**)(uint64_t))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_sleepModeGenerator];
  if (v36)
  {
    uint64_t v37 = swift_retain();
    int v165 = v36(v37);
    sub_1002CA430((uint64_t)v36);
  }
  else
  {
    int v165 = 0;
  }
  uint64_t v164 = v12;
  uint64_t v38 = *(uint64_t (**)(uint64_t))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_faceIDEnabledGenerator];
  if (v38)
  {
    uint64_t v39 = swift_retain();
    char v40 = v38(v39);
    sub_1002CA430((uint64_t)v38);
  }
  else
  {
    char v40 = 0;
  }
  uint64_t v41 = *(uint64_t (**)(uint64_t))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceHasPasscodeGenerator];
  if (v41)
  {
    uint64_t v42 = swift_retain();
    char v43 = v41(v42);
    sub_1002CA430((uint64_t)v41);
  }
  else
  {
    char v43 = 0;
  }
  uint64_t v44 = *(uint64_t (**)(uint64_t))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsBioUnarmedGenerator];
  if (v44)
  {
    uint64_t v45 = swift_retain();
    char v46 = v44(v45);
    sub_1002CA430((uint64_t)v44);
  }
  else
  {
    char v46 = 0;
  }
  uint64_t v47 = *(uint64_t (**)(uint64_t))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInAssertDelayGenerator];
  if (v47)
  {
    uint64_t v48 = swift_retain();
    char v49 = v47(v48);
    sub_1002CA430((uint64_t)v47);
  }
  else
  {
    char v49 = 0;
  }
  unint64_t v50 = *(uint64_t (**)(uint64_t))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceIsInClassDGenerator];
  if (v50)
  {
    uint64_t v51 = swift_retain();
    unsigned __int8 v52 = v50(v51);
    sub_1002CA430((uint64_t)v50);
  }
  else
  {
    unsigned __int8 v52 = 0;
  }
  uint64_t v53 = *(void *)v174;
  if (!(((*(void *)v174 & 0x40) == 0) | v40 & 1))
  {
    type metadata accessor for SFAuthenticationError(0);
    sub_1003402C0(&qword_100977FB0, type metadata accessor for SFAuthenticationError);
    os_log_type_t v54 = (void *)swift_allocError();
    int v56 = 13;
LABEL_49:
    *uint64_t v55 = v56;
    v178 = v54;
    return CheckedContinuation.resume(throwing:)();
  }
  if ((v53 & 1) != 0 && v29 != 3)
  {
    type metadata accessor for SFAuthenticationError(0);
    sub_1003402C0(&qword_100977FB0, type metadata accessor for SFAuthenticationError);
    os_log_type_t v54 = (void *)swift_allocError();
    if (v29 == 1) {
      int v56 = 2;
    }
    else {
      int v56 = 3;
    }
    goto LABEL_49;
  }
  char v57 = v171;
  if (!(((*(void *)v174 & 2) == 0) | v171 & 1))
  {
    type metadata accessor for SFAuthenticationError(0);
    sub_1003402C0(&qword_100977FB0, type metadata accessor for SFAuthenticationError);
    os_log_type_t v54 = (void *)swift_allocError();
LABEL_42:
    int v56 = 4;
    goto LABEL_49;
  }
  if ((((*(void *)v174 & 0x2000) != 0) & v171) == 1) {
    goto LABEL_39;
  }
  if (!(((*(void *)v174 & 2) == 0) | v43 & 1) || !(((*(void *)v174 & 0x800) == 0) | v43 & 1))
  {
    type metadata accessor for SFAuthenticationError(0);
    sub_1003402C0(&qword_100977FB0, type metadata accessor for SFAuthenticationError);
    os_log_type_t v54 = (void *)swift_allocError();
    int v56 = 5;
    goto LABEL_49;
  }
  if ((((*(void *)v174 & 0x80) != 0) & v52) == 1)
  {
    type metadata accessor for SFAuthenticationError(0);
    sub_1003402C0(&qword_100977FB0, type metadata accessor for SFAuthenticationError);
    os_log_type_t v54 = (void *)swift_allocError();
    int v56 = 26;
    goto LABEL_49;
  }
  if (!(((*(void *)v174 & 0x100) == 0) | v46 & 1))
  {
LABEL_39:
    type metadata accessor for SFAuthenticationError(0);
    sub_1003402C0(&qword_100977FB0, type metadata accessor for SFAuthenticationError);
    os_log_type_t v54 = (void *)swift_allocError();
LABEL_40:
    int v56 = 21;
    goto LABEL_49;
  }
  if ((((*(void *)v174 & 0x8000) != 0) & v170) == 1)
  {
    type metadata accessor for SFAuthenticationError(0);
    sub_1003402C0(&qword_100977FB0, type metadata accessor for SFAuthenticationError);
    os_log_type_t v54 = (void *)swift_allocError();
    int v56 = 28;
    goto LABEL_49;
  }
  if ((((*(void *)v174 & 0x200) != 0) & v169) == 1)
  {
    type metadata accessor for SFAuthenticationError(0);
    sub_1003402C0(&qword_100977FB0, type metadata accessor for SFAuthenticationError);
    os_log_type_t v54 = (void *)swift_allocError();
    int v56 = 27;
    goto LABEL_49;
  }
  if (!(((*(void *)v174 & 0x4000) == 0) | v49 & 1))
  {
    type metadata accessor for SFAuthenticationError(0);
    sub_1003402C0(&qword_100977FB0, type metadata accessor for SFAuthenticationError);
    os_log_type_t v54 = (void *)swift_allocError();
    if ((v57 & 1) == 0) {
      goto LABEL_42;
    }
    goto LABEL_40;
  }
  if ((((*(void *)v174 & 8) != 0) & v165) == 1)
  {
    type metadata accessor for SFAuthenticationError(0);
    sub_1003402C0(&qword_100977FB0, type metadata accessor for SFAuthenticationError);
    os_log_type_t v54 = (void *)swift_allocError();
    int v56 = 6;
    goto LABEL_49;
  }
  sub_10033E908(v167);
  uint64_t v59 = v164;
  id v60 = *(void (**)(char *, char *, uint64_t))(v164 + 16);
  v60(v166, &v174[*(int *)(v163 + 20)], v168);
  char v61 = static Date.< infix(_:_:)();
  if (v53 & 4) == 0 || (v61)
  {
    uint64_t v75 = v167;
    uint64_t v76 = v166;
    char v77 = static Date.> infix(_:_:)();
    uint64_t v78 = v75;
    uint64_t v79 = v168;
    v60(v162, (char *)v78, v168);
    v60(v19, v76, v79);
    if (v77)
    {
      BOOL v80 = 1;
    }
    else
    {
      Date.timeIntervalSince(_:)();
      BOOL v80 = fabs(v85) < 1.0;
    }
    uint64_t v86 = *(void (**)(char *, uint64_t))(v59 + 8);
    uint64_t v87 = v168;
    v86(v19, v168);
    v170 = (void (*)(uint64_t, uint64_t))v86;
    v86(v162, v87);
    uint64_t v88 = *(void *)v174;
    if ((*(void *)v174 & 0x1000) != 0 && !v80)
    {
      if (qword_100969BF0 != -1) {
        swift_once();
      }
      uint64_t v89 = type metadata accessor for Logger();
      sub_10000B47C(v89, (uint64_t)qword_10096FF30);
      sub_100340128((uint64_t)v174, v160);
      os_log_type_t v90 = a2;
      int v91 = Logger.logObject.getter();
      os_log_type_t v92 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v91, v92))
      {
        uint64_t v93 = swift_slowAlloc();
        v174 = (char *)swift_slowAlloc();
        v178 = v174;
        *(_DWORD *)uint64_t v93 = 136315394;
        uint64_t v94 = (uint64_t)v159;
        sub_10033E908((uint64_t)v159);
        uint64_t v95 = Date.description.getter();
        unint64_t v97 = v96;
        v170(v94, v168);
        uint64_t v177 = sub_100254634(v95, v97, (uint64_t *)&v178);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v93 + 12) = 2080;
        uint64_t v98 = v160;
        sub_1003402C0(&qword_100974530, (void (*)(uint64_t))&type metadata accessor for Date);
        uint64_t v99 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v177 = sub_100254634(v99, v100, (uint64_t *)&v178);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10034018C(v98);
        _os_log_impl((void *)&_mh_execute_header, v91, v92, "Local device unlocked (%s) is before remote device unlocked (%s)", (uint8_t *)v93, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        sub_10034018C(v160);
      }

      type metadata accessor for SFAuthenticationError(0);
      sub_1003402C0(&qword_100977FB0, type metadata accessor for SFAuthenticationError);
      id v104 = (void *)swift_allocError();
      int v106 = 11;
      goto LABEL_89;
    }
    if ((v88 & 0x20) != 0 && !sub_10033B338())
    {
      type metadata accessor for SFAuthenticationError(0);
      sub_1003402C0(&qword_100977FB0, type metadata accessor for SFAuthenticationError);
      id v104 = (void *)swift_allocError();
      int v106 = 8;
    }
    else
    {
      if (((v88 & 0x400) == 0) | v171 & 1 || sub_10033B628())
      {
        Date.timeIntervalSinceNow.getter();
        double v102 = v101;
        if (v101 < -480.0)
        {
          Swift::String v107 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate];
          swift_beginAccess();
          uint64_t v108 = (uint64_t)v107;
          uint64_t v109 = v158;
          sub_1002BEBA4(v108, v158);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v164 + 48))(v109, 1, v168) == 1)
          {
            sub_10033FEB0(v158);
            goto LABEL_95;
          }
          uint64_t v110 = v156;
          uint64_t v111 = v168;
          (*(void (**)(char *, uint64_t, uint64_t))(v164 + 32))(v156, v158, v168);
          Date.timeIntervalSinceNow.getter();
          double v113 = v112;
          v170((uint64_t)v110, v111);
          BOOL v103 = v113 < -480.0;
        }
        else
        {
          BOOL v103 = 0;
        }
        if (a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_allowsLenientMotionConditions] == 1
          && !v103)
        {
          if ((*v174 & 0x10) == 0) {
            goto LABEL_114;
          }
LABEL_98:
          if (qword_100969BF0 != -1) {
            swift_once();
          }
          uint64_t v120 = type metadata accessor for Logger();
          sub_10000B47C(v120, (uint64_t)qword_10096FF30);
          v121 = a2;
          v122 = Logger.logObject.getter();
          os_log_type_t v123 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v122, v123))
          {
            uint64_t v124 = swift_slowAlloc();
            *(_DWORD *)uint64_t v124 = 67109632;
            uint64_t v125 = (char *)v121 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes;
            swift_beginAccess();
            BOOL v131 = 0;
            if (*(void *)(*(void *)v125 + 16) == 2)
            {
              unint64_t v126 = *(void *)v125
                   + ((*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80));
              uint64_t v127 = (uint64_t)v159;
              uint64_t v128 = v168;
              v60(v159, (char *)v126, v168);
              Date.timeIntervalSinceNow.getter();
              double v130 = v129;
              v170(v127, v128);
              if (v130 >= -480.0) {
                BOOL v131 = 1;
              }
            }
            BOOL v176 = v131;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v124 + 8) = 1024;
            BOOL v176 = v102 >= -480.0;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v124 + 14) = 1024;
            v141 = (char *)v121 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
            swift_beginAccess();
            uint64_t v142 = (uint64_t)v141;
            uint64_t v143 = v157;
            sub_1002BEBA4(v142, v157);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v164 + 48))(v143, 1, v168) == 1)
            {
              sub_10033FEB0(v157);
              BOOL v144 = 0;
            }
            else
            {
              v145 = v152;
              uint64_t v146 = v168;
              (*(void (**)(char *, uint64_t, uint64_t))(v164 + 32))(v152, v157, v168);
              Date.timeIntervalSinceNow.getter();
              double v148 = v147;
              v170((uint64_t)v145, v146);
              BOOL v144 = v148 >= -480.0;
            }
            BOOL v175 = v144;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            _os_log_impl((void *)&_mh_execute_header, v122, v123, "Skipping motion check because one of the following is true: hasEnoughWakeRaises = %{BOOL}d requestingDeviceUnlockedRecently = %{BOOL}d unlockedRecently = %{BOOL}d", (uint8_t *)v124, 0x14u);
            swift_slowDealloc();
          }
          else
          {

            v122 = v121;
          }

          goto LABEL_114;
        }
LABEL_95:
        v114 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes];
        swift_beginAccess();
        if (*(void *)(*(void *)v114 + 16) == 2)
        {
          unint64_t v115 = *(void *)v114
               + ((*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80));
          uint64_t v116 = (uint64_t)v159;
          uint64_t v117 = v168;
          v60(v159, (char *)v115, v168);
          Date.timeIntervalSinceNow.getter();
          double v119 = v118;
          v170(v116, v117);
          if ((*v174 & 0x10) != 0)
          {
            if (v119 >= -480.0) {
              goto LABEL_98;
            }
LABEL_105:
            v132 = *(void (**)(uint64_t (*)(char), uint64_t))&a2[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_motionGenerator];
            if (v132)
            {
              uint64_t v133 = swift_allocObject();
              swift_unknownObjectWeakInit();
              uint64_t v134 = v155;
              v135 = v154;
              uint64_t v136 = v172;
              (*(void (**)(char *, uint64_t, uint64_t))(v155 + 16))(v154, v173, v172);
              unint64_t v137 = (*(unsigned __int8 *)(v134 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80);
              uint64_t v138 = swift_allocObject();
              *(void *)(v138 + 16) = v133;
              (*(void (**)(unint64_t, char *, uint64_t))(v134 + 32))(v138 + v137, v135, v136);
              sub_1002CA420((uint64_t)v132);
              swift_retain();
              v132(sub_1003400B0, v138);
              sub_1002CA430((uint64_t)v132);
              swift_release();
              uint64_t v139 = v168;
              v140 = v170;
              v170((uint64_t)v166, v168);
              v140(v167, v139);
              return swift_release();
            }
          }
        }
        else if ((*v174 & 0x10) != 0)
        {
          goto LABEL_105;
        }
LABEL_114:
        CheckedContinuation.resume(returning:)();
        goto LABEL_115;
      }
      type metadata accessor for SFAuthenticationError(0);
      sub_1003402C0(&qword_100977FB0, type metadata accessor for SFAuthenticationError);
      id v104 = (void *)swift_allocError();
      int v106 = 22;
    }
LABEL_89:
    int *v105 = v106;
    v178 = v104;
    CheckedContinuation.resume(throwing:)();
LABEL_115:
    uint64_t v149 = v168;
    v150 = (uint64_t (*)(uint64_t, uint64_t))v170;
    v170((uint64_t)v166, v168);
    return v150(v167, v149);
  }
  if (qword_100969BF0 != -1) {
    swift_once();
  }
  uint64_t v62 = type metadata accessor for Logger();
  sub_10000B47C(v62, (uint64_t)qword_10096FF30);
  uint64_t v63 = v161;
  sub_100340128((uint64_t)v174, v161);
  uint64_t v64 = a2;
  uint64_t v65 = Logger.logObject.getter();
  os_log_type_t v66 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v65, v66))
  {
    uint64_t v67 = swift_slowAlloc();
    v178 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v67 = 136315394;
    uint64_t v68 = (uint64_t)v159;
    sub_10033E908((uint64_t)v159);
    uint64_t v69 = Date.description.getter();
    unint64_t v71 = v70;
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v68, v168);
    uint64_t v177 = sub_100254634(v69, v71, (uint64_t *)&v178);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v67 + 12) = 2080;
    uint64_t v72 = v161;
    sub_1003402C0(&qword_100974530, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v59 = v164;
    uint64_t v73 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v177 = sub_100254634(v73, v74, (uint64_t *)&v178);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10034018C(v72);
    _os_log_impl((void *)&_mh_execute_header, v65, v66, "Local device unlocked (%s) is after remote device unlocked (%s)", (uint8_t *)v67, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_10034018C(v63);
  }

  type metadata accessor for SFAuthenticationError(0);
  sub_1003402C0(&qword_100977FB0, type metadata accessor for SFAuthenticationError);
  uint64_t v81 = (void *)swift_allocError();
  *uint64_t v82 = 11;
  v178 = v81;
  CheckedContinuation.resume(throwing:)();
  uint64_t v83 = *(void (**)(char *, uint64_t))(v59 + 8);
  uint64_t v84 = v168;
  v83(v166, v168);
  return ((uint64_t (*)(uint64_t, uint64_t))v83)(v167, v84);
}

uint64_t sub_10033E908@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v17 - v7;
  if (SFDeviceClassCodeGet() == 7)
  {
    uint64_t v9 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedAndOnWristDate;
    swift_beginAccess();
    sub_1002BEBA4(v9, (uint64_t)v8);
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
    {
      static Date.distantFuture.getter();
      uint64_t v12 = (uint64_t)v8;
      return sub_10033FEB0(v12);
    }
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a1, v8, v10);
  }
  else
  {
    uint64_t v13 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
    swift_beginAccess();
    sub_1002BEBA4(v13, (uint64_t)v6);
    uint64_t v14 = type metadata accessor for Date();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v6, 1, v14) == 1)
    {
      static Date.distantFuture.getter();
      uint64_t v12 = (uint64_t)v6;
      return sub_10033FEB0(v12);
    }
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a1, v6, v14);
  }
}

uint64_t sub_10033EB24(char a1)
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v2 = (void *)Strong;
      *(unsigned char *)(Strong
               + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_allowsLenientMotionConditions) = 1;
      sub_10033AEBC();
    }
    sub_10000A844((uint64_t *)&unk_10096BA90);
    return CheckedContinuation.resume(returning:)();
  }
  else
  {
    type metadata accessor for SFAuthenticationError(0);
    sub_1003402C0(&qword_100977FB0, type metadata accessor for SFAuthenticationError);
    swift_allocError();
    *uint64_t v4 = 7;
    sub_10000A844((uint64_t *)&unk_10096BA90);
    return CheckedContinuation.resume(throwing:)();
  }
}

uint64_t sub_10033EC28(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_queue);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = a1;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = a2;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v16[1] = _swiftEmptyArrayStorage;
  sub_1003402C0((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002B4B9C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_release();
  return swift_release();
}

void sub_10033EED0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (unsigned char *)Strong;
    uint64_t v2 = *(uint64_t (**)(uint64_t))(Strong
                                           + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator);
    if (v2)
    {
      uint64_t v3 = swift_retain();
      char v4 = v2(v3);
      sub_1002CA430((uint64_t)v2);
    }
    else
    {
      char v4 = 0;
    }
    if (qword_100969BF0 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000B47C(v5, (uint64_t)qword_10096FF30);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315138;
      v17[0] = v9;
      if (v4) {
        uint64_t v10 = 0x64656B636F6C6E75;
      }
      else {
        uint64_t v10 = 0x64656B636F6CLL;
      }
      if (v4) {
        unint64_t v11 = 0xE800000000000000;
      }
      else {
        unint64_t v11 = 0xE600000000000000;
      }
      sub_100254634(v10, v11, v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Key bag state changed to %s", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10033F194();
    sub_10033F40C();
    uint64_t v12 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_raiseToWakeTimes];
    swift_beginAccess();
    *uint64_t v12 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    uint64_t v13 = *(uint64_t (**)(uint64_t))&v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedByPairedUnlockGenerator];
    if (v13)
    {
      uint64_t v14 = swift_retain();
      char v15 = v13(v14);
      sub_1002CA430((uint64_t)v13);
      char v16 = 0;
      if (v4 & 1) == 0 || (v15) {
        goto LABEL_22;
      }
    }
    else if ((v4 & 1) == 0)
    {
      char v16 = 0;
      goto LABEL_22;
    }
    char v16 = 1;
LABEL_22:
    v1[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_allowsLenientMotionConditions] = v16;
    sub_10033AEBC();
  }
}

uint64_t sub_10033F194()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v2 - 8);
  char v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_queue);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t))(v1
                                            + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator);
    if (v12)
    {
      uint64_t v13 = swift_retain();
      unsigned __int8 v14 = v12(v13);
      uint64_t result = sub_1002CA430((uint64_t)v12);
    }
    else
    {
      unsigned __int8 v14 = 0;
    }
    char v15 = *(uint64_t (**)(uint64_t))(v1
                                            + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_wristDetectionGenerator);
    if (v15)
    {
      uint64_t v16 = swift_retain();
      uint64_t v17 = v15(v16);
      uint64_t result = sub_1002CA430((uint64_t)v15);
      if ((v14 & (v17 == 3)) == 1)
      {
        Date.init()();
        uint64_t v18 = type metadata accessor for Date();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 0, 1, v18);
        uint64_t v19 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockedAndOnWristDate;
        swift_beginAccess();
        sub_10033FE48((uint64_t)v4, v19);
        swift_endAccess();
        sub_10033B040();
        return sub_10033FEB0((uint64_t)v4);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10033F40C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v2 - 8);
  char v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_queue);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t))(v1
                                            + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_deviceUnlockedGenerator);
    if (v12 && (uint64_t v13 = swift_retain(), v14 = v12(v13), sub_1002CA430((uint64_t)v12), (v14 & 1) != 0))
    {
      Date.init()();
      uint64_t v15 = type metadata accessor for Date();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 0, 1, v15);
      uint64_t v16 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
      swift_beginAccess();
      sub_10033FE48((uint64_t)v4, v16);
      swift_endAccess();
      sub_10033A8B4();
    }
    else
    {
      Date.init()();
      uint64_t v17 = type metadata accessor for Date();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v4, 0, 1, v17);
      uint64_t v18 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastLockDate;
      swift_beginAccess();
      sub_10033FE48((uint64_t)v4, v18);
      swift_endAccess();
      sub_10033ABAC();
    }
    return sub_10033FEB0((uint64_t)v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10033F724()
{
  if (qword_100969BF0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_10096FF30);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "On wrist state changed", v3, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_10033F194();
  }
}

void sub_10033F89C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    sub_10033F194();
    sub_10033F40C();
    id v2 = [self availableDevices];
    sub_10000B740(0, &qword_10096FFA8);
    unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v3 >> 62) {
      goto LABEL_17;
    }
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v4)
    {
      uint64_t v16 = v1;
      uint64_t v5 = self;
      uint64_t v6 = 4;
      while (1)
      {
        id v8 = (v3 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(v3 + 8 * v6);
        uint64_t v9 = v8;
        uint64_t v1 = (char *)(v6 - 3);
        if (__OFADD__(v6 - 4, 1)) {
          break;
        }
        id v17 = 0;
        id v10 = [v5 deviceWithDescriptor:v8 error:&v17];
        if (v10)
        {
          unint64_t v11 = v10;
          id v12 = v17;

          self;
          uint64_t v13 = swift_dynamicCastObjCClass();
          if (v13)
          {
            uint64_t v14 = v13;
            swift_bridgeObjectRelease();
            uint64_t v15 = *(void **)&v16[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_pearlDevice];
            *(void *)&v16[OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_pearlDevice] = v14;

            return;
          }
        }
        else
        {
          id v7 = v17;
          _convertNSErrorToError(_:)();

          swift_willThrow();
          swift_errorRelease();
        }
        ++v6;
        if (v1 == (char *)v4)
        {

          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_17:
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }

LABEL_19:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10033FCB4()
{
  return type metadata accessor for SDAuthenticationSecurityManager(0);
}

uint64_t type metadata accessor for SDAuthenticationSecurityManager(uint64_t a1)
{
  return sub_10000B93C(a1, (uint64_t *)&unk_10096FF98);
}

void sub_10033FCDC()
{
  sub_100271710();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10033FDBC(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSecurityManager_lastUnlockDate;
  swift_beginAccess();
  sub_10033FE48(a1, v3);
  swift_endAccess();
  sub_10033A8B4();
  return sub_10033FEB0(a1);
}

__CFString *sub_10033FE30()
{
  qword_100994478 = @"com.apple.sharingd.KeyBagFirstUnlock";
  return @"com.apple.sharingd.KeyBagFirstUnlock";
}

uint64_t sub_10033FE48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_100975040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10033FEB0(uint64_t a1)
{
  uint64_t v2 = sub_10000A844((uint64_t *)&unk_100975040);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__CFString *sub_10033FF10()
{
  qword_100994480 = @"SDAutoUnlockAKSManagerDynamicStoreUpdatedAfterFirstUnlockNotification";
  return @"SDAutoUnlockAKSManagerDynamicStoreUpdatedAfterFirstUnlockNotification";
}

__CFString *sub_10033FF28()
{
  qword_100994488 = @"com.apple.sharingd.KeyBagLockStatusChanged";
  return @"com.apple.sharingd.KeyBagLockStatusChanged";
}

__CFString *sub_10033FF40()
{
  qword_100994490 = @"com.apple.sharingd.ScreenStateChanged";
  return @"com.apple.sharingd.ScreenStateChanged";
}

__CFString *sub_10033FF58()
{
  qword_100994498 = @"com.apple.sharingd.WiFiDeviceAttached";
  return @"com.apple.sharingd.WiFiDeviceAttached";
}

__CFString *sub_10033FF70()
{
  qword_1009944A0 = @"com.apple.sharingd.WristStateChanged";
  return @"com.apple.sharingd.WristStateChanged";
}

uint64_t type metadata accessor for AuthenticationSecurityRequest(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100970010);
}

uint64_t sub_10033FFA8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10033FFE0()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_10096BA90);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003400B0(char a1)
{
  sub_10000A844((uint64_t *)&unk_10096BA90);

  return sub_10033EB24(a1);
}

uint64_t sub_100340128(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuthenticationSecurityRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10034018C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AuthenticationSecurityRequest(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003401E8()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100340220(uint64_t a1, uint64_t a2)
{
}

BOOL sub_100340228()
{
  return sub_10033C70C();
}

void sub_100340230(uint64_t a1)
{
}

uint64_t sub_100340238(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_100975040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1003402A0()
{
}

uint64_t sub_1003402A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003402B8()
{
  return swift_release();
}

uint64_t sub_1003402C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100340308()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

id sub_100340350()
{
  return sub_10033C410(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_10034035C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10034039C()
{
  return (*(uint64_t (**)(id))(v0 + 16))([*(id *)(v0 + 32) motionDetected]);
}

void sub_1003403E0()
{
}

void sub_1003403E8()
{
}

uint64_t *sub_1003403F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    id v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1003404BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for Date();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *sub_100340524(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_1003405A0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *sub_10034061C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_100340698(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_100340714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100340728);
}

uint64_t sub_100340728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_100340798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003407AC);
}

uint64_t sub_1003407AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t sub_100340820()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationPolicies()
{
  return &type metadata for AuthenticationPolicies;
}

unint64_t sub_1003408D0()
{
  unint64_t result = qword_100970048;
  if (!qword_100970048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100970048);
  }
  return result;
}

unint64_t sub_100340928()
{
  unint64_t result = qword_100970050;
  if (!qword_100970050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100970050);
  }
  return result;
}

unint64_t sub_100340980()
{
  unint64_t result = qword_100970058;
  if (!qword_100970058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100970058);
  }
  return result;
}

unint64_t sub_1003409D8()
{
  unint64_t result = qword_100970060;
  if (!qword_100970060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100970060);
  }
  return result;
}

id sub_100340A4C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100970068);
  sub_10000B47C(v0, (uint64_t)qword_100970068);
  id result = (id)airdrop_log();
  if (result) {
    return (id)Logger.init(_:)();
  }
  __break(1u);
  return result;
}

void sub_100340AE4()
{
  unint64_t v1 = v0;
  if ([self isRunningInStoreDemoMode])
  {
    if (qword_100969C30 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000B47C(v2, (uint64_t)qword_100970068);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v3, v4)) {
      goto LABEL_35;
    }
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    uint64_t v6 = "IPA Handler: Device running in store demo mode";
LABEL_48:
    _os_log_impl((void *)&_mh_execute_header, v3, v4, v6, v5, 2u);
    swift_slowDealloc();
LABEL_35:

    return;
  }
  id v7 = [self sharedConnection];
  if (v7)
  {
    uint64_t v8 = v7;
    unsigned int v9 = [v7 isAirDropAppInstallationAllowed];

    if (!v9)
    {
      if (qword_100969C30 != -1) {
        swift_once();
      }
      uint64_t v26 = type metadata accessor for Logger();
      sub_10000B47C(v26, (uint64_t)qword_100970068);
      uint64_t v3 = Logger.logObject.getter();
      os_log_type_t v4 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_35;
      }
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      uint64_t v6 = "IPA Handler: AirDrop app installation not allowed";
      goto LABEL_48;
    }
    if (![v1 isJustFiles])
    {
      if (qword_100969C30 != -1) {
        swift_once();
      }
      uint64_t v27 = type metadata accessor for Logger();
      sub_10000B47C(v27, (uint64_t)qword_100970068);
      uint64_t v3 = Logger.logObject.getter();
      os_log_type_t v4 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v3, v4)) {
        goto LABEL_35;
      }
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      uint64_t v6 = "IPA Handler: isJustFiles is false";
      goto LABEL_48;
    }
    id v10 = &selRef_shouldNotify;
    id v11 = [v1 transfer];
    id v12 = &selRef_localizedCaseInsensitiveCompare_;
    id v13 = [v11 metaData];

    id v14 = [v13 rawFiles];
    sub_10000A844((uint64_t *)&unk_10096B2A0);
    uint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      id v17 = (void *)kSFOperationFileNameKey;
      swift_bridgeObjectRetain();
      uint64_t v18 = 0;
      while (1)
      {
        if (!v17)
        {
          __break(1u);
          goto LABEL_51;
        }
        uint64_t v19 = *(void *)(v15 + 8 * v18 + 32);
        sub_10000B740(0, (unint64_t *)&unk_10096BA70);
        sub_10026B9A4();
        swift_bridgeObjectRetain();
        id v20 = v17;
        AnyHashable.init<A>(_:)();
        if (*(void *)(v19 + 16) && (unint64_t v21 = sub_100583878((uint64_t)v41), (v22 & 1) != 0))
        {
          sub_10024D2D4(*(void *)(v19 + 56) + 32 * v21, (uint64_t)&v42);
        }
        else
        {
          long long v42 = 0u;
          long long v43 = 0u;
        }
        sub_10025B0A8((uint64_t)v41);
        if (!*((void *)&v43 + 1))
        {
          sub_10000A7E8((uint64_t)&v42, (uint64_t *)&unk_10096AC20);
LABEL_42:
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          goto LABEL_44;
        }
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_42;
        }
        id v23 = [v17 pathExtension];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        NSString v24 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        char v25 = SFIsIPA();
        swift_bridgeObjectRelease();

        if ((v25 & 1) == 0) {
          break;
        }
        if (v16 == ++v18)
        {
          swift_bridgeObjectRelease_n();
          id v10 = &selRef_shouldNotify;
          id v12 = &selRef_localizedCaseInsensitiveCompare_;
          goto LABEL_30;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_44:
      if (qword_100969C30 != -1) {
        swift_once();
      }
      uint64_t v40 = type metadata accessor for Logger();
      sub_10000B47C(v40, (uint64_t)qword_100970068);
      uint64_t v3 = Logger.logObject.getter();
      os_log_type_t v4 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v3, v4))
      {
        uint64_t v5 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v5 = 0;
        uint64_t v6 = "IPA Handler: File is not IPA, ignoring...";
        goto LABEL_48;
      }
      goto LABEL_35;
    }
    swift_bridgeObjectRelease();
LABEL_30:
    id v28 = [v1 v10[446]];
    id v29 = [v28 v12[123]];

    LODWORD(v28) = [v29 senderIsMe];
    if (v28)
    {
      if (qword_100969C30 != -1) {
        swift_once();
      }
      uint64_t v30 = type metadata accessor for Logger();
      sub_10000B47C(v30, (uint64_t)qword_100970068);
      uint64_t v3 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v3, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, v31, "IPA Handler: Transfer is me, can handle.", v32, 2u);
        swift_slowDealloc();
      }
      goto LABEL_35;
    }
    id v33 = [self defaultManager];
    NSString v34 = String._bridgeToObjectiveC()();
    unsigned int v35 = [v33 fileExistsAtPath:v34];

    if (qword_100969C30 != -1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    sub_10000B47C(v36, (uint64_t)qword_100970068);
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 67109120;
      v41[0] = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "IPA Handler: Developer settings bundle exists? %{BOOL}d", v39, 8u);
      swift_slowDealloc();
    }
  }
  else
  {
LABEL_51:
    __break(1u);
  }
}

uint64_t sub_100341328()
{
  unint64_t v1 = v0;
  id v2 = [v0 transfer];
  id v3 = [v2 metaData];

  if ([v1 totalSharedItemsCount] != (id)1)
  {
    void v33[3] = &type metadata for UInt;
    v33[4] = &protocol witness table for UInt;
    v33[0] = [v1 totalSharedItemsCount];
    unint64_t v12 = 0xE300000000000000;
    uint64_t v13 = 4280393;
LABEL_12:
    sub_10000A844(&qword_1009700C0);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_10076E7A0;
    sub_10000A844(&qword_1009700C8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
    *(void *)(inited + 32) = v13;
    *(void *)(inited + 40) = v12;
    *(void *)(inited + 48) = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInteger:[v1 totalSharedItemsCount]];
    *(void *)(v14 + 32) = sub_10024674C(inited);
    sub_10000A844((uint64_t *)&unk_1009700D0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v17 = [v1 alertMessageLocalizedKeyForTypeDicts:isa];

    id v18 = (id)SFLocalizedStringForKey();
    if (v18)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10000A844((uint64_t *)&unk_10096EE60);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_100770AD0;
      id v20 = [v1 senderName];
      if (v20)
      {
        unint64_t v21 = v20;
        uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v24 = v23;

        *(void *)(v19 + 56) = &type metadata for String;
        *(void *)(v19 + 64) = sub_1002E695C();
        *(void *)(v19 + 32) = v22;
        *(void *)(v19 + 40) = v24;
        sub_100278C8C((uint64_t)v33, v19 + 72);
        uint64_t v25 = static String.localizedStringWithFormat(_:_:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10024D338((uint64_t)v33);
        return v25;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_17;
  }
  if (!v3)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v4 = [v3 rawFiles];
  sub_10000A844((uint64_t *)&unk_10096B2A0);
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v5 + 16))
  {
LABEL_18:
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v6 = *(void *)(v5 + 32);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v8 = (void *)kSFOperationFileNameKey;
  if (kSFOperationFileNameKey)
  {
    v33[0] = kSFOperationFileNameKey;
    sub_10000B740(0, (unint64_t *)&unk_10096BA70);
    sub_10026B9A4();
    id v9 = v8;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v6 + 16) && (unint64_t v10 = sub_100583878((uint64_t)v28), (v11 & 1) != 0))
    {
      sub_10024D2D4(*(void *)(v6 + 56) + 32 * v10, (uint64_t)&v26);
    }
    else
    {
      long long v26 = 0u;
      long long v27 = 0u;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (!*((void *)&v27 + 1)) {
      goto LABEL_20;
    }
    sub_10025B0A8((uint64_t)v28);

    sub_100249444(&v26, &v29);
    os_log_type_t v31 = &type metadata for String;
    unint64_t v32 = sub_1002E695C();
    swift_dynamicCast();
    sub_1002AF688(&v30, (uint64_t)v33);
    unint64_t v12 = 0xEE00454C5449545FLL;
    uint64_t v13 = 0x485449575F415049;
    goto LABEL_12;
  }
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

void sub_1003417F0()
{
  v24.receiver = v0;
  v24.super_class = (Class)swift_getObjectType();
  [super updatePossibleActions];
  id v1 = [v0 transfer];
  id v2 = [v1 identifier];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_getObjectType();
  _typeName(_:qualified:)();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = (id)SFLocalizedStringForKey();

  if (v4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v6 = 0;
  }
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = (id)SFLocalizedStringForKey();

  if (v8)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v10 = 0;
  }
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (v6)
  {
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    if (v10)
    {
LABEL_9:
      NSString v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
  }
  else
  {
    NSString v13 = 0;
    if (v10) {
      goto LABEL_9;
    }
  }
  NSString v14 = 0;
LABEL_12:
  id v15 = [objc_allocWithZone((Class)SFAirDropAction) initWithTransferIdentifier:v11 actionIdentifier:v12 title:v13 singleItemTitle:v14 type:1];

  if (v15)
  {
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v0;
    v23[4] = sub_100343304;
    v23[5] = v16;
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 1107296256;
    v23[2] = sub_100342990;
    v23[3] = &unk_1008D7410;
    id v17 = _Block_copy(v23);
    id v18 = v0;
    swift_release();
    [v15 setActionHandler:v17];
    _Block_release(v17);
    id v19 = [v18 transfer];
    sub_10000A844(&qword_10096B3E0);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_100773BD0;
    *(void *)(v20 + 32) = v15;
    v23[0] = v20;
    specialized Array._endMutation()();
    sub_10000B740(0, &qword_1009700A8);
    id v21 = v15;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v19 setPossibleActions:isa];
  }
}

uint64_t sub_100341B74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_1009700B0);
  uint64_t v124 = *(char **)(v4 - 8);
  __chkstk_darwin(v4);
  double v101 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v99 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v97 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for DispatchQoS();
  uint64_t v96 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v95 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A844((uint64_t *)&unk_10096AC10);
  __chkstk_darwin(v9 - 8);
  double v119 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = type metadata accessor for URL();
  uint64_t v123 = *(void *)(v126 - 8);
  uint64_t v11 = __chkstk_darwin(v126);
  uint64_t v110 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v109 = (char *)&v90 - v14;
  v121 = v15;
  __chkstk_darwin(v13);
  unint64_t v100 = (char *)&v90 - v16;
  uint64_t v17 = sub_10000A844(&qword_1009700B8);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v120 = (size_t *)((char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  id v21 = (char *)&v90 - v20;
  if (a1)
  {
    uint64_t v22 = (uint64_t (*)(char, char, char))a1;
    uint64_t v23 = a2;
  }
  else
  {
    id v24 = [v125 completionHandler];
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v24;
    uint64_t v22 = sub_100343380;
  }
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v22;
  *(void *)(v25 + 24) = v23;
  uint64_t v26 = swift_allocObject();
  v122 = sub_1003433A8;
  *(void *)(v26 + 16) = sub_1003433A8;
  *(void *)(v26 + 24) = v25;
  swift_retain();
  sub_1002CA420(a1);
  id v27 = [v125 transfer];
  id v28 = [v27 completedURLs];

  long long v29 = _swiftEmptyArrayStorage;
  if (!v28)
  {
    uint64_t v30 = v126;
    unint64_t v32 = (SEL *)_swiftEmptyArrayStorage[2];
    if (v32) {
      goto LABEL_6;
    }
LABEL_18:
    unint64_t v40 = (unint64_t)&selRef_shouldNotify;
    swift_bridgeObjectRelease();
    if (qword_100969C30 != -1) {
      goto LABEL_26;
    }
    goto LABEL_19;
  }
  uint64_t v30 = v126;
  uint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  long long v29 = (void *)v31;
  unint64_t v32 = *(SEL **)(v31 + 16);
  if (!v32) {
    goto LABEL_18;
  }
LABEL_6:
  uint64_t v117 = (uint64_t *)v21;
  uint64_t v118 = v4;
  uint64_t v93 = v6;
  id v33 = v29;
  swift_release();
  sub_10000B740(0, (unint64_t *)&qword_10096A1A0);
  uint64_t v92 = static OS_dispatch_queue.main.getter();
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_1003433AC;
  *(void *)(v34 + 24) = v26;
  uint64_t v91 = v34;
  size_t v35 = v33[2];
  uint64_t v94 = v26;
  swift_retain();
  dispatch_group_t v112 = dispatch_group_create();
  sub_10000A844((uint64_t *)&unk_10096D4C0);
  uint64_t v111 = swift_allocObject();
  *(_DWORD *)(v111 + 16) = 0;
  uint64_t v36 = swift_allocObject();
  size_t v90 = v35;
  uint64_t v37 = sub_1003B635C(2, v35);
  uint64_t v38 = v123;
  v122 = (uint64_t (*)(unsigned __int8 *, unsigned __int8 *, unsigned __int8 *))(v123 + 16);
  uint64_t v113 = v36;
  *(void *)(v36 + 16) = v37;
  uint64_t v116 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
  uint64_t v103 = v38 + 48;
  uint64_t v39 = (char *)(v38 + 32);
  unint64_t v115 = v124 + 56;
  v114 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v124 + 48);
  Swift::String v107 = v121 + 7;
  int v106 = &v131;
  uint64_t v105 = v38 + 8;
  id v104 = v33;
  swift_bridgeObjectRetain();
  uint64_t v102 = 0;
  unint64_t v40 = 0;
  v121 = v39;
  uint64_t v108 = v32;
  while (1)
  {
    uint64_t v41 = (uint64_t)v119;
    if ((SEL *)v40 == v32)
    {
      (*v116)(v119, 1, 1, v30);
      unint64_t v40 = (unint64_t)v32;
      long long v43 = v117;
      uint64_t v42 = v118;
LABEL_11:
      sub_10000A7E8(v41, (uint64_t *)&unk_10096AC10);
      uint64_t v45 = 1;
      goto LABEL_14;
    }
    long long v43 = v117;
    uint64_t v42 = v118;
    if (v40 >= v104[2]) {
      break;
    }
    uint64_t v44 = v123;
    (*(void (**)(char *, unint64_t, uint64_t))(v123 + 16))(v119, (unint64_t)v104+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v40++, v30);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v30);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v41, 1, v30) == 1) {
      goto LABEL_11;
    }
    char v46 = *(void (**)(char *, uint64_t, uint64_t))v39;
    uint64_t v47 = v100;
    v46(v100, v41, v30);
    uint64_t v48 = &v101[*(int *)(v42 + 48)];
    v46(v48, (uint64_t)v47, v30);
    uint64_t v49 = v102 + 1;
    if (__OFADD__(v102, 1)) {
      goto LABEL_25;
    }
    unint64_t v50 = (char *)v120 + *(int *)(v42 + 48);
    void *v120 = v102;
    v46(v50, (uint64_t)v48, v30);
    uint64_t v45 = 0;
    uint64_t v102 = v49;
LABEL_14:
    uint64_t v51 = (uint64_t)v120;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))v115)(v120, v45, 1, v42);
    sub_10034346C(v51, (uint64_t)v43);
    if ((*v114)(v43, 1, v42) == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v73 = (void *)swift_allocObject();
      size_t v74 = v90;
      v73[2] = v113;
      v73[3] = v74;
      uint64_t v75 = v91;
      v73[4] = sub_10034342C;
      v73[5] = v75;
      uint64_t v133 = sub_100343514;
      uint64_t v134 = v73;
      aBlock = _NSConcreteStackBlock;
      uint64_t v130 = 1107296256;
      BOOL v131 = sub_100296520;
      v132 = &unk_1008D7528;
      uint64_t v76 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      char v77 = v95;
      static DispatchQoS.unspecified.getter();
      uint64_t v128 = _swiftEmptyArrayStorage;
      sub_100343710((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10000A844((uint64_t *)&unk_10096C490);
      sub_1002B4B9C();
      uint64_t v78 = v97;
      uint64_t v79 = v93;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      BOOL v80 = (void *)v92;
      dispatch_group_t v81 = v112;
      OS_dispatch_group.notify(qos:flags:queue:execute:)();
      _Block_release(v76);
      swift_release();

      (*(void (**)(char *, uint64_t))(v99 + 8))(v78, v79);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v77, v98);
      swift_bridgeObjectRelease();

      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
    uint64_t v52 = *v43;
    uint64_t v53 = (char *)v43 + *(int *)(v42 + 48);
    id v125 = (id)v40;
    uint64_t v54 = v123;
    uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v123 + 32);
    int v56 = v109;
    v55(v109, v53, v30);
    dispatch_group_t v57 = v112;
    dispatch_group_enter(v112);
    uint64_t v58 = (void *)swift_allocObject();
    uint64_t v59 = v113;
    v58[2] = v111;
    v58[3] = v59;
    v58[4] = v52;
    v58[5] = v57;
    uint64_t v60 = swift_allocObject();
    *(void *)(v60 + 16) = sub_100343568;
    *(void *)(v60 + 24) = v58;
    uint64_t v124 = (char *)self;
    swift_retain();
    swift_retain();
    char v61 = v57;
    swift_retain();
    URL._bridgeToObjectiveC()(v62);
    uint64_t v64 = v63;
    uint64_t v65 = v110;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v110, v56, v126);
    unint64_t v66 = (*(unsigned __int8 *)(v54 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
    unint64_t v67 = (unint64_t)&v107[v66] & 0xFFFFFFFFFFFFFFF8;
    uint64_t v68 = swift_allocObject();
    uint64_t v69 = v65;
    uint64_t v39 = v121;
    v55((char *)(v68 + v66), v69, v126);
    unint64_t v70 = (uint64_t (**)(char))(v68 + v67);
    *unint64_t v70 = sub_100343574;
    v70[1] = (uint64_t (*)(char))v60;
    unint64_t v32 = v108;
    uint64_t v133 = sub_100343624;
    uint64_t v134 = (void *)v68;
    aBlock = _NSConcreteStackBlock;
    uint64_t v130 = 1107296256;
    BOOL v131 = sub_1003B6458;
    v132 = &unk_1008D75C8;
    unint64_t v71 = _Block_copy(&aBlock);
    swift_release();
    [v124 installApplication:v64 options:0 completion:v71];
    _Block_release(v71);
    uint64_t v30 = v126;
    swift_release();

    uint64_t v72 = *(void (**)(char *, uint64_t))(v54 + 8);
    unint64_t v40 = (unint64_t)v125;
    v72(v56, v30);
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  swift_once();
LABEL_19:
  uint64_t v82 = type metadata accessor for Logger();
  sub_10000B47C(v82, (uint64_t)qword_100970068);
  id v83 = v125;
  uint64_t v84 = Logger.logObject.getter();
  os_log_type_t v85 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v84, v85))
  {
    uint64_t v86 = (uint8_t *)swift_slowAlloc();
    uint64_t v87 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v86 = 138412290;
    uint64_t v88 = (void **)[v83 *(SEL *)(v40 + 3568)];
    aBlock = v88;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v87 = v88;

    _os_log_impl((void *)&_mh_execute_header, v84, v85, "No completedURLs to install for %@", v86, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  LOBYTE(aBlock) = 0;
  LOBYTE(v128) = 0;
  char v127 = 1;
  v122((unsigned __int8 *)&aBlock, (unsigned __int8 *)&v128, (unsigned __int8 *)&v127);
  swift_release();
  return swift_release();
}

void sub_100342990(uint64_t a1, void *a2)
{
  NSString v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_100342A44(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v47 = a6;
  uint64_t v48 = a5;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v45 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v45 - v18;
  if (a3)
  {
    swift_errorRetain();
    if (qword_100969C30 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_10000B47C(v20, (uint64_t)qword_100970068);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v19, a4, v10);
    swift_errorRetain();
    swift_errorRetain();
    id v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v46 = v10;
      uint64_t v24 = v23;
      uint64_t v25 = swift_slowAlloc();
      uint64_t v49 = a3;
      uint64_t v50 = v25;
      *(_DWORD *)uint64_t v24 = 136315394;
      swift_errorRetain();
      sub_10000A844(&qword_10096BAF0);
      uint64_t v26 = String.init<A>(describing:)();
      uint64_t v49 = sub_100254634(v26, v27, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v24 + 12) = 2080;
      uint64_t v28 = URL.description.getter();
      uint64_t v49 = sub_100254634(v28, v29, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v46);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "IPA Handler: Failed to install app with error (%s for URL %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v10);
    }
LABEL_20:
    uint64_t v43 = 0;
    return v48(v43);
  }
  if (!a2)
  {
    if (qword_100969C30 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_10000B47C(v37, (uint64_t)qword_100970068);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v17, a4, v10);
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      unint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      *(_DWORD *)unint64_t v40 = 136315138;
      sub_100343710((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v41 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v49 = sub_100254634(v41, v42, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "IPA Handler: No error or success bundle ID for installing: %s", v40, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    }

    goto LABEL_20;
  }
  uint64_t v30 = qword_100969C30;
  swift_bridgeObjectRetain();
  if (v30 != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for Logger();
  sub_10000B47C(v31, (uint64_t)qword_100970068);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a4, v10);
  swift_bridgeObjectRetain();
  unint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v50 = v46;
    *(_DWORD *)uint64_t v34 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_100254634(a1, a2, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v34 + 12) = 2080;
    uint64_t v35 = URL.description.getter();
    uint64_t v49 = sub_100254634(v35, v36, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "IPA Handler: Successful app install '%s' for URL %s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }

  uint64_t v43 = 1;
  return v48(v43);
}

uint64_t sub_10034317C(uint64_t result, uint64_t (*a2)(uint64_t, void, uint64_t))
{
  uint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    goto LABEL_4;
  }
  if ((*(unsigned char *)(result + 32) & 1) == 0)
  {
    uint64_t v3 = 0;
    return a2(v3, 0, 1);
  }
  if (v2 == 1)
  {
LABEL_4:
    uint64_t v3 = 1;
    return a2(v3, 0, 1);
  }
  uint64_t v4 = 33;
  while (1)
  {
    uint64_t v5 = v4 - 31;
    if (__OFADD__(v4 - 32, 1)) {
      break;
    }
    uint64_t v3 = *(unsigned __int8 *)(result + v4++);
    if (v3 != 1 || v5 == v2) {
      return a2(v3, 0, 1);
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SDAirDropHandlerIPA()
{
  return self;
}

uint64_t sub_1003432CC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100343304()
{
  return sub_100341B74(0, 0);
}

uint64_t sub_100343330(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100343340()
{
  return swift_release();
}

uint64_t sub_100343348()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100343380(char a1, char a2, char a3)
{
  return (*(uint64_t (**)(void, void, void, void))(*(void *)(v3 + 16) + 16))(*(void *)(v3 + 16), a1 & 1, a2 & 1, a3 & 1);
}

uint64_t sub_1003433AC(char a1, char a2, char a3)
{
  uint64_t v4 = *(uint64_t (**)(char *, char *, char *))(v3 + 16);
  char v8 = a1;
  char v7 = a2;
  char v6 = a3;
  return v4(&v8, &v7, &v6);
}

uint64_t sub_1003433F4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10034342C(uint64_t a1)
{
  return sub_10034317C(a1, *(uint64_t (**)(uint64_t, void, uint64_t))(v1 + 16));
}

uint64_t sub_100343434()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10034346C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_1009700B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003434D4()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100343514()
{
  return sub_1003B659C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(void *))(v0 + 32));
}

uint64_t sub_100343520()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100343568(uint64_t a1)
{
  sub_1003B8104(a1, *(os_unfair_lock_s **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(NSObject **)(v1 + 40));
}

uint64_t sub_100343574(char a1)
{
  return sub_1003B6420(a1, *(uint64_t (**)(char *))(v1 + 16));
}

uint64_t sub_10034357C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100343624(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v3 + v8;
  uint64_t v10 = v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *(uint64_t (**)(uint64_t))v10;
  uint64_t v12 = *(void *)(v10 + 8);

  return sub_100342A44(a1, a2, a3, v9, v11, v12);
}

uint64_t sub_1003436DC(unsigned __int8 *a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  return (*(uint64_t (**)(void, void, void))(v3 + 16))(*a1, *a2, *a3);
}

uint64_t sub_100343710(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100343778(uint64_t (*a1)(long long *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return 0;
  }
  uint64_t v6 = 0;
  uint64_t v7 = a3 + 32;
  while (1)
  {
    long long v12 = *(_OWORD *)(v7 + 16 * v6);
    uint64_t v11 = (void *)*((void *)&v12 + 1);
    swift_unknownObjectRetain();
    id v8 = v11;
    char v9 = a1(&v12);

    swift_unknownObjectRelease();
    if (v3 || (v9 & 1) != 0) {
      break;
    }
    if (v4 == ++v6) {
      return 0;
    }
  }
  return v6;
}

uint64_t sub_10034385C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_1009700E0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_1009700E0);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100343924()
{
  uint64_t v1 = type metadata accessor for SFPlatform();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v0 + 48);
  if ([v5 screenStateSupportsAirDrop]
    && [v5 discoverableLevel]
    && [v5 wirelessEnabled]
    && [v5 bluetoothEnabledIncludingRestricted])
  {
    static SFPlatform.watchOS.getter();
    char v6 = static SFPlatform.isPlatform(_:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    char v7 = v6 ^ 1;
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_100343A5C()
{
  uint64_t v1 = type metadata accessor for SFPlatform();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v0 + 48);
  if (![v5 screenStateSupportsAirDrop]
    || ![v5 discoverableLevel]
    || ![v5 wirelessEnabled]
    || ![v5 bluetoothEnabledIncludingRestricted])
  {
    goto LABEL_8;
  }
  uint64_t v6 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes;
  swift_beginAccess();
  uint64_t v7 = *(void *)(*(void *)v6 + 16);
  if (v7)
  {
    id v8 = [v5 bluetoothAddress];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v12 = v11;

      sub_100250CC4(v10, v12);
      static SFPlatform.watchOS.getter();
      LOBYTE(v9) = static SFPlatform.isPlatform(_:)();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      LOBYTE(v7) = v9 ^ 1;
      return v7 & 1;
    }
LABEL_8:
    LOBYTE(v7) = 0;
  }
  return v7 & 1;
}

uint64_t sub_100343C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v7 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(_DWORD *)(v7 + 104) = 0;
  UUID.init()();
  *(void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes) = &_swiftEmptySetSingleton;
  uint64_t v15 = (void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer);
  *uint64_t v15 = 0;
  v15[1] = 0;
  *(void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServerErrors) = &_swiftEmptySetSingleton;
  uint64_t v16 = (void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer);
  *uint64_t v16 = 0;
  v16[1] = 0;
  *(void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServerErrors) = &_swiftEmptySetSingleton;
  *(void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions) = &_swiftEmptySetSingleton;
  *(void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServersByTransactionID) = &_swiftEmptyDictionarySingleton;
  *(void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServerErrors) = &_swiftEmptySetSingleton;
  *(void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers) = &_swiftEmptyDictionarySingleton;
  *(void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourDiscoveryHandlers) = _swiftEmptyArrayStorage;
  *(void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourReceiveHandlers) = _swiftEmptyArrayStorage;
  *(void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_lastDiscoverableLevel) = 0;
  uint64_t v17 = (void *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_appleIDState);
  *uint64_t v17 = 0;
  v17[1] = 0;
  *(unsigned char *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_lastWirelessBluetoothStateEnabled) = 0;
  *(void *)(v7 + 48) = a1;
  *(void *)(v7 + 56) = a2;
  *(void *)(v7 + 112) = a3;
  *(void *)(v7 + 64) = a4;
  *(void *)(v7 + 72) = a6;
  *(void *)(v7 + 80) = a5;
  *(void *)(v7 + 88) = a7;
  *(void *)(v7 + 96) = [self defaultCenter];
  return v7;
}

void sub_100343D88()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SFPlatform();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100969C38 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_1009700E0);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Starting AirDrop Receive Connection Manager", v9, 2u);
    swift_slowDealloc();
  }

  static SFPlatform.tvOS.getter();
  char v10 = static SFPlatform.isPlatform(_:)();
  unint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v5, v2);
  if ((v10 & 1) == 0)
  {
    sub_100343FB4();
    if ([*(id *)(v1 + 48) screenStateSupportsAirDrop])
    {
      static SFPlatform.watchOS.getter();
      char v12 = static SFPlatform.isPlatform(_:)();
      v11(v5, v2);
      if ((v12 & 1) == 0)
      {
        uint64_t v13 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleScannerID;
        swift_retain();
        sub_1005DD670(v13, (uint64_t)sub_100357CD4, v1);
        swift_release();
      }
      sub_1003443F0(0);
    }
  }
}

void sub_100343FB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SFPlatform();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v1 + 96);
  [v6 addObserver:v1 selector:"screenStateChangedWithNotification:" name:@"com.apple.sharingd.ScreenStateChanged" object:0];
  [v6 addObserver:v1 selector:"screenStateChangedWithNotification:" name:@"com.apple.sharingd.MirroringStateChanged" object:0];
  [v6 addObserver:v1 selector:"appleIDChangedWithNotification:" name:@"com.apple.sharingd.AppleIDAccountInfoChanged" object:0];
  [v6 addObserver:v1 selector:"discoverableModeChangedWithNotification:" name:@"com.apple.sharingd.DiscoverableModeChanged" object:0];
  [v6 addObserver:v1 selector:"deviceNameChangedWithNotification:" name:@"com.apple.sharingd.LocalHostNameChanged" object:0];
  [v6 addObserver:v1 selector:"wirelessBluetoothStateChangedWithNotification:" name:@"com.apple.sharingd.WirelessModeChanged" object:0];
  [v6 addObserver:v1 selector:"wirelessBluetoothStateChangedWithNotification:" name:@"com.apple.sharingd.WirelessPowerChanged" object:0];
  [v6 addObserver:v1 selector:"wirelessBluetoothStateChangedWithNotification:" name:@"com.apple.sharingd.BluetoothPowerChanged" object:0];
  static SFPlatform.macOS.getter();
  char v7 = static SFPlatform.isPlatform(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v7) {
    [v6 addObserver:v1 selector:"consoleUserChangedWithNotification:" name:@"com.apple.sharingd.ConsoleUserChanged" object:0];
  }
  os_log_type_t v8 = (const char *)[SFNotificationAirDropCellularUsageChanged UTF8String];
  sub_1002B62F0();
  uint64_t v9 = static OS_dispatch_queue.main.getter();
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_100357DEC;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1006CBFC8;
  aBlock[3] = &unk_1008D77B8;
  unint64_t v11 = _Block_copy(aBlock);
  swift_release();
  swift_beginAccess();
  uint32_t v12 = notify_register_dispatch(v8, (int *)(v1 + 104), v9, v11);
  swift_endAccess();
  _Block_release(v11);

  if (v12)
  {
    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000B47C(v13, (uint64_t)qword_1009700E0);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 67109120;
      LODWORD(aBlock[0]) = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Failed to register for cellular usage changed notifications with status %u", v16, 8u);
      swift_slowDealloc();
    }
  }
}

void sub_1003443F0(uint64_t a1)
{
  char v2 = a1;
  sub_10034B4F0(a1);
  if (v2)
  {
    if (v2 != 1) {
      return;
    }
    uint64_t v3 = (void *)((char *)v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer);
    if (!*(void *)((char *)v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer))
    {
      if (sub_100343A5C())
      {
        uint64_t v4 = (void *)v1[6];
        uint64_t v5 = (void *)v1[7];
        uint64_t v6 = v1[10];
        char v7 = (void *)v1[11];
        id v8 = objc_allocWithZone((Class)type metadata accessor for SDAirDropBonjourServer());
        swift_retain();
        id v9 = v4;
        id v10 = v5;
        swift_retain();
        id v11 = v7;
        id v12 = sub_10035AD68(v9, v10, v6, v11, (uint64_t)v1, (uint64_t)&off_1008D7630);
        swift_release();

        swift_release();
        *uint64_t v3 = v12;
        v3[1] = &off_1008D7A10;
        osos_log_t log = (os_log_t)v12;
        swift_unknownObjectRelease();
        sub_100358370();
LABEL_29:

        return;
      }
      if (qword_100969C38 != -1) {
        swift_once();
      }
      uint64_t v25 = type metadata accessor for Logger();
      sub_10000B47C(v25, (uint64_t)qword_1009700E0);
      osos_log_t log = (os_log_t)Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(oslog, v26)) {
        goto LABEL_29;
      }
      unint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v27 = 0;
      uint64_t v28 = "Ignoring Bonjour Server Start";
      goto LABEL_28;
    }
  }
  else
  {
    uint64_t v13 = (void *)((char *)v1
                   + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer);
    if (!*(void *)((char *)v1
                    + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer))
    {
      if (sub_100343924())
      {
        uint64_t v20 = (void *)v1[6];
        uint64_t v21 = v1[10];
        id v22 = objc_allocWithZone((Class)type metadata accessor for SDAirDropApplicationServiceServer());
        id v23 = v20;
        swift_retain();
        swift_retain();
        id v24 = sub_1003DEAA4(v23, v21, (uint64_t)v1, (uint64_t)&off_1008D7630);
        swift_release();
        swift_release();

        *uint64_t v13 = v24;
        v13[1] = &off_1008D93C0;
        osos_log_t log = (os_log_t)v24;
        swift_unknownObjectRelease();
        sub_1003DC504();
        goto LABEL_29;
      }
      if (qword_100969C38 != -1) {
        swift_once();
      }
      uint64_t v29 = type metadata accessor for Logger();
      sub_10000B47C(v29, (uint64_t)qword_1009700E0);
      osos_log_t log = (os_log_t)Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(oslog, v26)) {
        goto LABEL_29;
      }
      unint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v27 = 0;
      uint64_t v28 = "Ignoring Application Service Server Start";
LABEL_28:
      _os_log_impl((void *)&_mh_execute_header, oslog, v26, v28, v27, 2u);
      swift_slowDealloc();
      goto LABEL_29;
    }
  }
  if (qword_100969C38 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_10000B47C(v14, (uint64_t)qword_1009700E0);
  osos_log_t log = (os_log_t)Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(oslog, v15)) {
    goto LABEL_29;
  }
  uint64_t v16 = (uint8_t *)swift_slowAlloc();
  uint64_t v17 = swift_slowAlloc();
  *(_DWORD *)uint64_t v16 = 136315138;
  uint64_t v31 = v17;
  if (v2) {
    uint64_t v18 = 0x2072756F6A6E6F42;
  }
  else {
    uint64_t v18 = 0xD00000000000001ALL;
  }
  if (v2) {
    unint64_t v19 = 0xEE00726576726553;
  }
  else {
    unint64_t v19 = 0x80000001007BA550;
  }
  sub_100254634(v18, v19, &v31);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, oslog, v15, "Server already exists for type %s", v16, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
}

uint64_t sub_1003448AC(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = sub_10000A844(&qword_1009702F0);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  sub_10000A844(&qword_1009702F8);
  v2[14] = swift_task_alloc();
  v2[15] = type metadata accessor for SDAirDropServerConnection(0);
  v2[16] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v3 = static AirDropActor.shared;
  v2[17] = static AirDropActor.shared;
  return _swift_task_switch(sub_100344A20, v3, 0);
}

uint64_t sub_100344A20()
{
  sub_100356A94(v0[5], v0[16], type metadata accessor for SDAirDropServerConnection);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    uint64_t v1 = v0[16];
    uint64_t v2 = v1 + *(int *)(sub_10000A844(&qword_100970300) + 48);
    uint64_t v3 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  }
  uint64_t v4 = v0[14];
  NWConnection.start(queue:)();
  swift_release();
  uint64_t v5 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  v0[18] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  char v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v0[19] = (uint64_t)v7;
  v0[20] = (v6 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v7(v4, 1, 1, v5);
  id v8 = (void *)swift_task_alloc();
  v0[21] = (uint64_t)v8;
  *id v8 = v0;
  v8[1] = sub_100344BBC;
  uint64_t v9 = v0[14];
  uint64_t v10 = v0[5];
  return sub_1003459C8(v9, v10);
}

uint64_t sub_100344BBC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  uint64_t v3 = *(void *)(*v0 + 104);
  uint64_t v4 = *(void *)(*v0 + 56);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  sub_10000A7E8(v2, &qword_1009702F8);
  uint64_t v6 = *(int *)(v4 + 48);
  *(_DWORD *)(v1 + 208) = v6;
  uint64_t v7 = v3 + v6;
  id v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 176) = v8;
  *id v8 = v5;
  v8[1] = sub_100344D68;
  uint64_t v9 = *(void *)(v1 + 104);
  return sub_1005D9554(v9, v7);
}

uint64_t sub_100344D68()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 136);
  if (v0) {
    uint64_t v4 = sub_100345774;
  }
  else {
    uint64_t v4 = sub_100344E94;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100344E94()
{
  uint64_t v1 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v6 = v3 + *(int *)(v0 + 208);
  uint64_t v7 = v5 + *(int *)(*(void *)(v0 + 56) + 48);
  sub_100356A94(v3, v5, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  sub_100356A94(v6, v7, type metadata accessor for SDAirDropServerConnectionIdentity);
  sub_100356E50(v7, v4, type metadata accessor for SDAirDropServerConnectionIdentity);
  v1(v4, 0, 1, v2);
  id v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v8;
  *id v8 = v0;
  v8[1] = sub_100344FCC;
  uint64_t v9 = *(void *)(v0 + 112);
  uint64_t v10 = *(void *)(v0 + 40);
  return sub_1003459C8(v9, v10);
}

uint64_t sub_100344FCC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 136);
  uint64_t v2 = *(void *)(*(void *)v0 + 112);
  uint64_t v3 = *(void *)(*(void *)v0 + 96);
  swift_task_dealloc();
  sub_10000A7E8(v2, &qword_1009702F8);
  sub_100356AFC(v3, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  return _swift_task_switch(sub_100345138, v1, 0);
}

uint64_t sub_100345138()
{
  uint64_t v41 = v0;
  if (qword_100969C38 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v39 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = v1 + *(int *)(v0 + 208);
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000B47C(v7, (uint64_t)qword_1009700E0);
  uint64_t v8 = v2 + *(int *)(v5 + 48);
  sub_100356A94(v1, v2, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  sub_100356A94(v6, v8, type metadata accessor for SDAirDropServerConnectionIdentity);
  sub_10024D388(v2, v3, &qword_1009702F0);
  uint64_t v9 = v4 + *(int *)(v5 + 48);
  sub_100356A94(v1, v4, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  sub_100356A94(v6, v9, type metadata accessor for SDAirDropServerConnectionIdentity);
  sub_10024D388(v4, v39, &qword_1009702F0);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = *(void *)(v0 + 96);
    uint64_t v13 = *(void *)(v0 + 80);
    uint64_t v14 = *(void *)(v0 + 56);
    uint64_t v36 = *(void *)(v0 + 64);
    uint64_t v35 = v14;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v16 = *(int *)(v14 + 48);
    os_log_type_t type = v11;
    uint64_t v17 = v12 + v16;
    uint64_t v18 = v13 + v16;
    sub_100356A94(v13, v12, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
    sub_100356A94(v18, v17, type metadata accessor for SDAirDropServerConnectionIdentity);
    os_log_t log = v10;
    unint64_t v19 = sub_1005DB064();
    unint64_t v21 = v20;
    sub_100356AFC(v17, type metadata accessor for SDAirDropServerConnectionIdentity);
    sub_100356AFC(v12, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
    *(void *)(v0 + 24) = sub_100254634(v19, v21, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A7E8(v13, &qword_1009702F0);
    *(_WORD *)(v15 + 12) = 2080;
    uint64_t v22 = *(int *)(v35 + 48);
    uint64_t v23 = v12 + v22;
    uint64_t v24 = v36 + v22;
    sub_100356A94(v36, v12, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
    sub_100356A94(v24, v23, type metadata accessor for SDAirDropServerConnectionIdentity);
    unint64_t v25 = sub_100574A74();
    unint64_t v27 = v26;
    sub_100356AFC(v12, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
    sub_100356AFC(v23, type metadata accessor for SDAirDropServerConnectionIdentity);
    *(void *)(v0 + 32) = sub_100254634(v25, v27, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A7E8(v36, &qword_1009702F0);
    _os_log_impl((void *)&_mh_execute_header, log, type, "Message id: %s, message: %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v28 = *(void *)(v0 + 64);
    sub_10000A7E8(*(void *)(v0 + 80), &qword_1009702F0);
    sub_10000A7E8(v28, &qword_1009702F0);
  }
  uint64_t v29 = *(int *)(v0 + 208);
  uint64_t v30 = *(void *)(v0 + 104);
  uint64_t v31 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_100345594;
  uint64_t v32 = *(void *)(v0 + 104);
  uint64_t v33 = *(void *)(v0 + 40);
  return sub_100345E60(v32, v33, v30 + v29);
}

uint64_t sub_100345594()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 136);
  swift_task_dealloc();
  return _swift_task_switch(sub_1003456A4, v1, 0);
}

uint64_t sub_1003456A4()
{
  sub_10000A7E8(*(void *)(v0 + 104), &qword_1009702F0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100345774()
{
  if (qword_100969C38 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_1009700E0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error receiving message %@", v4, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1003459C8(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = *(void *)(sub_10000A844(&qword_1009702F8) - 8);
  v3[5] = v4;
  v3[6] = *(void *)(v4 + 64);
  v3[7] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for NWConnection.State();
  v3[8] = v5;
  v3[9] = *(void *)(v5 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SDAirDropServerConnection(0);
  v3[12] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[13] = v7;
  v3[14] = *(void *)(v7 + 64);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v8 = static AirDropActor.shared;
  return _swift_task_switch(sub_100345BAC, v8, 0);
}

uint64_t sub_100345BAC()
{
  sub_100356A94(v0[3], v0[16], type metadata accessor for SDAirDropServerConnection);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    uint64_t v1 = v0[16];
    uint64_t v2 = v1 + *(int *)(sub_10000A844(&qword_100970300) + 48);
    uint64_t v3 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  }
  uint64_t v5 = v0[10];
  uint64_t v4 = v0[11];
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[9];
  NWConnection.state.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v5, enum case for NWConnection.State.ready(_:), v6);
  char v8 = static NWConnection.State.== infix(_:_:)();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v9(v5, v6);
  v9(v4, v6);
  if (v8) {
    sub_100350BEC(v0[2], v0[3]);
  }
  uint64_t v10 = v0[15];
  uint64_t v11 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v12 = v0[7];
  uint64_t v14 = v0[4];
  uint64_t v15 = v0[5];
  uint64_t v16 = v0[3];
  sub_100356BB0(v0[2], v12);
  sub_100356A94(v16, v10, type metadata accessor for SDAirDropServerConnection);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (v13 + *(unsigned __int8 *)(v11 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v14;
  sub_10024D388(v12, v19 + v17, &qword_1009702F8);
  sub_100356E50(v10, v19 + v18, type metadata accessor for SDAirDropServerConnection);
  swift_retain();
  NWConnection.stateUpdateHandler.setter();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_100345E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[22] = a3;
  v4[23] = v3;
  v4[20] = a1;
  v4[21] = a2;
  _s14descr1008C9841V12ErrorRequestVMa();
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  _s14descr1008C9A51V15ExchangeRequestVMa(0);
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[28] = _s14descr1008C92C9V13UploadRequestVMa();
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  _s14descr1008C9AB9V10AskRequestVMa();
  v4[31] = swift_task_alloc();
  v4[32] = _s12HelloRequestVMa();
  v4[33] = swift_task_alloc();
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  v4[36] = type metadata accessor for SDAirDropMessage();
  v4[37] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  v4[38] = static AirDropActor.shared;
  return _swift_task_switch(sub_100346064, v5, 0);
}

uint64_t sub_100346064()
{
  uint64_t v131 = v0;
  sub_100356A94(*(void *)(v0 + 160), *(void *)(v0 + 296), (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v1 = *(void *)(v0 + 176);
      uint64_t v3 = *(char ***)(v0 + 160);
      uint64_t v2 = *(void *)(v0 + 168);
      sub_100356E50(*(void *)(v0 + 296), *(void *)(v0 + 280), (uint64_t (*)(void))_s12HelloRequestVMa);
      id v4 = sub_10034FA54(v1, v2, v3);
      *(void *)(v0 + 352) = v4;
      if (qword_100969C38 != -1) {
        swift_once();
      }
      uint64_t v6 = *(void *)(v0 + 272);
      uint64_t v5 = *(void *)(v0 + 280);
      uint64_t v7 = type metadata accessor for Logger();
      sub_10000B47C(v7, (uint64_t)qword_1009700E0);
      sub_100356A94(v5, v6, (uint64_t (*)(void))_s12HelloRequestVMa);
      char v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.default.getter();
      BOOL v10 = os_log_type_enabled(v8, v9);
      uint64_t v11 = *(void *)(v0 + 272);
      if (v10)
      {
        id v125 = v4;
        uint64_t v13 = *(void *)(v0 + 256);
        uint64_t v12 = *(void *)(v0 + 264);
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        uint64_t v129 = swift_slowAlloc();
        *(_DWORD *)uint64_t v14 = 136315138;
        sub_100356A94(v11, v12, (uint64_t (*)(void))_s12HelloRequestVMa);
        _StringGuts.grow(_:)(16);
        swift_bridgeObjectRelease();
        strcpy((char *)v130, "HELLO request ");
        HIBYTE(v130[1]) = -18;
        *(_DWORD *)(v0 + 520) = *(_DWORD *)(v12 + *(int *)(v13 + 20));
        v15._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v15);
        swift_bridgeObjectRelease();
        sub_100356AFC(v12, (uint64_t (*)(void))_s12HelloRequestVMa);
        *(void *)(v0 + 144) = sub_100254634(v130[0], v130[1], &v129);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        id v4 = v125;
        swift_bridgeObjectRelease();
        sub_100356AFC(v11, (uint64_t (*)(void))_s12HelloRequestVMa);
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Received HELLO request %s", v14, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100356AFC(*(void *)(v0 + 272), (uint64_t (*)(void))_s12HelloRequestVMa);
      }

      v4;
      uint64_t v108 = (void *)swift_task_alloc();
      *(void *)(v0 + 360) = v108;
      *uint64_t v108 = v0;
      v108[1] = sub_1003476B4;
      uint64_t v109 = *(void *)(v0 + 280);
      uint64_t v110 = *(void *)(v0 + 168);
      uint64_t result = sub_10066B460(v109, v110);
      break;
    case 2u:
      unint64_t v25 = *(uint64_t **)(v0 + 296);
      uint64_t v26 = *(void *)(v0 + 176);
      uint64_t v28 = *(char ***)(v0 + 160);
      uint64_t v27 = *(void *)(v0 + 168);
      uint64_t v29 = *v25;
      *(void *)(v0 + 312) = *v25;
      unint64_t v30 = v25[1];
      *(void *)(v0 + 320) = v30;
      id v31 = sub_10034FA54(v26, v27, v28);
      *(void *)(v0 + 328) = v31;
      if (qword_100969C38 != -1) {
        swift_once();
      }
      uint64_t v32 = type metadata accessor for Logger();
      sub_10000B47C(v32, (uint64_t)qword_1009700E0);
      sub_100278C78(v29, v30);
      sub_100278C78(v29, v30);
      uint64_t v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v33, v34))
      {
        id v126 = v31;
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        v130[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v35 = 136315138;
        if (v30 >> 60 == 15)
        {
          unint64_t v36 = 0x80000001007BA520;
          unint64_t v37 = 0xD00000000000002ALL;
        }
        else
        {
          unint64_t v37 = Data.description.getter();
          unint64_t v36 = v122;
        }
        *(void *)(v0 + 152) = sub_100254634(v37, v36, v130);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100250CB0(v29, v30);
        sub_100250CB0(v29, v30);
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "Received DISCOVER request {senderRecordData: %s}", v35, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        id v31 = v126;
      }
      else
      {
        sub_100250CB0(v29, v30);
        sub_100250CB0(v29, v30);
      }
      v31;
      uint64_t v123 = (void *)swift_task_alloc();
      *(void *)(v0 + 336) = v123;
      *uint64_t v123 = v0;
      v123[1] = sub_100347490;
      uint64_t v124 = *(void *)(v0 + 168);
      uint64_t result = sub_100669774(v29, v30, v124);
      break;
    case 4u:
      uint64_t v38 = *(void *)(v0 + 176);
      uint64_t v40 = *(char ***)(v0 + 160);
      uint64_t v39 = *(void *)(v0 + 168);
      sub_100356E50(*(void *)(v0 + 296), *(void *)(v0 + 248), (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
      id v41 = sub_10034FA54(v38, v39, v40);
      *(void *)(v0 + 376) = v41;
      if (qword_100969C38 != -1) {
        swift_once();
      }
      uint64_t v42 = type metadata accessor for Logger();
      sub_10000B47C(v42, (uint64_t)qword_1009700E0);
      uint64_t v43 = Logger.logObject.getter();
      os_log_type_t v44 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v45 = 0;
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "Received ASK request", v45, 2u);
        swift_slowDealloc();
      }

      v41;
      uint64_t v46 = (void *)swift_task_alloc();
      *(void *)(v0 + 384) = v46;
      *uint64_t v46 = v0;
      v46[1] = sub_10034790C;
      uint64_t v47 = *(void *)(v0 + 248);
      uint64_t v48 = *(void *)(v0 + 168);
      uint64_t result = sub_10066BAB8(v47, v48);
      break;
    case 6u:
      uint64_t v49 = *(void *)(v0 + 176);
      uint64_t v51 = *(char ***)(v0 + 160);
      uint64_t v50 = *(void *)(v0 + 168);
      sub_100356E50(*(void *)(v0 + 296), *(void *)(v0 + 240), (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
      id v52 = sub_10034FA54(v49, v50, v51);
      *(void *)(v0 + 400) = v52;
      if (qword_100969C38 != -1) {
        swift_once();
      }
      uint64_t v54 = *(void *)(v0 + 232);
      uint64_t v53 = *(void *)(v0 + 240);
      uint64_t v55 = type metadata accessor for Logger();
      sub_10000B47C(v55, (uint64_t)qword_1009700E0);
      sub_100356A94(v53, v54, (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
      int v56 = Logger.logObject.getter();
      os_log_type_t v57 = static os_log_type_t.default.getter();
      BOOL v58 = os_log_type_enabled(v56, v57);
      uint64_t v59 = *(void *)(v0 + 232);
      if (v58)
      {
        id v127 = v52;
        uint64_t v60 = *(void *)(v0 + 224);
        char v61 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)char v61 = 134217984;
        uint64_t v62 = *(void *)(v59 + *(int *)(v60 + 20));
        sub_100356AFC(v59, (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
        *(void *)(v0 + 136) = v62;
        id v52 = v127;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v56, v57, "Received UPLOAD request %ld", v61, 0xCu);
        swift_slowDealloc();
      }
      else
      {
        sub_100356AFC(*(void *)(v0 + 232), (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
      }

      v52;
      uint64_t v111 = (void *)swift_task_alloc();
      *(void *)(v0 + 408) = v111;
      void *v111 = v0;
      v111[1] = sub_100347B64;
      uint64_t v112 = *(void *)(v0 + 240);
      uint64_t v113 = *(void *)(v0 + 168);
      uint64_t result = sub_10066CFB0(v112, v113);
      break;
    case 8u:
      uint64_t v63 = *(void *)(v0 + 176);
      uint64_t v65 = *(char ***)(v0 + 160);
      uint64_t v64 = *(void *)(v0 + 168);
      sub_100356E50(*(void *)(v0 + 296), *(void *)(v0 + 216), _s14descr1008C9A51V15ExchangeRequestVMa);
      id v66 = sub_10034FA54(v63, v64, v65);
      *(void *)(v0 + 424) = v66;
      if (qword_100969C38 != -1) {
        swift_once();
      }
      uint64_t v68 = *(void *)(v0 + 208);
      uint64_t v67 = *(void *)(v0 + 216);
      uint64_t v69 = type metadata accessor for Logger();
      sub_10000B47C(v69, (uint64_t)qword_1009700E0);
      sub_100356A94(v67, v68, _s14descr1008C9A51V15ExchangeRequestVMa);
      unint64_t v70 = Logger.logObject.getter();
      os_log_type_t v71 = static os_log_type_t.default.getter();
      BOOL v72 = os_log_type_enabled(v70, v71);
      uint64_t v73 = *(void *)(v0 + 208);
      if (v72)
      {
        size_t v74 = (uint8_t *)swift_slowAlloc();
        v130[0] = swift_slowAlloc();
        *(_DWORD *)size_t v74 = 136315138;
        type metadata accessor for SFAirDrop.TransferIdentifier();
        sub_10000BA10(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
        uint64_t v75 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 128) = sub_100254634(v75, v76, v130);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100356AFC(v73, _s14descr1008C9A51V15ExchangeRequestVMa);
        _os_log_impl((void *)&_mh_execute_header, v70, v71, "Received EXCHANGE request %s", v74, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100356AFC(*(void *)(v0 + 208), _s14descr1008C9A51V15ExchangeRequestVMa);
      }

      v66;
      v114 = (void *)swift_task_alloc();
      *(void *)(v0 + 432) = v114;
      void *v114 = v0;
      v114[1] = sub_100347DBC;
      uint64_t v115 = *(void *)(v0 + 216);
      uint64_t v116 = *(void *)(v0 + 168);
      uint64_t result = sub_10066FC38(v115, v116);
      break;
    case 0xAu:
      uint64_t v77 = *(void *)(v0 + 296);
      uint64_t v78 = *(void *)(v0 + 176);
      BOOL v80 = *(char ***)(v0 + 160);
      uint64_t v79 = *(void *)(v0 + 168);
      long long v81 = *(_OWORD *)(v77 + 16);
      *(_OWORD *)(v0 + 16) = *(_OWORD *)v77;
      *(_OWORD *)(v0 + 32) = v81;
      uint64_t v82 = (void *)(v0 + 16);
      long long v84 = *(_OWORD *)(v77 + 48);
      long long v83 = *(_OWORD *)(v77 + 64);
      long long v85 = *(_OWORD *)(v77 + 32);
      *(void *)(v0 + 96) = *(void *)(v77 + 80);
      *(_OWORD *)(v0 + 64) = v84;
      *(_OWORD *)(v0 + 80) = v83;
      *(_OWORD *)(v0 + 48) = v85;
      id v86 = sub_10034FA54(v78, v79, v80);
      *(void *)(v0 + 448) = v86;
      if (qword_100969C38 != -1) {
        swift_once();
      }
      uint64_t v87 = type metadata accessor for Logger();
      sub_10000B47C(v87, (uint64_t)qword_1009700E0);
      sub_100356994(v82);
      uint64_t v88 = Logger.logObject.getter();
      os_log_type_t v89 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v88, v89))
      {
        id v128 = v86;
        size_t v90 = (uint8_t *)swift_slowAlloc();
        v130[0] = swift_slowAlloc();
        *(_DWORD *)size_t v90 = 136315138;
        uint64_t v91 = *(void *)(v0 + 80);
        unint64_t v92 = *(void *)(v0 + 88);
        swift_bridgeObjectRetain();
        uint64_t v93 = v91;
        id v86 = v128;
        *(void *)(v0 + 120) = sub_100254634(v93, v92, v130);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100356A14(v82);
        _os_log_impl((void *)&_mh_execute_header, v88, v89, "Received IDENTITY-SHARE request %s", v90, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100356A14(v82);
      }

      v86;
      uint64_t v117 = (void *)swift_task_alloc();
      *(void *)(v0 + 456) = v117;
      void *v117 = v0;
      v117[1] = sub_100348014;
      uint64_t v118 = *(void *)(v0 + 168);
      uint64_t result = sub_1006700D0((uint64_t)v82, v118);
      break;
    case 0xCu:
      uint64_t v94 = *(void *)(v0 + 176);
      uint64_t v96 = *(char ***)(v0 + 160);
      uint64_t v95 = *(void *)(v0 + 168);
      sub_100356E50(*(void *)(v0 + 296), *(void *)(v0 + 200), (uint64_t (*)(void))_s14descr1008C9841V12ErrorRequestVMa);
      id v97 = sub_10034FA54(v94, v95, v96);
      *(void *)(v0 + 472) = v97;
      if (qword_100969C38 != -1) {
        swift_once();
      }
      uint64_t v99 = *(void *)(v0 + 192);
      uint64_t v98 = *(void *)(v0 + 200);
      uint64_t v100 = type metadata accessor for Logger();
      sub_10000B47C(v100, (uint64_t)qword_1009700E0);
      sub_100356A94(v98, v99, (uint64_t (*)(void))_s14descr1008C9841V12ErrorRequestVMa);
      double v101 = Logger.logObject.getter();
      os_log_type_t v102 = static os_log_type_t.default.getter();
      BOOL v103 = os_log_type_enabled(v101, v102);
      uint64_t v104 = *(void *)(v0 + 192);
      if (v103)
      {
        uint64_t v105 = (uint8_t *)swift_slowAlloc();
        v130[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v105 = 136315138;
        type metadata accessor for SFAirDrop.TransferIdentifier();
        sub_10000BA10(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
        uint64_t v106 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 112) = sub_100254634(v106, v107, v130);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100356AFC(v104, (uint64_t (*)(void))_s14descr1008C9841V12ErrorRequestVMa);
        _os_log_impl((void *)&_mh_execute_header, v101, v102, "Received ERROR request %s", v105, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100356AFC(*(void *)(v0 + 192), (uint64_t (*)(void))_s14descr1008C9841V12ErrorRequestVMa);
      }

      v97;
      double v119 = (void *)swift_task_alloc();
      *(void *)(v0 + 480) = v119;
      void *v119 = v0;
      v119[1] = sub_100348238;
      uint64_t v120 = *(void *)(v0 + 200);
      uint64_t v121 = *(void *)(v0 + 168);
      uint64_t result = sub_100670E60(v120, v121);
      break;
    default:
      uint64_t v16 = *(void *)(v0 + 296);
      uint64_t v17 = type metadata accessor for SFAirDropReceive.Failure();
      sub_10000BA10(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v17 - 8) + 104))(v18, enum case for SFAirDropReceive.Failure.badRequest(_:), v17);
      swift_willThrow();
      sub_100356AFC(v16, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
      if (qword_100969C38 != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      sub_10000B47C(v19, (uint64_t)qword_1009700E0);
      unint64_t v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v22 = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "Missing handler after failure", v22, 2u);
        swift_slowDealloc();
      }

      sub_1005DB2F4(0);
      swift_errorRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
      uint64_t result = v23();
      break;
  }
  return result;
}

uint64_t sub_100347490()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 344) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 304);
    id v4 = sub_1003486C8;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 304);

    id v4 = sub_1003475B8;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1003475B8()
{
  uint64_t v1 = (void *)v0[41];
  sub_100250CB0(v0[39], v0[40]);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1003476B4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 368) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void **)(v2 + 352);
  uint64_t v4 = *(void *)(v2 + 304);

  if (v0) {
    uint64_t v5 = sub_100348934;
  }
  else {
    uint64_t v5 = sub_1003477FC;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_1003477FC()
{
  uint64_t v1 = (void *)v0[44];
  sub_100356AFC(v0[35], (uint64_t (*)(void))_s12HelloRequestVMa);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_10034790C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 392) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void **)(v2 + 376);
  uint64_t v4 = *(void *)(v2 + 304);

  if (v0) {
    uint64_t v5 = sub_100348BA4;
  }
  else {
    uint64_t v5 = sub_100347A54;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_100347A54()
{
  uint64_t v1 = (void *)v0[47];
  sub_100356AFC(v0[31], (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100347B64()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 416) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void **)(v2 + 400);
  uint64_t v4 = *(void *)(v2 + 304);

  if (v0) {
    uint64_t v5 = sub_100348E14;
  }
  else {
    uint64_t v5 = sub_100347CAC;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_100347CAC()
{
  uint64_t v1 = (void *)v0[50];
  sub_100356AFC(v0[30], (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100347DBC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 440) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void **)(v2 + 424);
  uint64_t v4 = *(void *)(v2 + 304);

  if (v0) {
    uint64_t v5 = sub_100349084;
  }
  else {
    uint64_t v5 = sub_100347F04;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_100347F04()
{
  uint64_t v1 = (void *)v0[53];
  sub_100356AFC(v0[27], _s14descr1008C9A51V15ExchangeRequestVMa);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100348014()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 464) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 304);
    uint64_t v4 = sub_1003492F4;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 304);

    uint64_t v4 = sub_10034813C;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10034813C()
{
  uint64_t v1 = (void *)v0[56];
  sub_100356A14(v0 + 2);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100348238()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 488) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void **)(v2 + 472);
  uint64_t v4 = *(void *)(v2 + 304);

  if (v0) {
    uint64_t v5 = sub_10034955C;
  }
  else {
    uint64_t v5 = sub_100348380;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_100348380()
{
  uint64_t v1 = (void *)v0[59];
  sub_100356AFC(v0[25], (uint64_t (*)(void))_s14descr1008C9841V12ErrorRequestVMa);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100348490()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 304);
  swift_task_dealloc();
  swift_errorRelease();
  return _swift_task_switch(sub_1003485BC, v1, 0);
}

uint64_t sub_1003485BC()
{
  uint64_t v1 = *(void **)(v0 + 496);

  sub_1005DB2F4(0);
  swift_errorRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1003486C8()
{
  unint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 312);

  sub_100250CB0(v2, v1);
  uint64_t v3 = *(void *)(v0 + 344);
  uint64_t v4 = *(void **)(v0 + 328);
  *(void *)(v0 + 496) = v4;
  *(void *)(v0 + 504) = v3;
  uint64_t v5 = qword_100969C38;
  v4;
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_1009700E0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    BOOL v10 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v9 = 138412290;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 104) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *BOOL v10 = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Error handling message %@", v9, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_1006717EC(v3);
  swift_errorRetain();
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 512) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_100348490;
  uint64_t v13 = *(void *)(v0 + 176);
  return sub_10034C504(v13, v3);
}

uint64_t sub_100348934()
{
  sub_100356AFC(v0[35], (uint64_t (*)(void))_s12HelloRequestVMa);
  uint64_t v1 = v0[46];
  uint64_t v2 = (void *)v0[44];
  v0[62] = v2;
  v0[63] = v1;
  uint64_t v3 = qword_100969C38;
  v2;
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_1009700E0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[13] = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Error handling message %@", v7, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_1006717EC(v1);
  swift_errorRetain();
  BOOL v10 = (void *)swift_task_alloc();
  v0[64] = v10;
  *BOOL v10 = v0;
  v10[1] = sub_100348490;
  uint64_t v11 = v0[22];
  return sub_10034C504(v11, v1);
}

uint64_t sub_100348BA4()
{
  sub_100356AFC(v0[31], (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  uint64_t v1 = v0[49];
  uint64_t v2 = (void *)v0[47];
  v0[62] = v2;
  v0[63] = v1;
  uint64_t v3 = qword_100969C38;
  v2;
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_1009700E0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[13] = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Error handling message %@", v7, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_1006717EC(v1);
  swift_errorRetain();
  BOOL v10 = (void *)swift_task_alloc();
  v0[64] = v10;
  *BOOL v10 = v0;
  v10[1] = sub_100348490;
  uint64_t v11 = v0[22];
  return sub_10034C504(v11, v1);
}

uint64_t sub_100348E14()
{
  sub_100356AFC(v0[30], (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
  uint64_t v1 = v0[52];
  uint64_t v2 = (void *)v0[50];
  v0[62] = v2;
  v0[63] = v1;
  uint64_t v3 = qword_100969C38;
  v2;
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_1009700E0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[13] = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Error handling message %@", v7, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_1006717EC(v1);
  swift_errorRetain();
  BOOL v10 = (void *)swift_task_alloc();
  v0[64] = v10;
  *BOOL v10 = v0;
  v10[1] = sub_100348490;
  uint64_t v11 = v0[22];
  return sub_10034C504(v11, v1);
}

uint64_t sub_100349084()
{
  sub_100356AFC(v0[27], _s14descr1008C9A51V15ExchangeRequestVMa);
  uint64_t v1 = v0[55];
  uint64_t v2 = (void *)v0[53];
  v0[62] = v2;
  v0[63] = v1;
  uint64_t v3 = qword_100969C38;
  v2;
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_1009700E0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[13] = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Error handling message %@", v7, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_1006717EC(v1);
  swift_errorRetain();
  BOOL v10 = (void *)swift_task_alloc();
  v0[64] = v10;
  *BOOL v10 = v0;
  v10[1] = sub_100348490;
  uint64_t v11 = v0[22];
  return sub_10034C504(v11, v1);
}

uint64_t sub_1003492F4()
{
  sub_100356A14((void *)(v0 + 16));
  uint64_t v1 = *(void *)(v0 + 464);
  uint64_t v2 = *(void **)(v0 + 448);
  *(void *)(v0 + 496) = v2;
  *(void *)(v0 + 504) = v1;
  uint64_t v3 = qword_100969C38;
  v2;
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_1009700E0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 104) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Error handling message %@", v7, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_1006717EC(v1);
  swift_errorRetain();
  BOOL v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 512) = v10;
  *BOOL v10 = v0;
  v10[1] = sub_100348490;
  uint64_t v11 = *(void *)(v0 + 176);
  return sub_10034C504(v11, v1);
}

uint64_t sub_10034955C()
{
  sub_100356AFC(v0[25], (uint64_t (*)(void))_s14descr1008C9841V12ErrorRequestVMa);
  uint64_t v1 = v0[61];
  uint64_t v2 = (void *)v0[59];
  v0[62] = v2;
  v0[63] = v1;
  uint64_t v3 = qword_100969C38;
  v2;
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_1009700E0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[13] = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Error handling message %@", v7, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_1006717EC(v1);
  swift_errorRetain();
  BOOL v10 = (void *)swift_task_alloc();
  v0[64] = v10;
  *BOOL v10 = v0;
  v10[1] = sub_100348490;
  uint64_t v11 = v0[22];
  return sub_10034C504(v11, v1);
}

uint64_t sub_1003497CC(char a1, uint64_t a2)
{
  *(void *)(v3 + 160) = a2;
  *(void *)(v3 + 168) = v2;
  *(unsigned char *)(v3 + 208) = a1;
  uint64_t v4 = type metadata accessor for CodableError();
  *(void *)(v3 + 176) = v4;
  *(void *)(v3 + 184) = *(void *)(v4 - 8);
  *(void *)(v3 + 192) = swift_task_alloc();
  *(void *)(v3 + 200) = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_1003498D8, v5, 0);
}

uint64_t sub_1003498D8()
{
  if (!*(unsigned char *)(v0 + 208))
  {
    uint64_t v15 = *(void *)(v0 + 200);
    uint64_t v16 = *(void *)(v0 + 184);
    uint64_t v46 = *(void *)(v0 + 176);
    uint64_t v17 = *(void *)(v0 + 160);
    uint64_t v18 = (uint64_t *)(*(void *)(v0 + 168)
                    + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServerErrors);
    swift_beginAccess();
    uint64_t v19 = *v18;
    uint64_t v20 = type metadata accessor for NWError();
    sub_10000BA10(&qword_10096E020, (void (*)(uint64_t))&type metadata accessor for NWError);
    swift_allocError();
    os_log_type_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
    v21(v22, v17, v20);
    swift_bridgeObjectRetain();
    CodableError.init(_:)();
    LOBYTE(v17) = sub_10057BF58(v15, v19);
    swift_bridgeObjectRelease();
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v23(v15, v46);
    if (v17) {
      goto LABEL_10;
    }
    uint64_t v24 = *(char **)(v0 + 192);
    uint64_t v25 = *(void *)(v0 + 200);
    uint64_t v44 = *(void *)(v0 + 176);
    uint64_t v26 = *(void *)(v0 + 160);
    swift_allocError();
    v21(v27, v26, v20);
    CodableError.init(_:)();
    swift_beginAccess();
    sub_100596614(v25, v24);
    swift_endAccess();
    v23(v25, v44);
    uint64_t v14 = 0;
    goto LABEL_7;
  }
  if (*(unsigned char *)(v0 + 208) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 200);
    uint64_t v2 = *(void *)(v0 + 184);
    uint64_t v45 = *(void *)(v0 + 176);
    uint64_t v3 = *(void *)(v0 + 160);
    uint64_t v4 = (uint64_t *)(*(void *)(v0 + 168)
                   + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServerErrors);
    swift_beginAccess();
    uint64_t v5 = *v4;
    uint64_t v6 = type metadata accessor for NWError();
    sub_10000BA10(&qword_10096E020, (void (*)(uint64_t))&type metadata accessor for NWError);
    swift_allocError();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
    v7(v8, v3, v6);
    swift_bridgeObjectRetain();
    CodableError.init(_:)();
    LOBYTE(v3) = sub_10057BF58(v1, v5);
    swift_bridgeObjectRelease();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
    v9(v1, v45);
    if (v3) {
      goto LABEL_10;
    }
    BOOL v10 = *(char **)(v0 + 192);
    uint64_t v11 = *(void *)(v0 + 200);
    uint64_t v43 = *(void *)(v0 + 176);
    uint64_t v12 = *(void *)(v0 + 160);
    swift_allocError();
    v7(v13, v12, v6);
    CodableError.init(_:)();
    swift_beginAccess();
    sub_100596614(v11, v10);
    swift_endAccess();
    v9(v11, v43);
    uint64_t v14 = 1;
LABEL_7:
    sub_1003443F0(v14);
    goto LABEL_10;
  }
  uint64_t v28 = *(void *)(v0 + 200);
  uint64_t v29 = *(void *)(v0 + 184);
  uint64_t v47 = *(void *)(v0 + 176);
  uint64_t v30 = *(void *)(v0 + 160);
  id v31 = (uint64_t *)(*(void *)(v0 + 168)
                  + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServerErrors);
  swift_beginAccess();
  uint64_t v32 = *v31;
  uint64_t v33 = type metadata accessor for NWError();
  sub_10000BA10(&qword_10096E020, (void (*)(uint64_t))&type metadata accessor for NWError);
  swift_allocError();
  os_log_type_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16);
  v34(v35, v30, v33);
  swift_bridgeObjectRetain();
  CodableError.init(_:)();
  LOBYTE(v30) = sub_10057BF58(v28, v32);
  swift_bridgeObjectRelease();
  unint64_t v36 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  v36(v28, v47);
  if ((v30 & 1) == 0)
  {
    uint64_t v38 = *(char **)(v0 + 192);
    uint64_t v37 = *(void *)(v0 + 200);
    uint64_t v48 = *(void *)(v0 + 176);
    uint64_t v39 = *(void *)(v0 + 160);
    swift_allocError();
    v34(v40, v39, v33);
    CodableError.init(_:)();
    swift_beginAccess();
    sub_100596614(v37, v38);
    swift_endAccess();
    v36(v37, v48);
  }
LABEL_10:
  swift_task_dealloc();
  swift_task_dealloc();
  id v41 = *(uint64_t (**)(void))(v0 + 8);
  return v41();
}

void sub_100349E7C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v45 = a4;
  unint64_t v46 = a5;
  uint64_t v47 = a3;
  uint64_t v44 = a2;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v43 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v42 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v42 - v15;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17(v14, a1, v8);
  uint64_t v18 = v5 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions;
  swift_beginAccess();
  sub_100596028((uint64_t)v16, v14);
  swift_endAccess();
  uint64_t v48 = *(void (**)(char *, uint64_t))(v9 + 8);
  v48(v16, v8);
  uint64_t v19 = *(void **)(v6 + 48);
  if ([v19 screenStateSupportsAirDrop]
    && [v19 wirelessEnabled]
    && *(void *)(*(void *)v18 + 16))
  {
    uint64_t v20 = (uint64_t *)(v6
                    + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServersByTransactionID);
    swift_beginAccess();
    if (*(void *)(*v20 + 16) && (sub_100583A00(a1), (v21 & 1) != 0))
    {
      swift_endAccess();
      if (qword_100969C38 != -1) {
        swift_once();
      }
      uint64_t v22 = type metadata accessor for Logger();
      sub_10000B47C(v22, (uint64_t)qword_1009700E0);
      uint64_t v23 = v43;
      v17(v43, a1, v8);
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = v23;
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        v50[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v27 = 136315138;
        sub_10000BA10((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v49 = sub_100254634(v28, v29, v50);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v48(v26, v8);
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Near Field server already running for transaction %s", v27, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        v48(v23, v8);
      }
    }
    else
    {
      swift_endAccess();
      v17(v16, a1, v8);
      v17(v14, (uint64_t)v44, v8);
      v42[1] = objc_allocWithZone((Class)type metadata accessor for SDAirDropNearFieldServer());
      uint64_t v34 = v47;
      swift_unknownObjectRetain();
      uint64_t v43 = (char *)a1;
      uint64_t v44 = v20;
      uint64_t v35 = v45;
      unint64_t v36 = v46;
      sub_10025ADCC(v45, v46);
      uint64_t v37 = swift_retain();
      id v38 = sub_10050ED50(v37, (uint64_t)&off_1008D7630, (uint64_t)v16, (uint64_t)v14, v34, v35, v36);
      sub_100250CC4(v35, v36);
      swift_release();
      swift_unknownObjectRelease();
      v17(v16, (uint64_t)v43, v8);
      uint64_t v39 = v44;
      swift_beginAccess();
      id v40 = v38;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v49 = *v39;
      *uint64_t v39 = 0x8000000000000000;
      sub_100356660((uint64_t)v40, (uint64_t)v16, isUniquelyReferenced_nonNull_native, &v49);
      *uint64_t v39 = v49;
      swift_bridgeObjectRelease();
      v48(v16, v8);
      swift_endAccess();
      sub_10050C0A8();
    }
  }
  else
  {
    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_10000B47C(v30, (uint64_t)qword_1009700E0);
    id v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Ignoring Near Field Server Start", v33, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_10034A458(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t *)(v1
                  + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServersByTransactionID);
  swift_beginAccess();
  uint64_t v12 = *v11;
  if (*(void *)(*v11 + 16) && (unint64_t v13 = sub_100583A00(a1), (v14 & 1) != 0))
  {
    uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 16 * v13 + 8);
    swift_endAccess();
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1005A1618(a1, (uint64_t)v10);
    swift_endAccess();
    sub_10000A7E8((uint64_t)v10, &qword_100974EA0);
    uint64_t v16 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers;
    swift_beginAccess();
    if (*(void *)(*(void *)v16 + 16))
    {
      if (qword_100969C38 != -1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for Logger();
      sub_10000B47C(v17, (uint64_t)qword_1009700E0);
      uint64_t v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v20 = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "Near Field server has active connections, not stopping", v20, 2u);
        swift_slowDealloc();
        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v15 + 64))(ObjectType, v15);
      swift_beginAccess();
      sub_1002A8614(a1);
      swift_endAccess();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_10000B47C(v21, (uint64_t)qword_1009700E0);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      v29[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136315138;
      sub_10000BA10((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
      v28[0] = sub_100254634(v25, v26, v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Near Field server does not exist for transaction %s", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
}

void sub_10034A930(char a1, char a2)
{
  int64_t v3 = v2;
  LOBYTE(v4) = a2;
  LOBYTE(v5) = a1;
  uint64_t v6 = sub_10000A844(&qword_100970350);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v62 - v10;
  if (!(_BYTE)v5)
  {
    uint64_t v12 = &OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer;
LABEL_5:
    unint64_t v13 = (void *)(v2 + *v12);
    if (*v13)
    {
      uint64_t v11 = (char *)v13[1];
      uint64_t v14 = qword_100969C38;
      swift_unknownObjectRetain();
      if (v14 != -1) {
        goto LABEL_79;
      }
      goto LABEL_7;
    }
    return;
  }
  if (v5 == 1)
  {
    uint64_t v12 = &OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer;
    goto LABEL_5;
  }
  if (qword_100969C38 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for Logger();
  sub_10000B47C(v23, (uint64_t)qword_1009700E0);
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    v70[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136315394;
    v69[0] = sub_100254634(0x656946207261654ELL, 0xEA0000000000646CLL, v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 1024;
    LODWORD(v69[0]) = v4 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Attempting Stop AirDrop %s - forced: %{BOOL}d", (uint8_t *)v26, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if ((v4 & 1) == 0)
  {
    int64_t v48 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers;
    swift_beginAccess();
    if (*(void *)(*(void *)v48 + 16))
    {
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v50 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v49, v50)) {
        goto LABEL_76;
      }
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      v69[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v51 = 136315138;
      v68[0] = sub_100254634(0x656946207261654ELL, 0xEA0000000000646CLL, v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      id v52 = "%s Connections Present - Stop Ignored";
    }
    else
    {
      int64_t v61 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions;
      swift_beginAccess();
      if (!*(void *)(*(void *)v61 + 16)) {
        goto LABEL_23;
      }
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v50 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v49, v50)) {
        goto LABEL_76;
      }
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      v68[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v51 = 136315138;
      uint64_t v67 = sub_100254634(0x656946207261654ELL, 0xEA0000000000646CLL, v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      id v52 = "%s Transactions Present - Stop Ignored";
    }
    _os_log_impl((void *)&_mh_execute_header, v49, v50, v52, v51, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    goto LABEL_76;
  }
LABEL_23:
  int64_t v64 = v2;
  uint64_t v27 = (void *)(v2
                 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServersByTransactionID);
  swift_beginAccess();
  uint64_t v5 = *v27;
  uint64_t v28 = *(void *)(*v27 + 64);
  uint64_t v65 = *v27 + 64;
  uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v30 = -1;
  if (v29 < 64) {
    uint64_t v30 = ~(-1 << v29);
  }
  unint64_t v31 = v30 & v28;
  int64_t v3 = (unint64_t)(v29 + 63) >> 6;
  int64_t v62 = v3 - 1;
  uint64_t v63 = v27;
  swift_bridgeObjectRetain();
  int64_t v4 = 0;
  if (!v31) {
    goto LABEL_30;
  }
LABEL_28:
  unint64_t v35 = __clz(__rbit64(v31));
  v31 &= v31 - 1;
  unint64_t v36 = v35 | (v4 << 6);
LABEL_29:
  uint64_t v37 = *(void *)(v5 + 48);
  uint64_t v38 = type metadata accessor for UUID();
  (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v9, v37 + *(void *)(*(void *)(v38 - 8) + 72) * v36, v38);
  uint64_t v39 = *(void *)(v5 + 56);
  uint64_t v40 = sub_10000A844(&qword_100970358);
  uint64_t v41 = *(int *)(v40 + 48);
  long long v66 = *(_OWORD *)(v39 + 16 * v36);
  *(_OWORD *)&v9[v41] = v66;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v9, 0, 1, v40);
  swift_unknownObjectRetain();
  while (1)
  {
    sub_10024D388((uint64_t)v9, (uint64_t)v11, &qword_100970350);
    uint64_t v46 = sub_10000A844(&qword_100970358);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 48))(v11, 1, v46) == 1)
    {
      swift_release();
      *uint64_t v63 = &_swiftEmptyDictionarySingleton;
      swift_bridgeObjectRelease();
      uint64_t v47 = (void *)(v64 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions);
      swift_beginAccess();
      *uint64_t v47 = &_swiftEmptySetSingleton;
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v32 = *(void *)&v11[*(int *)(v46 + 48) + 8];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v32 + 64))(ObjectType, v32);
    swift_unknownObjectRelease();
    uint64_t v34 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8))(v11, v34);
    if (v31) {
      goto LABEL_28;
    }
LABEL_30:
    int64_t v42 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v42 < v3)
    {
      unint64_t v43 = *(void *)(v65 + 8 * v42);
      if (v43) {
        goto LABEL_33;
      }
      int64_t v44 = v4 + 2;
      ++v4;
      if (v42 + 1 < v3)
      {
        unint64_t v43 = *(void *)(v65 + 8 * v44);
        if (v43) {
          goto LABEL_36;
        }
        int64_t v4 = v42 + 1;
        if (v42 + 2 < v3)
        {
          unint64_t v43 = *(void *)(v65 + 8 * (v42 + 2));
          if (v43)
          {
            v42 += 2;
            goto LABEL_33;
          }
          int64_t v44 = v42 + 3;
          int64_t v4 = v42 + 2;
          if (v42 + 3 < v3)
          {
            unint64_t v43 = *(void *)(v65 + 8 * v44);
            if (!v43)
            {
              while (1)
              {
                int64_t v42 = v44 + 1;
                if (__OFADD__(v44, 1)) {
                  break;
                }
                if (v42 >= v3)
                {
                  int64_t v4 = v62;
                  goto LABEL_47;
                }
                unint64_t v43 = *(void *)(v65 + 8 * v42);
                ++v44;
                if (v43) {
                  goto LABEL_33;
                }
              }
              __break(1u);
              return;
            }
LABEL_36:
            int64_t v42 = v44;
LABEL_33:
            unint64_t v31 = (v43 - 1) & v43;
            unint64_t v36 = __clz(__rbit64(v43)) + (v42 << 6);
            int64_t v4 = v42;
            goto LABEL_29;
          }
        }
      }
    }
LABEL_47:
    uint64_t v45 = sub_10000A844(&qword_100970358);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v9, 1, 1, v45);
    unint64_t v31 = 0;
  }
  __break(1u);
LABEL_79:
  swift_once();
LABEL_7:
  uint64_t v15 = type metadata accessor for Logger();
  *(void *)&long long v66 = sub_10000B47C(v15, (uint64_t)qword_1009700E0);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    int64_t v64 = v3;
    v70[0] = v19;
    *(_DWORD *)uint64_t v18 = 136315394;
    if ((_BYTE)v5) {
      uint64_t v20 = 0x2072756F6A6E6F42;
    }
    else {
      uint64_t v20 = 0xD00000000000001ALL;
    }
    if ((_BYTE)v5) {
      unint64_t v21 = 0xEE00726576726553;
    }
    else {
      unint64_t v21 = 0x80000001007BA550;
    }
    v69[0] = sub_100254634(v20, v21, v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 1024;
    LODWORD(v69[0]) = v4 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Attempting Stop AirDrop %s - forced: %{BOOL}d", (uint8_t *)v18, 0x12u);
    swift_arrayDestroy();
    int64_t v3 = v64;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if ((v4 & 1) != 0
    || (!(_BYTE)v5
      ? (uint64_t v22 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers)
      : (uint64_t v22 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourReceiveHandlers),
        int64_t v53 = v3 + v22,
        swift_beginAccess(),
        !*(void *)(*(void *)v53 + 16)))
  {
    uint64_t v58 = swift_getObjectType();
    (*((void (**)(uint64_t, char *))v11 + 8))(v58, v11);
    swift_unknownObjectRelease();
    if ((_BYTE)v5)
    {
      if (v5 != 1) {
        return;
      }
      uint64_t v59 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer;
    }
    else
    {
      uint64_t v59 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer;
    }
    uint64_t v60 = (void *)(v3 + v59);
    *uint64_t v60 = 0;
    v60[1] = 0;
LABEL_69:
    swift_unknownObjectRelease();
    return;
  }
  uint64_t v49 = Logger.logObject.getter();
  os_log_type_t v54 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v49, v54))
  {

    goto LABEL_69;
  }
  uint64_t v55 = (uint8_t *)swift_slowAlloc();
  v69[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v55 = 136315138;
  if ((_BYTE)v5)
  {
    if (v5 == 1) {
      uint64_t v56 = 0x2072756F6A6E6F42;
    }
    else {
      uint64_t v56 = 0x656946207261654ELL;
    }
    if (v5 == 1) {
      unint64_t v57 = 0xEE00726576726553;
    }
    else {
      unint64_t v57 = 0xEA0000000000646CLL;
    }
  }
  else
  {
    uint64_t v56 = 0xD00000000000001ALL;
    unint64_t v57 = 0x80000001007BA550;
  }
  v68[0] = sub_100254634(v56, v57, v69);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v49, v54, "%s Connections Present - Stop Ignored", v55, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
  swift_unknownObjectRelease();
LABEL_76:
}

uint64_t sub_10034B4F0(uint64_t result)
{
  char v2 = result;
  if ((_BYTE)result)
  {
    if (result != 1) {
      return result;
    }
    int64_t v3 = &OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer;
  }
  else
  {
    int64_t v3 = &OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer;
  }
  int64_t v4 = (void *)(v1 + *v3);
  if (*v4)
  {
    uint64_t v5 = v4[1];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 48);
    swift_unknownObjectRetain();
    if (v7(ObjectType, v5))
    {
      if (qword_100969C38 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      sub_10000B47C(v8, (uint64_t)qword_1009700E0);
      uint64_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        *(_DWORD *)uint64_t v11 = 136315138;
        uint64_t v16 = v15;
        if (v2) {
          uint64_t v12 = 0x2072756F6A6E6F42;
        }
        else {
          uint64_t v12 = 0xD00000000000001ALL;
        }
        if (v2) {
          unint64_t v13 = 0xEE00726576726553;
        }
        else {
          unint64_t v13 = 0x80000001007BA550;
        }
        sub_100254634(v12, v13, &v16);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "AirDrop %s is down, force stopping", v11, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      char v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 40))(ObjectType, v5);
      sub_10034A930(v14, 1);
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_10034B790()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SFPlatform();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v0 + 48);
  if ([v6 screenStateSupportsAirDrop]
    && [v6 discoverableLevel]
    && [v6 wirelessEnabled]
    && ([v6 bluetoothEnabledIncludingRestricted] & 1) != 0)
  {
    uint64_t v7 = (char *)_swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = sub_100253DB4(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v9 = *((void *)v7 + 2);
    unint64_t v8 = *((void *)v7 + 3);
    if (v9 >= v8 >> 1) {
      uint64_t v7 = sub_100253DB4((char *)(v8 > 1), v9 + 1, 1, v7);
    }
    *((void *)v7 + 2) = v9 + 1;
    v7[v9 + 32] = 0;
  }
  if (![v6 screenStateSupportsAirDrop]
    || ![v6 discoverableLevel]
    || ![v6 wirelessEnabled]
    || ([v6 bluetoothEnabledIncludingRestricted] & 1) == 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v7 = sub_100253DB4(0, *((void *)v7 + 2) + 1, 1, v7);
    }
    unint64_t v11 = *((void *)v7 + 2);
    unint64_t v10 = *((void *)v7 + 3);
    if (v11 >= v10 >> 1) {
      uint64_t v7 = sub_100253DB4((char *)(v10 > 1), v11 + 1, 1, v7);
    }
    *((void *)v7 + 2) = v11 + 1;
    v7[v11 + 32] = 1;
  }
  if ([v6 screenStateSupportsAirDrop]
    && ([v6 wirelessEnabled] & 1) != 0)
  {
    if (!*((void *)v7 + 2))
    {
      swift_bridgeObjectRelease();
      static SFPlatform.watchOS.getter();
      char v12 = static SFPlatform.isPlatform(_:)();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      if ((v12 & 1) == 0)
      {
        uint64_t v13 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleScannerID;
        swift_retain();
        sub_1005DD670(v13, (uint64_t)sub_100357CD4, v1);
        swift_release();
      }
      sub_1003443F0(0);
      return;
    }
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v7 = sub_100253DB4(0, *((void *)v7 + 2) + 1, 1, v7);
    }
    unint64_t v15 = *((void *)v7 + 2);
    unint64_t v14 = *((void *)v7 + 3);
    if (v15 >= v14 >> 1) {
      uint64_t v7 = sub_100253DB4((char *)(v14 > 1), v15 + 1, 1, v7);
    }
    *((void *)v7 + 2) = v15 + 1;
    v7[v15 + 32] = 2;
  }
  if (sub_1003619EC(1, (uint64_t)v7)) {
    sub_10034A930(1, 0);
  }
  if (sub_1003619EC(0, (uint64_t)v7)) {
    sub_10034A930(0, 0);
  }
  if (sub_1003619EC(2, (uint64_t)v7)) {
    sub_10034A930(2, 0);
  }
  swift_bridgeObjectRelease();
  static SFPlatform.watchOS.getter();
  char v16 = static SFPlatform.isPlatform(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v16 & 1) == 0)
  {
    sub_1005DD698(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleScannerID);
    os_log_type_t v17 = (void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes);
    swift_beginAccess();
    *os_log_type_t v17 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10034BBBC(void *a1, char a2)
{
  uint64_t v4 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = qword_100969B90;
  swift_retain();
  id v10 = a1;
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v11 = static AirDropActor.shared;
  uint64_t v12 = sub_10000BA10((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  *(void *)(v13 + 24) = v12;
  *(void *)(v13 + 32) = v8;
  *(void *)(v13 + 40) = v10;
  *(unsigned char *)(v13 + 48) = a2 & 1;
  swift_retain();
  swift_release();
  sub_10028CFD4((uint64_t)v6, (uint64_t)&unk_1009703E0, v13);
  return swift_release();
}

uint64_t sub_10034BD8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 64) = a6;
  *(void *)(v6 + 48) = a4;
  *(void *)(v6 + 56) = a5;
  *(void *)(v6 + 40) = a1;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  return _swift_task_switch(sub_10034BE30, v7, 0);
}

uint64_t sub_10034BE30()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_10034BED8(*(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
    swift_release();
  }
  **(unsigned char **)(v0 + 40) = Strong == 0;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_10034BED8(uint64_t a1, char a2)
{
  uint64_t v3 = sub_100556CC4();
  uint64_t v5 = v3;
  unint64_t v6 = v4;
  switch(v4 >> 62)
  {
    case 1uLL:
      if ((int)v3 != v3 >> 32) {
        goto LABEL_3;
      }
      goto LABEL_11;
    case 2uLL:
      if (*(void *)(v3 + 16) == *(void *)(v3 + 24)) {
        goto LABEL_11;
      }
      goto LABEL_3;
    case 3uLL:
      goto LABEL_11;
    default:
      if ((v4 & 0xFF000000000000) != 0)
      {
LABEL_3:
        if (a2)
        {
          if (qword_100969C38 != -1) {
            swift_once();
          }
          uint64_t v7 = type metadata accessor for Logger();
          sub_10000B47C(v7, (uint64_t)qword_1009700E0);
          sub_10025ADCC(v5, v6);
          sub_10025ADCC(v5, v6);
          uint64_t v8 = Logger.logObject.getter();
          os_log_type_t v9 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v8, v9))
          {
            id v10 = (uint8_t *)swift_slowAlloc();
            v25[0] = swift_slowAlloc();
            *(_DWORD *)id v10 = 136380675;
            *(void *)&long long v26 = sub_10045E0B4(v5, v6);
            sub_10000A844((uint64_t *)&unk_100974C30);
            sub_1002FE630();
            uint64_t v11 = BidirectionalCollection<>.joined(separator:)();
            unint64_t v13 = v12;
            swift_bridgeObjectRelease();
            *(void *)&long long v26 = sub_100254634(v11, v13, v25);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_100250CC4(v5, v6);
            sub_100250CC4(v5, v6);
            _os_log_impl((void *)&_mh_execute_header, v8, v9, "Found BLE device - %{private}s", v10, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            sub_100250CC4(v5, v6);
            sub_100250CC4(v5, v6);
          }

          if (sub_100353488()) {
            sub_1003443F0(1);
          }
        }
        else
        {
          if (qword_100969C38 != -1) {
            swift_once();
          }
          uint64_t v17 = type metadata accessor for Logger();
          sub_10000B47C(v17, (uint64_t)qword_1009700E0);
          sub_10025ADCC(v5, v6);
          sub_10025ADCC(v5, v6);
          uint64_t v18 = Logger.logObject.getter();
          os_log_type_t v19 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v18, v19))
          {
            uint64_t v20 = (uint8_t *)swift_slowAlloc();
            v25[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v20 = 136380675;
            *(void *)&long long v26 = sub_10045E0B4(v5, v6);
            sub_10000A844((uint64_t *)&unk_100974C30);
            sub_1002FE630();
            uint64_t v21 = BidirectionalCollection<>.joined(separator:)();
            unint64_t v23 = v22;
            swift_bridgeObjectRelease();
            *(void *)&long long v26 = sub_100254634(v21, v23, v25);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_100250CC4(v5, v6);
            sub_100250CC4(v5, v6);
            _os_log_impl((void *)&_mh_execute_header, v18, v19, "Lost BLE device - %{private}s", v20, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            sub_100250CC4(v5, v6);
            sub_100250CC4(v5, v6);
          }

          swift_beginAccess();
          sub_1005A1AA4(v5, v6, &v26);
          swift_endAccess();
          sub_100250CB0(v26, *((unint64_t *)&v26 + 1));
          sub_100350978(1);
        }
        sub_100250CC4(v5, v6);
      }
      else
      {
LABEL_11:
        if (qword_100969C38 != -1) {
          swift_once();
        }
        uint64_t v14 = type metadata accessor for Logger();
        sub_10000B47C(v14, (uint64_t)qword_1009700E0);
        osos_log_t log = Logger.logObject.getter();
        os_log_type_t v15 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(oslog, v15))
        {
          char v16 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)char v16 = 0;
          _os_log_impl((void *)&_mh_execute_header, oslog, v15, "Empty AirDrop hashses in advertisement, ignoring", v16, 2u);
          swift_slowDealloc();

          sub_100250CC4(v5, v6);
        }
        else
        {
          sub_100250CC4(v5, v6);
        }
      }
      return;
  }
}

uint64_t sub_10034C504(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  type metadata accessor for SDAirDropServerConnectionIdentity(0);
  v3[6] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  v3[7] = static AirDropActor.shared;
  return _swift_task_switch(sub_10034C5D4, v4, 0);
}

uint64_t sub_10034C5D4()
{
  char v16 = v0;
  if (qword_100969C38 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[6];
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000B47C(v3, (uint64_t)qword_1009700E0);
  sub_100356A94(v1, v2, type metadata accessor for SDAirDropServerConnectionIdentity);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[6];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    unint64_t v9 = sub_1005DB064();
    v0[2] = sub_100254634(v9, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100356AFC(v7, type metadata accessor for SDAirDropServerConnectionIdentity);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Tearing down handler for server %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100356AFC(v0[6], type metadata accessor for SDAirDropServerConnectionIdentity);
  }

  uint64_t v11 = (void *)swift_task_alloc();
  v0[8] = v11;
  void *v11 = v0;
  v11[1] = sub_10034C83C;
  uint64_t v12 = v0[4];
  uint64_t v13 = v0[3];
  return sub_10034C9B8(v13, v12);
}

uint64_t sub_10034C83C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  return _swift_task_switch(sub_10034C94C, v1, 0);
}

uint64_t sub_10034C94C()
{
  sub_10034E134(*(void *)(v0 + 24));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10034C9B8(uint64_t a1, uint64_t a2)
{
  v3[32] = a2;
  v3[33] = v2;
  v3[31] = a1;
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v3[34] = v4;
  v3[35] = *(void *)(v4 - 8);
  v3[36] = swift_task_alloc();
  v3[37] = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  v3[40] = swift_task_alloc();
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  v3[43] = static AirDropActor.shared;
  return _swift_task_switch(sub_10034CB1C, v5, 0);
}

uint64_t sub_10034CB1C()
{
  uint64_t v78 = v0;
  sub_100356A94(v0[31], v0[42], type metadata accessor for SDAirDropServerConnectionIdentity);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = v0[33];
    (*(void (**)(void, void, void))(v0[35] + 32))(v0[36], v0[42], v0[34]);
    uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers;
    v0[50] = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers;
    uint64_t v3 = (uint64_t *)(v1 + v2);
    swift_beginAccess();
    uint64_t v4 = *v3;
    if (*(void *)(v4 + 16))
    {
      unint64_t v5 = sub_10058392C(v0[36]);
      if (v6)
      {
        uint64_t v7 = *(void **)(*(void *)(v4 + 56) + 8 * v5);
        v0[51] = v7;
        swift_endAccess();
        v7;
        uint64_t v8 = (void *)swift_task_alloc();
        v0[52] = v8;
        *uint64_t v8 = v0;
        unint64_t v9 = sub_10034DCA4;
LABEL_9:
        v8[1] = v9;
        uint64_t v20 = v0[32];
        return sub_100672230(v20);
      }
    }
    swift_endAccess();
    uint64_t v22 = v0[36];
    swift_beginAccess();
    unint64_t v23 = (void *)sub_1002A83CC(v22);
    swift_endAccess();

    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v24 = v0[38];
    uint64_t v25 = v0[31];
    uint64_t v26 = type metadata accessor for Logger();
    sub_10000B47C(v26, (uint64_t)qword_1009700E0);
    sub_100356A94(v25, v24, type metadata accessor for SDAirDropServerConnectionIdentity);
    swift_retain_n();
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = v0[38];
      uint64_t v72 = v0[50];
      uint64_t v73 = v0[35];
      uint64_t v30 = v0[33];
      uint64_t v74 = v0[34];
      os_log_t loga = (os_log_t)v0[36];
      uint64_t v31 = swift_slowAlloc();
      v77[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136315394;
      unint64_t v32 = sub_1005DB064();
      v0[28] = sub_100254634(v32, v33, v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100356AFC(v29, type metadata accessor for SDAirDropServerConnectionIdentity);
      *(_WORD *)(v31 + 12) = 2048;
      uint64_t v34 = *(void *)(*(void *)(v30 + v72) + 16);
      swift_release();
      v0[23] = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Removed handler for quic connection %s count: %ld", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(os_log_t, uint64_t))(v73 + 8))(loga, v74);
    }
    else
    {
      uint64_t v54 = v0[38];
      uint64_t v56 = v0[35];
      uint64_t v55 = v0[36];
      uint64_t v57 = v0[34];
      swift_release_n();

      sub_100356AFC(v54, type metadata accessor for SDAirDropServerConnectionIdentity);
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
    }
    goto LABEL_32;
  }
  uint64_t v10 = v0[33];
  uint64_t v11 = *(void *)v0[42];
  uint64_t v12 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourReceiveHandlers;
  v0[44] = v11;
  v0[45] = v12;
  uint64_t v13 = v10 + v12;
  swift_beginAccess();
  *(void *)(swift_task_alloc() + 16) = v11;
  uint64_t v14 = swift_bridgeObjectRetain();
  unint64_t v15 = sub_1003568D4(v14, (uint64_t (*)(uint64_t, id))sub_10035836C);
  char v17 = v16;
  swift_bridgeObjectRelease();
  v0[46] = v15;
  swift_task_dealloc();
  if ((v17 & 1) == 0)
  {
    if ((v15 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v15 < *(void *)(*(void *)v13 + 16))
    {
      uint64_t v18 = *(void *)v13 + 16 * v15;
      v0[47] = *(void *)(v18 + 32);
      os_log_type_t v19 = *(void **)(v18 + 40);
      v0[48] = v19;
      swift_unknownObjectRetain();
      v19;
      uint64_t v8 = (void *)swift_task_alloc();
      v0[49] = v8;
      *uint64_t v8 = v0;
      unint64_t v9 = sub_10034D6B4;
      goto LABEL_9;
    }
    __break(1u);
LABEL_40:
    swift_once();
LABEL_24:
    uint64_t v58 = v0[39];
    uint64_t v59 = v0[31];
    uint64_t v60 = type metadata accessor for Logger();
    sub_10000B47C(v60, (uint64_t)qword_1009700E0);
    sub_100356A94(v59, v58, type metadata accessor for SDAirDropServerConnectionIdentity);
    int64_t v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.default.getter();
    BOOL v63 = os_log_type_enabled(v61, v62);
    uint64_t v64 = v0[39];
    if (v63)
    {
      uint64_t v65 = (uint8_t *)swift_slowAlloc();
      v77[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v65 = 136315138;
      unint64_t v66 = sub_1005DB064();
      v0[20] = sub_100254634(v66, v67, v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100356AFC(v64, type metadata accessor for SDAirDropServerConnectionIdentity);
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "Unable to remove matching handler for connection %s, likely already removed", v65, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
      sub_100356AFC(v64, type metadata accessor for SDAirDropServerConnectionIdentity);
    }
LABEL_32:
    sub_10034E134(v0[31]);
    goto LABEL_33;
  }
  uint64_t v35 = v0[33] + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourDiscoveryHandlers;
  swift_beginAccess();
  *(void *)(swift_task_alloc() + 16) = v11;
  uint64_t v36 = swift_bridgeObjectRetain();
  int64_t v37 = sub_1003568D4(v36, (uint64_t (*)(uint64_t, id))sub_100356BA0);
  char v39 = v38;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v39)
  {
    if (qword_100969C38 == -1) {
      goto LABEL_24;
    }
    goto LABEL_40;
  }
  if (v37 >= *(void *)(*(void *)v35 + 16))
  {
    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v68 = type metadata accessor for Logger();
    sub_10000B47C(v68, (uint64_t)qword_1009700E0);
    swift_retain();
    int64_t v53 = Logger.logObject.getter();
    os_log_type_t v69 = static os_log_type_t.fault.getter();
    if (!os_log_type_enabled(v53, v69))
    {
      swift_unknownObjectRelease();
      swift_release();

      goto LABEL_33;
    }
    uint64_t v70 = swift_slowAlloc();
    *(_DWORD *)uint64_t v70 = 134218240;
    v0[21] = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v70 + 12) = 2048;
    v0[22] = *(void *)(*(void *)v35 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v53, v69, "Attempting to remove at index %ld but only have %ld handlers", (uint8_t *)v70, 0x16u);
  }
  else
  {
    swift_beginAccess();
    sub_1002A6AC4(v37);
    uint64_t v41 = v40;
    swift_endAccess();
    swift_unknownObjectRelease();

    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v42 = v0[40];
    uint64_t v43 = v0[31];
    uint64_t v44 = type metadata accessor for Logger();
    sub_10000B47C(v44, (uint64_t)qword_1009700E0);
    sub_100356A94(v43, v42, type metadata accessor for SDAirDropServerConnectionIdentity);
    swift_retain_n();
    uint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.default.getter();
    os_log_t log = v45;
    BOOL v47 = os_log_type_enabled(v45, v46);
    uint64_t v48 = v0[40];
    if (!v47)
    {
      swift_release();
      swift_unknownObjectRelease();
      sub_100356AFC(v48, type metadata accessor for SDAirDropServerConnectionIdentity);
      swift_release();

      goto LABEL_33;
    }
    uint64_t v49 = swift_slowAlloc();
    v77[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v49 = 136315394;
    unint64_t v50 = sub_1005DB064();
    v0[24] = sub_100254634(v50, v51, v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100356AFC(v48, type metadata accessor for SDAirDropServerConnectionIdentity);
    *(_WORD *)(v49 + 12) = 2048;
    uint64_t v52 = *(void *)(*(void *)v35 + 16);
    swift_release();
    v0[25] = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    int64_t v53 = log;
    _os_log_impl((void *)&_mh_execute_header, log, v46, "Removed handler for bonjour connection %s count: %ld", (uint8_t *)v49, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
  }
  swift_slowDealloc();
  swift_unknownObjectRelease();

LABEL_33:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v71 = (uint64_t (*)(void))v0[1];
  return v71();
}

uint64_t sub_10034D6B4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 344);
  swift_task_dealloc();
  return _swift_task_switch(sub_10034D7C4, v1, 0);
}

uint64_t sub_10034D7C4()
{
  unint64_t v32 = v0;
  unint64_t v1 = v0[46];
  if (v1 >= *(void *)(*(void *)(v0[33] + v0[45]) + 16))
  {
    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_10000B47C(v17, (uint64_t)qword_1009700E0);
    swift_retain();
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.fault.getter();
    BOOL v20 = os_log_type_enabled(v18, v19);
    uint64_t v21 = (void *)v0[48];
    if (v20)
    {
      uint64_t v30 = (void *)v0[48];
      uint64_t v23 = v0[45];
      uint64_t v22 = v0[46];
      uint64_t v24 = v0[33];
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 134218240;
      v0[26] = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v25 + 12) = 2048;
      v0[27] = *(void *)(*(void *)(v24 + v23) + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Attempting to remove at index %ld but only have %ld handlers", (uint8_t *)v25, 0x16u);
      swift_slowDealloc();
      swift_unknownObjectRelease();

      goto LABEL_10;
    }
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_beginAccess();
    sub_1002A6AC4(v1);
    uint64_t v3 = v2;
    swift_endAccess();
    swift_unknownObjectRelease();

    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v4 = v0[31];
    uint64_t v5 = v0[41];
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_1009700E0);
    sub_100356A94(v4, v5, type metadata accessor for SDAirDropServerConnectionIdentity);
    swift_retain_n();
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = (void *)v0[48];
    if (v9)
    {
      uint64_t v29 = v0[45];
      uint64_t v30 = (void *)v0[48];
      uint64_t v11 = v0[41];
      uint64_t v12 = v0[33];
      uint64_t v13 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315394;
      unint64_t v14 = sub_1005DB064();
      v0[29] = sub_100254634(v14, v15, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100356AFC(v11, type metadata accessor for SDAirDropServerConnectionIdentity);
      *(_WORD *)(v13 + 12) = 2048;
      uint64_t v16 = *(void *)(*(void *)(v12 + v29) + 16);
      swift_release();
      v0[30] = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Removed handler for bonjour connection %s count: %ld", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_unknownObjectRelease();

LABEL_10:
      swift_unknownObjectRelease();

      goto LABEL_13;
    }
    uint64_t v26 = v0[41];
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    sub_100356AFC(v26, type metadata accessor for SDAirDropServerConnectionIdentity);
    swift_release();
  }
LABEL_13:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = (uint64_t (*)(void))v0[1];
  return v27();
}

uint64_t sub_10034DCA4()
{
  unint64_t v1 = *(void **)(*(void *)v0 + 408);
  uint64_t v2 = *(void *)(*(void *)v0 + 344);
  swift_task_dealloc();

  return _swift_task_switch(sub_10034DDCC, v2, 0);
}

uint64_t sub_10034DDCC()
{
  uint64_t v27 = v0;
  unint64_t v1 = (void *)v0[51];
  uint64_t v2 = v0[36];
  swift_beginAccess();
  uint64_t v3 = (void *)sub_1002A83CC(v2);
  swift_endAccess();

  if (qword_100969C38 != -1) {
    swift_once();
  }
  uint64_t v4 = v0[38];
  uint64_t v5 = v0[31];
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_1009700E0);
  sub_100356A94(v5, v4, type metadata accessor for SDAirDropServerConnectionIdentity);
  swift_retain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v21 = v0[50];
    uint64_t v9 = v0[38];
    uint64_t v23 = v0[35];
    uint64_t v10 = v0[33];
    uint64_t v24 = v0[34];
    uint64_t v25 = v0[36];
    uint64_t v22 = v1;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    unint64_t v12 = sub_1005DB064();
    v0[28] = sub_100254634(v12, v13, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100356AFC(v9, type metadata accessor for SDAirDropServerConnectionIdentity);
    *(_WORD *)(v11 + 12) = 2048;
    uint64_t v14 = *(void *)(*(void *)(v10 + v21) + 16);
    swift_release();
    v0[23] = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Removed handler for quic connection %s count: %ld", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v24);
  }
  else
  {
    uint64_t v15 = v0[38];
    uint64_t v17 = v0[35];
    uint64_t v16 = v0[36];
    uint64_t v18 = v0[34];
    swift_release_n();

    sub_100356AFC(v15, type metadata accessor for SDAirDropServerConnectionIdentity);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  sub_10034E134(v0[31]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

void sub_10034E134(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SFPlatform();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100356A94(a1, (uint64_t)v9, type metadata accessor for SDAirDropServerConnectionIdentity);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = *(void **)(v1 + 48);
    if (![v10 screenStateSupportsAirDrop]
      || ![v10 discoverableLevel]
      || ([v10 wirelessEnabled] & 1) == 0
      || ![v10 bluetoothEnabledIncludingRestricted]
      || (static SFPlatform.watchOS.getter(),
          char v11 = static SFPlatform.isPlatform(_:)(),
          (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3),
          (v11 & 1) != 0))
    {
      sub_10034A930(0, 0);
    }
    if (([v10 screenStateSupportsAirDrop] & 1) == 0
      || ![v10 wirelessEnabled]
      || (uint64_t v12 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions,
          swift_beginAccess(),
          !*(void *)(*(void *)v12 + 16)))
    {
      sub_10034A930(2, 0);
    }
    uint64_t v13 = type metadata accessor for SFAirDrop.TransferIdentifier();
    (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v9, v13);
  }
  else
  {
    swift_unknownObjectRelease();
    sub_100350978(1);
  }
}

uint64_t sub_10034E3A4(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropReceive.Transfer();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SFAirDropReceive.Transfer.State();
  v2[11] = v5;
  v2[12] = *(void *)(v5 - 8);
  v2[13] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Failure();
  v2[14] = v6;
  v2[15] = *(void *)(v6 - 8);
  v2[16] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  v2[17] = static AirDropActor.shared;
  return _swift_task_switch(sub_10034E5B4, v7, 0);
}

uint64_t sub_10034E5B4()
{
  uint64_t v40 = v0;
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  SFAirDropReceive.Transfer.state.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3) == enum case for SFAirDropReceive.Transfer.State.transferFailed(_:))
  {
    uint64_t v5 = v0[15];
    uint64_t v4 = v0[16];
    uint64_t v7 = v0[13];
    uint64_t v6 = v0[14];
    (*(void (**)(uint64_t, void))(v0[12] + 96))(v7, v0[11]);
    uint64_t v8 = sub_10000A844(&qword_100970340);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v4, v7 + *(int *)(v8 + 48), v6);
    uint64_t v9 = type metadata accessor for SFAirDropReceive.Transfer.Metrics();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v11 = v0[9];
    uint64_t v10 = v0[10];
    uint64_t v12 = v0[8];
    uint64_t v13 = v0[3];
    uint64_t v14 = type metadata accessor for Logger();
    sub_10000B47C(v14, (uint64_t)qword_1009700E0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v13, v12);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    BOOL v17 = os_log_type_enabled(v15, v16);
    uint64_t v19 = v0[9];
    uint64_t v18 = v0[10];
    if (v17)
    {
      uint64_t v36 = v0[8];
      os_log_type_t type = v16;
      uint64_t v20 = v0[6];
      uint64_t v21 = v0[7];
      uint64_t v22 = v0[5];
      os_log_t log = v15;
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      SFAirDropReceive.Transfer.id.getter();
      sub_10000BA10(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
      uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v26 = v25;
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v22);
      v0[2] = sub_100254634(v24, v26, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v36);
      uint64_t v15 = log;
      _os_log_impl((void *)&_mh_execute_header, log, type, "Transfer failed, removing handler for transferID: %s", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v19 + 8))(v0[10], v0[8]);
    }

    uint64_t v30 = v0[15];
    uint64_t v29 = v0[16];
    uint64_t v31 = v0[14];
    SFAirDropReceive.Transfer.id.getter();
    sub_10000BA10(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    uint64_t v32 = swift_allocError();
    v0[18] = v32;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v33, v29, v31);
    uint64_t v34 = (void *)swift_task_alloc();
    v0[19] = v34;
    *uint64_t v34 = v0;
    v34[1] = sub_10034EA70;
    uint64_t v35 = v0[7];
    return sub_10034ECA4(v35, v32);
  }
  else
  {
    (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = (uint64_t (*)(void))v0[1];
    return v27();
  }
}

uint64_t sub_10034EA70()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 136);
  uint64_t v2 = *(void *)(*(void *)v0 + 56);
  uint64_t v3 = *(void *)(*(void *)v0 + 48);
  uint64_t v4 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_10034EC00, v1, 0);
}

uint64_t sub_10034EC00()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10034ECA4(uint64_t a1, uint64_t a2)
{
  v3[22] = a2;
  v3[23] = v2;
  v3[21] = a1;
  uint64_t v4 = type metadata accessor for SFPlatform();
  v3[24] = v4;
  v3[25] = *(void *)(v4 - 8);
  v3[26] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v3[27] = v5;
  v3[28] = *(void *)(v5 - 8);
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v3[31] = static AirDropActor.shared;
  return _swift_task_switch(sub_10034EE10, v6, 0);
}

uint64_t sub_10034EE10()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers;
  v0[32] = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers;
  uint64_t v3 = (uint64_t *)(v1 + v2);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (*(void *)(v4 + 16))
  {
    unint64_t v5 = sub_10058392C(v0[21]);
    if (v6)
    {
      uint64_t v7 = *(void **)(*(void *)(v4 + 56) + 8 * v5);
      v0[33] = v7;
      swift_endAccess();
      v7;
      uint64_t v8 = (void *)swift_task_alloc();
      v0[34] = v8;
      *uint64_t v8 = v0;
      uint64_t v9 = sub_10034F094;
LABEL_8:
      v8[1] = v9;
      uint64_t v22 = v0[22];
      return sub_100672230(v22);
    }
  }
  uint64_t v10 = v0[23];
  uint64_t v11 = v0[21];
  swift_endAccess();
  uint64_t v12 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourReceiveHandlers;
  v0[35] = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourReceiveHandlers;
  uint64_t v13 = (uint64_t *)(v10 + v12);
  swift_beginAccess();
  uint64_t v14 = *v13;
  uint64_t v15 = swift_task_alloc();
  *(void *)(v15 + 16) = v11;
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_100343778((uint64_t (*)(long long *))sub_100356B5C, v15, v14);
  char v18 = v17;
  swift_bridgeObjectRelease();
  v0[36] = v16;
  uint64_t result = swift_task_dealloc();
  if ((v18 & 1) == 0)
  {
    if ((v16 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v16 < *(void *)(*v13 + 16))
    {
      uint64_t v20 = *v13 + 16 * v16;
      v0[37] = *(void *)(v20 + 32);
      uint64_t v21 = *(void **)(v20 + 40);
      v0[38] = v21;
      swift_unknownObjectRetain();
      v21;
      uint64_t v8 = (void *)swift_task_alloc();
      v0[39] = v8;
      *uint64_t v8 = v0;
      uint64_t v9 = sub_10034F5EC;
      goto LABEL_8;
    }
    __break(1u);
    return result;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_10034F094()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 248);
  swift_task_dealloc();
  return _swift_task_switch(sub_10034F1A4, v1, 0);
}

uint64_t sub_10034F1A4()
{
  uint64_t v32 = v0;
  uint64_t v1 = v0[21];
  swift_beginAccess();
  uint64_t v2 = (void *)sub_1002A83CC(v1);
  swift_endAccess();

  if (qword_100969C38 != -1) {
    swift_once();
  }
  uint64_t v3 = v0[30];
  uint64_t v4 = v0[27];
  uint64_t v5 = v0[28];
  uint64_t v6 = v0[21];
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000B47C(v7, (uint64_t)qword_1009700E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v6, v4);
  swift_retain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v30 = v0[32];
    uint64_t v10 = v0[30];
    uint64_t v11 = v0[27];
    uint64_t v12 = v0[28];
    uint64_t v29 = v0[23];
    uint64_t v13 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315394;
    sub_10000BA10(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[19] = sub_100254634(v14, v15, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    *(_WORD *)(v13 + 12) = 2048;
    uint64_t v16 = *(void *)(*(void *)(v29 + v30) + 16);
    swift_release();
    v0[20] = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Removed quic handler for transferID: %s count: %ld", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v17 = v0[30];
    uint64_t v18 = v0[27];
    uint64_t v19 = v0[28];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    swift_release();
  }

  uint64_t v20 = *(void **)(v0[23] + 48);
  if (![v20 screenStateSupportsAirDrop]
    || ![v20 discoverableLevel]
    || ([v20 wirelessEnabled] & 1) == 0
    || ![v20 bluetoothEnabledIncludingRestricted]
    || (uint64_t v22 = v0[25],
        uint64_t v21 = v0[26],
        uint64_t v23 = v0[24],
        static SFPlatform.watchOS.getter(),
        char v24 = static SFPlatform.isPlatform(_:)(),
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23),
        (v24 & 1) != 0))
  {
    sub_10034A930(0, 0);
  }
  if ([v20 screenStateSupportsAirDrop]
    && [v20 wirelessEnabled]
    && (uint64_t v25 = v0[23] + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions,
        swift_beginAccess(),
        *(void *)(*(void *)v25 + 16)))
  {
    unint64_t v26 = (void *)v0[33];
  }
  else
  {
    unint64_t v26 = (void *)v0[33];
    sub_10034A930(2, 0);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = (uint64_t (*)(void))v0[1];
  return v27();
}

uint64_t sub_10034F5EC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 248);
  swift_task_dealloc();
  return _swift_task_switch(sub_10034F6FC, v1, 0);
}

uint64_t sub_10034F6FC()
{
  uint64_t v27 = v0;
  unint64_t v1 = v0[36];
  swift_beginAccess();
  sub_1002A6AC4(v1);
  uint64_t v3 = v2;
  swift_endAccess();
  swift_unknownObjectRelease();

  if (qword_100969C38 != -1) {
    swift_once();
  }
  uint64_t v5 = v0[28];
  uint64_t v4 = v0[29];
  uint64_t v6 = v0[27];
  uint64_t v7 = v0[21];
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000B47C(v8, (uint64_t)qword_1009700E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v6);
  swift_retain_n();
  os_log_type_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v25 = v0[35];
    uint64_t v12 = v0[28];
    uint64_t v11 = v0[29];
    uint64_t v13 = v0[27];
    uint64_t v14 = v0[23];
    uint64_t v15 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    sub_10000BA10(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[18] = sub_100254634(v16, v17, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    *(_WORD *)(v15 + 12) = 2048;
    uint64_t v18 = *(void *)(*(void *)(v14 + v25) + 16);
    swift_release();
    v0[17] = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Removed bonjour handler for transferID: %s count: %ld", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v20 = v0[28];
    uint64_t v19 = v0[29];
    uint64_t v21 = v0[27];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    swift_release();
  }

  uint64_t v22 = (void *)v0[38];
  sub_100350978(1);
  swift_unknownObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

id sub_10034FA54(uint64_t a1, uint64_t a2, char **a3)
{
  uint64_t v4 = v3;
  uint64_t v132 = a3;
  uint64_t v6 = type metadata accessor for UUID();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v8 = *(char ***)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v122 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)v122 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v122 - v15;
  uint64_t v17 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v128 = (uint64_t)v122 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v127 = (uint64_t)v122 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v129 = (char *)v122 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v131 = (uint64_t)v122 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (uint64_t *)((char *)v122 - v26);
  sub_100356A94(a1, (uint64_t)v122 - v26, type metadata accessor for SDAirDropServerConnectionIdentity);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    ((void (*)(char *, uint64_t *, uint64_t))v8[4])(v14, v27, v7);
    uint64_t v28 = v8[2];
    uint64_t v129 = v14;
    ((void (*)(char *, char *, uint64_t))v28)(v11, v14, v7);
    uint64_t v29 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_quicReceiveHandlers;
    swift_beginAccess();
    uint64_t v30 = *(void *)v29;
    uint64_t v31 = *(void *)(*(void *)v29 + 16);
    uint64_t v127 = v7;
    uint64_t v130 = a1;
    if (v31 && (unint64_t v32 = sub_10058392C((uint64_t)v11), (v33 & 1) != 0))
    {
      id v34 = *(id *)(*(void *)(v30 + 56) + 8 * v32);
      uint64_t v35 = (uint64_t)v129;
      uint64_t v36 = v28;
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v28)(v16, v129, v7);
      uint64_t v39 = v131;
      sub_100356A94(a1, v131, type metadata accessor for SDAirDropServerConnectionIdentity);
      uint64_t v132 = v8;
      uint64_t v40 = *(void **)(v4 + 48);
      uint64_t v41 = *(void **)(v4 + 56);
      id v126 = v16;
      uint64_t v124 = v28;
      uint64_t v42 = *(void **)(v4 + 64);
      uint64_t v43 = *(void *)(v4 + 72);
      v122[0] = *(id *)(v4 + 88);
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      id v125 = v11;
      uint64_t v45 = Strong;
      uint64_t v123 = *(void *)(v4 + 40);
      v122[1] = objc_allocWithZone((Class)type metadata accessor for SDAirDropReceiveHandler());
      swift_retain();
      id v46 = v40;
      id v47 = v41;
      id v48 = v42;
      swift_retain();
      id v49 = v122[0];
      id v34 = sub_10067F248((uint64_t)v126, v39, v46, v47, v48, v43, v49, v4, (uint64_t)&off_1008D7618, v45, v123);

      uint64_t v36 = v124;
      uint64_t v8 = v132;

      uint64_t v16 = v126;
      swift_release();

      uint64_t v7 = v127;
      uint64_t v35 = (uint64_t)v129;
      swift_release();
      uint64_t v11 = v125;
      swift_unknownObjectRelease();
    }
    swift_endAccess();
    unint64_t v50 = v8[1];
    ((void (*)(char *, uint64_t))v50)(v11, v7);
    ((void (*)(char *, uint64_t, uint64_t))v36)(v16, v35, v7);
    swift_beginAccess();
    id v51 = v34;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v134[0] = *(void *)v29;
    *(void *)uint64_t v29 = 0x8000000000000000;
    sub_1005914DC((uint64_t)v51, (uint64_t)v16, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v29 = v134[0];
    swift_bridgeObjectRelease();
    uint64_t v132 = v8 + 1;
    ((void (*)(char *, uint64_t))v50)(v16, v7);
    swift_endAccess();
    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v53 = type metadata accessor for Logger();
    sub_10000B47C(v53, (uint64_t)qword_1009700E0);
    uint64_t v54 = v128;
    sub_100356A94(v130, v128, type metadata accessor for SDAirDropServerConnectionIdentity);
    uint64_t v55 = Logger.logObject.getter();
    os_log_type_t v56 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc();
      v135[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v57 = 136315138;
      unint64_t v58 = sub_1005DB064();
      v134[0] = sub_100254634(v58, v59, v135);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100356AFC(v54, type metadata accessor for SDAirDropServerConnectionIdentity);
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "Added quic connection %s", v57, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v35 = (uint64_t)v129;
      swift_slowDealloc();
    }
    else
    {
      sub_100356AFC(v54, type metadata accessor for SDAirDropServerConnectionIdentity);
    }

    ((void (*)(uint64_t, uint64_t))v50)(v35, v127);
    return v51;
  }
  uint64_t v37 = *v27;
  if (sub_1006A9B5C() == 0x65766F637369442FLL && v38 == 0xE900000000000072)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v60 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v60 & 1) == 0)
    {
      uint64_t v88 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourReceiveHandlers;
      swift_beginAccess();
      uint64_t v132 = (char **)v88;
      uint64_t v89 = *(void *)(*(void *)v88 + 16);
      if (v89)
      {
        BOOL v63 = (id *)(*(void *)v88 + 40);
        while ((id)v37 != *(v63 - 1))
        {
          v63 += 2;
          if (!--v89) {
            goto LABEL_32;
          }
        }
        goto LABEL_42;
      }
LABEL_32:
      UUID.init()();
      SFAirDrop.TransferIdentifier.init(_:)();
      uint64_t v130 = a1;
      uint64_t v90 = a1;
      uint64_t v91 = v131;
      sub_100356A94(v90, v131, type metadata accessor for SDAirDropServerConnectionIdentity);
      unint64_t v92 = *(void **)(v4 + 48);
      uint64_t v93 = *(void **)(v4 + 56);
      id v126 = v16;
      uint64_t v94 = (void *)v4;
      uint64_t v95 = *(void **)(v4 + 64);
      uint64_t v96 = v94[9];
      id v125 = (char *)v94[11];
      uint64_t v97 = swift_unknownObjectWeakLoadStrong();
      uint64_t v128 = v37;
      uint64_t v129 = (char *)v97;
      uint64_t v98 = v94[5];
      id v99 = objc_allocWithZone((Class)type metadata accessor for SDAirDropReceiveHandler());
      swift_retain();
      id v100 = v92;
      id v101 = v93;
      id v102 = v95;
      uint64_t v103 = (uint64_t)v94;
      id v104 = v102;
      swift_retain();
      uint64_t v105 = v125;
      uint64_t v121 = v98;
      uint64_t v106 = v128;
      id v107 = sub_10067F248((uint64_t)v126, v91, v100, v101, v104, v96, v105, v103, (uint64_t)&off_1008D7618, (uint64_t)v129, v121);

      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      uint64_t v108 = v132;
      swift_beginAccess();
      uint64_t v109 = *v108;
      swift_unknownObjectRetain();
      id v51 = v107;
      char v110 = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v108 = v109;
      if ((v110 & 1) == 0)
      {
        uint64_t v109 = sub_100253360(0, *((void *)v109 + 2) + 1, 1, v109);
        void *v132 = v109;
      }
      unint64_t v112 = *((void *)v109 + 2);
      unint64_t v111 = *((void *)v109 + 3);
      if (v112 >= v111 >> 1)
      {
        uint64_t v109 = sub_100253360((char *)(v111 > 1), v112 + 1, 1, v109);
        void *v132 = v109;
      }
      *((void *)v109 + 2) = v112 + 1;
      uint64_t v113 = &v109[16 * v112];
      *((void *)v113 + 4) = v106;
      *((void *)v113 + 5) = v51;
      swift_endAccess();
      if (qword_100969C38 != -1) {
        swift_once();
      }
      uint64_t v114 = type metadata accessor for Logger();
      sub_10000B47C(v114, (uint64_t)qword_1009700E0);
      uint64_t v85 = v127;
      sub_100356A94(v130, v127, type metadata accessor for SDAirDropServerConnectionIdentity);
      swift_retain_n();
      id v86 = Logger.logObject.getter();
      os_log_type_t v87 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v86, v87)) {
        goto LABEL_39;
      }
      goto LABEL_40;
    }
  }
  uint64_t v61 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourDiscoveryHandlers;
  swift_beginAccess();
  uint64_t v132 = (char **)v61;
  uint64_t v62 = *(void *)(*(void *)v61 + 16);
  if (!v62)
  {
LABEL_18:
    UUID.init()();
    SFAirDrop.TransferIdentifier.init(_:)();
    uint64_t v130 = a1;
    uint64_t v64 = v131;
    sub_100356A94(a1, v131, type metadata accessor for SDAirDropServerConnectionIdentity);
    uint64_t v65 = *(void **)(v4 + 48);
    unint64_t v66 = *(void **)(v4 + 56);
    unint64_t v67 = *(void **)(v4 + 64);
    uint64_t v68 = *(void *)(v4 + 72);
    uint64_t v128 = v37;
    os_log_type_t v69 = *(void **)(v4 + 88);
    uint64_t v70 = swift_unknownObjectWeakLoadStrong();
    id v126 = *(char **)(v4 + 40);
    uint64_t v127 = v70;
    id v125 = (char *)objc_allocWithZone((Class)type metadata accessor for SDAirDropReceiveHandler());
    id v71 = v65;
    id v72 = v66;
    uint64_t v73 = (uint64_t)v16;
    id v74 = v67;
    swift_retain();
    id v75 = v69;
    swift_retain();
    id v76 = sub_10067F248(v73, v64, v71, v72, v74, v68, v75, v4, (uint64_t)&off_1008D7618, v127, (uint64_t)v126);

    swift_release();
    swift_release();
    uint64_t v77 = v128;
    swift_unknownObjectRelease();
    uint64_t v78 = v132;
    swift_beginAccess();
    uint64_t v79 = *v78;
    swift_unknownObjectRetain();
    id v51 = v76;
    char v80 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v78 = v79;
    if ((v80 & 1) == 0)
    {
      uint64_t v79 = sub_100253360(0, *((void *)v79 + 2) + 1, 1, v79);
      void *v132 = v79;
    }
    unint64_t v82 = *((void *)v79 + 2);
    unint64_t v81 = *((void *)v79 + 3);
    if (v82 >= v81 >> 1)
    {
      uint64_t v79 = sub_100253360((char *)(v81 > 1), v82 + 1, 1, v79);
      void *v132 = v79;
    }
    *((void *)v79 + 2) = v82 + 1;
    long long v83 = &v79[16 * v82];
    *((void *)v83 + 4) = v77;
    *((void *)v83 + 5) = v51;
    swift_endAccess();
    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v84 = type metadata accessor for Logger();
    sub_10000B47C(v84, (uint64_t)qword_1009700E0);
    uint64_t v85 = (uint64_t)v129;
    sub_100356A94(v130, (uint64_t)v129, type metadata accessor for SDAirDropServerConnectionIdentity);
    swift_retain_n();
    id v86 = Logger.logObject.getter();
    os_log_type_t v87 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v86, v87))
    {
LABEL_39:
      uint64_t v115 = swift_slowAlloc();
      v134[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v115 = 136315394;
      unint64_t v116 = sub_1005DB064();
      uint64_t v133 = sub_100254634(v116, v117, v134);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100356AFC(v85, type metadata accessor for SDAirDropServerConnectionIdentity);
      *(_WORD *)(v115 + 12) = 2048;
      uint64_t v118 = *((void *)*v132 + 2);
      swift_release();
      uint64_t v133 = v118;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v86, v87, "Added bonjour connection %s count: %ld", (uint8_t *)v115, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_unknownObjectRelease();

      return v51;
    }
LABEL_40:
    swift_unknownObjectRelease();
    swift_release();
    sub_100356AFC(v85, type metadata accessor for SDAirDropServerConnectionIdentity);

    swift_release();
    return v51;
  }
  BOOL v63 = (id *)(*(void *)v61 + 40);
  while ((id)v37 != *(v63 - 1))
  {
    v63 += 2;
    if (!--v62) {
      goto LABEL_18;
    }
  }
LABEL_42:
  id v120 = *v63;
  swift_unknownObjectRelease();
  return v120;
}

void sub_100350978(char a1)
{
  uint64_t v3 = type metadata accessor for SFPlatform();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    uint64_t v14 = *(void **)(v1 + 48);
    if (![v14 screenStateSupportsAirDrop]
      || ![v14 discoverableLevel]
      || ![v14 wirelessEnabled]
      || ![v14 bluetoothEnabledIncludingRestricted])
    {
      goto LABEL_19;
    }
    goto LABEL_14;
  }
  if (a1 == 1)
  {
    uint64_t v7 = *(void **)(v1 + 48);
    if (![v7 screenStateSupportsAirDrop]) {
      goto LABEL_19;
    }
    if (![v7 discoverableLevel]) {
      goto LABEL_19;
    }
    if (![v7 wirelessEnabled]) {
      goto LABEL_19;
    }
    if (![v7 bluetoothEnabledIncludingRestricted]) {
      goto LABEL_19;
    }
    uint64_t v8 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes;
    swift_beginAccess();
    if (!*(void *)(*(void *)v8 + 16)) {
      goto LABEL_19;
    }
    id v9 = [v7 bluetoothAddress];
    if (!v9) {
      goto LABEL_19;
    }
    uint64_t v10 = v9;
    uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v13 = v12;

    sub_100250CC4(v11, v13);
LABEL_14:
    static SFPlatform.watchOS.getter();
    char v15 = static SFPlatform.isPlatform(_:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if ((v15 & 1) == 0) {
      return;
    }
LABEL_19:
    sub_10034A930(a1, 0);
    return;
  }
  uint64_t v16 = *(void **)(v1 + 48);
  if (![v16 screenStateSupportsAirDrop]) {
    goto LABEL_19;
  }
  if (![v16 wirelessEnabled]) {
    goto LABEL_19;
  }
  uint64_t v17 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions;
  swift_beginAccess();
  if (!*(void *)(*(void *)v17 + 16)) {
    goto LABEL_19;
  }
}

uint64_t sub_100350BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a2;
  uint64_t v3 = type metadata accessor for SDAirDropServerConnection(0);
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v37 + 64);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v38 = (uint64_t)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v35 - v6;
  uint64_t v8 = sub_10000A844(&qword_1009702F8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  uint64_t v12 = *(void *)(*(void *)(v11 - 8) + 64);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v35 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v20 = a1;
  uint64_t v22 = v21;
  sub_100356BB0(v20, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v10, 1, v11) == 1) {
    return sub_10000A7E8((uint64_t)v10, &qword_1009702F8);
  }
  sub_100356E50((uint64_t)v10, (uint64_t)v19, type metadata accessor for SDAirDropServerConnectionIdentity);
  sub_100356A94((uint64_t)v19, (uint64_t)v17, type metadata accessor for SDAirDropServerConnectionIdentity);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100356AFC((uint64_t)v19, type metadata accessor for SDAirDropServerConnectionIdentity);
    uint64_t v24 = (uint64_t)v17;
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v25 = v36;
    sub_100356A94(v36, (uint64_t)v7, type metadata accessor for SDAirDropServerConnection);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      uint64_t v26 = &v7[*(int *)(sub_10000A844(&qword_100970300) + 48)];
      uint64_t v27 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
    }
    NWConnection.nw.getter();
    swift_release();
    uint64_t v28 = swift_allocObject();
    swift_weakInit();
    uint64_t v29 = v38;
    sub_100356A94(v25, v38, type metadata accessor for SDAirDropServerConnection);
    sub_100356A94((uint64_t)v19, (uint64_t)v14, type metadata accessor for SDAirDropServerConnectionIdentity);
    unint64_t v30 = (*(unsigned __int8 *)(v37 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    unint64_t v31 = (v4 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v32 = (*(unsigned __int8 *)(v22 + 80) + v31 + 8) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v33 = swift_allocObject();
    sub_100356E50(v29, v33 + v30, type metadata accessor for SDAirDropServerConnection);
    *(void *)(v33 + v31) = v28;
    sub_100356E50((uint64_t)v14, v33 + v32, type metadata accessor for SDAirDropServerConnectionIdentity);
    aBlock[4] = sub_1003571D8;
    aBlock[5] = v33;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100296520;
    aBlock[3] = &unk_1008D76C8;
    id v34 = _Block_copy(aBlock);
    swift_release();
    nw_connection_set_read_close_handler();
    _Block_release(v34);
    swift_unknownObjectRelease();
    uint64_t v24 = (uint64_t)v19;
  }
  return sub_100356AFC(v24, type metadata accessor for SDAirDropServerConnectionIdentity);
}

uint64_t sub_1003510E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  uint64_t v28 = a2;
  uint64_t v31 = a1;
  uint64_t v4 = type metadata accessor for NWConnection.State();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v25 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SDAirDropServerConnection(0);
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v27 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000A844(&qword_1009702F8);
  uint64_t v26 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v26 + 64);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  sub_100356BB0(v29, (uint64_t)v12);
  sub_100356A94(v30, (uint64_t)v9, type metadata accessor for SDAirDropServerConnection);
  uint64_t v18 = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v31, v4);
  unint64_t v19 = (*(unsigned __int8 *)(v26 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  unint64_t v20 = (v11 + *(unsigned __int8 *)(v27 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  unint64_t v21 = (v8 + *(unsigned __int8 *)(v5 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = 0;
  *((void *)v22 + 3) = 0;
  *((void *)v22 + 4) = v17;
  sub_10024D388((uint64_t)v12, (uint64_t)&v22[v19], &qword_1009702F8);
  sub_100356E50((uint64_t)v9, (uint64_t)&v22[v20], type metadata accessor for SDAirDropServerConnection);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v22[v21], v25, v18);
  sub_10028CAEC((uint64_t)v15, (uint64_t)&unk_100970398, (uint64_t)v22);
  return swift_release();
}

uint64_t sub_100351464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[8] = a6;
  v7[9] = a7;
  v7[6] = a4;
  v7[7] = a5;
  _OWORD v7[5] = a1;
  return _swift_task_switch(sub_10035148C, 0, 0);
}

uint64_t sub_10035148C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 80) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100351590;
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v5 = *(void *)(v0 + 56);
    return sub_10035173C(v5, v3, v4);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_100351590()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1003516D8;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1003516AC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003516AC()
{
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 80) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003516D8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035173C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  sub_10000A844(&qword_1009702F8);
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  v4[10] = v5;
  v4[11] = *(void *)(v5 - 8);
  v4[12] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for NWError();
  v4[13] = v6;
  v4[14] = *(void *)(v6 - 8);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for NWConnection.State();
  v4[19] = v7;
  v4[20] = *(void *)(v7 - 8);
  v4[21] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v8 = static AirDropActor.shared;
  return _swift_task_switch(sub_100351958, v8, 0);
}

uint64_t sub_100351958()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[19];
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 16))(v2, v0[6], v3);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88))(v2, v3);
  if (v4 == enum case for NWConnection.State.waiting(_:))
  {
    uint64_t v5 = v0[21];
    uint64_t v6 = v0[18];
    uint64_t v8 = v0[13];
    uint64_t v7 = v0[14];
    (*(void (**)(uint64_t, void))(v0[20] + 96))(v5, v0[19]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v8);
    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v10 = v0[17];
    uint64_t v9 = v0[18];
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[14];
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000B47C(v13, (uint64_t)qword_1009700E0);
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
    v14(v10, v9, v11);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    BOOL v17 = os_log_type_enabled(v15, v16);
    uint64_t v18 = v0[17];
    uint64_t v19 = v0[13];
    uint64_t v20 = v0[14];
    if (v17)
    {
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      os_log_t log = (os_log_t)swift_slowAlloc();
      *(_DWORD *)unint64_t v21 = 138412290;
      sub_10000BA10(&qword_10096E020, (void (*)(uint64_t))&type metadata accessor for NWError);
      swift_allocError();
      v14(v22, v18, v19);
      uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
      v0[3] = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      log->Class isa = (Class)v23;
      uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v24(v18, v19);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "AirDrop connection waiting with error %@", v21, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v24(v18, v19);
    }
    v24(v0[18], v0[13]);
    goto LABEL_27;
  }
  if (v4 == enum case for NWConnection.State.failed(_:))
  {
    uint64_t v25 = v0[21];
    uint64_t v26 = v0[16];
    uint64_t v27 = v0[13];
    uint64_t v28 = v0[14];
    (*(void (**)(uint64_t, void))(v0[20] + 96))(v25, v0[19]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v26, v25, v27);
    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v29 = v0[15];
    uint64_t v30 = v0[16];
    uint64_t v31 = v0[13];
    uint64_t v32 = v0[14];
    uint64_t v33 = type metadata accessor for Logger();
    sub_10000B47C(v33, (uint64_t)qword_1009700E0);
    os_log_type_t v87 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
    v87(v29, v30, v31);
    id v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    BOOL v36 = os_log_type_enabled(v34, v35);
    uint64_t v38 = v0[14];
    uint64_t v37 = v0[15];
    uint64_t v39 = v0[13];
    if (v36)
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      os_log_t loga = v34;
      uint64_t v41 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 138412290;
      sub_10000BA10(&qword_10096E020, (void (*)(uint64_t))&type metadata accessor for NWError);
      swift_allocError();
      v87(v42, v37, v39);
      uint64_t v43 = _swift_stdlib_bridgeErrorToNSError();
      v0[2] = v43;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v41 = v43;
      uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
      v44(v37, v39);
      uint64_t v45 = v44;
      _os_log_impl((void *)&_mh_execute_header, loga, v35, "AirDrop connection failed with error %@", v40, 0xCu);
      sub_10000A844(&qword_10096B850);
      id v34 = loga;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      id v51 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
      v51(v0[15], v0[13]);
      uint64_t v45 = v51;
    }

    uint64_t v52 = v0[16];
    uint64_t v53 = v0[13];
    uint64_t v54 = v0[4];
    sub_1005DB2F4(0);
    sub_10000BA10(&qword_10096E020, (void (*)(uint64_t))&type metadata accessor for NWError);
    uint64_t v55 = swift_allocError();
    v87(v56, v52, v53);
    sub_1003524E8(v54, v55);
    v45(v52, v53);
    swift_errorRelease();
    goto LABEL_27;
  }
  if (v4 == enum case for NWConnection.State.setup(_:))
  {
    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v46 = type metadata accessor for Logger();
    sub_10000B47C(v46, (uint64_t)qword_1009700E0);
    id v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v47, v48)) {
      goto LABEL_26;
    }
    id v49 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v49 = 0;
    unint64_t v50 = "AirDrop connection setting up";
LABEL_25:
    _os_log_impl((void *)&_mh_execute_header, v47, v48, v50, v49, 2u);
    swift_slowDealloc();
LABEL_26:

    goto LABEL_27;
  }
  if (v4 == enum case for NWConnection.State.preparing(_:))
  {
    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v57 = type metadata accessor for Logger();
    sub_10000B47C(v57, (uint64_t)qword_1009700E0);
    id v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v47, v48)) {
      goto LABEL_26;
    }
    id v49 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v49 = 0;
    unint64_t v50 = "AirDrop connection preparing";
    goto LABEL_25;
  }
  if (v4 == enum case for NWConnection.State.ready(_:))
  {
    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v60 = type metadata accessor for Logger();
    sub_10000B47C(v60, (uint64_t)qword_1009700E0);
    uint64_t v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v61, v62))
    {
      BOOL v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v63 = 0;
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "AirDrop connection ready", v63, 2u);
      swift_slowDealloc();
    }
    uint64_t v64 = v0[10];
    uint64_t v65 = v0[11];
    uint64_t v66 = v0[9];
    uint64_t v67 = v0[4];

    sub_100356BB0(v67, v66);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v66, 1, v64) == 1)
    {
      sub_10000A7E8(v0[9], &qword_1009702F8);
    }
    else
    {
      uint64_t v74 = v0[11];
      uint64_t v73 = v0[12];
      uint64_t v75 = v0[10];
      uint64_t v76 = v0[8];
      uint64_t v77 = v0[5];
      sub_100356E50(v0[9], v73, type metadata accessor for SDAirDropServerConnectionIdentity);
      sub_100356A94(v73, v76, type metadata accessor for SDAirDropServerConnectionIdentity);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v74 + 56))(v76, 0, 1, v75);
      sub_100350BEC(v76, v77);
      sub_10000A7E8(v76, &qword_1009702F8);
      sub_100356AFC(v73, type metadata accessor for SDAirDropServerConnectionIdentity);
    }
  }
  else if (v4 == enum case for NWConnection.State.cancelled(_:))
  {
    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v68 = type metadata accessor for Logger();
    sub_10000B47C(v68, (uint64_t)qword_1009700E0);
    os_log_type_t v69 = Logger.logObject.getter();
    os_log_type_t v70 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v69, v70))
    {
      id v71 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v71 = 0;
      _os_log_impl((void *)&_mh_execute_header, v69, v70, "AirDrop connection invalidated", v71, 2u);
      swift_slowDealloc();
    }
    uint64_t v72 = v0[4];

    sub_100352848(v72);
  }
  else
  {
    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v78 = type metadata accessor for Logger();
    sub_10000B47C(v78, (uint64_t)qword_1009700E0);
    uint64_t v79 = Logger.logObject.getter();
    os_log_type_t v80 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v79, v80))
    {
      unint64_t v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v81 = 0;
      _os_log_impl((void *)&_mh_execute_header, v79, v80, "Unknown AirDrop connection state", v81, 2u);
      swift_slowDealloc();
    }
    uint64_t v83 = v0[20];
    uint64_t v82 = v0[21];
    uint64_t v84 = v0[19];

    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v82, v84);
  }
LABEL_27:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v58 = (uint64_t (*)(void))v0[1];
  return v58();
}

uint64_t sub_1003524E8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A844(&qword_1009702F8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  BOOL v17 = (char *)&v25 - v16;
  sub_100356BB0(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_10000A7E8((uint64_t)v10, &qword_1009702F8);
  }
  sub_100356E50((uint64_t)v10, (uint64_t)v17, type metadata accessor for SDAirDropServerConnectionIdentity);
  uint64_t v19 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v7, 1, 1, v19);
  sub_100356A94((uint64_t)v17, (uint64_t)v15, type metadata accessor for SDAirDropServerConnectionIdentity);
  swift_retain();
  swift_errorRetain();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v20 = static AirDropActor.shared;
  uint64_t v21 = sub_10000BA10((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  unint64_t v22 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v23 = (v13 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = v20;
  v24[3] = v21;
  _DWORD v24[4] = v2;
  sub_100356E50((uint64_t)v15, (uint64_t)v24 + v22, type metadata accessor for SDAirDropServerConnectionIdentity);
  *(void *)((char *)v24 + v23) = a2;
  swift_retain();
  sub_10028CFA8((uint64_t)v7, (uint64_t)&unk_1009703B8, (uint64_t)v24);
  swift_release();
  return sub_100356AFC((uint64_t)v17, type metadata accessor for SDAirDropServerConnectionIdentity);
}

uint64_t sub_100352848(uint64_t a1)
{
  uint64_t v3 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A844(&qword_1009702F8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v28 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v28 - v17;
  sub_100356BB0(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10000A7E8((uint64_t)v8, &qword_1009702F8);
  }
  sub_100356E50((uint64_t)v8, (uint64_t)v18, type metadata accessor for SDAirDropServerConnectionIdentity);
  sub_100356A94((uint64_t)v18, (uint64_t)v16, type metadata accessor for SDAirDropServerConnectionIdentity);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = type metadata accessor for SFAirDrop.TransferIdentifier();
    (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v16, v20);
    uint64_t v21 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v5, 1, 1, v21);
    sub_100356A94((uint64_t)v18, (uint64_t)v13, type metadata accessor for SDAirDropServerConnectionIdentity);
    uint64_t v22 = qword_100969B90;
    swift_retain();
    if (v22 != -1) {
      swift_once();
    }
    uint64_t v23 = static AirDropActor.shared;
    uint64_t v24 = sub_10000BA10((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    unint64_t v25 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v26 = (void *)swift_allocObject();
    void v26[2] = v23;
    v26[3] = v24;
    v26[4] = v1;
    sub_100356E50((uint64_t)v13, (uint64_t)v26 + v25, type metadata accessor for SDAirDropServerConnectionIdentity);
    swift_retain();
    sub_10028CFA8((uint64_t)v5, (uint64_t)&unk_1009703C8, (uint64_t)v26);
    swift_release();
    uint64_t v27 = (uint64_t)v18;
  }
  else
  {
    sub_100356AFC((uint64_t)v18, type metadata accessor for SDAirDropServerConnectionIdentity);
    uint64_t v27 = (uint64_t)v16;
  }
  return sub_100356AFC(v27, type metadata accessor for SDAirDropServerConnectionIdentity);
}

uint64_t sub_100352C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100969C38 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000B47C(v12, (uint64_t)qword_1009700E0);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "AirDrop connection read close event", v15, 2u);
    swift_slowDealloc();
  }

  sub_1005DB2F4(0);
  uint64_t v16 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v11, 1, 1, v16);
  sub_100356A94(a3, (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SDAirDropServerConnectionIdentity);
  uint64_t v17 = qword_100969B90;
  swift_retain();
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v18 = static AirDropActor.shared;
  uint64_t v19 = sub_10000BA10((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  unint64_t v20 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = v18;
  v21[3] = v19;
  v21[4] = a2;
  sub_100356E50((uint64_t)v8, (uint64_t)v21 + v20, type metadata accessor for SDAirDropServerConnectionIdentity);
  swift_retain();
  sub_10028CFD4((uint64_t)v11, (uint64_t)&unk_100970380, (uint64_t)v21);
  return swift_release();
}

uint64_t sub_100352F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v5[8] = static AirDropActor.shared;
  return _swift_task_switch(sub_100353000, v6, 0);
}

uint64_t sub_100353000()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 72) = Strong;
  if (Strong)
  {
    type metadata accessor for CancellationError();
    sub_10000BA10(&qword_10096CCB8, (void (*)(uint64_t))&type metadata accessor for CancellationError);
    uint64_t v2 = swift_allocError();
    *(void *)(v0 + 80) = v2;
    CancellationError.init()();
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100353168;
    uint64_t v4 = *(void *)(v0 + 56);
    return sub_10034C9B8(v4, v2);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_100353168()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  swift_errorRelease();
  swift_release();
  return _swift_task_switch(sub_1003532B8, v1, 0);
}

uint64_t sub_1003532B8()
{
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 72) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003532E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_10000A6F0;
  return sub_10034C9B8(a5, a6);
}

uint64_t sub_1003533BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_10000A6F0;
  return sub_10034C9B8(a5, 0);
}

uint64_t sub_100353488()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + 48);
  if ([v2 discoverableLevel])
  {
    if ([v2 discoverableLevel] == (id)2)
    {
      if (qword_100969C38 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_10000B47C(v3, (uint64_t)qword_1009700E0);
      uint64_t v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "Device in everyone mode", v6, 2u);
        swift_slowDealloc();
      }

LABEL_19:
      uint64_t v15 = sub_100556CC4();
      unint64_t v17 = v16;
      swift_beginAccess();
      sub_100596938(v19, v15, v17);
      swift_endAccess();
      sub_100250CC4(v19[0], v19[1]);
      return 1;
    }
    if (sub_100460B28())
    {
      if (qword_100969C38 != -1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      sub_10000B47C(v11, (uint64_t)qword_1009700E0);
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Device in contacts only mode", v14, 2u);
        swift_slowDealloc();
      }

      if (sub_100556DF0(v2, *(void **)(v1 + 56))) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10000B47C(v7, (uint64_t)qword_1009700E0);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Device has AirDrop discovery OFF", v10, 2u);
      swift_slowDealloc();
    }
  }
  return 0;
}

uint64_t sub_100353794()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1003537EC();
    return swift_release();
  }
  return result;
}

uint64_t sub_1003537EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_10000A7E8((uint64_t)v4, &qword_10096C920);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_1009703F8;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    id v14[2] = v9;
    void v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

void sub_100353A30(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_appleIDState);
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_appleIDState);
  uint64_t v6 = v5[1];
  if (v6)
  {
    if (v6 == 1)
    {
      if (a2 == 1) {
        return;
      }
    }
    else if (a2 >= 2)
    {
      BOOL v8 = v7 == a1 && v6 == a2;
      if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return;
      }
    }
    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000B47C(v9, (uint64_t)qword_1009700E0);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "AppleID change detected, stopping servers", v12, 2u);
      swift_slowDealloc();
    }

    uint64_t v13 = *v5;
    unint64_t v14 = v5[1];
    *uint64_t v5 = a1;
    v5[1] = a2;
    sub_1003581A0(a1, a2);
    sub_10035818C(v13, v14);
    sub_10034A930(1, 1);
    sub_10034A930(0, 1);
    sub_10034A930(2, 1);
  }
  else
  {
    *uint64_t v5 = a1;
    v5[1] = a2;
    sub_1003581A0(a1, a2);
    sub_10035818C(v7, 0);
  }
}

uint64_t sub_100353C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_100353C44, 0, 0);
}

uint64_t sub_100353C44()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 16) + 48);
  unsigned int v2 = [v1 wirelessEnabled];
  *(unsigned char *)(v0 + 28) = v2;
  unsigned int v3 = [v1 bluetoothEnabledIncludingRestricted];
  *(unsigned char *)(v0 + 29) = v3;
  if (qword_100969C38 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_1009700E0);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67109376;
    *(_DWORD *)(v0 + 24) = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 8) = 1024;
    *(_DWORD *)(v0 + 24) = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Wireless/Bluetooth state changed - Wireless: %{BOOL}d Bluetooth: %{BOOL}d", (uint8_t *)v7, 0xEu);
    swift_slowDealloc();
  }

  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v8 = static AirDropActor.shared;
  return _swift_task_switch(sub_100353E28, v8, 0);
}

uint64_t sub_100353E28()
{
  uint64_t v1 = *(void *)(v0 + 16);
  int v2 = *(unsigned char *)(v0 + 28) & *(unsigned char *)(v0 + 29) & 1;
  if (v2 != *(unsigned __int8 *)(v1
                                + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_lastWirelessBluetoothStateEnabled))
  {
    *(unsigned char *)(v1
             + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_lastWirelessBluetoothStateEnabled) = v2;
    sub_10034B790();
  }
  unsigned int v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100353EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4;
  uint64_t v7 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TaskPriority();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = 0;
  v12[3] = 0;
  v12[4] = v6;
  int v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  swift_retain();
  if (v13 == 1)
  {
    sub_10000A7E8((uint64_t)v9, &qword_10096C920);
    uint64_t v14 = 0;
    uint64_t v15 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (v12[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v14 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v15 = v16;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v14 = 0;
      uint64_t v15 = 0;
    }
  }
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a4;
  *(void *)(v17 + 24) = v12;
  if (v15 | v14)
  {
    v19[0] = 0;
    v19[1] = 0;
    uint64_t v19[2] = v14;
    v19[3] = v15;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_100354120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_100354140, 0, 0);
}

uint64_t sub_100354140()
{
  if (qword_100969C38 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_1009700E0);
  swift_retain();
  int v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 16);
  if (v4)
  {
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 67109376;
    uint64_t v7 = *(void **)(v5 + 48);
    *(_DWORD *)(v0 + 24) = [v7 screenOn];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 8) = 1024;
    *(_DWORD *)(v0 + 24) = [v7 isMirroringActive];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Screen state changed %{BOOL}d - mirroring state %{BOOL}d", (uint8_t *)v6, 0xEu);
    swift_slowDealloc();
  }
  else
  {
    swift_release();
  }

  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v8 = static AirDropActor.shared;
  return _swift_task_switch(sub_100354338, v8, 0);
}

uint64_t sub_100354338()
{
  sub_10034B790();
  return _swift_task_switch(sub_1003543A0, 0, 0);
}

uint64_t sub_1003543A0()
{
  return _swift_task_switch(sub_1003543C4, static AirDropActor.shared, 0);
}

uint64_t sub_1003543C4()
{
  sub_100354424();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100354424()
{
  uint64_t v91 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v91 - 8);
  uint64_t v2 = __chkstk_darwin(v91);
  uint64_t v98 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v81 - v4;
  uint64_t v6 = sub_10000A844(&qword_100970350);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v97 = (char *)&v81 - v10;
  uint64_t v100 = v0;
  uint64_t v11 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer;
  uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServer);
  uint64_t v89 = v1;
  uint64_t v93 = v9;
  uint64_t v90 = v5;
  if (v12)
  {
    uint64_t v13 = *(void *)(v11 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 32);
    swift_unknownObjectRetain();
    uint64_t v16 = v15(ObjectType, v13);
    swift_unknownObjectRelease();
    if (v16)
    {
      if (qword_100969C38 != -1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for Logger();
      sub_10000B47C(v17, (uint64_t)qword_1009700E0);
      swift_retain_n();
      uint64_t v18 = v100;
      swift_retain_n();
      uint64_t v19 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = swift_slowAlloc();
        v105[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v21 = 136315394;
        uint64_t v22 = NWListener.debugDescription.getter();
        uint64_t v104 = sub_100254634(v22, v23, v105);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 12) = 2048;
        uint64_t v24 = (uint64_t *)(v18
                        + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServerErrors);
        swift_beginAccess();
        uint64_t v25 = *v24;
        uint64_t v1 = v89;
        uint64_t v26 = *(void *)(v25 + 16);
        swift_release();
        uint64_t v104 = v26;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Application Service Server %s - errors: %ld", (uint8_t *)v21, 0x16u);
        swift_arrayDestroy();
        uint64_t v9 = v93;
        swift_slowDealloc();
        swift_slowDealloc();
        swift_release();
      }
      else
      {

        swift_release_n();
        swift_release_n();
      }
      uint64_t v5 = v90;
    }
  }
  if (*(void *)(v100 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer))
  {
    uint64_t v27 = *(void *)(v100 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServer + 8);
    uint64_t v28 = swift_getObjectType();
    uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 32);
    swift_unknownObjectRetain();
    uint64_t v30 = v29(v28, v27);
    swift_unknownObjectRelease();
    if (v30)
    {
      if (qword_100969C38 != -1) {
        swift_once();
      }
      uint64_t v31 = type metadata accessor for Logger();
      sub_10000B47C(v31, (uint64_t)qword_1009700E0);
      uint64_t v32 = v100;
      swift_retain_n();
      swift_retain_n();
      uint64_t v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = swift_slowAlloc();
        v105[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v35 = 136315394;
        uint64_t v36 = NWListener.debugDescription.getter();
        uint64_t v104 = sub_100254634(v36, v37, v105);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v35 + 12) = 2048;
        uint64_t v38 = (uint64_t *)(v32 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServerErrors);
        swift_beginAccess();
        uint64_t v39 = *v38;
        uint64_t v1 = v89;
        uint64_t v40 = *(void *)(v39 + 16);
        swift_release();
        uint64_t v104 = v40;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "Bonjour Server %s - errors: %ld", (uint8_t *)v35, 0x16u);
        swift_arrayDestroy();
        uint64_t v9 = v93;
        swift_slowDealloc();
        swift_slowDealloc();
        swift_release();
      }
      else
      {

        swift_release_n();
        swift_release_n();
      }
      uint64_t v5 = v90;
    }
  }
  uint64_t v41 = v100 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldTransactions;
  swift_beginAccess();
  if (*(void *)(*(void *)v41 + 16))
  {
    if (qword_100969C38 != -1) {
      goto LABEL_60;
    }
    goto LABEL_19;
  }
LABEL_22:
  uint64_t v46 = (uint64_t *)(v100
                  + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServersByTransactionID);
  uint64_t result = swift_beginAccess();
  uint64_t v48 = *v46;
  uint64_t v49 = v91;
  if (*(void *)(*v46 + 16))
  {
    uint64_t v50 = *(void *)(v48 + 64);
    uint64_t v85 = v48 + 64;
    uint64_t v41 = 1 << *(unsigned char *)(v48 + 32);
    uint64_t v51 = -1;
    if (v41 < 64) {
      uint64_t v51 = ~(-1 << v41);
    }
    unint64_t v52 = v51 & v50;
    uint64_t v53 = v100 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_nearFieldServerErrors;
    swift_bridgeObjectRetain();
    uint64_t v88 = v53;
    swift_beginAccess();
    unint64_t v54 = 0;
    unint64_t v55 = v52;
    unint64_t v56 = (unint64_t)(v41 + 63) >> 6;
    id v99 = (void (**)(char *, char *, uint64_t))(v1 + 16);
    uint64_t v96 = (void (**)(char *, uint64_t, uint64_t))(v1 + 32);
    uint64_t v95 = (uint64_t *)(v1 + 8);
    unint64_t v82 = v56 - 1;
    int64_t v92 = v56;
    unint64_t v83 = v56 - 5;
    uint64_t v94 = v48;
    uint64_t v84 = v48 + 104;
    *(void *)&long long v57 = 136315650;
    long long v87 = v57;
    id v86 = (char *)&type metadata for Any + 8;
    while (1)
    {
      uint64_t v58 = (uint64_t)v97;
      if (v55) {
        break;
      }
      int64_t v64 = v54 + 1;
      if (__OFADD__(v54, 1))
      {
        __break(1u);
LABEL_60:
        swift_once();
LABEL_19:
        uint64_t v42 = type metadata accessor for Logger();
        sub_10000B47C(v42, (uint64_t)qword_1009700E0);
        swift_retain();
        uint64_t v43 = Logger.logObject.getter();
        os_log_type_t v44 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v43, v44))
        {
          uint64_t v45 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v45 = 134217984;
          uint64_t v104 = *(void *)(*(void *)v41 + 16);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v43, v44, "NearField Transactions %ld", v45, 0xCu);
          swift_slowDealloc();
        }
        else
        {

          swift_release();
        }
        goto LABEL_22;
      }
      if (v64 >= v92)
      {
        unint64_t v66 = v54;
      }
      else
      {
        unint64_t v65 = *(void *)(v85 + 8 * v64);
        if (v65) {
          goto LABEL_34;
        }
        unint64_t v66 = v54 + 1;
        if ((uint64_t)(v54 + 2) < v92)
        {
          unint64_t v65 = *(void *)(v85 + 8 * (v54 + 2));
          if (v65)
          {
            int64_t v64 = v54 + 2;
            goto LABEL_34;
          }
          unint64_t v66 = v54 + 2;
          if ((uint64_t)(v54 + 3) < v92)
          {
            unint64_t v65 = *(void *)(v85 + 8 * (v54 + 3));
            if (v65)
            {
              int64_t v64 = v54 + 3;
LABEL_34:
              uint64_t v102 = (v65 - 1) & v65;
              unint64_t v59 = __clz(__rbit64(v65)) + (v64 << 6);
              unint64_t v54 = v64;
LABEL_30:
              uint64_t v60 = v94;
              (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v9, *(void *)(v94 + 48) + *(void *)(v1 + 72) * v59, v49);
              uint64_t v61 = *(void *)(v60 + 56);
              uint64_t v62 = sub_10000A844(&qword_100970358);
              uint64_t v63 = *(int *)(v62 + 48);
              long long v101 = *(_OWORD *)(v61 + 16 * v59);
              *(_OWORD *)&v9[v63] = v101;
              (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v9, 0, 1, v62);
              swift_unknownObjectRetain();
              goto LABEL_37;
            }
            int64_t v64 = v54 + 4;
            unint64_t v66 = v54 + 3;
            if ((uint64_t)(v54 + 4) < v92)
            {
              unint64_t v65 = *(void *)(v85 + 8 * v64);
              if (v65) {
                goto LABEL_34;
              }
              while (v83 != v54)
              {
                unint64_t v65 = *(void *)(v84 + 8 * v54++);
                if (v65)
                {
                  int64_t v64 = v54 + 4;
                  goto LABEL_34;
                }
              }
              unint64_t v66 = v82;
            }
          }
        }
      }
      uint64_t v67 = sub_10000A844(&qword_100970358);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v9, 1, 1, v67);
      uint64_t v102 = 0;
      unint64_t v54 = v66;
LABEL_37:
      sub_10024D388((uint64_t)v9, v58, &qword_100970350);
      uint64_t v68 = sub_10000A844(&qword_100970358);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 48))(v58, 1, v68) == 1) {
        return swift_release();
      }
      *(void *)&long long v101 = v54;
      uint64_t v41 = *(void *)(v58 + *(int *)(v68 + 48) + 8);
      (*v96)(v5, v58, v49);
      uint64_t v69 = swift_getObjectType();
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v41 + 32))(v69, v41))
      {
        if (qword_100969C38 != -1) {
          swift_once();
        }
        uint64_t v70 = type metadata accessor for Logger();
        sub_10000B47C(v70, (uint64_t)qword_1009700E0);
        (*v99)(v98, v5, v49);
        swift_retain_n();
        swift_retain_n();
        uint64_t v41 = Logger.logObject.getter();
        os_log_type_t v71 = static os_log_type_t.default.getter();
        if (os_log_type_enabled((os_log_t)v41, v71))
        {
          uint64_t v72 = swift_slowAlloc();
          uint64_t v73 = v98;
          uint64_t v74 = v72;
          uint64_t v103 = swift_slowAlloc();
          *(_DWORD *)uint64_t v74 = v87;
          uint64_t v75 = NWListener.debugDescription.getter();
          *(void *)(v74 + 4) = sub_100254634(v75, v76, &v103);
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v74 + 12) = 2080;
          sub_10000BA10((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v77 = dispatch thunk of CustomStringConvertible.description.getter();
          *(void *)(v74 + 14) = sub_100254634(v77, v78, &v103);
          swift_bridgeObjectRelease();
          uint64_t v79 = (void (*)(char *, uint64_t))*v95;
          ((void (*)(char *, uint64_t))*v95)(v73, v49);
          *(_WORD *)(v74 + 22) = 2048;
          uint64_t v80 = *(void *)(*(void *)v88 + 16);
          swift_release();
          *(void *)(v74 + 24) = v80;
          uint64_t v49 = v91;
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)v41, v71, "NearField Server %s - TransactionID %s - errors: %ld", (uint8_t *)v74, 0x20u);
          swift_arrayDestroy();
          uint64_t v1 = v89;
          swift_slowDealloc();
          uint64_t v5 = v90;
          swift_slowDealloc();
          swift_release();
          swift_unknownObjectRelease();

          v79(v5, v49);
        }
        else
        {
          swift_unknownObjectRelease();

          swift_release_n();
          uint64_t v41 = *v95;
          ((void (*)(char *, uint64_t))*v95)(v98, v49);
          swift_release_n();
          ((void (*)(char *, uint64_t))v41)(v5, v49);
        }
        uint64_t v9 = v93;
      }
      else
      {
        ((void (*)(char *, uint64_t))*v95)(v5, v49);
        swift_unknownObjectRelease();
      }
      unint64_t v54 = v101;
      unint64_t v55 = v102;
    }
    uint64_t v102 = (v55 - 1) & v55;
    unint64_t v59 = __clz(__rbit64(v55)) | (v54 << 6);
    goto LABEL_30;
  }
  return result;
}

uint64_t sub_1003552C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_1003552E0, 0, 0);
}

uint64_t sub_1003552E0()
{
  id v1 = [*(id *)(v0[2] + 48) myAppleID];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 1;
  }
  v0[3] = v3;
  v0[4] = v5;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  return _swift_task_switch(sub_1003553C4, v6, 0);
}

uint64_t sub_1003553C4()
{
  uint64_t v2 = v0[3];
  unint64_t v1 = v0[4];
  sub_100353A30(v2, v1);
  sub_10035818C(v2, v1);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100355480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  return _swift_task_switch(sub_1003554A0, 0, 0);
}

uint64_t sub_1003554A0()
{
  uint64_t v15 = v0;
  if (qword_100969C38 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_1009700E0);
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 24);
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    v14[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    id v7 = [*(id *)(v5 + 48) localHostName];
    if (v7)
    {
      uint64_t v8 = v7;
      unint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v11 = v10;
    }
    else
    {
      v14[1] = 0;
      id v14[2] = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v11 = 0x80000001007B7770;
      unint64_t v9 = 0xD000000000000015;
    }
    *(void *)(v0 + 16) = sub_100254634(v9, v11, v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Device name changed %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v12 = static AirDropActor.shared;
  return _swift_task_switch(sub_100355738, v12, 0);
}

uint64_t sub_100355738()
{
  sub_10034A930(1, 1);
  sub_10034A930(0, 1);
  sub_10034A930(2, 1);
  if (sub_100343924())
  {
    sub_1003443F0(0);
    if (sub_100343A5C()) {
      sub_1003443F0(1);
    }
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035581C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_10035583C, 0, 0);
}

uint64_t sub_10035583C()
{
  *(void *)(v0 + 24) = [*(id *)(*(void *)(v0 + 16) + 48) discoverableLevel];
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v1 = static AirDropActor.shared;
  return _swift_task_switch(sub_1003558EC, v1, 0);
}

uint64_t sub_1003558EC()
{
  sub_10035594C(*(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10035594C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SFPlatform();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_lastDiscoverableLevel) != a1)
  {
    *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_lastDiscoverableLevel) = a1;
    static SFPlatform.watchOS.getter();
    char v8 = static SFPlatform.isPlatform(_:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if ((v8 & 1) == 0)
    {
      sub_1005DD698(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleScannerID);
      unint64_t v9 = (void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes);
      swift_beginAccess();
      *unint64_t v9 = &_swiftEmptySetSingleton;
      swift_bridgeObjectRelease();
    }
    unint64_t v10 = (void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleHashes);
    swift_beginAccess();
    *unint64_t v10 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease();
    sub_10034A930(1, 1);
    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000B47C(v11, (uint64_t)qword_1009700E0);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 134217984;
      v15[1] = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Discoverability mode changed stopping server - new mode: %ld", v14, 0xCu);
      swift_slowDealloc();
    }

    sub_10034B790();
  }
}

uint64_t sub_100355BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_100355C08, 0, 0);
}

uint64_t sub_100355C08()
{
  if ([*(id *)(*(void *)(v0 + 16) + 48) currentConsoleUser])
  {
    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_10000B47C(v1, (uint64_t)qword_1009700E0);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "User is logged in, starting app service server if needed", v4, 2u);
      swift_slowDealloc();
    }

    if (qword_100969B90 != -1) {
      swift_once();
    }
    uint64_t v5 = static AirDropActor.shared;
    uint64_t v6 = sub_100355EE8;
  }
  else
  {
    if (qword_100969C38 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10000B47C(v7, (uint64_t)qword_1009700E0);
    char v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      unint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "User logged out, stopping servers", v10, 2u);
      swift_slowDealloc();
    }

    if (qword_100969B90 != -1) {
      swift_once();
    }
    uint64_t v5 = static AirDropActor.shared;
    uint64_t v6 = sub_100355E68;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100355E68()
{
  sub_10034A930(1, 1);
  sub_10034A930(0, 1);
  sub_10034A930(2, 1);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100355EE8()
{
  sub_1003443F0(0);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100355F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = type metadata accessor for Notification();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = swift_retain();
  sub_100353EEC(v13, a4, a5, a6);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1003560A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_1003560C4, 0, 0);
}

uint64_t sub_1003560C4()
{
  if (qword_100969C38 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_1009700E0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 67109120;
    type metadata accessor for SFAirDropUserDefaults();
    uint64_t v5 = (void *)static SFAirDropUserDefaults.shared.getter();
    char v6 = SFAirDropUserDefaults.cellularUsageEnabled.getter();

    *(_DWORD *)(v0 + 24) = v6 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Cellular usage changed to %{BOOL}d", v4, 8u);
    swift_slowDealloc();
  }

  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  return _swift_task_switch(sub_100356278, v7, 0);
}

uint64_t sub_100356278()
{
  sub_10034A930(1, 1);
  sub_10034A930(0, 1);
  sub_10034A930(2, 1);
  if (sub_100343924())
  {
    sub_1003443F0(0);
    if (sub_100343A5C()) {
      sub_1003443F0(1);
    }
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id *sub_100356320()
{
  sub_100261080((uint64_t)(v0 + 2));
  sub_100261080((uint64_t)(v0 + 4));

  swift_release();
  swift_release();

  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bleScannerID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10035818C(*(uint64_t *)((char *)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_appleIDState), *(unint64_t *)((char *)v0+ OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_appleIDState+ 8));
  return v0;
}

uint64_t sub_100356498()
{
  sub_100356320();

  return swift_deallocClassInstance();
}

uint64_t sub_1003564F0()
{
  return type metadata accessor for SDAirDropReceiveConnectionManager();
}

uint64_t type metadata accessor for SDAirDropReceiveConnectionManager()
{
  uint64_t result = qword_100970198;
  if (!qword_100970198) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100356544()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_100356660(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*a4;
  unint64_t v14 = sub_100583A00(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    os_log_type_t v20 = (void *)*a4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = (uint64_t *)(v20[7] + 16 * v14);
      uint64_t result = swift_unknownObjectRelease();
      *uint64_t v21 = a1;
      v21[1] = (uint64_t)&off_1008DE750;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_10058D02C();
    goto LABEL_7;
  }
  sub_1005860AC(v17, a3 & 1);
  unint64_t v23 = sub_100583A00(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  os_log_type_t v20 = (void *)*a4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_100356810(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_100356810(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v11 = (void *)(a4[7] + 16 * a1);
  void *v11 = a3;
  v11[1] = &off_1008DE750;
  uint64_t v12 = a4[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a4[2] = v14;
  }
  return result;
}

uint64_t sub_1003568D4(uint64_t a1, uint64_t (*a2)(uint64_t, id))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v4 = 0;
  for (unint64_t i = (void **)(a1 + 40); ; i += 2)
  {
    uint64_t v7 = (uint64_t)*(i - 1);
    char v6 = *i;
    swift_unknownObjectRetain();
    id v8 = v6;
    char v9 = a2(v7, v8);

    swift_unknownObjectRelease();
    if (v9) {
      break;
    }
    if (v2 == ++v4) {
      return 0;
    }
  }
  return v4;
}

void *sub_100356994(void *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  unint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  unint64_t v7 = a1[7];
  swift_bridgeObjectRetain();
  sub_100278C78(v2, v3);
  sub_10025ADCC(v4, v5);
  sub_10025ADCC(v6, v7);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100356A14(void *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  unint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  unint64_t v7 = a1[7];
  swift_bridgeObjectRelease();
  sub_100250CB0(v2, v3);
  sub_100250CC4(v4, v5);
  sub_100250CC4(v6, v7);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100356A94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100356AFC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100356B5C()
{
  return static SFAirDrop.TransferIdentifier.== infix(_:_:)() & 1;
}

BOOL sub_100356BA0(uint64_t a1)
{
  return *(void *)(v1 + 16) == a1;
}

uint64_t sub_100356BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_1009702F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100356C18()
{
  uint64_t v1 = *(void *)(sub_10000A844(&qword_1009702F8) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(type metadata accessor for SDAirDropServerConnection(0) - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v3 + v4 + v6) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  swift_release();
  uint64_t v9 = v0 + v3;
  uint64_t v10 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for SFAirDrop.TransferIdentifier();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v9, v11);
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    swift_release();
    uint64_t v13 = v0 + v7 + *(int *)(sub_10000A844(&qword_100970300) + 48);
    uint64_t v14 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v7 + v8, v2 | v6 | 7);
}

uint64_t sub_100356E50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100356EB8(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_10000A844(&qword_1009702F8) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for SDAirDropServerConnection(0) - 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_1003510E8(a1, v7, v1 + v4, v8);
}

uint64_t sub_100356F94()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100356FCC()
{
  uint64_t v1 = *(void *)(type metadata accessor for SDAirDropServerConnection(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  unint64_t v4 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(type metadata accessor for SDAirDropServerConnectionIdentity(0) - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v4 + v6 + 8) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = v0 + v3;
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    swift_release();
    uint64_t v11 = v9 + *(int *)(sub_10000A844(&qword_100970300) + 48);
    uint64_t v12 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    swift_release();
  }
  swift_release();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for SFAirDrop.TransferIdentifier();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v0 + v7, v13);
  }
  else
  {
    swift_unknownObjectRelease();
  }

  return _swift_deallocObject(v0, v7 + v8, v2 | v6 | 7);
}

uint64_t sub_1003571D8()
{
  uint64_t v1 = *(void *)(type metadata accessor for SDAirDropServerConnection(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(type metadata accessor for SDAirDropServerConnectionIdentity(0) - 8);
  uint64_t v5 = *(void *)(v0 + v3);
  uint64_t v6 = v0 + ((v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_100352C44(v0 + v2, v5, v6);
}

uint64_t sub_1003572B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003572C4()
{
  return swift_release();
}

uint64_t sub_1003572D0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SDAirDropServerConnectionIdentity(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_100352F5C(a1, v5, v6, v7, v8);
}

uint64_t sub_1003573CC()
{
  uint64_t v1 = *(void *)(sub_10000A844(&qword_1009702F8) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(type metadata accessor for SDAirDropServerConnection(0) - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v3 + v4 + v6) & ~v6;
  uint64_t v21 = *(void *)(v5 + 64);
  uint64_t v8 = type metadata accessor for NWConnection.State();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v20 = *(void *)(v9 + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v11 = v0 + v3;
  uint64_t v12 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for SFAirDrop.TransferIdentifier();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v11, v13);
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    swift_release();
    uint64_t v15 = v0 + v7 + *(int *)(sub_10000A844(&qword_100970300) + 48);
    uint64_t v16 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    swift_release();
  }
  uint64_t v17 = (v7 + v21 + v10) & ~v10;
  uint64_t v18 = v17 + v20;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v17, v8);

  return _swift_deallocObject(v0, v18, v2 | v6 | v10 | 7);
}

uint64_t sub_1003576AC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10000A844(&qword_1009702F8) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for SDAirDropServerConnection(0) - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for NWConnection.State() - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 32);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_10000A6F4;
  v16[8] = v14;
  v16[9] = v15;
  v16[6] = v12;
  v16[7] = v13;
  v16[5] = a1;
  return _swift_task_switch(sub_10035148C, 0, 0);
}

uint64_t sub_10035786C()
{
  uint64_t v1 = *(void *)(type metadata accessor for SDAirDropServerConnectionIdentity(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  swift_release();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for SFAirDrop.TransferIdentifier();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_unknownObjectRelease();
  }
  swift_errorRelease();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_100357998(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SDAirDropServerConnectionIdentity(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_10000A6F4;
  return sub_1003532E0(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_100357AC8()
{
  uint64_t v1 = *(void *)(type metadata accessor for SDAirDropServerConnectionIdentity(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  swift_release();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for SFAirDrop.TransferIdentifier();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_unknownObjectRelease();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100357BD8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SDAirDropServerConnectionIdentity(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_1003533BC(a1, v5, v6, v7, v8);
}

uint64_t sub_100357CD4(void *a1, char a2)
{
  return sub_10034BBBC(a1, a2);
}

uint64_t sub_100357CDC()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_100357D24(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_10034BD8C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100357DEC()
{
  return sub_100353794();
}

uint64_t sub_100357DF8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000A6F0;
  v3[2] = v2;
  return _swift_task_switch(sub_1003560C4, 0, 0);
}

uint64_t sub_100357EA4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000A6F0;
  v3[2] = v2;
  return _swift_task_switch(sub_100355C08, 0, 0);
}

uint64_t sub_100357F50()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000A6F0;
  v3[2] = v2;
  return _swift_task_switch(sub_10035583C, 0, 0);
}

uint64_t sub_100357FFC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000A6F0;
  v3[3] = v2;
  return _swift_task_switch(sub_1003554A0, 0, 0);
}

uint64_t sub_1003580AC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000A6F0;
  v3[2] = v2;
  return _swift_task_switch(sub_1003552E0, 0, 0);
}

uint64_t sub_100358154()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10035818C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1003581A0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1003581B8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000A6F0;
  v3[2] = v2;
  return _swift_task_switch(sub_100354140, 0, 0);
}

uint64_t sub_100358264()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003582A4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000A6F0;
  v3[2] = v2;
  return _swift_task_switch(sub_100353C44, 0, 0);
}

uint64_t sub_100358370()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844((uint64_t *)&unk_10097A4A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NWEndpoint.Port();
  uint64_t result = __chkstk_darwin(v5 - 8);
  uint64_t v7 = OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_listener;
  if (!*(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_listener])
  {
    uint64_t v8 = *(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_deviceStatus];
    unint64_t v23 = sub_10045F7D8();
    unint64_t v10 = v9;
    if (qword_100969C40 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000B47C(v11, (uint64_t)qword_1009704A0);
    swift_bridgeObjectRetain_n();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v21 = v8;
      uint64_t v14 = swift_slowAlloc();
      uint64_t v22 = v4;
      uint64_t v15 = (uint8_t *)v14;
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_100254634(v23, v10, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Starting AirDrop Bonjour Server %s", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v4 = v22;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v16 = sub_100460C0C();
    sub_100668468(v16);

    static NWEndpoint.Port.any.getter();
    type metadata accessor for NWListener();
    swift_allocObject();
    uint64_t v17 = NWListener.init(using:on:)();
    *(void *)&v1[v7] = v17;
    swift_retain();
    swift_release();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v1;
    *(void *)(v18 + 24) = v17;
    swift_retain();
    uint64_t v19 = v1;
    NWListener.stateUpdateHandler.setter();
    *(void *)(swift_allocObject() + 16) = v19;
    v19;
    NWListener.newConnectionHandler.setter();
    NWListener.start(queue:)();
    sub_1002FB17C();
    NWListener.Service.init(name:type:domain:txtRecord:)();
    uint64_t v20 = type metadata accessor for NWListener.Service();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v4, 0, 1, v20);
    NWListener.service.setter();
    return swift_release();
  }
  return result;
}

uint64_t sub_1003587F8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_1009704A0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_1009704A0);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1003588C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NWListener.State();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  uint64_t v5 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = 0;
  *((void *)v12 + 3) = 0;
  *((void *)v12 + 4) = v9;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v12[v11], (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  *(void *)&v12[(v4 + v11 + 7) & 0xFFFFFFFFFFFFFFF8] = v10;
  sub_10028CFD4((uint64_t)v7, (uint64_t)&unk_100970548, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_100358AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a1;
  v6[9] = a4;
  return _swift_task_switch(sub_100358B14, 0, 0);
}

uint64_t sub_100358B14()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 96) = Strong;
  if (Strong)
  {
    swift_beginAccess();
    uint64_t v2 = swift_weakLoadStrong();
    *(void *)(v0 + 104) = v2;
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100358C44;
    uint64_t v4 = *(void *)(v0 + 80);
    return sub_100358D9C(v4, v2);
  }
  else
  {
    **(unsigned char **)(v0 + 64) = 1;
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_100358C44()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 96);
  swift_task_dealloc();
  swift_release();

  return _swift_task_switch(sub_100358D74, 0, 0);
}

uint64_t sub_100358D74()
{
  **(unsigned char **)(v0 + 64) = *(void *)(v0 + 96) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100358D9C(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  sub_10000A844((uint64_t *)&unk_100975040);
  v3[13] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for NWError();
  v3[14] = v4;
  v3[15] = *(void *)(v4 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for NWListener.State();
  v3[20] = v5;
  v3[21] = *(void *)(v5 - 8);
  v3[22] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v3[23] = static AirDropActor.shared;
  return _swift_task_switch(sub_100358F50, v6, 0);
}

uint64_t sub_100358F50()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[20];
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 16))(v2, v0[10], v3);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88))(v2, v3);
  if (v4 == enum case for NWListener.State.waiting(_:))
  {
    uint64_t v5 = v0[22];
    uint64_t v6 = v0[19];
    uint64_t v8 = v0[14];
    uint64_t v7 = v0[15];
    (*(void (**)(uint64_t, void))(v0[21] + 96))(v5, v0[20]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v8);
    if (qword_100969C40 != -1) {
      swift_once();
    }
    uint64_t v10 = v0[18];
    uint64_t v9 = v0[19];
    uint64_t v11 = v0[14];
    uint64_t v12 = v0[15];
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000B47C(v13, (uint64_t)qword_1009704A0);
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
    v14(v10, v9, v11);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    BOOL v17 = os_log_type_enabled(v15, v16);
    uint64_t v18 = v0[18];
    uint64_t v20 = v0[14];
    uint64_t v19 = v0[15];
    if (v17)
    {
      os_log_type_t type = v16;
      unint64_t v76 = v14;
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v77 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 138412290;
      sub_10035B404(&qword_10096E020, (void (*)(uint64_t))&type metadata accessor for NWError);
      swift_allocError();
      v76(v22, v18, v20);
      uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
      v0[9] = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v77 = v23;
      uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v24(v18, v20);
      _os_log_impl((void *)&_mh_execute_header, v15, type, "AirDrop Bonjour server waiting with error %@", v21, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v24(v18, v20);
    }
    v24(v0[19], v0[14]);
    goto LABEL_42;
  }
  if (v4 == enum case for NWListener.State.failed(_:))
  {
    uint64_t v25 = v0[22];
    uint64_t v26 = v0[17];
    uint64_t v27 = v0[14];
    uint64_t v28 = v0[15];
    (*(void (**)(uint64_t, void))(v0[21] + 96))(v25, v0[20]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v26, v25, v27);
    if (qword_100969C40 != -1) {
      swift_once();
    }
    uint64_t v29 = v0[16];
    uint64_t v30 = v0[17];
    uint64_t v31 = v0[14];
    uint64_t v32 = v0[15];
    uint64_t v33 = type metadata accessor for Logger();
    sub_10000B47C(v33, (uint64_t)qword_1009704A0);
    os_log_type_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
    v34(v29, v30, v31);
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    BOOL v37 = os_log_type_enabled(v35, v36);
    uint64_t v39 = v0[15];
    uint64_t v38 = v0[16];
    uint64_t v40 = v0[14];
    if (v37)
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      unint64_t v78 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 138412290;
      sub_10035B404(&qword_10096E020, (void (*)(uint64_t))&type metadata accessor for NWError);
      swift_allocError();
      v34(v42, v38, v40);
      uint64_t v43 = _swift_stdlib_bridgeErrorToNSError();
      v0[8] = v43;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v78 = v43;
      os_log_type_t v44 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
      v44(v38, v40);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "AirDrop Bonjour server failed with error %@", v41, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      os_log_type_t v44 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
      v44(v0[16], v0[14]);
    }

    v0[25] = v44;
    if (v0[11]) {
      NWListener.cancel()();
    }
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    v0[26] = Strong;
    if (Strong)
    {
      uint64_t v51 = (void *)swift_task_alloc();
      v0[27] = v51;
      *uint64_t v51 = v0;
      v51[1] = sub_100359BA0;
      uint64_t v52 = v0[17];
      return sub_1003497CC(1, v52);
    }
    ((void (*)(void, void))v0[25])(v0[17], v0[14]);
LABEL_42:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v68 = (uint64_t (*)(void))v0[1];
    return v68();
  }
  if (v4 == enum case for NWListener.State.setup(_:))
  {
    if (qword_100969C40 != -1) {
      swift_once();
    }
    uint64_t v45 = type metadata accessor for Logger();
    sub_10000B47C(v45, (uint64_t)qword_1009704A0);
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v46, v47)) {
      goto LABEL_41;
    }
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v48 = 0;
    uint64_t v49 = "AirDrop Bonjour server setting up";
LABEL_40:
    _os_log_impl((void *)&_mh_execute_header, v46, v47, v49, v48, 2u);
    swift_slowDealloc();
LABEL_41:

    goto LABEL_42;
  }
  if (v4 != enum case for NWListener.State.ready(_:))
  {
    if (v4 != enum case for NWListener.State.cancelled(_:))
    {
      if (qword_100969C40 != -1) {
        swift_once();
      }
      uint64_t v69 = type metadata accessor for Logger();
      sub_10000B47C(v69, (uint64_t)qword_1009704A0);
      uint64_t v70 = Logger.logObject.getter();
      os_log_type_t v71 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v72 = 0;
        _os_log_impl((void *)&_mh_execute_header, v70, v71, "Unknown AirDrop server state", v72, 2u);
        swift_slowDealloc();
      }
      uint64_t v74 = v0[21];
      uint64_t v73 = v0[22];
      uint64_t v75 = v0[20];

      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v73, v75);
      goto LABEL_42;
    }
    if (qword_100969C40 != -1) {
      swift_once();
    }
    uint64_t v67 = type metadata accessor for Logger();
    sub_10000B47C(v67, (uint64_t)qword_1009704A0);
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v46, v47)) {
      goto LABEL_41;
    }
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v48 = 0;
    uint64_t v49 = "AirDrop Bonjour server stopped";
    goto LABEL_40;
  }
  if (qword_100969C40 != -1) {
    swift_once();
  }
  uint64_t v54 = type metadata accessor for Logger();
  sub_10000B47C(v54, (uint64_t)qword_1009704A0);
  unint64_t v55 = Logger.logObject.getter();
  os_log_type_t v56 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v55, v56))
  {
    long long v57 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v57 = 0;
    _os_log_impl((void *)&_mh_execute_header, v55, v56, "AirDrop Bonjour server ready", v57, 2u);
    swift_slowDealloc();
  }
  uint64_t v59 = v0[12];
  uint64_t v58 = v0[13];

  uint64_t v60 = *(void *)(v59 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_sessionLogger);
  Date.init()();
  uint64_t v61 = type metadata accessor for Date();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v58, 0, 1, v61);
  uint64_t v62 = v60 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_bonjourServerStartDate;
  swift_beginAccess();
  sub_100340238(v58, v62);
  swift_endAccess();
  NSString v63 = String._bridgeToObjectiveC()();
  uint64_t v64 = getpid();
  sub_100046EFC(@"BonjourAdvertise", @"Start", (uint64_t)v63, v64);

  uint64_t v65 = swift_unknownObjectWeakLoadStrong();
  v0[24] = v65;
  if (!v65) {
    goto LABEL_42;
  }
  uint64_t v66 = static AirDropActor.shared;
  return _swift_task_switch(sub_100359A54, v66, 0);
}

uint64_t sub_100359A54()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = (void *)(*(void *)(v0 + 192)
                + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_bonjourServerErrors);
  swift_beginAccess();
  *uint64_t v2 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_100359AFC, v1, 0);
}

uint64_t sub_100359AFC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100359BA0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 184);
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_100359CCC, v1, 0);
}

uint64_t sub_100359CCC()
{
  (*(void (**)(void, void))(v0 + 200))(*(void *)(v0 + 136), *(void *)(v0 + 112));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100359D8C(uint64_t a1)
{
  uint64_t v2 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = 0;
  v7[3] = 0;
  v7[4] = v6;
  _OWORD v7[5] = a1;
  swift_retain();
  sub_10028CFD4((uint64_t)v4, (uint64_t)&unk_100970528, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_100359EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return _swift_task_switch(sub_100359ED8, 0, 0);
}

uint64_t sub_100359ED8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 64) = Strong;
  if (Strong)
  {
    if (qword_100969B90 != -1) {
      swift_once();
    }
    uint64_t v2 = static AirDropActor.shared;
    return _swift_task_switch(sub_100359FD8, v2, 0);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_100359FD8()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_10035A044(*(void *)(v0 + 56));

  return _swift_task_switch(sub_1002D1768, 0, 0);
}

uint64_t sub_10035A044(uint64_t a1)
{
  uint64_t v3 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050C434();
  uint64_t v6 = (void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_connections);
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = qword_100969B90;
  swift_retain();
  swift_retain();
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v10 = static AirDropActor.shared;
  uint64_t v11 = sub_10035B404((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v10;
  v12[3] = v11;
  v12[4] = a1;
  v12[5] = v8;
  swift_retain();
  swift_release();
  sub_10028CFA8((uint64_t)v5, (uint64_t)&unk_100970538, (uint64_t)v12);
  return swift_release();
}

void sub_10035A278()
{
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_listener;
  if (*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_listener))
  {
    uint64_t v2 = v0;
    uint64_t v3 = qword_100969C40;
    swift_retain();
    if (v3 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_1009704A0);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Stopping AirDrop Bonjour Server", v7, 2u);
      swift_slowDealloc();
    }

    NWListener.cancel()();
    sub_10056ACFC(1);
    sub_10035A47C(&OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_serverType, &OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_connections);
    *(void *)(v2 + v1) = 0;
    swift_release();
    [*(id *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_deviceStatus) setNextAirDropID:0];
    if (@"AirDropID")
    {
      CFPreferencesSetValue(@"AirDropID", 0, kCFPreferencesCurrentApplication, kCFPreferencesCurrentUser, kCFPreferencesCurrentHost);
      CFPreferencesSynchronize(kCFPreferencesCurrentApplication, kCFPreferencesCurrentUser, kCFPreferencesCurrentHost);
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10035A454()
{
  return sub_10035A47C(&OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_serverType, &OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_connections);
}

uint64_t sub_10035A468()
{
  return sub_10035A47C(&OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_serverType, &OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_connections);
}

uint64_t sub_10035A47C(void *a1, void *a2)
{
  if (qword_100969D10 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000B47C(v5, (uint64_t)qword_1009709E8);
  os_log_type_t v6 = v2;
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    v19[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    unint64_t v10 = 0xEE00726576726553;
    uint64_t v11 = 0x2072756F6A6E6F42;
    if (v6[*a1] != 1)
    {
      uint64_t v11 = 0x656946207261654ELL;
      unint64_t v10 = 0xEA0000000000646CLL;
    }
    if (v6[*a1]) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0xD00000000000001ALL;
    }
    if (v6[*a1]) {
      unint64_t v13 = v10;
    }
    else {
      unint64_t v13 = 0x80000001007BA550;
    }
    sub_100254634(v12, v13, v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Cancelling all connections associated with %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v14 = (uint64_t *)&v6[*a2];
  swift_beginAccess();
  uint64_t v15 = *v14;
  if (!((unint64_t)*v14 >> 62))
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v16) {
      goto LABEL_16;
    }
LABEL_23:
    swift_bridgeObjectRelease_n();
    uint64_t *v14 = (uint64_t)_swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v16 = result;
  if (!result) {
    goto LABEL_23;
  }
LABEL_16:
  if (v16 >= 1)
  {
    for (uint64_t i = 0; i != v16; ++i)
    {
      if ((v15 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      NWConnection.cancel()();
      swift_release();
    }
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_10035A764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[8] = type metadata accessor for SDAirDropServerConnection(0);
  v5[9] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  return _swift_task_switch(sub_10035A830, v6, 0);
}

uint64_t sub_10035A830()
{
  uint64_t v15 = v0;
  if (qword_100969C40 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_1009704A0);
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v5 = NWConnection.debugDescription.getter();
    *(void *)(v0 + 40) = sub_100254634(v5, v6, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Received AirDrop Bonjour connection %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v8 = (void *)Strong, v9 = swift_unknownObjectWeakLoadStrong(), *(void *)(v0 + 80) = v9, v8, v9))
  {
    **(void **)(v0 + 72) = *(void *)(v0 + 48);
    swift_storeEnumTagMultiPayload();
    swift_retain();
    unint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v10;
    *unint64_t v10 = v0;
    v10[1] = sub_10035AB18;
    uint64_t v11 = *(void *)(v0 + 72);
    return sub_1003448AC(v11);
  }
  else
  {
    swift_task_dealloc();
    unint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
}

uint64_t sub_10035AB18()
{
  uint64_t v1 = *(void *)(*v0 + 72);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  sub_10035B15C(v1);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t type metadata accessor for SDAirDropBonjourServer()
{
  return self;
}

uint64_t sub_10035AD44()
{
  return swift_retain();
}

uint64_t sub_10035AD54()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_serverType);
}

id sub_10035AD68(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_listener] = 0;
  v6[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_serverType] = 1;
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_connections] = _swiftEmptyArrayStorage;
  uint64_t v12 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_delegate];
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_deviceStatus] = a1;
  unint64_t v13 = (objc_class *)type metadata accessor for SDAirDropDeviceSupportManager();
  uint64_t v14 = (char *)objc_allocWithZone(v13);
  *(void *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropDeviceSupportManager_deviceStatus] = a1;
  *(void *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary29SDAirDropDeviceSupportManager_nearbyAgent] = a2;
  v22.receiver = v14;
  v22.super_class = v13;
  id v15 = a1;
  uint64_t v16 = v6;
  id v17 = a2;
  *(void *)&v16[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_deviceSupportManager] = [v22 init];
  *(void *)&v16[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_sessionLogger] = a3;
  *(void *)&v16[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_queue] = a4;
  *((void *)v12 + 1) = a6;
  swift_unknownObjectWeakAssign();
  swift_retain();
  id v18 = a4;

  v21.receiver = v16;
  v21.super_class = ObjectType;
  return [super init];
}

uint64_t sub_10035AED8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10035AF18(uint64_t a1)
{
  return sub_1003588C0(a1);
}

uint64_t sub_10035AF20()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10035AF58(uint64_t a1)
{
  return sub_100359D8C(a1);
}

uint64_t sub_10035AF60()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10035AF9C(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_10000A6F0;
  *(_OWORD *)(v4 + 48) = v5;
  *(void *)(v4 + 40) = a1;
  return _swift_task_switch(sub_100359ED8, 0, 0);
}

uint64_t sub_10035B054()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10035B09C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10000A6F4;
  return sub_10035A764(a1, v4, v5, v7, v6);
}

uint64_t sub_10035B15C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDAirDropServerConnection(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10035B1B8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10035B1F0()
{
  uint64_t v1 = type metadata accessor for NWListener.State();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10035B2E0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for NWListener.State() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000A6F0;
  v9[10] = v7;
  v9[11] = v8;
  v9[8] = a1;
  v9[9] = v6;
  return _swift_task_switch(sub_100358B14, 0, 0);
}

uint64_t sub_10035B404(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10035B44C(uint64_t a1)
{
  return sub_10035B7B8(a1, qword_100994528);
}

id sub_10035B474(uint64_t a1)
{
  return sub_10035B6C8(a1, qword_100994540, (uint64_t (*)(void))&_airdrop_log);
}

id sub_10035B494(uint64_t a1)
{
  return sub_10035B6C8(a1, qword_100994558, (uint64_t (*)(void))&_airdrop_nw_log);
}

uint64_t sub_10035B4B4(uint64_t a1)
{
  return sub_10035B7B8(a1, qword_100994570);
}

uint64_t sub_10035B4E0(uint64_t a1)
{
  return sub_10035B7B8(a1, qword_100994588);
}

uint64_t sub_10035B504(uint64_t a1)
{
  return sub_10035B7B8(a1, qword_1009945A0);
}

uint64_t sub_10035B528(uint64_t a1)
{
  return sub_10035B7B8(a1, qword_1009945B8);
}

uint64_t sub_10035B54C(uint64_t a1)
{
  return sub_10035B7B8(a1, qword_1009945D0);
}

uint64_t sub_10035B570(uint64_t a1)
{
  return sub_10035B7B8(a1, qword_1009945E8);
}

uint64_t sub_10035B594(uint64_t a1)
{
  return sub_10035B7B8(a1, qword_100994600);
}

uint64_t sub_10035B5B8(uint64_t a1)
{
  return sub_10035B7B8(a1, qword_100994618);
}

uint64_t sub_10035B5DC(uint64_t a1)
{
  return sub_10035B7B8(a1, qword_100994630);
}

uint64_t sub_10035B600(uint64_t a1)
{
  return sub_10035B7B8(a1, qword_100994648);
}

id sub_10035B624(uint64_t a1)
{
  return sub_10035B6C8(a1, qword_100994660, (uint64_t (*)(void))&_b389_log);
}

id sub_10035B644(uint64_t a1)
{
  return sub_10035B6C8(a1, qword_100994678, (uint64_t (*)(void))&b332_log);
}

uint64_t sub_10035B664(uint64_t a1)
{
  return sub_10035B7B8(a1, qword_100994690);
}

id sub_10035B688(uint64_t a1)
{
  return sub_10035B6C8(a1, qword_1009946A8, (uint64_t (*)(void))&sharingHUDLog);
}

id sub_10035B6A8(uint64_t a1)
{
  return sub_10035B6C8(a1, qword_1009946C0, (uint64_t (*)(void))&_authentications_log);
}

id sub_10035B6C8(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v5 = type metadata accessor for Logger();
  sub_10024A2B8(v5, a2);
  sub_10000B47C(v5, (uint64_t)a2);
  id result = (id)a3();
  if (result) {
    return (id)Logger.init(_:)();
  }
  __break(1u);
  return result;
}

uint64_t sub_10035B738(uint64_t a1)
{
  return sub_10035B7B8(a1, qword_1009946D8);
}

uint64_t sub_10035B754(uint64_t a1)
{
  return sub_10035B7B8(a1, qword_1009946F0);
}

uint64_t sub_10035B770(uint64_t a1)
{
  return sub_10035B7B8(a1, qword_100994708);
}

uint64_t sub_10035B794(uint64_t a1)
{
  return sub_10035B7B8(a1, qword_100994720);
}

uint64_t sub_10035B7B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  sub_10024A2B8(v3, a2);
  sub_10000B47C(v3, (uint64_t)a2);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_10035B830()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100970558);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100970558);
  if (qword_100969CD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946C0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_10035B8F8(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *, uint64_t))
{
  unint64_t v55 = a6;
  id v58 = a1;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  os_log_type_t v56 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v53 - v15;
  v6[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_requestArmingUI] = 0;
  v6[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_armingUITransportType] = 3;
  id v17 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_passcode];
  *id v17 = a4;
  v17[1] = a5;
  uint64_t v59 = a3;
  sub_100278C8C(a3, (uint64_t)&v64);
  id v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  long long v57 = a2;
  v18(v16, (uint64_t)a2, v11);
  type metadata accessor for SDAuthenticationAKSPairingSession();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksSession) = 0;
  uint64_t v20 = self;
  objc_super v21 = v6;
  id result = [v20 sharedManager];
  if (result)
  {
    *(void *)(v19 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager) = result;
    *(unsigned char *)(v19 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_role) = 0;
    sub_1002AF688(&v64, v19 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v19 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_sessionID, v16, v11);
    uint64_t v23 = v55;
    *(void *)(v19 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_type) = v55;
    *(void *)&v21[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_aksPairingSession] = v19;

    uint64_t v24 = v56;
    uint64_t v25 = v57;
    v18(v56, (uint64_t)v57, v11);
    uint64_t v26 = &v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    *(_OWORD *)uint64_t v26 = 0u;
    *((_OWORD *)v26 + 1) = 0u;
    *((void *)v26 + 4) = 0;
    uint64_t v27 = &v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
    *(_OWORD *)uint64_t v27 = 0u;
    *((_OWORD *)v27 + 1) = 0u;
    *((void *)v27 + 4) = 0;
    *(void *)&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_responseTimer] = 0;
    id v28 = v58;
    *(void *)&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue] = v58;
    v18(&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_sessionID], (uint64_t)v24, v11);
    *(void *)&v21[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type] = v23;
    uint64_t v29 = (objc_class *)type metadata accessor for SDAuthenticationSession();
    v63.receiver = v21;
    v63.super_class = v29;
    id v58 = v28;
    id v30 = [super init];
    uint64_t v31 = *(void (**)(char *, uint64_t))(v12 + 8);
    v31(v24, v11);
    uint64_t v32 = v59;
    sub_100278C8C(v59, (uint64_t)&v64);
    uint64_t v33 = (uint64_t)v30 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
    swift_beginAccess();
    id v34 = v30;
    sub_1003610D8((uint64_t)&v64, v33);
    swift_endAccess();
    uint64_t v35 = v25;
    uint64_t v36 = v11;
    uint64_t v37 = v32;
    uint64_t v38 = (char *)(v12 + 8);
    if (qword_100969CF8 != -1) {
      swift_once();
    }
    uint64_t v39 = type metadata accessor for Logger();
    sub_10000B47C(v39, (uint64_t)qword_100970558);
    sub_100278C8C(v32, (uint64_t)&v64);
    id v40 = v34;
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v54 = v36;
      unint64_t v55 = v31;
      os_log_type_t v56 = v38;
      uint64_t v43 = swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136315650;
      uint64_t v44 = UUID.uuidString.getter();
      uint64_t v61 = sub_100254634(v44, v45, &v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      uint64_t v46 = v65;
      uint64_t v47 = v66;
      sub_10026BB6C(&v64, v65);
      uint64_t v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8))(v46, v47);
      if (v49)
      {
        unint64_t v50 = v49;
      }
      else
      {
        uint64_t v61 = 0;
        unint64_t v62 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        unint64_t v50 = 0x80000001007B7770;
        uint64_t v48 = 0xD000000000000015;
      }
      uint64_t v61 = sub_100254634(v48, v50, &v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10024D338((uint64_t)&v64);
      *(_WORD *)(v43 + 22) = 2080;
      uint64_t v51 = sub_10050938C();
      uint64_t v61 = sub_100254634(v51, v52, &v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Begin SDAuthenticationPairingLockSession %s for device: %s with %s", (uint8_t *)v43, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_10024D338(v59);
      v55(v35, v54);
    }
    else
    {

      sub_10024D338((uint64_t)&v64);
      sub_10024D338(v37);
      v31(v35, v36);
    }
    return v40;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10035BF70()
{
  uint64_t v1 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TaskPriority();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  uint64_t v6 = (void *)swift_allocObject();
  void v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  id v8 = v0;
  if (v7 == 1)
  {
    sub_10000A7E8((uint64_t)v3, &qword_10096C920);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_1009705C0;
  *(void *)(v12 + 24) = v6;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    id v14[2] = v9;
    uint64_t v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_10035C1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[33] = a4;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  v4[34] = v5;
  v4[35] = *(void *)(v5 - 8);
  v4[36] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DispatchQoS();
  v4[37] = v6;
  v4[38] = *(void *)(v6 - 8);
  v4[39] = swift_task_alloc();
  return _swift_task_switch(sub_10035C2CC, 0, 0);
}

uint64_t sub_10035C2CC()
{
  uint64_t v26 = v0;
  uint64_t v1 = *(void *)(v0 + 264);
  if (*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type) == 8)
  {
    uint64_t v4 = sub_10035D1BC(0, 0xF000000000000000);
    unint64_t v6 = v5;
    uint64_t v7 = *(void *)(v0 + 264) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
    swift_beginAccess();
    sub_10024A330(v7, v0 + 64, &qword_10097BB50);
    if (*(void *)(v0 + 88))
    {
      uint64_t v22 = *(void *)(v0 + 312);
      uint64_t v8 = *(void *)(v0 + 288);
      uint64_t v23 = *(void *)(v0 + 304);
      uint64_t v24 = *(void *)(v0 + 296);
      uint64_t v10 = *(void *)(v0 + 272);
      uint64_t v9 = *(void *)(v0 + 280);
      uint64_t v11 = *(void **)(v0 + 264);
      sub_1002AF688((long long *)(v0 + 64), v0 + 144);
      sub_100278C8C(v0 + 144, v0 + 104);
      uint64_t v12 = (void *)swift_allocObject();
      void v12[2] = v11;
      v12[3] = v4;
      v12[4] = v6;
      sub_1002AF688((long long *)(v0 + 104), (uint64_t)(v12 + 5));
      *(void *)(v0 + 48) = sub_100361060;
      *(void *)(v0 + 56) = v12;
      *(void *)(v0 + 16) = _NSConcreteStackBlock;
      *(void *)(v0 + 24) = 1107296256;
      *(void *)(v0 + 32) = sub_100296520;
      *(void *)(v0 + 40) = &unk_1008D7C48;
      uint64_t v13 = _Block_copy((const void *)(v0 + 16));
      id v14 = v11;
      sub_10025ADCC(v4, v6);
      static DispatchQoS.unspecified.getter();
      *(void *)(v0 + 256) = _swiftEmptyArrayStorage;
      sub_100361140((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10000A844((uint64_t *)&unk_10096C490);
      sub_1002B4B9C();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v13);
      sub_100250CB0(0, 0xF000000000000000);
      sub_100250CC4(v4, v6);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
      sub_10024D338(v0 + 144);
      swift_release();
    }
    else
    {
      sub_10000A7E8(v0 + 64, &qword_10097BB50);
      if (qword_100969CF8 != -1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      sub_10000B47C(v16, (uint64_t)qword_100970558);
      id v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 136315138;
        *(void *)(v0 + 240) = sub_100254634(0xD000000000000021, 0x80000001007BA830, &v25);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s", v19, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      sub_10024D280();
      uint64_t v20 = swift_allocError();
      *(_DWORD *)uint64_t v21 = 10;
      *(void *)(v21 + 8) = 0xD000000000000021;
      *(void *)(v21 + 16) = 0x80000001007BA830;
      swift_willThrow();
      sub_100250CC4(v4, v6);
      sub_100250CB0(0, 0xF000000000000000);
      *(void *)(v0 + 232) = v20;
      swift_errorRetain();
      sub_10000A844(&qword_10096BAF0);
      if (swift_dynamicCast())
      {
        swift_errorRelease();
        sub_10035D91C(*(_DWORD *)(v0 + 184), *(void *)(v0 + 192), *(void *)(v0 + 200));
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_errorRelease();
        *(void *)(v0 + 248) = v20;
        swift_errorRetain();
        type metadata accessor for SFAuthenticationError(0);
        if (swift_dynamicCast())
        {
          swift_errorRelease();
          sub_10035D91C(*(_DWORD *)(v0 + 360), 0, 0xE000000000000000);
        }
        else
        {
          swift_errorRelease();
          sub_10035D91C(10, 0, 0xE000000000000000);
        }
      }
      swift_errorRelease();
    }
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
  else
  {
    *(void *)(v0 + 320) = *(void *)(v1
                                      + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_aksPairingSession);
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 328) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10035C930;
    return sub_1006AE518();
  }
}

uint64_t sub_10035C930(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 336) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_10035D048;
  }
  else
  {
    swift_release();
    *(void *)(v6 + 344) = a2;
    *(void *)(v6 + 352) = a1;
    uint64_t v7 = sub_10035CA6C;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_10035CA6C()
{
  id v28 = v0;
  unint64_t v2 = v0[43];
  uint64_t v1 = v0[44];
  uint64_t v3 = v0[42];
  uint64_t v4 = sub_10035D1BC(v1, v2);
  uint64_t v6 = v3;
  if (v3)
  {
LABEL_2:
    sub_100250CB0(v1, v2);
    v0[29] = v6;
    swift_errorRetain();
    sub_10000A844(&qword_10096BAF0);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      sub_10035D91C(*((_DWORD *)v0 + 46), v0[24], v0[25]);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_errorRelease();
      v0[31] = v6;
      swift_errorRetain();
      type metadata accessor for SFAuthenticationError(0);
      if (swift_dynamicCast())
      {
        swift_errorRelease();
        sub_10035D91C(*((_DWORD *)v0 + 90), 0, 0xE000000000000000);
      }
      else
      {
        swift_errorRelease();
        sub_10035D91C(10, 0, 0xE000000000000000);
      }
    }
    swift_errorRelease();
    goto LABEL_10;
  }
  uint64_t v7 = v4;
  unint64_t v8 = v5;
  uint64_t v9 = v0[33] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
  swift_beginAccess();
  sub_10024A330(v9, (uint64_t)(v0 + 8), &qword_10097BB50);
  if (!v0[11])
  {
    sub_10000A7E8((uint64_t)(v0 + 8), &qword_10097BB50);
    if (qword_100969CF8 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_10000B47C(v17, (uint64_t)qword_100970558);
    os_log_type_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      v0[30] = sub_100254634(0xD000000000000021, 0x80000001007BA830, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "%s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10024D280();
    uint64_t v6 = swift_allocError();
    *(_DWORD *)uint64_t v21 = 10;
    *(void *)(v21 + 8) = 0xD000000000000021;
    *(void *)(v21 + 16) = 0x80000001007BA830;
    swift_willThrow();
    sub_100250CC4(v7, v8);
    goto LABEL_2;
  }
  uint64_t v25 = v0[38];
  uint64_t v26 = v0[37];
  uint64_t v22 = v0[39];
  uint64_t v23 = v0[36];
  uint64_t v10 = v0[34];
  uint64_t v24 = v0[35];
  uint64_t v11 = (void *)v0[33];
  sub_1002AF688((long long *)v0 + 4, (uint64_t)(v0 + 18));
  sub_100278C8C((uint64_t)(v0 + 18), (uint64_t)(v0 + 13));
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v11;
  v12[3] = v7;
  v12[4] = v8;
  sub_1002AF688((long long *)(v0 + 13), (uint64_t)(v12 + 5));
  v0[6] = sub_100361060;
  v0[7] = v12;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100296520;
  v0[5] = &unk_1008D7C48;
  uint64_t v13 = _Block_copy(v0 + 2);
  id v14 = v11;
  sub_10025ADCC(v7, v8);
  static DispatchQoS.unspecified.getter();
  v0[32] = _swiftEmptyArrayStorage;
  sub_100361140((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002B4B9C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);
  sub_100250CB0(v1, v2);
  sub_100250CC4(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v10);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v22, v26);
  sub_10024D338((uint64_t)(v0 + 18));
  swift_release();
LABEL_10:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_10035D048()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 336);
  *(void *)(v0 + 232) = v1;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    sub_10035D91C(*(_DWORD *)(v0 + 184), *(void *)(v0 + 192), *(void *)(v0 + 200));
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_errorRelease();
    *(void *)(v0 + 248) = v1;
    swift_errorRetain();
    type metadata accessor for SFAuthenticationError(0);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      sub_10035D91C(*(_DWORD *)(v0 + 360), 0, 0xE000000000000000);
    }
    else
    {
      swift_errorRelease();
      sub_10035D91C(10, 0, 0xE000000000000000);
    }
  }
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10035D1BC(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  id v5 = [objc_allocWithZone((Class)SDAuthenticationPairingRequest) init];
  uint64_t v6 = v5;
  if (!v5)
  {
LABEL_7:
    if (qword_100969CF8 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    uint64_t v12 = (uint8_t *)sub_10000B47C(v11, (uint64_t)qword_100970558);
    id v13 = v6;
    id v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v26 = v12;
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 138412290;
      if (v6)
      {
        uint64_t v27 = (uint64_t)v13;
        id v18 = v13;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        os_log_type_t v19 = v6;
      }
      else
      {
        uint64_t v27 = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        os_log_type_t v19 = 0;
      }
      *uint64_t v17 = v19;

      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Generated pairing request %@", v16, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v12 = v26;
      if (!v6) {
        goto LABEL_18;
      }
    }
    else
    {

      if (!v6) {
        goto LABEL_18;
      }
    }
    id v20 = [v13 data];
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v12 = (uint8_t *)static Data._unconditionallyBridgeFromObjectiveC(_:)();

      return (uint64_t)v12;
    }
LABEL_18:
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      sub_100254634(0xD000000000000020, 0x80000001007BA860, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "%s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v24 = 10;
    *(void *)(v24 + 8) = 0xD000000000000020;
    *(void *)(v24 + 16) = 0x80000001007BA860;
    swift_willThrow();

    return (uint64_t)v12;
  }
  [v5 setVersion:1];
  id v7 = v6;
  UUID.uuidString.getter();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setSessionID:v8];

  id v9 = v7;
  if (a2 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
  }
  [v9 setLongTermKey:isa];

  if (!HIDWORD(*(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type)))
  {
    [v9 setType:];
    goto LABEL_7;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10035D68C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
  swift_beginAccess();
  sub_10024A330(v8, (uint64_t)&v19, &qword_100978040);
  if (v20)
  {
    sub_1002AF688(&v19, (uint64_t)v21);
    if (qword_100969CF8 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000B47C(v9, (uint64_t)qword_100970558);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Sending authentication pairing request", v12, 2u);
      swift_slowDealloc();
    }

    sub_10026BB6C(v21, v21[3]);
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_requestArmingUI) == 1) {
      char v13 = *(unsigned char *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_armingUITransportType);
    }
    else {
      char v13 = sub_100508B74(*(void *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type));
    }
    sub_1006FA9F0(a2, a3, a4, 3, v13);
    sub_10024D338((uint64_t)v21);
  }
  else
  {
    sub_10000A7E8((uint64_t)&v19, &qword_100978040);
    if (qword_100969CF8 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10000B47C(v14, (uint64_t)qword_100970558);
    os_log_type_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Warning: No delegate to send response to", v17, 2u);
      swift_slowDealloc();
    }
  }
  return sub_100507F28(0, 1);
}

uint64_t sub_10035D91C(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v3;
  *(_DWORD *)(v15 + 24) = a1;
  *(void *)(v15 + 32) = a2;
  *(void *)(v15 + 40) = a3;
  aBlock[4] = sub_1003610C8;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008D7C98;
  os_log_type_t v16 = _Block_copy(aBlock);
  uint64_t v17 = v3;
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  v19[1] = _swiftEmptyArrayStorage;
  sub_100361140((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002B4B9C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

void sub_10035DBD8(void *a1)
{
  uint64_t v2 = v1;
  if (qword_100969CF8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = sub_10000B47C(v4, (uint64_t)qword_100970558);
  id v6 = a1;
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v109 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    unint64_t v114 = (unint64_t)v6;
    id v10 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v109 = v6;

    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Handling authentication pairing response: %@", v9, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_100508854();
  if ([v6 hasErrorCode])
  {
    unsigned int v11 = [v6 errorCode];
    _StringGuts.grow(_:)(32);
    swift_bridgeObjectRelease();
    unint64_t v114 = 0xD00000000000001ELL;
    uint64_t v115 = 0x80000001007BA950;
    id v12 = (id)SFAuthenticationErrorToString();
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;

    v16._countAndFlagsBits = v13;
    v16._object = v15;
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    unint64_t v17 = 0xD00000000000001ELL;
    unint64_t v18 = 0x80000001007BA950;
    sub_10024D280();
    uint64_t v20 = swift_allocError();
    *(_DWORD *)uint64_t v19 = v11;
LABEL_8:
    *(void *)(v19 + 8) = v17;
    *(void *)(v19 + 16) = v18;
LABEL_9:
    swift_willThrow();
    goto LABEL_10;
  }
  uint64_t v21 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  if (*(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type] != 8)
  {
LABEL_16:
    id v28 = [v6 token];
    if (!v28)
    {
      sub_10024D280();
      uint64_t v20 = swift_allocError();
      *(_DWORD *)uint64_t v51 = 10;
      strcpy((char *)(v51 + 8), "Missing token");
      *(_WORD *)(v51 + 22) = -4864;
      goto LABEL_9;
    }
    uint64_t v29 = v28;
    uint64_t v30 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v32 = v31;

    if (([v6 hasLongTermKey] & 1) == 0
      || *(void *)&v2[v21] == 8
      || (id v33 = [v6 longTermKey]) == 0)
    {
      sub_10025ADCC(v30, v32);
      swift_retain();
      sub_1006B0B04();
      uint64_t v66 = (void *)sub_1006B0308(v30, v32);
      sub_100250CC4(v30, v32);
      swift_release();
      goto LABEL_37;
    }
    id v34 = v33;
    uint64_t v35 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v37 = v36;

    uint64_t v38 = (char *)[self sharedManager];
    unint64_t v107 = v37;
    unint64_t v108 = v35;
    uint64_t v109 = (void *)v30;
    uint64_t v102 = v5;
    if (!v38)
    {
LABEL_51:
      uint64_t v106 = v2;
      uint64_t v87 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_aksPairingSession];
      uint64_t v105 = *(uint64_t **)(v87 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager);
      swift_retain();
      sub_10025ADCC(v35, v37);
      sub_10025ADCC(v30, v32);
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      uint64_t v88 = *(void *)(v87 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 24);
      uint64_t v89 = *(void *)(v87 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 32);
      uint64_t v90 = sub_10026BB6C((void *)(v87 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice), v88);
      uint64_t v103 = &v102;
      uint64_t v91 = *(void *)(v88 - 8);
      __chkstk_darwin(v90);
      uint64_t v93 = (char *)&v102 - v92;
      (*(void (**)(char *))(v91 + 16))((char *)&v102 - v92);
      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v88, v89);
      uint64_t v95 = v94;
      (*(void (**)(char *, uint64_t))(v91 + 8))(v93, v88);
      if (v95)
      {
        NSString v96 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v96 = 0;
      }
      Class v97 = isa;
      [v105 signAndStoreRemoteLTK:isa forDeviceID:v96 v102 v103];

      sub_1006AFDE8();
      uint64_t v2 = v106;
      uint64_t v30 = (uint64_t)v109;
      uint64_t v66 = (void *)sub_1006B0308((uint64_t)v109, v32);
      uint64_t v99 = v108;
      unint64_t v100 = v107;
      sub_100250CC4(v108, v107);
      sub_100250CC4(v30, v32);
      sub_100250CC4(v99, v100);
      swift_release();
LABEL_37:
      if ([v6 hasRequestArmingUI])
      {
        uint64_t v67 = Logger.logObject.getter();
        os_log_type_t v68 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v67, v68))
        {
          uint64_t v69 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v69 = 0;
          _os_log_impl((void *)&_mh_execute_header, v67, v68, "Got request to show arming UI on successful registration", v69, 2u);
          swift_slowDealloc();
        }

        unsigned __int8 v70 = [v6 requestArmingUI];
        v2[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_requestArmingUI] = v70;
      }
      id v71 = [objc_allocWithZone((Class)SDAuthenticationPairingCreateSecret) init];
      if (v71)
      {
        uint64_t v72 = v71;
        UUID.uuidString.getter();
        uint64_t v73 = v66;
        NSString v74 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v72 setSessionID:v74];

        [v72 setToken:v66];
        id v75 = [v72 data];
        if (v75)
        {
          unint64_t v76 = v75;
          uint64_t v109 = (void *)v30;
          unint64_t v108 = v32;
          uint64_t v77 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v79 = v78;

          uint64_t v80 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
          swift_beginAccess();
          sub_10024A330(v80, (uint64_t)v112, &qword_10097BB50);
          *(void *)&long long v110 = 0;
          *((void *)&v110 + 1) = 0xE000000000000000;
          _StringGuts.grow(_:)(30);
          swift_bridgeObjectRelease();
          *(void *)&long long v110 = 0xD00000000000001CLL;
          *((void *)&v110 + 1) = 0x80000001007BA910;
          type metadata accessor for UUID();
          sub_100361140((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
          v81._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
          String.append(_:)(v81);
          swift_bridgeObjectRelease();
          long long v82 = v110;
          sub_10024A330((uint64_t)v112, (uint64_t)&v110, &qword_10097BB50);
          if (v111)
          {
            sub_1002AF688(&v110, (uint64_t)&v114);
            sub_10000A7E8((uint64_t)v112, &qword_10097BB50);
            swift_bridgeObjectRelease();
            uint64_t v83 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
            swift_beginAccess();
            sub_10024A330(v83, (uint64_t)v112, &qword_100978040);
            if (v113)
            {
              sub_100278C8C((uint64_t)v112, (uint64_t)&v110);
              sub_10000A7E8((uint64_t)v112, &qword_100978040);
              sub_10026BB6C(&v110, v111);
              if (v2[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_requestArmingUI] == 1) {
                char v84 = v2[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_armingUITransportType];
              }
              else {
                char v84 = sub_100508B74(*(void *)&v2[v21]);
              }
              sub_1006FA9F0(v77, v79, (uint64_t)&v114, 6, v84);
              sub_10024D338((uint64_t)&v110);
            }
            else
            {
              sub_10000A7E8((uint64_t)v112, &qword_100978040);
            }
            sub_100507F28(0, 1);
            sub_100250CC4(v77, v79);

            sub_100250CC4((uint64_t)v109, v108);
            sub_10024D338((uint64_t)&v114);
            return;
          }
          sub_10000A7E8((uint64_t)&v110, &qword_10097BB50);
          sub_10024D280();
          uint64_t v20 = swift_allocError();
          *(_DWORD *)uint64_t v101 = 10;
          *(_OWORD *)(v101 + 8) = v82;
          swift_bridgeObjectRetain();
          swift_willThrow();
          sub_10000A7E8((uint64_t)v112, &qword_10097BB50);

          sub_100250CC4((uint64_t)v109, v108);
          swift_bridgeObjectRelease();

          sub_100250CC4(v77, v79);
        }
        else
        {
          sub_10024D280();
          uint64_t v20 = swift_allocError();
          *(_DWORD *)uint64_t v98 = 10;
          *(void *)(v98 + 8) = 0xD000000000000020;
          *(void *)(v98 + 16) = 0x80000001007BA860;
          swift_willThrow();
          sub_100250CC4(v30, v32);
        }
      }
      else
      {
        sub_10024D280();
        uint64_t v20 = swift_allocError();
        *(_DWORD *)uint64_t v85 = 10;
        *(void *)(v85 + 8) = 0xD00000000000002FLL;
        *(void *)(v85 + 16) = 0x80000001007BA8E0;
        swift_willThrow();
        sub_100250CC4(v30, v32);
      }
LABEL_10:
      *(void *)&long long v110 = v20;
      swift_errorRetain();
      sub_10000A844(&qword_10096BAF0);
      if (swift_dynamicCast())
      {
        swift_errorRelease();
        sub_10035D91C(v114, v115, v116);
        swift_bridgeObjectRelease();
        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        unint64_t v114 = v20;
        swift_errorRetain();
        type metadata accessor for SFAuthenticationError(0);
        if (swift_dynamicCast())
        {
          swift_errorRelease();
          sub_10035D91C(v110, 0, 0xE000000000000000);
        }
        else
        {
          swift_errorRelease();
          sub_10035D91C(10, 0, 0xE000000000000000);
        }
        swift_errorRelease();
      }
      return;
    }
    uint64_t v106 = v38;
    v39.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
    id v40 = v2;
    uint64_t v41 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
    swift_beginAccess();
    sub_10024A330(v41, (uint64_t)&v114, &qword_10097BB50);
    uint64_t v42 = v117;
    if (v117)
    {
      uint64_t v43 = v118;
      uint64_t v44 = sub_10026BB6C(&v114, v117);
      uint64_t v105 = &v102;
      uint64_t v45 = *(void *)(v42 - 8);
      __chkstk_darwin(v44);
      uint64_t v47 = (char *)&v102 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v45 + 16))(v47);
      sub_10000A7E8((uint64_t)&v114, &qword_10097BB50);
      Class isa = (Class)(*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8))(v42, v43);
      uint64_t v49 = v48;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v42);
      if (v49)
      {
        NSString v50 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
LABEL_50:
        uint64_t v2 = v40;
        unint64_t v37 = v107;
        id v86 = v106;
        [v106 signAndStoreRemoteLTK:v39.super.isa forDeviceID:v50];

        uint64_t v30 = (uint64_t)v109;
        uint64_t v35 = v108;
        goto LABEL_51;
      }
    }
    else
    {
      sub_10000A7E8((uint64_t)&v114, &qword_10097BB50);
    }
    NSString v50 = 0;
    goto LABEL_50;
  }
  id v22 = [self sharedTransport];
  if (!v22)
  {
    __break(1u);
    return;
  }
  os_log_type_t v23 = v22;
  id v24 = [v22 enabledAutoUnlockDevices];

  if (v24)
  {
    sub_10000B740(0, &qword_10096B3E8);
    sub_100361188();
    uint64_t v25 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v26 = v2;
    char v27 = sub_1003611F0(v25, (uint64_t)v26);
    swift_bridgeObjectRelease();

    if ((v27 & 1) == 0)
    {
      unint64_t v114 = 0;
      uint64_t v115 = 0xE000000000000000;
      _StringGuts.grow(_:)(26);
      *(void *)&long long v110 = 0;
      *((void *)&v110 + 1) = 0xE000000000000000;
      v55._object = (void *)0x80000001007BA930;
      v55._countAndFlagsBits = 0xD000000000000018;
      String.append(_:)(v55);
      uint64_t v56 = (uint64_t)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
      swift_beginAccess();
      sub_10024A330(v56, (uint64_t)&v114, &qword_10097BB50);
      uint64_t v57 = v117;
      if (v117)
      {
        uint64_t v58 = v118;
        uint64_t v59 = sub_10026BB6C(&v114, v117);
        uint64_t v60 = *(void *)(v57 - 8);
        __chkstk_darwin(v59);
        unint64_t v62 = (char *)&v102 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v60 + 16))(v62);
        sub_10000A7E8((uint64_t)&v114, &qword_10097BB50);
        uint64_t v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8))(v57, v58);
        uint64_t v65 = v64;
        (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v57);
      }
      else
      {
        sub_10000A7E8((uint64_t)&v114, &qword_10097BB50);
        uint64_t v63 = 0;
        uint64_t v65 = 0;
      }
      unint64_t v114 = v63;
      uint64_t v115 = v65;
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      swift_bridgeObjectRelease();
      unint64_t v18 = *((void *)&v110 + 1);
      unint64_t v17 = v110;
      sub_10024D280();
      uint64_t v20 = swift_allocError();
      *(_DWORD *)uint64_t v19 = 33;
      goto LABEL_8;
    }
    goto LABEL_16;
  }
  unint64_t v52 = Logger.logObject.getter();
  uint64_t v53 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v52, (os_log_type_t)v53))
  {
    uint64_t v54 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v54 = 0;
    _os_log_impl((void *)&_mh_execute_header, v52, (os_log_type_t)v53, "No devices enabled to unlock this device", v54, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_10035ED64(void *a1)
{
  if (qword_100969CF8 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000B47C(v3, (uint64_t)qword_100970558);
  id v4 = a1;
  id v5 = v1;
  id v6 = v4;
  uint64_t v7 = (char *)v5;
  os_log_type_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    unsigned int v11 = (void *)swift_slowAlloc();
    v29[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412546;
    id v12 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v11 = v6;

    *(_WORD *)(v10 + 12) = 2080;
    uint64_t v13 = UUID.uuidString.getter();
    v28[0] = sub_100254634(v13, v14, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Received authentication pairing create record: %@ for sessionID %s", (uint8_t *)v10, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_100508854();
  id v15 = [v6 token];
  if (v15)
  {
    Swift::String v16 = v15;
    uint64_t v17 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    unsigned __int8 v20 = [v6 requestArmingUI];
    v7[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_requestArmingUI] = v20;
    uint64_t v21 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
    if (*(void *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type] == 8) {
      sub_10035FB44(v17, v19);
    }
    else {
      sub_10035F268(v17, (unint64_t)v19);
    }
    if (*(void *)&v7[v21] == 5)
    {
      LOBYTE(v29[0]) = 1;
      sub_10035FEA4(0x100000000uLL);
    }
    uint64_t v25 = (uint64_t)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    swift_beginAccess();
    sub_10024A330(v25, (uint64_t)v29, &qword_100978040);
    if (v29[3])
    {
      sub_100278C8C((uint64_t)v29, (uint64_t)v28);
      sub_10000A7E8((uint64_t)v29, &qword_100978040);
      uint64_t v26 = (char *)*sub_10026BB6C(v28, v28[3]);
      char v27 = v7;
      sub_1004E38FC(v27, v26);
      sub_100250CC4(v17, (unint64_t)v19);

      return sub_10024D338((uint64_t)v28);
    }
    else
    {
      sub_100250CC4(v17, (unint64_t)v19);
      return sub_10000A7E8((uint64_t)v29, &qword_100978040);
    }
  }
  else
  {
    sub_10024D280();
    uint64_t v22 = swift_allocError();
    *(_DWORD *)uint64_t v23 = 10;
    *(void *)(v23 + 8) = 0xD00000000000002BLL;
    *(void *)(v23 + 16) = 0x80000001007BA970;
    swift_willThrow();
    v28[0] = v22;
    swift_errorRetain();
    sub_10000A844(&qword_10096BAF0);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      sub_10035D91C(v29[0], v29[1], v29[2]);
      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      v29[0] = v22;
      swift_errorRetain();
      type metadata accessor for SFAuthenticationError(0);
      if (swift_dynamicCast())
      {
        swift_errorRelease();
        sub_10035D91C(v28[0], 0, 0xE000000000000000);
      }
      else
      {
        swift_errorRelease();
        sub_10035D91C(10, 0, 0xE000000000000000);
      }
      return swift_errorRelease();
    }
  }
}

void sub_10035F268(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v65 = *(void (***)(char *, void, uint64_t))(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = *(void **)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_passcode);
  id v15 = *(void **)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_passcode + 8);
  swift_retain();
  sub_1006AE8B4(a1, a2, v14, v15);
  swift_release();
  if (v4) {
    return;
  }
  uint64_t v58 = v10;
  id v16 = [self sharedTransport];
  if (!v16)
  {
    __break(1u);
    return;
  }
  uint64_t v17 = v16;
  uint64_t v18 = v5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
  swift_beginAccess();
  sub_10024A330(v18, (uint64_t)&v61, &qword_10097BB50);
  if (v63)
  {
    sub_10000A844((uint64_t *)&unk_10097BB90);
    sub_10000B740(0, &qword_10097BB60);
    if (swift_dynamicCast()) {
      uint64_t v19 = v59;
    }
    else {
      uint64_t v19 = 0;
    }
  }
  else
  {
    sub_10000A7E8((uint64_t)&v61, &qword_10097BB50);
    uint64_t v19 = 0;
  }
  v56[1] = 0;
  id v20 = [v17 autoUnlockDeviceForIDSDevice:v19 cloudPaired:0 cached:0];

  uint64_t v61 = 0;
  unint64_t v62 = 0xE000000000000000;
  _StringGuts.grow(_:)(26);
  uint64_t v59 = v61;
  unint64_t v60 = v62;
  v21._countAndFlagsBits = 0x6369766544534449;
  v21._object = (void *)0xED00002044492065;
  String.append(_:)(v21);
  sub_10024A330(v18, (uint64_t)&v61, &qword_10097BB50);
  uint64_t v22 = v63;
  if (v63)
  {
    uint64_t v23 = v64;
    id v24 = sub_10026BB6C(&v61, v63);
    uint64_t v57 = v13;
    uint64_t v25 = v8;
    uint64_t v26 = *(void *)(v22 - 8);
    __chkstk_darwin(v24);
    id v28 = (char *)v56 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v26 + 16))(v28);
    sub_10000A7E8((uint64_t)&v61, &qword_10097BB50);
    uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
    unint64_t v31 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v22);
    uint64_t v8 = v25;
    uint64_t v13 = v57;
  }
  else
  {
    sub_10000A7E8((uint64_t)&v61, &qword_10097BB50);
    uint64_t v29 = 0;
    unint64_t v31 = 0;
  }
  unint64_t v32 = v58;
  uint64_t v61 = v29;
  unint64_t v62 = v31;
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  swift_bridgeObjectRelease();
  v33._countAndFlagsBits = 0x756F6620746F6E20;
  v33._object = (void *)0xEB000000002E646ELL;
  String.append(_:)(v33);
  unint64_t v34 = v60;
  if (!v20)
  {
    uint64_t v46 = v59;
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v47 = 10;
    *(void *)(v47 + 8) = v46;
    *(void *)(v47 + 16) = v34;
    swift_willThrow();
    return;
  }
  swift_bridgeObjectRelease();
  if ([v20 unlockEnabled])
  {
    id v35 = [v20 bluetoothID];
    if (v35)
    {
      unint64_t v36 = v35;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v37 = v65;
      ((void (**)(char *, char *, uint64_t))v65)[4](v13, v32, v8);
      ((void (*)(char *, void, uint64_t, uint64_t))v37[7])(v13, 0, 1, v8);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v37[6])(v13, 1, v8) != 1)
      {
        sub_10000A7E8((uint64_t)v13, &qword_100974EA0);
        if (qword_100969CF8 != -1) {
          swift_once();
        }
        uint64_t v38 = type metadata accessor for Logger();
        sub_10000B47C(v38, (uint64_t)qword_100970558);
        NSData v39 = v20;
        id v40 = Logger.logObject.getter();
        os_log_type_t v41 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v40, v41))
        {
          uint64_t v65 = (void (**)(char *, void, uint64_t))v20;
          uint64_t v42 = (uint8_t *)swift_slowAlloc();
          uint64_t v43 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v42 = 138412290;
          uint64_t v61 = v39;
          uint64_t v44 = v39;
          uint64_t v45 = v39;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v43 = v65;

          NSData v39 = v44;
          _os_log_impl((void *)&_mh_execute_header, v40, v41, "Enabled for device: %@", v42, 0xCu);
          sub_10000A844(&qword_10096B850);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          id v40 = v39;
        }

        if (qword_10096A198 != -1) {
          swift_once();
        }
        if (qword_100994D10) {
          sub_1006CD9D4();
        }

        return;
      }
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v65[7])(v13, 1, 1, v8);
    }
    sub_10000A7E8((uint64_t)v13, &qword_100974EA0);
  }
  if (qword_100969CF8 != -1) {
    swift_once();
  }
  uint64_t v48 = type metadata accessor for Logger();
  sub_10000B47C(v48, (uint64_t)qword_100970558);
  uint64_t v49 = v20;
  NSString v50 = Logger.logObject.getter();
  os_log_type_t v51 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v65 = (void (**)(char *, void, uint64_t))v20;
    unint64_t v52 = (uint8_t *)swift_slowAlloc();
    uint64_t v53 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v52 = 138412290;
    uint64_t v61 = v49;
    uint64_t v54 = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v53 = v65;

    _os_log_impl((void *)&_mh_execute_header, v50, v51, "Device not enabled: %@", v52, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    NSString v50 = v49;
  }

  sub_10024D280();
  swift_allocError();
  *(_DWORD *)uint64_t v55 = 10;
  *(void *)(v55 + 8) = 0xD000000000000032;
  *(void *)(v55 + 16) = 0x80000001007BA9A0;
  swift_willThrow();
}

void sub_10035FB44(uint64_t a1, void *a2)
{
  uint64_t v4 = v2;
  swift_retain();
  id v7 = sub_1006AEF58(a1, a2);
  swift_release();
  if (!v3)
  {

    if (qword_100969CF8 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000B47C(v8, (uint64_t)qword_100970558);
    id v9 = v4;
    uint64_t v10 = Logger.logObject.getter();
    LODWORD(v11) = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v10, (os_log_type_t)v11))
    {

      return;
    }
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v29 = v25;
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v13 = (uint64_t)v9 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
    swift_beginAccess();
    sub_10024A330(v13, (uint64_t)v26, &qword_10097BB50);
    uint64_t v14 = v27;
    if (v27)
    {
      uint64_t v15 = v28;
      id v16 = sub_10026BB6C(v26, v27);
      v23[1] = v23;
      uint64_t v17 = *(void *)(v14 - 8);
      int v24 = v11;
      uint64_t v11 = v17;
      __chkstk_darwin(v16);
      uint64_t v19 = (char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v11 + 16))(v19);
      sub_10000A7E8((uint64_t)v26, &qword_10097BB50);
      uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
      unint64_t v22 = v21;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v14);
      LOBYTE(v11) = v24;
      if (v22)
      {
LABEL_11:
        v26[0] = sub_100254634(v20, v22, &v29);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v10, (os_log_type_t)v11, "Finalized Registration for device %s", v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return;
      }
    }
    else
    {
      sub_10000A7E8((uint64_t)v26, &qword_10097BB50);
    }
    swift_bridgeObjectRelease();
    unint64_t v22 = 0xE90000000000003ELL;
    uint64_t v20 = 0x676E697373696D3CLL;
    goto LABEL_11;
  }
}

void sub_10035FEA4(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (uint64_t *)((char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  *id v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  uint64_t v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_25:
    swift_once();
LABEL_12:
    uint64_t v26 = type metadata accessor for Logger();
    sub_10000B47C(v26, (uint64_t)qword_100970558);
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Error converting confirmation to data", v29, 2u);
      swift_slowDealloc();
    }
    else
    {
    }
    return;
  }
  id v11 = [objc_allocWithZone((Class)SDAuthenticationConfirmation) init];
  uint64_t v10 = (uint64_t)v11;
  if (!v11)
  {
    [0 setSuccess:HIDWORD(a1) & 1];
    goto LABEL_11;
  }
  [v11 setVersion:1];
  id v12 = (id)v10;
  UUID.uuidString.getter();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v12 setSessionID:v13];

  [v12 setSuccess:HIDWORD(a1) & 1];
  if ((a1 & 0x100000000) == 0) {
    [v12 setErrorCode:a1];
  }
  id v14 = [v12 data];
  if (!v14)
  {
LABEL_11:
    if (qword_100969CF8 == -1) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
  uint64_t v15 = v14;
  uint64_t v16 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v18 = v17;

  if (qword_100969CF8 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_10000B47C(v19, (uint64_t)qword_100970558);
  uint64_t v20 = v12;
  unint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    unint64_t v37 = v18;
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    id v35 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 138412290;
    v41[0] = v20;
    int v24 = v20;
    unint64_t v36 = v20;
    uint64_t v25 = v24;
    unint64_t v18 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v35 = v10;

    uint64_t v20 = v36;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Sending confirmation: %@", v23, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    unint64_t v21 = v20;
  }

  uint64_t v30 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
  swift_beginAccess();
  sub_10024A330(v30, (uint64_t)&v39, &qword_10097BB50);
  if (v40)
  {
    sub_1002AF688(&v39, (uint64_t)v41);
    uint64_t v31 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
    swift_beginAccess();
    sub_10024A330(v31, (uint64_t)&v39, &qword_100978040);
    if (v40)
    {
      sub_100278C8C((uint64_t)&v39, (uint64_t)v38);
      sub_10000A7E8((uint64_t)&v39, &qword_100978040);
      sub_10026BB6C(v38, v38[3]);
      sub_1006DF18C(v16, v18, (uint64_t)v41, 2, *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type));
      sub_100250CC4(v16, v18);

      sub_10024D338((uint64_t)v41);
      sub_10024D338((uint64_t)v38);
      return;
    }
    sub_10024D338((uint64_t)v41);

    sub_100250CC4(v16, v18);
    Swift::String v33 = &v39;
  }
  else
  {
    sub_10000A7E8((uint64_t)&v39, &qword_10097BB50);
    uint64_t v32 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
    swift_beginAccess();
    sub_10024A330(v32, (uint64_t)v41, &qword_100978040);
    if (v41[3])
    {
      sub_100278C8C((uint64_t)v41, (uint64_t)&v39);
      sub_10000A7E8((uint64_t)v41, &qword_100978040);
      sub_10026BB6C(&v39, v40);
      sub_1006FA798(v16, v18, 2, *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type));

      sub_100250CC4(v16, v18);
      sub_10024D338((uint64_t)&v39);
      return;
    }

    sub_100250CC4(v16, v18);
    Swift::String v33 = (long long *)v41;
  }
  sub_10000A7E8((uint64_t)v33, &qword_100978040);
}

uint64_t sub_10036051C()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    if (qword_100969CF8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000B47C(v7, (uint64_t)qword_100970558);
  uint64_t v8 = v0;
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)id v11 = 136315138;
    uint64_t v17 = v12;
    type metadata accessor for UUID();
    sub_100361140((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v16 = sub_100254634(v13, v14, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Response timer fired for %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_10035D91C(12, 0xD000000000000026, 0x80000001007BA9E0);
  return sub_100508854();
}

uint64_t sub_100360824(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  unint64_t v9 = *(void *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
  Swift::UInt8 v10 = SFDeviceClassCodeGet();
  Swift::Int v11 = sub_1005095A0(v9);
  BOOL v12 = sub_10057C25C(8u, v11);
  swift_bridgeObjectRelease();
  if (v12)
  {
    if (!SFDeviceIsRealityDevice()) {
      goto LABEL_6;
    }
  }
  else
  {
    Swift::Int v13 = sub_1005095A0(v9);
    BOOL v14 = sub_10057C25C(v10, v13);
    swift_bridgeObjectRelease();
    if (!v14) {
      goto LABEL_6;
    }
  }
  if (*(void *)&a1[v8] != 8) {
    goto LABEL_23;
  }
LABEL_6:
  id v15 = [objc_allocWithZone((Class)SDAuthenticationPairingResponse) init];
  uint64_t v16 = v15;
  if (v15)
  {
    [v15 setVersion:1];
    id v17 = v16;
    UUID.uuidString.getter();
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v17 setSessionID:v18];

    [v17 setErrorCode:a2];
    id v19 = [v17 data];
    if (v19)
    {
      uint64_t v20 = v19;
      int v38 = a2;
      uint64_t v21 = a3;
      a2 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v23 = v22;

      uint64_t v24 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
      swift_beginAccess();
      sub_10024A330(v24, (uint64_t)&v40, &qword_10097BB50);
      if (v41)
      {
        sub_1002AF688(&v40, (uint64_t)v42);
        uint64_t v25 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
        swift_beginAccess();
        sub_10024A330(v25, (uint64_t)&v40, &qword_100978040);
        if (v41)
        {
          sub_100278C8C((uint64_t)&v40, (uint64_t)v39);
          sub_10000A7E8((uint64_t)&v40, &qword_100978040);
          sub_10026BB6C(v39, v39[3]);
          sub_1006DF18C(a2, v23, (uint64_t)v42, 4, *(void *)&a1[v8]);
          sub_100250CC4(a2, v23);

          sub_10024D338((uint64_t)v42);
          sub_10024D338((uint64_t)v39);
        }
        else
        {
          sub_10024D338((uint64_t)v42);

          sub_100250CC4(a2, v23);
          sub_10000A7E8((uint64_t)&v40, &qword_100978040);
        }
        a3 = v21;
        goto LABEL_22;
      }
      sub_100250CC4(a2, v23);
      sub_10000A7E8((uint64_t)&v40, &qword_10097BB50);
      a3 = v21;
      LODWORD(a2) = v38;
    }
  }
  uint64_t v37 = a4;
  if (qword_100969CF8 != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  sub_10000B47C(v26, (uint64_t)qword_100970558);
  id v27 = v16;
  os_log_type_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v28, v29))
  {

    a4 = v37;
    goto LABEL_23;
  }
  int v38 = a2;
  uint64_t v30 = (uint8_t *)swift_slowAlloc();
  uint64_t v31 = (void *)swift_slowAlloc();
  *(_DWORD *)uint64_t v30 = 138412290;
  if (v16)
  {
    v42[0] = v27;
    id v32 = v27;
  }
  else
  {
    v42[0] = 0;
  }
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *uint64_t v31 = v16;

  _os_log_impl((void *)&_mh_execute_header, v28, v29, "Could not convert response to data: %@", v30, 0xCu);
  sub_10000A844(&qword_10096B850);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  a4 = v37;
LABEL_22:
  LODWORD(a2) = v38;
LABEL_23:
  uint64_t v33 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess();
  sub_10024A330(v33, (uint64_t)v42, &qword_100978040);
  if (!v42[3]) {
    return sub_10000A7E8((uint64_t)v42, &qword_100978040);
  }
  sub_100278C8C((uint64_t)v42, (uint64_t)&v40);
  sub_10000A7E8((uint64_t)v42, &qword_100978040);
  uint64_t v34 = *sub_10026BB6C(&v40, v41);
  id v35 = a1;
  sub_1004522D4(v35, a2, a3, a4, v34);

  return sub_10024D338((uint64_t)&v40);
}

uint64_t sub_100360D78()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_100360E0C()
{
  return type metadata accessor for SDAuthenticationPairingLockSession();
}

uint64_t type metadata accessor for SDAuthenticationPairingLockSession()
{
  uint64_t result = qword_1009705A8;
  if (!qword_1009705A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100360E60()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100360EC4()
{
  return *(unsigned __int8 *)(*v0
                            + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_requestArmingUI);
}

uint64_t sub_100360ED8(uint64_t result)
{
  *(unsigned char *)(*v1 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAuthenticationPairingLockSession_requestArmingUI) = result;
  return result;
}

uint64_t sub_100360EEC()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100360F2C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F4;
  return sub_10035C1B0(a1, v4, v5, v6);
}

uint64_t sub_100360FE0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100361018()
{
  sub_100250CC4(*(void *)(v0 + 24), *(void *)(v0 + 32));
  sub_10024D338(v0 + 40);

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100361060()
{
  return sub_10035D68C(v0[2], v0[3], v0[4], (uint64_t)(v0 + 5));
}

uint64_t sub_100361070(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100361080()
{
  return swift_release();
}

uint64_t sub_100361088()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003610C8()
{
  return sub_100360824(*(char **)(v0 + 16), *(unsigned int *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1003610D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_10097BB50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100361140(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100361188()
{
  unint64_t result = qword_10096B3F0;
  if (!qword_10096B3F0)
  {
    sub_10000B740(255, &qword_10096B3E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10096B3F0);
  }
  return result;
}

uint64_t sub_1003611F0(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a2;
  uint64_t v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10000B740(0, &qword_10096B3E8);
    sub_100361188();
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v50;
    uint64_t v40 = v51;
    uint64_t v5 = v52;
    uint64_t v4 = v53;
    unint64_t v6 = v54;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v8 = *(void *)(a1 + 56);
    uint64_t v40 = a1 + 56;
    uint64_t v5 = ~v7;
    uint64_t v9 = -v7;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v6 = v10 & v8;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  v38[3] = v2 & 0x7FFFFFFFFFFFFFFFLL;
  v38[0] = v5;
  int64_t v39 = (unint64_t)(v5 + 64) >> 6;
  v38[2] = (char *)&type metadata for Swift.AnyObject + 8;
  while (1)
  {
    unint64_t v11 = v6;
    uint64_t v12 = v4;
    if ((v2 & 0x8000000000000000) == 0) {
      break;
    }
    uint64_t v15 = __CocoaSet.Iterator.next()();
    if (!v15) {
      goto LABEL_47;
    }
    uint64_t v55 = v15;
    sub_10000B740(0, &qword_10096B3E8);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v16 = (id)v47[0];
    swift_unknownObjectRelease();
    if (!v16) {
      goto LABEL_47;
    }
LABEL_33:
    id v20 = [v16 uniqueID:v38[0]];
    unint64_t v42 = v11;
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v23 = v22;
    }
    else
    {
      uint64_t v44 = 0;
      uint64_t v23 = 0;
    }
    uint64_t v24 = v43 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
    swift_beginAccess();
    sub_10024A330(v24, (uint64_t)v47, &qword_10097BB50);
    uint64_t v25 = v48;
    if (!v48)
    {
      sub_10000A7E8((uint64_t)v47, &qword_10097BB50);
      if (!v23) {
        goto LABEL_46;
      }
      goto LABEL_9;
    }
    unint64_t v45 = v6;
    uint64_t v46 = v4;
    uint64_t v41 = v12;
    uint64_t v26 = v2;
    uint64_t v27 = v49;
    os_log_type_t v28 = sub_10026BB6C(v47, v48);
    uint64_t v29 = *(void *)(v25 - 8);
    __chkstk_darwin(v28);
    uint64_t v31 = (char *)v38 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v29 + 16))(v31);
    sub_10000A7E8((uint64_t)v47, &qword_10097BB50);
    uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v25, v27);
    uint64_t v34 = v33;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v25);
    if (v23)
    {
      uint64_t v2 = v26;
      unint64_t v6 = v45;
      uint64_t v4 = v46;
      if (!v34) {
        goto LABEL_9;
      }
      if (v44 == v32 && v23 == v34)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_49:
        uint64_t v37 = 1;
        goto LABEL_50;
      }
      char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v36) {
        goto LABEL_49;
      }
    }
    else
    {
      uint64_t v2 = v26;
      unint64_t v6 = v45;
      uint64_t v4 = v46;
      if (!v34)
      {
LABEL_46:

        uint64_t v37 = 1;
        goto LABEL_50;
      }
LABEL_9:

      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  if (v6)
  {
    unint64_t v13 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v14 = v13 | (v4 << 6);
LABEL_32:
    id v16 = *(id *)(*(void *)(v2 + 48) + 8 * v14);
    if (!v16) {
      goto LABEL_47;
    }
    goto LABEL_33;
  }
  int64_t v17 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v17 >= v39) {
      goto LABEL_47;
    }
    unint64_t v18 = *(void *)(v40 + 8 * v17);
    ++v4;
    if (!v18)
    {
      uint64_t v4 = v12 + 2;
      if (v12 + 2 >= v39) {
        goto LABEL_47;
      }
      unint64_t v18 = *(void *)(v40 + 8 * v4);
      if (!v18)
      {
        uint64_t v4 = v12 + 3;
        if (v12 + 3 >= v39) {
          goto LABEL_47;
        }
        unint64_t v18 = *(void *)(v40 + 8 * v4);
        if (!v18)
        {
          uint64_t v4 = v12 + 4;
          if (v12 + 4 >= v39) {
            goto LABEL_47;
          }
          unint64_t v18 = *(void *)(v40 + 8 * v4);
          if (!v18)
          {
            uint64_t v4 = v12 + 5;
            if (v12 + 5 >= v39) {
              goto LABEL_47;
            }
            unint64_t v18 = *(void *)(v40 + 8 * v4);
            if (!v18)
            {
              uint64_t v19 = v12 + 6;
              while (v39 != v19)
              {
                unint64_t v18 = *(void *)(v40 + 8 * v19++);
                if (v18)
                {
                  uint64_t v4 = v19 - 1;
                  goto LABEL_31;
                }
              }
LABEL_47:
              uint64_t v37 = 0;
LABEL_50:
              sub_10024D330();
              return v37;
            }
          }
        }
      }
    }
LABEL_31:
    unint64_t v6 = (v18 - 1) & v18;
    unint64_t v14 = __clz(__rbit64(v18)) + (v4 << 6);
    goto LABEL_32;
  }
  __break(1u);
  return result;
}

uint64_t sub_100361728()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_10033FEB0(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication19VolumeUnlockManager_lastCarPlaySessionEndDate);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_100361780()
{
  return _s19VolumeUnlockManagerCMa();
}

uint64_t _s19VolumeUnlockManagerCMa()
{
  uint64_t result = qword_1009705F8;
  if (!qword_1009705F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003617D4()
{
  sub_100271710();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10036188C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    sub_10000A844(&qword_10096BAF0);
    uint64_t v4 = swift_allocError();
    *uint64_t v5 = a2;
    id v6 = a2;
    return _swift_continuation_throwingResumeWithError(v2, v4);
  }
  else
  {
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_100361924(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

BOOL sub_1003619EC(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = result;
  if (*(unsigned char *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 33; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    uint64_t result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100361A4C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
      int v6 = v5;
      sub_10000B740(0, &qword_100970718);
      char v7 = static NSObject.== infix(_:_:)();

      if (v7)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1) {
        goto LABEL_18;
      }
      if (v4) {
        break;
      }
      unint64_t v4 = 5;
      while (1)
      {
        unint64_t v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1)) {
          break;
        }
        id v13 = *(id *)(a2 + 8 * v4);
        char v14 = static NSObject.== infix(_:_:)();

        if (v14) {
          goto LABEL_6;
        }
        ++v4;
        if (v12 == v3) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    uint64_t v9 = 1;
    while (1)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      char v11 = static NSObject.== infix(_:_:)();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++v9;
      if (v10 == v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100361BD4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_1009706F0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_1009706F0);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100361C9C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_10000A844(&qword_10096BAF0);
    uint64_t v5 = swift_allocError();
    *int v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    sub_10000B740(0, (unint64_t *)&qword_100977CD0);
    **(void **)(*(void *)(v3 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_100361D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[18] = a3;
  v4[19] = a4;
  v4[16] = a1;
  v4[17] = a2;
  return _swift_task_switch(sub_100361D9C, 0, 0);
}

uint64_t sub_100361D9C()
{
  uint64_t v1 = self;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  v0[20] = isa;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_100361ECC;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100361C9C;
  v0[13] = &unk_1008D7CD8;
  v0[14] = v3;
  [v1 contactsWithData:isa completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100361ECC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 168) = v1;
  if (v1) {
    uint64_t v2 = sub_1003626B8;
  }
  else {
    uint64_t v2 = sub_100361FDC;
  }
  return _swift_task_switch(v2, 0, 0);
}

void sub_100361FDC()
{
  unint64_t v3 = *(void *)(v0 + 120);
  if (!(v3 >> 62))
  {
    if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_22:
    id v20 = *(void **)(v0 + 160);
    swift_bridgeObjectRelease();

    if (qword_100969D00 == -1)
    {
LABEL_23:
      uint64_t v21 = type metadata accessor for Logger();
      sub_10000B47C(v21, (uint64_t)qword_1009706F0);
      uint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed to extract contact from vCardData", v24, 2u);
        swift_slowDealloc();
      }

      goto LABEL_26;
    }
LABEL_68:
    swift_once();
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v19) {
    goto LABEL_22;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_29:
      swift_bridgeObjectRetain();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      unint64_t v59 = v0;
      id v60 = v2;
      if (v6) {
        goto LABEL_8;
      }
LABEL_30:
      uint64_t v8 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_31;
    }
    id v4 = *(id *)(v3 + 32);
  }
  uint64_t v2 = v4;

  swift_bridgeObjectRelease();
  id v5 = [v2 emailAddresses];
  sub_10000A844(&qword_10096FF18);
  unint64_t v1 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v1 >> 62) {
    goto LABEL_29;
  }
  uint64_t v6 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  unint64_t v59 = v0;
  id v60 = v2;
  if (!v6) {
    goto LABEL_30;
  }
LABEL_8:
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_67;
  }
  uint64_t v7 = 0;
  unint64_t v0 = v1 & 0xC000000000000001;
  uint64_t v8 = (char *)_swiftEmptyArrayStorage;
  do
  {
    if (v0) {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v9 = *(id *)(v1 + 8 * v7 + 32);
    }
    uint64_t v10 = v9;
    id v11 = [v9 value];
    id v12 = (id)CUNormalizeEmailAddress();

    if (v12)
    {
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_100253208(0, *((void *)v8 + 2) + 1, 1, v8);
      }
      unint64_t v17 = *((void *)v8 + 2);
      unint64_t v16 = *((void *)v8 + 3);
      if (v17 >= v16 >> 1) {
        uint64_t v8 = sub_100253208((char *)(v16 > 1), v17 + 1, 1, v8);
      }
      *((void *)v8 + 2) = v17 + 1;
      unint64_t v18 = &v8[16 * v17];
      *((void *)v18 + 4) = v13;
      *((void *)v18 + 5) = v15;
    }
    else
    {
    }
    ++v7;
  }
  while (v6 != v7);
LABEL_31:
  swift_bridgeObjectRelease_n();
  id v27 = [v60 phoneNumbers];
  unint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v28 >> 62))
  {
    uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v29) {
      goto LABEL_33;
    }
LABEL_47:
    uint64_t v31 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_48;
  }
  swift_bridgeObjectRetain();
  uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
  if (!v29) {
    goto LABEL_47;
  }
LABEL_33:
  if (v29 < 1)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  uint64_t v30 = 0;
  uint64_t v31 = (char *)_swiftEmptyArrayStorage;
  do
  {
    if ((v28 & 0xC000000000000001) != 0) {
      id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v32 = *(id *)(v28 + 8 * v30 + 32);
    }
    uint64_t v33 = v32;
    id v34 = [v32 value];
    id v35 = [v34 stringValue];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v37 = (id)CUNormalizePhoneNumber();

    if (v37)
    {
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v40 = v39;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v31 = sub_100253208(0, *((void *)v31 + 2) + 1, 1, v31);
      }
      unint64_t v42 = *((void *)v31 + 2);
      unint64_t v41 = *((void *)v31 + 3);
      if (v42 >= v41 >> 1) {
        uint64_t v31 = sub_100253208((char *)(v41 > 1), v42 + 1, 1, v31);
      }
      *((void *)v31 + 2) = v42 + 1;
      uint64_t v43 = &v31[16 * v42];
      *((void *)v43 + 4) = v38;
      *((void *)v43 + 5) = v40;
    }
    else
    {
    }
    ++v30;
  }
  while (v29 != v30);
LABEL_48:
  unint64_t v0 = v59;
  uint64_t v44 = *(void *)(v59 + 152);
  swift_bridgeObjectRelease_n();
  if (v44)
  {
    swift_bridgeObjectRetain();
    NSString v45 = String._bridgeToObjectiveC()();
    id v46 = (id)CUNormalizeEmailAddress();

    if (v46)
    {
      uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v49 = v48;

      char v50 = sub_100361924(v47, v49, v8);
      swift_bridgeObjectRelease();
      if (v50)
      {
LABEL_53:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v25 = *(void *)(v59 + 144);
        uint64_t v26 = *(void *)(v59 + 152);
        goto LABEL_61;
      }
      NSString v51 = String._bridgeToObjectiveC()();
      id v52 = (id)CUNormalizePhoneNumber();

      if (v52)
      {
        uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v55 = v54;

        char v56 = sub_100361924(v53, v55, v31);
        swift_bridgeObjectRelease();
        if (v56) {
          goto LABEL_53;
        }
        swift_bridgeObjectRelease();
        goto LABEL_55;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
LABEL_55:
  if (*((void *)v31 + 2) == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v57 = v60;
    if (*((void *)v31 + 2)) {
      goto LABEL_57;
    }
  }
  else
  {
    uint64_t v57 = v60;
    if (*((void *)v8 + 2))
    {
      uint64_t v25 = *((void *)v8 + 4);
      uint64_t v26 = *((void *)v8 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_60;
    }
    swift_bridgeObjectRelease();
    if (*((void *)v31 + 2))
    {
LABEL_57:
      uint64_t v25 = *((void *)v31 + 4);
      uint64_t v26 = *((void *)v31 + 5);
      swift_bridgeObjectRetain();
LABEL_60:

      swift_bridgeObjectRelease();
      goto LABEL_61;
    }
  }

  swift_bridgeObjectRelease();
LABEL_26:
  uint64_t v25 = 0;
  uint64_t v26 = 0;
LABEL_61:
  uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v0 + 8);
  v58(v25, v26);
}

uint64_t sub_1003626B8()
{
  unint64_t v1 = *(void **)(v0 + 160);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

id sub_100362728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  NSString v13 = a13;
  id v14 = [objc_allocWithZone((Class)RPIdentity) init];
  [v14 setType:6];
  NSString v15 = String._bridgeToObjectiveC()();
  [v14 setAccountID:v15];

  NSString v16 = String._bridgeToObjectiveC()();
  [v14 setContactID:v16];

  Class isa = Data._bridgeToObjectiveC()().super.isa;
  [v14 setDeviceIRKData:isa];

  Class v18 = Data._bridgeToObjectiveC()().super.isa;
  [v14 setEdPKData:v18];

  NSString v19 = String._bridgeToObjectiveC()();
  [v14 setIdsDeviceID:v19];

  if (a13) {
    NSString v13 = String._bridgeToObjectiveC()();
  }
  [v14 setSendersKnownAlias:v13];

  if (a11) {
    [v14 setFeatureFlags:];
  }
  return v14;
}

uint64_t sub_1003628E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 216) = v12;
  *(_OWORD *)(v8 + 200) = v11;
  *(_OWORD *)(v8 + 184) = v10;
  *(void *)(v8 + 168) = a7;
  *(void *)(v8 + 176) = a8;
  *(void *)(v8 + 152) = a5;
  *(void *)(v8 + 160) = a6;
  *(void *)(v8 + 136) = a3;
  *(void *)(v8 + 144) = a4;
  *(void *)(v8 + 120) = a1;
  *(void *)(v8 + 128) = a2;
  return _swift_task_switch(sub_100362924, 0, 0);
}

uint64_t sub_100362924()
{
  unint64_t v1 = (void *)v0;
  uint64_t v2 = *(void **)(v0 + 216);
  uint64_t v3 = v0 + 16;
  long long v14 = *(_OWORD *)(v0 + 184);
  long long v15 = *(_OWORD *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v16 = *(void *)(v0 + 168);
  uint64_t v17 = *(void *)(v0 + 176);
  uint64_t v6 = *(void *)(v0 + 144);
  uint64_t v5 = *(void *)(v0 + 152);
  uint64_t v8 = *(void *)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 136);
  uint64_t v9 = *(void *)(v0 + 120);
  id v10 = [objc_allocWithZone((Class)RPClient) init];
  v1[28] = v10;
  id v11 = sub_100362728(v9, v8, v7, v6, v5, v4, v16, v17, v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v2);
  v1[29] = v11;
  v1[2] = v1;
  v1[3] = sub_100362AB8;
  uint64_t v12 = swift_continuation_init();
  v1[10] = _NSConcreteStackBlock;
  v1[11] = 0x40000000;
  v1[12] = sub_10036188C;
  v1[13] = &unk_1008D7CC0;
  v1[14] = v12;
  [v10 addOrUpdateIdentity:v11];
  return _swift_continuation_await(v3);
}

uint64_t sub_100362AB8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 240) = v1;
  if (v1) {
    uint64_t v2 = sub_100362DD8;
  }
  else {
    uint64_t v2 = sub_100362BC8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100362BC8()
{
  NSString v13 = v0;
  if (qword_100969D00 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_1009706F0);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = (void *)v0[29];
  unint64_t v6 = v0[18];
  if (v4)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_bridgeObjectRetain();
    v0[10] = sub_100254634(v7, v6, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Added/updated identity for contact %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = (void *)v0[28];
  [v9 invalidate];

  id v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100362DD8()
{
  uint64_t v1 = (void *)v0[29];
  uint64_t v2 = (void *)v0[28];
  swift_willThrow();

  [v2 invalidate];
  os_log_type_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100362E60(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for URL();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v2[7] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferType();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_100362FE4, v5, 0);
}

void sub_100362FE4()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  SFAirDropReceive.AskRequest.type.getter();
  char v4 = SFAirDrop.TransferType.isLinks.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if ((v4 & 1) == 0)
  {
    uint64_t v24 = 0;
LABEL_28:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (void (*)(uint64_t))v0[1];
    v25(v24);
    return;
  }
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[3];
  uint64_t v7 = SFAirDropReceive.AskRequest.urlItems.getter();
  int64_t v8 = 0;
  uint64_t v26 = v7 + 56;
  uint64_t v9 = -1;
  uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
  if (-v10 < 64) {
    uint64_t v9 = ~(-1 << -(char)v10);
  }
  unint64_t v11 = v9 & *(void *)(v7 + 56);
  uint64_t v28 = v7;
  int64_t v27 = (unint64_t)(63 - v10) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v13 = v12 | (v8 << 6);
      goto LABEL_21;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v14 >= v27) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v27) {
        goto LABEL_26;
      }
      unint64_t v15 = *(void *)(v26 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v27) {
          goto LABEL_26;
        }
        unint64_t v15 = *(void *)(v26 + 8 * v8);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_21:
    uint64_t v17 = v0[7];
    uint64_t v18 = v0[4];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))(v17, *(void *)(v28 + 48) + *(void *)(v5 + 72) * v13, v18);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v17, 0, 1, v18);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v17, 1, v18) == 1)
    {
      swift_release();
      uint64_t v24 = 1;
      goto LABEL_27;
    }
    uint64_t v19 = v0[6];
    uint64_t v20 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 32))(v19, v0[7], v20);
    sub_1003ACB84(&off_1008D2708);
    uint64_t v22 = v21;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v20);
    os_log_type_t v23 = *(void **)(v6 + 16);
    *(void *)(v6 + 16) = v22;

    if (!*(void *)(v6 + 16))
    {
      swift_release();
      uint64_t v24 = 0;
LABEL_27:
      swift_arrayDestroy();
      goto LABEL_28;
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v27)
  {
LABEL_26:
    uint64_t v24 = 1;
    (*(void (**)(void, uint64_t, uint64_t, void))(v5 + 56))(v0[7], 1, 1, v0[4]);
    swift_release();
    goto LABEL_27;
  }
  unint64_t v15 = *(void *)(v26 + 8 * v16);
  if (v15)
  {
    int64_t v8 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v8 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v8 >= v27) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v8);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_32:
  __break(1u);
}

uint64_t type metadata accessor for SDAirDropContentHandlerPodcastsLinks()
{
  return self;
}

uint64_t sub_100363370@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerPodcastsLinks();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1003633A8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_100362E60(a1);
}

uint64_t sub_100363444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_10097F1D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void **)(*(void *)v2 + 16);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v9 = type metadata accessor for SFAirDropReceive.ItemDestination();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  id v10 = v8;
  sub_10039FAA0(a1, v8, 1, a2);

  return sub_10024DFE8((uint64_t)v7);
}

void sub_100363548(uint64_t a1, char a2)
{
  unint64_t v3 = *(void *)(SFAirDropReceive.AskRequest.urlItems.getter() + 16);
  swift_bridgeObjectRelease();
  sub_10000A844(&qword_10096D760);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
  *(void *)(inited + 32) = 0xD000000000000019;
  *(void *)(inited + 40) = 0x80000001007BAB10;
  *(void *)(inited + 48) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = 95;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6._countAndFlagsBits = 0xD000000000000019;
  v6._object = (void *)0x80000001007BAB10;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  if (v3 > 1)
  {
    v7._countAndFlagsBits = 0x4C4152554C505FLL;
    v7._object = (void *)0xE700000000000000;
    String.append(_:)(v7);
  }
  swift_bridgeObjectRelease();
  if (a2)
  {
    v8._countAndFlagsBits = 0x4C4154495041435FLL;
    v8._object = (void *)0xEC00000044455A49;
    String.append(_:)(v8);
  }
  v9._countAndFlagsBits = 0x545845545FLL;
  v9._object = (void *)0xE500000000000000;
  String.append(_:)(v9);
  swift_setDeallocating();
  sub_10000A844((uint64_t *)&unk_100977CB0);
  swift_arrayDestroy();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = (id)SFLocalizedStringForKey();

  if (v11)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_10076E7A0;
    *(void *)(v12 + 56) = &type metadata for Int;
    *(void *)(v12 + 64) = &protocol witness table for Int;
    *(void *)(v12 + 32) = v3;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10036378C(uint64_t a1)
{
  uint64_t v44 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v44 - 8);
  uint64_t v4 = __chkstk_darwin(v44);
  uint64_t v43 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v42 = (char *)v32 - v6;
  int64_t v7 = *(void *)(a1 + 16);
  Swift::String v8 = _swiftEmptyArrayStorage;
  if (!v7) {
    return (uint64_t)v8;
  }
  v32[1] = v1;
  NSString v45 = _swiftEmptyArrayStorage;
  sub_100255510(0, v7, 0);
  uint64_t result = sub_10036DD20(a1);
  uint64_t v11 = result;
  uint64_t v12 = 0;
  uint64_t v13 = a1 + 64;
  uint64_t v39 = v3 + 32;
  uint64_t v40 = v3 + 16;
  uint64_t v37 = a1 + 64;
  uint64_t v38 = v3 + 8;
  uint64_t v33 = a1 + 80;
  int64_t v34 = v7;
  uint64_t v41 = a1;
  uint64_t v35 = v3;
  uint64_t v36 = v10;
  while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v16 = (unint64_t)v11 >> 6;
    if ((*(void *)(v13 + 8 * ((unint64_t)v11 >> 6)) & (1 << v11)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v10) {
      goto LABEL_26;
    }
    uint64_t v17 = *(void *)(a1 + 48) + *(void *)(v3 + 72) * v11;
    uint64_t v18 = v42;
    uint64_t v19 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v42, v17, v44);
    uint64_t v20 = v43;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v43, v18, v19);
    uint64_t v21 = UUID.description.getter();
    uint64_t v23 = v22;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v20, v19);
    Swift::String v8 = v45;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_100255510(0, v8[2] + 1, 1);
      Swift::String v8 = v45;
    }
    unint64_t v25 = v8[2];
    unint64_t v24 = v8[3];
    if (v25 >= v24 >> 1)
    {
      uint64_t result = sub_100255510(v24 > 1, v25 + 1, 1);
      Swift::String v8 = v45;
    }
    v8[2] = v25 + 1;
    uint64_t v26 = &v8[2 * v25];
    v26[4] = v21;
    v26[5] = v23;
    a1 = v41;
    int64_t v14 = 1 << *(unsigned char *)(v41 + 32);
    if (v11 >= v14) {
      goto LABEL_27;
    }
    uint64_t v13 = v37;
    uint64_t v27 = *(void *)(v37 + 8 * v16);
    if ((v27 & (1 << v11)) == 0) {
      goto LABEL_28;
    }
    LODWORD(v10) = v36;
    if (*(_DWORD *)(v41 + 36) != v36) {
      goto LABEL_29;
    }
    unint64_t v28 = v27 & (-2 << (v11 & 0x3F));
    if (v28)
    {
      int64_t v14 = __clz(__rbit64(v28)) | v11 & 0xFFFFFFFFFFFFFFC0;
      int64_t v15 = v34;
      uint64_t v3 = v35;
    }
    else
    {
      unint64_t v29 = v16 + 1;
      unint64_t v30 = (unint64_t)(v14 + 63) >> 6;
      int64_t v15 = v34;
      uint64_t v3 = v35;
      if (v16 + 1 < v30)
      {
        unint64_t v31 = *(void *)(v37 + 8 * v29);
        if (v31)
        {
LABEL_22:
          int64_t v14 = __clz(__rbit64(v31)) + (v29 << 6);
        }
        else
        {
          while (v30 - 2 != v16)
          {
            unint64_t v31 = *(void *)(v33 + 8 * v16++);
            if (v31)
            {
              unint64_t v29 = v16 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v12;
    uint64_t v11 = v14;
    if (v12 == v15) {
      return (uint64_t)v8;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_100363AE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v38 = type metadata accessor for SFNWInterfaceType();
  uint64_t v3 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v37 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_10000A844(&qword_10096B130);
  uint64_t v29 = *(void *)(v39 - 8);
  uint64_t v5 = __chkstk_darwin(v39);
  int64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  Swift::String v9 = (char *)&v29 - v8;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v31 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v32 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v36 = v3 + 16;
  unsigned int v35 = enum case for SFNWInterfaceType.cellular(_:);
  uint64_t v33 = v3 + 8;
  uint64_t v34 = v3 + 104;
  uint64_t v40 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  if (!v13) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v16 | (v15 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    uint64_t v21 = v40;
    uint64_t v22 = *(void *)(v40 + 48);
    uint64_t v23 = type metadata accessor for UUID();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v9, v22 + *(void *)(*(void *)(v23 - 8) + 72) * i, v23);
    unint64_t v24 = *(void *)(v21 + 56) + *(void *)(v3 + 72) * i;
    uint64_t v25 = v38;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(&v9[*(int *)(v39 + 48)], v24, v38);
    sub_10024D388((uint64_t)v9, (uint64_t)v7, &qword_10096B130);
    uint64_t v26 = v37;
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v37, v35, v25);
    char v27 = static SFNWInterfaceType.== infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v26, v25);
    if (v27)
    {
      swift_release();
      uint64_t v28 = v30;
      sub_10024D388((uint64_t)v7, v30, &qword_10096B130);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v28, 0, 1, v39);
    }
    uint64_t result = sub_10000A7E8((uint64_t)v7, &qword_10096B130);
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v18 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v18 >= v32) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v18);
    ++v15;
    if (!v19)
    {
      int64_t v15 = v18 + 1;
      if (v18 + 1 >= v32) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v31 + 8 * v15);
      if (!v19)
      {
        int64_t v15 = v18 + 2;
        if (v18 + 2 >= v32) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v31 + 8 * v15);
        if (!v19)
        {
          int64_t v15 = v18 + 3;
          if (v18 + 3 >= v32) {
            goto LABEL_25;
          }
          unint64_t v19 = *(void *)(v31 + 8 * v15);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v19 - 1) & v19;
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v32)
  {
LABEL_25:
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v30, 1, 1, v39);
  }
  unint64_t v19 = *(void *)(v31 + 8 * v20);
  if (v19)
  {
    int64_t v15 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v15 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v15 >= v32) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v15);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100363F08(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  v2[5] = a2;
  uint64_t v3 = sub_10000A844(&qword_10096E2B8);
  uint64_t v4 = sub_1002AE308(&qword_1009709C8, &qword_10096E2B8);
  uint64_t v5 = (void *)swift_task_alloc();
  v2[6] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100363FF4;
  return dispatch thunk of AsyncIteratorProtocol.next()(v2 + 2, v3, v4);
}

uint64_t sub_100363FF4()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 32);
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    if (v2)
    {
      swift_getObjectType();
      uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v5 = v4;
    }
    else
    {
      uint64_t v3 = 0;
      uint64_t v5 = 0;
    }
    uint64_t v6 = sub_1003641A0;
  }
  else
  {
    if (v2)
    {
      swift_getObjectType();
      uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v5 = v7;
    }
    else
    {
      uint64_t v3 = 0;
      uint64_t v5 = 0;
    }
    uint64_t v6 = sub_100364184;
  }
  return _swift_task_switch(v6, v3, v5);
}

uint64_t sub_100364184()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1003641A0()
{
  v0[3] = v0[7];
  sub_10000A844(&qword_10096BAF0);
  swift_dynamicCast();
  swift_willThrowTypedImpl();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100364240(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  v2[5] = a2;
  uint64_t v3 = sub_10000A844(&qword_100970970);
  uint64_t v4 = sub_1002AE308(&qword_1009709B8, &qword_100970970);
  uint64_t v5 = (void *)swift_task_alloc();
  v2[6] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10036432C;
  return dispatch thunk of AsyncIteratorProtocol.next()(v2 + 2, v3, v4);
}

uint64_t sub_10036432C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 32);
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    if (v2)
    {
      swift_getObjectType();
      uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v5 = v4;
    }
    else
    {
      uint64_t v3 = 0;
      uint64_t v5 = 0;
    }
    uint64_t v6 = sub_10036F7D8;
  }
  else
  {
    if (v2)
    {
      swift_getObjectType();
      uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v5 = v7;
    }
    else
    {
      uint64_t v3 = 0;
      uint64_t v5 = 0;
    }
    uint64_t v6 = sub_10036F7DC;
  }
  return _swift_task_switch(v6, v3, v5);
}

uint64_t sub_1003644BC(uint64_t a1, uint64_t a2)
{
  uint64_t v295 = a2;
  uint64_t v271 = sub_10000A844(&qword_100970990);
  __chkstk_darwin(v271);
  uint64_t v272 = (uint64_t)&v266 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000A844(&qword_10096B138);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v267 = (uint64_t)&v266 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  v281 = (char *)&v266 - v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v266 - v9;
  uint64_t v288 = sub_10000A844(&qword_100970998);
  uint64_t v11 = __chkstk_darwin(v288);
  v300 = (char *)&v266 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  v287 = (char *)&v266 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v299 = (uint64_t)&v266 - v16;
  __chkstk_darwin(v15);
  v286 = (char *)&v266 - v17;
  uint64_t v318 = type metadata accessor for SFNWInterfaceType();
  uint64_t v18 = *(void *)(v318 - 8);
  uint64_t v19 = __chkstk_darwin(v318);
  v268 = (char *)&v266 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  v278 = (char *)&v266 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  v301 = (char *)&v266 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  v283 = (char *)&v266 - v26;
  __chkstk_darwin(v25);
  v289 = (char *)&v266 - v27;
  uint64_t v28 = sub_10000A844(&qword_10097F260);
  uint64_t v29 = __chkstk_darwin(v28 - 8);
  v270 = (char *)&v266 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v269 = (uint64_t)&v266 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  unsigned int v35 = (char *)&v266 - v34;
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v279 = (uint64_t)&v266 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v40 = (char *)&v266 - v39;
  uint64_t v41 = __chkstk_darwin(v38);
  v273 = (char *)&v266 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  v285 = (char *)&v266 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  v284 = (char *)&v266 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  v275 = (char *)&v266 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  v294 = (char *)&v266 - v50;
  __chkstk_darwin(v49);
  v293 = (char *)&v266 - v51;
  uint64_t v52 = type metadata accessor for UUID();
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = __chkstk_darwin(v52);
  v298 = (uint64_t)&v266 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __chkstk_darwin(v54);
  v319 = (void (**)(char *, uint64_t))((char *)&v266 - v57);
  __chkstk_darwin(v56);
  v320 = (uint64_t *)((char *)&v266 - v58);
  uint64_t v292 = sub_10000A844(&qword_1009709A0);
  uint64_t v59 = __chkstk_darwin(v292);
  v310 = (void (*)(char *, uint64_t, uint64_t))((char *)&v266 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v61 = __chkstk_darwin(v59);
  v291 = (char *)&v266 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  v309 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&v266 - v64);
  __chkstk_darwin(v63);
  v290 = (char *)&v266 - v65;
  unint64_t v302 = sub_100245E8C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v66 = *(void *)(a1 + 64);
  uint64_t v276 = a1 + 64;
  uint64_t v67 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v68 = -1;
  if (v67 < 64) {
    uint64_t v68 = ~(-1 << v67);
  }
  unint64_t v69 = v68 & v66;
  int64_t v277 = (unint64_t)(v67 + 63) >> 6;
  v321 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  v322 = (void (**)(char *, uint64_t, uint64_t))(v18 + 32);
  v324 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  uint64_t v282 = v53 + 16;
  uint64_t v311 = v18;
  uint64_t v274 = v18 + 40;
  uint64_t v297 = v53;
  v313 = (void (**)(void *, uint64_t))(v53 + 8);
  uint64_t v296 = a1;
  swift_bridgeObjectRetain();
  unint64_t v70 = 0;
  v312 = v10;
  v314 = v40;
  v315 = v35;
  uint64_t v317 = v52;
  while (1)
  {
    if (v69)
    {
      CFStringRef v304 = (const __CFString *)((v69 - 1) & v69);
      unint64_t v305 = v70;
      unint64_t v74 = __clz(__rbit64(v69)) | (v70 << 6);
      goto LABEL_25;
    }
    int64_t v75 = v70 + 1;
    if (__OFADD__(v70, 1)) {
      goto LABEL_158;
    }
    if (v75 >= v277) {
      break;
    }
    unint64_t v76 = *(void *)(v276 + 8 * v75);
    int64_t v77 = v70 + 1;
    if (!v76)
    {
      int64_t v77 = v70 + 2;
      if ((uint64_t)(v70 + 2) >= v277) {
        break;
      }
      unint64_t v76 = *(void *)(v276 + 8 * v77);
      if (!v76)
      {
        int64_t v77 = v70 + 3;
        if ((uint64_t)(v70 + 3) >= v277) {
          break;
        }
        unint64_t v76 = *(void *)(v276 + 8 * v77);
        if (!v76)
        {
          int64_t v77 = v70 + 4;
          if ((uint64_t)(v70 + 4) >= v277) {
            break;
          }
          unint64_t v76 = *(void *)(v276 + 8 * v77);
          if (!v76)
          {
            unint64_t v78 = v70 + 5;
            if ((uint64_t)(v70 + 5) >= v277) {
              break;
            }
            unint64_t v76 = *(void *)(v276 + 8 * v78);
            if (!v76)
            {
              while (1)
              {
                int64_t v77 = v78 + 1;
                if (__OFADD__(v78, 1)) {
                  goto LABEL_163;
                }
                if (v77 >= v277) {
                  goto LABEL_44;
                }
                unint64_t v76 = *(void *)(v276 + 8 * v77);
                ++v78;
                if (v76) {
                  goto LABEL_24;
                }
              }
            }
            int64_t v77 = v70 + 5;
          }
        }
      }
    }
LABEL_24:
    CFStringRef v304 = (const __CFString *)((v76 - 1) & v76);
    unint64_t v305 = v77;
    unint64_t v74 = __clz(__rbit64(v76)) + (v77 << 6);
LABEL_25:
    uint64_t v79 = v296;
    uint64_t v80 = *(void *)(v296 + 48);
    uint64_t v81 = type metadata accessor for SFAirDrop.TransferIdentifier();
    v323 = *(void **)(v81 - 8);
    uint64_t v82 = v80 + v323[9] * v74;
    v307 = (void (*)(void))v323[2];
    uint64_t v316 = (uint64_t)(v323 + 2);
    uint64_t v83 = (uint64_t)v290;
    ((void (*)(char *, uint64_t, uint64_t))v307)(v290, v82, v81);
    uint64_t v84 = *(void *)(v79 + 56);
    CFStringRef v85 = (const __CFString *)type metadata accessor for SFAirDropSend.Transfer();
    length = (void *)v85[-1].length;
    uint64_t v87 = v84 + length[9] * v74;
    uint64_t v88 = v292;
    uint64_t v89 = v83 + *(int *)(v292 + 48);
    CFStringRef v306 = (const __CFString *)length[2];
    ((void (*)(uint64_t, uint64_t, const __CFString *))v306)(v89, v87, v85);
    uint64_t v90 = (uint64_t)v309;
    sub_10024D388(v83, (uint64_t)v309, &qword_1009709A0);
    uint64_t v91 = *(int *)(v88 + 48);
    uint64_t v92 = v291;
    CFStringRef v93 = (const __CFString *)&v291[v91];
    uint64_t v94 = v90 + v91;
    uint64_t v95 = v307;
    ((void (*)(char *, uint64_t, uint64_t))v307)(v291, v90, v81);
    CFStringRef v303 = v93;
    CFStringRef v96 = v93;
    CFStringRef v97 = v306;
    ((void (*)(const __CFString *, uint64_t, const __CFString *))v306)(v96, v94, v85);
    SFAirDrop.TransferIdentifier.id.getter();
    uint64_t v98 = (char *)v323[1];
    ++v323;
    v308 = (void (*)(char *, uint64_t))v98;
    ((void (*)(char *, uint64_t))v98)(v92, v81);
    uint64_t v99 = (char *)v310 + *(int *)(v88 + 48);
    v95();
    ((void (*)(char *, uint64_t, const __CFString *))v97)(v99, v94, v85);
    uint64_t v100 = (uint64_t)v294;
    SFAirDropSend.Transfer.activeInterfaceType.getter();
    uint64_t v101 = (void (*)(void))length[1];
    CFStringRef v306 = v85;
    uint64_t v316 = (uint64_t)(length + 1);
    ((void (*)(char *, const __CFString *))v101)(v99, v85);
    uint64_t v102 = *v321;
    uint64_t v103 = v318;
    if ((*v321)(v100, 1, v318) == 1)
    {
      uint64_t v104 = *v324;
      uint64_t v105 = (uint64_t)v293;
      (*v324)(v293, 1, 1, v103);
      sub_10000A7E8(v100, &qword_10097F260);
    }
    else
    {
      uint64_t v105 = (uint64_t)v293;
      (*v322)(v293, v100, v103);
      uint64_t v104 = *v324;
      (*v324)((char *)v105, 0, 1, v103);
    }
    v308((char *)v310, v81);
    unsigned int v106 = v102(v105, 1, v103);
    uint64_t v107 = (uint64_t)v315;
    v307 = v101;
    if (v106 == 1)
    {
      sub_10000A7E8(v105, &qword_10097F260);
      uint64_t v108 = v302;
      swift_bridgeObjectRetain();
      unint64_t v109 = sub_100583A00((uint64_t)v320);
      char v111 = v110;
      swift_bridgeObjectRelease();
      if (v111)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v326 = (void *)v108;
        uint64_t v40 = v314;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10058E348();
          uint64_t v108 = (uint64_t)v326;
        }
        uint64_t v72 = *(void (**)(unint64_t, uint64_t))(v297 + 8);
        uint64_t v73 = v317;
        v72(*(void *)(v108 + 48) + *(void *)(v297 + 72) * v109, v317);
        uint64_t v113 = (uint64_t)v326;
        uint64_t v71 = (uint64_t)v275;
        (*(void (**)(char *, unint64_t, uint64_t))(v311 + 32))(v275, v326[7] + *(void *)(v311 + 72) * v109, v103);
        unint64_t v302 = v113;
        sub_1002ABDDC(v109, v113);
        swift_bridgeObjectRelease();
        v104((char *)v71, 0, 1, v103);
        unsigned int v35 = v315;
      }
      else
      {
        uint64_t v71 = (uint64_t)v275;
        v104(v275, 1, 1, v103);
        uint64_t v40 = v314;
        uint64_t v72 = (void (*)(unint64_t, uint64_t))*v313;
        uint64_t v73 = v317;
        unsigned int v35 = (char *)v107;
      }
      v72((unint64_t)v320, v73);
      sub_10000A7E8(v71, &qword_10097F260);
      uint64_t v10 = v312;
      uint64_t v52 = v73;
    }
    else
    {
      unint64_t v114 = *v322;
      (*v322)(v289, v105, v103);
      uint64_t v115 = v302;
      int v116 = swift_isUniquelyReferenced_nonNull_native();
      v326 = (void *)v115;
      unint64_t v118 = sub_100583A00((uint64_t)v320);
      uint64_t v119 = *(void *)(v115 + 16);
      BOOL v120 = (v117 & 1) == 0;
      uint64_t v121 = v119 + v120;
      uint64_t v52 = v317;
      if (__OFADD__(v119, v120))
      {
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
        goto LABEL_164;
      }
      char v122 = v117;
      if (*(void *)(v115 + 24) >= v121)
      {
        if ((v116 & 1) == 0) {
          sub_10058E348();
        }
      }
      else
      {
        sub_10058869C(v121, v116);
        unint64_t v123 = sub_100583A00((uint64_t)v320);
        if ((v122 & 1) != (v124 & 1))
        {
LABEL_167:
          uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          return result;
        }
        unint64_t v118 = v123;
      }
      uint64_t v40 = v314;
      id v125 = v326;
      if (v122)
      {
        (*(void (**)(unint64_t, char *, uint64_t))(v311 + 40))(v326[7] + *(void *)(v311 + 72) * v118, v289, v103);
      }
      else
      {
        v326[(v118 >> 6) + 8] |= 1 << v118;
        (*(void (**)(unint64_t, void *, uint64_t))(v297 + 16))(v125[6] + *(void *)(v297 + 72) * v118, v320, v52);
        v114((char *)(v125[7] + *(void *)(v311 + 72) * v118), (uint64_t)v289, v103);
        uint64_t v126 = v125[2];
        BOOL v127 = __OFADD__(v126, 1);
        uint64_t v128 = v126 + 1;
        if (v127) {
          goto LABEL_160;
        }
        v125[2] = v128;
      }
      unint64_t v302 = (unint64_t)v326;
      swift_bridgeObjectRelease();
      (*v313)(v320, v52);
      unsigned int v35 = (char *)v107;
      uint64_t v10 = v312;
    }
    ((void (*)(const __CFString *, const __CFString *))v307)(v303, v306);
    sub_10000A7E8((uint64_t)v309, &qword_1009709A0);
    unint64_t v70 = v305;
    unint64_t v69 = (unint64_t)v304;
  }
LABEL_44:
  swift_release();
  unint64_t v305 = sub_100245E8C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v129 = *(void *)(v295 + 64);
  CFStringRef v303 = (const __CFString *)(v295 + 64);
  uint64_t v130 = 1 << *(unsigned char *)(v295 + 32);
  uint64_t v131 = -1;
  if (v130 < 64) {
    uint64_t v131 = ~(-1 << v130);
  }
  unint64_t v132 = v131 & v129;
  CFStringRef v304 = (const __CFString *)((unint64_t)(v130 + 63) >> 6);
  swift_bridgeObjectRetain();
  uint64_t v133 = 0;
  while (1)
  {
    if (v132)
    {
      v307 = (void (*)(void))((v132 - 1) & v132);
      v308 = (void (*)(char *, uint64_t))v133;
      unint64_t v136 = __clz(__rbit64(v132)) | ((void)v133 << 6);
      goto LABEL_68;
    }
    uint64_t v137 = (uint64_t)(v133 + 1);
    if (__OFADD__(v133, 1)) {
      goto LABEL_159;
    }
    if (v137 >= (uint64_t)v304) {
      break;
    }
    unint64_t v138 = *((void *)&v303->isa + v137);
    uint64_t v139 = (uint64_t)(v133 + 1);
    if (!v138)
    {
      uint64_t v139 = (uint64_t)(v133 + 2);
      if ((uint64_t)(v133 + 2) >= (uint64_t)v304) {
        break;
      }
      unint64_t v138 = *((void *)&v303->isa + v139);
      if (!v138)
      {
        uint64_t v139 = (uint64_t)(v133 + 3);
        if ((uint64_t)(v133 + 3) >= (uint64_t)v304) {
          break;
        }
        unint64_t v138 = *((void *)&v303->isa + v139);
        if (!v138)
        {
          uint64_t v139 = (uint64_t)(v133 + 4);
          if ((uint64_t)(v133 + 4) >= (uint64_t)v304) {
            break;
          }
          unint64_t v138 = *((void *)&v303->isa + v139);
          if (!v138)
          {
            v140 = v133 + 5;
            if ((uint64_t)(v133 + 5) >= (uint64_t)v304) {
              break;
            }
            unint64_t v138 = *((void *)&v303->isa + (void)v140);
            if (!v138)
            {
              while (1)
              {
                uint64_t v139 = (uint64_t)(v140 + 1);
                if (__OFADD__(v140, 1)) {
                  break;
                }
                if (v139 >= (uint64_t)v304) {
                  goto LABEL_87;
                }
                unint64_t v138 = *((void *)&v303->isa + v139);
                ++v140;
                if (v138) {
                  goto LABEL_67;
                }
              }
LABEL_164:
              __break(1u);
LABEL_165:
              swift_once();
              goto LABEL_143;
            }
            uint64_t v139 = (uint64_t)(v133 + 5);
          }
        }
      }
    }
LABEL_67:
    v307 = (void (*)(void))((v138 - 1) & v138);
    v308 = (void (*)(char *, uint64_t))v139;
    unint64_t v136 = __clz(__rbit64(v138)) + (v139 << 6);
LABEL_68:
    uint64_t v141 = v295;
    uint64_t v142 = *(void *)(v295 + 48);
    uint64_t v143 = type metadata accessor for SFAirDrop.TransferIdentifier();
    v323 = *(void **)(v143 - 8);
    uint64_t v144 = v142 + v323[9] * v136;
    v310 = (void (*)(char *, uint64_t, uint64_t))v323[2];
    v320 = v323 + 2;
    uint64_t v145 = (uint64_t)v286;
    v310(v286, v144, v143);
    uint64_t v146 = *(void *)(v141 + 56);
    uint64_t v147 = type metadata accessor for SFAirDropReceive.Transfer();
    double v148 = *(void **)(v147 - 8);
    uint64_t v149 = v146 + v148[9] * v136;
    uint64_t v150 = v288;
    uint64_t v151 = v145 + *(int *)(v288 + 48);
    v309 = (void (*)(uint64_t, uint64_t, uint64_t))v148[2];
    v309(v151, v149, v147);
    uint64_t v152 = v299;
    sub_10024D388(v145, v299, &qword_100970998);
    uint64_t v153 = *(int *)(v150 + 48);
    v154 = v287;
    CFStringRef v155 = (const __CFString *)&v287[v153];
    uint64_t v156 = v152 + v153;
    uint64_t v157 = (void (*)(void))v310;
    v310(v287, v152, v143);
    CFStringRef v306 = v155;
    CFStringRef v158 = v155;
    v159 = (void (*)(char *, uint64_t, uint64_t))v309;
    v309((uint64_t)v158, v156, v147);
    SFAirDrop.TransferIdentifier.id.getter();
    uint64_t v160 = (void (*)(char *, uint64_t))v323[1];
    ++v323;
    uint64_t v316 = (uint64_t)v160;
    v160(v154, v143);
    uint64_t v161 = &v300[*(int *)(v150 + 48)];
    v157();
    v159(v161, v156, v147);
    uint64_t v162 = (uint64_t)v285;
    SFAirDropReceive.Transfer.activeInterfaceType.getter();
    uint64_t v163 = (uint64_t *)v148[1];
    v320 = (void *)v147;
    v309 = (void (*)(uint64_t, uint64_t, uint64_t))v163;
    v310 = (void (*)(char *, uint64_t, uint64_t))(v148 + 1);
    ((void (*)(char *, uint64_t))v163)(v161, v147);
    uint64_t v164 = *v321;
    uint64_t v165 = v318;
    if ((*v321)(v162, 1, v318) == 1)
    {
      v166 = *v324;
      uint64_t v167 = (uint64_t)v284;
      (*v324)(v284, 1, 1, v165);
      sub_10000A7E8(v162, &qword_10097F260);
    }
    else
    {
      uint64_t v167 = (uint64_t)v284;
      (*v322)(v284, v162, v165);
      v166 = *v324;
      (*v324)((char *)v167, 0, 1, v165);
    }
    uint64_t v52 = v317;
    ((void (*)(char *, uint64_t))v316)(v300, v143);
    if (v164(v167, 1, v165) == 1)
    {
      sub_10000A7E8(v167, &qword_10097F260);
      unint64_t v168 = v305;
      swift_bridgeObjectRetain();
      unint64_t v169 = sub_100583A00((uint64_t)v319);
      char v171 = v170;
      swift_bridgeObjectRelease();
      if (v171)
      {
        char v172 = swift_isUniquelyReferenced_nonNull_native();
        v326 = (void *)v168;
        uint64_t v40 = v314;
        if ((v172 & 1) == 0)
        {
          sub_10058E348();
          unint64_t v168 = (unint64_t)v326;
        }
        unint64_t v173 = *(void *)(v168 + 48) + *(void *)(v297 + 72) * v169;
        v135 = *(void (**)(unint64_t, uint64_t))(v297 + 8);
        v135(v173, v52);
        uint64_t v174 = (uint64_t)v326;
        uint64_t v134 = (uint64_t)v273;
        (*(void (**)(char *, unint64_t, uint64_t))(v311 + 32))(v273, v326[7] + *(void *)(v311 + 72) * v169, v165);
        unint64_t v305 = v174;
        sub_1002ABDDC(v169, v174);
        swift_bridgeObjectRelease();
        v166((char *)v134, 0, 1, v165);
      }
      else
      {
        uint64_t v134 = (uint64_t)v273;
        v166(v273, 1, 1, v165);
        uint64_t v40 = v314;
        v135 = (void (*)(unint64_t, uint64_t))*v313;
      }
      v135((unint64_t)v319, v52);
      sub_10000A7E8(v134, &qword_10097F260);
    }
    else
    {
      BOOL v175 = *v322;
      (*v322)(v283, v167, v165);
      uint64_t v176 = v305;
      int v177 = swift_isUniquelyReferenced_nonNull_native();
      v326 = (void *)v176;
      unint64_t v179 = sub_100583A00((uint64_t)v319);
      uint64_t v180 = *(void *)(v176 + 16);
      BOOL v181 = (v178 & 1) == 0;
      uint64_t v182 = v180 + v181;
      if (__OFADD__(v180, v181)) {
        goto LABEL_157;
      }
      char v183 = v178;
      if (*(void *)(v176 + 24) >= v182)
      {
        if ((v177 & 1) == 0) {
          sub_10058E348();
        }
      }
      else
      {
        sub_10058869C(v182, v177);
        unint64_t v184 = sub_100583A00((uint64_t)v319);
        if ((v183 & 1) != (v185 & 1)) {
          goto LABEL_167;
        }
        unint64_t v179 = v184;
      }
      uint64_t v40 = v314;
      v186 = v326;
      if (v183)
      {
        (*(void (**)(unint64_t, char *, uint64_t))(v311 + 40))(v326[7] + *(void *)(v311 + 72) * v179, v283, v165);
      }
      else
      {
        v326[(v179 >> 6) + 8] |= 1 << v179;
        (*(void (**)(unint64_t, void (**)(char *, uint64_t), uint64_t))(v297 + 16))(v186[6] + *(void *)(v297 + 72) * v179, v319, v52);
        v175((char *)(v186[7] + *(void *)(v311 + 72) * v179), (uint64_t)v283, v165);
        uint64_t v187 = v186[2];
        BOOL v127 = __OFADD__(v187, 1);
        uint64_t v188 = v187 + 1;
        if (v127) {
          goto LABEL_161;
        }
        v186[2] = v188;
      }
      unint64_t v305 = (unint64_t)v326;
      swift_bridgeObjectRelease();
      (*v313)(v319, v52);
    }
    uint64_t v10 = v312;
    unsigned int v35 = v315;
    unint64_t v132 = (unint64_t)v307;
    uint64_t v133 = (char *)v308;
    ((void (*)(const __CFString *, void *))v309)(v306, v320);
    sub_10000A7E8(v299, &qword_100970998);
  }
LABEL_87:
  swift_release();
  uint64_t v189 = v302;
  swift_bridgeObjectRetain();
  uint64_t v190 = sub_100368F9C(v305, v189);
  v300 = 0;
  uint64_t v191 = *(void *)(v190 + 64);
  unint64_t v305 = v190 + 64;
  uint64_t v192 = 1 << *(unsigned char *)(v190 + 32);
  uint64_t v193 = -1;
  if (v192 < 64) {
    uint64_t v193 = ~(-1 << v192);
  }
  unint64_t v194 = v193 & v191;
  v195 = (void *)(v311 + 16);
  v310 = (void (*)(char *, uint64_t, uint64_t))(v297 + 32);
  v319 = (void (**)(char *, uint64_t))(v311 + 8);
  CFStringRef v304 = @"Receive";
  CFStringRef v303 = @"Send";
  CFStringRef v306 = @"InterfaceChanged";
  v307 = (void (*)(void))((unint64_t)(v192 + 63) >> 6);
  uint64_t v299 = (uint64_t)v307 - 1;
  v309 = (void (*)(uint64_t, uint64_t, uint64_t))v190;
  swift_bridgeObjectRetain();
  uint64_t v316 = 0;
  v323 = v195;
  while (2)
  {
    uint64_t v204 = (uint64_t)v281;
    if (v194)
    {
      v320 = (void *)((v194 - 1) & v194);
      unint64_t v205 = __clz(__rbit64(v194)) | (v316 << 6);
      goto LABEL_95;
    }
    uint64_t v211 = v316 + 1;
    if (__OFADD__(v316, 1)) {
      goto LABEL_162;
    }
    if (v211 >= (uint64_t)v307) {
      goto LABEL_116;
    }
    unint64_t v212 = *(void *)(v305 + 8 * v211);
    if (!v212)
    {
      uint64_t v213 = v316 + 2;
      ++v316;
      if (v211 + 1 < (uint64_t)v307)
      {
        unint64_t v212 = *(void *)(v305 + 8 * v213);
        if (v212)
        {
LABEL_102:
          uint64_t v211 = v213;
          goto LABEL_99;
        }
        uint64_t v316 = v211 + 1;
        if (v211 + 2 < (uint64_t)v307)
        {
          unint64_t v212 = *(void *)(v305 + 8 * (v211 + 2));
          if (v212)
          {
            v211 += 2;
            goto LABEL_99;
          }
          uint64_t v316 = v211 + 2;
          if (v211 + 3 < (uint64_t)v307)
          {
            unint64_t v212 = *(void *)(v305 + 8 * (v211 + 3));
            if (v212)
            {
              v211 += 3;
              goto LABEL_99;
            }
            uint64_t v213 = v211 + 4;
            uint64_t v316 = v211 + 3;
            if (v211 + 4 < (uint64_t)v307)
            {
              unint64_t v212 = *(void *)(v305 + 8 * v213);
              if (!v212)
              {
                while (1)
                {
                  uint64_t v211 = v213 + 1;
                  if (__OFADD__(v213, 1)) {
                    break;
                  }
                  if (v211 >= (uint64_t)v307)
                  {
                    uint64_t v316 = v299;
                    goto LABEL_116;
                  }
                  unint64_t v212 = *(void *)(v305 + 8 * v211);
                  ++v213;
                  if (v212) {
                    goto LABEL_99;
                  }
                }
                __break(1u);
                goto LABEL_167;
              }
              goto LABEL_102;
            }
          }
        }
      }
LABEL_116:
      uint64_t v214 = sub_10000A844(&qword_10096B130);
      uint64_t v204 = (uint64_t)v281;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v214 - 8) + 56))(v281, 1, 1, v214);
      v320 = 0;
      goto LABEL_117;
    }
LABEL_99:
    v320 = (void *)((v212 - 1) & v212);
    unint64_t v205 = __clz(__rbit64(v212)) + (v211 << 6);
    uint64_t v316 = v211;
    uint64_t v204 = (uint64_t)v281;
LABEL_95:
    uint64_t v206 = (uint64_t)v309;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v297 + 16))(v204, *((void *)v309 + 6) + *(void *)(v297 + 72) * v205, v52);
    uint64_t v207 = *(void *)(v206 + 56);
    uint64_t v208 = v311;
    uint64_t v209 = v207 + *(void *)(v311 + 72) * v205;
    uint64_t v210 = sub_10000A844(&qword_10096B130);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v208 + 16))(v204 + *(int *)(v210 + 48), v209, v318);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v210 - 8) + 56))(v204, 0, 1, v210);
LABEL_117:
    sub_10024D388(v204, (uint64_t)v10, &qword_10096B138);
    uint64_t v215 = sub_10000A844(&qword_10096B130);
    v216 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v215 - 8) + 48);
    int v217 = v216(v10, 1, v215);
    uint64_t v218 = v298;
    if (v217 != 1)
    {
      v219 = &v10[*(int *)(v215 + 48)];
      (*(void (**)(void *, char *, uint64_t))v310)((void *)v298, v10, v317);
      v220 = *v322;
      uint64_t v200 = v318;
      (*v322)(v301, (uint64_t)v219, v318);
      uint64_t v221 = *(void *)(v280 + 64);
      if (*(void *)(v221 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v222 = sub_100583A00(v218);
        v223 = v278;
        v224 = (void (**)(char *, char *, uint64_t))v323;
        if (v225)
        {
          uint64_t v226 = v311;
          (*(void (**)(char *, unint64_t, uint64_t))(v311 + 16))(v40, *(void *)(v221 + 56) + *(void *)(v311 + 72) * v222, v200);
          v227 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v226 + 56);
          v227(v40, 0, 1, v200);
        }
        else
        {
          v227 = *v324;
          (*v324)(v40, 1, 1, v200);
        }
        swift_bridgeObjectRelease();
        BOOL v228 = ((uint64_t (*)(char *, uint64_t, uint64_t))*v321)(v40, 1, v200) != 1;
      }
      else
      {
        v227 = *v324;
        (*v324)(v40, 1, 1, v200);
        BOOL v228 = 0;
        v223 = v278;
        v224 = (void (**)(char *, char *, uint64_t))v323;
      }
      uint64_t v229 = (uint64_t)v40;
      uint64_t v230 = v279;
      sub_100323D88(v229, v279);
      v231 = *v224;
      (*v224)(v223, v301, v200);
      if (v228)
      {
        v231(v35, v223, v200);
        v308 = (void (*)(char *, uint64_t))v227;
        v227(v35, 0, 1, v200);
        uint64_t v232 = (uint64_t)v35;
        uint64_t v233 = v272;
        uint64_t v234 = v272 + *(int *)(v271 + 48);
        sub_100323D88(v230, v272);
        sub_100323D88(v232, v234);
        v235 = v223;
        v236 = *v321;
        if ((*v321)(v233, 1, v200) == 1)
        {
          sub_10000A7E8(v232, &qword_10097F260);
          v237 = *v319;
          (*v319)(v235, v200);
          sub_10000A7E8(v230, &qword_10097F260);
          if (v236(v234, 1, v200) == 1)
          {
            sub_10000A7E8(v272, &qword_10097F260);
            uint64_t v10 = v312;
            uint64_t v200 = v318;
            uint64_t v40 = v314;
            unsigned int v35 = v315;
            goto LABEL_92;
          }
          uint64_t v239 = v272;
          uint64_t v10 = v312;
          uint64_t v40 = v314;
LABEL_133:
          v240 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v308;
          sub_10000A7E8(v239, &qword_100970990);
          unsigned int v35 = v315;
          unint64_t v241 = v302;
          if (*(void *)(v302 + 16))
          {
LABEL_134:
            unint64_t v242 = sub_100583A00(v298);
            if (v243)
            {
              v231(v270, (char *)(*(void *)(v241 + 56) + *(void *)(v311 + 72) * v242), v318);
              uint64_t v196 = 0;
              v197 = &v327;
              goto LABEL_91;
            }
          }
LABEL_90:
          uint64_t v196 = 1;
          v197 = &v328;
LABEL_91:
          v198 = (void *)*(v197 - 32);
          uint64_t v199 = (uint64_t)v270;
          uint64_t v200 = v318;
          v240(v270, v196, 1, v318);
          sub_10000A7E8(v199, &qword_10097F260);
          id v201 = v198;
          swift_retain();
          Class isa = UUID._bridgeToObjectiveC()().super.isa;
          SFNWInterfaceType.description.getter();
          NSString v203 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          sub_100046FF8((uint64_t)v201, (uint64_t)v306, isa, (uint64_t)v203, 0.0);
          swift_release();

LABEL_92:
          v237(v301, v200);
          uint64_t v52 = v317;
          (*v313)((void *)v298, v317);
          sub_10000A7E8((uint64_t)v40, &qword_10097F260);
          unint64_t v194 = (unint64_t)v320;
          continue;
        }
        uint64_t v238 = v269;
        sub_100323D88(v233, v269);
        if (v236(v234, 1, v200) == 1)
        {
          sub_10000A7E8((uint64_t)v315, &qword_10097F260);
          v237 = *v319;
          (*v319)(v278, v200);
          sub_10000A7E8(v279, &qword_10097F260);
          v237((char *)v238, v200);
          uint64_t v239 = v233;
          uint64_t v10 = v312;
          uint64_t v40 = v314;
          goto LABEL_133;
        }
        v244 = v268;
        v220(v268, v234, v200);
        sub_10036F790(&qword_1009709A8, (void (*)(uint64_t))&type metadata accessor for SFNWInterfaceType);
        char v245 = dispatch thunk of static Equatable.== infix(_:_:)();
        v237 = *v319;
        (*v319)(v244, v200);
        sub_10000A7E8((uint64_t)v315, &qword_10097F260);
        v237(v278, v200);
        sub_10000A7E8(v279, &qword_10097F260);
        v237((char *)v238, v200);
        sub_10000A7E8(v233, &qword_10097F260);
        if ((v245 & 1) == 0)
        {
          uint64_t v10 = v312;
          uint64_t v40 = v314;
          unsigned int v35 = v315;
          unint64_t v241 = v302;
          v240 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v308;
          if (*(void *)(v302 + 16)) {
            goto LABEL_134;
          }
          goto LABEL_90;
        }
        uint64_t v10 = v312;
        uint64_t v200 = v318;
        unsigned int v35 = v315;
      }
      else
      {
        v237 = *v319;
        (*v319)(v223, v200);
        sub_10000A7E8(v230, &qword_10097F260);
      }
      uint64_t v40 = v314;
      goto LABEL_92;
    }
    break;
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v246 = swift_bridgeObjectRetain();
  uint64_t v247 = sub_10036D6F8(v246);
  swift_bridgeObjectRelease();
  uint64_t v248 = *(void *)(v280 + 64);
  swift_bridgeObjectRetain();
  uint64_t v249 = v267;
  sub_100363AE0(v248, v267);
  swift_bridgeObjectRelease();
  int v250 = v216((char *)v249, 1, v215);
  sub_10000A7E8(v249, &qword_10096B138);
  if (*(void *)(v247 + 16))
  {
    if (v250 != 1)
    {
      swift_release();
      goto LABEL_155;
    }
    if (qword_100969BC0 != -1) {
      goto LABEL_165;
    }
LABEL_143:
    uint64_t v251 = type metadata accessor for Logger();
    sub_10000B47C(v251, (uint64_t)qword_10096EF58);
    swift_retain();
    v252 = Logger.logObject.getter();
    os_log_type_t v253 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v252, v253))
    {
      v254 = (uint8_t *)swift_slowAlloc();
      v326 = (void *)swift_slowAlloc();
      *(_DWORD *)v254 = 136315138;
      v324 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v254 + 4);
      uint64_t v255 = swift_retain();
      uint64_t v256 = sub_10036378C(v255);
      swift_release();
      uint64_t v325 = v256;
      sub_10000A844((uint64_t *)&unk_100974C30);
      sub_1002AE308((unint64_t *)&qword_10096CE90, (uint64_t *)&unk_100974C30);
      uint64_t v257 = BidirectionalCollection<>.joined(separator:)();
      unint64_t v259 = v258;
      swift_bridgeObjectRelease();
      uint64_t v325 = sub_100254634(v257, v259, (uint64_t *)&v326);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v252, v253, "Transfers using cellular: %s", v254, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    char v264 = 1;
  }
  else
  {
    swift_release();
    if (v250 == 1) {
      goto LABEL_155;
    }
    if (qword_100969BC0 != -1) {
      swift_once();
    }
    uint64_t v260 = type metadata accessor for Logger();
    sub_10000B47C(v260, (uint64_t)qword_10096EF58);
    v261 = Logger.logObject.getter();
    os_log_type_t v262 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v261, v262))
    {
      v263 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v263 = 0;
      _os_log_impl((void *)&_mh_execute_header, v261, v262, "Transfers stopped using cellular", v263, 2u);
      swift_slowDealloc();
    }

    char v264 = 0;
  }
  sub_100667B98(v264);
LABEL_155:
  *(void *)(v280 + 64) = v309;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100366A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v295 = a2;
  uint64_t v271 = sub_10000A844(&qword_100970990);
  __chkstk_darwin(v271);
  uint64_t v272 = (uint64_t)&v266 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000A844(&qword_10096B138);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v267 = (uint64_t)&v266 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  v281 = (char *)&v266 - v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v266 - v9;
  uint64_t v288 = sub_10000A844(&qword_100970998);
  uint64_t v11 = __chkstk_darwin(v288);
  v300 = (char *)&v266 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  v287 = (char *)&v266 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v299 = (uint64_t)&v266 - v16;
  __chkstk_darwin(v15);
  v286 = (char *)&v266 - v17;
  uint64_t v318 = type metadata accessor for SFNWInterfaceType();
  uint64_t v18 = *(void *)(v318 - 8);
  uint64_t v19 = __chkstk_darwin(v318);
  v268 = (char *)&v266 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  v278 = (char *)&v266 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  v301 = (char *)&v266 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  v283 = (char *)&v266 - v26;
  __chkstk_darwin(v25);
  v289 = (char *)&v266 - v27;
  uint64_t v28 = sub_10000A844(&qword_10097F260);
  uint64_t v29 = __chkstk_darwin(v28 - 8);
  v270 = (char *)&v266 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v269 = (uint64_t)&v266 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  unsigned int v35 = (char *)&v266 - v34;
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v279 = (uint64_t)&v266 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v40 = (char *)&v266 - v39;
  uint64_t v41 = __chkstk_darwin(v38);
  v273 = (char *)&v266 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  v285 = (char *)&v266 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  v284 = (char *)&v266 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  v275 = (char *)&v266 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  v294 = (char *)&v266 - v50;
  __chkstk_darwin(v49);
  v293 = (char *)&v266 - v51;
  uint64_t v52 = type metadata accessor for UUID();
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = __chkstk_darwin(v52);
  v298 = (uint64_t *)((char *)&v266 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v56 = __chkstk_darwin(v54);
  v319 = (void (**)(char *, uint64_t))((char *)&v266 - v57);
  __chkstk_darwin(v56);
  v320 = (uint64_t *)((char *)&v266 - v58);
  uint64_t v292 = sub_10000A844(&qword_1009709A0);
  uint64_t v59 = __chkstk_darwin(v292);
  v310 = (void (*)(char *, uint64_t, uint64_t))((char *)&v266 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v61 = __chkstk_darwin(v59);
  v291 = (char *)&v266 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  v309 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&v266 - v64);
  __chkstk_darwin(v63);
  v290 = (char *)&v266 - v65;
  unint64_t v302 = sub_100245E8C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v66 = *(void *)(a1 + 64);
  uint64_t v276 = a1 + 64;
  uint64_t v67 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v68 = -1;
  if (v67 < 64) {
    uint64_t v68 = ~(-1 << v67);
  }
  unint64_t v69 = v68 & v66;
  int64_t v277 = (unint64_t)(v67 + 63) >> 6;
  v321 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  v322 = (void (**)(char *, uint64_t, uint64_t))(v18 + 32);
  v324 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  uint64_t v282 = v53 + 16;
  uint64_t v311 = v18;
  uint64_t v274 = v18 + 40;
  uint64_t v297 = v53;
  v313 = (void (**)(unint64_t, uint64_t))(v53 + 8);
  uint64_t v296 = a1;
  swift_bridgeObjectRetain();
  unint64_t v70 = 0;
  v312 = v10;
  v314 = v40;
  v315 = v35;
  uint64_t v317 = v52;
  while (1)
  {
    if (v69)
    {
      CFStringRef v304 = (const __CFString *)((v69 - 1) & v69);
      unint64_t v305 = v70;
      unint64_t v74 = __clz(__rbit64(v69)) | (v70 << 6);
      goto LABEL_25;
    }
    int64_t v75 = v70 + 1;
    if (__OFADD__(v70, 1)) {
      goto LABEL_158;
    }
    if (v75 >= v277) {
      break;
    }
    unint64_t v76 = *(void *)(v276 + 8 * v75);
    int64_t v77 = v70 + 1;
    if (!v76)
    {
      int64_t v77 = v70 + 2;
      if ((uint64_t)(v70 + 2) >= v277) {
        break;
      }
      unint64_t v76 = *(void *)(v276 + 8 * v77);
      if (!v76)
      {
        int64_t v77 = v70 + 3;
        if ((uint64_t)(v70 + 3) >= v277) {
          break;
        }
        unint64_t v76 = *(void *)(v276 + 8 * v77);
        if (!v76)
        {
          int64_t v77 = v70 + 4;
          if ((uint64_t)(v70 + 4) >= v277) {
            break;
          }
          unint64_t v76 = *(void *)(v276 + 8 * v77);
          if (!v76)
          {
            unint64_t v78 = v70 + 5;
            if ((uint64_t)(v70 + 5) >= v277) {
              break;
            }
            unint64_t v76 = *(void *)(v276 + 8 * v78);
            if (!v76)
            {
              while (1)
              {
                int64_t v77 = v78 + 1;
                if (__OFADD__(v78, 1)) {
                  goto LABEL_163;
                }
                if (v77 >= v277) {
                  goto LABEL_44;
                }
                unint64_t v76 = *(void *)(v276 + 8 * v77);
                ++v78;
                if (v76) {
                  goto LABEL_24;
                }
              }
            }
            int64_t v77 = v70 + 5;
          }
        }
      }
    }
LABEL_24:
    CFStringRef v304 = (const __CFString *)((v76 - 1) & v76);
    unint64_t v305 = v77;
    unint64_t v74 = __clz(__rbit64(v76)) + (v77 << 6);
LABEL_25:
    uint64_t v79 = v296;
    uint64_t v80 = *(void *)(v296 + 48);
    uint64_t v81 = type metadata accessor for SFAirDrop.TransferIdentifier();
    v323 = *(void **)(v81 - 8);
    uint64_t v82 = v80 + v323[9] * v74;
    v307 = (void (*)(void))v323[2];
    uint64_t v316 = (uint64_t)(v323 + 2);
    uint64_t v83 = (uint64_t)v290;
    ((void (*)(char *, uint64_t, uint64_t))v307)(v290, v82, v81);
    uint64_t v84 = *(void *)(v79 + 56);
    CFStringRef v85 = (const __CFString *)type metadata accessor for SFAirDropSend.Transfer();
    length = (void *)v85[-1].length;
    uint64_t v87 = v84 + length[9] * v74;
    uint64_t v88 = v292;
    uint64_t v89 = v83 + *(int *)(v292 + 48);
    CFStringRef v306 = (const __CFString *)length[2];
    ((void (*)(uint64_t, uint64_t, const __CFString *))v306)(v89, v87, v85);
    uint64_t v90 = (uint64_t)v309;
    sub_10024D388(v83, (uint64_t)v309, &qword_1009709A0);
    uint64_t v91 = *(int *)(v88 + 48);
    uint64_t v92 = v291;
    CFStringRef v93 = (const __CFString *)&v291[v91];
    uint64_t v94 = v90 + v91;
    uint64_t v95 = v307;
    ((void (*)(char *, uint64_t, uint64_t))v307)(v291, v90, v81);
    CFStringRef v303 = v93;
    CFStringRef v96 = v93;
    CFStringRef v97 = v306;
    ((void (*)(const __CFString *, uint64_t, const __CFString *))v306)(v96, v94, v85);
    SFAirDrop.TransferIdentifier.id.getter();
    uint64_t v98 = (char *)v323[1];
    ++v323;
    v308 = (void (*)(char *, uint64_t))v98;
    ((void (*)(char *, uint64_t))v98)(v92, v81);
    uint64_t v99 = (char *)v310 + *(int *)(v88 + 48);
    v95();
    ((void (*)(char *, uint64_t, const __CFString *))v97)(v99, v94, v85);
    uint64_t v100 = (uint64_t)v294;
    SFAirDropSend.Transfer.activeInterfaceType.getter();
    uint64_t v101 = (void (*)(void))length[1];
    CFStringRef v306 = v85;
    uint64_t v316 = (uint64_t)(length + 1);
    ((void (*)(char *, const __CFString *))v101)(v99, v85);
    uint64_t v102 = *v321;
    uint64_t v103 = v318;
    if ((*v321)(v100, 1, v318) == 1)
    {
      uint64_t v104 = *v324;
      uint64_t v105 = (uint64_t)v293;
      (*v324)(v293, 1, 1, v103);
      sub_10000A7E8(v100, &qword_10097F260);
    }
    else
    {
      uint64_t v105 = (uint64_t)v293;
      (*v322)(v293, v100, v103);
      uint64_t v104 = *v324;
      (*v324)((char *)v105, 0, 1, v103);
    }
    v308((char *)v310, v81);
    unsigned int v106 = v102(v105, 1, v103);
    uint64_t v107 = (uint64_t)v315;
    v307 = v101;
    if (v106 == 1)
    {
      sub_10000A7E8(v105, &qword_10097F260);
      uint64_t v108 = v302;
      swift_bridgeObjectRetain();
      unint64_t v109 = sub_100583A00((uint64_t)v320);
      char v111 = v110;
      swift_bridgeObjectRelease();
      if (v111)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v326 = (void *)v108;
        uint64_t v40 = v314;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10058E348();
          uint64_t v108 = (uint64_t)v326;
        }
        uint64_t v72 = *(void (**)(unint64_t, uint64_t))(v297 + 8);
        uint64_t v73 = v317;
        v72(*(void *)(v108 + 48) + *(void *)(v297 + 72) * v109, v317);
        uint64_t v113 = (uint64_t)v326;
        uint64_t v71 = (uint64_t)v275;
        (*(void (**)(char *, unint64_t, uint64_t))(v311 + 32))(v275, v326[7] + *(void *)(v311 + 72) * v109, v103);
        unint64_t v302 = v113;
        sub_1002ABDDC(v109, v113);
        swift_bridgeObjectRelease();
        v104((char *)v71, 0, 1, v103);
        unsigned int v35 = v315;
      }
      else
      {
        uint64_t v71 = (uint64_t)v275;
        v104(v275, 1, 1, v103);
        uint64_t v40 = v314;
        uint64_t v72 = *v313;
        uint64_t v73 = v317;
        unsigned int v35 = (char *)v107;
      }
      v72((unint64_t)v320, v73);
      sub_10000A7E8(v71, &qword_10097F260);
      uint64_t v10 = v312;
      uint64_t v52 = v73;
    }
    else
    {
      unint64_t v114 = *v322;
      (*v322)(v289, v105, v103);
      uint64_t v115 = v302;
      int v116 = swift_isUniquelyReferenced_nonNull_native();
      v326 = (void *)v115;
      unint64_t v118 = sub_100583A00((uint64_t)v320);
      uint64_t v119 = *(void *)(v115 + 16);
      BOOL v120 = (v117 & 1) == 0;
      uint64_t v121 = v119 + v120;
      uint64_t v52 = v317;
      if (__OFADD__(v119, v120))
      {
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
        goto LABEL_164;
      }
      char v122 = v117;
      if (*(void *)(v115 + 24) >= v121)
      {
        if ((v116 & 1) == 0) {
          sub_10058E348();
        }
      }
      else
      {
        sub_10058869C(v121, v116);
        unint64_t v123 = sub_100583A00((uint64_t)v320);
        if ((v122 & 1) != (v124 & 1))
        {
LABEL_167:
          uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          return result;
        }
        unint64_t v118 = v123;
      }
      uint64_t v40 = v314;
      id v125 = v326;
      if (v122)
      {
        (*(void (**)(unint64_t, char *, uint64_t))(v311 + 40))(v326[7] + *(void *)(v311 + 72) * v118, v289, v103);
      }
      else
      {
        v326[(v118 >> 6) + 8] |= 1 << v118;
        (*(void (**)(unint64_t, void *, uint64_t))(v297 + 16))(v125[6] + *(void *)(v297 + 72) * v118, v320, v52);
        v114((char *)(v125[7] + *(void *)(v311 + 72) * v118), (uint64_t)v289, v103);
        uint64_t v126 = v125[2];
        BOOL v127 = __OFADD__(v126, 1);
        uint64_t v128 = v126 + 1;
        if (v127) {
          goto LABEL_160;
        }
        v125[2] = v128;
      }
      unint64_t v302 = (unint64_t)v326;
      swift_bridgeObjectRelease();
      (*v313)((unint64_t)v320, v52);
      unsigned int v35 = (char *)v107;
      uint64_t v10 = v312;
    }
    ((void (*)(const __CFString *, const __CFString *))v307)(v303, v306);
    sub_10000A7E8((uint64_t)v309, &qword_1009709A0);
    unint64_t v70 = v305;
    unint64_t v69 = (unint64_t)v304;
  }
LABEL_44:
  swift_release();
  unint64_t v305 = sub_100245E8C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v129 = *(void *)(v295 + 64);
  CFStringRef v303 = (const __CFString *)(v295 + 64);
  uint64_t v130 = 1 << *(unsigned char *)(v295 + 32);
  uint64_t v131 = -1;
  if (v130 < 64) {
    uint64_t v131 = ~(-1 << v130);
  }
  unint64_t v132 = v131 & v129;
  CFStringRef v304 = (const __CFString *)((unint64_t)(v130 + 63) >> 6);
  swift_bridgeObjectRetain();
  uint64_t v133 = 0;
  while (1)
  {
    if (v132)
    {
      v307 = (void (*)(void))((v132 - 1) & v132);
      v308 = v133;
      unint64_t v136 = __clz(__rbit64(v132)) | ((void)v133 << 6);
      goto LABEL_68;
    }
    uint64_t v137 = (uint64_t)v133 + 1;
    if (__OFADD__(v133, 1)) {
      goto LABEL_159;
    }
    if (v137 >= (uint64_t)v304) {
      break;
    }
    unint64_t v138 = *((void *)&v303->isa + v137);
    uint64_t v139 = (uint64_t)v133 + 1;
    if (!v138)
    {
      uint64_t v139 = (uint64_t)v133 + 2;
      if ((uint64_t)((char *)v133 + 2) >= (uint64_t)v304) {
        break;
      }
      unint64_t v138 = *((void *)&v303->isa + v139);
      if (!v138)
      {
        uint64_t v139 = (uint64_t)v133 + 3;
        if ((uint64_t)((char *)v133 + 3) >= (uint64_t)v304) {
          break;
        }
        unint64_t v138 = *((void *)&v303->isa + v139);
        if (!v138)
        {
          uint64_t v139 = (uint64_t)v133 + 4;
          if ((uint64_t)((char *)v133 + 4) >= (uint64_t)v304) {
            break;
          }
          unint64_t v138 = *((void *)&v303->isa + v139);
          if (!v138)
          {
            v140 = (char *)v133 + 5;
            if ((uint64_t)((char *)v133 + 5) >= (uint64_t)v304) {
              break;
            }
            unint64_t v138 = *((void *)&v303->isa + (void)v140);
            if (!v138)
            {
              while (1)
              {
                uint64_t v139 = (uint64_t)(v140 + 1);
                if (__OFADD__(v140, 1)) {
                  break;
                }
                if (v139 >= (uint64_t)v304) {
                  goto LABEL_87;
                }
                unint64_t v138 = *((void *)&v303->isa + v139);
                ++v140;
                if (v138) {
                  goto LABEL_67;
                }
              }
LABEL_164:
              __break(1u);
LABEL_165:
              swift_once();
              goto LABEL_143;
            }
            uint64_t v139 = (uint64_t)v133 + 5;
          }
        }
      }
    }
LABEL_67:
    v307 = (void (*)(void))((v138 - 1) & v138);
    v308 = (void (*)(char *, uint64_t))v139;
    unint64_t v136 = __clz(__rbit64(v138)) + (v139 << 6);
LABEL_68:
    uint64_t v141 = v295;
    uint64_t v142 = *(void *)(v295 + 48);
    uint64_t v143 = type metadata accessor for SFAirDrop.TransferIdentifier();
    v323 = *(void **)(v143 - 8);
    uint64_t v144 = v142 + v323[9] * v136;
    v310 = (void (*)(char *, uint64_t, uint64_t))v323[2];
    v320 = v323 + 2;
    uint64_t v145 = (uint64_t)v286;
    v310(v286, v144, v143);
    uint64_t v146 = *(void *)(v141 + 56);
    uint64_t v147 = type metadata accessor for SFAirDropReceive.Transfer();
    double v148 = *(void **)(v147 - 8);
    uint64_t v149 = v146 + v148[9] * v136;
    uint64_t v150 = v288;
    uint64_t v151 = v145 + *(int *)(v288 + 48);
    v309 = (void (*)(uint64_t, uint64_t, uint64_t))v148[2];
    v309(v151, v149, v147);
    uint64_t v152 = v299;
    sub_10024D388(v145, v299, &qword_100970998);
    uint64_t v153 = *(int *)(v150 + 48);
    v154 = v287;
    CFStringRef v155 = (const __CFString *)&v287[v153];
    uint64_t v156 = v152 + v153;
    uint64_t v157 = (void (*)(void))v310;
    v310(v287, v152, v143);
    CFStringRef v306 = v155;
    CFStringRef v158 = v155;
    v159 = (void (*)(char *, uint64_t, uint64_t))v309;
    v309((uint64_t)v158, v156, v147);
    SFAirDrop.TransferIdentifier.id.getter();
    uint64_t v160 = (void (*)(char *, uint64_t))v323[1];
    ++v323;
    uint64_t v316 = (uint64_t)v160;
    v160(v154, v143);
    uint64_t v161 = &v300[*(int *)(v150 + 48)];
    v157();
    v159(v161, v156, v147);
    uint64_t v162 = (uint64_t)v285;
    SFAirDropReceive.Transfer.activeInterfaceType.getter();
    uint64_t v163 = (uint64_t *)v148[1];
    v320 = (void *)v147;
    v309 = (void (*)(uint64_t, uint64_t, uint64_t))v163;
    v310 = (void (*)(char *, uint64_t, uint64_t))(v148 + 1);
    ((void (*)(char *, uint64_t))v163)(v161, v147);
    uint64_t v164 = *v321;
    uint64_t v165 = v318;
    if ((*v321)(v162, 1, v318) == 1)
    {
      v166 = *v324;
      uint64_t v167 = (uint64_t)v284;
      (*v324)(v284, 1, 1, v165);
      sub_10000A7E8(v162, &qword_10097F260);
    }
    else
    {
      uint64_t v167 = (uint64_t)v284;
      (*v322)(v284, v162, v165);
      v166 = *v324;
      (*v324)((char *)v167, 0, 1, v165);
    }
    uint64_t v52 = v317;
    ((void (*)(char *, uint64_t))v316)(v300, v143);
    if (v164(v167, 1, v165) == 1)
    {
      sub_10000A7E8(v167, &qword_10097F260);
      unint64_t v168 = v305;
      swift_bridgeObjectRetain();
      unint64_t v169 = sub_100583A00((uint64_t)v319);
      char v171 = v170;
      swift_bridgeObjectRelease();
      if (v171)
      {
        char v172 = swift_isUniquelyReferenced_nonNull_native();
        v326 = (void *)v168;
        uint64_t v40 = v314;
        if ((v172 & 1) == 0)
        {
          sub_10058E348();
          unint64_t v168 = (unint64_t)v326;
        }
        unint64_t v173 = *(void *)(v168 + 48) + *(void *)(v297 + 72) * v169;
        v135 = *(void (**)(unint64_t, uint64_t))(v297 + 8);
        v135(v173, v52);
        uint64_t v174 = (uint64_t)v326;
        uint64_t v134 = (uint64_t)v273;
        (*(void (**)(char *, unint64_t, uint64_t))(v311 + 32))(v273, v326[7] + *(void *)(v311 + 72) * v169, v165);
        unint64_t v305 = v174;
        sub_1002ABDDC(v169, v174);
        swift_bridgeObjectRelease();
        v166((char *)v134, 0, 1, v165);
      }
      else
      {
        uint64_t v134 = (uint64_t)v273;
        v166(v273, 1, 1, v165);
        uint64_t v40 = v314;
        v135 = *v313;
      }
      v135((unint64_t)v319, v52);
      sub_10000A7E8(v134, &qword_10097F260);
    }
    else
    {
      BOOL v175 = *v322;
      (*v322)(v283, v167, v165);
      uint64_t v176 = v305;
      int v177 = swift_isUniquelyReferenced_nonNull_native();
      v326 = (void *)v176;
      unint64_t v179 = sub_100583A00((uint64_t)v319);
      uint64_t v180 = *(void *)(v176 + 16);
      BOOL v181 = (v178 & 1) == 0;
      uint64_t v182 = v180 + v181;
      if (__OFADD__(v180, v181)) {
        goto LABEL_157;
      }
      char v183 = v178;
      if (*(void *)(v176 + 24) >= v182)
      {
        if ((v177 & 1) == 0) {
          sub_10058E348();
        }
      }
      else
      {
        sub_10058869C(v182, v177);
        unint64_t v184 = sub_100583A00((uint64_t)v319);
        if ((v183 & 1) != (v185 & 1)) {
          goto LABEL_167;
        }
        unint64_t v179 = v184;
      }
      uint64_t v40 = v314;
      v186 = v326;
      if (v183)
      {
        (*(void (**)(unint64_t, char *, uint64_t))(v311 + 40))(v326[7] + *(void *)(v311 + 72) * v179, v283, v165);
      }
      else
      {
        v326[(v179 >> 6) + 8] |= 1 << v179;
        (*(void (**)(unint64_t, void (**)(char *, uint64_t), uint64_t))(v297 + 16))(v186[6] + *(void *)(v297 + 72) * v179, v319, v52);
        v175((char *)(v186[7] + *(void *)(v311 + 72) * v179), (uint64_t)v283, v165);
        uint64_t v187 = v186[2];
        BOOL v127 = __OFADD__(v187, 1);
        uint64_t v188 = v187 + 1;
        if (v127) {
          goto LABEL_161;
        }
        v186[2] = v188;
      }
      unint64_t v305 = (unint64_t)v326;
      swift_bridgeObjectRelease();
      (*v313)((unint64_t)v319, v52);
    }
    uint64_t v10 = v312;
    unsigned int v35 = v315;
    unint64_t v132 = (unint64_t)v307;
    uint64_t v133 = v308;
    ((void (*)(const __CFString *, void *))v309)(v306, v320);
    sub_10000A7E8(v299, &qword_100970998);
  }
LABEL_87:
  swift_release();
  uint64_t v189 = v302;
  swift_bridgeObjectRetain();
  uint64_t v190 = sub_100368F9C(v305, v189);
  v300 = 0;
  uint64_t v191 = *(void *)(v190 + 64);
  unint64_t v305 = v190 + 64;
  uint64_t v192 = 1 << *(unsigned char *)(v190 + 32);
  uint64_t v193 = -1;
  if (v192 < 64) {
    uint64_t v193 = ~(-1 << v192);
  }
  unint64_t v194 = v193 & v191;
  v195 = (void *)(v311 + 16);
  v310 = (void (*)(char *, uint64_t, uint64_t))(v297 + 32);
  v319 = (void (**)(char *, uint64_t))(v311 + 8);
  CFStringRef v304 = @"Receive";
  CFStringRef v303 = @"Send";
  CFStringRef v306 = @"InterfaceChanged";
  v307 = (void (*)(void))((unint64_t)(v192 + 63) >> 6);
  uint64_t v299 = (uint64_t)v307 - 1;
  v309 = (void (*)(uint64_t, uint64_t, uint64_t))v190;
  swift_bridgeObjectRetain();
  uint64_t v316 = 0;
  v323 = v195;
  while (2)
  {
    uint64_t v204 = (uint64_t)v281;
    if (v194)
    {
      v320 = (void *)((v194 - 1) & v194);
      unint64_t v205 = __clz(__rbit64(v194)) | (v316 << 6);
      goto LABEL_95;
    }
    uint64_t v211 = v316 + 1;
    if (__OFADD__(v316, 1)) {
      goto LABEL_162;
    }
    if (v211 >= (uint64_t)v307) {
      goto LABEL_116;
    }
    unint64_t v212 = *(void *)(v305 + 8 * v211);
    if (!v212)
    {
      uint64_t v213 = v316 + 2;
      ++v316;
      if (v211 + 1 < (uint64_t)v307)
      {
        unint64_t v212 = *(void *)(v305 + 8 * v213);
        if (v212)
        {
LABEL_102:
          uint64_t v211 = v213;
          goto LABEL_99;
        }
        uint64_t v316 = v211 + 1;
        if (v211 + 2 < (uint64_t)v307)
        {
          unint64_t v212 = *(void *)(v305 + 8 * (v211 + 2));
          if (v212)
          {
            v211 += 2;
            goto LABEL_99;
          }
          uint64_t v316 = v211 + 2;
          if (v211 + 3 < (uint64_t)v307)
          {
            unint64_t v212 = *(void *)(v305 + 8 * (v211 + 3));
            if (v212)
            {
              v211 += 3;
              goto LABEL_99;
            }
            uint64_t v213 = v211 + 4;
            uint64_t v316 = v211 + 3;
            if (v211 + 4 < (uint64_t)v307)
            {
              unint64_t v212 = *(void *)(v305 + 8 * v213);
              if (!v212)
              {
                while (1)
                {
                  uint64_t v211 = v213 + 1;
                  if (__OFADD__(v213, 1)) {
                    break;
                  }
                  if (v211 >= (uint64_t)v307)
                  {
                    uint64_t v316 = v299;
                    goto LABEL_116;
                  }
                  unint64_t v212 = *(void *)(v305 + 8 * v211);
                  ++v213;
                  if (v212) {
                    goto LABEL_99;
                  }
                }
                __break(1u);
                goto LABEL_167;
              }
              goto LABEL_102;
            }
          }
        }
      }
LABEL_116:
      uint64_t v214 = sub_10000A844(&qword_10096B130);
      uint64_t v204 = (uint64_t)v281;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v214 - 8) + 56))(v281, 1, 1, v214);
      v320 = 0;
      goto LABEL_117;
    }
LABEL_99:
    v320 = (void *)((v212 - 1) & v212);
    unint64_t v205 = __clz(__rbit64(v212)) + (v211 << 6);
    uint64_t v316 = v211;
    uint64_t v204 = (uint64_t)v281;
LABEL_95:
    uint64_t v206 = (uint64_t)v309;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v297 + 16))(v204, *((void *)v309 + 6) + *(void *)(v297 + 72) * v205, v52);
    uint64_t v207 = *(void *)(v206 + 56);
    uint64_t v208 = v311;
    uint64_t v209 = v207 + *(void *)(v311 + 72) * v205;
    uint64_t v210 = sub_10000A844(&qword_10096B130);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v208 + 16))(v204 + *(int *)(v210 + 48), v209, v318);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v210 - 8) + 56))(v204, 0, 1, v210);
LABEL_117:
    sub_10024D388(v204, (uint64_t)v10, &qword_10096B138);
    uint64_t v215 = sub_10000A844(&qword_10096B130);
    v216 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v215 - 8) + 48);
    int v217 = v216(v10, 1, v215);
    uint64_t v218 = (uint64_t)v298;
    if (v217 != 1)
    {
      v219 = &v10[*(int *)(v215 + 48)];
      (*(void (**)(void *, char *, uint64_t))v310)(v298, v10, v317);
      v220 = *v322;
      uint64_t v200 = v318;
      (*v322)(v301, (uint64_t)v219, v318);
      uint64_t v221 = *(void *)(v280 + 160);
      if (*(void *)(v221 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v222 = sub_100583A00(v218);
        v223 = v278;
        v224 = (void (**)(char *, char *, uint64_t))v323;
        if (v225)
        {
          uint64_t v226 = v311;
          (*(void (**)(char *, unint64_t, uint64_t))(v311 + 16))(v40, *(void *)(v221 + 56) + *(void *)(v311 + 72) * v222, v200);
          v227 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v226 + 56);
          v227(v40, 0, 1, v200);
        }
        else
        {
          v227 = *v324;
          (*v324)(v40, 1, 1, v200);
        }
        swift_bridgeObjectRelease();
        BOOL v228 = ((uint64_t (*)(char *, uint64_t, uint64_t))*v321)(v40, 1, v200) != 1;
      }
      else
      {
        v227 = *v324;
        (*v324)(v40, 1, 1, v200);
        BOOL v228 = 0;
        v223 = v278;
        v224 = (void (**)(char *, char *, uint64_t))v323;
      }
      uint64_t v229 = (uint64_t)v40;
      uint64_t v230 = v279;
      sub_100323D88(v229, v279);
      v231 = *v224;
      (*v224)(v223, v301, v200);
      if (v228)
      {
        v231(v35, v223, v200);
        v308 = (void (*)(char *, uint64_t))v227;
        v227(v35, 0, 1, v200);
        uint64_t v232 = (uint64_t)v35;
        uint64_t v233 = v272;
        uint64_t v234 = v272 + *(int *)(v271 + 48);
        sub_100323D88(v230, v272);
        sub_100323D88(v232, v234);
        v235 = v223;
        v236 = *v321;
        if ((*v321)(v233, 1, v200) == 1)
        {
          sub_10000A7E8(v232, &qword_10097F260);
          v237 = *v319;
          (*v319)(v235, v200);
          sub_10000A7E8(v230, &qword_10097F260);
          if (v236(v234, 1, v200) == 1)
          {
            sub_10000A7E8(v272, &qword_10097F260);
            uint64_t v10 = v312;
            uint64_t v200 = v318;
            uint64_t v40 = v314;
            unsigned int v35 = v315;
            goto LABEL_92;
          }
          uint64_t v239 = v272;
          uint64_t v10 = v312;
          uint64_t v40 = v314;
LABEL_133:
          v240 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v308;
          sub_10000A7E8(v239, &qword_100970990);
          unsigned int v35 = v315;
          unint64_t v241 = v302;
          if (*(void *)(v302 + 16))
          {
LABEL_134:
            unint64_t v242 = sub_100583A00((uint64_t)v298);
            if (v243)
            {
              v231(v270, (char *)(*(void *)(v241 + 56) + *(void *)(v311 + 72) * v242), v318);
              uint64_t v196 = 0;
              v197 = &v327;
              goto LABEL_91;
            }
          }
LABEL_90:
          uint64_t v196 = 1;
          v197 = &v328;
LABEL_91:
          v198 = (void *)*(v197 - 32);
          uint64_t v199 = (uint64_t)v270;
          uint64_t v200 = v318;
          v240(v270, v196, 1, v318);
          sub_10000A7E8(v199, &qword_10097F260);
          id v201 = v198;
          swift_retain();
          Class isa = UUID._bridgeToObjectiveC()().super.isa;
          SFNWInterfaceType.description.getter();
          NSString v203 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          sub_100046FF8((uint64_t)v201, (uint64_t)v306, isa, (uint64_t)v203, 0.0);
          swift_release();

LABEL_92:
          v237(v301, v200);
          uint64_t v52 = v317;
          (*v313)((unint64_t)v298, v317);
          sub_10000A7E8((uint64_t)v40, &qword_10097F260);
          unint64_t v194 = (unint64_t)v320;
          continue;
        }
        uint64_t v238 = v269;
        sub_100323D88(v233, v269);
        if (v236(v234, 1, v200) == 1)
        {
          sub_10000A7E8((uint64_t)v315, &qword_10097F260);
          v237 = *v319;
          (*v319)(v278, v200);
          sub_10000A7E8(v279, &qword_10097F260);
          v237((char *)v238, v200);
          uint64_t v239 = v233;
          uint64_t v10 = v312;
          uint64_t v40 = v314;
          goto LABEL_133;
        }
        v244 = v268;
        v220(v268, v234, v200);
        sub_10036F790(&qword_1009709A8, (void (*)(uint64_t))&type metadata accessor for SFNWInterfaceType);
        char v245 = dispatch thunk of static Equatable.== infix(_:_:)();
        v237 = *v319;
        (*v319)(v244, v200);
        sub_10000A7E8((uint64_t)v315, &qword_10097F260);
        v237(v278, v200);
        sub_10000A7E8(v279, &qword_10097F260);
        v237((char *)v238, v200);
        sub_10000A7E8(v233, &qword_10097F260);
        if ((v245 & 1) == 0)
        {
          uint64_t v10 = v312;
          uint64_t v40 = v314;
          unsigned int v35 = v315;
          unint64_t v241 = v302;
          v240 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v308;
          if (*(void *)(v302 + 16)) {
            goto LABEL_134;
          }
          goto LABEL_90;
        }
        uint64_t v10 = v312;
        uint64_t v200 = v318;
        unsigned int v35 = v315;
      }
      else
      {
        v237 = *v319;
        (*v319)(v223, v200);
        sub_10000A7E8(v230, &qword_10097F260);
      }
      uint64_t v40 = v314;
      goto LABEL_92;
    }
    break;
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v246 = swift_bridgeObjectRetain();
  uint64_t v247 = sub_10036D6F8(v246);
  swift_bridgeObjectRelease();
  uint64_t v248 = *(void *)(v280 + 160);
  swift_bridgeObjectRetain();
  uint64_t v249 = v267;
  sub_100363AE0(v248, v267);
  swift_bridgeObjectRelease();
  int v250 = v216((char *)v249, 1, v215);
  sub_10000A7E8(v249, &qword_10096B138);
  if (*(void *)(v247 + 16))
  {
    if (v250 != 1)
    {
      swift_release();
      goto LABEL_155;
    }
    if (qword_100969BC0 != -1) {
      goto LABEL_165;
    }
LABEL_143:
    uint64_t v251 = type metadata accessor for Logger();
    sub_10000B47C(v251, (uint64_t)qword_10096EF58);
    swift_retain();
    v252 = Logger.logObject.getter();
    os_log_type_t v253 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v252, v253))
    {
      v254 = (uint8_t *)swift_slowAlloc();
      v326 = (void *)swift_slowAlloc();
      *(_DWORD *)v254 = 136315138;
      v324 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v254 + 4);
      uint64_t v255 = swift_retain();
      uint64_t v256 = sub_10036378C(v255);
      swift_release();
      uint64_t v325 = v256;
      sub_10000A844((uint64_t *)&unk_100974C30);
      sub_1002AE308((unint64_t *)&qword_10096CE90, (uint64_t *)&unk_100974C30);
      uint64_t v257 = BidirectionalCollection<>.joined(separator:)();
      unint64_t v259 = v258;
      swift_bridgeObjectRelease();
      uint64_t v325 = sub_100254634(v257, v259, (uint64_t *)&v326);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v252, v253, "Transfers using cellular: %s", v254, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    char v264 = 1;
  }
  else
  {
    swift_release();
    if (v250 == 1) {
      goto LABEL_155;
    }
    if (qword_100969BC0 != -1) {
      swift_once();
    }
    uint64_t v260 = type metadata accessor for Logger();
    sub_10000B47C(v260, (uint64_t)qword_10096EF58);
    v261 = Logger.logObject.getter();
    os_log_type_t v262 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v261, v262))
    {
      v263 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v263 = 0;
      _os_log_impl((void *)&_mh_execute_header, v261, v262, "Transfers stopped using cellular", v263, 2u);
      swift_slowDealloc();
    }

    char v264 = 0;
  }
  sub_100667B98(v264);
LABEL_155:
  *(void *)(v280 + 160) = v309;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100368F9C(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_10036D140(a1, (uint64_t)sub_10036D068, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_100369028()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100970808);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100970808);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1003690F0(void *a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  id v44 = a3;
  uint64_t v45 = a7;
  uint64_t v40 = a6;
  uint64_t v41 = a1;
  uint64_t v42 = a5;
  id v43 = a2;
  uint64_t v47 = a4;
  uint64_t v39 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v8 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v11);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v12 - 8);
  *(void *)(v7 + 64) = 0;
  swift_unknownObjectWeakInit();
  sub_10000B740(0, (unint64_t *)&qword_10096A1A0);
  uint64_t v46 = v7;
  *(_OWORD *)(v7 + 112) = 0u;
  *(_OWORD *)(v7 + 128) = 0u;
  uint64_t v13 = v7 + 112;
  *(void *)(v7 + 144) = 0;
  static DispatchQoS.default.getter();
  v48[0] = _swiftEmptyArrayStorage;
  sub_10036F790((unint64_t *)&unk_100974840, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000A844((uint64_t *)&unk_10096A1B0);
  sub_1002AE308((unint64_t *)&qword_100974850, (uint64_t *)&unk_10096A1B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v39);
  uint64_t v14 = v40;
  uint64_t v15 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)(v7 + 168) = v15;
  uint64_t v16 = v41;
  uint64_t v17 = v42;
  *(void *)(v7 + 16) = v41;
  *(void *)(v7 + 24) = v17;
  uint64_t v18 = v47;
  *(void *)(v7 + 152) = v47;
  *(void *)(v7 + 160) = &_swiftEmptyDictionarySingleton;
  type metadata accessor for SDAirDropReceiveConnectionManager();
  swift_allocObject();
  id v19 = v16;
  id v20 = v17;
  swift_retain_n();
  id v21 = v19;
  id v22 = v20;
  id v23 = v43;
  id v24 = v44;
  swift_retain();
  id v25 = v15;
  uint64_t v26 = (void *)sub_100343C00((uint64_t)v21, (uint64_t)v23, (uint64_t)v24, (uint64_t)v22, v18, v14, (uint64_t)v25);
  *(void *)(v13 - 80) = v26;
  type metadata accessor for SDAirDropReceiveStateMachineAdaptor();
  swift_allocObject();
  id v27 = v21;
  id v28 = v22;
  id v29 = v23;
  uint64_t v30 = v45;
  id v31 = v29;
  id v32 = v25;
  swift_retain();
  *(void *)(v13 - 72) = sub_1003702F0(v27, v31, v28, v26, v32);
  v48[0] = sub_10024698C((uint64_t)_swiftEmptyArrayStorage);
  sub_10000A844(&qword_100970978);
  swift_allocObject();
  *(void *)(v13 - 64) = CurrentValueSubject.init(_:)();
  sub_100278C8C(v30, v13 - 40);
  sub_10000B740(0, (unint64_t *)&qword_10096AC60);
  uint64_t v33 = (void *)static NSUserDefaults.airdrop.getter();
  LOBYTE(v32) = SFAirDropUserDefaults.privateContactDiscoveryEnabled.getter();

  if (v32)
  {
    uint64_t v34 = (objc_class *)type metadata accessor for SDAirDropiOSNotificationManager();
    unsigned int v35 = [objc_allocWithZone(v34) init];
    uint64_t v36 = &off_1008D7F58;
  }
  else
  {
    uint64_t v34 = (objc_class *)type metadata accessor for SDAirDropPlatformNotificationManagerUnsupported();
    unsigned int v35 = (void *)swift_allocObject();
    v35[3] = 0;
    swift_unknownObjectWeakInit();
    uint64_t v36 = &off_1008DDBA8;
  }
  v48[3] = v34;
  v48[4] = v36;

  swift_release();
  swift_release();
  v48[0] = v35;
  sub_10024D338(v30);
  swift_beginAccess();
  sub_10036F728((uint64_t)v48, v13);
  swift_endAccess();
  return v46;
}

uint64_t sub_1003695CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100969D08 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000B47C(v5, (uint64_t)qword_100970808);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "SDAirDropReceiveService start", v8, 2u);
    swift_slowDealloc();
  }

  *(void *)(v1[5] + 24) = &off_1008D7D78;
  swift_unknownObjectWeakAssign();
  sub_10036FCA8();
  uint64_t v9 = v1[12];
  uint64_t v10 = v1[13];
  sub_10026BB6C(v1 + 9, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
  sub_100249454();
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
  uint64_t v12 = qword_100969B90;
  swift_retain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = static AirDropActor.shared;
  uint64_t v14 = sub_10036F790((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = v13;
  v15[3] = v14;
  v15[4] = v1;
  swift_retain();
  sub_10028CAC4((uint64_t)v4, (uint64_t)&unk_100970960, (uint64_t)v15);
  swift_release();
  sub_100667B98(0);
  v1[20] = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v16 = v1[17];
  if (v16)
  {
    uint64_t v17 = v1[18];
    sub_1002AF758((uint64_t)(v1 + 14), v1[17]);
    uint64_t v18 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v17 + 16);
    uint64_t v19 = swift_unknownObjectRetain();
    v18(v19, &off_1008D7D68, v16, v17);
  }
  return swift_endAccess();
}

uint64_t sub_1003698E0(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = type metadata accessor for Logger();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  sub_10000A844(&qword_1009709E0);
  v2[10] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropReceive.Transfer();
  v2[11] = v4;
  v2[12] = *(void *)(v4 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v2[15] = v5;
  v2[16] = *(void *)(v5 - 8);
  v2[17] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v2[18] = static AirDropActor.shared;
  return _swift_task_switch(sub_100369AD4, v6, 0);
}

uint64_t sub_100369AD4()
{
  uint64_t v48 = v0;
  if (qword_100969D08 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[15];
  sub_10000B47C(v0[7], (uint64_t)qword_100970808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v1, v4);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v9 = v0[16];
  uint64_t v8 = v0[17];
  uint64_t v10 = v0[15];
  if (v7)
  {
    os_log_t log = v5;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    v47[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    sub_10036F790(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[4] = sub_100254634(v12, v13, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    _os_log_impl((void *)&_mh_execute_header, log, v6, "Canceling receive transfer %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  CurrentValueSubject.value.getter();
  uint64_t v14 = v0[2];
  if (!*(void *)(v14 + 16) || (unint64_t v15 = sub_10058392C(v0[5]), (v16 & 1) == 0))
  {
    SFAirDrop.TransferIdentifier.stringValue.getter();
    sub_10054D6A8(8);
    swift_bridgeObjectRelease();
    uint64_t v26 = static String._fromSubstring(_:)();
    id v28 = v27;
    swift_bridgeObjectRelease();
    v47[0] = 0x2E706F7244726941;
    v47[1] = 0xE800000000000000;
    v29._countAndFlagsBits = v26;
    v29._object = v28;
    String.append(_:)(v29);
    swift_bridgeObjectRelease();
    Logger.init(subsystem:category:)();
    swift_bridgeObjectRetain();
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v46 = v0[9];
      os_log_t loga = (os_log_t)v0[8];
      uint64_t v45 = v0[7];
      id v32 = (uint8_t *)swift_slowAlloc();
      v47[0] = swift_slowAlloc();
      *(_DWORD *)id v32 = 136315138;
      sub_10036F790(&qword_10096C610, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
      swift_bridgeObjectRetain();
      uint64_t v33 = Dictionary.Keys.description.getter();
      unint64_t v35 = v34;
      swift_bridgeObjectRelease();
      v0[3] = sub_100254634(v33, v35, v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "No receive transfer to cancel. Current transfer IDs: %s", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (*)(uint64_t, uint64_t))loga[1].isa)(v46, v45);
    }
    else
    {
      uint64_t v37 = v0[8];
      uint64_t v36 = v0[9];
      uint64_t v38 = v0[7];
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
    }
    uint64_t v39 = type metadata accessor for SFAirDropReceive.Failure();
    sub_10036F790(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v39 - 8) + 104))(v40, enum case for SFAirDropReceive.Failure.badRequest(_:), v39);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_14;
  }
  uint64_t v17 = v0[13];
  uint64_t v18 = v0[14];
  uint64_t v19 = v0[11];
  uint64_t v20 = v0[12];
  uint64_t v21 = v0[10];
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 16))(v17, *(void *)(v14 + 56) + *(void *)(v20 + 72) * v15, v19);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v18, v17, v19);
  SFAirDropReceive.Transfer.cancelAction.getter();
  uint64_t v22 = type metadata accessor for SFAirDrop.DeclineAction();
  v0[19] = v22;
  uint64_t v23 = *(void *)(v22 - 8);
  v0[20] = v23;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    uint64_t v24 = v0[10];
    (*(void (**)(void, void))(v0[12] + 8))(v0[14], v0[11]);
    sub_10000A7E8(v24, &qword_1009709E0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v25 = (uint64_t (*)(void))v0[1];
LABEL_14:
    return v25();
  }
  uint64_t v42 = (void *)swift_task_alloc();
  v0[21] = v42;
  void *v42 = v0;
  v42[1] = sub_10036A278;
  return SFAirDrop.DeclineAction.decline()();
}

uint64_t sub_10036A278()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[18];
    uint64_t v4 = sub_10036A45C;
  }
  else
  {
    uint64_t v5 = v2[18];
    (*(void (**)(void, void))(v2[20] + 8))(v2[10], v2[19]);
    uint64_t v4 = sub_10036A3B0;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10036A3B0()
{
  (*(void (**)(void, void))(v0[12] + 8))(v0[14], v0[11]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10036A45C()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[10];
  (*(void (**)(void, void))(v0[12] + 8))(v0[14], v0[11]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10036A530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  uint64_t v5 = sub_10000A844(&qword_100970968);
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  uint64_t v6 = sub_10000A844(&qword_100970970);
  v4[9] = v6;
  v4[10] = *(void *)(v6 - 8);
  v4[11] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  v4[12] = static AirDropActor.shared;
  return _swift_task_switch(sub_10036A690, v7, 0);
}

uint64_t sub_10036A690()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  v0[2] = *(void *)(v0[5] + 48);
  sub_10000A844(&qword_100970978);
  sub_1002AE308(&qword_100970980, &qword_100970978);
  Publisher<>.values.getter();
  AsyncPublisher.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = static AirDropActor.shared;
  uint64_t v5 = sub_10036F790((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v8 = (char *)&dword_100970988 + dword_100970988;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[13] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10036A82C;
  return ((uint64_t (*)(uint64_t, uint64_t, void *))v8)(v4, v5, v0 + 3);
}

uint64_t sub_10036A82C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 96);
  *(void *)(*(void *)v1 + 112) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10036A944, v2, 0);
}

uint64_t sub_10036A944()
{
  uint64_t v19 = v0;
  uint64_t v1 = v0[14];
  if (v1)
  {
    if (qword_100969D08 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000B47C(v2, (uint64_t)qword_100970808);
    swift_bridgeObjectRetain_n();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136315138;
      type metadata accessor for SFAirDrop.TransferIdentifier();
      type metadata accessor for SFAirDropReceive.Transfer();
      sub_10036F790(&qword_10096C610, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
      swift_bridgeObjectRetain();
      uint64_t v6 = Dictionary.description.getter();
      unint64_t v8 = v7;
      swift_bridgeObjectRelease();
      v0[4] = sub_100254634(v6, v8, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Receive transfers updates in daemon: %s", v5, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v11 = (void *)v0[5];
    sub_100366A2C((uint64_t)&_swiftEmptyDictionarySingleton, v1);
    uint64_t v12 = v11[12];
    uint64_t v13 = v11[13];
    sub_10026BB6C(v11 + 9, v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 72))(v1, v12, v13);
    swift_bridgeObjectRelease();
    uint64_t v14 = static AirDropActor.shared;
    uint64_t v15 = sub_10036F790((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100970988 + dword_100970988);
    char v16 = (void *)swift_task_alloc();
    v0[13] = v16;
    *char v16 = v0;
    v16[1] = sub_10036A82C;
    return v17(v14, v15);
  }
  else
  {
    (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_10036AD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[30] = a3;
  v4[31] = a4;
  v4[29] = a2;
  sub_10000A844(&qword_10096C920);
  v4[32] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v4[33] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[34] = v6;
  v4[35] = *(void *)(v6 + 64);
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SFAirDropReceive.AskRequest();
  v4[38] = v7;
  v4[39] = *(void *)(v7 - 8);
  v4[40] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SFAirDrop.DisplayPriority();
  v4[41] = v8;
  v4[42] = *(void *)(v8 - 8);
  v4[43] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for SFAirDropReceive.Transfer.State();
  v4[44] = v9;
  v4[45] = *(void *)(v9 - 8);
  v4[46] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer();
  v4[47] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v4[48] = v11;
  v4[49] = *(void *)(v11 + 64);
  v4[50] = swift_task_alloc();
  v4[51] = swift_task_alloc();
  v4[52] = swift_task_alloc();
  v4[53] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v4[54] = v12;
  v4[55] = *(void *)(v12 - 8);
  v4[56] = swift_task_alloc();
  v4[57] = swift_task_alloc();
  v4[58] = swift_task_alloc();
  v4[59] = swift_task_alloc();
  sub_10000A844(&qword_100970920);
  v4[60] = swift_task_alloc();
  v4[61] = swift_task_alloc();
  v4[62] = swift_task_alloc();
  v4[63] = swift_task_alloc();
  v4[64] = swift_task_alloc();
  uint64_t v13 = sub_10000A844(&qword_100970938);
  v4[65] = v13;
  v4[66] = *(void *)(v13 - 8);
  v4[67] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v14 = static AirDropActor.shared;
  v4[68] = static AirDropActor.shared;
  return _swift_task_switch(sub_10036B138, v14, 0);
}

uint64_t sub_10036B138()
{
  sub_10000A844(&qword_100970918);
  SFNoThrowAsyncSequence.makeAsyncIterator()();
  swift_beginAccess();
  v0[69] = static AirDropActor.shared;
  v0[70] = sub_10036F790((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v1 = sub_1002AE308(&qword_100970940, &qword_100970938);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[71] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10036B290;
  uint64_t v3 = v0[65];
  uint64_t v4 = v0[64];
  return dispatch thunk of AsyncIteratorProtocol.next()(v4, v3, v1);
}

uint64_t sub_10036B290()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 576) = v0;
  swift_task_dealloc();
  if (v0)
  {
    if (*(void *)(v2 + 552))
    {
      swift_getObjectType();
      uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v5 = v4;
    }
    else
    {
      uint64_t v3 = 0;
      uint64_t v5 = 0;
    }
    uint64_t v7 = sub_10036C098;
    uint64_t v6 = v3;
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 544);
    uint64_t v7 = sub_10036B3E8;
    uint64_t v5 = 0;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_10036B3E8()
{
  uint64_t v105 = v0;
  uint64_t v1 = v0[64];
  uint64_t v2 = v0[47];
  uint64_t v3 = v0[48];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v4(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[66] + 8))(v0[67], v0[65]);
    if (qword_100969D08 != -1) {
      swift_once();
    }
    uint64_t v5 = v0[59];
    uint64_t v7 = v0[54];
    uint64_t v6 = v0[55];
    uint64_t v8 = v0[30];
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000B47C(v9, (uint64_t)qword_100970808);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    v0[73] = v10;
    v0[74] = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v10(v5, v8, v7);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    BOOL v13 = os_log_type_enabled(v11, v12);
    uint64_t v14 = v0[59];
    uint64_t v15 = v0[54];
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v0[55] + 8);
    if (v13)
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v104 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      sub_10036F790(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
      uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[23] = sub_100254634(v18, v19, &v104);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*v16)(v14, v15);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "SDAirDropReceiveService.transfers REMOVE {id: %s}", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*v16)(v0[59], v0[54]);
    }

    v0[79] = *(void *)(v0[31] + 48);
    CurrentValueSubject.value.getter();
    uint64_t v45 = v0[24];
    if (*(void *)(v45 + 16) && (unint64_t v46 = sub_10058392C(v0[30]), (v47 & 1) != 0))
    {
      (*(void (**)(void, unint64_t, void))(v0[48] + 16))(v0[61], *(void *)(v45 + 56) + *(void *)(v0[48] + 72) * v46, v0[47]);
      uint64_t v48 = 0;
    }
    else
    {
      uint64_t v48 = 1;
    }
    uint64_t v49 = v0[61];
    uint64_t v50 = v0[47];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[48] + 56))(v49, v48, 1, v50);
    swift_bridgeObjectRelease();
    int v51 = v4(v49, 1, v50);
    uint64_t v52 = v0[61];
    if (v51 == 1)
    {
      sub_10000A7E8(v0[61], &qword_100970920);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v53 = (uint64_t (*)(void))v0[1];
      return v53();
    }
    else
    {
      uint64_t v75 = v0[50];
      uint64_t v76 = v0[47];
      uint64_t v77 = v0[48];
      uint64_t v78 = v0[31];
      uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 32);
      v0[80] = v79;
      v0[81] = (v77 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      v79(v75, v52, v76);
      if (*(void *)(v78 + 136))
      {
        sub_100278C8C(v0[31] + 112, (uint64_t)(v0 + 7));
        uint64_t v80 = v0[10];
        uint64_t v81 = v0[11];
        sub_10026BB6C(v0 + 7, v80);
        uint64_t v103 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 + 40) + **(int **)(v81 + 40));
        uint64_t v82 = (void *)swift_task_alloc();
        v0[82] = v82;
        *uint64_t v82 = v0;
        v82[1] = sub_10036C890;
        uint64_t v83 = v0[50];
        return v103(v83, v80, v81);
      }
      else
      {
        SFAirDropReceive.Transfer.askRequest.getter();
        uint64_t v92 = (void *)swift_task_alloc();
        v0[83] = v92;
        *uint64_t v92 = v0;
        v92[1] = sub_10036CA54;
        uint64_t v93 = v0[40];
        return sub_10046A374(v93);
      }
    }
  }
  else
  {
    uint64_t v102 = v4;
    uint64_t v98 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    v98(v0[53], v1, v2);
    if (qword_100969D08 != -1) {
      swift_once();
    }
    uint64_t v20 = v0[58];
    uint64_t v21 = v0[54];
    uint64_t v22 = v0[55];
    uint64_t v24 = v0[52];
    uint64_t v23 = v0[53];
    uint64_t v25 = v0[47];
    uint64_t v26 = v0[48];
    uint64_t v27 = v0[30];
    uint64_t v28 = type metadata accessor for Logger();
    sub_10000B47C(v28, (uint64_t)qword_100970808);
    uint64_t v100 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
    v100(v20, v27, v21);
    Swift::String v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
    v29(v24, v23, v25);
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.default.getter();
    BOOL v32 = os_log_type_enabled(v30, v31);
    uint64_t v33 = v0[58];
    uint64_t v35 = v0[54];
    uint64_t v34 = v0[55];
    uint64_t v36 = v0[52];
    uint64_t v37 = v0[48];
    uint64_t v99 = v0[47];
    if (v32)
    {
      uint64_t v97 = v0[45];
      uint64_t v95 = v0[46];
      uint64_t v96 = v0[44];
      uint64_t v94 = v0[52];
      uint64_t v38 = swift_slowAlloc();
      uint64_t v104 = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 136315394;
      sub_10036F790(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
      uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[27] = sub_100254634(v39, v40, &v104);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v101 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
      v101(v33, v35);
      *(_WORD *)(v38 + 12) = 2080;
      SFAirDropReceive.Transfer.state.getter();
      sub_10036F790(&qword_100970950, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Transfer.State);
      uint64_t v41 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v43 = v42;
      (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v95, v96);
      v0[28] = sub_100254634(v41, v43, &v104);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      id v44 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
      v44(v94, v99);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "SDAirDropReceiveService.transfers UPDATE {id: %s, state: %s}", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v101 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
      v101(v33, v35);
      id v44 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
      v44(v36, v99);
    }

    v0[75] = v44;
    uint64_t v55 = v0[63];
    uint64_t v56 = v0[53];
    uint64_t v57 = v0[47];
    uint64_t v58 = v0[48];
    v100(v0[57], v0[30], v0[54]);
    v29(v55, v56, v57);
    uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56);
    v59(v55, 0, 1, v57);
    uint64_t v60 = (void (*)(void))CurrentValueSubject.value.modify();
    uint64_t v62 = v61;
    int v63 = v102(v55, 1, v57);
    uint64_t v64 = v0[57];
    if (v63 == 1)
    {
      sub_10000A7E8(v0[63], &qword_100970920);
      swift_bridgeObjectRetain();
      unint64_t v65 = sub_10058392C(v64);
      char v67 = v66;
      swift_bridgeObjectRelease();
      if (v67)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v0[26] = *v62;
        *uint64_t v62 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_10058D644();
        }
        uint64_t v69 = v0[62];
        uint64_t v70 = v0[47];
        uint64_t v71 = v0[48];
        v101(*(void *)(v0[26] + 48) + *(void *)(v0[55] + 72) * v65, v0[54]);
        uint64_t v72 = v0[26];
        v98(v69, *(void *)(v72 + 56) + *(void *)(v71 + 72) * v65, v70);
        sub_1002AB23C(v65, v72);
        *uint64_t v62 = v72;
        uint64_t v73 = v101;
        swift_bridgeObjectRelease();
        uint64_t v74 = 0;
      }
      else
      {
        uint64_t v74 = 1;
        uint64_t v73 = v101;
      }
      uint64_t v87 = v0[62];
      uint64_t v88 = v0[57];
      uint64_t v89 = v0[54];
      v59(v87, v74, 1, v0[47]);
      v73(v88, v89);
      sub_10000A7E8(v87, &qword_100970920);
    }
    else
    {
      uint64_t v84 = v0[54];
      uint64_t v85 = v0[51];
      v98(v85, v0[63], v0[47]);
      char v86 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v104 = *v62;
      *uint64_t v62 = 0x8000000000000000;
      sub_1005920C0(v85, v64, v86);
      *uint64_t v62 = v104;
      swift_bridgeObjectRelease();
      v101(v64, v84);
    }
    v60();
    uint64_t v90 = (void *)swift_task_alloc();
    v0[76] = v90;
    *uint64_t v90 = v0;
    v90[1] = sub_10036C11C;
    uint64_t v91 = v0[53];
    return sub_10034E3A4(v91);
  }
}

uint64_t sub_10036C098()
{
  *(void *)(v0 + 200) = *(void *)(v0 + 576);
  sub_10000A844(&qword_10096BAF0);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_10036C11C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 544);
  swift_task_dealloc();
  return _swift_task_switch(sub_10036C22C, v1, 0);
}

uint64_t sub_10036C22C()
{
  uint64_t v1 = v0[31];
  if (*(void *)(v1 + 136))
  {
    sub_100278C8C(v1 + 112, (uint64_t)(v0 + 2));
    uint64_t v2 = v0[5];
    uint64_t v3 = v0[6];
    sub_10026BB6C(v0 + 2, v2);
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 32) + **(int **)(v3 + 32));
    uint64_t v4 = (void *)swift_task_alloc();
    v0[77] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10036C3C4;
    uint64_t v5 = v0[53];
    return v9(v5, v2, v3);
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    v0[78] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10036C578;
    uint64_t v8 = v0[53];
    return sub_100469CB8(v8);
  }
}

uint64_t sub_10036C3C4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 544);
  swift_task_dealloc();
  return _swift_task_switch(sub_10036C4D4, v1, 0);
}

uint64_t sub_10036C4D4()
{
  sub_10024D338(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 624) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10036C578;
  uint64_t v2 = *(void *)(v0 + 424);
  return sub_100469CB8(v2);
}

uint64_t sub_10036C578()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 544);
  swift_task_dealloc();
  return _swift_task_switch(sub_10036C688, v1, 0);
}

uint64_t sub_10036C688()
{
  uint64_t v1 = v0[53];
  uint64_t v16 = v0[47];
  uint64_t v17 = (void (*)(uint64_t, uint64_t))v0[75];
  uint64_t v3 = v0[45];
  uint64_t v2 = v0[46];
  uint64_t v4 = v0[43];
  uint64_t v5 = v0[42];
  uint64_t v14 = v0[41];
  uint64_t v15 = v0[44];
  uint64_t v6 = (void *)v0[31];
  uint64_t v7 = v6[12];
  uint64_t v8 = v6[13];
  sub_10026BB6C(v6 + 9, v7);
  SFAirDropReceive.Transfer.state.getter();
  SFAirDropReceive.Transfer.displayPriority.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v2, v4, v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v14);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v15);
  sub_10056B058(v1);
  v17(v1, v16);
  v0[69] = static AirDropActor.shared;
  v0[70] = sub_10036F790((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v9 = sub_1002AE308(&qword_100970940, &qword_100970938);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[71] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_10036B290;
  uint64_t v11 = v0[65];
  uint64_t v12 = v0[64];
  return dispatch thunk of AsyncIteratorProtocol.next()(v12, v11, v9);
}

uint64_t sub_10036C890()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 544);
  swift_task_dealloc();
  return _swift_task_switch(sub_10036C9A0, v1, 0);
}

uint64_t sub_10036C9A0()
{
  sub_10024D338(v0 + 56);
  SFAirDropReceive.Transfer.askRequest.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 664) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10036CA54;
  uint64_t v2 = *(void *)(v0 + 320);
  return sub_10046A374(v2);
}

uint64_t sub_10036CA54()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 544);
  uint64_t v2 = *(void *)(*(void *)v0 + 320);
  uint64_t v3 = *(void *)(*(void *)v0 + 312);
  uint64_t v4 = *(void *)(*(void *)v0 + 304);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_10036CBC0, v1, 0);
}

uint64_t sub_10036CBC0()
{
  uint64_t v22 = (void (*)(unint64_t, uint64_t, uint64_t))v0[80];
  uint64_t v27 = (void (*)(uint64_t, uint64_t, uint64_t))v0[73];
  uint64_t v28 = v0[60];
  uint64_t v25 = v0[56];
  uint64_t v26 = v0[54];
  uint64_t v1 = v0[50];
  uint64_t v2 = v0[51];
  uint64_t v3 = v0[48];
  uint64_t v4 = v0[47];
  uint64_t v5 = v0[36];
  uint64_t v6 = v0[37];
  uint64_t v7 = v0[34];
  uint64_t v20 = v0[49];
  uint64_t v8 = v0[32];
  uint64_t v19 = v0[33];
  uint64_t v21 = v8;
  uint64_t v23 = v0[30];
  uint64_t v24 = v1;
  SFAirDropReceive.Transfer.receiveID.getter();
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = v2;
  uint64_t v11 = v2;
  uint64_t v12 = v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v10, v1, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v6, v19);
  unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v14 = (v20 + *(unsigned __int8 *)(v7 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  v22(v15 + v13, v11, v12);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v15 + v14, v5, v19);
  static Task<>.noThrow(priority:operation:)();
  swift_release();
  swift_release();
  sub_10000A7E8(v21, &qword_10096C920);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v19);
  v27(v25, v23, v26);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v28, 1, 1, v12);
  uint64_t v16 = (void (*)(void *, void))CurrentValueSubject.value.modify();
  sub_100466A24(v28, v25);
  v16(v0 + 16, 0);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v24, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

id *sub_10036CF98()
{
  swift_release();
  swift_release();
  swift_release();
  sub_100261080((uint64_t)(v0 + 7));
  sub_10024D338((uint64_t)(v0 + 9));
  sub_10000A7E8((uint64_t)(v0 + 14), &qword_1009709D0);
  swift_release();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_10036D010()
{
  sub_10036CF98();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDAirDropReceiveService()
{
  return self;
}

uint64_t sub_10036D068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + *(int *)(sub_10000A844(&qword_10096B130) + 48);
  uint64_t v5 = a2 + *(int *)(sub_10000A844(&qword_10096AC00) + 48);
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  uint64_t v7 = type metadata accessor for SFNWInterfaceType();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(v5, v4, v7);
}

uint64_t sub_10036D140(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v77 = a5;
  uint64_t v9 = type metadata accessor for SFNWInterfaceType();
  uint64_t v66 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v61 = (char *)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v60 = (char *)v56 - v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v56 - v14;
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v62 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10000A844(&qword_1009709B0);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v23 = ~v22;
  uint64_t v24 = *(void *)(a1 + 64);
  uint64_t v25 = -v22;
  uint64_t v70 = a1;
  uint64_t v71 = a1 + 64;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  else {
    uint64_t v26 = -1;
  }
  uint64_t v72 = v23;
  uint64_t v73 = 0;
  uint64_t v74 = v26 & v24;
  uint64_t v75 = a2;
  uint64_t v76 = a3;
  void v56[2] = a1;
  swift_bridgeObjectRetain();
  v56[1] = a3;
  swift_retain();
  sub_10024B8CC((uint64_t)v21);
  uint64_t v27 = sub_10000A844(&qword_10096AC00);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v21, 1, v27) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_10024D330();
    return swift_release();
  }
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v62 + 32);
  char v67 = (void (**)(char *, char *, uint64_t))(v66 + 32);
  uint64_t v68 = v29;
  uint64_t v58 = v66 + 8;
  uint64_t v59 = v66 + 16;
  uint64_t v69 = v62 + 32;
  v56[4] = v66 + 40;
  uint64_t v57 = (void (**)(char *, uint64_t))(v62 + 8);
  uint64_t v64 = v21;
  unint64_t v65 = v18;
  while (1)
  {
    uint64_t v39 = &v21[*(int *)(v27 + 48)];
    v68(v18, v21, v16);
    unint64_t v40 = *v67;
    (*v67)(v15, v39, v9);
    uint64_t v41 = (void *)*v77;
    unint64_t v43 = sub_100583A00((uint64_t)v18);
    uint64_t v44 = v41[2];
    BOOL v45 = (v42 & 1) == 0;
    uint64_t v46 = v44 + v45;
    if (__OFADD__(v44, v45)) {
      break;
    }
    char v47 = v42;
    if (v41[3] >= v46)
    {
      if (a4)
      {
        uint64_t v49 = v77;
        uint64_t v52 = (void *)*v77;
        if (v42) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v49 = v77;
        sub_10058E348();
        uint64_t v52 = (void *)*v49;
        if (v47) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      int v48 = a4 & 1;
      uint64_t v49 = v77;
      sub_10058869C(v46, v48);
      unint64_t v50 = sub_100583A00((uint64_t)v18);
      if ((v47 & 1) != (v51 & 1)) {
        goto LABEL_22;
      }
      unint64_t v43 = v50;
      uint64_t v52 = (void *)*v49;
      if (v47)
      {
LABEL_7:
        uint64_t v30 = v52[7];
        uint64_t v31 = v66;
        unint64_t v63 = *(void *)(v66 + 72) * v43;
        BOOL v32 = *(void (**)(char *, unint64_t, uint64_t))(v66 + 16);
        uint64_t v33 = v61;
        v32(v61, v30 + v63, v9);
        uint64_t v34 = v16;
        uint64_t v35 = v15;
        uint64_t v36 = v60;
        v32(v60, (unint64_t)v33, v9);
        uint64_t v37 = *(void (**)(char *, uint64_t))(v31 + 8);
        v37(v33, v9);
        v37(v35, v9);
        (*v57)(v65, v34);
        uint64_t v38 = v36;
        uint64_t v15 = v35;
        uint64_t v16 = v34;
        uint64_t v18 = v65;
        (*(void (**)(unint64_t, char *, uint64_t))(v31 + 40))(*(void *)(*v49 + 56) + v63, v38, v9);
        goto LABEL_8;
      }
    }
    v52[(v43 >> 6) + 8] |= 1 << v43;
    v68((char *)(v52[6] + *(void *)(v62 + 72) * v43), v18, v16);
    v40((char *)(v52[7] + *(void *)(v66 + 72) * v43), v15, v9);
    uint64_t v53 = v52[2];
    BOOL v54 = __OFADD__(v53, 1);
    uint64_t v55 = v53 + 1;
    if (v54) {
      goto LABEL_21;
    }
    uint64_t v52[2] = v55;
LABEL_8:
    uint64_t v21 = v64;
    sub_10024B8CC((uint64_t)v64);
    uint64_t v27 = sub_10000A844(&qword_10096AC00);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v21, 1, v27) == 1) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10036D6F8(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_10036D850((unint64_t *)((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = sub_10036D850((unint64_t *)v7, v4, v2);
    swift_slowDealloc();
  }
  return v2;
}

uint64_t sub_10036D850(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v38 = a2;
  uint64_t v39 = a1;
  uint64_t v54 = sub_10000A844(&qword_10096B130);
  __chkstk_darwin(v54);
  uint64_t v53 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for SFNWInterfaceType();
  uint64_t v5 = *(void *)(v50 - 8);
  uint64_t v6 = __chkstk_darwin(v50);
  uint64_t v52 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v61 = (char *)&v37 - v8;
  uint64_t v60 = type metadata accessor for UUID();
  uint64_t result = __chkstk_darwin(v60);
  uint64_t v49 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = 0;
  uint64_t v56 = (void *)a3;
  uint64_t v13 = *(void *)(a3 + 64);
  uint64_t v40 = 0;
  uint64_t v41 = a3 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v42 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v47 = v5 + 16;
  uint64_t v48 = v10 + 16;
  unsigned int v46 = enum case for SFNWInterfaceType.cellular(_:);
  uint64_t v51 = v5;
  uint64_t v44 = v5 + 8;
  uint64_t v45 = v5 + 104;
  uint64_t v59 = v10;
  uint64_t v43 = v10 + 8;
  uint64_t v17 = v49;
  uint64_t v18 = v5;
  uint64_t v19 = (uint64_t)v53;
  while (1)
  {
    if (v16)
    {
      uint64_t v57 = (v16 - 1) & v16;
      int64_t v58 = v12;
      unint64_t v20 = __clz(__rbit64(v16)) | (v12 << 6);
      goto LABEL_5;
    }
    int64_t v32 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v32 >= v42) {
      return sub_10064F67C(v39, v38, v40, v56);
    }
    unint64_t v33 = *(void *)(v41 + 8 * v32);
    int64_t v34 = v12 + 1;
    if (!v33)
    {
      int64_t v34 = v12 + 2;
      if (v12 + 2 >= v42) {
        return sub_10064F67C(v39, v38, v40, v56);
      }
      unint64_t v33 = *(void *)(v41 + 8 * v34);
      if (!v33)
      {
        int64_t v34 = v12 + 3;
        if (v12 + 3 >= v42) {
          return sub_10064F67C(v39, v38, v40, v56);
        }
        unint64_t v33 = *(void *)(v41 + 8 * v34);
        if (!v33) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v57 = (v33 - 1) & v33;
    int64_t v58 = v34;
    unint64_t v20 = __clz(__rbit64(v33)) + (v34 << 6);
LABEL_5:
    uint64_t v21 = v56;
    uint64_t v22 = v60;
    uint64_t v23 = *(void (**)(char *, unint64_t, uint64_t))(v59 + 16);
    v23(v17, v56[6] + *(void *)(v59 + 72) * v20, v60);
    uint64_t v24 = v21[7];
    uint64_t v25 = *(void *)(v18 + 72);
    unint64_t v55 = v20;
    uint64_t v26 = v24 + v25 * v20;
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    uint64_t v28 = v50;
    v27(v61, v26, v50);
    v23((char *)v19, (unint64_t)v17, v22);
    uint64_t v29 = v61;
    v27((char *)(v19 + *(int *)(v54 + 48)), (uint64_t)v61, v28);
    uint64_t v30 = v52;
    (*(void (**)(char *, void, uint64_t))(v18 + 104))(v52, v46, v28);
    LOBYTE(v23) = static SFNWInterfaceType.== infix(_:_:)();
    uint64_t v31 = *(void (**)(char *, uint64_t))(v18 + 8);
    v31(v30, v28);
    sub_10000A7E8(v19, &qword_10096B130);
    v31(v29, v28);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v17, v60);
    unint64_t v16 = v57;
    int64_t v12 = v58;
    if (v23)
    {
      *(unint64_t *)((char *)v39 + ((v55 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v55;
      if (__OFADD__(v40++, 1))
      {
        __break(1u);
        return sub_10064F67C(v39, v38, v40, v56);
      }
    }
  }
  uint64_t v35 = v12 + 4;
  if (v12 + 4 >= v42) {
    return sub_10064F67C(v39, v38, v40, v56);
  }
  unint64_t v33 = *(void *)(v41 + 8 * v35);
  if (v33)
  {
    int64_t v34 = v12 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v34 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (v34 >= v42) {
      return sub_10064F67C(v39, v38, v40, v56);
    }
    unint64_t v33 = *(void *)(v41 + 8 * v34);
    ++v35;
    if (v33) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_10036DD20(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  uint64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_10036DDD0(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  uint64_t v4 = type metadata accessor for SFAirDropReceive.AskRequest();
  v3[18] = v4;
  v3[19] = *(void *)(v4 - 8);
  v3[20] = swift_task_alloc();
  uint64_t v5 = sub_10000A844(&qword_100970918);
  v3[21] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[22] = v6;
  v3[23] = *(void *)(v6 + 64);
  v3[24] = swift_task_alloc();
  sub_10000A844(&qword_10096C920);
  v3[25] = swift_task_alloc();
  sub_10000A844(&qword_100970920);
  v3[26] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v3[27] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[28] = v8;
  v3[29] = *(void *)(v8 + 64);
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for SFAirDropReceive.Transfer();
  v3[32] = v9;
  v3[33] = *(void *)(v9 - 8);
  v3[34] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v10 = static AirDropActor.shared;
  v3[35] = static AirDropActor.shared;
  return _swift_task_switch(sub_10036E068, v10, 0);
}

uint64_t sub_10036E068()
{
  uint64_t v29 = v0;
  if (qword_100969D08 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[33];
  uint64_t v2 = v0[34];
  uint64_t v4 = v0[32];
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000B47C(v5, (uint64_t)qword_100970808);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[36] = v6;
  v0[37] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v1, v4);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v11 = v0[33];
  uint64_t v10 = v0[34];
  if (v9)
  {
    uint64_t v24 = v0[32];
    uint64_t v12 = v0[31];
    os_log_type_t type = v8;
    uint64_t v14 = v0[27];
    uint64_t v13 = v0[28];
    os_log_t loga = v7;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315138;
    SFAirDropReceive.Transfer.id.getter();
    sub_10036F790(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v18 = v17;
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    v0[14] = sub_100254634(v16, v18, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v24);
    uint64_t v7 = loga;
    _os_log_impl((void *)&_mh_execute_header, loga, type, "SDAirDropReceiveService.transfers ADD {id: %s}", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v11 + 8))(v0[34], v0[32]);
  }

  uint64_t v19 = (void *)v0[17];
  uint64_t v20 = v19[12];
  uint64_t v21 = v19[13];
  sub_10026BB6C(v19 + 9, v20);
  os_log_t log = (os_log_t)(*(void *)(v21 + 40) + **(int **)(v21 + 40));
  uint64_t v22 = (void *)swift_task_alloc();
  v0[38] = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_10036E3C8;
  return ((uint64_t (*)(uint64_t, uint64_t))log)(v20, v21);
}

uint64_t sub_10036E3C8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4(0);
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 280);
    return _swift_task_switch(sub_10036E568, v6, 0);
  }
}

uint64_t sub_10036E568()
{
  uint64_t v1 = v0[17];
  swift_beginAccess();
  if (*(void *)(v1 + 136))
  {
    sub_100278C8C(v1 + 112, (uint64_t)(v0 + 2));
    uint64_t v2 = v0[5];
    uint64_t v3 = v0[6];
    sub_10026BB6C(v0 + 2, v2);
    SFAirDropReceive.Transfer.id.getter();
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 48) + **(int **)(v3 + 48));
    uint64_t v4 = (void *)swift_task_alloc();
    v0[39] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10036E9E4;
    uint64_t v5 = v0[31];
    return v29(v5, v2, v3);
  }
  else
  {
    uint64_t v7 = (void (*)(uint64_t, uint64_t, uint64_t))v0[36];
    uint64_t v9 = v0[32];
    uint64_t v8 = v0[33];
    uint64_t v30 = v0[31];
    uint64_t v27 = v0[29];
    uint64_t v23 = v0[28];
    uint64_t v10 = v0[26];
    uint64_t v24 = v0[27];
    uint64_t v25 = v0[30];
    uint64_t v31 = v0[25];
    uint64_t v11 = v0[22];
    uint64_t v26 = v0[23];
    uint64_t v21 = v0[21];
    uint64_t v22 = v0[24];
    uint64_t v28 = v0[17];
    uint64_t v12 = v0[15];
    uint64_t v20 = v0[16];
    SFAirDropReceive.Transfer.id.getter();
    v7(v10, v12, v9);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v9);
    uint64_t v13 = (void (*)(void *, void))CurrentValueSubject.value.modify();
    sub_100466A24(v10, v30);
    v13(v0 + 7, 0);
    SFAirDropReceive.Transfer.id.getter();
    uint64_t v14 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v31, 1, 1, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v22, v20, v21);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v25, v30, v24);
    unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    unint64_t v16 = (v26 + *(unsigned __int8 *)(v23 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v17 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32))(v17 + v15, v22, v21);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v23 + 32))(v17 + v16, v25, v24);
    *(void *)(v17 + ((v27 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) = v28;
    swift_retain();
    static Task<>.noThrow(priority:operation:)();
    swift_release();
    swift_release();
    sub_10000A7E8(v31, &qword_10096C920);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v30, v24);
    SFAirDropReceive.Transfer.askRequest.getter();
    unint64_t v18 = (void *)swift_task_alloc();
    v0[40] = v18;
    *unint64_t v18 = v0;
    v18[1] = sub_10036EEA4;
    uint64_t v19 = v0[20];
    return sub_10046A9A8(v19);
  }
}

uint64_t sub_10036E9E4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 280);
  uint64_t v2 = *(void *)(*(void *)v0 + 248);
  uint64_t v3 = *(void *)(*(void *)v0 + 224);
  uint64_t v4 = *(void *)(*(void *)v0 + 216);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_10036EB50, v1, 0);
}

uint64_t sub_10036EB50()
{
  sub_10024D338((uint64_t)(v0 + 2));
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[36];
  uint64_t v3 = v0[32];
  uint64_t v2 = v0[33];
  uint64_t v24 = v0[31];
  uint64_t v22 = v0[29];
  uint64_t v18 = v0[28];
  uint64_t v4 = v0[26];
  uint64_t v19 = v0[27];
  uint64_t v20 = v0[30];
  uint64_t v25 = v0[25];
  uint64_t v5 = v0[22];
  uint64_t v21 = v0[23];
  uint64_t v16 = v0[21];
  uint64_t v17 = v0[24];
  uint64_t v23 = v0[17];
  uint64_t v6 = v0[15];
  uint64_t v15 = v0[16];
  SFAirDropReceive.Transfer.id.getter();
  v1(v4, v6, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v4, 0, 1, v3);
  uint64_t v7 = (void (*)(void *, void))CurrentValueSubject.value.modify();
  sub_100466A24(v4, v24);
  v7(v0 + 7, 0);
  SFAirDropReceive.Transfer.id.getter();
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v25, 1, 1, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v17, v15, v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v20, v24, v19);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v10 = (v21 + *(unsigned __int8 *)(v18 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v11 + v9, v17, v16);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 32))(v11 + v10, v20, v19);
  *(void *)(v11 + ((v22 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = v23;
  swift_retain();
  static Task<>.noThrow(priority:operation:)();
  swift_release();
  swift_release();
  sub_10000A7E8(v25, &qword_10096C920);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v24, v19);
  SFAirDropReceive.Transfer.askRequest.getter();
  uint64_t v12 = (void *)swift_task_alloc();
  v0[40] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10036EEA4;
  uint64_t v13 = v0[20];
  return sub_10046A9A8(v13);
}

uint64_t sub_10036EEA4()
{
  uint64_t v1 = *(void *)(*v0 + 160);
  uint64_t v2 = *(void *)(*v0 + 152);
  uint64_t v3 = *(void *)(*v0 + 144);
  uint64_t v6 = *v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v6 + 8);
  return v4(1);
}

uint64_t sub_10036F0C4()
{
  uint64_t v1 = sub_10000A844(&qword_100970918);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release();

  return _swift_deallocObject(v0, v11 + 8, v10);
}

uint64_t sub_10036F22C(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(sub_10000A844(&qword_100970918) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for SFAirDrop.TransferIdentifier() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v1 + v6;
  uint64_t v11 = v1 + v9;
  uint64_t v12 = *(void *)(v1 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v13;
  *uint64_t v13 = v3;
  v13[1] = sub_10000A6F4;
  return sub_10036AD08(a1, v10, v11, v12);
}

uint64_t sub_10036F3A4()
{
  uint64_t v1 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_10036F4F4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SFAirDropReceive.Transfer() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(type metadata accessor for UUID() - 8) + 80);
  unint64_t v8 = v5 + v6 + v7;
  uint64_t v9 = v1 + v5;
  uint64_t v10 = v1 + (v8 & ~v7);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_10000A6F0;
  return sub_1003A65C8(a1, v9, v10);
}

uint64_t sub_10036F634()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10036F674(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F4;
  return sub_10036A530(a1, v4, v5, v6);
}

uint64_t sub_10036F728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_1009709D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10036F790(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s8KeyClassOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SDAirDropServerType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10036F93CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropServerType()
{
  return &type metadata for SDAirDropServerType;
}

uint64_t sub_10036F974()
{
  return sub_10036F998(&OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBonjourServer_listener) & 1;
}

uint64_t sub_10036F998(void *a1)
{
  uint64_t v3 = type metadata accessor for NWListener.State();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + *a1);
  if (v7)
  {
    swift_retain();
    NWListener.state.getter();
    swift_release();
    int v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
    uint64_t v7 = v8 == enum case for NWListener.State.failed(_:);
    if (v8 != enum case for NWListener.State.failed(_:) && v8 == enum case for NWListener.State.cancelled(_:)) {
      return 1;
    }
    else {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  return v7;
}

uint64_t sub_10036FAD0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_1009709E8);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_1009709E8);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

unint64_t sub_10036FB98()
{
  uint64_t v1 = 0x2072756F6A6E6F42;
  if (*v0 != 1) {
    uint64_t v1 = 0x656946207261654ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD00000000000001ALL;
  }
}

unint64_t sub_10036FC0C()
{
  unint64_t result = qword_100970A00;
  if (!qword_100970A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100970A00);
  }
  return result;
}

uint64_t sub_10036FC60()
{
  return sub_10036F998(&OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_listener) & 1;
}

uint64_t sub_10036FC84()
{
  return sub_10036F998(&OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_listener) & 1;
}

void sub_10036FCA8()
{
  uint64_t v1 = v0;
  if (qword_100969D18 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_100970A08);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v26 = v25;
    buf = v5;
    unsigned int v6 = *(void **)(v1 + 32);
    uint64_t v7 = *(void **)(v1 + 40);
    uint64_t v9 = *(void **)(v1 + 48);
    uint64_t v8 = *(void *)(v1 + 56);
    id v10 = sub_10037066C(v6, v7, v9, v8);
    unint64_t v13 = sub_100370120((uint64_t)v10, v11, v12, v8);
    unint64_t v15 = v14;
    sub_1003706E4(v6, v7, v9, v8);
    sub_100254634(v13, v15, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "SDAirDropReceiveStateMachineAdaptor start {pipeline: %s}", buf, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v16 = *(void **)(v1 + 40);
  uint64_t v18 = *(void **)(v1 + 48);
  uint64_t v17 = *(void *)(v1 + 56);
  if (v17 < 0)
  {
    uint64_t v22 = (void *)(v17 & 0x7FFFFFFFFFFFFFFFLL);
    swift_unknownObjectWeakLoadStrong();
    uint64_t v16[3] = *(void *)(v1 + 24);
    swift_unknownObjectWeakAssign();
    swift_retain();
    swift_retain();
    id v21 = v18;
    id v23 = v22;
    swift_unknownObjectRelease();
    sub_100343D88();
    [v21 activate];

    swift_release();
    swift_release();
  }
  else
  {
    id v19 = *(id *)(v1 + 32);
    uint64_t v20 = v16;
    id v21 = v18;
    [v21 activate];
    [v19 start];
    [v20 activate];
  }
}

void sub_10036FF70()
{
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = *(void **)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  if (v3 < 0)
  {
    unsigned int v6 = (void *)(v3 & 0x7FFFFFFFFFFFFFFFLL);
    swift_retain();
    id v5 = v2;
    id v7 = v6;
    [v5 invalidate];
    sub_1002B0570();
    swift_release();
  }
  else
  {
    id v4 = *(id *)(v0 + 32);
    id v5 = v1;
    id v7 = v2;
    [v5 invalidate];
    [v4 stop];
    [v7 invalidate];
  }
}

uint64_t sub_100370058()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100970A08);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100970A08);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

unint64_t sub_100370120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10000B740(0, (unint64_t *)&qword_10096AC60);
  id v5 = (void *)static NSUserDefaults.airdrop.getter();
  _StringGuts.grow(_:)(66);
  v6._countAndFlagsBits = 0xD000000000000020;
  v6._object = (void *)0x80000001007BAC10;
  String.append(_:)(v6);
  char v7 = SFAirDropUserDefaults.privateContactDiscoveryEnabled.getter();
  BOOL v8 = (v7 & 1) == 0;
  if (v7) {
    uint64_t v9 = 1702195828;
  }
  else {
    uint64_t v9 = 0x65736C6166;
  }
  if (v8) {
    unint64_t v10 = 0xE500000000000000;
  }
  else {
    unint64_t v10 = 0xE400000000000000;
  }
  unint64_t v11 = v10;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease();
  v12._object = (void *)0x80000001007BAC40;
  v12._countAndFlagsBits = 0xD00000000000001ELL;
  String.append(_:)(v12);
  char v13 = SFAirDropUserDefaults.systemLevelProgressEnabled.getter();
  BOOL v14 = (v13 & 1) == 0;
  if (v13) {
    uint64_t v15 = 1702195828;
  }
  else {
    uint64_t v15 = 0x65736C6166;
  }
  if (v14) {
    unint64_t v16 = 0xE500000000000000;
  }
  else {
    unint64_t v16 = 0xE400000000000000;
  }
  unint64_t v17 = v16;
  String.append(_:)(*(Swift::String *)&v15);
  swift_bridgeObjectRelease();
  if (a4 < 0)
  {
    _StringGuts.grow(_:)(41);
    swift_bridgeObjectRelease();
    unint64_t v18 = 0xD000000000000026;
  }
  else
  {
    _StringGuts.grow(_:)(36);
    swift_bridgeObjectRelease();
    unint64_t v18 = 0xD000000000000021;
  }
  unint64_t v22 = v18;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 93;
  v20._object = (void *)0xE100000000000000;
  String.append(_:)(v20);

  return v22;
}

unint64_t sub_1003702E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100370120(a1, a2, a3, *(void *)(v3 + 24));
}

void *sub_1003702F0(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  Swift::String v6 = v5;
  v5[3] = 0;
  swift_unknownObjectWeakInit();
  sub_10000B740(0, (unint64_t *)&qword_10096AC60);
  unint64_t v11 = (void *)static NSUserDefaults.airdrop.getter();
  char v12 = SFAirDropUserDefaults.privateContactDiscoveryEnabled.getter();

  if (v12)
  {
    type metadata accessor for SDAirDropReceiveStateMachine();
    swift_allocObject();
    id v13 = a1;
    id v14 = a2;
    uint64_t v15 = sub_1005477D0((uint64_t)v13, (uint64_t)v14);
    a4[3] = &off_1008DEB88;
    swift_unknownObjectWeakAssign();
    id v16 = [objc_allocWithZone((Class)SDAirDropClassroomTransferManager) init];
    sub_10000B740(0, (unint64_t *)&qword_10096A1A0);
    swift_retain();
    uint64_t v28 = a5;
    unint64_t v17 = (void *)static OS_dispatch_queue.main.getter();
    unint64_t v18 = (objc_class *)type metadata accessor for SDAirDropReceiveClassroomHandler();
    Swift::String v19 = (char *)objc_allocWithZone(v18);
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakInit();
    *(void *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAirDropReceiveClassroomHandler_queue] = v17;
    *(void *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAirDropReceiveClassroomHandler_stateMachine] = v15;
    swift_unknownObjectWeakAssign();
    swift_retain();
    Swift::String v20 = v19;
    id v21 = v17;
    *(void *)&v20[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAirDropReceiveClassroomHandler_continuations] = sub_100245BDC((uint64_t)_swiftEmptyArrayStorage);

    v30.receiver = v20;
    v30.super_class = v18;
    unint64_t v22 = (unint64_t)[super init];
    swift_release();

    swift_unknownObjectWeakAssign();
    id v23 = (id)v22;
    [v16 setAlertManager:v23];

    unint64_t v24 = v22 | 0x8000000000000000;
  }
  else
  {
    id v25 = [objc_allocWithZone((Class)SDAirDropReceiveManager) init];
    uint64_t v15 = [objc_allocWithZone((Class)SDAirDropClassroomTransferManager) init];
    id v26 = [objc_allocWithZone((Class)SDAirDropTransferManager) init];
    [v25 setAlertManager:v26];
    [v26 setDelegate:v25];
    id v16 = v26;
    [v15 setAlertManager:v16];

    swift_release();
    unint64_t v24 = 0;
    a4 = v25;
  }
  v6[4] = a4;
  v6[5] = v15;
  v6[6] = v16;
  v6[7] = v24;
  return v6;
}

uint64_t sub_100370604()
{
  sub_100261080(v0 + 16);
  sub_1003706E4(*(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(void *)(v0 + 56));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDAirDropReceiveStateMachineAdaptor()
{
  return self;
}

id sub_10037066C(void *a1, void *a2, void *a3, uint64_t a4)
{
  if (a4 < 0)
  {
    uint64_t v6 = a4 & 0x7FFFFFFFFFFFFFFFLL;
    swift_retain();
    swift_retain();
    a2 = a3;
    a3 = (void *)v6;
  }
  else
  {
    id v5 = a1;
  }
  id v7 = a2;

  return a3;
}

void destroy for SDAirDropReceiveStateMachineAdaptor.Pipeline(uint64_t a1)
{
}

void sub_1003706E4(void *a1, void *a2, void *a3, uint64_t a4)
{
  if (a4 < 0)
  {
    uint64_t v5 = a4 & 0x7FFFFFFFFFFFFFFFLL;
    swift_release();
    swift_release();
    a2 = a3;
    a3 = (void *)v5;
  }
  else
  {
  }
}

void *initializeWithCopy for SDAirDropReceiveStateMachineAdaptor.Pipeline(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  id v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  sub_10037066C(*(void **)a2, v4, v5, v6);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t assignWithCopy for SDAirDropReceiveStateMachineAdaptor.Pipeline(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  id v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  sub_10037066C(*(void **)a2, v4, v5, v6);
  id v7 = *(void **)a1;
  BOOL v8 = *(void **)(a1 + 8);
  uint64_t v9 = *(void **)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  sub_1003706E4(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for SDAirDropReceiveStateMachineAdaptor.Pipeline(uint64_t a1, _OWORD *a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v5 = *(void **)(a1 + 8);
  id v4 = *(void **)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  long long v7 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v7;
  sub_1003706E4(v3, v5, v4, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDAirDropReceiveStateMachineAdaptor.Pipeline(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (((*(void *)(a1 + 24) >> 57) >> 6) | (2
                                                           * ((*(void *)(a1 + 24) >> 57) & 0x38 | *(void *)(a1 + 24) & 7))) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SDAirDropReceiveStateMachineAdaptor.Pipeline(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 127;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1003708FC(uint64_t a1)
{
  return *(void *)(a1 + 24) >> 63;
}

uint64_t sub_100370908(uint64_t result)
{
  *(void *)(result + 24) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_100370918(uint64_t result, uint64_t a2)
{
  *(void *)(result + 24) = *(void *)(result + 24) & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropReceiveStateMachineAdaptor.Pipeline()
{
  return &type metadata for SDAirDropReceiveStateMachineAdaptor.Pipeline;
}

uint64_t sub_10037093C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100970AC8);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100970AC8);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_100370A5C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDAirDropiOSNotificationManager();
  return [super dealloc];
}

uint64_t type metadata accessor for SDAirDropiOSNotificationManager()
{
  return self;
}

uint64_t sub_100370AC4(uint64_t a1, uint64_t a2)
{
  *(void *)(*v2 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAirDropiOSNotificationManager_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t sub_100370B14(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_100970B20 + dword_100970B20);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000A6F4;
  return v5(a1);
}

uint64_t sub_100370BBC()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return sub_100370C64(v1);
}

uint64_t sub_100370C64(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100370C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  uint64_t v4 = type metadata accessor for SFAirDropReceive.ItemDestination();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  uint64_t v5 = sub_10000A844(&qword_10096B2F8);
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  sub_10000A844(&qword_100970B48);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  uint64_t v6 = sub_10000A844(&qword_10096B368);
  v3[15] = v6;
  v3[16] = *(void *)(v6 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  uint64_t v7 = sub_10000A844(&qword_10096B790);
  v3[22] = v7;
  v3[23] = *(void *)(v7 - 8);
  v3[24] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SFAirDrop.DeclineAction();
  v3[25] = v8;
  v3[26] = *(void *)(v8 - 8);
  v3[27] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v9 = static AirDropActor.shared;
  v3[28] = static AirDropActor.shared;
  return _swift_task_switch(sub_100370F6C, v9, 0);
}

uint64_t sub_100370F6C()
{
  uint64_t v96 = v0;
  uint64_t v2 = v0[23];
  uint64_t v1 = v0[24];
  uint64_t v3 = v0[22];
  sub_10000A844(&qword_10096B2C0);
  SFAirDrop.PermissionRequest.style.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3) != enum case for SFAirDrop.PermissionRequest.Style.alert<A>(_:))
  {
    (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
  uint64_t v5 = v0[26];
  uint64_t v4 = v0[27];
  uint64_t v7 = v0[24];
  uint64_t v6 = v0[25];
  uint64_t v8 = v0[4];
  (*(void (**)(uint64_t, void))(v0[23] + 96))(v7, v0[22]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v7 + 32);
  uint64_t v10 = sub_10000A844(&qword_10096B798);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v4, v7 + *(int *)(v10 + 80), v6);
  uint64_t v11 = SFAirDrop.DeclineAction.id.getter();
  uint64_t v85 = v8;
  if (v8)
  {
    if (v11 == v0[3] && v0[4] == v12)
    {
      swift_bridgeObjectRelease();
LABEL_11:
      swift_bridgeObjectRelease();
      id v16 = (void *)swift_task_alloc();
      v0[29] = v16;
      *id v16 = v0;
      unint64_t v17 = sub_100371A04;
      goto LABEL_55;
    }
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_11;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = *(void *)(v9 + 16);
  if (v18)
  {
    uint64_t v19 = v0[16];
    uint64_t v20 = v0[10];
    id v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
    uint64_t v21 = v20 + 16;
    unint64_t v22 = v23;
    uint64_t v24 = v9 + ((*(unsigned __int8 *)(v21 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 64));
    uint64_t v91 = (unsigned int (**)(uint64_t, uint64_t))(v21 + 72);
    uint64_t v92 = *(void *)(v21 + 56);
    int v89 = enum case for SFAirDrop.AcceptAction.single<A>(_:);
    uint64_t v82 = (void (**)(uint64_t, void))(v21 + 80);
    uint64_t v93 = (void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32);
    uint64_t v84 = v19;
    uint64_t v87 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    uint64_t v88 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
    swift_bridgeObjectRetain();
    id v25 = _swiftEmptyArrayStorage;
    uint64_t v90 = (void (**)(void, void))(v21 - 8);
    uint64_t v94 = v0;
    uint64_t v83 = v23;
    do
    {
      uint64_t v27 = v0[11];
      uint64_t v26 = v0[12];
      uint64_t v28 = v0[9];
      v22(v26, v24, v28);
      v22(v27, v26, v28);
      if ((*v91)(v27, v28) == v89)
      {
        uint64_t v29 = v94[18];
        uint64_t v30 = v94[15];
        uint64_t v86 = v94[13];
        uint64_t v31 = v18;
        uint64_t v32 = v21;
        unint64_t v33 = v25;
        uint64_t v34 = v94[11];
        (*v82)(v34, v94[9]);
        uint64_t v35 = v34 + *(int *)(sub_10000A844(&qword_100970B50) + 48);
        uint64_t v36 = *v93;
        uint64_t v37 = v34;
        id v25 = v33;
        uint64_t v21 = v32;
        uint64_t v18 = v31;
        (*v93)(v29, v37, v30);
        uint64_t v38 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v35, v38);
        uint64_t v39 = v29;
        uint64_t v0 = v94;
        v36(v86, v39, v30);
        unint64_t v22 = v83;
        (*v88)(v86, 0, 1, v30);
        uint64_t v40 = *v90;
      }
      else
      {
        uint64_t v41 = v0[15];
        uint64_t v42 = v0[13];
        uint64_t v40 = *v90;
        (*v90)(v0[11], v0[9]);
        (*v88)(v42, 1, 1, v41);
      }
      uint64_t v43 = v0[15];
      uint64_t v44 = v0[13];
      v40(v0[12], v0[9]);
      if ((*v87)(v44, 1, v43) == 1)
      {
        sub_10000A7E8(v0[13], &qword_100970B48);
      }
      else
      {
        uint64_t v45 = v0[19];
        uint64_t v46 = v0[17];
        uint64_t v47 = v0[15];
        uint64_t v48 = *v93;
        (*v93)(v45, v0[13], v47);
        v48(v46, v45, v47);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v25 = (void *)sub_100253E30(0, v25[2] + 1, 1, (unint64_t)v25);
        }
        unint64_t v50 = v25[2];
        unint64_t v49 = v25[3];
        uint64_t v0 = v94;
        if (v50 >= v49 >> 1) {
          id v25 = (void *)sub_100253E30(v49 > 1, v50 + 1, 1, (unint64_t)v25);
        }
        uint64_t v51 = v94[17];
        uint64_t v52 = v94[15];
        void v25[2] = v50 + 1;
        v48((uint64_t)v25+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ *(void *)(v84 + 72) * v50, v51, v52);
      }
      v24 += v92;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease_n();
    uint64_t v53 = v25[2];
    if (!v53) {
      goto LABEL_39;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    id v25 = _swiftEmptyArrayStorage;
    uint64_t v53 = _swiftEmptyArrayStorage[2];
    if (!v53)
    {
LABEL_39:
      uint64_t v64 = 1;
      goto LABEL_42;
    }
  }
  uint64_t v54 = v0[16];
  uint64_t v57 = *(void (**)(void, char *, void))(v54 + 16);
  uint64_t v55 = v54 + 16;
  uint64_t v56 = v57;
  int64_t v58 = (char *)v25 + ((*(unsigned __int8 *)(v55 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 64));
  uint64_t v59 = *(void *)(v55 + 56);
  swift_bridgeObjectRetain();
  while (1)
  {
    v56(v0[20], v58, v0[15]);
    uint64_t v60 = SFAirDrop.AcceptAction.Single.id.getter();
    if (!v85)
    {
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    if (v60 == v0[3] && v0[4] == v61) {
      break;
    }
    char v63 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v63) {
      goto LABEL_41;
    }
LABEL_30:
    (*(void (**)(void, void))(v55 - 8))(v0[20], v0[15]);
    v58 += v59;
    if (!--v53)
    {
      swift_bridgeObjectRelease();
      goto LABEL_39;
    }
  }
  swift_bridgeObjectRelease();
LABEL_41:
  uint64_t v65 = v0[20];
  uint64_t v67 = v0[15];
  uint64_t v66 = v0[16];
  uint64_t v68 = v0[14];
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 32))(v68, v65, v67);
  uint64_t v64 = 0;
LABEL_42:
  uint64_t v70 = v0[15];
  uint64_t v69 = v0[16];
  uint64_t v71 = v0[14];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56))(v71, v64, 1, v70);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v71, 1, v70) == 1)
  {
    sub_10000A7E8(v0[14], &qword_100970B48);
    if (qword_100969D20 != -1) {
      swift_once();
    }
    unint64_t v72 = v0[4];
    uint64_t v73 = type metadata accessor for Logger();
    sub_10000B47C(v73, (uint64_t)qword_100970AC8);
    swift_bridgeObjectRetain_n();
    uint64_t v74 = Logger.logObject.getter();
    os_log_type_t v75 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v74, v75))
    {
      uint64_t v76 = (uint8_t *)swift_slowAlloc();
      v95[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v76 = 136315138;
      if (v85)
      {
        uint64_t v77 = v0[3];
        unint64_t v78 = v72;
      }
      else
      {
        v95[1] = 0;
        v95[2] = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        unint64_t v78 = 0x80000001007B7770;
        uint64_t v77 = 0xD000000000000015;
      }
      swift_bridgeObjectRetain();
      v0[2] = sub_100254634(v77, v78, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v74, v75, "Chosen action from alert (%s) did not match any actions in permission request. Canceling AirDrop", v76, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    id v16 = (void *)swift_task_alloc();
    v0[33] = v16;
    *id v16 = v0;
    unint64_t v17 = sub_100371F00;
LABEL_55:
    v16[1] = v17;
    return SFAirDrop.DeclineAction.decline()();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[16] + 32))(v0[21], v0[14], v0[15]);
    SFAirDrop.AcceptAction.Single.defaultAnswer.getter();
    uint64_t v79 = (void *)swift_task_alloc();
    v0[31] = v79;
    *uint64_t v79 = v0;
    v79[1] = sub_100371C44;
    uint64_t v80 = v0[15];
    uint64_t v81 = v0[8];
    return SFAirDrop.AcceptAction.Single.accept(with:)(v81, v80);
  }
}

uint64_t sub_100371A04()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 224);
  if (v0) {
    uint64_t v4 = sub_10037202C;
  }
  else {
    uint64_t v4 = sub_100371B30;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100371B30()
{
  (*(void (**)(void, void))(v0[26] + 8))(v0[27], v0[25]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100371C44()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 64);
  uint64_t v4 = *(void *)(*v1 + 56);
  uint64_t v5 = *(void *)(*v1 + 48);
  *(void *)(*v1 + 256) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 224);
  if (v0) {
    uint64_t v7 = sub_100372148;
  }
  else {
    uint64_t v7 = sub_100371DCC;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_100371DCC()
{
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v3 = v0[25];
  (*(void (**)(void, void))(v0[16] + 8))(v0[21], v0[15]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100371F00()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 272) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 224);
  if (v0) {
    uint64_t v4 = sub_100372284;
  }
  else {
    uint64_t v4 = sub_100371B30;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10037202C()
{
  (*(void (**)(void, void))(v0[26] + 8))(v0[27], v0[25]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100372148()
{
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v3 = v0[25];
  (*(void (**)(void, void))(v0[16] + 8))(v0[21], v0[15]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100372284()
{
  (*(void (**)(void, void))(v0[26] + 8))(v0[27], v0[25]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1003723A0(uint64_t a1)
{
  v1[3] = a1;
  uint64_t v2 = type metadata accessor for SFInterventionResponse();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  uint64_t v3 = sub_10000A844(&qword_100970B28);
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  v1[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFInterventionWorkflow();
  v1[10] = v4;
  v1[11] = *(void *)(v4 - 8);
  v1[12] = swift_task_alloc();
  uint64_t v5 = sub_10000A844(&qword_10096B790);
  v1[13] = v5;
  v1[14] = *(void *)(v5 - 8);
  v1[15] = swift_task_alloc();
  sub_10000A844(&qword_100970B30);
  v1[16] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer.State();
  v1[17] = v6;
  v1[18] = *(void *)(v6 - 8);
  v1[19] = swift_task_alloc();
  uint64_t v7 = sub_10000A844(&qword_10096B2C0);
  v1[20] = v7;
  v1[21] = *(void *)(v7 - 8);
  v1[22] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v8 = static AirDropActor.shared;
  v1[23] = static AirDropActor.shared;
  return _swift_task_switch(sub_1003726A4, v8, 0);
}

uint64_t sub_1003726A4()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v6 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 136);
  SFAirDropReceive.Transfer.state.getter();
  SFAirDropReceive.Transfer.State.permissionRequest.getter();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1) == 1)
  {
    sub_10000A7E8(*(void *)(v0 + 128), &qword_100970B30);
LABEL_22:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
    return v36();
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 168) + 32))(*(void *)(v0 + 176), *(void *)(v0 + 128), *(void *)(v0 + 160));
  if (SFAirDrop.PermissionRequest.isAnswered.getter())
  {
    (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
    goto LABEL_22;
  }
  uint64_t v8 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v9 = *(void *)(v0 + 104);
  SFAirDrop.PermissionRequest.style.getter();
  int v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 88))(v7, v9);
  if (v10 == enum case for SFAirDrop.PermissionRequest.Style.intervention<A>(_:))
  {
    uint64_t v11 = *(void *)(v0 + 120);
    uint64_t v12 = *(void *)(v0 + 96);
    uint64_t v13 = *(void *)(v0 + 80);
    uint64_t v14 = *(void *)(v0 + 88);
    uint64_t v16 = *(void *)(v0 + 64);
    uint64_t v15 = *(void *)(v0 + 72);
    uint64_t v17 = *(void *)(v0 + 56);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 112) + 96))(v11, *(void *)(v0 + 104));
    uint64_t v18 = v11 + *(int *)(sub_10000A844(&qword_100970B38) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v12, v11, v13);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v15, v18, v17);
    if (qword_100969D20 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_10000B47C(v19, (uint64_t)qword_100970AC8);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      unint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Showing intervention permission request", v22, 2u);
      swift_slowDealloc();
    }

    *(void *)(v0 + 232) = [objc_allocWithZone((Class)type metadata accessor for SDAirDropUserSafetyInterventionAlert()) init];
    id v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v23;
    *id v23 = v0;
    v23[1] = sub_100373534;
    uint64_t v24 = *(void *)(v0 + 96);
    uint64_t v25 = *(void *)(v0 + 48);
    return sub_1004B19FC(v25, v24);
  }
  else
  {
    if (v10 != enum case for SFAirDrop.PermissionRequest.Style.alert<A>(_:))
    {
      uint64_t v34 = *(void *)(v0 + 112);
      uint64_t v33 = *(void *)(v0 + 120);
      uint64_t v35 = *(void *)(v0 + 104);
      (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
      goto LABEL_22;
    }
    (*(void (**)(void, void))(*(void *)(v0 + 112) + 96))(*(void *)(v0 + 120), *(void *)(v0 + 104));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_100969D20 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_10000B47C(v27, (uint64_t)qword_100970AC8);
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Showing alert permission request", v30, 2u);
      swift_slowDealloc();
    }

    *(_DWORD *)(v0 + 272) = *(_DWORD *)(sub_10000A844(&qword_10096B798) + 80);
    uint64_t v37 = (uint64_t (*)(uint64_t))((char *)&dword_10096B788 + dword_10096B788);
    uint64_t v31 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v31;
    *uint64_t v31 = v0;
    v31[1] = sub_100372C08;
    uint64_t v32 = *(void *)(v0 + 176);
    return v37(v32);
  }
}

uint64_t sub_100372C08(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  uint64_t v7 = *(void **)v3;
  *(void *)(*(void *)v3 + 200) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = v6[23];
    return _swift_task_switch(sub_100372EEC, v8, 0);
  }
  else
  {
    v6[26] = a2;
    uint64_t v9 = (void *)swift_task_alloc();
    v6[27] = v9;
    *uint64_t v9 = v7;
    v9[1] = sub_100372DA4;
    uint64_t v10 = v6[22];
    return sub_100370C6C(a1, a2, v10);
  }
}

uint64_t sub_100372DA4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 184);
  if (v0) {
    uint64_t v4 = sub_100373298;
  }
  else {
    uint64_t v4 = sub_100373188;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100372EEC()
{
  uint64_t v1 = *(void *)(v0 + 120) + *(int *)(v0 + 272);
  uint64_t v2 = type metadata accessor for SFAirDrop.DeclineAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  if (qword_100969D20 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000B47C(v3, (uint64_t)qword_100970AC8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v7 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to show alert or intervention: %@", v6, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRelease();
  (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100373188()
{
  uint64_t v1 = *(void *)(v0 + 120) + *(int *)(v0 + 272);
  (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
  uint64_t v2 = type metadata accessor for SFAirDrop.DeclineAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100373298()
{
  uint64_t v1 = *(void *)(v0 + 120) + *(int *)(v0 + 272);
  uint64_t v2 = type metadata accessor for SFAirDrop.DeclineAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  if (qword_100969D20 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000B47C(v3, (uint64_t)qword_100970AC8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v7 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to show alert or intervention: %@", v6, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRelease();
  (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100373534()
{
  uint64_t v2 = *(void **)(*(void *)v1 + 232);
  uint64_t v3 = *(void **)v1;
  v3[31] = v0;
  swift_task_dealloc();

  if (v0)
  {
    uint64_t v4 = v3[23];
    return _swift_task_switch(sub_100373934, v4, 0);
  }
  else
  {
    os_log_type_t v5 = (void *)swift_task_alloc();
    v3[32] = v5;
    *os_log_type_t v5 = v3;
    v5[1] = sub_1003736D0;
    uint64_t v6 = v3[7];
    uint64_t v7 = v3[6];
    return SFAirDrop.PermissionRequest.InterventionAction.respond(with:)(v7, v6);
  }
}

uint64_t sub_1003736D0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 184);
  if (v0) {
    uint64_t v4 = sub_100373BC0;
  }
  else {
    uint64_t v4 = sub_1003737FC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1003737FC()
{
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  uint64_t v3 = v0[20];
  uint64_t v5 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v7 = v0[9];
  uint64_t v6 = v0[10];
  uint64_t v8 = v0[7];
  uint64_t v9 = v0[8];
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100373934()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (qword_100969D20 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_100970AC8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Failed to show alert or intervention: %@", v7, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRelease();
  (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100373BC0()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v4 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[8];
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (qword_100969D20 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000B47C(v7, (uint64_t)qword_100970AC8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412290;
    swift_errorRetain();
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v11 = v12;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to show alert or intervention: %@", v10, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRelease();
  (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_100373E6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10000A844(&qword_100970BB0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v13[-v7];
  uint64_t v9 = v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner____lazy_storage___senderContact;
  swift_beginAccess();
  sub_10024A330(v9, (uint64_t)v8, &qword_100970BB0);
  uint64_t v10 = sub_10000A844(&qword_100970BA8);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return sub_10024D388((uint64_t)v8, a1, &qword_100970BA8);
  }
  sub_10000A7E8((uint64_t)v8, &qword_100970BB0);
  sub_1004ED104(a1);
  sub_10024A330(a1, (uint64_t)v6, &qword_100970BA8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_10026B410((uint64_t)v6, v9, &qword_100970BB0);
  return swift_endAccess();
}

uint64_t sub_100374050(uint64_t a1)
{
  v2[85] = v1;
  v2[84] = a1;
  uint64_t v3 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult();
  v2[86] = v3;
  v2[87] = *(void *)(v3 - 8);
  v2[88] = swift_task_alloc();
  sub_10000A844(&qword_10096DF68);
  v2[89] = swift_task_alloc();
  sub_10000A844(&qword_10096D8B8);
  v2[90] = swift_task_alloc();
  sub_10000A844(&qword_100970BC0);
  v2[91] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropSend.Request();
  v2[92] = v4;
  v2[93] = *(void *)(v4 - 8);
  v2[94] = swift_task_alloc();
  sub_10000A844(&qword_10097F260);
  v2[95] = swift_task_alloc();
  v2[96] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SFAirDropSend.Transfer.State();
  v2[97] = v5;
  v2[98] = *(void *)(v5 - 8);
  v2[99] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferType();
  v2[100] = v6;
  v2[101] = *(void *)(v6 - 8);
  v2[102] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_100975040);
  v2[103] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10097C360);
  v2[104] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Date();
  v2[105] = v7;
  v2[106] = *(void *)(v7 - 8);
  v2[107] = swift_task_alloc();
  type metadata accessor for SFAirDrop.TransferIdentifier();
  v2[108] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SFAirDropSend.Transfer.Metrics();
  v2[109] = v8;
  v2[110] = *(void *)(v8 - 8);
  v2[111] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for CancellationError();
  v2[112] = v9;
  v2[113] = *(void *)(v9 - 8);
  v2[114] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SFAirDropSend.Failure();
  v2[115] = v10;
  v2[116] = *(void *)(v10 - 8);
  v2[117] = swift_task_alloc();
  v2[118] = swift_task_alloc();
  sub_10000A844(&qword_100970BC8);
  v2[119] = swift_task_alloc();
  sub_10000A844(&qword_100970BD0);
  v2[120] = swift_task_alloc();
  v2[121] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v2[122] = v11;
  v2[123] = *(void *)(v11 - 8);
  v2[124] = swift_task_alloc();
  v2[125] = swift_task_alloc();
  _s14descr1008C9AB9V10AskRequestVMa();
  v2[126] = swift_task_alloc();
  v2[127] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for SFAirDropSend.Transfer();
  v2[128] = v12;
  v2[129] = *(void *)(v12 - 8);
  v2[130] = swift_task_alloc();
  v2[131] = swift_task_alloc();
  v2[132] = swift_task_alloc();
  v2[133] = swift_task_alloc();
  v2[134] = swift_task_alloc();
  v2[135] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v13 = static AirDropActor.shared;
  v2[136] = static AirDropActor.shared;
  return _swift_task_switch(sub_1003746F4, v13, 0);
}

uint64_t sub_1003746F4()
{
  uint64_t v1 = *(void *)(v0 + 680);
  uint64_t v2 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest;
  *(void *)(v0 + 1096) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest;
  uint64_t v3 = v1 + v2;
  uint64_t v4 = SFAirDropSend.Request.urls.getter();
  if (v4 && (uint64_t v5 = *(void *)(v4 + 16), swift_bridgeObjectRelease(), v5))
  {
    *(void *)(v0 + 240) = 0;
    *(_OWORD *)(v0 + 208) = 0u;
    *(_OWORD *)(v0 + 224) = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
    *(_OWORD *)(v0 + 192) = 0u;
    *(_OWORD *)(v0 + 160) = 0u;
    *(_OWORD *)(v0 + 144) = 0u;
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 1104) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_100374864;
    return sub_1003771C4(v3, 0, 0x300000000, v0 + 144);
  }
  else
  {
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 1152) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_100374CA8;
    uint64_t v9 = *(void *)(v0 + 1008);
    uint64_t v10 = *(void *)(v0 + 992);
    uint64_t v11 = *(void *)(v0 + 960);
    uint64_t v12 = *(void *)(v0 + 952);
    return sub_10037B780(v0 + 16, v9, v10, v11, v12);
  }
}

uint64_t sub_100374864(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[139] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[136];
  if (v1)
  {
    uint64_t v6 = sub_100376904;
  }
  else
  {
    v4[140] = a1;
    uint64_t v6 = sub_1003749A0;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1003749A0()
{
  uint64_t v1 = v0[85];
  uint64_t v2 = swift_task_alloc();
  v0[141] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[142] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100374A70;
  uint64_t v4 = v0[140];
  uint64_t v5 = v0[134];
  uint64_t v6 = v0[128];
  return static SFSecurityScopedURL.withAccess<A>(to:body:)(v5, v4, &unk_100970C08, v2, v6);
}

uint64_t sub_100374A70()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1144) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 1088);
  if (v0) {
    uint64_t v4 = sub_100376A74;
  }
  else {
    uint64_t v4 = sub_100374BDC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100374BDC()
{
  uint64_t v1 = v0[134];
  uint64_t v2 = v0[135];
  uint64_t v3 = v0[128];
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[129] + 32);
  v0[166] = v4;
  v4(v2, v1, v3);
  sub_10046B384();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[167] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1003757FC;
  return sub_10037FAE0(0);
}

uint64_t sub_100374CA8()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v3[145] = v0;
  int v4 = *((_DWORD *)v3 + 4);
  *((unsigned char *)v3 + 1172) = *((unsigned char *)v3 + 20);
  *((_DWORD *)v3 + 292) = v4;
  v3[147] = v2[3];
  uint64_t v20 = v2[4];
  v3[148] = v20;
  uint64_t v19 = v2[5];
  v3[149] = v19;
  uint64_t v18 = v2[6];
  v3[150] = v18;
  uint64_t v17 = v2[7];
  v3[151] = v17;
  char v16 = *((unsigned char *)v3 + 64);
  *((unsigned char *)v3 + 1436) = v16;
  uint64_t v5 = v2[9];
  v3[152] = v5;
  uint64_t v6 = v2[10];
  v3[153] = v6;
  uint64_t v7 = v2[11];
  v3[154] = v7;
  uint64_t v8 = v2[12];
  v3[155] = v8;
  uint64_t v9 = v2[13];
  v3[156] = v9;
  uint64_t v10 = v2[14];
  v3[157] = v10;
  uint64_t v11 = v2[15];
  v3[158] = v11;
  uint64_t v12 = v2[16];
  v3[159] = v12;
  swift_task_dealloc();
  if (v21)
  {
    uint64_t v13 = v3[136];
    uint64_t v14 = sub_100376BE4;
  }
  else
  {
    uint64_t v22 = v3[136];
    sub_10000A7E8(v3[119], &qword_100970BC8);
    v3[44] = v20;
    v3[45] = v19;
    v3[46] = v18;
    v3[47] = v17;
    *((unsigned char *)v3 + 384) = v16;
    v3[49] = v5;
    v3[50] = v6;
    v3[51] = v7;
    v3[52] = v8;
    v3[53] = v9;
    v3[54] = v10;
    v3[55] = v11;
    v3[56] = v12;
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_100374FB4;
    uint64_t v13 = v22;
  }
  return _swift_task_switch(v14, v13, 0);
}

uint64_t sub_100374FB4()
{
  uint64_t v20 = *(void *)(v0 + 1264);
  unint64_t v21 = *(void *)(v0 + 1272);
  uint64_t v1 = *(void *)(v0 + 1256);
  uint64_t v16 = *(void *)(v0 + 1232);
  uint64_t v17 = *(void *)(v0 + 1240);
  uint64_t v2 = *(void *)(v0 + 1224);
  uint64_t v14 = *(unsigned __int8 *)(v0 + 1436);
  uint64_t v15 = *(void *)(v0 + 1216);
  uint64_t v3 = *(void *)(v0 + 1208);
  uint64_t v13 = *(void *)(v0 + 1200);
  uint64_t v4 = *(void *)(v0 + 1192);
  uint64_t v5 = *(void *)(v0 + 1184);
  uint64_t v18 = *(void **)(v0 + 1176);
  uint64_t v19 = *(void *)(v0 + 1248);
  unint64_t v24 = *(unsigned int *)(v0 + 1168) | ((unint64_t)*(unsigned __int8 *)(v0 + 1172) << 32);
  uint64_t v6 = *(void *)(v0 + 1000);
  uint64_t v7 = *(void *)(v0 + 992);
  uint64_t v8 = *(void *)(v0 + 968);
  uint64_t v9 = *(void *)(v0 + 960);
  uint64_t v22 = *(void *)(v0 + 680);
  uint64_t v23 = *(void *)(v0 + 1096);
  sub_1003940A4(*(void *)(v0 + 1008), *(void *)(v0 + 1016), (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_1003940A4(v7, v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_10024D388(v9, v8, &qword_100970BD0);
  *(void *)(v0 + 248) = v5;
  *(void *)(v0 + 256) = v4;
  *(void *)(v0 + 264) = v13;
  *(void *)(v0 + 272) = v3;
  *(void *)(v0 + 280) = v14;
  *(void *)(v0 + 288) = v15;
  *(void *)(v0 + 296) = v2;
  *(void *)(v0 + 304) = v16;
  *(void *)(v0 + 312) = v17;
  *(void *)(v0 + 320) = v19;
  *(void *)(v0 + 328) = v1;
  *(void *)(v0 + 336) = v20;
  *(void *)(v0 + 344) = v21;
  swift_bridgeObjectRetain();
  id v10 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100278C78(v20, v21);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 1280) = v11;
  void *v11 = v0;
  v11[1] = sub_1003751BC;
  return sub_1003771C4(v22 + v23, (uint64_t)v18, v24, v0 + 248);
}

uint64_t sub_1003751BC(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  unint64_t v11 = *(void *)(*v2 + 1272);
  uint64_t v10 = *(void *)(*v2 + 1264);
  uint64_t v5 = *(void **)(*v2 + 1176);
  *(void *)(*v2 + 1288) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CB0(v10, v11);

  uint64_t v6 = *(void *)(v3 + 1088);
  if (v1)
  {
    uint64_t v7 = sub_100376D54;
  }
  else
  {
    *(void *)(v4 + 1296) = a1;
    uint64_t v7 = sub_1003753F0;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1003753F0()
{
  uint64_t v1 = v0[147];
  uint64_t v2 = v0[127];
  uint64_t v3 = v0[125];
  uint64_t v4 = v0[121];
  uint64_t v5 = v0[85];
  uint64_t v6 = (void *)swift_task_alloc();
  v0[163] = v6;
  void v6[2] = v5;
  v6[3] = v2;
  v6[4] = v1;
  v6[5] = v3;
  v6[6] = v0 + 44;
  v6[7] = v4;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[164] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1003754F4;
  uint64_t v8 = v0[162];
  uint64_t v9 = v0[133];
  uint64_t v10 = v0[128];
  return static SFSecurityScopedURL.withAccess<A>(to:body:)(v9, v8, &unk_100970BF8, v6, v10);
}

uint64_t sub_1003754F4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1320) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 1088);
  if (v0) {
    uint64_t v4 = sub_100376F8C;
  }
  else {
    uint64_t v4 = sub_100375660;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100375660()
{
  unint64_t v1 = *(void *)(v0 + 1272);
  uint64_t v2 = *(void *)(v0 + 1264);
  uint64_t v11 = *(void *)(v0 + 1016);
  uint64_t v3 = *(void *)(v0 + 1000);
  uint64_t v4 = *(void *)(v0 + 968);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CB0(v2, v1);
  sub_10000A7E8(v4, &qword_100970BD0);
  sub_1003956E4(v3, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1003956E4(v11, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  uint64_t v5 = *(void *)(v0 + 1064);
  uint64_t v6 = *(void *)(v0 + 1080);
  uint64_t v7 = *(void *)(v0 + 1024);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1032) + 32);
  *(void *)(v0 + 1328) = v8;
  v8(v6, v5, v7);
  sub_10046B384();
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 1336) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1003757FC;
  return sub_10037FAE0(0);
}

uint64_t sub_1003757FC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1088);
  swift_task_dealloc();
  return _swift_task_switch(sub_10037590C, v1, 0);
}

uint64_t sub_10037590C()
{
  (*(void (**)(void, void, void))(v0 + 1328))(*(void *)(v0 + 672), *(void *)(v0 + 1080), *(void *)(v0 + 1024));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100375B3C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1088);
  swift_task_dealloc();
  return _swift_task_switch(sub_100375C4C, v1, 0);
}

uint64_t sub_100375C4C()
{
  uint64_t v1 = *(void *)(v0 + 1056);
  uint64_t v2 = *(void *)(v0 + 1048);
  uint64_t v3 = *(void *)(v0 + 1032);
  uint64_t v4 = *(void *)(v0 + 1024);
  uint64_t v49 = *(void *)(v0 + 944);
  uint64_t v5 = *(void *)(v0 + 928);
  uint64_t v38 = *(void *)(v0 + 848);
  uint64_t v39 = *(void *)(v0 + 840);
  uint64_t v37 = *(void *)(v0 + 824);
  uint64_t v41 = *(void *)(v0 + 816);
  uint64_t v43 = *(void *)(v0 + 808);
  uint64_t v45 = *(void *)(v0 + 800);
  uint64_t v47 = *(void *)(v0 + 920);
  uint64_t v34 = *(void *)(v0 + 832);
  uint64_t v35 = *(void *)(v0 + 696);
  uint64_t v6 = *(void *)(v0 + 680)
     + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  uint64_t v36 = *(void *)(v0 + 688);
  swift_beginAccess();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v7(v1, v6, v4);
  SFAirDropSend.Transfer.id.getter();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v8(v1, v4);
  v7(v2, v6, v4);
  SFAirDropSend.Transfer.startDate.getter();
  unint64_t v50 = v8;
  v8(v2, v4);
  SFAirDropSend.Transfer.Metrics.init(id:startDate:)();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  *(void *)(v0 + 1360) = v9;
  *(void *)(v0 + 1368) = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  uint64_t v10 = v47;
  uint64_t v48 = v9;
  v9(v34, v49, v10);
  *(_DWORD *)(v0 + 1432) = enum case for SFAirDropSend.Transfer.Metrics.TransferResult.failure(_:);
  uint64_t v11 = *(void (**)(uint64_t))(v35 + 104);
  *(void *)(v0 + 1376) = v11;
  *(void *)(v0 + 1384) = (v35 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v11(v34);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v34, 0, 1, v36);
  SFAirDropSend.Transfer.Metrics.result.setter();
  static Date.now.getter();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v37, 0, 1, v39);
  SFAirDropSend.Transfer.Metrics.endDate.setter();
  SFAirDropSend.Request.type.getter();
  LOBYTE(v1) = SFAirDrop.TransferType.isOnlyExchange.getter();
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v45);
  if ((v1 & 1) == 0)
  {
    uint64_t v12 = *(void *)(v0 + 936);
    uint64_t v13 = *(void *)(v0 + 928);
    uint64_t v14 = *(void *)(v0 + 920);
    uint64_t v15 = *(void *)(v0 + 680);
    (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v12, enum case for SFAirDropSend.Failure.receiverDeclined(_:), v14);
    char v16 = static SFAirDropSend.Failure.== infix(_:_:)();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    uint64_t v17 = *(void *)(v15 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager + 8);
    uint64_t ObjectType = swift_getObjectType();
    if (v16) {
      uint64_t v19 = 5;
    }
    else {
      uint64_t v19 = 4;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v19, ObjectType, v17);
  }
  uint64_t v44 = *(void *)(v0 + 1056);
  uint64_t v46 = *(void *)(v0 + 1024);
  uint64_t v20 = *(void *)(v0 + 944);
  uint64_t v21 = *(void *)(v0 + 920);
  uint64_t v22 = *(void *)(v0 + 888);
  uint64_t v23 = *(void *)(v0 + 880);
  uint64_t v24 = *(void *)(v0 + 872);
  uint64_t v25 = *(void *)(v0 + 792);
  uint64_t v26 = *(void *)(v0 + 784);
  uint64_t v27 = *(void *)(v0 + 776);
  uint64_t v40 = *(void *)(v0 + 1040);
  uint64_t v42 = *(void *)(v0 + 768);
  uint64_t v28 = v25 + *(int *)(sub_10000A844(&qword_10096EFF8) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v25, v22, v24);
  v48(v28, v20, v21);
  (*(void (**)(uint64_t, void, uint64_t))(v26 + 104))(v25, enum case for SFAirDropSend.Transfer.State.transferFailed(_:), v27);
  sub_100321A40(v25, v40);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  uint64_t v29 = type metadata accessor for SFNWInterfaceType();
  *(void *)(v0 + 1392) = v29;
  uint64_t v30 = *(void *)(v29 - 8);
  *(void *)(v0 + 1400) = v30;
  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56);
  *(void *)(v0 + 1408) = v31;
  *(void *)(v0 + 1416) = (v30 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v31(v42, 1, 1, v29);
  sub_1003220C8(v42, v44);
  sub_10000A7E8(v42, &qword_10097F260);
  v50(v44, v46);
  uint64_t v32 = (void *)swift_task_alloc();
  *(void *)(v0 + 1424) = v32;
  void *v32 = v0;
  v32[1] = sub_100376170;
  return sub_100320760();
}

uint64_t sub_100376170()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1088);
  swift_task_dealloc();
  return _swift_task_switch(sub_100376280, v1, 0);
}

uint64_t sub_100376280()
{
  uint64_t v1 = *(void *)(v0 + 680);
  (*(void (**)(void, uint64_t, void))(*(void *)(v0 + 744) + 16))(*(void *)(v0 + 752), v1 + *(void *)(v0 + 1096), *(void *)(v0 + 736));
  uint64_t v2 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_selectedConnection;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_selectedConnection);
  if (v3)
  {
    uint64_t v4 = *(void *)(v0 + 728);
    uint64_t v5 = *(void *)(v0 + 720);
    uint64_t v6 = v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_telemetry;
    swift_beginAccess();
    sub_100394298(v6, v4, type metadata accessor for SDAirDropSendConnectionTelemetry);
    uint64_t v7 = type metadata accessor for SDAirDropSendConnectionTelemetry(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 0, 1, v7);
    sub_100394298(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint, v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 728);
    uint64_t v10 = type metadata accessor for SDAirDropSendConnectionTelemetry(0);
    uint64_t v8 = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 984) + 56))(*(void *)(v0 + 720), v8, 1, *(void *)(v0 + 976));
  swift_retain();
  CurrentValueSubject.value.getter();
  swift_release();
  uint64_t v43 = *(void *)(v0 + 656);
  uint64_t v11 = *(void *)(v1 + v2);
  if (v11)
  {
    uint64_t v12 = *(void *)(v0 + 1400);
    uint64_t v13 = *(void *)(v0 + 1392);
    uint64_t v14 = *(void *)(v0 + 760);
    uint64_t v15 = *(void *)(v0 + 712);
    uint64_t v16 = v11 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadRequest;
    swift_beginAccess();
    sub_10024A330(v16, v15, &qword_10096DF68);
    uint64_t v17 = v11 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_lastActiveInterfaceType;
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v14, v17, v13);
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v19 = *(void *)(v0 + 712);
    uint64_t v20 = _s14descr1008C92C9V13UploadRequestVMa();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
    uint64_t v18 = 1;
  }
  uint64_t v36 = *(void (**)(uint64_t, void, uint64_t))(v0 + 1376);
  unsigned int v35 = *(_DWORD *)(v0 + 1432);
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1360);
  uint64_t v42 = *(void *)(v0 + 1032);
  uint64_t v21 = *(void *)(v0 + 944);
  uint64_t v41 = *(void *)(v0 + 928);
  uint64_t v22 = *(void *)(v0 + 920);
  uint64_t v40 = *(void *)(v0 + 888);
  uint64_t v38 = *(void *)(v0 + 880);
  uint64_t v39 = *(void *)(v0 + 872);
  uint64_t v23 = *(void *)(v0 + 760);
  uint64_t v24 = *(void *)(v0 + 744);
  uint64_t v37 = *(void *)(v0 + 736);
  uint64_t v25 = *(void *)(v0 + 728);
  uint64_t v31 = *(void *)(v0 + 720);
  uint64_t v32 = *(void *)(v0 + 712);
  uint64_t v33 = *(void *)(v0 + 752);
  uint64_t v26 = *(void *)(v0 + 704);
  uint64_t v27 = *(void *)(v0 + 696);
  uint64_t v28 = *(void *)(v0 + 688);
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0 + 1408))(v23, v18, 1, *(void *)(v0 + 1392));
  *(void *)(v0 + 552) = 0;
  *(_OWORD *)(v0 + 520) = 0u;
  *(_OWORD *)(v0 + 536) = 0u;
  *(_OWORD *)(v0 + 488) = 0u;
  *(_OWORD *)(v0 + 504) = 0u;
  *(_OWORD *)(v0 + 456) = 0u;
  *(_OWORD *)(v0 + 472) = 0u;
  v34(v26, v21, v22);
  v36(v26, v35, v28);
  sub_1003BABE4(v33, v25, v31, v43, v0 + 456, v32, v23, v26);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
  sub_10000A7E8(v23, &qword_10097F260);
  sub_10000A7E8(v32, &qword_10096DF68);
  sub_10000A7E8(v31, &qword_10096D8B8);
  sub_10000A7E8(v25, &qword_100970BC0);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v33, v37);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v40, v39);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v21, v22);
  (*(void (**)(void, void, void))(v42 + 32))(*(void *)(v0 + 672), *(void *)(v0 + 1040), *(void *)(v0 + 1024));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
  return v29();
}

uint64_t sub_100376904()
{
  uint64_t v1 = v0[139];
  v0[168] = v1;
  v0[83] = v1;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = v0[114];
    uint64_t v3 = v0[113];
    uint64_t v4 = v0[112];
    (*(void (**)(void, void, void))(v0[116] + 104))(v0[118], enum case for SFAirDropSend.Failure.cancelled(_:), v0[115]);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRetain();
    SFAirDropSend.Failure.init(_:)();
  }
  sub_10046B384();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[169] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100375B3C;
  return sub_10037FAE0(1);
}

uint64_t sub_100376A74()
{
  uint64_t v1 = v0[143];
  v0[168] = v1;
  v0[83] = v1;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = v0[114];
    uint64_t v3 = v0[113];
    uint64_t v4 = v0[112];
    (*(void (**)(void, void, void))(v0[116] + 104))(v0[118], enum case for SFAirDropSend.Failure.cancelled(_:), v0[115]);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRetain();
    SFAirDropSend.Failure.init(_:)();
  }
  sub_10046B384();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[169] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100375B3C;
  return sub_10037FAE0(1);
}

uint64_t sub_100376BE4()
{
  uint64_t v1 = v0[145];
  v0[168] = v1;
  v0[83] = v1;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = v0[114];
    uint64_t v3 = v0[113];
    uint64_t v4 = v0[112];
    (*(void (**)(void, void, void))(v0[116] + 104))(v0[118], enum case for SFAirDropSend.Failure.cancelled(_:), v0[115]);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRetain();
    SFAirDropSend.Failure.init(_:)();
  }
  sub_10046B384();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[169] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100375B3C;
  return sub_10037FAE0(1);
}

uint64_t sub_100376D54()
{
  unint64_t v1 = v0[159];
  uint64_t v2 = v0[158];
  uint64_t v3 = (void *)v0[147];
  uint64_t v12 = v0[127];
  uint64_t v4 = v0[125];
  uint64_t v5 = v0[121];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CB0(v2, v1);
  sub_10000A7E8(v5, &qword_100970BD0);
  sub_1003956E4(v4, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1003956E4(v12, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  uint64_t v6 = v0[161];
  v0[168] = v6;
  v0[83] = v6;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    uint64_t v7 = v0[114];
    uint64_t v8 = v0[113];
    uint64_t v9 = v0[112];
    (*(void (**)(void, void, void))(v0[116] + 104))(v0[118], enum case for SFAirDropSend.Failure.cancelled(_:), v0[115]);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRetain();
    SFAirDropSend.Failure.init(_:)();
  }
  sub_10046B384();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[169] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_100375B3C;
  return sub_10037FAE0(1);
}

uint64_t sub_100376F8C()
{
  unint64_t v1 = v0[159];
  uint64_t v2 = v0[158];
  uint64_t v3 = (void *)v0[147];
  uint64_t v12 = v0[127];
  uint64_t v4 = v0[125];
  uint64_t v5 = v0[121];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CB0(v2, v1);
  sub_10000A7E8(v5, &qword_100970BD0);
  sub_1003956E4(v4, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1003956E4(v12, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  uint64_t v6 = v0[165];
  v0[168] = v6;
  v0[83] = v6;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    uint64_t v7 = v0[114];
    uint64_t v8 = v0[113];
    uint64_t v9 = v0[112];
    (*(void (**)(void, void, void))(v0[116] + 104))(v0[118], enum case for SFAirDropSend.Failure.cancelled(_:), v0[115]);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRetain();
    SFAirDropSend.Failure.init(_:)();
  }
  sub_10046B384();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[169] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_100375B3C;
  return sub_10037FAE0(1);
}

uint64_t sub_1003771C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[20] = a4;
  v5[21] = v4;
  v5[18] = a2;
  v5[19] = a3;
  v5[17] = a1;
  sub_10000A844(&qword_100970D80);
  v5[22] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for CodableError();
  v5[23] = v6;
  v5[24] = *(void *)(v6 - 8);
  v5[25] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SFAirDrop.TransferType();
  v5[26] = v7;
  v5[27] = *(void *)(v7 - 8);
  v5[28] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v8 = static AirDropActor.shared;
  v5[29] = static AirDropActor.shared;
  return _swift_task_switch(sub_100377354, v8, 0);
}

uint64_t sub_100377354()
{
  uint64_t v2 = v0[27];
  uint64_t v1 = v0[28];
  uint64_t v3 = v0[26];
  SFAirDropSend.Request.type.getter();
  char v4 = SFAirDrop.TransferType.isOnlyExchange.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v4)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void *))v0[1];
    return v5(_swiftEmptyArrayStorage);
  }
  else
  {
    sub_10024D388(v0[20], (uint64_t)(v0 + 2), &qword_100970D88);
    uint64_t v7 = v0[3];
    if (v7) {
      uint64_t v8 = v0[13];
    }
    else {
      uint64_t v8 = 0;
    }
    if (v7) {
      uint64_t v9 = v0[14];
    }
    else {
      uint64_t v9 = 0xF000000000000000;
    }
    uint64_t v10 = (void *)swift_task_alloc();
    v0[30] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1003774BC;
    return sub_100550068(v8, v9);
  }
}

uint64_t sub_1003774BC(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 248) = a1;
  *(void *)(v4 + 256) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 232);
  if (v1) {
    uint64_t v6 = sub_100377BE4;
  }
  else {
    uint64_t v6 = sub_1003775F0;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1003775F0()
{
  uint64_t v1 = v0[31];
  if (*(void *)(v1 + 16))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
    return v2(v1);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = type metadata accessor for SFAirDropSend.Failure();
    sub_100394340(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
    uint64_t v5 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 104))(v6, enum case for SFAirDropSend.Failure.badRequest(_:), v4);
    swift_willThrow();
    v0[33] = v5;
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      swift_errorRetain();
      uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
      v0[16] = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v10 = v11;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to load final URLs %@", v9, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v12 = v0[24];
    v0[15] = v5;
    swift_errorRetain();
    sub_10000A844(&qword_10096BAF0);
    int v13 = swift_dynamicCast();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
    uint64_t v15 = v0[25];
    if (v13)
    {
      uint64_t v16 = v0[23];
      uint64_t v17 = v0[24];
      uint64_t v18 = v0[22];
      v14(v18, 0, 1, v16);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v15, v18, v16);
    }
    else
    {
      uint64_t v19 = v0[22];
      v14(v19, 1, 1, v0[23]);
      swift_errorRetain();
      CodableError.init(_:)();
      sub_10000A7E8(v19, &qword_100970D80);
    }
    uint64_t v20 = v0[19];
    uint64_t v21 = (void *)swift_task_alloc();
    v0[34] = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_1003779E0;
    uint64_t v22 = v0[25];
    uint64_t v24 = v0[17];
    uint64_t v23 = v0[18];
    return sub_10038EFFC(v24, v23, v20 & 0xFFFFFFFFFFLL, v22);
  }
}

uint64_t sub_1003779E0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 232);
  uint64_t v2 = *(void *)(*(void *)v0 + 200);
  uint64_t v3 = *(void *)(*(void *)v0 + 192);
  uint64_t v4 = *(void *)(*(void *)v0 + 184);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_100377B4C, v1, 0);
}

uint64_t sub_100377B4C()
{
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100377BE4()
{
  uint64_t v1 = v0[32];
  v0[33] = v1;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to load final URLs %@", v4, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = v0[24];
  v0[15] = v1;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  int v8 = swift_dynamicCast();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v10 = v0[25];
  if (v8)
  {
    uint64_t v11 = v0[23];
    uint64_t v12 = v0[24];
    uint64_t v13 = v0[22];
    v9(v13, 0, 1, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v10, v13, v11);
  }
  else
  {
    uint64_t v14 = v0[22];
    v9(v14, 1, 1, v0[23]);
    swift_errorRetain();
    CodableError.init(_:)();
    sub_10000A7E8(v14, &qword_100970D80);
  }
  uint64_t v15 = v0[19];
  uint64_t v16 = (void *)swift_task_alloc();
  v0[34] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_1003779E0;
  uint64_t v17 = v0[25];
  uint64_t v19 = v0[17];
  uint64_t v18 = v0[18];
  return sub_10038EFFC(v19, v18, v15 & 0xFFFFFFFFFFLL, v17);
}

uint64_t sub_100377EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[34] = a2;
  v3[35] = a3;
  v3[33] = a1;
  sub_10000A844(&qword_100970BC8);
  v3[36] = swift_task_alloc();
  v3[37] = swift_task_alloc();
  sub_10000A844(&qword_100970BD0);
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v3[40] = swift_task_alloc();
  v3[41] = swift_task_alloc();
  _s14descr1008C9AB9V10AskRequestVMa();
  v3[42] = swift_task_alloc();
  v3[43] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URL();
  v3[44] = v4;
  v3[45] = *(void *)(v4 - 8);
  v3[46] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v3[47] = swift_task_alloc();
  return _swift_task_switch(sub_1003780A0, 0, 0);
}

uint64_t sub_1003780A0()
{
  uint64_t v1 = 131074;
  uint64_t v2 = v0[34];
  v0[31] = v2;
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = v0[45];
  if (v3)
  {
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    uint64_t v5 = v4 + 16;
    uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 64));
    uint64_t v23 = *(void *)(v5 + 56);
    int v8 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 40);
    uint64_t v26 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
    uint64_t v27 = v6;
    uint64_t v24 = (void (**)(uint64_t, uint64_t))(v5 - 8);
    uint64_t v25 = (void (**)(uint64_t, void, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v9 = v0[47];
      uint64_t v10 = v0[44];
      v27(v9, v7, v10);
      uint64_t v11 = *v8;
      (*v8)(v9, 0, 1, v10);
      if ((*v26)(v9, 1, v10) == 1)
      {
        uint64_t v1 = 131074;
        goto LABEL_11;
      }
      uint64_t v12 = v5;
      uint64_t v13 = v0[46];
      uint64_t v14 = v0[44];
      (*v25)(v13, v0[47], v14);
      URL._bridgeToObjectiveC()(v15);
      uint64_t v17 = v16;
      unsigned __int8 v18 = [v16 isiWorkDocument];

      (*v24)(v13, v14);
      if (v18) {
        break;
      }
      v7 += v23;
      --v3;
      uint64_t v5 = v12;
      if (!v3)
      {
        uint64_t v1 = 131074;
        goto LABEL_8;
      }
    }
    uint64_t v1 = 8;
  }
  else
  {
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    swift_bridgeObjectRetain();
LABEL_8:
    v11(v0[47], 1, 1, v0[44]);
  }
LABEL_11:
  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)swift_task_alloc();
  v0[48] = v19;
  uint64_t v20 = sub_10000A844((uint64_t *)&unk_10096C8B0);
  uint64_t v21 = sub_1002AE308(&qword_100970C10, (uint64_t *)&unk_10096C8B0);
  *uint64_t v19 = v0;
  v19[1] = sub_10037832C;
  return Sequence<>.coordinateRead(withSaveToTempDir:options:)(0, v1, v20, v21);
}

uint64_t sub_10037832C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[49] = a1;
  v3[50] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_100378D5C, 0, 0);
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v3[51] = v4;
    *uint64_t v4 = v3;
    v4[1] = sub_10037849C;
    uint64_t v5 = v3[34];
    return sub_1003791A4(v5);
  }
}

uint64_t sub_10037849C()
{
  uint64_t v2 = (void *)*v1;
  v2[52] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100378E40, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v2[53] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_10037862C;
    uint64_t v4 = v2[42];
    uint64_t v5 = v2[40];
    uint64_t v6 = v2[38];
    uint64_t v7 = v2[36];
    return sub_10037B780((uint64_t)(v2 + 2), v4, v5, v6, v7);
  }
}

uint64_t sub_10037862C()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v3[54] = v0;
  v3[55] = v2[3];
  uint64_t v18 = v2[4];
  uint64_t v4 = v2[5];
  v3[56] = v4;
  uint64_t v17 = v2[6];
  uint64_t v5 = v2[7];
  v3[57] = v5;
  char v16 = *((unsigned char *)v3 + 64);
  uint64_t v15 = v2[9];
  uint64_t v6 = v2[10];
  v3[58] = v6;
  uint64_t v14 = v2[11];
  uint64_t v7 = v2[12];
  v3[59] = v7;
  uint64_t v8 = v2[13];
  uint64_t v9 = v2[14];
  v3[60] = v9;
  uint64_t v10 = v2[15];
  v3[61] = v10;
  long long v13 = *((_OWORD *)v3 + 8);
  *((_OWORD *)v3 + 31) = v13;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_100378F2C;
  }
  else
  {
    v3[18] = v18;
    v3[19] = v4;
    v3[20] = v17;
    v3[21] = v5;
    *((unsigned char *)v3 + 176) = v16;
    v3[23] = v15;
    v3[24] = v6;
    v3[25] = v14;
    v3[26] = v7;
    v3[27] = v8;
    v3[28] = v9;
    v3[29] = v10;
    v3[30] = v13;
    uint64_t v11 = sub_1003788D0;
  }
  return _swift_task_switch(v11, 0, 0);
}

uint64_t sub_1003788D0()
{
  uint64_t v1 = v0[63];
  uint64_t v2 = v0[40];
  uint64_t v3 = v0[41];
  uint64_t v5 = v0[38];
  uint64_t v4 = v0[39];
  uint64_t v7 = v0[36];
  uint64_t v6 = v0[37];
  sub_1003940A4(v0[42], v0[43], (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_1003940A4(v2, v3, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_10024D388(v5, v4, &qword_100970BD0);
  sub_10024D388(v7, v6, &qword_100970BC8);
  if (v1)
  {
    v0[32] = v0[63];
    sub_10000A844(&qword_100970C28);
    sub_1002AE308(&qword_100970C30, &qword_100970C28);
    uint64_t v8 = RandomAccessCollection<>.urls.getter();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = v0[49];
  }
  v0[64] = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[65] = (uint64_t)v9;
  *uint64_t v9 = v0;
  v9[1] = sub_100378A8C;
  uint64_t v10 = v0[55];
  uint64_t v11 = v0[43];
  uint64_t v12 = v0[41];
  uint64_t v13 = v0[39];
  uint64_t v14 = v0[37];
  uint64_t v15 = v0[33];
  return sub_10037D638(v15, v11, v10, v12, v0 + 18, v13, v8, v14);
}

uint64_t sub_100378A8C()
{
  *(void *)(*(void *)v1 + 528) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_100379010;
  }
  else {
    uint64_t v2 = sub_100378BBC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100378BBC()
{
  uint64_t v2 = v0[61];
  unint64_t v1 = v0[62];
  uint64_t v3 = (void *)v0[55];
  uint64_t v4 = v0[43];
  uint64_t v8 = v0[39];
  uint64_t v9 = v0[41];
  uint64_t v5 = v0[37];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CB0(v2, v1);

  sub_10000A7E8(v5, &qword_100970BC8);
  sub_10000A7E8(v8, &qword_100970BD0);
  sub_1003956E4(v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1003956E4(v4, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100378D5C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100378E40()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100378F2C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100379010()
{
  uint64_t v1 = v0[61];
  unint64_t v2 = v0[62];
  uint64_t v3 = (void *)v0[55];
  uint64_t v8 = v0[41];
  uint64_t v9 = v0[43];
  uint64_t v4 = v0[39];
  uint64_t v5 = v0[37];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CB0(v1, v2);

  sub_10000A7E8(v5, &qword_100970BC8);
  sub_10000A7E8(v4, &qword_100970BD0);
  sub_1003956E4(v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1003956E4(v9, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1003791A4(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  uint64_t v3 = type metadata accessor for SFInterventionResponse();
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFInterventionWorkflow();
  v2[13] = v4;
  v2[14] = *(void *)(v4 - 8);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_10097C3B0);
  v2[17] = v5;
  v2[18] = *(void *)(v5 - 8);
  v2[19] = swift_task_alloc();
  uint64_t v6 = sub_10000A844(&qword_100970D50);
  v2[20] = v6;
  v2[21] = *(void *)(v6 - 8);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Date();
  v2[24] = v7;
  v2[25] = *(void *)(v7 - 8);
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UUID();
  v2[28] = v8;
  v2[29] = *(void *)(v8 - 8);
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  uint64_t v9 = sub_10000A844((uint64_t *)&unk_10097F200);
  v2[32] = v9;
  v2[33] = *(void *)(v9 - 8);
  v2[34] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SFAirDropSend.Transfer.State();
  v2[35] = v10;
  v2[36] = *(void *)(v10 - 8);
  v2[37] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for SFAirDropSend.Transfer();
  v2[38] = v11;
  v2[39] = *(void *)(v11 - 8);
  v2[40] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for SFAirDrop.ButtonConfiguration();
  v2[41] = v12;
  v2[42] = *(void *)(v12 - 8);
  v2[43] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for SFAirDrop.DeclineAction();
  v2[44] = v13;
  v2[45] = *(void *)(v13 - 8);
  v2[46] = swift_task_alloc();
  uint64_t v14 = sub_10000A844(&qword_10096CC68);
  v2[47] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  v2[48] = v15;
  v2[49] = *(void *)(v15 + 64);
  v2[50] = swift_task_alloc();
  v2[51] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v16 = static AirDropActor.shared;
  v2[52] = static AirDropActor.shared;
  return _swift_task_switch(sub_10037970C, v16, 0);
}

uint64_t sub_10037970C()
{
  uint64_t v51 = v0;
  type metadata accessor for SDAirDropUserSafetyContentHandler();
  *(void *)(v0 + 424) = swift_allocObject();
  unint64_t v1 = sub_10048C2F0();
  uint64_t v4 = v1;
  uint64_t v5 = (void *)v2;
  *(void *)(v0 + 432) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log;
  if (v3 == 2)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315138;
      swift_bridgeObjectRetain();
      v53._countAndFlagsBits = v4;
      v53._object = v5;
      unint64_t v9 = sub_100485954(v53, 2);
      unint64_t v11 = v10;
      sub_1003950E4(v4, (uint64_t)v5, 2u);
      *(void *)(v0 + 48) = sub_100254634(v9, v11, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1003950E4(v4, (uint64_t)v5, 2u);
      sub_1003950E4(v4, (uint64_t)v5, 2u);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Send StateMachine UserSafety ANALYZE START {userSafetyMode: %s}", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_1003950E4(v4, (uint64_t)v5, 2u);
      sub_1003950E4(v4, (uint64_t)v5, 2u);
    }
    uint64_t v19 = *(void *)(v0 + 400);
    uint64_t v20 = *(void *)(v0 + 408);
    uint64_t v21 = *(void *)(v0 + 384);
    uint64_t v41 = *(void *)(v0 + 376);
    uint64_t v43 = *(void *)(v0 + 368);
    uint64_t v44 = *(void *)(v0 + 360);
    uint64_t v22 = *(void **)(v0 + 344);
    uint64_t v23 = *(void *)(v0 + 328);
    uint64_t v24 = *(void *)(v0 + 336);
    uint64_t v47 = *(void *)(v0 + 320);
    uint64_t v48 = *(void *)(v0 + 312);
    uint64_t v25 = *(uint64_t **)(v0 + 296);
    uint64_t v42 = *(void *)(v0 + 288);
    uint64_t v45 = *(void *)(v0 + 352);
    uint64_t v46 = *(void *)(v0 + 280);
    uint64_t v49 = *(void *)(v0 + 304);
    uint64_t v26 = *(void *)(v0 + 56);
    sub_100485A68(v26);
    *uint64_t v22 = 0x656E696C636544;
    v22[1] = 0xE700000000000000;
    (*(void (**)(void *, void, uint64_t))(v24 + 104))(v22, enum case for SFAirDrop.ButtonConfiguration.text(_:), v23);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v19, v20, v41);
    unint64_t v27 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    uint64_t v28 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 32))(v28 + v27, v19, v41);
    SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)();
    uint64_t v29 = sub_10000A844(&qword_100970D58);
    *(void *)(v0 + 440) = v29;
    uint64_t v30 = (char *)v25 + *(int *)(v29 + 64);
    *uint64_t v25 = v26;
    swift_bridgeObjectRetain();
    SFProgressTask.initialValue.getter();
    uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
    *(void *)(v0 + 448) = v31;
    *(void *)(v0 + 456) = (v44 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v31(v30, v43, v45);
    *(_DWORD *)(v0 + 560) = enum case for SFAirDropSend.Transfer.State.analyzingFullContent(_:);
    uint64_t v32 = *(void (**)(uint64_t *))(v42 + 104);
    *(void *)(v0 + 464) = v32;
    *(void *)(v0 + 472) = (v42 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
    v32(v25);
    sub_100321A40((uint64_t)v25, v47);
    uint64_t v33 = *(void (**)(uint64_t *, uint64_t))(v42 + 8);
    *(void *)(v0 + 480) = v33;
    *(void *)(v0 + 488) = (v42 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v33(v25, v46);
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
    *(void *)(v0 + 496) = v34;
    *(void *)(v0 + 504) = (v48 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v34(v47, v49);
    SFProgressTask.makeAsyncIterator()();
    uint64_t v35 = static AirDropActor.shared;
    uint64_t v36 = sub_100394340((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v37 = (void *)swift_task_alloc();
    *(void *)(v0 + 512) = v37;
    void *v37 = v0;
    v37[1] = sub_100379F08;
    uint64_t v38 = *(void *)(v0 + 256);
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 16, v35, v36, v38, v0 + 40);
  }
  else
  {
    unsigned __int8 v12 = v3;
    sub_1003950CC(v1, v2, v3);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      sub_1003950CC(v4, (uint64_t)v5, v12);
      v54._countAndFlagsBits = v4;
      v54._object = v5;
      unint64_t v16 = sub_100485954(v54, v12);
      unint64_t v18 = v17;
      sub_1003950E4(v4, (uint64_t)v5, v12);
      *(void *)(v0 + 32) = sub_100254634(v16, v18, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1003950E4(v4, (uint64_t)v5, v12);
      sub_1003950E4(v4, (uint64_t)v5, v12);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Send StateMachine UserSafety SKIP {userSafetyMode: %s}", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_1003950E4(v4, (uint64_t)v5, v12);
      sub_1003950E4(v4, (uint64_t)v5, v12);
    }
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
    return v39();
  }
}

uint64_t sub_100379F08()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 416);
  if (v0) {
    uint64_t v4 = sub_10037B23C;
  }
  else {
    uint64_t v4 = sub_10037A01C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10037A01C()
{
  double v1 = *(double *)(v0 + 16);
  if (*(unsigned char *)(v0 + 24))
  {
    (*(void (**)(void, void, double))(*(void *)(v0 + 264) + 8))(*(void *)(v0 + 272), *(void *)(v0 + 256), v1);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 520) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10037A280;
    uint64_t v3 = *(void *)(v0 + 376);
    return SFProgressTask.finalValue.getter(v0 + 25, v3);
  }
  else
  {
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    uint64_t v19 = *(void (**)(double *, uint64_t))(v0 + 480);
    uint64_t v4 = *(unsigned int *)(v0 + 560);
    uint64_t v5 = *(void (**)(double *, uint64_t, uint64_t))(v0 + 464);
    uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 448);
    uint64_t v7 = *(void *)(v0 + 368);
    uint64_t v8 = *(void *)(v0 + 352);
    uint64_t v9 = *(void *)(v0 + 320);
    unint64_t v10 = *(double **)(v0 + 296);
    uint64_t v18 = *(void *)(v0 + 304);
    uint64_t v11 = *(void *)(v0 + 280);
    unsigned __int8 v12 = (char *)v10 + *(int *)(*(void *)(v0 + 440) + 64);
    *unint64_t v10 = *(double *)(v0 + 56);
    v10[1] = v1;
    v6(v12, v7, v8);
    v5(v10, v4, v11);
    swift_bridgeObjectRetain();
    sub_100321A40((uint64_t)v10, v9);
    v19(v10, v11);
    v20(v9, v18);
    uint64_t v13 = static AirDropActor.shared;
    uint64_t v14 = sub_100394340((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 512) = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_100379F08;
    uint64_t v16 = *(void *)(v0 + 256);
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 16, v13, v14, v16, v0 + 40);
  }
}

uint64_t sub_10037A280()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 528) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 416);
  if (v0) {
    uint64_t v4 = sub_10037B3FC;
  }
  else {
    uint64_t v4 = sub_10037A3AC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10037A3AC()
{
  int v1 = *(unsigned __int8 *)(v0 + 25);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 67109120;
    *(_DWORD *)(v0 + 28) = v1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Send StateMachine UserSafety ANALYZE END {isSensitiveContent: %{BOOL}d}", v4, 8u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 408);
  uint64_t v6 = *(void *)(v0 + 376);
  uint64_t v7 = *(void *)(v0 + 384);
  uint64_t v9 = *(void *)(v0 + 360);
  uint64_t v8 = *(void *)(v0 + 368);
  int v51 = v1;
  uint64_t v10 = *(void *)(v0 + 352);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  BOOL v13 = os_log_type_enabled(v11, v12);
  if (v51)
  {
    if (v13)
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Send StateMachine UserSafety INTERVENTION START", v14, 2u);
      swift_slowDealloc();
    }
    uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v0 + 496);
    uint64_t v48 = *(void (**)(void *, uint64_t))(v0 + 480);
    uint64_t v45 = *(void (**)(void *, void, uint64_t))(v0 + 464);
    uint64_t v46 = *(void *)(v0 + 320);
    uint64_t v47 = *(void *)(v0 + 304);
    uint64_t v43 = *(void **)(v0 + 296);
    uint64_t v44 = *(void *)(v0 + 280);
    uint64_t v16 = *(void *)(v0 + 240);
    uint64_t v15 = *(void *)(v0 + 248);
    uint64_t v17 = *(void *)(v0 + 224);
    uint64_t v18 = *(void *)(v0 + 232);
    uint64_t v29 = *(void *)(v0 + 216);
    uint64_t v19 = *(void *)(v0 + 184);
    uint64_t v34 = *(void *)(v0 + 208);
    uint64_t v35 = *(void *)(v0 + 192);
    uint64_t v36 = *(void *)(v0 + 168);
    uint64_t v37 = *(void *)(v0 + 176);
    uint64_t v38 = *(void *)(v0 + 160);
    uint64_t v39 = *(void *)(v0 + 152);
    uint64_t v41 = *(void *)(v0 + 144);
    uint64_t v42 = *(void *)(v0 + 136);
    uint64_t v31 = *(void *)(v0 + 200);
    uint64_t v33 = *(void *)(v0 + 128);
    uint64_t v49 = *(void *)(v0 + 120);
    uint64_t v30 = *(void *)(v0 + 112);
    uint64_t v52 = *(void *)(v0 + 104);
    uint64_t v40 = *(void *)(v0 + 56);

    UUID.init()();
    static Date.now.getter();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    v28(v16, v15, v17);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_100394340(&qword_100970D60, (void (*)(uint64_t))&type metadata accessor for SFInterventionResponse);
    sub_100394340(&qword_100970D68, (void (*)(uint64_t))&type metadata accessor for SFInterventionResponse);
    uint64_t v20 = sub_100394340(&qword_100970D70, (void (*)(uint64_t))&type metadata accessor for SFInterventionResponse);
    SFAirDrop.PermissionRequest.InterventionAction.init(id:operation:)();
    v28(v16, v15, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v34, v29, v35);
    LODWORD(v35) = enum case for SFInterventionWorkflow.send(_:);
    uint64_t v32 = *(void (**)(uint64_t))(v30 + 104);
    v32(v33);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v37, v19, v38);
    SFAirDrop.PermissionRequest.init(id:requestDate:interventionWorkflow:action:isAnswered:)();
    uint64_t v21 = (char *)v43 + *(int *)(sub_10000A844(&qword_100970D78) + 48);
    *uint64_t v43 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v21, v39, v42);
    v45(v43, enum case for SFAirDropSend.Transfer.State.waitingForSensitiveContentResponse(_:), v44);
    swift_bridgeObjectRetain();
    sub_100321A40((uint64_t)v43, v46);
    v48(v43, v44);
    v50(v46, v47);
    *(void *)(v0 + 536) = [objc_allocWithZone((Class)type metadata accessor for SDAirDropUserSafetyInterventionAlert()) init:v20];
    ((void (*)(uint64_t, void, uint64_t))v32)(v49, v35, v52);
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 544) = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_10037AAA4;
    uint64_t v23 = *(void *)(v0 + 120);
    uint64_t v24 = *(void *)(v0 + 96);
    return sub_1004B19FC(v24, v23);
  }
  else
  {
    if (v13)
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Send StateMachine UserSafety INTERVENTION SKIP. Content is not sensitive", v26, 2u);
      swift_slowDealloc();
    }

    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
    return v27();
  }
}

uint64_t sub_10037AAA4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 552) = v0;
  swift_task_dealloc();
  os_log_type_t v3 = (void *)v2[67];
  uint64_t v4 = v2[52];
  (*(void (**)(void, void))(v2[14] + 8))(v2[15], v2[13]);

  if (v0) {
    uint64_t v5 = sub_10037B59C;
  }
  else {
    uint64_t v5 = sub_10037AC40;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_10037AC40()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, v0[12], v2);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  if (v4 == enum case for SFInterventionResponse.accept(_:))
  {
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Send StateMachine UserSafety INTERVENTION ACCEPTED", v7, 2u);
      swift_slowDealloc();
    }
    uint64_t v45 = v0[31];
    uint64_t v8 = v0[29];
    uint64_t v41 = v0[27];
    uint64_t v43 = v0[28];
    uint64_t v9 = v0[25];
    uint64_t v37 = v0[23];
    uint64_t v39 = v0[24];
    uint64_t v10 = v0[21];
    uint64_t v35 = v0[20];
    uint64_t v11 = v0[18];
    uint64_t v12 = v0[19];
    uint64_t v13 = v0[17];
    uint64_t v14 = v0[12];
    uint64_t v15 = v5;
    uint64_t v17 = v0[9];
    uint64_t v16 = v0[10];

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v17);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v13);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v37, v35);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v41, v39);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v45, v43);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    if (v4 != enum case for SFInterventionResponse.reject(_:)) {
      return _assertionFailure(_:_:file:line:flags:)();
    }
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Send StateMachine UserSafety INTERVENTION REJECTED", v21, 2u);
      swift_slowDealloc();
    }
    uint64_t v44 = v0[31];
    uint64_t v22 = v0[29];
    uint64_t v40 = v0[27];
    uint64_t v42 = v0[28];
    uint64_t v23 = v0[25];
    uint64_t v36 = v0[23];
    uint64_t v38 = v0[24];
    uint64_t v24 = v0[21];
    uint64_t v25 = v0[18];
    uint64_t v33 = v0[19];
    uint64_t v34 = v0[20];
    uint64_t v32 = v0[17];
    uint64_t v26 = v0[12];
    uint64_t v28 = v0[9];
    uint64_t v27 = v0[10];

    uint64_t v29 = type metadata accessor for SFAirDropSend.Failure();
    sub_100394340(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v29 - 8) + 104))(v30, enum case for SFAirDropSend.Failure.cancelled(_:), v29);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v33, v32);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v36, v34);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v40, v38);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v44, v42);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
  }
  return v18();
}

uint64_t sub_10037B23C()
{
  uint64_t v1 = v0[51];
  uint64_t v2 = v0[47];
  uint64_t v3 = v0[48];
  uint64_t v5 = v0[45];
  uint64_t v4 = v0[46];
  uint64_t v6 = v0[44];
  (*(void (**)(void, void))(v0[33] + 8))(v0[34], v0[32]);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10037B3FC()
{
  uint64_t v1 = v0[51];
  uint64_t v2 = v0[47];
  uint64_t v3 = v0[48];
  (*(void (**)(void, void))(v0[45] + 8))(v0[46], v0[44]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10037B59C()
{
  uint64_t v1 = v0[31];
  uint64_t v2 = v0[28];
  uint64_t v3 = v0[29];
  uint64_t v4 = v0[27];
  uint64_t v5 = v0[24];
  uint64_t v6 = v0[25];
  uint64_t v7 = v0[23];
  uint64_t v9 = v0[20];
  uint64_t v8 = v0[21];
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_10037B780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[56] = a5;
  v6[57] = v5;
  v6[54] = a3;
  v6[55] = a4;
  v6[52] = a1;
  v6[53] = a2;
  v6[58] = sub_10000A844(&qword_100970DA8);
  v6[59] = swift_task_alloc();
  v6[60] = swift_task_alloc();
  v6[61] = swift_task_alloc();
  v6[62] = swift_task_alloc();
  v6[63] = swift_task_alloc();
  v6[64] = swift_task_alloc();
  v6[65] = swift_task_alloc();
  v6[66] = swift_task_alloc();
  v6[67] = swift_task_alloc();
  v6[68] = swift_task_alloc();
  v6[69] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SFAirDropSend.Transfer.State();
  v6[70] = v7;
  v6[71] = *(void *)(v7 - 8);
  unsigned char v6[72] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SFAirDropSend.Transfer();
  v6[73] = v8;
  v6[74] = *(void *)(v8 - 8);
  v6[75] = swift_task_alloc();
  v6[76] = swift_task_alloc();
  v6[77] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for SFAirDrop.TransferType();
  v6[78] = v9;
  v6[79] = *(void *)(v9 - 8);
  v6[80] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v10 = static AirDropActor.shared;
  v6[81] = static AirDropActor.shared;
  return _swift_task_switch(sub_10037BA08, v10, 0);
}

uint64_t sub_10037BA08()
{
  uint64_t v1 = *(void *)(v0 + 640);
  uint64_t v2 = *(void *)(v0 + 632);
  uint64_t v3 = *(void *)(v0 + 624);
  uint64_t v4 = *(void *)(v0 + 456) + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest;
  SFAirDropSend.Request.type.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3) == enum case for SFAirDrop.TransferType.exchange(_:))
  {
    (*(void (**)(void, void))(*(void *)(v0 + 632) + 96))(*(void *)(v0 + 640), *(void *)(v0 + 624));
    swift_bridgeObjectRelease();
    swift_retain();
    CurrentValueSubject.value.getter();
    swift_release();
    uint64_t v5 = *(void *)(*(void *)(v0 + 408) + 16);
    swift_bridgeObjectRelease();
    if (v5 == 1)
    {
      uint64_t v6 = (void *)swift_task_alloc();
      *(void *)(v0 + 656) = v6;
      *uint64_t v6 = v0;
      v6[1] = sub_10037BE60;
      uint64_t v7 = *(void *)(v0 + 448);
      uint64_t v8 = *(void *)(v0 + 432);
      uint64_t v9 = *(void *)(v0 + 440);
      uint64_t v10 = *(void *)(v0 + 424);
      return sub_1003806D0(v0 + 144, v10, v8, v9, v7);
    }
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 632) + 8))(*(void *)(v0 + 640), *(void *)(v0 + 624));
  }
  uint64_t v40 = v4;
  *(void *)(v0 + 664) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log;
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Send StateMachine ASK START", v14, 2u);
    swift_slowDealloc();
  }
  uint64_t v33 = *(void *)(v0 + 616);
  uint64_t v15 = *(void *)(v0 + 608);
  uint64_t v39 = *(void *)(v0 + 600);
  uint64_t v16 = *(void *)(v0 + 592);
  uint64_t v17 = *(void *)(v0 + 584);
  uint64_t v18 = *(void *)(v0 + 576);
  uint64_t v19 = *(void *)(v0 + 568);
  uint64_t v20 = *(void *)(v0 + 560);
  uint64_t v21 = *(void *)(v0 + 456);
  uint64_t v36 = *(int **)(v0 + 464);
  uint64_t v37 = *(void *)(v0 + 552);

  uint64_t v38 = v21;
  uint64_t v34 = *(void (**)(uint64_t))(v21
                                       + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_yield);
  uint64_t v22 = v21 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  swift_beginAccess();
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  v35(v15, v22, v17);
  (*(void (**)(uint64_t, void, uint64_t))(v19 + 104))(v18, enum case for SFAirDropSend.Transfer.State.waitingForAskResponse(_:), v20);
  SFAirDropSend.Transfer.update(state:)();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  *(void *)(v0 + 672) = v23;
  *(void *)(v0 + 680) = (v16 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v23(v15, v17);
  v34(v33);
  v23(v33, v17);
  uint64_t v24 = v36[12];
  *(_DWORD *)(v0 + 824) = v24;
  uint64_t v25 = v37 + v24;
  uint64_t v26 = v36[20];
  *(_DWORD *)(v0 + 828) = v26;
  uint64_t v27 = v37 + v26;
  uint64_t v28 = v36[32];
  *(_DWORD *)(v0 + 832) = v28;
  uint64_t v29 = v37 + v28;
  v35(v39, v22, v17);
  uint64_t v30 = *(void *)(v38 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_deviceStatus);
  uint64_t v31 = (void *)swift_task_alloc();
  *(void *)(v0 + 688) = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_10037C3C8;
  uint64_t v32 = *(void *)(v0 + 600);
  return sub_100383720(v0 + 16, v25, v27, v29, v40, v32, v30);
}

uint64_t sub_10037BE60()
{
  uint64_t v2 = *v1;
  uint64_t v23 = *v1;
  uint64_t v7 = *(unsigned __int8 *)(*v1 + 148);
  uint64_t v6 = *(unsigned int *)(*v1 + 144);
  uint64_t v22 = *(void *)(*v1 + 152);
  uint64_t v21 = *(void *)(*v1 + 160);
  uint64_t v20 = *(void *)(*v1 + 168);
  uint64_t v19 = *(void *)(*v1 + 176);
  uint64_t v18 = *(void *)(*v1 + 184);
  char v17 = *(unsigned char *)(*v1 + 192);
  uint64_t v16 = *(void *)(*v1 + 200);
  uint64_t v15 = *(void *)(*v1 + 208);
  uint64_t v14 = *(void *)(*v1 + 216);
  uint64_t v13 = *(void *)(*v1 + 224);
  uint64_t v12 = *(void *)(*v1 + 232);
  uint64_t v11 = *(void *)(*v1 + 240);
  uint64_t v10 = *(void *)(*v1 + 248);
  uint64_t v9 = *(void *)(*v1 + 256);
  uint64_t v8 = *(void *)(*v1 + 264);
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 416);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    *(unsigned char *)(v4 + 4) = (v6 | (unint64_t)(v7 << 32)) >> 32;
    *(_DWORD *)uint64_t v4 = v6;
    *(void *)(v4 + 8) = v22;
    *(void *)(v4 + 16) = v21;
    *(void *)(v4 + 24) = v20;
    *(void *)(v4 + 32) = v19;
    *(void *)(v4 + 40) = v18;
    *(unsigned char *)(v4 + 48) = v17;
    *(void *)(v4 + 56) = v16;
    *(void *)(v4 + 64) = v15;
    *(void *)(v4 + 72) = v14;
    *(void *)(v4 + 80) = v13;
    *(void *)(v4 + 88) = v12;
    *(void *)(v4 + 96) = v11;
    *(void *)(v4 + 104) = v10;
    *(void *)(v4 + 112) = v9;
    *(void *)(v4 + 120) = v8;
  }
  uint64_t v3 = *(uint64_t (**)(void))(v23 + 8);
  return v3();
}

uint64_t sub_10037C3C8()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v3[87] = v0;
  int v4 = *((_DWORD *)v3 + 4);
  *((unsigned char *)v3 + 708) = *((unsigned char *)v3 + 20);
  *((_DWORD *)v3 + 176) = v4;
  v3[89] = v2[3];
  v3[90] = v2[4];
  *(_OWORD *)(v3 + 91) = *(_OWORD *)(v3 + 5);
  v3[93] = v2[7];
  *((unsigned char *)v3 + 848) = *((unsigned char *)v3 + 64);
  long long v5 = *(_OWORD *)(v3 + 11);
  *((_OWORD *)v3 + 47) = *(_OWORD *)(v3 + 9);
  *((_OWORD *)v3 + 48) = v5;
  long long v6 = *(_OWORD *)(v3 + 15);
  *((_OWORD *)v3 + 49) = *(_OWORD *)(v3 + 13);
  *((_OWORD *)v3 + 50) = v6;
  v3[102] = v2[17];
  swift_task_dealloc();
  uint64_t v7 = (void (*)(uint64_t, uint64_t))v2[84];
  uint64_t v8 = v2[81];
  uint64_t v9 = v2[75];
  uint64_t v10 = v2[73];
  if (v0)
  {
    v7(v9, v10);
    uint64_t v11 = sub_10037D4EC;
  }
  else
  {
    uint64_t v12 = (_DWORD *)v3[58];
    *((_DWORD *)v3 + 209) = v12[16];
    *((_DWORD *)v3 + 210) = v12[24];
    *((_DWORD *)v3 + 211) = v12[28];
    v7(v9, v10);
    uint64_t v11 = sub_10037C610;
  }
  return _swift_task_switch(v11, v8, 0);
}

uint64_t sub_10037C610()
{
  uint64_t v169 = v0;
  uint64_t v148 = *(int *)(v0 + 844);
  uint64_t v1 = *(int *)(v0 + 836);
  unint64_t v163 = *(void *)(v0 + 808);
  uint64_t v165 = *(void *)(v0 + 816);
  uint64_t v121 = *(void *)(v0 + 792);
  uint64_t v123 = *(void *)(v0 + 800);
  uint64_t v2 = *(void *)(v0 + 776);
  uint64_t v133 = *(void *)(v0 + 768);
  uint64_t v135 = *(void *)(v0 + 784);
  uint64_t v131 = *(void *)(v0 + 752);
  char v3 = *(unsigned char *)(v0 + 848);
  char v129 = v3;
  uint64_t v4 = *(void *)(v0 + 744);
  uint64_t v127 = *(void *)(v0 + 736);
  uint64_t v119 = *(void *)(v0 + 728);
  uint64_t v125 = *(void *)(v0 + 720);
  long long v5 = *(void **)(v0 + 712);
  int v6 = *(_DWORD *)(v0 + 704);
  char v7 = *(unsigned char *)(v0 + 708);
  uint64_t v8 = *(void *)(v0 + 552);
  uint64_t v9 = *(void *)(v0 + 544);
  uint64_t v155 = *(void *)(v0 + 536);
  uint64_t v158 = *(void *)(v0 + 528);
  uint64_t v10 = *(int **)(v0 + 464);
  uint64_t v11 = v8 + *(int *)(v0 + 840);
  uint64_t v151 = v8 + *(int *)(v0 + 832);
  uint64_t v138 = *(void *)(v0 + 760);
  uint64_t v141 = v8 + *(int *)(v0 + 828);
  uint64_t v12 = v8 + *(int *)(v0 + 824);
  *(unsigned char *)(v8 + 4) = v7;
  *(_DWORD *)uint64_t v8 = v6;
  *(void *)(v8 + v1) = v5;
  uint64_t v13 = v5;
  uint64_t v146 = v5;
  *(void *)uint64_t v11 = v125;
  *(void *)(v11 + 8) = v119;
  *(void *)(v11 + 16) = v127;
  *(void *)(v11 + 24) = v4;
  uint64_t v14 = v4;
  *(unsigned char *)(v11 + 32) = v3;
  *(void *)(v11 + 40) = v131;
  *(void *)(v11 + 48) = v138;
  *(void *)(v11 + 56) = v133;
  *(void *)(v11 + 64) = v2;
  uint64_t v15 = v2;
  *(void *)(v11 + 72) = v135;
  *(void *)(v11 + 80) = v121;
  *(void *)(v11 + 88) = v123;
  *(void *)(v11 + 96) = v163;
  *(void *)(v8 + v148) = v165;
  uint64_t v16 = v10[12];
  uint64_t v17 = v10[16];
  uint64_t v18 = v10[20];
  uint64_t v19 = v10[24];
  uint64_t v149 = v10[28];
  uint64_t v20 = v10[32];
  *(unsigned char *)(v9 + 4) = v7;
  *(_DWORD *)uint64_t v9 = v6;
  uint64_t v21 = v9 + v18;
  uint64_t v22 = v9 + v19;
  uint64_t v118 = v9 + v20;
  sub_100394298(v12, v9 + v16, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  *(void *)(v9 + v17) = v13;
  sub_100394298(v141, v21, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(void *)uint64_t v22 = v125;
  *(void *)(v22 + 8) = v119;
  *(void *)(v22 + 16) = v127;
  *(void *)(v22 + 24) = v14;
  *(unsigned char *)(v22 + 32) = v129;
  *(void *)(v22 + 40) = v131;
  *(void *)(v22 + 48) = v138;
  *(void *)(v22 + 56) = v133;
  *(void *)(v22 + 64) = v15;
  *(void *)(v22 + 72) = v135;
  *(void *)(v22 + 80) = v121;
  *(void *)(v22 + 88) = v123;
  *(void *)(v22 + 96) = v163;
  *(void *)(v9 + v149) = v165;
  sub_10024A330(v151, v118, &qword_100970BC8);
  sub_10024A330(v9, v155, &qword_100970DA8);
  sub_10024D388(v9, v158, &qword_100970DA8);
  swift_bridgeObjectRetain();
  id v23 = v146;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100278C78(v123, v163);
  swift_bridgeObjectRetain();
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = *(void *)(v0 + 536);
    uint64_t v160 = *(void *)(v0 + 528);
    uint64_t v27 = *(void *)(v0 + 520);
    uint64_t v28 = *(int **)(v0 + 464);
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v168 = swift_slowAlloc();
    uint64_t v152 = v24;
    uint64_t v156 = v29;
    *(_DWORD *)uint64_t v29 = 136315138;
    uint64_t v30 = v28[12];
    uint64_t v31 = v27 + v30;
    uint64_t v144 = v27 + v30;
    uint64_t v32 = v28[16];
    uint64_t v33 = v28[20];
    uint64_t v34 = v27 + v33;
    uint64_t v35 = v28[24];
    unint64_t v136 = (void *)(v27 + v35);
    uint64_t v36 = v28[28];
    uint64_t v37 = v28[32];
    uint64_t v38 = v26 + v30;
    uint64_t v39 = v26 + v33;
    uint64_t v40 = (_OWORD *)(v26 + v35);
    uint64_t v139 = v26 + v37;
    uint64_t v142 = v27 + v37;
    LODWORD(v30) = *(_DWORD *)v26;
    *(unsigned char *)(v27 + 4) = *(unsigned char *)(v26 + 4);
    *(_DWORD *)uint64_t v27 = v30;
    sub_100394298(v38, v31, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
    *(void *)(v27 + v32) = *(void *)(v26 + v32);
    sub_100394298(v39, v34, type metadata accessor for SDAirDropDiscoveredEndpoint);
    long long v42 = v40[1];
    long long v41 = v40[2];
    *(_OWORD *)(v0 + 272) = *v40;
    *(_OWORD *)(v0 + 288) = v42;
    *(_OWORD *)(v0 + 304) = v41;
    long long v44 = v40[4];
    long long v43 = v40[5];
    long long v45 = v40[3];
    *(void *)(v0 + 368) = *((void *)v40 + 12);
    *(_OWORD *)(v0 + 336) = v44;
    *(_OWORD *)(v0 + 352) = v43;
    *(_OWORD *)(v0 + 320) = v45;
    memmove(v136, v40, 0x68uLL);
    *(void *)(v27 + v36) = *(void *)(v26 + v36);
    sub_10024A330(v139, v142, &qword_100970BC8);
    sub_10039522C(v0 + 272);
    sub_10000A7E8(v142, &qword_100970BC8);
    sub_1003956E4(v34, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1003956E4(v144, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
    uint64_t v46 = sub_1005D058C();
    unint64_t v48 = v47;
    sub_1002FB0E0(v0 + 272);
    *(void *)(v0 + 400) = sub_100254634(v46, v48, &v168);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A7E8(v160, &qword_100970DA8);
    sub_10000A7E8(v26, &qword_100970DA8);
    _os_log_impl((void *)&_mh_execute_header, v152, v25, "Send StateMachine ASK END {response: %s}", v156, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v49 = *(void *)(v0 + 536);
    uint64_t v50 = *(void *)(v0 + 528);

    sub_10000A7E8(v50, &qword_100970DA8);
    sub_10000A7E8(v49, &qword_100970DA8);
  }
  uint64_t v153 = *(int *)(v0 + 844);
  uint64_t v166 = *(int *)(v0 + 840);
  uint64_t v161 = *(int *)(v0 + 836);
  int v51 = *(int **)(v0 + 552);
  uint64_t v52 = *(void *)(v0 + 520);
  uint64_t v53 = *(void *)(v0 + 512);
  uint64_t v112 = *(void *)(v0 + 504);
  uint64_t v89 = *(void *)(v0 + 496);
  uint64_t v91 = *(void *)(v0 + 488);
  uint64_t v97 = *(void *)(v0 + 480);
  Swift::String v54 = *(int **)(v0 + 464);
  uint64_t v102 = *(void *)(v0 + 472);
  uint64_t v105 = *(void *)(v0 + 448);
  uint64_t v108 = *(void *)(v0 + 440);
  uint64_t v110 = *(void *)(v0 + 432);
  uint64_t v114 = *(void *)(v0 + 424);
  uint64_t v55 = (uint64_t)v51 + *(int *)(v0 + 832);
  uint64_t v132 = (uint64_t)v51 + *(int *)(v0 + 828);
  uint64_t v122 = (uint64_t)v51 + *(int *)(v0 + 824);
  uint64_t v56 = v54[16];
  uint64_t v57 = v52 + v54[20];
  uint64_t v106 = v57;
  uint64_t v107 = v52 + v54[12];
  uint64_t v58 = v52 + v54[24];
  uint64_t v103 = v54[28];
  uint64_t v116 = v52 + v54[32];
  int v164 = *v51;
  char v159 = *((unsigned char *)v51 + 4);
  *(unsigned char *)(v52 + 4) = v159;
  *(_DWORD *)uint64_t v52 = v164;
  sub_100394298(v122, v107, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  uint64_t v150 = *(void *)((char *)v51 + v161);
  *(void *)(v52 + v56) = v150;
  sub_100394298(v132, v57, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v140 = *(void *)((char *)v51 + v166);
  uint64_t v143 = *(void *)(v11 + 16);
  uint64_t v137 = *(void *)(v11 + 24);
  char v134 = *(unsigned char *)(v11 + 32);
  uint64_t v128 = *(void *)(v11 + 48);
  uint64_t v130 = *(void *)(v11 + 40);
  uint64_t v167 = *(void *)(v11 + 56);
  uint64_t v145 = *(void *)(v11 + 8);
  uint64_t v147 = *(void *)(v11 + 64);
  uint64_t v126 = *(void *)(v11 + 72);
  uint64_t v157 = *(void *)(v11 + 80);
  uint64_t v162 = *(void *)(v11 + 88);
  uint64_t v124 = *(void *)(v11 + 96);
  *(void *)uint64_t v58 = v140;
  *(void *)(v58 + 8) = v145;
  *(void *)(v58 + 16) = v143;
  *(void *)(v58 + 24) = v137;
  *(unsigned char *)(v58 + 32) = v134;
  *(void *)(v58 + 40) = v130;
  *(void *)(v58 + 48) = v128;
  *(void *)(v58 + 56) = v167;
  *(void *)(v58 + 64) = v147;
  *(void *)(v58 + 72) = v126;
  *(void *)(v58 + 80) = v157;
  *(void *)(v58 + 88) = v162;
  *(void *)(v58 + 96) = v124;
  uint64_t v154 = *(void *)((char *)v51 + v153);
  *(void *)(v52 + v103) = v154;
  sub_10024A330(v55, v116, &qword_100970BC8);
  uint64_t v59 = v54[16];
  uint64_t v60 = v53 + v54[20];
  uint64_t v104 = v60;
  uint64_t v61 = v53 + v54[24];
  uint64_t v95 = v54[28];
  uint64_t v62 = v53 + v54[32];
  uint64_t v99 = v53 + v54[12];
  uint64_t v101 = v62;
  *(unsigned char *)(v53 + 4) = v159;
  *(_DWORD *)uint64_t v53 = v164;
  sub_100394298(v122, v99, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  *(void *)(v53 + v59) = v150;
  sub_100394298(v132, v60, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(void *)uint64_t v61 = v140;
  *(void *)(v61 + 8) = v145;
  *(void *)(v61 + 16) = v143;
  *(void *)(v61 + 24) = v137;
  *(unsigned char *)(v61 + 32) = v134;
  *(void *)(v61 + 40) = v130;
  *(void *)(v61 + 48) = v128;
  *(void *)(v61 + 56) = v167;
  *(void *)(v61 + 64) = v147;
  *(void *)(v61 + 72) = v126;
  *(void *)(v61 + 80) = v157;
  *(void *)(v61 + 88) = v162;
  *(void *)(v61 + 96) = v124;
  *(void *)(v53 + v95) = v154;
  sub_10024A330(v55, v62, &qword_100970BC8);
  sub_1003940A4(v99, v114, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  uint64_t v63 = v112 + v54[12];
  uint64_t v100 = v63;
  uint64_t v64 = v54[16];
  uint64_t v65 = v112 + v54[20];
  uint64_t v66 = v112 + v54[24];
  uint64_t v93 = v54[28];
  uint64_t v96 = v65;
  uint64_t v115 = v112 + v54[32];
  *(unsigned char *)(v112 + 4) = v159;
  *(_DWORD *)uint64_t v112 = v164;
  sub_100394298(v122, v63, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  *(void *)(v112 + v64) = v150;
  sub_100394298(v132, v65, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(void *)uint64_t v66 = v140;
  *(void *)(v66 + 8) = v145;
  *(void *)(v66 + 16) = v143;
  *(void *)(v66 + 24) = v137;
  *(unsigned char *)(v66 + 32) = v134;
  *(void *)(v66 + 40) = v130;
  *(void *)(v66 + 48) = v128;
  *(void *)(v66 + 56) = v167;
  *(void *)(v66 + 64) = v147;
  *(void *)(v66 + 72) = v126;
  *(void *)(v66 + 80) = v157;
  *(void *)(v66 + 88) = v162;
  *(void *)(v66 + 96) = v124;
  *(void *)(v112 + v93) = v154;
  sub_10024A330(v55, v115, &qword_100970BC8);
  uint64_t v67 = v89 + v54[12];
  uint64_t v94 = v67;
  uint64_t v68 = v89 + v54[20];
  uint64_t v87 = v54[16];
  uint64_t v69 = v89 + v54[24];
  uint64_t v88 = v54[28];
  uint64_t v113 = v89 + v54[32];
  *(unsigned char *)(v89 + 4) = v159;
  *(_DWORD *)uint64_t v89 = v164;
  sub_100394298(v122, v67, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  *(void *)(v89 + v87) = v150;
  sub_100394298(v132, v68, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(void *)uint64_t v69 = v140;
  *(void *)(v69 + 8) = v145;
  *(void *)(v69 + 16) = v143;
  *(void *)(v69 + 24) = v137;
  *(unsigned char *)(v69 + 32) = v134;
  *(void *)(v69 + 40) = v130;
  *(void *)(v69 + 48) = v128;
  *(void *)(v69 + 56) = v167;
  *(void *)(v69 + 64) = v147;
  *(void *)(v69 + 72) = v126;
  *(void *)(v69 + 80) = v157;
  *(void *)(v69 + 88) = v162;
  *(void *)(v69 + 96) = v124;
  *(void *)(v89 + v88) = v154;
  sub_10024A330(v55, v113, &qword_100970BC8);
  sub_1003940A4(v68, v110, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v70 = v91 + v54[20];
  uint64_t v90 = v91 + v54[12];
  uint64_t v71 = v91 + v54[24];
  uint64_t v85 = v54[16];
  uint64_t v86 = v54[28];
  uint64_t v111 = v91 + v54[32];
  *(unsigned char *)(v91 + 4) = v159;
  *(_DWORD *)uint64_t v91 = v164;
  sub_100394298(v122, v90, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  *(void *)(v91 + v85) = v150;
  sub_100394298(v132, v70, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(void *)uint64_t v71 = v140;
  *(void *)(v71 + 8) = v145;
  *(void *)(v71 + 16) = v143;
  *(void *)(v71 + 24) = v137;
  *(unsigned char *)(v71 + 32) = v134;
  *(void *)(v71 + 40) = v130;
  *(void *)(v71 + 48) = v128;
  *(void *)(v71 + 56) = v167;
  *(void *)(v71 + 64) = v147;
  *(void *)(v71 + 72) = v126;
  *(void *)(v71 + 80) = v157;
  *(void *)(v71 + 88) = v162;
  *(void *)(v71 + 96) = v124;
  *(void *)(v91 + v86) = v154;
  sub_10024A330(v55, v111, &qword_100970BC8);
  uint64_t v72 = type metadata accessor for SFAirDrop.ContactRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v108, 1, 1, v72);
  uint64_t v73 = v97 + v54[12];
  uint64_t v92 = v73;
  uint64_t v74 = v54[16];
  uint64_t v75 = v97 + v54[20];
  uint64_t v76 = v97 + v54[24];
  uint64_t v77 = v54[28];
  uint64_t v109 = v97 + v54[32];
  *(unsigned char *)(v97 + 4) = v159;
  *(_DWORD *)uint64_t v97 = v164;
  sub_100394298(v122, v73, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  *(void *)(v97 + v74) = v150;
  sub_100394298(v132, v75, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(void *)uint64_t v76 = v140;
  *(void *)(v76 + 8) = v145;
  *(void *)(v76 + 16) = v143;
  *(void *)(v76 + 24) = v137;
  *(unsigned char *)(v76 + 32) = v134;
  *(void *)(v76 + 40) = v130;
  *(void *)(v76 + 48) = v128;
  *(void *)(v76 + 56) = v167;
  *(void *)(v76 + 64) = v147;
  *(void *)(v76 + 72) = v126;
  *(void *)(v76 + 80) = v157;
  *(void *)(v76 + 88) = v162;
  *(void *)(v76 + 96) = v124;
  *(void *)(v97 + v77) = v154;
  sub_10024A330(v55, v109, &qword_100970BC8);
  uint64_t v78 = v102 + v54[12];
  uint64_t v120 = v78;
  uint64_t v98 = v54[16];
  uint64_t v79 = v102 + v54[20];
  uint64_t v80 = v102 + v54[24];
  uint64_t v117 = v54[28];
  uint64_t v81 = v102 + v54[32];
  *(unsigned char *)(v102 + 4) = v159;
  *(_DWORD *)uint64_t v102 = v164;
  sub_1003940A4(v122, v78, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  *(void *)(v102 + v98) = v150;
  sub_1003940A4(v132, v79, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(void *)uint64_t v80 = v140;
  *(void *)(v80 + 8) = v145;
  *(void *)(v80 + 16) = v143;
  *(void *)(v80 + 24) = v137;
  *(unsigned char *)(v80 + 32) = v134;
  *(void *)(v80 + 40) = v130;
  *(void *)(v80 + 48) = v128;
  *(void *)(v80 + 56) = v167;
  *(void *)(v80 + 64) = v147;
  *(void *)(v80 + 72) = v126;
  *(void *)(v80 + 80) = v157;
  *(void *)(v80 + 88) = v162;
  *(void *)(v80 + 96) = v124;
  *(void *)(v102 + v117) = v154;
  sub_10024D388(v55, v81, &qword_100970BC8);
  sub_10024D388(v81, v105, &qword_100970BC8);
  sub_1003956E4(v79, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1003956E4(v120, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_10000A7E8(v109, &qword_100970BC8);
  sub_1003956E4(v75, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1003956E4(v92, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_10000A7E8(v111, &qword_100970BC8);
  sub_1003956E4(v70, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1003956E4(v90, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_10000A7E8(v113, &qword_100970BC8);
  sub_1003956E4(v94, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_10000A7E8(v115, &qword_100970BC8);
  sub_1003956E4(v96, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1003956E4(v100, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_10000A7E8(v101, &qword_100970BC8);
  sub_1003956E4(v104, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_10000A7E8(v116, &qword_100970BC8);
  sub_1003956E4(v106, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1003956E4(v107, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  uint64_t v82 = *(void *)(v0 + 416);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(unsigned char *)(v82 + 4) = v159;
  *(_DWORD *)uint64_t v82 = v164;
  *(void *)(v82 + 8) = v150;
  *(void *)(v82 + 16) = v140;
  *(void *)(v82 + 24) = v145;
  *(void *)(v82 + 32) = v143;
  *(void *)(v82 + 40) = v137;
  *(unsigned char *)(v82 + 48) = v134;
  *(void *)(v82 + 56) = v130;
  *(void *)(v82 + 64) = v128;
  *(void *)(v82 + 72) = v167;
  *(void *)(v82 + 80) = v147;
  *(void *)(v82 + 88) = v126;
  *(void *)(v82 + 96) = v157;
  *(void *)(v82 + 104) = v162;
  *(void *)(v82 + 112) = v124;
  *(void *)(v82 + 120) = v154;
  uint64_t v83 = *(uint64_t (**)(void))(v0 + 8);
  return v83();
}

uint64_t sub_10037D4EC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10037D638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 272) = a7;
  *(void *)(v9 + 280) = a8;
  *(void *)(v9 + 256) = a5;
  *(void *)(v9 + 264) = a6;
  *(void *)(v9 + 240) = a3;
  *(void *)(v9 + 248) = a4;
  *(void *)(v9 + 224) = a1;
  *(void *)(v9 + 232) = a2;
  uint64_t v10 = *a5;
  *(void *)(v9 + 288) = v8;
  *(void *)(v9 + 296) = v10;
  *(_OWORD *)(v9 + 304) = *(_OWORD *)(a5 + 1);
  *(void *)(v9 + 320) = a5[3];
  *(unsigned char *)(v9 + 772) = *((unsigned char *)a5 + 32);
  long long v11 = *(_OWORD *)(a5 + 7);
  *(_OWORD *)(v9 + 328) = *(_OWORD *)(a5 + 5);
  *(_OWORD *)(v9 + 344) = v11;
  long long v12 = *(_OWORD *)(a5 + 11);
  *(_OWORD *)(v9 + 360) = *(_OWORD *)(a5 + 9);
  *(_OWORD *)(v9 + 376) = v12;
  uint64_t v13 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult();
  *(void *)(v9 + 392) = v13;
  *(void *)(v9 + 400) = *(void *)(v13 - 8);
  *(void *)(v9 + 408) = swift_task_alloc();
  sub_10000A844(&qword_10097F260);
  *(void *)(v9 + 416) = swift_task_alloc();
  sub_10000A844(&qword_10096DF68);
  *(void *)(v9 + 424) = swift_task_alloc();
  sub_10000A844(&qword_10096D8B8);
  *(void *)(v9 + 432) = swift_task_alloc();
  sub_10000A844(&qword_100970BC0);
  *(void *)(v9 + 440) = swift_task_alloc();
  uint64_t v14 = type metadata accessor for SFAirDropSend.Request();
  *(void *)(v9 + 448) = v14;
  *(void *)(v9 + 456) = *(void *)(v14 - 8);
  *(void *)(v9 + 464) = swift_task_alloc();
  uint64_t v15 = type metadata accessor for SFAirDropSend.Transfer.State();
  *(void *)(v9 + 472) = v15;
  *(void *)(v9 + 480) = *(void *)(v15 - 8);
  *(void *)(v9 + 488) = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_100975040);
  *(void *)(v9 + 496) = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10097C360);
  *(void *)(v9 + 504) = swift_task_alloc();
  uint64_t v16 = type metadata accessor for Date();
  *(void *)(v9 + 512) = v16;
  *(void *)(v9 + 520) = *(void *)(v16 - 8);
  *(void *)(v9 + 528) = swift_task_alloc();
  type metadata accessor for SFAirDrop.TransferIdentifier();
  *(void *)(v9 + 536) = swift_task_alloc();
  uint64_t v17 = type metadata accessor for SFAirDropSend.Transfer();
  *(void *)(v9 + 544) = v17;
  *(void *)(v9 + 552) = *(void *)(v17 - 8);
  *(void *)(v9 + 560) = swift_task_alloc();
  *(void *)(v9 + 568) = swift_task_alloc();
  uint64_t v18 = type metadata accessor for SFAirDropSend.Transfer.Metrics();
  *(void *)(v9 + 576) = v18;
  *(void *)(v9 + 584) = *(void *)(v18 - 8);
  *(void *)(v9 + 592) = swift_task_alloc();
  uint64_t v19 = type metadata accessor for SFAirDrop.TransferType();
  *(void *)(v9 + 600) = v19;
  *(void *)(v9 + 608) = *(void *)(v19 - 8);
  *(void *)(v9 + 616) = swift_task_alloc();
  sub_10000A844(&qword_10096DFA8);
  *(void *)(v9 + 624) = swift_task_alloc();
  *(void *)(v9 + 632) = swift_task_alloc();
  *(void *)(v9 + 640) = _s14descr1008C9AB9V10AskRequestVMa();
  *(void *)(v9 + 648) = swift_task_alloc();
  *(void *)(v9 + 656) = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v20 = static AirDropActor.shared;
  *(void *)(v9 + 664) = static AirDropActor.shared;
  return _swift_task_switch(sub_10037DB80, v20, 0);
}

uint64_t sub_10037DB80()
{
  uint64_t v1 = *(void *)(v0[34] + 16);
  sub_100394298(v0[29], v0[82], (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  uint64_t v2 = v0[82];
  if (v1)
  {
    uint64_t v3 = v0[81];
    uint64_t v4 = v0[29];
    sub_1003956E4(v2, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
    sub_100394298(v4, v3, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
LABEL_3:
    sub_1003956E4(v0[81], (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
LABEL_4:
    uint64_t v5 = v0[77];
    uint64_t v6 = v0[76];
    uint64_t v7 = v0[75];
    *(void *)(v0[36] + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_urls) = v0[34];
    swift_bridgeObjectRelease();
    v0[84] = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest;
    swift_bridgeObjectRetain();
    SFAirDropSend.Request.type.getter();
    char v8 = SFAirDrop.TransferType.isOnlyExchange.getter();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v0[85] = v9;
    v0[86] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v9(v5, v7);
    if ((v8 & 1) == 0)
    {
      uint64_t v10 = *(void *)(v0[36]
                      + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager
                      + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(1, ObjectType, v10);
    }
    long long v12 = (void *)swift_task_alloc();
    v0[87] = v12;
    *long long v12 = v0;
    v12[1] = sub_10037E140;
    uint64_t v13 = v0[35];
    uint64_t v14 = v0[30];
    uint64_t v15 = v0[31];
    uint64_t v16 = v0[29];
    return sub_100387470(v16, v14, v15, v13);
  }
  uint64_t v18 = v0[80];
  uint64_t v19 = v0[79];
  uint64_t v20 = v0[76];
  uint64_t v21 = v0[75];
  sub_10024A330(v2 + *(int *)(v18 + 20), v19, &qword_10096DFA8);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  int v23 = v22(v19, 1, v21);
  uint64_t v24 = v0[82];
  uint64_t v25 = v0[81];
  uint64_t v26 = v0[79];
  if (v23 == 1)
  {
    uint64_t v27 = v0[29];
    sub_1003956E4(v0[82], (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
    sub_10000A7E8(v26, &qword_10096DFA8);
    sub_100394298(v27, v25, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  }
  else
  {
    uint64_t v28 = v0[76];
    uint64_t v29 = v0[75];
    uint64_t v42 = v0[29];
    char v30 = SFAirDrop.TransferType.isOnlyExchange.getter();
    sub_1003956E4(v24, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v29);
    sub_100394298(v42, v25, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
    if (v30) {
      goto LABEL_3;
    }
  }
  uint64_t v31 = v0[78];
  uint64_t v32 = v0[75];
  sub_10024A330(v0[81] + *(int *)(v18 + 20), v31, &qword_10096DFA8);
  int v33 = v22(v31, 1, v32);
  uint64_t v34 = v0[81];
  uint64_t v35 = v0[78];
  if (v33 == 1)
  {
    sub_1003956E4(v0[81], (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
    sub_10000A7E8(v35, &qword_10096DFA8);
  }
  else
  {
    uint64_t v36 = v0[76];
    uint64_t v37 = v0[75];
    char v38 = SFAirDrop.TransferType.isCustom.getter();
    sub_1003956E4(v34, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    if (v38) {
      goto LABEL_4;
    }
  }
  uint64_t v39 = type metadata accessor for SFAirDropSend.Failure();
  sub_100394340(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v39 - 8) + 104))(v40, enum case for SFAirDropSend.Failure.badRequest(_:), v39);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v41 = (uint64_t (*)(void))v0[1];
  return v41();
}

uint64_t sub_10037E140()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 704) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 664);
  if (v0) {
    uint64_t v4 = sub_10037EF80;
  }
  else {
    uint64_t v4 = sub_10037E26C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10037E26C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[85];
  uint64_t v2 = v0[77];
  uint64_t v3 = v0[75];
  sub_100322B14();
  SFAirDropSend.Request.type.getter();
  char v4 = SFAirDrop.TransferType.isOnlyExchange.getter();
  v1(v2, v3);
  if ((v4 & 1) == 0)
  {
    uint64_t v5 = *(void *)(v0[36]
                   + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_hapticsManager
                   + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(2, ObjectType, v5);
  }
  char v7 = *(unsigned char *)(v0[32] + 32);
  char v8 = (void *)swift_task_alloc();
  v0[89] = v8;
  *char v8 = v0;
  v8[1] = sub_10037E3AC;
  uint64_t v9 = v0[33];
  uint64_t v11 = v0[29];
  uint64_t v10 = v0[30];
  return sub_100388FC4(v11, v10, v9, v7);
}

uint64_t sub_10037E3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)*v3;
  v6[90] = v2;
  swift_task_dealloc();
  uint64_t v7 = v6[83];
  if (v2)
  {
    char v8 = sub_10037F0F8;
  }
  else
  {
    v6[91] = a2;
    v6[92] = a1;
    char v8 = sub_10037E4F0;
  }
  return _swift_task_switch(v8, v7, 0);
}

uint64_t sub_10037E4F0()
{
  uint64_t v25 = *(void *)(v0 + 728);
  uint64_t v26 = *(void *)(v0 + 736);
  uint64_t v14 = *(void *)(v0 + 592);
  uint64_t v22 = *(void *)(v0 + 584);
  uint64_t v24 = *(void *)(v0 + 576);
  uint64_t v1 = *(void *)(v0 + 568);
  uint64_t v2 = *(void *)(v0 + 560);
  uint64_t v3 = *(void *)(v0 + 552);
  uint64_t v4 = *(void *)(v0 + 544);
  uint64_t v17 = *(void *)(v0 + 520);
  uint64_t v18 = *(void *)(v0 + 512);
  uint64_t v15 = *(void *)(v0 + 504);
  uint64_t v16 = *(void *)(v0 + 496);
  uint64_t v19 = *(void *)(v0 + 488);
  uint64_t v20 = *(void *)(v0 + 480);
  uint64_t v5 = *(void *)(v0 + 400);
  uint64_t v13 = *(void *)(v0 + 392);
  uint64_t v23 = *(void *)(v0 + 472);
  uint64_t v6 = *(void *)(v0 + 288)
     + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  uint64_t v21 = *(void *)(v0 + 224);
  swift_beginAccess();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v7(v1, v6, v4);
  SFAirDropSend.Transfer.id.getter();
  char v8 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v8(v1, v4);
  v7(v2, v6, v4);
  SFAirDropSend.Transfer.startDate.getter();
  v8(v2, v4);
  SFAirDropSend.Transfer.Metrics.init(id:startDate:)();
  *(_DWORD *)(v0 + 768) = enum case for SFAirDropSend.Transfer.Metrics.TransferResult.success(_:);
  uint64_t v9 = *(void (**)(uint64_t))(v5 + 104);
  *(void *)(v0 + 744) = v9;
  *(void *)(v0 + 752) = (v5 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v9(v15);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v15, 0, 1, v13);
  SFAirDropSend.Transfer.Metrics.result.setter();
  static Date.now.getter();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v16, 0, 1, v18);
  SFAirDropSend.Transfer.Metrics.endDate.setter();
  uint64_t v10 = (void *)(v19 + *(int *)(sub_10000A844((uint64_t *)&unk_100974570) + 48));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v19, v14, v24);
  *uint64_t v10 = v26;
  v10[1] = v25;
  (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v19, enum case for SFAirDropSend.Transfer.State.completedSuccessfully(_:), v23);
  sub_100321A40(v19, v21);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v23);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 760) = v11;
  void *v11 = v0;
  v11[1] = sub_10037E81C;
  return sub_100320760();
}

uint64_t sub_10037E81C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 664);
  swift_task_dealloc();
  return _swift_task_switch(sub_10037E92C, v1, 0);
}

uint64_t sub_10037E92C()
{
  uint64_t v1 = *(void *)(v0 + 288);
  (*(void (**)(void, uint64_t, void))(*(void *)(v0 + 456) + 16))(*(void *)(v0 + 464), v1 + *(void *)(v0 + 672), *(void *)(v0 + 448));
  uint64_t v2 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_selectedConnection;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_selectedConnection);
  if (v3)
  {
    uint64_t v4 = *(void *)(v0 + 432);
    uint64_t v5 = *(void *)(v0 + 440);
    uint64_t v6 = v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_telemetry;
    swift_beginAccess();
    sub_100394298(v6, v5, type metadata accessor for SDAirDropSendConnectionTelemetry);
    uint64_t v7 = type metadata accessor for SDAirDropSendConnectionTelemetry(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 0, 1, v7);
    sub_100394298(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_endpoint, v4, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 0, 1, v8);
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 432);
    uint64_t v9 = *(void *)(v0 + 440);
    uint64_t v11 = type metadata accessor for SDAirDropSendConnectionTelemetry(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
    uint64_t v12 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
  }
  swift_retain();
  CurrentValueSubject.value.getter();
  swift_release();
  uint64_t v49 = *(void *)(v0 + 216);
  uint64_t v13 = *(void *)(v1 + v2);
  uint64_t v14 = *(void *)(v0 + 424);
  if (v13)
  {
    uint64_t v15 = *(void *)(v0 + 416);
    uint64_t v16 = v13 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadRequest;
    swift_beginAccess();
    sub_10024A330(v16, v14, &qword_10096DF68);
    uint64_t v17 = v13 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_lastActiveInterfaceType;
    swift_beginAccess();
    uint64_t v18 = type metadata accessor for SFNWInterfaceType();
    uint64_t v19 = *(void *)(v18 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v15, v17, v18);
    uint64_t v20 = 0;
  }
  else
  {
    uint64_t v21 = _s14descr1008C92C9V13UploadRequestVMa();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v14, 1, 1, v21);
    uint64_t v22 = type metadata accessor for SFNWInterfaceType();
    uint64_t v20 = 1;
    uint64_t v18 = v22;
    uint64_t v19 = *(void *)(v22 - 8);
  }
  uint64_t v43 = *(void (**)(uint64_t, void, uint64_t))(v0 + 744);
  unsigned int v42 = *(_DWORD *)(v0 + 768);
  uint64_t v46 = *(void *)(v0 + 584);
  uint64_t v47 = *(void *)(v0 + 576);
  uint64_t v48 = *(void *)(v0 + 592);
  uint64_t v23 = *(void *)(v0 + 464);
  uint64_t v44 = *(void *)(v0 + 456);
  uint64_t v45 = *(void *)(v0 + 448);
  uint64_t v39 = *(void *)(v0 + 440);
  uint64_t v24 = *(void *)(v0 + 416);
  uint64_t v40 = *(void *)(v0 + 432);
  uint64_t v41 = *(void *)(v0 + 424);
  uint64_t v25 = *(void *)(v0 + 400);
  uint64_t v37 = *(void *)(v0 + 392);
  uint64_t v38 = *(void *)(v0 + 408);
  uint64_t v26 = *(void *)(v0 + 376);
  uint64_t v36 = *(void *)(v0 + 384);
  long long v34 = *(_OWORD *)(v0 + 344);
  long long v35 = *(_OWORD *)(v0 + 360);
  long long v32 = *(_OWORD *)(v0 + 296);
  long long v33 = *(_OWORD *)(v0 + 328);
  uint64_t v27 = *(unsigned __int8 *)(v0 + 772);
  uint64_t v29 = *(void *)(v0 + 312);
  uint64_t v28 = *(void *)(v0 + 320);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v24, v20, 1, v18);
  *(_OWORD *)(v0 + 16) = v32;
  *(void *)(v0 + 32) = v29;
  *(void *)(v0 + 40) = v28;
  *(void *)(v0 + 48) = v27;
  *(_OWORD *)(v0 + 56) = v33;
  *(_OWORD *)(v0 + 72) = v34;
  *(_OWORD *)(v0 + 88) = v35;
  *(void *)(v0 + 104) = v26;
  *(void *)(v0 + 112) = v36;
  v43(v38, v42, v37);
  sub_1003BABE4(v23, v39, v40, v49, v0 + 16, v41, v24, v38);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v38, v37);
  sub_10000A7E8(v24, &qword_10097F260);
  sub_10000A7E8(v41, &qword_10096DF68);
  sub_10000A7E8(v40, &qword_10096D8B8);
  sub_10000A7E8(v39, &qword_100970BC0);
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v23, v45);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v48, v47);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_10037EF80()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10037F0F8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10037F270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[9] = a7;
  v8[10] = a8;
  v8[7] = a5;
  v8[8] = a6;
  v8[5] = a3;
  v8[6] = a4;
  v8[3] = a1;
  v8[4] = a2;
  sub_10000A844(&qword_100970BC8);
  v8[11] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for URL();
  v8[12] = v9;
  v8[13] = *(void *)(v9 - 8);
  v8[14] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v8[15] = swift_task_alloc();
  return _swift_task_switch(sub_10037F39C, 0, 0);
}

uint64_t sub_10037F39C()
{
  uint64_t v1 = 131074;
  uint64_t v2 = v0[4];
  v0[2] = v2;
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = v0[13];
  if (v3)
  {
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    uint64_t v5 = v4 + 16;
    uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 64));
    uint64_t v23 = *(void *)(v5 + 56);
    uint64_t v8 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 40);
    uint64_t v26 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
    uint64_t v27 = v6;
    uint64_t v24 = (void (**)(uint64_t, uint64_t))(v5 - 8);
    uint64_t v25 = (void (**)(uint64_t, void, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v9 = v0[15];
      uint64_t v10 = v0[12];
      v27(v9, v7, v10);
      uint64_t v11 = *v8;
      (*v8)(v9, 0, 1, v10);
      if ((*v26)(v9, 1, v10) == 1)
      {
        uint64_t v1 = 131074;
        goto LABEL_11;
      }
      uint64_t v12 = v5;
      uint64_t v13 = v0[14];
      uint64_t v14 = v0[12];
      (*v25)(v13, v0[15], v14);
      URL._bridgeToObjectiveC()(v15);
      uint64_t v17 = v16;
      unsigned __int8 v18 = [v16 isiWorkDocument];

      (*v24)(v13, v14);
      if (v18) {
        break;
      }
      v7 += v23;
      --v3;
      uint64_t v5 = v12;
      if (!v3)
      {
        uint64_t v1 = 131074;
        goto LABEL_8;
      }
    }
    uint64_t v1 = 8;
  }
  else
  {
    uint64_t v11 = *(void (**)(void, uint64_t, uint64_t, void))(v4 + 56);
    swift_bridgeObjectRetain();
LABEL_8:
    v11(v0[15], 1, 1, v0[12]);
  }
LABEL_11:
  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)swift_task_alloc();
  v0[16] = v19;
  uint64_t v20 = sub_10000A844((uint64_t *)&unk_10096C8B0);
  uint64_t v21 = sub_1002AE308(&qword_100970C10, (uint64_t *)&unk_10096C8B0);
  *uint64_t v19 = v0;
  v19[1] = sub_10037F628;
  return Sequence<>.coordinateRead(withSaveToTempDir:options:)(0, v1, v20, v21);
}

uint64_t sub_10037F628(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10037F9E0;
  }
  else
  {
    *(void *)(v4 + 144) = a1;
    uint64_t v5 = sub_10037F750;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10037F750()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = sub_10000A844(&qword_100970D40);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[19] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10037F840;
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[11];
  uint64_t v7 = v0[8];
  uint64_t v8 = (uint64_t *)v0[9];
  uint64_t v9 = v0[6];
  uint64_t v10 = v0[7];
  uint64_t v11 = v0[3];
  return sub_10037D638(v11, v9, v10, v7, v8, v5, v4, v6);
}

uint64_t sub_10037F840()
{
  uint64_t v2 = *(void *)(*v1 + 88);
  uint64_t v3 = *v1;
  *(void *)(v3 + 160) = v0;
  swift_task_dealloc();
  sub_10000A7E8(v2, &qword_100970BC8);
  swift_bridgeObjectRelease();
  if (v0)
  {
    return _swift_task_switch(sub_10037FA60, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
}

uint64_t sub_10037F9E0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10037FA60()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10037FAE0(char a1)
{
  *(void *)(v2 + 96) = v1;
  *(unsigned char *)(v2 + 104) = a1;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v3 = static AirDropActor.shared;
  return _swift_task_switch(sub_10037FB80, v3, 0);
}

void sub_10037FB80()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 96)
                + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_sendConnections);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v19 = v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for SDAirDropSendConnection(0);
    sub_100394340(&qword_100970DA0, (void (*)(uint64_t))type metadata accessor for SDAirDropSendConnection);
    Set.Iterator.init(_cocoa:)();
    uint64_t v2 = *(void *)(v0 + 16);
    uint64_t v20 = *(void *)(v0 + 24);
    uint64_t v3 = *(void *)(v0 + 32);
    uint64_t v4 = *(void *)(v0 + 40);
    unint64_t v5 = *(void *)(v0 + 48);
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v20 = v2 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(v2 + 56);
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v2 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
      uint64_t v12 = v4;
      goto LABEL_27;
    }
    int64_t v15 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      return;
    }
    if (v15 >= v9) {
      goto LABEL_30;
    }
    unint64_t v16 = *(void *)(v20 + 8 * v15);
    uint64_t v12 = v4 + 1;
    if (!v16)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        goto LABEL_30;
      }
      unint64_t v16 = *(void *)(v20 + 8 * v12);
      if (!v16)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v9) {
          goto LABEL_30;
        }
        unint64_t v16 = *(void *)(v20 + 8 * v12);
        if (!v16)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v9) {
            goto LABEL_30;
          }
          unint64_t v16 = *(void *)(v20 + 8 * v12);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v10 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_27:
    id v14 = *(id *)(*(void *)(v2 + 48) + 8 * v11);
    if (!v14) {
      goto LABEL_30;
    }
    while (1)
    {
      sub_1002EFAF8(*(unsigned __int8 *)(v0 + 104));

      uint64_t v4 = v12;
      unint64_t v5 = v10;
      if ((v2 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      uint64_t v13 = __CocoaSet.Iterator.next()();
      if (v13)
      {
        *(void *)(v0 + 88) = v13;
        type metadata accessor for SDAirDropSendConnection(0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v14 = *(id *)(v0 + 80);
        swift_unknownObjectRelease();
        uint64_t v12 = v4;
        uint64_t v10 = v5;
        if (v14) {
          continue;
        }
      }
      goto LABEL_30;
    }
  }
  uint64_t v17 = v4 + 5;
  while (v9 != v17)
  {
    unint64_t v16 = *(void *)(v20 + 8 * v17++);
    if (v16)
    {
      uint64_t v12 = v17 - 1;
      goto LABEL_26;
    }
  }
LABEL_30:
  sub_10024D330();
  *uint64_t v19 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  unsigned __int8 v18 = *(void (**)(void))(v0 + 8);
  v18();
}

uint64_t sub_10037FEA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v33 = a4;
  long long v34 = a5;
  uint64_t v32 = a1;
  uint64_t v35 = a6;
  uint64_t v31 = sub_10000A844(&qword_100970D40);
  uint64_t v7 = *(void *)(v31 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v31);
  uint64_t v36 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SFAirDropSend.Transfer();
  uint64_t v27 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v28 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SFAirDrop.ButtonConfiguration();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  int64_t v15 = (uint64_t *)((char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = 0x2D6C65636E6143;
  unint64_t v38 = 0xE700000000000000;
  v16._countAndFlagsBits = v30;
  v16._object = a3;
  String.append(_:)(v16);
  unint64_t v29 = v38;
  uint64_t v30 = v37;
  *int64_t v15 = 0x662E657261757173;
  v15[1] = 0xEB000000006C6C69;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for SFAirDrop.ButtonConfiguration.symbol(_:), v12);
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unsigned __int8 v18 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v28, v32, v9);
  uint64_t v19 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v36, v33, v31);
  unint64_t v20 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v21 = (v11 + *(unsigned __int8 *)(v7 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v22 + v20, v18, v27);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v22 + v21, v36, v19);
  uint64_t v23 = v34;
  *(void *)(v22 + ((v8 + v21 + 7) & 0xFFFFFFFFFFFFFFF8)) = v34;
  id v24 = v23;
  return SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)();
}

uint64_t sub_100380210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v5 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v35 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SFAirDropSend.Transfer();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  int64_t v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v17 = (void *)Strong;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, Strong + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log, v12);

    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
    unsigned __int8 v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    int v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v21 = swift_slowAlloc();
      int v33 = v20;
      uint64_t v22 = (uint8_t *)v21;
      uint64_t v34 = swift_slowAlloc();
      uint64_t v39 = v34;
      uint64_t v31 = v22;
      os_log_t v32 = v18;
      *(_DWORD *)uint64_t v22 = 136315138;
      v30[1] = v22 + 4;
      SFAirDropSend.Transfer.id.getter();
      sub_100394340(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
      uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v24 = v5;
      unint64_t v26 = v25;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v24);
      uint64_t v38 = sub_100254634(v23, v26, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      unsigned __int8 v18 = v32;
      _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v33, "Transfer %s was cancelled.", v31, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  uint64_t v27 = type metadata accessor for SFAirDropSend.Failure();
  sub_100394340(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v27 - 8) + 104))(v28, enum case for SFAirDropSend.Failure.cancelled(_:), v27);
  sub_10000A844(&qword_100970D40);
  SFProgressTask.cancel(_:)();
  swift_errorRelease();
  return sub_1002EFAF8(1);
}

uint64_t sub_1003806D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[152] = v5;
  v6[151] = a5;
  v6[150] = a4;
  v6[149] = a3;
  v6[148] = a2;
  v6[147] = a1;
  uint64_t v7 = type metadata accessor for SFAirDropSend.Failure();
  v6[153] = v7;
  v6[154] = *(void *)(v7 - 8);
  v6[155] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SFAirDrop.ContactRequest();
  v6[156] = v8;
  v6[157] = *(void *)(v8 - 8);
  v6[158] = swift_task_alloc();
  v6[159] = swift_task_alloc();
  v6[160] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for SFAirDropSend.Transfer.State();
  v6[161] = v9;
  v6[162] = *(void *)(v9 - 8);
  v6[163] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SFAirDropSend.Transfer();
  v6[164] = v10;
  v6[165] = *(void *)(v10 - 8);
  v6[166] = swift_task_alloc();
  sub_10000A844(&qword_100970C58);
  v6[167] = swift_task_alloc();
  uint64_t v11 = *(void *)(_s14descr1008C9AB9V10AskRequestVMa() - 8);
  v6[168] = v11;
  v6[169] = *(void *)(v11 + 64);
  v6[170] = swift_task_alloc();
  v6[171] = swift_task_alloc();
  uint64_t v12 = sub_10000A844(&qword_100970DC0);
  v6[172] = v12;
  v6[173] = *(void *)(v12 - 8);
  v6[174] = swift_task_alloc();
  v6[175] = _s12HelloRequestVMa();
  v6[176] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for SFAirDropSend.Request();
  v6[177] = v13;
  v6[178] = *(void *)(v13 - 8);
  v6[179] = swift_task_alloc();
  v6[180] = swift_task_alloc();
  uint64_t v14 = type metadata accessor for SFAirDrop.TransferType();
  v6[181] = v14;
  v6[182] = *(void *)(v14 - 8);
  v6[183] = swift_task_alloc();
  sub_10000A844(&qword_10096D8B8);
  v6[184] = swift_task_alloc();
  uint64_t v15 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v6[185] = v15;
  v6[186] = *(void *)(v15 - 8);
  v6[187] = swift_task_alloc();
  v6[188] = swift_task_alloc();
  uint64_t v16 = type metadata accessor for SFAirDrop.ContactInfo.Handle();
  v6[189] = v16;
  v6[190] = *(void *)(v16 - 8);
  v6[191] = swift_task_alloc();
  uint64_t v17 = type metadata accessor for SFAirDrop.ContactInfo();
  v6[192] = v17;
  v6[193] = *(void *)(v17 - 8);
  v6[194] = swift_task_alloc();
  sub_10000A844(&qword_100970BA8);
  v6[195] = swift_task_alloc();
  v6[196] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v18 = static AirDropActor.shared;
  v6[197] = static AirDropActor.shared;
  return _swift_task_switch(sub_100380C9C, v18, 0);
}

uint64_t sub_100380C9C()
{
  uint64_t v52 = v0;
  uint64_t v1 = v0[196];
  uint64_t v2 = v0[195];
  uint64_t v3 = v0[193];
  uint64_t v4 = v0[192];
  sub_100373E6C(v1);
  sub_10024A330(v1, v2, &qword_100970BA8);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v2, 1, v4);
  uint64_t v6 = v0[195];
  if (v5 == 1)
  {
    uint64_t v7 = (void *)v0[191];
    uint64_t v8 = v0[190];
    uint64_t v9 = v0[189];
    *uint64_t v7 = 0xD000000000000012;
    v7[1] = 0x80000001007BAFC0;
    (*(void (**)(void *, void, uint64_t))(v8 + 104))(v7, enum case for SFAirDrop.ContactInfo.Handle.email(_:), v9);
    SFAirDrop.ContactInfo.init(givenName:fullName:handle:vcard:)();
    sub_10000A7E8(v6, &qword_100970BA8);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[193] + 32))(v0[194], v0[195], v0[192]);
  }
  uint64_t v10 = v0[186];
  uint64_t v11 = v0[185];
  uint64_t v12 = v0[184];
  swift_retain();
  CurrentValueSubject.value.getter();
  swift_release();
  sub_1002E5BCC(v0[131], v12);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v11) == 1)
  {
    uint64_t v13 = v0[196];
    uint64_t v14 = v0[194];
    uint64_t v15 = v0[193];
    uint64_t v16 = v0[192];
    uint64_t v17 = v0[154];
    uint64_t v18 = v0[153];
    sub_10000A7E8(v0[184], &qword_10096D8B8);
    sub_100394340(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
    swift_allocError();
    uint64_t v20 = v19;
    UUID.init()();
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 104))(v20, enum case for SFAirDropSend.Failure.missingEndpoint(_:), v18);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    sub_10000A7E8(v13, &qword_100970BA8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
  else
  {
    uint64_t v23 = (void *)v0[152];
    sub_1003940A4(v0[184], v0[188], type metadata accessor for SDAirDropDiscoveredEndpoint);
    v0[198] = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log;
    id v24 = v23;
    unint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = v0[183];
      uint64_t v28 = v0[182];
      uint64_t v29 = v0[181];
      uint64_t v50 = (void *)v0[152];
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      v51[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136315138;
      SFAirDropSend.Request.type.getter();
      sub_100394340((unint64_t *)&unk_10097F240, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType);
      uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v33 = v32;
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
      v0[146] = sub_100254634(v31, v33, (uint64_t *)v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Send StateMachine ASK START - Async {type: %s}", v30, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v34 = (void *)v0[152];
    }
    uint64_t v35 = v0[187];
    uint64_t v36 = v0[180];
    uint64_t v37 = v0[178];
    uint64_t v38 = v0[177];
    uint64_t v39 = v0[152];
    sub_100394298(v0[188], v35, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v40 = *(void **)(v39 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_deviceStatus);
    v0[199] = v40;
    uint64_t v41 = *(void *)(v39 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_pseudonymService);
    unsigned int v42 = *(void **)(v39 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_queue);
    uint64_t v43 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest;
    v0[200] = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_sendRequest;
    uint64_t v44 = v39 + v43;
    uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16);
    v0[201] = v45;
    v0[202] = (v37 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v45(v36, v44, v38);
    objc_allocWithZone((Class)type metadata accessor for SDAirDropSendConnection(0));
    id v46 = v40;
    swift_retain();
    id v47 = v42;
    id v48 = sub_1002F9268(v35, v46, v41, v47, v36);
    v0[203] = v48;

    swift_release();
    swift_beginAccess();
    sub_1005974A4(v51, v48);
    swift_endAccess();

    uint64_t v49 = static AirDropActor.shared;
    v0[204] = static AirDropActor.shared;
    return _swift_task_switch(sub_100381408, v49, 0);
  }
}

uint64_t sub_100381408()
{
  if ((sub_1003171FC() & 1) != 0
    && (type metadata accessor for SFAirDropUserDefaults(),
        uint64_t v1 = (void *)static SFAirDropUserDefaults.shared.getter(),
        char v2 = SFAirDropUserDefaults.helloFeatureFlagsEnabled.getter(),
        v1,
        (v2 & 1) != 0))
  {
    uint64_t v3 = *(void *)(v0 + 1464);
    uint64_t v4 = *(void *)(v0 + 1456);
    uint64_t v5 = *(void *)(v0 + 1448);
    uint64_t v6 = *(void *)(v0 + 1408);
    uint64_t v7 = *(void *)(v0 + 1400);
    uint64_t v8 = *(void *)(v0 + 1392);
    SFAirDropSend.Request.type.getter();
    char v9 = SFAirDrop.TransferType.isPeerPayment.getter();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    SFAirDropSend.Request.id.getter();
    uint64_t v10 = *(int *)(v7 + 24);
    *(_DWORD *)(v6 + *(int *)(v7 + 20)) = 3;
    *(unsigned char *)(v6 + v10) = v9 & 1;
    sub_1002E7040(v6, v8);
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 1640) = v11;
    void *v11 = v0;
    v11[1] = sub_100381654;
    uint64_t v12 = *(void *)(v0 + 1376);
    return SFProgressTask.finalValue.getter(v0 + 1896, v12);
  }
  else
  {
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Receiver does not support HELLO, skipping", v15, 2u);
      swift_slowDealloc();
    }

    *(_DWORD *)(v0 + 1648) = 0;
    *(unsigned char *)(v0 + 1652) = 3;
    uint64_t v16 = *(void *)(v0 + 1576);
    return _swift_task_switch(sub_1003818E8, v16, 0);
  }
}

uint64_t sub_100381654()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 1632);
  if (v0)
  {
    swift_errorRelease();
    uint64_t v4 = sub_100381840;
  }
  else
  {
    uint64_t v4 = sub_10038178C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10038178C()
{
  int v1 = *(_DWORD *)(v0 + 1896);
  char v2 = *(unsigned char *)(v0 + 1900);
  uint64_t v3 = *(void *)(v0 + 1408);
  (*(void (**)(void, void))(*(void *)(v0 + 1384) + 8))(*(void *)(v0 + 1392), *(void *)(v0 + 1376));
  sub_1003956E4(v3, (uint64_t (*)(void))_s12HelloRequestVMa);
  *(unsigned char *)(v0 + 1652) = v2;
  *(_DWORD *)(v0 + 1648) = v1;
  uint64_t v4 = *(void *)(v0 + 1576);
  return _swift_task_switch(sub_1003818E8, v4, 0);
}

uint64_t sub_100381840()
{
  uint64_t v1 = *(void *)(v0 + 1408);
  (*(void (**)(void, void))(*(void *)(v0 + 1384) + 8))(*(void *)(v0 + 1392), *(void *)(v0 + 1376));
  sub_1003956E4(v1, (uint64_t (*)(void))_s12HelloRequestVMa);
  *(unsigned char *)(v0 + 1652) = 3;
  *(_DWORD *)(v0 + 1648) = 0;
  uint64_t v2 = *(void *)(v0 + 1576);
  return _swift_task_switch(sub_1003818E8, v2, 0);
}

uint64_t sub_1003818E8()
{
  uint64_t v1 = *(void **)(v0 + 1592);
  uint64_t v2 = *(void *)(v0 + 1216);
  (*(void (**)(void, uint64_t, void))(v0 + 1608))(*(void *)(v0 + 1432), v2 + *(void *)(v0 + 1600), *(void *)(v0 + 1416));
  unint64_t v3 = sub_10031AE28((uint64_t)v1, *(void **)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_nearbyAgent));
  uint64_t v5 = v4;
  id v6 = v1;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 1656) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1003819F4;
  uint64_t v8 = *(void *)(v0 + 1592);
  uint64_t v9 = *(void *)(v0 + 1432);
  uint64_t v10 = *(void *)(v0 + 1368);
  return sub_1005CDB90(v10, v9, v3, v5, v8, 0, 0, 0);
}

uint64_t sub_1003819F4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1664) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 1576);
  if (v0) {
    uint64_t v4 = sub_100382DA4;
  }
  else {
    uint64_t v4 = sub_100381B20;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100381B20()
{
  uint64_t v1 = (void *)v0[203];
  uint64_t v2 = v0[170];
  uint64_t v3 = v0[168];
  sub_100394298(v0[171], v2, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  v0[209] = v5;
  *(void *)(v5 + 16) = v1;
  sub_1003940A4(v2, v5 + v4, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  id v6 = v1;
  swift_retain();
  swift_asyncLet_begin();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Send StateMachine SHARE CONTACT PERMISSION START", v9, 2u);
    swift_slowDealloc();
  }
  uint64_t v10 = v0[194];
  uint64_t v11 = v0[193];
  uint64_t v12 = v0[192];
  uint64_t v13 = v0[167];
  uint64_t v14 = v0[165];
  uint64_t v25 = v0[166];
  uint64_t v26 = v0[164];
  uint64_t v15 = v0[163];
  uint64_t v16 = v0[162];
  uint64_t v24 = v0[161];

  sub_10038FA60(v10, 0, v13);
  uint64_t v17 = v15 + *(int *)(sub_10000A844(&qword_100970C60) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v15, v10, v12);
  uint64_t v18 = sub_10000A844((uint64_t *)&unk_1009723F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v17, v13, v18);
  uint64_t v19 = enum case for SFAirDropSend.Transfer.State.waitingForShareContactPermissionResponse(_:);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 104);
  v0[210] = v20;
  v0[211] = (v16 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v20(v15, v19, v24);
  sub_100321A40(v15, v25);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v0[212] = v21;
  v0[213] = (v16 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v21(v15, v24);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v0[214] = v22;
  v0[215] = (v14 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v22(v25, v26);
  return _swift_task_switch(sub_100381E28, 0, 0);
}

uint64_t sub_100381E28()
{
  uint64_t v1 = v0[167];
  uint64_t v2 = swift_task_alloc();
  v0[216] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = swift_task_alloc();
  v0[217] = v3;
  *(void *)(v3 + 16) = v1;
  unint64_t v4 = (void *)swift_task_alloc();
  v0[218] = v4;
  *unint64_t v4 = v0;
  v4[1] = sub_100381F30;
  uint64_t v5 = v0[159];
  uint64_t v6 = v0[156];
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v5, &unk_100970DD8, v2, sub_100396EDC, v3, 0, 0, v6);
}

uint64_t sub_100381F30()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1752) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100382064;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 1576);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = sub_100382374;
    uint64_t v4 = v5;
  }
  return _swift_task_switch(v3, v4, 0);
}

uint64_t sub_100382064()
{
  uint64_t v1 = *(void *)(v0 + 1576);
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1003820DC, v1, 0);
}

uint64_t sub_1003820DC()
{
  v0[137] = v0[219];
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    uint64_t v1 = (*(uint64_t (**)(void, void))(v0[154] + 88))(v0[155], v0[153]);
    if (v1 == enum case for SFAirDropSend.Failure.cancelled(_:))
    {
      uint64_t v2 = v1;
      swift_errorRelease();
      uint64_t v3 = Logger.logObject.getter();
      os_log_type_t v4 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v3, v4))
      {
        uint64_t v5 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v5 = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, v4, "Send StateMachine SHARE CONTACT PERMISSION END - Cancelling exchange", v5, 2u);
        swift_slowDealloc();
      }
      uint64_t v6 = v0 + 82;
      uint64_t v7 = v0[167];
      uint64_t v8 = v0[154];
      uint64_t v9 = v0[153];

      sub_100394340(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
      v0[236] = swift_allocError();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 104))(v10, v2, v9);
      swift_willThrow();
      sub_10000A7E8(v7, &qword_100970C58);
      swift_errorRelease();
      uint64_t v11 = sub_100382F98;
    }
    else
    {
      uint64_t v6 = v0 + 132;
      uint64_t v12 = v0[155];
      uint64_t v13 = v0[154];
      uint64_t v14 = v0[153];
      sub_10000A7E8(v0[167], &qword_100970C58);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
      swift_errorRelease();
      uint64_t v11 = sub_1003831D8;
    }
  }
  else
  {
    uint64_t v6 = v0 + 126;
    sub_10000A7E8(v0[167], &qword_100970C58);
    swift_errorRelease();
    uint64_t v11 = sub_100383418;
  }
  return _swift_asyncLet_finish(v0 + 2, v0 + 105, v11, v6);
}

uint64_t sub_100382374()
{
  uint64_t v34 = v0;
  uint64_t v1 = v0[160];
  uint64_t v2 = v0[159];
  uint64_t v3 = v0[158];
  uint64_t v4 = v0[157];
  uint64_t v5 = v0[156];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v0[220] = v6;
  v0[221] = (v4 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v6(v1, v2, v5);
  unint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v32(v3, v1, v5);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = v0[158];
    uint64_t v10 = v0[157];
    uint64_t v11 = v0[156];
    uint64_t v12 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 141558275;
    v0[144] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 12) = 2081;
    sub_100394340(&qword_100970C80, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[145] = sub_100254634(v13, v14, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v15(v9, v11);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Send StateMachine SHARE CONTACT PERMISSION END {contactRequest: %{private,mask.hash}s}", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v16 = v0[158];
    uint64_t v17 = v0[157];
    uint64_t v18 = v0[156];

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v15(v16, v18);
  }
  v0[222] = v15;
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Send StateMachine EXCHANGING START", v21, 2u);
    swift_slowDealloc();
  }
  uint64_t v31 = (void (*)(uint64_t, uint64_t))v0[214];
  uint64_t v22 = (void (*)(uint64_t, void, uint64_t))v0[210];
  uint64_t v23 = v0[166];
  uint64_t v29 = v0[164];
  uint64_t v30 = (void (*)(uint64_t, uint64_t))v0[212];
  uint64_t v24 = v0[163];
  uint64_t v25 = v0[161];
  uint64_t v26 = v0[160];
  uint64_t v27 = v0[156];

  v32(v24, v26, v27);
  v22(v24, enum case for SFAirDropSend.Transfer.State.exchanging(_:), v25);
  sub_100321A40(v24, v23);
  v30(v24, v25);
  v31(v23, v29);
  return _swift_asyncLet_get_throwing(v0 + 2, v0 + 105, sub_100382734, v0 + 138);
}

uint64_t sub_100382734()
{
  *(void *)(v1 + 1784) = v0;
  if (v0) {
    uint64_t v2 = sub_100383434;
  }
  else {
    uint64_t v2 = sub_100382768;
  }
  return _swift_task_switch(v2, *(void *)(v1 + 1576), 0);
}

uint64_t sub_100382768()
{
  uint64_t v26 = v0;
  long long v1 = *(_OWORD *)(v0 + 920);
  *(_OWORD *)(v0 + 760) = *(_OWORD *)(v0 + 904);
  *(_OWORD *)(v0 + 776) = v1;
  long long v2 = *(_OWORD *)(v0 + 856);
  *(_OWORD *)(v0 + 696) = *(_OWORD *)(v0 + 840);
  *(_OWORD *)(v0 + 712) = v2;
  long long v3 = *(_OWORD *)(v0 + 888);
  *(_OWORD *)(v0 + 728) = *(_OWORD *)(v0 + 872);
  *(_OWORD *)(v0 + 744) = v3;
  long long v4 = *(_OWORD *)(v0 + 896);
  *(_OWORD *)(v0 + 1824) = *(_OWORD *)(v0 + 880);
  *(_OWORD *)(v0 + 1840) = v4;
  long long v5 = *(_OWORD *)(v0 + 928);
  *(_OWORD *)(v0 + 1856) = *(_OWORD *)(v0 + 912);
  *(void *)(v0 + 792) = *(void *)(v0 + 936);
  *(void *)(v0 + 1792) = *(void *)(v0 + 840);
  *(void *)(v0 + 1800) = *(void *)(v0 + 848);
  *(void *)(v0 + 1808) = *(void *)(v0 + 856);
  *(void *)(v0 + 1816) = *(void *)(v0 + 864);
  *(unsigned char *)(v0 + 1901) = *(unsigned char *)(v0 + 872);
  *(_OWORD *)(v0 + 1872) = v5;
  sub_10039522C(v0 + 696);
  sub_10039522C(v0 + 696);
  sub_10039522C(v0 + 696);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = *(void *)(v0 + 1336);
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    sub_10039522C(v0 + 696);
    uint64_t v10 = sub_1005D058C();
    unint64_t v12 = v11;
    sub_1002FB0E0(v0 + 696);
    *(void *)(v0 + 1144) = sub_100254634(v10, v12, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1002FB0E0(v0 + 696);
    sub_1002FB0E0(v0 + 696);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Send StateMachine ASK END - Async {response: %s}", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v13 = v8;
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 1336);
    sub_1002FB0E0(v0 + 696);
    sub_1002FB0E0(v0 + 696);

    uint64_t v13 = v14;
  }
  sub_10000A7E8(v13, &qword_100970C58);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1760);
  uint64_t v16 = *(void *)(v0 + 1504);
  uint64_t v17 = *(void *)(v0 + 1280);
  uint64_t v18 = *(void *)(v0 + 1256);
  uint64_t v19 = *(void *)(v0 + 1248);
  uint64_t v20 = *(void *)(v0 + 1208);
  uint64_t v21 = *(void *)(v0 + 1200);
  uint64_t v22 = *(void *)(v0 + 1192);
  sub_100394298(*(void *)(v0 + 1368), *(void *)(v0 + 1184), (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_100394298(v16, v22, type metadata accessor for SDAirDropDiscoveredEndpoint);
  v15(v21, v17, v19);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v21, 0, 1, v19);
  uint64_t v23 = sub_10000A844(&qword_100970D40);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v20, 1, 1, v23);
  return _swift_asyncLet_finish(v0 + 16, v0 + 840, sub_100382ABC, v0 + 944);
}

uint64_t sub_100382ABC()
{
  return _swift_task_switch(sub_100382AD8, *(void *)(v0 + 1576), 0);
}

uint64_t sub_100382AD8()
{
  uint64_t v20 = *(void *)(v0 + 1872);
  uint64_t v21 = *(void *)(v0 + 1880);
  long long v18 = *(_OWORD *)(v0 + 1840);
  long long v19 = *(_OWORD *)(v0 + 1856);
  long long v17 = *(_OWORD *)(v0 + 1824);
  char v16 = *(unsigned char *)(v0 + 1901);
  uint64_t v14 = *(void *)(v0 + 1808);
  uint64_t v15 = *(void *)(v0 + 1816);
  uint64_t v12 = *(void *)(v0 + 1792);
  uint64_t v13 = *(void *)(v0 + 1800);
  int v11 = *(_DWORD *)(v0 + 1648);
  char v9 = *(unsigned char *)(v0 + 1652);
  uint64_t v10 = *(void *)(v0 + 1624);
  uint64_t v1 = *(void *)(v0 + 1568);
  uint64_t v2 = *(void *)(v0 + 1552);
  uint64_t v3 = *(void *)(v0 + 1544);
  uint64_t v4 = *(void *)(v0 + 1536);
  uint64_t v5 = *(void *)(v0 + 1504);
  uint64_t v6 = *(void *)(v0 + 1176);
  sub_1003956E4(*(void *)(v0 + 1368), (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_1003956E4(v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_10000A7E8(v1, &qword_100970BA8);
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(unsigned char *)(v6 + 4) = v9;
  *(_DWORD *)uint64_t v6 = v11;
  *(void *)(v6 + 8) = v10;
  *(void *)(v6 + 16) = v12;
  *(void *)(v6 + 24) = v13;
  *(void *)(v6 + 32) = v14;
  *(void *)(v6 + 40) = v15;
  *(unsigned char *)(v6 + 48) = v16;
  *(_OWORD *)(v6 + 56) = v17;
  *(_OWORD *)(v6 + 72) = v18;
  *(_OWORD *)(v6 + 88) = v19;
  *(void *)(v6 + 104) = v20;
  *(void *)(v6 + 112) = v21;
  *(void *)(v6 + 120) = 0;
  os_log_type_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100382DA4()
{
  uint64_t v1 = *(void *)(v0 + 1568);
  uint64_t v2 = *(void *)(v0 + 1552);
  uint64_t v3 = *(void *)(v0 + 1544);
  uint64_t v4 = *(void *)(v0 + 1536);
  uint64_t v5 = *(void *)(v0 + 1504);

  sub_1003956E4(v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_10000A7E8(v1, &qword_100970BA8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100382F98()
{
  return _swift_task_switch(sub_100382FB4, *(void *)(v0 + 1576), 0);
}

uint64_t sub_100382FB4()
{
  uint64_t v1 = *(void *)(v0 + 1568);
  uint64_t v2 = *(void *)(v0 + 1552);
  uint64_t v3 = *(void *)(v0 + 1544);
  uint64_t v4 = *(void *)(v0 + 1536);
  uint64_t v5 = *(void *)(v0 + 1504);
  uint64_t v6 = *(void *)(v0 + 1368);

  sub_1003956E4(v6, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_1003956E4(v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_10000A7E8(v1, &qword_100970BA8);
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1003831D8()
{
  return _swift_task_switch(sub_1003831F4, *(void *)(v0 + 1576), 0);
}

uint64_t sub_1003831F4()
{
  uint64_t v1 = *(void *)(v0 + 1568);
  uint64_t v2 = *(void *)(v0 + 1552);
  uint64_t v3 = *(void *)(v0 + 1544);
  uint64_t v4 = *(void *)(v0 + 1536);
  uint64_t v5 = *(void *)(v0 + 1504);
  uint64_t v6 = *(void *)(v0 + 1368);

  sub_1003956E4(v6, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_1003956E4(v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_10000A7E8(v1, &qword_100970BA8);
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100383418()
{
  return _swift_task_switch(sub_100396EE0, *(void *)(v0 + 1576), 0);
}

uint64_t sub_100383434()
{
  uint64_t v1 = *(void *)(v0 + 1336);
  (*(void (**)(void, void))(v0 + 1776))(*(void *)(v0 + 1280), *(void *)(v0 + 1248));
  sub_10000A7E8(v1, &qword_100970C58);
  return _swift_asyncLet_finish(v0 + 16, v0 + 840, sub_1003834E0, v0 + 800);
}

uint64_t sub_1003834E0()
{
  return _swift_task_switch(sub_1003834FC, *(void *)(v0 + 1576), 0);
}

uint64_t sub_1003834FC()
{
  uint64_t v1 = *(void *)(v0 + 1568);
  uint64_t v2 = *(void *)(v0 + 1552);
  uint64_t v3 = *(void *)(v0 + 1544);
  uint64_t v4 = *(void *)(v0 + 1536);
  uint64_t v5 = *(void *)(v0 + 1504);
  uint64_t v6 = *(void *)(v0 + 1368);

  sub_1003956E4(v6, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_1003956E4(v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_10000A7E8(v1, &qword_100970BA8);
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100383720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[43] = a7;
  v8[44] = v7;
  v8[41] = a5;
  v8[42] = a6;
  v8[39] = a3;
  v8[40] = a4;
  v8[37] = a1;
  v8[38] = a2;
  v8[45] = swift_getObjectType();
  v8[46] = sub_10000A844(&qword_100970DA8);
  v8[47] = swift_task_alloc();
  v8[48] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for SFAirDropSend.Transfer();
  v8[49] = v9;
  v8[50] = *(void *)(v9 - 8);
  v8[51] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SFAirDropSend.Request();
  v8[52] = v10;
  v8[53] = *(void *)(v10 - 8);
  v8[54] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v11 = static AirDropActor.shared;
  v8[55] = static AirDropActor.shared;
  return _swift_task_switch(sub_1003838D4, v11, 0);
}

uint64_t sub_1003838D4()
{
  uint64_t v1 = *(void *)(v0 + 408);
  uint64_t v25 = v1;
  uint64_t v2 = *(void *)(v0 + 392);
  uint64_t v3 = *(void *)(v0 + 400);
  uint64_t v28 = *(void *)(v0 + 384);
  uint64_t v5 = *(void *)(v0 + 360);
  uint64_t v4 = *(int **)(v0 + 368);
  uint64_t v6 = *(char **)(v0 + 352);
  uint64_t v26 = *(void **)(v0 + 344);
  uint64_t v27 = *(void *)(v0 + 432);
  uint64_t v7 = *(void *)(v0 + 336);
  (*(void (**)(void))(*(void *)(v0 + 424) + 16))();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v7, v2);
  uint64_t v8 = *(void **)&v6[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_endpointService];
  *(void *)(v0 + 216) = v5;
  *(void *)(v0 + 224) = &off_1008D7FA0;
  *(void *)(v0 + 192) = v6;
  type metadata accessor for SDAirDropAskFanoutHelper();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = sub_1002AF758(v0 + 192, v5);
  uint64_t v11 = *(void *)(v5 - 8);
  uint64_t v12 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16))(v12, v10, v5);
  uint64_t v13 = *v12;
  id v14 = v8;
  id v15 = v26;
  char v16 = v6;
  *(void *)(v0 + 448) = sub_10039306C(v27, v25, (uint64_t)v14, (uint64_t)v15, v13, v9);
  sub_10024D338(v0 + 192);
  swift_task_dealloc();
  uint64_t v17 = v4[12];
  *(_DWORD *)(v0 + 600) = v17;
  uint64_t v18 = v28 + v17;
  uint64_t v19 = v4[20];
  *(_DWORD *)(v0 + 604) = v19;
  uint64_t v20 = v28 + v19;
  uint64_t v21 = v4[32];
  *(_DWORD *)(v0 + 608) = v21;
  uint64_t v22 = v28 + v21;
  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 456) = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_100383B1C;
  return sub_1004B2B2C(v0 + 16, v18, v20, v22);
}

uint64_t sub_100383B1C()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v3[58] = v0;
  int v4 = *((_DWORD *)v3 + 4);
  *((unsigned char *)v3 + 476) = *((unsigned char *)v3 + 20);
  *((_DWORD *)v3 + 118) = v4;
  v3[60] = v2[3];
  v3[61] = v2[4];
  *((_OWORD *)v3 + 31) = *(_OWORD *)(v3 + 5);
  v3[64] = v2[7];
  *((unsigned char *)v3 + 624) = *((unsigned char *)v3 + 64);
  *(_OWORD *)(v3 + 65) = *(_OWORD *)(v3 + 9);
  *(_OWORD *)(v3 + 67) = *(_OWORD *)(v3 + 11);
  *(_OWORD *)(v3 + 69) = *(_OWORD *)(v3 + 13);
  *(_OWORD *)(v3 + 71) = *(_OWORD *)(v3 + 15);
  v3[73] = v2[17];
  v3[74] = v2[18];
  swift_task_dealloc();
  uint64_t v5 = v2[55];
  if (v0)
  {
    uint64_t v6 = sub_10038432C;
  }
  else
  {
    uint64_t v7 = (_DWORD *)v3[46];
    *((_DWORD *)v3 + 153) = v7[16];
    *((_DWORD *)v3 + 154) = v7[24];
    *((_DWORD *)v3 + 155) = v7[28];
    uint64_t v6 = sub_100383D2C;
  }
  return _swift_task_switch(v6, v5, 0);
}

void sub_100383D2C()
{
  uint64_t v1 = *(int *)(v0 + 620);
  uint64_t v2 = *(int *)(v0 + 612);
  uint64_t v3 = *(void **)(v0 + 592);
  uint64_t v4 = *(void *)(v0 + 584);
  char v5 = *(unsigned char *)(v0 + 624);
  uint64_t v7 = *(void *)(v0 + 504);
  uint64_t v6 = *(void *)(v0 + 512);
  long long v8 = *(_OWORD *)(v0 + 488);
  uint64_t v9 = *(void *)(v0 + 480);
  int v10 = *(_DWORD *)(v0 + 472);
  uint64_t v11 = *(void *)(v0 + 384);
  uint64_t v12 = v11 + *(int *)(v0 + 616);
  long long v13 = *(_OWORD *)(v0 + 520);
  long long v14 = *(_OWORD *)(v0 + 536);
  long long v15 = *(_OWORD *)(v0 + 552);
  long long v16 = *(_OWORD *)(v0 + 568);
  *(unsigned char *)(v11 + 4) = *(unsigned char *)(v0 + 476);
  *(_DWORD *)uint64_t v11 = v10;
  *(void *)(v11 + v2) = v9;
  *(_OWORD *)uint64_t v12 = v8;
  *(void *)(v12 + 16) = v7;
  *(void *)(v12 + 24) = v6;
  *(unsigned char *)(v12 + 32) = v5;
  *(_OWORD *)(v12 + 40) = v13;
  *(_OWORD *)(v12 + 56) = v14;
  *(_OWORD *)(v12 + 72) = v15;
  *(_OWORD *)(v12 + 88) = v16;
  *(void *)(v11 + v1) = v4;
  swift_beginAccess();
  id v17 = v3;
  uint64_t v18 = swift_bridgeObjectRetain();
  Swift::Int v19 = sub_100393E88(v18, v17);

  uint64_t v61 = v12;
  if ((v19 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    type metadata accessor for SDAirDropSendConnection(0);
    sub_100394340(&qword_100970DA0, (void (*)(uint64_t))type metadata accessor for SDAirDropSendConnection);
    Set.Iterator.init(_cocoa:)();
    Swift::Int v19 = *(void *)(v0 + 152);
    Swift::Int v68 = *(void *)(v0 + 160);
    uint64_t v20 = *(void *)(v0 + 168);
    uint64_t v21 = *(void *)(v0 + 176);
    unint64_t v22 = *(void *)(v0 + 184);
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v23 = -1 << *(unsigned char *)(v19 + 32);
    Swift::Int v68 = v19 + 56;
    uint64_t v24 = ~v23;
    uint64_t v25 = -v23;
    if (v25 < 64) {
      uint64_t v26 = ~(-1 << v25);
    }
    else {
      uint64_t v26 = -1;
    }
    unint64_t v22 = v26 & *(void *)(v19 + 56);
    uint64_t v20 = v24;
  }
  int64_t v67 = (unint64_t)(v20 + 64) >> 6;
  if (v19 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v22)
    {
      uint64_t v27 = (v22 - 1) & v22;
      unint64_t v28 = __clz(__rbit64(v22)) | (v21 << 6);
      uint64_t v29 = v21;
      goto LABEL_27;
    }
    int64_t v32 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      return;
    }
    if (v32 >= v67) {
      goto LABEL_30;
    }
    unint64_t v33 = *(void *)(v68 + 8 * v32);
    uint64_t v29 = v21 + 1;
    if (!v33)
    {
      uint64_t v29 = v21 + 2;
      if (v21 + 2 >= v67) {
        goto LABEL_30;
      }
      unint64_t v33 = *(void *)(v68 + 8 * v29);
      if (!v33)
      {
        uint64_t v29 = v21 + 3;
        if (v21 + 3 >= v67) {
          goto LABEL_30;
        }
        unint64_t v33 = *(void *)(v68 + 8 * v29);
        if (!v33)
        {
          uint64_t v29 = v21 + 4;
          if (v21 + 4 >= v67) {
            goto LABEL_30;
          }
          unint64_t v33 = *(void *)(v68 + 8 * v29);
          if (!v33) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v27 = (v33 - 1) & v33;
    unint64_t v28 = __clz(__rbit64(v33)) + (v29 << 6);
LABEL_27:
    id v31 = *(id *)(*(void *)(v19 + 48) + 8 * v28);
    if (!v31) {
      goto LABEL_30;
    }
    while (1)
    {
      sub_1002EFAF8(0);
      swift_beginAccess();
      uint64_t v35 = (void *)sub_1005A24F8(v31);
      swift_endAccess();

      uint64_t v21 = v29;
      unint64_t v22 = v27;
      if ((v19 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      uint64_t v30 = __CocoaSet.Iterator.next()();
      if (v30)
      {
        *(void *)(v0 + 288) = v30;
        type metadata accessor for SDAirDropSendConnection(0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v31 = *(id *)(v0 + 280);
        swift_unknownObjectRelease();
        uint64_t v29 = v21;
        uint64_t v27 = v22;
        if (v31) {
          continue;
        }
      }
      goto LABEL_30;
    }
  }
  uint64_t v34 = v21 + 5;
  while (v67 != v34)
  {
    unint64_t v33 = *(void *)(v68 + 8 * v34++);
    if (v33)
    {
      uint64_t v29 = v34 - 1;
      goto LABEL_26;
    }
  }
LABEL_30:
  uint64_t v63 = *(int *)(v0 + 620);
  uint64_t v55 = *(int *)(v0 + 616);
  uint64_t v58 = *(int *)(v0 + 612);
  uint64_t v36 = *(void **)(v0 + 592);
  uint64_t v37 = *(void *)(v0 + 376);
  uint64_t v38 = *(int **)(v0 + 384);
  uint64_t v39 = *(int **)(v0 + 368);
  uint64_t v66 = *(void *)(v0 + 320);
  uint64_t v65 = *(void *)(v0 + 312);
  uint64_t v54 = (uint64_t)v38 + *(int *)(v0 + 608);
  uint64_t v52 = (uint64_t)v38 + *(int *)(v0 + 604);
  uint64_t v50 = (uint64_t)v38 + *(int *)(v0 + 600);
  uint64_t v40 = *(void *)(v0 + 296);
  uint64_t v57 = *(void *)(v0 + 304);
  sub_10024D330();

  swift_release();
  uint64_t v41 = v37 + v39[12];
  uint64_t v42 = v37 + v39[20];
  uint64_t v43 = v37 + v39[32];
  int v69 = *v38;
  char v60 = *((unsigned char *)v38 + 4);
  sub_1003940A4(v50, v41, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  uint64_t v59 = *(void *)((char *)v38 + v58);
  sub_1003940A4(v52, v42, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v56 = *(void *)((char *)v38 + v55);
  long long v53 = *(_OWORD *)(v61 + 8);
  uint64_t v51 = *(void *)(v61 + 24);
  char v49 = *(unsigned char *)(v61 + 32);
  long long v47 = *(_OWORD *)(v61 + 56);
  long long v48 = *(_OWORD *)(v61 + 40);
  long long v46 = *(_OWORD *)(v61 + 72);
  uint64_t v45 = *(void *)(v61 + 88);
  uint64_t v62 = *(void *)(v61 + 96);
  uint64_t v64 = *(void *)((char *)v38 + v63);
  sub_10024D388(v54, v43, &qword_100970BC8);
  sub_1003940A4(v41, v57, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_1003940A4(v42, v65, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_10024D388(v43, v66, &qword_100970BC8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(unsigned char *)(v40 + 4) = v60;
  *(_DWORD *)uint64_t v40 = v69;
  *(void *)(v40 + 8) = v59;
  *(void *)(v40 + 16) = v56;
  *(_OWORD *)(v40 + 24) = v53;
  *(void *)(v40 + 40) = v51;
  *(unsigned char *)(v40 + 48) = v49;
  *(_OWORD *)(v40 + 56) = v48;
  *(_OWORD *)(v40 + 72) = v47;
  *(_OWORD *)(v40 + 88) = v46;
  *(void *)(v40 + 104) = v45;
  *(void *)(v40 + 112) = v62;
  *(void *)(v40 + 120) = v64;
  uint64_t v44 = *(void (**)(void))(v0 + 8);
  v44();
}

uint64_t sub_10038432C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003843C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  *(void *)(v8 + 232) = a7;
  *(void *)(v8 + 240) = v7;
  *(unsigned char *)(v8 + 540) = a6;
  *(void *)(v8 + 216) = a4;
  *(void *)(v8 + 224) = a5;
  *(void *)(v8 + 200) = a2;
  *(void *)(v8 + 208) = a3;
  *(void *)(v8 + 192) = a1;
  sub_10000A844(&qword_100970DF0);
  *(void *)(v8 + 248) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for SFAirDropSend.Failure();
  *(void *)(v8 + 256) = v9;
  *(void *)(v8 + 264) = *(void *)(v9 - 8);
  *(void *)(v8 + 272) = swift_task_alloc();
  *(void *)(v8 + 280) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for CancellationError();
  *(void *)(v8 + 288) = v10;
  *(void *)(v8 + 296) = *(void *)(v10 - 8);
  *(void *)(v8 + 304) = swift_task_alloc();
  *(void *)(v8 + 312) = sub_10000A844(&qword_100970DA8);
  *(void *)(v8 + 320) = swift_task_alloc();
  *(void *)(v8 + 328) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for SFAirDropSend.Request();
  *(void *)(v8 + 336) = v11;
  *(void *)(v8 + 344) = *(void *)(v11 - 8);
  *(void *)(v8 + 352) = swift_task_alloc();
  type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  *(void *)(v8 + 360) = swift_task_alloc();
  *(void *)(v8 + 368) = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v12 = static AirDropActor.shared;
  *(void *)(v8 + 376) = static AirDropActor.shared;
  return _swift_task_switch(sub_100384648, v12, 0);
}

uint64_t sub_100384648()
{
  sub_100394298(*(void *)(v0 + 224), *(void *)(v0 + 368), type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 368);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    id v35 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v5 = sub_100315DA0();
    *(void *)(v0 + 184) = sub_100254634(v5, v6, (uint64_t *)&v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1003956E4(v3, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Sending Ask to new endpoint: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 368);

    sub_1003956E4(v7, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  uint64_t v8 = *(void *)(v0 + 352);
  uint64_t v9 = *(void *)(v0 + 360);
  uint64_t v10 = *(void *)(v0 + 336);
  uint64_t v11 = *(void *)(v0 + 344);
  uint64_t v33 = *(void *)(v0 + 328);
  int64_t v32 = *(int **)(v0 + 312);
  uint64_t v13 = *(void *)(v0 + 232);
  uint64_t v12 = *(void *)(v0 + 240);
  sub_100394298(*(void *)(v0 + 224), v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v14 = *(void **)(v12 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_deviceStatus);
  uint64_t v15 = *(void *)(v12 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_pseudonymService);
  long long v16 = *(void **)(v12 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_queue);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v8, v13, v10);
  id v17 = objc_allocWithZone((Class)type metadata accessor for SDAirDropSendConnection(0));
  id v18 = v14;
  swift_retain();
  id v19 = v16;
  id v20 = sub_1002F9268(v9, v18, v15, v19, v8);
  *(void *)(v0 + 384) = v20;

  swift_release();
  swift_beginAccess();
  id v21 = v20;
  sub_1005974A4(&v35, v21);
  swift_endAccess();

  uint64_t v22 = v32[12];
  *(_DWORD *)(v0 + 528) = v22;
  uint64_t v23 = v33 + v22;
  uint64_t v24 = v32[20];
  *(_DWORD *)(v0 + 532) = v24;
  uint64_t v25 = v33 + v24;
  uint64_t v26 = v32[32];
  *(_DWORD *)(v0 + 536) = v26;
  uint64_t v27 = v33 + v26;
  unint64_t v28 = (void *)swift_task_alloc();
  *(void *)(v0 + 392) = v28;
  *unint64_t v28 = v0;
  v28[1] = sub_1003849EC;
  uint64_t v29 = *(void *)(v0 + 232);
  uint64_t v30 = *(void *)(v0 + 224);
  return sub_1003852BC(v0 + 16, v23, v25, v27, v30, v29, (uint64_t)v21, (uint64_t)v18);
}

uint64_t sub_1003849EC()
{
  os_log_type_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v3[50] = v0;
  int v4 = *((_DWORD *)v3 + 4);
  *((unsigned char *)v3 + 412) = *((unsigned char *)v3 + 20);
  *((_DWORD *)v3 + 102) = v4;
  v3[52] = v2[3];
  v3[53] = v2[4];
  *((_OWORD *)v3 + 27) = *(_OWORD *)(v3 + 5);
  v3[56] = v2[7];
  *((unsigned char *)v3 + 541) = *((unsigned char *)v3 + 64);
  *(_OWORD *)(v3 + 57) = *(_OWORD *)(v3 + 9);
  *(_OWORD *)(v3 + 59) = *(_OWORD *)(v3 + 11);
  *(_OWORD *)(v3 + 61) = *(_OWORD *)(v3 + 13);
  *(_OWORD *)(v3 + 63) = *(_OWORD *)(v3 + 15);
  v3[65] = v2[17];
  swift_task_dealloc();
  uint64_t v5 = v2[47];
  if (v0) {
    unint64_t v6 = sub_100384E58;
  }
  else {
    unint64_t v6 = sub_100384BC8;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100384BC8()
{
  uint64_t v26 = *(void *)(v0 + 520);
  long long v24 = *(_OWORD *)(v0 + 488);
  long long v25 = *(_OWORD *)(v0 + 504);
  long long v22 = *(_OWORD *)(v0 + 456);
  long long v23 = *(_OWORD *)(v0 + 472);
  char v21 = *(unsigned char *)(v0 + 541);
  uint64_t v20 = *(void *)(v0 + 448);
  long long v19 = *(_OWORD *)(v0 + 432);
  long long v17 = *(_OWORD *)(v0 + 416);
  int v16 = *(_DWORD *)(v0 + 408);
  char v15 = *(unsigned char *)(v0 + 412);
  uint64_t v18 = *(void *)(v0 + 384);
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 328);
  uint64_t v3 = *(int **)(v0 + 312);
  uint64_t v13 = *(void *)(v0 + 208);
  uint64_t v14 = *(void *)(v0 + 216);
  uint64_t v12 = v2 + *(int *)(v0 + 536);
  uint64_t v4 = v2 + *(int *)(v0 + 532);
  uint64_t v5 = v1 + v3[12];
  uint64_t v6 = v1 + v3[20];
  uint64_t v7 = v1 + v3[32];
  uint64_t v8 = *(void *)(v0 + 192);
  uint64_t v11 = *(void *)(v0 + 200);
  sub_1003940A4(v2 + *(int *)(v0 + 528), v5, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_1003940A4(v4, v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_10024D388(v12, v7, &qword_100970BC8);
  sub_1003940A4(v5, v11, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_1003940A4(v6, v13, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_10024D388(v7, v14, &qword_100970BC8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(unsigned char *)(v8 + 4) = v15;
  *(_DWORD *)uint64_t v8 = v16;
  *(_OWORD *)(v8 + 8) = v17;
  *(_OWORD *)(v8 + 24) = v19;
  *(void *)(v8 + 40) = v20;
  *(unsigned char *)(v8 + 48) = v21;
  *(_OWORD *)(v8 + 56) = v22;
  *(_OWORD *)(v8 + 72) = v23;
  *(_OWORD *)(v8 + 88) = v24;
  *(_OWORD *)(v8 + 104) = v25;
  *(void *)(v8 + 120) = v26;
  *(void *)(v8 + 128) = v18;
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100384E58()
{
  v0[21] = v0[50];
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  int v1 = swift_dynamicCast();
  uint64_t v2 = v0[50];
  if (v1)
  {
    uint64_t v3 = (void *)v0[48];
    uint64_t v4 = v0[45];
    uint64_t v5 = v0[37];
    uint64_t v6 = v0[35];
    uint64_t v34 = v0[36];
    uint64_t v35 = v0[38];
    uint64_t v8 = v0[32];
    uint64_t v7 = v0[33];
    uint64_t v9 = v0[28];
    swift_errorRelease();
    sub_100394298(v9, v4, type metadata accessor for SDAirDropDiscoveredEndpoint);
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v6, enum case for SFAirDropSend.Failure.cancelled(_:), v8);
    uint64_t v10 = _s15EndpointFailureVMa(0);
    sub_100394340(&qword_100970E00, (void (*)(uint64_t))_s15EndpointFailureVMa);
    swift_allocError();
    uint64_t v12 = v11;
    sub_1003940A4(v4, v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v12 + *(int *)(v10 + 20), v6, v8);
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v35, v34);
    swift_errorRelease();
  }
  else
  {
    uint64_t v13 = v0[33];
    swift_errorRelease();
    v0[22] = v2;
    swift_errorRetain();
    int v14 = swift_dynamicCast();
    char v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
    if (v14)
    {
      uint64_t v17 = v0[33];
      uint64_t v16 = v0[34];
      uint64_t v19 = v0[31];
      uint64_t v18 = v0[32];
      v15(v19, 0, 1, v18);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v16, v19, v18);
    }
    else
    {
      uint64_t v21 = v0[33];
      uint64_t v20 = v0[34];
      uint64_t v23 = v0[31];
      uint64_t v22 = v0[32];
      v15(v23, 1, 1, v22);
      swift_errorRetain();
      CodableError.init(_:)();
      (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v20, enum case for SFAirDropSend.Failure.unexpected(_:), v22);
      sub_10000A7E8(v23, &qword_100970DF0);
    }
    uint64_t v36 = (void *)v0[48];
    uint64_t v24 = v0[45];
    uint64_t v25 = v0[34];
    uint64_t v26 = v0[35];
    uint64_t v27 = v0[32];
    uint64_t v28 = v0[33];
    sub_100394298(v0[28], v24, type metadata accessor for SDAirDropDiscoveredEndpoint);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v26, v25, v27);
    uint64_t v29 = _s15EndpointFailureVMa(0);
    sub_100394340(&qword_100970E00, (void (*)(uint64_t))_s15EndpointFailureVMa);
    swift_allocError();
    uint64_t v31 = v30;
    sub_1003940A4(v24, v30, type metadata accessor for SDAirDropDiscoveredEndpoint);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v31 + *(int *)(v29 + 20), v26, v27);
    swift_willThrow();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v25, v27);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_1003852BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 200) = a8;
  *(void *)(v9 + 208) = v8;
  *(unsigned char *)(v9 + 661) = v20;
  *(void *)(v9 + 184) = a6;
  *(void *)(v9 + 192) = a7;
  *(void *)(v9 + 168) = a4;
  *(void *)(v9 + 176) = a5;
  *(void *)(v9 + 152) = a2;
  *(void *)(v9 + 160) = a3;
  *(void *)(v9 + 144) = a1;
  uint64_t v10 = type metadata accessor for SFSecurityScopedURL();
  *(void *)(v9 + 216) = v10;
  *(void *)(v9 + 224) = *(void *)(v10 - 8);
  *(void *)(v9 + 232) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for URL();
  *(void *)(v9 + 240) = v11;
  *(void *)(v9 + 248) = *(void *)(v11 - 8);
  *(void *)(v9 + 256) = swift_task_alloc();
  uint64_t v12 = type metadata accessor for SFAirDrop.TransferIdentifier();
  *(void *)(v9 + 264) = v12;
  *(void *)(v9 + 272) = *(void *)(v12 - 8);
  *(void *)(v9 + 280) = swift_task_alloc();
  sub_10000A844(&qword_100970BC8);
  *(void *)(v9 + 288) = swift_task_alloc();
  *(void *)(v9 + 296) = swift_task_alloc();
  uint64_t v13 = sub_10000A844(&qword_100970DE0);
  *(void *)(v9 + 304) = v13;
  *(void *)(v9 + 312) = *(void *)(v13 - 8);
  *(void *)(v9 + 320) = swift_task_alloc();
  _s14descr1008C9AB9V10AskRequestVMa();
  *(void *)(v9 + 328) = swift_task_alloc();
  uint64_t v14 = sub_10000A844(&qword_100970DC0);
  *(void *)(v9 + 336) = v14;
  *(void *)(v9 + 344) = *(void *)(v14 - 8);
  *(void *)(v9 + 352) = swift_task_alloc();
  *(void *)(v9 + 360) = _s12HelloRequestVMa();
  *(void *)(v9 + 368) = swift_task_alloc();
  uint64_t v15 = type metadata accessor for SFAirDrop.TransferType();
  *(void *)(v9 + 376) = v15;
  *(void *)(v9 + 384) = *(void *)(v15 - 8);
  *(void *)(v9 + 392) = swift_task_alloc();
  uint64_t v16 = type metadata accessor for SFAirDropSend.Request();
  *(void *)(v9 + 400) = v16;
  *(void *)(v9 + 408) = *(void *)(v16 - 8);
  *(void *)(v9 + 416) = swift_task_alloc();
  *(void *)(v9 + 424) = swift_task_alloc();
  *(void *)(v9 + 432) = swift_task_alloc();
  *(void *)(v9 + 440) = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v17 = static AirDropActor.shared;
  *(void *)(v9 + 448) = static AirDropActor.shared;
  return _swift_task_switch(sub_1003856C8, v17, 0);
}

uint64_t sub_1003856C8()
{
  uint64_t v1 = SFAirDropSend.Request.urls.getter();
  v0[57] = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = SFAirDropSend.Request.requestSource.getter();
    uint64_t v5 = v4;
    v0[58] = v4;
    uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100971120
                                                                                       + dword_100971120);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[59] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1003858CC;
    uint64_t v7 = v0[25];
    uint64_t v8 = v0[22];
    uint64_t v9 = v0[23];
    return v26(v9, v2, v3, v5, v8, v7);
  }
  else
  {
    v0[62] = 0;
    uint64_t v11 = v0[55];
    uint64_t v12 = v0[50];
    uint64_t v13 = v0[51];
    uint64_t v14 = v0[23];
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
    v0[63] = v15;
    v0[64] = (v13 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v15(v11, v14, v12);
    uint64_t v16 = SFAirDropSend.Request.urls.getter();
    v0[65] = v16;
    uint64_t v17 = v0[55];
    uint64_t v18 = v0[50];
    uint64_t v19 = v0[51];
    type metadata accessor for SDAirDropContentHandlerUtilities();
    char v20 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v0[66] = v20;
    v0[67] = (v19 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v20(v17, v18);
    uint64_t v21 = SFAirDropSend.Request.requestSource.getter();
    uint64_t v23 = v22;
    v0[68] = v22;
    uint64_t v24 = (void *)swift_task_alloc();
    v0[69] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_100385CA4;
    uint64_t v25 = v0[22];
    return sub_1003A0F94(v16, v21, v23, v25);
  }
}

uint64_t sub_1003858CC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 480) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 448);
    uint64_t v6 = sub_100385B74;
  }
  else
  {
    uint64_t v7 = *(void *)(v4 + 448);
    swift_bridgeObjectRelease();
    *(void *)(v4 + 488) = a1;
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_100385A1C;
    uint64_t v5 = v7;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100385A1C()
{
  uint64_t v1 = v0[61];
  v0[62] = v1;
  uint64_t v2 = v0[55];
  uint64_t v3 = v0[50];
  uint64_t v4 = v0[51];
  uint64_t v5 = v0[23];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[63] = v6;
  v0[64] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v5, v3);
  uint64_t v7 = v1;
  if (!v1) {
    uint64_t v7 = SFAirDropSend.Request.urls.getter();
  }
  v0[65] = v7;
  uint64_t v8 = v0[55];
  uint64_t v9 = v0[50];
  uint64_t v10 = v0[51];
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v0[66] = v11;
  v0[67] = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  swift_bridgeObjectRetain();
  v11(v8, v9);
  uint64_t v12 = SFAirDropSend.Request.requestSource.getter();
  uint64_t v14 = v13;
  v0[68] = v13;
  uint64_t v15 = (void *)swift_task_alloc();
  v0[69] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_100385CA4;
  uint64_t v16 = v0[22];
  return sub_1003A0F94(v7, v12, v14, v16);
}

uint64_t sub_100385B74()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100385CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  uint64_t v6 = (void *)*v4;
  v6[70] = a1;
  v6[71] = a2;
  unsigned char v6[72] = a3;
  v6[73] = v3;
  swift_task_dealloc();
  uint64_t v7 = v5[56];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v3) {
    uint64_t v8 = sub_1003870A8;
  }
  else {
    uint64_t v8 = sub_100385E1C;
  }
  return _swift_task_switch(v8, v7, 0);
}

uint64_t sub_100385E1C()
{
  uint64_t v1 = v0[70];
  uint64_t v2 = v0[50];
  uint64_t v3 = v0[23];
  if (v1)
  {
    unint64_t v4 = v0[72];
    uint64_t v5 = (void (*)(uint64_t, uint64_t, uint64_t))v0[63];
    uint64_t v6 = v0[54];
    sub_1003957B0(v1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_1003D4BCC(v4);
    swift_endAccess();
    swift_bridgeObjectRetain();
    v5(v6, v3, v2);
    uint64_t v7 = v0[70];
  }
  else
  {
    uint64_t v8 = (void (*)(uint64_t, uint64_t, uint64_t))v0[63];
    uint64_t v16 = v0[62];
    uint64_t v10 = v0[53];
    uint64_t v9 = v0[54];
    swift_beginAccess();
    sub_1003D4BCC((unint64_t)_swiftEmptyArrayStorage);
    swift_endAccess();
    v8(v9, v3, v2);
    v8(v10, v9, v2);
    if (v16) {
      uint64_t v7 = v0[62];
    }
    else {
      uint64_t v7 = SFAirDropSend.Request.urls.getter();
    }
    uint64_t v11 = (void (*)(uint64_t, uint64_t))v0[66];
    uint64_t v12 = v0[53];
    uint64_t v13 = v0[50];
    swift_bridgeObjectRetain();
    v11(v12, v13);
  }
  v0[74] = v7;
  ((void (*)(void, void))v0[66])(v0[54], v0[50]);
  uint64_t v14 = static AirDropActor.shared;
  v0[75] = static AirDropActor.shared;
  return _swift_task_switch(sub_100386014, v14, 0);
}

uint64_t sub_100386014()
{
  if ((sub_1003171FC() & 1) != 0
    && (type metadata accessor for SFAirDropUserDefaults(),
        uint64_t v1 = (void *)static SFAirDropUserDefaults.shared.getter(),
        char v2 = SFAirDropUserDefaults.helloFeatureFlagsEnabled.getter(),
        v1,
        (v2 & 1) != 0))
  {
    uint64_t v3 = *(void *)(v0 + 384);
    uint64_t v4 = *(void *)(v0 + 392);
    uint64_t v6 = *(void *)(v0 + 368);
    uint64_t v5 = *(void *)(v0 + 376);
    uint64_t v7 = *(void *)(v0 + 352);
    uint64_t v8 = *(void *)(v0 + 360);
    SFAirDropSend.Request.type.getter();
    char v9 = SFAirDrop.TransferType.isPeerPayment.getter();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
    SFAirDropSend.Request.id.getter();
    uint64_t v10 = *(int *)(v8 + 24);
    *(_DWORD *)(v6 + *(int *)(v8 + 20)) = 3;
    *(unsigned char *)(v6 + v10) = v9 & 1;
    sub_1002E7040(v6, v7);
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 608) = v11;
    void *v11 = v0;
    v11[1] = sub_100386250;
    uint64_t v12 = *(void *)(v0 + 336);
    return SFProgressTask.finalValue.getter(v0 + 656, v12);
  }
  else
  {
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Receiver does not support HELLO, skipping", v15, 2u);
      swift_slowDealloc();
    }

    *(_DWORD *)(v0 + 616) = 0;
    *(unsigned char *)(v0 + 620) = 3;
    uint64_t v16 = *(void *)(v0 + 448);
    return _swift_task_switch(sub_1003864DC, v16, 0);
  }
}

uint64_t sub_100386250()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 600);
  if (v0)
  {
    swift_errorRelease();
    uint64_t v4 = sub_100386438;
  }
  else
  {
    uint64_t v4 = sub_100386388;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100386388()
{
  int v1 = *(_DWORD *)(v0 + 656);
  char v2 = *(unsigned char *)(v0 + 660);
  uint64_t v3 = *(void *)(v0 + 368);
  (*(void (**)(void, void))(*(void *)(v0 + 344) + 8))(*(void *)(v0 + 352), *(void *)(v0 + 336));
  sub_1003956E4(v3, (uint64_t (*)(void))_s12HelloRequestVMa);
  *(unsigned char *)(v0 + 620) = v2;
  *(_DWORD *)(v0 + 616) = v1;
  uint64_t v4 = *(void *)(v0 + 448);
  return _swift_task_switch(sub_1003864DC, v4, 0);
}

uint64_t sub_100386438()
{
  uint64_t v1 = *(void *)(v0 + 368);
  (*(void (**)(void, void))(*(void *)(v0 + 344) + 8))(*(void *)(v0 + 352), *(void *)(v0 + 336));
  sub_1003956E4(v1, (uint64_t (*)(void))_s12HelloRequestVMa);
  *(unsigned char *)(v0 + 620) = 3;
  *(_DWORD *)(v0 + 616) = 0;
  uint64_t v2 = *(void *)(v0 + 448);
  return _swift_task_switch(sub_1003864DC, v2, 0);
}

uint64_t sub_1003864DC()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 620);
  uint64_t v2 = *(unsigned int *)(v0 + 616);
  uint64_t v4 = *(void *)(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 376);
  SFAirDropSend.Request.type.getter();
  char v6 = SFAirDrop.TransferType.isPeerPayment.getter();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if ((v6 & 1) != 0 && (((v2 | (v1 << 32)) & 0xFF00000000) != 0x300000000 ? (BOOL v7 = (v2 & 2) == 0) : (BOOL v7 = 0), v7))
  {
    sub_100395764(*(void *)(v0 + 560));
    swift_bridgeObjectRelease();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Hello response - peerPayment type is not supported by receiver device", v10, 2u);
      swift_slowDealloc();
    }

    uint64_t v11 = type metadata accessor for SFAirDropSend.Failure();
    sub_100394340(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v11 - 8) + 104))(v12, enum case for SFAirDropSend.Failure.unsupportedConnection(_:), v11);
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
  else
  {
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504);
    uint64_t v16 = *(void *)(v0 + 416);
    uint64_t v17 = *(void *)(v0 + 400);
    uint64_t v18 = *(void **)(v0 + 200);
    uint64_t v19 = *(void *)(v0 + 184);
    unint64_t v20 = sub_10031AE28((uint64_t)v18, *(void **)(*(void *)(v0 + 208)+ OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_nearbyAgent));
    uint64_t v22 = v21;
    v15(v16, v19, v17);
    swift_bridgeObjectRetain();
    id v23 = v18;
    uint64_t v24 = (void *)swift_task_alloc();
    *(void *)(v0 + 624) = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_100386894;
    uint64_t v25 = *(void *)(v0 + 568);
    uint64_t v26 = *(void *)(v0 + 560);
    uint64_t v27 = *(void *)(v0 + 496);
    uint64_t v28 = *(void *)(v0 + 416);
    uint64_t v29 = *(void *)(v0 + 328);
    uint64_t v30 = *(void *)(v0 + 200);
    return sub_1005CDB90(v29, v28, v20, v22, v30, v27, v26, v25);
  }
}

uint64_t sub_100386894()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 632) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 448);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1003871D0;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 448);
    uint64_t v4 = sub_1003869BC;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_1003869BC()
{
  uint64_t v1 = *(void *)(v0 + 592);
  uint64_t v2 = *(void *)(v0 + 296);
  sub_1002E93F4(*(void *)(v0 + 328), *(void *)(v0 + 320));
  uint64_t v3 = sub_10000A844(&qword_100970D40);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  v4(v2, 1, 1, v3);
  if (v1
    && ((*(unsigned int *)(v0 + 616) | ((unint64_t)*(unsigned __int8 *)(v0 + 620) << 32)) & 0xFF00000000) != 0x300000000
    && (*(_DWORD *)(v0 + 616) & 1) != 0
    && *(unsigned char *)(v0 + 661))
  {
    uint64_t v5 = *(void *)(v0 + 592);
    int64_t v6 = *(void *)(v5 + 16);
    uint64_t v7 = _swiftEmptyArrayStorage;
    if (v6)
    {
      uint64_t v27 = v3;
      uint64_t v8 = *(void *)(v0 + 248);
      uint64_t v9 = *(void *)(v0 + 224);
      uint64_t v30 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_10025539C(0, v6, 0);
      uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
      v9 += 16;
      uint64_t v11 = v5 + ((*(unsigned __int8 *)(v9 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 64));
      uint64_t v28 = *(void *)(v9 + 56);
      uint64_t v29 = v10;
      uint64_t v12 = (void (**)(uint64_t, uint64_t))(v9 - 8);
      uint64_t v7 = _swiftEmptyArrayStorage;
      do
      {
        uint64_t v13 = *(void *)(v0 + 232);
        uint64_t v14 = *(void *)(v0 + 216);
        v29(v13, v11, v14);
        SFSecurityScopedURL.url.getter();
        (*v12)(v13, v14);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10025539C(0, v7[2] + 1, 1);
          uint64_t v7 = v30;
        }
        unint64_t v16 = v7[2];
        unint64_t v15 = v7[3];
        if (v16 >= v15 >> 1)
        {
          sub_10025539C(v15 > 1, v16 + 1, 1);
          uint64_t v7 = v30;
        }
        uint64_t v17 = *(void *)(v0 + 256);
        uint64_t v18 = *(void *)(v0 + 240);
        _OWORD v7[2] = v16 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))((unint64_t)v7+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v16, v17, v18);
        uint64_t v30 = v7;
        v11 += v28;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
      uint64_t v3 = v27;
    }
    uint64_t v20 = *(void *)(v0 + 288);
    uint64_t v19 = *(void *)(v0 + 296);
    uint64_t v21 = *(void *)(v0 + 272);
    uint64_t v22 = *(void *)(v0 + 280);
    uint64_t v23 = *(void *)(v0 + 264);
    SFAirDropSend.Request.id.getter();
    sub_1002EB928((uint64_t)v7, v22, v20);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v23);
    sub_10000A7E8(v19, &qword_100970BC8);
    v4(v20, 0, 1, v3);
    sub_10024D388(v20, v19, &qword_100970BC8);
  }
  uint64_t v24 = (void *)swift_task_alloc();
  *(void *)(v0 + 640) = v24;
  *uint64_t v24 = v0;
  v24[1] = sub_100386D0C;
  uint64_t v25 = *(void *)(v0 + 304);
  return SFProgressTask.finalValue.getter(v0 + 16, v25);
}

uint64_t sub_100386D0C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 648) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 448);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1003872F8;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 448);
    uint64_t v4 = sub_100386E34;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_100386E34()
{
  int v24 = *(_DWORD *)(v0 + 616);
  char v23 = *(unsigned char *)(v0 + 620);
  uint64_t v25 = *(void *)(v0 + 592);
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 328);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v3 = *(void *)(v0 + 312);
  uint64_t v14 = *(void *)(v0 + 296);
  unint64_t v15 = *(void **)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v6 = *(void *)(v0 + 176);
  uint64_t v8 = *(void *)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 160);
  uint64_t v9 = *(void *)(v0 + 144);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v4);
  long long v22 = *(_OWORD *)(v0 + 16);
  uint64_t v10 = *(void *)(v0 + 32);
  uint64_t v21 = *(void *)(v0 + 40);
  char v20 = *(unsigned char *)(v0 + 48);
  long long v18 = *(_OWORD *)(v0 + 72);
  long long v19 = *(_OWORD *)(v0 + 56);
  long long v16 = *(_OWORD *)(v0 + 104);
  long long v17 = *(_OWORD *)(v0 + 88);
  sub_1003940A4(v2, v8, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_100394298(v6, v7, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_10024D388(v14, v5, &qword_100970BC8);
  id v11 = v15;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(unsigned char *)(v9 + 4) = v23;
  *(_DWORD *)uint64_t v9 = v24;
  *(void *)(v9 + 8) = v11;
  *(_OWORD *)(v9 + 16) = v22;
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = v21;
  *(unsigned char *)(v9 + 48) = v20;
  *(_OWORD *)(v9 + 56) = v19;
  *(_OWORD *)(v9 + 72) = v18;
  *(_OWORD *)(v9 + 88) = v17;
  *(_OWORD *)(v9 + 104) = v16;
  *(void *)(v9 + 120) = v25;
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1003870A8()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003871D0()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003872F8()
{
  uint64_t v1 = v0[40];
  uint64_t v2 = v0[41];
  uint64_t v3 = v0[38];
  uint64_t v4 = v0[39];
  uint64_t v5 = v0[37];
  swift_bridgeObjectRelease();
  sub_10000A7E8(v5, &qword_100970BC8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  sub_1003956E4(v2, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100387470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  sub_10000A844(&qword_10096DFA8);
  v5[12] = swift_task_alloc();
  v5[13] = _s14descr1008C9AB9V10AskRequestVMa();
  v5[14] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFNWInterfaceTypeCategory();
  v5[15] = v6;
  v5[16] = *(void *)(v6 - 8);
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  sub_10000A844(&qword_10097F260);
  v5[19] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SFAirDrop.Progress();
  v5[20] = v7;
  v5[21] = *(void *)(v7 - 8);
  v5[22] = swift_task_alloc();
  sub_10000A844(&qword_100970D30);
  v5[23] = swift_task_alloc();
  uint64_t v8 = sub_10000A844(&qword_100970D38);
  v5[24] = v8;
  v5[25] = *(void *)(v8 - 8);
  v5[26] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for SFNWInterfaceType();
  v5[27] = v9;
  v5[28] = *(void *)(v9 - 8);
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SFAirDropSend.Transfer.State();
  v5[32] = v10;
  v5[33] = *(void *)(v10 - 8);
  v5[34] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for SFAirDropSend.Transfer();
  v5[35] = v11;
  v5[36] = *(void *)(v11 - 8);
  v5[37] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for SFAirDrop.DeclineAction();
  v5[38] = v12;
  v5[39] = *(void *)(v12 - 8);
  v5[40] = swift_task_alloc();
  sub_10000A844(&qword_100970BC8);
  v5[41] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v5[42] = v13;
  v5[43] = *(void *)(v13 - 8);
  v5[44] = swift_task_alloc();
  uint64_t v14 = sub_10000A844(&qword_100970D40);
  v5[45] = v14;
  v5[46] = *(void *)(v14 - 8);
  v5[47] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v15 = static AirDropActor.shared;
  v5[48] = static AirDropActor.shared;
  return _swift_task_switch(sub_100387978, v15, 0);
}

uint64_t sub_100387978()
{
  uint64_t v73 = v0;
  uint64_t v1 = *(void *)(*(void *)(v0 + 88) + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_urls);
  *(void *)(v0 + 392) = v1;
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 56);
    swift_bridgeObjectRetain();
    if (sub_100394BE4(v2))
    {
      *(void *)(v0 + 400) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log;
      uint64_t v3 = Logger.logObject.getter();
      os_log_type_t v4 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v3, v4))
      {
        uint64_t v5 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v5 = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, v4, "Send StateMachine UPLOAD START", v5, 2u);
        swift_slowDealloc();
      }
      uint64_t v6 = *(void *)(v0 + 360);
      uint64_t v7 = *(void *)(v0 + 368);
      uint64_t v8 = *(void *)(v0 + 80);

      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
      if (v9(v8, 1, v6) == 1)
      {
        uint64_t v10 = *(void *)(v0 + 376);
        uint64_t v12 = *(void *)(v0 + 344);
        uint64_t v11 = *(void *)(v0 + 352);
        uint64_t v13 = *(void *)(v0 + 336);
        SFAirDropSend.Request.id.getter();
        sub_1002EB928(v1, v11, v10);
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
      }
      else
      {
        uint64_t v31 = *(void *)(v0 + 360);
        uint64_t v32 = *(void *)(v0 + 328);
        sub_10024A330(*(void *)(v0 + 80), v32, &qword_100970BC8);
        uint64_t v33 = v9(v32, 1, v31);
        if (v33 == 1)
        {
          __break(1u);
          return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v33, v34, v35, v36, v37);
        }
        (*(void (**)(void, void, void))(*(void *)(v0 + 368) + 32))(*(void *)(v0 + 376), *(void *)(v0 + 328), *(void *)(v0 + 360));
      }
      uint64_t v39 = *(void *)(v0 + 312);
      uint64_t v38 = *(void *)(v0 + 320);
      uint64_t v66 = *(void *)(v0 + 376);
      uint64_t v40 = *(void *)(v0 + 296);
      uint64_t v69 = *(void *)(v0 + 304);
      uint64_t v41 = *(void *)(v0 + 280);
      uint64_t v42 = *(void *)(v0 + 288);
      uint64_t v43 = *(uint64_t **)(v0 + 272);
      uint64_t v71 = *(void *)(v0 + 256);
      uint64_t v44 = *(char **)(v0 + 64);
      uint64_t v70 = *(void *)(v0 + 264);
      uint64_t v45 = *(void *)(v0 + 88)
          + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
      swift_beginAccess();
      uint64_t v68 = v41;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v40, v45, v41);
      sub_10037FEA4(v40, 0x726566736E617274, (void *)0xEC000000676E6972, v66, v44, v38);
      int64_t v67 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
      *(void *)(v0 + 408) = v67;
      *(void *)(v0 + 416) = (v42 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v67(v40, v41);
      uint64_t v46 = sub_10000A844((uint64_t *)&unk_10097C3A0);
      *(void *)(v0 + 424) = v46;
      long long v47 = (uint64_t *)((char *)v43 + *(int *)(v46 + 64));
      long long v48 = (char *)v43 + *(int *)(v46 + 80);
      *uint64_t v43 = sub_100313BE0();
      v43[1] = v49;
      SFProgressTask.initialValue.getter();
      *long long v47 = 0;
      v47[1] = 0;
      uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
      *(void *)(v0 + 432) = v50;
      *(void *)(v0 + 440) = (v39 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v50(v48, v38, v69);
      *(_DWORD *)(v0 + 496) = enum case for SFAirDropSend.Transfer.State.transferring(_:);
      uint64_t v51 = *(void (**)(uint64_t *))(v70 + 104);
      *(void *)(v0 + 448) = v51;
      *(void *)(v0 + 456) = (v70 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
      v51(v43);
      sub_100321A40((uint64_t)v43, v40);
      uint64_t v52 = *(void (**)(uint64_t *, uint64_t))(v70 + 8);
      *(void *)(v0 + 464) = v52;
      *(void *)(v0 + 472) = (v70 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v52(v43, v71);
      v67(v40, v68);
      uint64_t v53 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadConnection;
      *(void *)(v0 + 480) = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropSendConnection_uploadConnection;
      if (*(void *)&v44[v53])
      {
        uint64_t v54 = *(void *)(v0 + 248);
        swift_retain();
        sub_10065D92C(v54);
        swift_release();
        int v55 = enum case for SFNWInterfaceType.other(_:);
      }
      else
      {
        if (qword_100969B68 != -1) {
          swift_once();
        }
        uint64_t v56 = type metadata accessor for Logger();
        sub_10000B47C(v56, (uint64_t)qword_10096DD80);
        uint64_t v57 = Logger.logObject.getter();
        os_log_type_t v58 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v57, v58))
        {
          uint64_t v59 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v59 = 0;
          _os_log_impl((void *)&_mh_execute_header, v57, v58, "UPLOAD connection is not active", v59, 2u);
          swift_slowDealloc();
        }
        uint64_t v60 = *(void *)(v0 + 248);
        uint64_t v61 = *(void *)(v0 + 216);
        uint64_t v62 = *(void *)(v0 + 224);

        int v55 = enum case for SFNWInterfaceType.other(_:);
        (*(void (**)(uint64_t, void, uint64_t))(v62 + 104))(v60, enum case for SFNWInterfaceType.other(_:), v61);
      }
      *(_DWORD *)(v0 + 500) = v55;
      SFProgressTask.makeAsyncIterator()();
      *(_DWORD *)(v0 + 504) = enum case for SFNWInterfaceTypeCategory.regular(_:);
      uint64_t v63 = static AirDropActor.shared;
      uint64_t v64 = sub_100394340((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
      uint64_t v65 = (void *)swift_task_alloc();
      *(void *)(v0 + 488) = v65;
      *uint64_t v65 = v0;
      v65[1] = sub_1003882A4;
      uint64_t v33 = *(void *)(v0 + 184);
      uint64_t v36 = *(void *)(v0 + 192);
      uint64_t v34 = v63;
      uint64_t v35 = v64;
      uint64_t v37 = v0 + 48;
      return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v33, v34, v35, v36, v37);
    }
    swift_bridgeObjectRelease();
  }
  sub_100394298(*(void *)(v0 + 56), *(void *)(v0 + 112), (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v17 = *(void *)(v0 + 112);
  if (v16)
  {
    uint64_t v19 = *(void *)(v0 + 96);
    uint64_t v18 = *(void *)(v0 + 104);
    char v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    *(_DWORD *)char v20 = 136315138;
    sub_10024A330(v17 + *(int *)(v18 + 20), v19, &qword_10096DFA8);
    uint64_t v21 = type metadata accessor for SFAirDrop.TransferType();
    uint64_t v22 = *(void *)(v21 - 8);
    int v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21);
    uint64_t v24 = *(void *)(v0 + 96);
    if (v23 == 1)
    {
      sub_10000A7E8(*(void *)(v0 + 96), &qword_10096DFA8);
      unint64_t v25 = 0x80000001007BADC0;
      unint64_t v26 = 0xD000000000000020;
    }
    else
    {
      unint64_t v26 = SFAirDrop.TransferType.description.getter();
      unint64_t v25 = v27;
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v21);
    }
    uint64_t v28 = *(void *)(v0 + 112);
    *(void *)(v0 + 40) = sub_100254634(v26, v25, &v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1003956E4(v28, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Send StateMachine UPLOAD SKIPPED {type: %s", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_1003956E4(v17, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
  return v29();
}

uint64_t sub_1003882A4()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 384);
    swift_bridgeObjectRelease();
    os_log_type_t v4 = sub_100388E00;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 384);
    os_log_type_t v4 = sub_1003883C4;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_1003883C4()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 168);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v99 = *(void (**)(uint64_t *, uint64_t))(v0 + 464);
    unsigned int v86 = *(_DWORD *)(v0 + 496);
    uint64_t v88 = *(void (**)(uint64_t *, void, uint64_t))(v0 + 448);
    os_log_type_t v4 = *(int **)(v0 + 424);
    uint64_t v84 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 432);
    uint64_t v81 = *(void *)(v0 + 320);
    uint64_t v5 = *(void *)(v0 + 296);
    uint64_t v77 = *(void *)(v0 + 392);
    uint64_t v79 = *(void *)(v0 + 304);
    uint64_t v6 = *(uint64_t **)(v0 + 272);
    uint64_t v82 = *(void *)(v0 + 256);
    uint64_t v92 = *(void *)(v0 + 280);
    uint64_t v94 = *(void *)(v0 + 224);
    uint64_t v96 = *(void *)(v0 + 216);
    uint64_t v97 = *(void (**)(uint64_t, uint64_t))(v0 + 408);
    uint64_t v91 = *(void *)(v0 + 152);
    (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 192));
    uint64_t v7 = (uint64_t *)((char *)v6 + v4[12]);
    uint64_t v8 = (uint64_t *)((char *)v6 + v4[16]);
    uint64_t v9 = (char *)v6 + v4[20];
    *uint64_t v6 = sub_100313BE0();
    v6[1] = v10;
    *uint64_t v7 = v77;
    (*(void (**)(void *, void, uint64_t))(v3 + 104))(v7, enum case for SFAirDrop.Progress.completed(_:), v2);
    *uint64_t v8 = 0;
    v8[1] = 0;
    v84(v9, v81, v79);
    v88(v6, v86, v82);
    sub_100321A40((uint64_t)v6, v5);
    v99(v6, v82);
    v97(v5, v92);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v91, 1, 1, v96);
    sub_1003220C8(v91, v5);
    sub_10000A7E8(v91, &qword_10097F260);
    v97(v5, v92);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Send StateMachine UPLOAD END", v13, 2u);
      swift_slowDealloc();
    }
    uint64_t v14 = *(void *)(v0 + 368);
    uint64_t v100 = *(void *)(v0 + 360);
    uint64_t v103 = *(void *)(v0 + 376);
    uint64_t v15 = *(void *)(v0 + 312);
    uint64_t v16 = *(void *)(v0 + 320);
    uint64_t v17 = *(void *)(v0 + 304);
    uint64_t v18 = *(void *)(v0 + 248);
    uint64_t v20 = *(void *)(v0 + 216);
    uint64_t v19 = *(void *)(v0 + 224);

    sub_1002EFAF8(0);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v17);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v103, v100);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
    return v21();
  }
  else
  {
    uint64_t v23 = *(void *)(v0 + 480);
    uint64_t v24 = *(void *)(v0 + 64);
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(*(void *)(v0 + 176), v1, v2);
    if (*(void *)(v24 + v23))
    {
      uint64_t v25 = *(void *)(v0 + 240);
      swift_retain();
      sub_10065D92C(v25);
      swift_release();
    }
    else
    {
      if (qword_100969B68 != -1) {
        swift_once();
      }
      uint64_t v26 = type metadata accessor for Logger();
      sub_10000B47C(v26, (uint64_t)qword_10096DD80);
      unint64_t v27 = Logger.logObject.getter();
      os_log_type_t v28 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "UPLOAD connection is not active", v29, 2u);
        swift_slowDealloc();
      }
      uint64_t v30 = *(unsigned int *)(v0 + 500);
      uint64_t v31 = *(void *)(v0 + 240);
      uint64_t v32 = *(void *)(v0 + 216);
      uint64_t v33 = *(void *)(v0 + 224);

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 104))(v31, v30, v32);
    }
    unsigned int v89 = *(_DWORD *)(v0 + 496);
    uint64_t v90 = *(void (**)(uint64_t *, void, uint64_t))(v0 + 448);
    uint64_t v85 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 432);
    uint64_t v34 = *(int **)(v0 + 424);
    uint64_t v98 = *(void (**)(uint64_t *, uint64_t))(v0 + 464);
    uint64_t v78 = *(void *)(v0 + 304);
    uint64_t v80 = *(void *)(v0 + 320);
    uint64_t v87 = *(void *)(v0 + 296);
    uint64_t v35 = *(uint64_t **)(v0 + 272);
    uint64_t v93 = *(void *)(v0 + 280);
    uint64_t v95 = *(void (**)(uint64_t, uint64_t))(v0 + 408);
    uint64_t v83 = *(void *)(v0 + 256);
    uint64_t v36 = *(void *)(v0 + 168);
    uint64_t v37 = *(void *)(v0 + 176);
    uint64_t v38 = *(void *)(v0 + 160);
    uint64_t v39 = (char *)v35 + v34[12];
    uint64_t v40 = (uint64_t *)((char *)v35 + v34[16]);
    uint64_t v41 = (char *)v35 + v34[20];
    *uint64_t v35 = sub_100313BE0();
    v35[1] = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v39, v37, v38);
    *uint64_t v40 = sub_10032003C();
    v40[1] = v43;
    v85(v41, v80, v78);
    v90(v35, v89, v83);
    sub_100321A40((uint64_t)v35, v87);
    v98(v35, v83);
    v95(v87, v93);
    sub_100394340(&qword_1009709A8, (void (*)(uint64_t))&type metadata accessor for SFNWInterfaceType);
    if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
    {
      uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v0 + 408);
      uint64_t v45 = *(void *)(v0 + 296);
      uint64_t v46 = *(void *)(v0 + 280);
      uint64_t v47 = *(void *)(v0 + 216);
      uint64_t v48 = *(void *)(v0 + 224);
      uint64_t v49 = *(void *)(v0 + 152);
      (*(void (**)(uint64_t, void, uint64_t))(v48 + 16))(v49, *(void *)(v0 + 240), v47);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v49, 0, 1, v47);
      sub_1003220C8(v49, v45);
      sub_10000A7E8(v49, &qword_10097F260);
      v44(v45, v46);
    }
    uint64_t v50 = *(unsigned int *)(v0 + 504);
    uint64_t v51 = *(void *)(v0 + 240);
    uint64_t v52 = *(void *)(v0 + 224);
    uint64_t v101 = *(void *)(v0 + 216);
    uint64_t v104 = *(void *)(v0 + 232);
    uint64_t v54 = *(void *)(v0 + 136);
    uint64_t v53 = *(void *)(v0 + 144);
    uint64_t v55 = *(void *)(v0 + 120);
    uint64_t v56 = *(void *)(v0 + 128);
    SFNWInterfaceType.category()();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 104))(v54, v50, v55);
    sub_100394340(&qword_100970D48, (void (*)(uint64_t))&type metadata accessor for SFNWInterfaceTypeCategory);
    char v57 = dispatch thunk of static Equatable.== infix(_:_:)();
    os_log_type_t v58 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
    v58(v54, v55);
    v58(v53, v55);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v104, v51, v101);
    if (v57)
    {
      uint64_t v59 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 224) + 8);
      v59(*(void *)(v0 + 232), *(void *)(v0 + 216));
    }
    else
    {
      uint64_t v60 = *(void *)(v0 + 224);
      uint64_t v102 = *(void *)(v0 + 232);
      uint64_t v105 = *(void *)(v0 + 216);
      uint64_t v62 = *(void *)(v0 + 136);
      uint64_t v61 = *(void *)(v0 + 144);
      uint64_t v63 = *(void *)(v0 + 120);
      SFNWInterfaceType.category()();
      SFNWInterfaceType.category()();
      char v64 = dispatch thunk of static Equatable.== infix(_:_:)();
      v58(v62, v63);
      v58(v61, v63);
      uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
      v59(v102, v105);
      if ((v64 & 1) == 0)
      {
        uint64_t v65 = Logger.logObject.getter();
        os_log_type_t v66 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v65, v66))
        {
          int64_t v67 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)int64_t v67 = 0;
          _os_log_impl((void *)&_mh_execute_header, v65, v66, "AirDrop interface changed to high priority category", v67, 2u);
          swift_slowDealloc();
        }

        sub_100322C98(3.0);
      }
    }
    uint64_t v69 = *(void *)(v0 + 240);
    uint64_t v68 = *(void *)(v0 + 248);
    uint64_t v70 = *(void *)(v0 + 216);
    uint64_t v71 = *(void *)(v0 + 224);
    (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 160));
    v59(v68, v70);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32))(v68, v69, v70);
    uint64_t v72 = static AirDropActor.shared;
    uint64_t v73 = sub_100394340((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v74 = (void *)swift_task_alloc();
    *(void *)(v0 + 488) = v74;
    *uint64_t v74 = v0;
    v74[1] = sub_1003882A4;
    uint64_t v75 = *(void *)(v0 + 184);
    uint64_t v76 = *(void *)(v0 + 192);
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v75, v72, v73, v76, v0 + 48);
  }
}

uint64_t sub_100388E00()
{
  uint64_t v1 = v0[46];
  uint64_t v2 = v0[47];
  uint64_t v11 = v0[45];
  uint64_t v3 = v0[40];
  uint64_t v5 = v0[38];
  uint64_t v4 = v0[39];
  uint64_t v6 = v0[31];
  uint64_t v7 = v0[28];
  uint64_t v8 = v0[27];
  (*(void (**)(void, void))(v0[25] + 8))(v0[26], v0[24]);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100388FC4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)(v5 + 1208) = v4;
  *(unsigned char *)(v5 + 2125) = a4;
  *(void *)(v5 + 1200) = a3;
  *(void *)(v5 + 1192) = a2;
  *(void *)(v5 + 1184) = a1;
  *(void *)(v5 + 1216) = _s14descr1008C9AB9V10AskRequestVMa();
  *(void *)(v5 + 1224) = swift_task_alloc();
  sub_10000A844(&qword_100970C48);
  *(void *)(v5 + 1232) = swift_task_alloc();
  uint64_t v6 = sub_10000A844(&qword_100970C50);
  *(void *)(v5 + 1240) = v6;
  *(void *)(v5 + 1248) = *(void *)(v6 - 8);
  *(void *)(v5 + 1256) = swift_task_alloc();
  *(void *)(v5 + 1264) = swift_task_alloc();
  *(void *)(v5 + 1272) = _s14descr1008C9A51V16ExchangeResponseVMa(0);
  *(void *)(v5 + 1280) = swift_task_alloc();
  type metadata accessor for SFAirDrop.TransferIdentifier();
  *(void *)(v5 + 1288) = swift_task_alloc();
  _s14descr1008C9A51V15ExchangeRequestVMa(0);
  *(void *)(v5 + 1296) = swift_task_alloc();
  *(void *)(v5 + 1304) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SFAirDropSend.Failure();
  *(void *)(v5 + 1312) = v7;
  *(void *)(v5 + 1320) = *(void *)(v7 - 8);
  *(void *)(v5 + 1328) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SFAirDropSend.Transfer.State();
  *(void *)(v5 + 1336) = v8;
  *(void *)(v5 + 1344) = *(void *)(v8 - 8);
  *(void *)(v5 + 1352) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for SFAirDropSend.Transfer();
  *(void *)(v5 + 1360) = v9;
  *(void *)(v5 + 1368) = *(void *)(v9 - 8);
  *(void *)(v5 + 1376) = swift_task_alloc();
  sub_10000A844(&qword_100970C58);
  *(void *)(v5 + 1384) = swift_task_alloc();
  sub_10000A844(&qword_100970BA8);
  *(void *)(v5 + 1392) = swift_task_alloc();
  *(void *)(v5 + 1400) = swift_task_alloc();
  *(void *)(v5 + 1408) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SFAirDrop.ContactInfo();
  *(void *)(v5 + 1416) = v10;
  *(void *)(v5 + 1424) = *(void *)(v10 - 8);
  *(void *)(v5 + 1432) = swift_task_alloc();
  *(void *)(v5 + 1440) = swift_task_alloc();
  *(void *)(v5 + 1448) = swift_task_alloc();
  sub_10000A844(&qword_100970BD0);
  *(void *)(v5 + 1456) = swift_task_alloc();
  *(void *)(v5 + 1464) = swift_task_alloc();
  *(void *)(v5 + 1472) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for SFAirDrop.ContactRequest();
  *(void *)(v5 + 1480) = v11;
  *(void *)(v5 + 1488) = *(void *)(v11 - 8);
  *(void *)(v5 + 1496) = swift_task_alloc();
  *(void *)(v5 + 1504) = swift_task_alloc();
  *(void *)(v5 + 1512) = swift_task_alloc();
  *(void *)(v5 + 1520) = swift_task_alloc();
  *(void *)(v5 + 1528) = swift_task_alloc();
  *(void *)(v5 + 1536) = swift_task_alloc();
  sub_10000A844(&qword_10096DFA8);
  *(void *)(v5 + 1544) = swift_task_alloc();
  *(void *)(v5 + 1552) = swift_task_alloc();
  uint64_t v12 = type metadata accessor for SFAirDrop.TransferType();
  *(void *)(v5 + 1560) = v12;
  *(void *)(v5 + 1568) = *(void *)(v12 - 8);
  *(void *)(v5 + 1576) = swift_task_alloc();
  *(void *)(v5 + 1584) = swift_task_alloc();
  *(void *)(v5 + 1592) = swift_task_alloc();
  *(void *)(v5 + 1600) = swift_task_alloc();
  *(void *)(v5 + 1608) = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v13 = static AirDropActor.shared;
  *(void *)(v5 + 1616) = static AirDropActor.shared;
  return _swift_task_switch(sub_10038959C, v13, 0);
}

uint64_t sub_10038959C()
{
  uint64_t v172 = v0;
  uint64_t v1 = *(void *)(v0 + 1568);
  uint64_t v2 = *(void *)(v0 + 1560);
  uint64_t v3 = *(void *)(v0 + 1552);
  uint64_t v4 = *(void *)(v0 + 1216);
  sub_10024A330(*(void *)(v0 + 1184) + *(int *)(v4 + 20), v3, &qword_10096DFA8);
  uint64_t v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v5(v3, 1, v2) == 1)
  {
    sub_10000A7E8(*(void *)(v0 + 1552), &qword_10096DFA8);
    goto LABEL_15;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 1568) + 32))(*(void *)(v0 + 1608), *(void *)(v0 + 1552), *(void *)(v0 + 1560));
  SFAirDrop.TransferType.exchangeType.getter();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  if (!v7)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 1568) + 8))(*(void *)(v0 + 1608), *(void *)(v0 + 1560));
LABEL_15:
    uint64_t v26 = *(void **)(v0 + 1208);
    sub_100394298(*(void *)(v0 + 1184), *(void *)(v0 + 1224), (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
    id v27 = v26;
    os_log_type_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v28, v29))
    {
      int v164 = v5;
      uint64_t v30 = *(void *)(v0 + 1424);
      uint64_t v152 = *(void *)(v0 + 1416);
      uint64_t v31 = *(void *)(v0 + 1392);
      uint64_t v32 = swift_slowAlloc();
      v171[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 141558787;
      *(void *)(v0 + 1136) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v32 + 12) = 2081;
      sub_100373E6C(v31);
      uint64_t v151 = v28;
      os_log_type_t v149 = v29;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v31, 1, v152))
      {
        sub_10000A7E8(*(void *)(v0 + 1392), &qword_100970BA8);
        unint64_t v33 = 0xD00000000000001CLL;
        unint64_t v34 = 0x80000001007BADA0;
      }
      else
      {
        uint64_t v55 = *(void *)(v0 + 1432);
        uint64_t v56 = *(void *)(v0 + 1424);
        uint64_t v57 = *(void *)(v0 + 1416);
        uint64_t v58 = *(void *)(v0 + 1392);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v55, v58, v57);
        sub_10000A7E8(v58, &qword_100970BA8);
        unint64_t v33 = SFAirDrop.ContactInfo.description.getter();
        unint64_t v34 = v59;
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
      }
      uint64_t v159 = *(void *)(v0 + 1560);
      uint64_t v60 = *(void *)(v0 + 1544);
      uint64_t v61 = *(void *)(v0 + 1224);
      uint64_t v62 = *(void **)(v0 + 1208);
      *(void *)(v0 + 1128) = sub_100254634(v33, v34, v171);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      *(_WORD *)(v32 + 22) = 1024;
      sub_100394300();
      uint64_t v63 = (void *)static NSUserDefaults.airdrop.getter();
      char v64 = SFAirDropUserDefaults.alwaysExchangeContacts.getter();

      *(_DWORD *)(v0 + 2112) = v64 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v32 + 28) = 2080;
      sub_10024A330(v61 + *(int *)(v4 + 20), v60, &qword_10096DFA8);
      if (v164(v60, 1, v159) == 1)
      {
        sub_10000A7E8(*(void *)(v0 + 1544), &qword_10096DFA8);
        unint64_t v65 = 0xD000000000000020;
        unint64_t v66 = 0x80000001007BADC0;
      }
      else
      {
        uint64_t v67 = *(void *)(v0 + 1568);
        uint64_t v68 = *(void *)(v0 + 1560);
        uint64_t v69 = *(void *)(v0 + 1544);
        unint64_t v65 = SFAirDrop.TransferType.description.getter();
        unint64_t v66 = v70;
        (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v69, v68);
      }
      uint64_t v71 = *(void *)(v0 + 1224);
      *(void *)(v0 + 1144) = sub_100254634(v65, v66, v171);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1003956E4(v71, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
      _os_log_impl((void *)&_mh_execute_header, v151, v149, "Send StateMachine CONTACTS SKIPPED - Not needed {senderContact: %{private,mask.hash}s, alwaysExchangeContacts: %{BOOL}d, type: %s}", (uint8_t *)v32, 0x26u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v35 = *(void *)(v0 + 1224);
      uint64_t v36 = *(void **)(v0 + 1208);

      sub_1003956E4(v35, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
    }
LABEL_37:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v72 = *(uint64_t (**)(void, void))(v0 + 8);
    return v72(0, 0);
  }
  int v8 = *(unsigned __int8 *)(v0 + 2125);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1568) + 16);
  v9(*(void *)(v0 + 1600), *(void *)(v0 + 1608), *(void *)(v0 + 1560));
  uint64_t v10 = *(void *)(v0 + 1600);
  uint64_t v11 = *(void *)(v0 + 1568);
  uint64_t v12 = *(void *)(v0 + 1560);
  if (v8)
  {
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v14(*(void *)(v0 + 1600), *(void *)(v0 + 1560));
  }
  else
  {
    char v13 = SFAirDrop.TransferType.isOnlyExchange.getter();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v14(v10, v12);
    if ((v13 & 1) == 0)
    {
      v9(*(void *)(v0 + 1576), *(void *)(v0 + 1608), *(void *)(v0 + 1560));
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.default.getter();
      BOOL v17 = os_log_type_enabled(v15, v16);
      uint64_t v18 = *(void *)(v0 + 1608);
      uint64_t v19 = *(void *)(v0 + 1576);
      uint64_t v20 = *(void *)(v0 + 1560);
      if (v17)
      {
        uint64_t v21 = swift_slowAlloc();
        v171[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v21 = 136315394;
        if (v8 == 2) {
          uint64_t v22 = 0xD000000000000024;
        }
        else {
          uint64_t v22 = 0x65736C6166;
        }
        uint64_t v163 = v18;
        if (v8 == 2) {
          unint64_t v23 = 0x80000001007BADF0;
        }
        else {
          unint64_t v23 = 0xE500000000000000;
        }
        *(void *)(v0 + 1096) = sub_100254634(v22, v23, v171);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 12) = 2080;
        sub_100394340((unint64_t *)&unk_10097F240, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType);
        uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 1104) = sub_100254634(v24, v25, v171);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v14(v19, v20);
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Send StateMachine CONTACTS SKIPPED - {receiverSupportsContactExchange: %s, type: %s} ", (uint8_t *)v21, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v14(v163, v20);
      }
      else
      {
        v14(*(void *)(v0 + 1576), *(void *)(v0 + 1560));

        v14(v18, v20);
      }
      goto LABEL_37;
    }
  }
  *(void *)(v0 + 1624) = v14;
  uint64_t v37 = *(void *)(v0 + 1608);
  uint64_t v38 = *(void *)(v0 + 1592);
  uint64_t v39 = *(void *)(v0 + 1560);
  *(void *)(v0 + 1632) = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log;
  v9(v38, v37, v39);
  uint64_t v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.default.getter();
  BOOL v42 = os_log_type_enabled(v40, v41);
  uint64_t v43 = *(void *)(v0 + 1592);
  uint64_t v44 = v14;
  uint64_t v45 = *(void *)(v0 + 1560);
  if (v42)
  {
    uint64_t v46 = swift_slowAlloc();
    v171[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v46 = 136315394;
    uint64_t v47 = 1702195828;
    if ((v8 & 1) == 0) {
      uint64_t v47 = 0x65736C6166;
    }
    unint64_t v48 = 0xE400000000000000;
    if ((v8 & 1) == 0) {
      unint64_t v48 = 0xE500000000000000;
    }
    if (v8 == 2) {
      uint64_t v49 = 0xD000000000000024;
    }
    else {
      uint64_t v49 = v47;
    }
    if (v8 == 2) {
      unint64_t v50 = 0x80000001007BADF0;
    }
    else {
      unint64_t v50 = v48;
    }
    *(void *)(v0 + 1120) = sub_100254634(v49, v50, v171);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v46 + 12) = 2080;
    sub_100394340((unint64_t *)&unk_10097F240, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType);
    uint64_t v51 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 1160) = sub_100254634(v51, v52, v171);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v53 = v45;
    uint64_t v54 = v44;
    v44(v43, v53);
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "Send StateMachine CONTACTS START {receiverSupportsContactExchange: %s, type: %s}", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    v44(v43, v45);
    uint64_t v54 = v44;
  }
  uint64_t v74 = *(void *)(v0 + 1488);
  uint64_t v75 = *(void *)(v0 + 1480);
  uint64_t v76 = *(void *)(v0 + 1472);
  uint64_t v77 = *(void *)(v0 + 1200);
  uint64_t v78 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
  *(void *)(v0 + 1640) = v78;
  *(void *)(v0 + 1648) = (v74 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  int v79 = v78(v77, 1, v75);
  *(_DWORD *)(v0 + 2116) = v79;
  sub_10024A330(v77, v76, &qword_100970BD0);
  if (v78(v76, 1, v75) == 1)
  {
    uint64_t v80 = *(void *)(v0 + 1424);
    uint64_t v81 = *(void *)(v0 + 1416);
    uint64_t v82 = *(void *)(v0 + 1408);
    sub_10000A7E8(*(void *)(v0 + 1472), &qword_100970BD0);
    sub_100373E6C(v82);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v82, 1, v81) == 1)
    {
      sub_10000A7E8(*(void *)(v0 + 1408), &qword_100970BA8);
      uint64_t v83 = Logger.logObject.getter();
      os_log_type_t v84 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v83, v84))
      {
        uint64_t v85 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v85 = 0;
        _os_log_impl((void *)&_mh_execute_header, v83, v84, "Send StateMachine CONTACTS FAILED - Unexpectedly missing sender contact", v85, 2u);
        swift_slowDealloc();
      }
      uint64_t v86 = *(void *)(v0 + 1608);
      uint64_t v87 = *(void *)(v0 + 1560);

      v54(v86, v87);
      goto LABEL_37;
    }
    (*(void (**)(void, void, void))(*(void *)(v0 + 1424) + 32))(*(void *)(v0 + 1448), *(void *)(v0 + 1408), *(void *)(v0 + 1416));
    uint64_t v93 = Logger.logObject.getter();
    os_log_type_t v94 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v93, v94))
    {
      uint64_t v95 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v95 = 0;
      _os_log_impl((void *)&_mh_execute_header, v93, v94, "Send StateMachine SHARE CONTACT PERMISSION START", v95, 2u);
      swift_slowDealloc();
    }
    uint64_t v96 = *(void *)(v0 + 1448);
    BOOL v97 = v79 == 1;
    uint64_t v98 = *(void *)(v0 + 1424);
    uint64_t v99 = *(void *)(v0 + 1384);
    uint64_t v100 = *(void *)(v0 + 1368);
    uint64_t v165 = *(void *)(v0 + 1376);
    uint64_t v168 = *(void *)(v0 + 1360);
    uint64_t v101 = *(void *)(v0 + 1352);
    uint64_t v102 = *(void *)(v0 + 1344);
    uint64_t v156 = *(void *)(v0 + 1416);
    uint64_t v160 = *(void *)(v0 + 1336);

    sub_10038FA60(v96, v97, v99);
    uint64_t v103 = v101 + *(int *)(sub_10000A844(&qword_100970C60) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v98 + 16))(v101, v96, v156);
    uint64_t v104 = sub_10000A844((uint64_t *)&unk_1009723F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 16))(v103, v99, v104);
    uint64_t v105 = enum case for SFAirDropSend.Transfer.State.waitingForShareContactPermissionResponse(_:);
    uint64_t v106 = *(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 104);
    *(void *)(v0 + 1656) = v106;
    *(void *)(v0 + 1664) = (v102 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
    v106(v101, v105, v160);
    sub_100321A40(v101, v165);
    uint64_t v107 = *(void (**)(uint64_t, uint64_t))(v102 + 8);
    *(void *)(v0 + 1672) = v107;
    *(void *)(v0 + 1680) = (v102 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v107(v101, v160);
    uint64_t v108 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
    *(void *)(v0 + 1688) = v108;
    *(void *)(v0 + 1696) = (v100 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v108(v165, v168);
    return _swift_task_switch(sub_10038A960, 0, 0);
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 1488) + 32))(*(void *)(v0 + 1536), *(void *)(v0 + 1472), *(void *)(v0 + 1480));
    uint64_t v88 = *(void *)(v0 + 1424);
    uint64_t v89 = *(void *)(v0 + 1416);
    uint64_t v90 = *(void *)(v0 + 1400);
    SFAirDrop.ContactRequest.contact.getter();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v90, 1, v89) == 1)
    {
      sub_10000A7E8(*(void *)(v0 + 1400), &qword_100970BA8);
      uint64_t v91 = 0;
      uint64_t v92 = 0;
    }
    else
    {
      uint64_t v109 = *(void *)(v0 + 1424);
      uint64_t v110 = *(void *)(v0 + 1416);
      uint64_t v111 = *(void *)(v0 + 1400);
      uint64_t v91 = SFAirDrop.ContactInfo.accountHandle.getter();
      uint64_t v92 = v112;
      (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v111, v110);
    }
    uint64_t v113 = *(void *)(v0 + 1520);
    uint64_t v114 = *(void *)(v0 + 1488);
    uint64_t v115 = *(void *)(v0 + 1480);
    sub_100460D10(v91, v92, (void *)(v0 + 960));
    uint64_t v116 = *(void *)(v0 + 960);
    uint64_t v117 = *(void *)(v0 + 968);
    uint64_t v118 = *(void *)(v0 + 976);
    unint64_t v150 = *(void *)(v0 + 984);
    unint64_t v166 = *(void *)(v0 + 1000);
    uint64_t v169 = *(void *)(v0 + 992);
    unint64_t v157 = *(void *)(v0 + 1016);
    uint64_t v161 = *(void *)(v0 + 1008);
    uint64_t v154 = *(void *)(v0 + 1024);
    uint64_t v148 = *(void *)(v0 + 1032);
    uint64_t v153 = *(void *)(v0 + 1040);
    swift_bridgeObjectRelease();
    *(_DWORD *)(v0 + 2120) = enum case for SFAirDrop.ContactRequest.notNeeded(_:);
    uint64_t v119 = *(void (**)(uint64_t))(v114 + 104);
    *(void *)(v0 + 1736) = v119;
    *(void *)(v0 + 1744) = (v114 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
    v119(v113);
    char v120 = static SFAirDrop.ContactRequest.== infix(_:_:)();
    uint64_t v121 = *(void (**)(uint64_t, uint64_t))(v114 + 8);
    *(void *)(v0 + 1752) = v121;
    *(void *)(v0 + 1760) = (v114 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v121(v113, v115);
    if (v120)
    {
      uint64_t v116 = 0;
      uint64_t v117 = 0;
      uint64_t v118 = 0;
      unint64_t v122 = 0;
      uint64_t v123 = 0;
      unint64_t v124 = 0;
      uint64_t v125 = 0;
      unint64_t v126 = 0;
      uint64_t v127 = 0;
      uint64_t v128 = 0;
      uint64_t v129 = 0;
    }
    else
    {
      sub_10039463C((void *)(v0 + 960), (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_1003944E4);
      uint64_t v128 = v148;
      unint64_t v122 = v150;
      unint64_t v124 = v166;
      uint64_t v123 = v169;
      unint64_t v126 = v157;
      uint64_t v125 = v161;
      uint64_t v129 = v153;
      uint64_t v127 = v154;
    }
    unint64_t v167 = v124;
    uint64_t v170 = v123;
    unint64_t v158 = v126;
    uint64_t v162 = v125;
    *(void *)(v0 + 1848) = v129;
    *(void *)(v0 + 1840) = v128;
    *(void *)(v0 + 1832) = v127;
    *(void *)(v0 + 1824) = v126;
    *(void *)(v0 + 1816) = v125;
    *(void *)(v0 + 1808) = v124;
    *(void *)(v0 + 1800) = v123;
    *(void *)(v0 + 1792) = v122;
    *(void *)(v0 + 1784) = v118;
    *(void *)(v0 + 1776) = v117;
    *(void *)(v0 + 1768) = v116;
    uint64_t v146 = *(void *)(v0 + 1520);
    uint64_t v130 = v127;
    uint64_t v155 = v127;
    uint64_t v131 = v128;
    uint64_t v132 = *(void *)(v0 + 1488);
    uint64_t v133 = *(void *)(v0 + 1376);
    uint64_t v134 = v117;
    uint64_t v135 = *(void *)(v0 + 1368);
    uint64_t v136 = *(void *)(v0 + 1360);
    uint64_t v147 = *(void *)(v0 + 1304);
    uint64_t v145 = *(void *)(v0 + 1288);
    uint64_t v137 = v118;
    uint64_t v138 = *(void *)(v0 + 1208);
    *(void *)(v0 + 784) = v116;
    *(void *)(v0 + 792) = v134;
    *(void *)(v0 + 800) = v137;
    *(void *)(v0 + 808) = v122;
    *(void *)(v0 + 816) = v123;
    *(void *)(v0 + 824) = v124;
    *(void *)(v0 + 832) = v125;
    *(void *)(v0 + 840) = v126;
    *(void *)(v0 + 848) = v130;
    *(void *)(v0 + 856) = v131;
    *(void *)(v0 + 864) = v129;
    uint64_t v139 = *(void (**)(void))(v132 + 16);
    *(void *)(v0 + 1856) = v139;
    *(void *)(v0 + 1864) = (v132 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v139();
    uint64_t v140 = v138 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v135 + 16))(v133, v140, v136);
    SFAirDropSend.Transfer.id.getter();
    uint64_t v141 = *(void (**)(uint64_t, uint64_t))(v135 + 8);
    *(void *)(v0 + 1872) = v141;
    *(void *)(v0 + 1880) = (v135 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v141(v133, v136);
    sub_1003944E4(v116, v134, v137, v122, v170, v167, v162, v158, v155, v131);
    sub_1005A9FAC(v146, v145, v0 + 784, v147);
    sub_1002EC8E0(v147);
    uint64_t v142 = (void *)swift_task_alloc();
    *(void *)(v0 + 1888) = v142;
    *uint64_t v142 = v0;
    v142[1] = sub_10038B830;
    uint64_t v143 = *(void *)(v0 + 1280);
    uint64_t v144 = *(void *)(v0 + 1240);
    return SFProgressTask.finalValue.getter(v143, v144);
  }
}

uint64_t sub_10038A960()
{
  uint64_t v1 = v0[173];
  uint64_t v2 = swift_task_alloc();
  v0[213] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = swift_task_alloc();
  v0[214] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[215] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10038AA68;
  uint64_t v5 = v0[191];
  uint64_t v6 = v0[185];
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)(v5, &unk_100970C68, v2, sub_100394428, v3, 0, 0, v6);
}

uint64_t sub_10038AA68()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1728) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10038B1EC;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 1616);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = sub_10038AB9C;
    uint64_t v4 = v5;
  }
  return _swift_task_switch(v3, v4, 0);
}

uint64_t sub_10038AB9C()
{
  (*(void (**)(void, void, void))(*(void *)(v0 + 1488) + 32))(*(void *)(v0 + 1536), *(void *)(v0 + 1528), *(void *)(v0 + 1480));
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Send StateMachine SHARE CONTACT PERMISSION END", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Send StateMachine EXCHANGING START", v6, 2u);
    swift_slowDealloc();
  }
  unint64_t v66 = *(void (**)(uint64_t, uint64_t))(v0 + 1688);
  uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v0 + 1672);
  uint64_t v56 = *(void (**)(uint64_t, void, uint64_t))(v0 + 1656);
  uint64_t v7 = *(void *)(v0 + 1536);
  uint64_t v8 = *(void *)(v0 + 1488);
  uint64_t v9 = *(void *)(v0 + 1480);
  uint64_t v10 = *(void *)(v0 + 1424);
  uint64_t v71 = *(void *)(v0 + 1416);
  uint64_t v74 = *(void *)(v0 + 1448);
  uint64_t v11 = *(void *)(v0 + 1376);
  uint64_t v59 = *(void *)(v0 + 1360);
  uint64_t v61 = *(void *)(v0 + 1384);
  uint64_t v12 = *(void *)(v0 + 1352);
  uint64_t v13 = *(void *)(v0 + 1336);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v12, v7, v9);
  v56(v12, enum case for SFAirDropSend.Transfer.State.exchanging(_:), v13);
  sub_100321A40(v12, v11);
  v63(v12, v13);
  v66(v11, v59);
  sub_10000A7E8(v61, &qword_100970C58);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v74, v71);
  uint64_t v14 = *(void *)(v0 + 1424);
  uint64_t v15 = *(void *)(v0 + 1416);
  uint64_t v16 = *(void *)(v0 + 1400);
  SFAirDrop.ContactRequest.contact.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v16, 1, v15) == 1)
  {
    sub_10000A7E8(*(void *)(v0 + 1400), &qword_100970BA8);
    uint64_t v17 = 0;
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v19 = *(void *)(v0 + 1424);
    uint64_t v20 = *(void *)(v0 + 1416);
    uint64_t v21 = *(void *)(v0 + 1400);
    uint64_t v17 = SFAirDrop.ContactInfo.accountHandle.getter();
    uint64_t v18 = v22;
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  }
  uint64_t v23 = *(void *)(v0 + 1520);
  uint64_t v24 = *(void *)(v0 + 1488);
  uint64_t v25 = *(void *)(v0 + 1480);
  sub_100460D10(v17, v18, (void *)(v0 + 960));
  uint64_t v26 = *(void *)(v0 + 960);
  uint64_t v27 = *(void *)(v0 + 968);
  unint64_t v62 = *(void *)(v0 + 984);
  uint64_t v64 = *(void *)(v0 + 976);
  unint64_t v75 = *(void *)(v0 + 1000);
  uint64_t v77 = *(void *)(v0 + 992);
  uint64_t v72 = *(void *)(v0 + 1008);
  uint64_t v67 = *(void *)(v0 + 1024);
  unint64_t v69 = *(void *)(v0 + 1016);
  uint64_t v60 = *(void *)(v0 + 1032);
  uint64_t v65 = *(void *)(v0 + 1040);
  swift_bridgeObjectRelease();
  *(_DWORD *)(v0 + 2120) = enum case for SFAirDrop.ContactRequest.notNeeded(_:);
  os_log_type_t v28 = *(void (**)(uint64_t))(v24 + 104);
  *(void *)(v0 + 1736) = v28;
  *(void *)(v0 + 1744) = (v24 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v28(v23);
  char v29 = static SFAirDrop.ContactRequest.== infix(_:_:)();
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  *(void *)(v0 + 1752) = v30;
  *(void *)(v0 + 1760) = (v24 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v30(v23, v25);
  if (v29)
  {
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v31 = 0;
    unint64_t v32 = 0;
    uint64_t v33 = 0;
    unint64_t v34 = 0;
    uint64_t v35 = 0;
    unint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    uint64_t v39 = 0;
  }
  else
  {
    sub_10039463C((void *)(v0 + 960), (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_1003944E4);
    unint64_t v32 = v62;
    uint64_t v31 = v64;
    unint64_t v34 = v75;
    uint64_t v33 = v77;
    uint64_t v35 = v72;
    uint64_t v37 = v67;
    unint64_t v36 = v69;
    uint64_t v38 = v60;
    uint64_t v39 = v65;
  }
  unint64_t v76 = v34;
  uint64_t v78 = v33;
  uint64_t v73 = v35;
  unint64_t v70 = v36;
  *(void *)(v0 + 1848) = v39;
  *(void *)(v0 + 1840) = v38;
  *(void *)(v0 + 1832) = v37;
  *(void *)(v0 + 1824) = v36;
  *(void *)(v0 + 1816) = v35;
  *(void *)(v0 + 1808) = v34;
  *(void *)(v0 + 1800) = v33;
  *(void *)(v0 + 1792) = v32;
  *(void *)(v0 + 1784) = v31;
  *(void *)(v0 + 1776) = v27;
  *(void *)(v0 + 1768) = v26;
  uint64_t v40 = v37;
  uint64_t v68 = v37;
  uint64_t v41 = v38;
  uint64_t v42 = *(void *)(v0 + 1488);
  uint64_t v43 = *(void *)(v0 + 1376);
  uint64_t v44 = v27;
  uint64_t v45 = *(void *)(v0 + 1368);
  uint64_t v46 = *(void *)(v0 + 1360);
  uint64_t v57 = *(void *)(v0 + 1520);
  uint64_t v58 = *(void *)(v0 + 1304);
  uint64_t v55 = *(void *)(v0 + 1288);
  uint64_t v47 = *(void *)(v0 + 1208);
  *(void *)(v0 + 784) = v26;
  *(void *)(v0 + 792) = v44;
  *(void *)(v0 + 800) = v31;
  *(void *)(v0 + 808) = v32;
  *(void *)(v0 + 816) = v33;
  *(void *)(v0 + 824) = v34;
  *(void *)(v0 + 832) = v35;
  *(void *)(v0 + 840) = v36;
  *(void *)(v0 + 848) = v40;
  *(void *)(v0 + 856) = v41;
  *(void *)(v0 + 864) = v39;
  unint64_t v48 = *(void (**)(void))(v42 + 16);
  *(void *)(v0 + 1856) = v48;
  *(void *)(v0 + 1864) = (v42 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v48();
  uint64_t v49 = v47 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v43, v49, v46);
  SFAirDropSend.Transfer.id.getter();
  unint64_t v50 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
  *(void *)(v0 + 1872) = v50;
  *(void *)(v0 + 1880) = (v45 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v50(v43, v46);
  sub_1003944E4(v26, v44, v31, v32, v78, v76, v73, v70, v68, v41);
  sub_1005A9FAC(v57, v55, v0 + 784, v58);
  sub_1002EC8E0(v58);
  uint64_t v51 = (void *)swift_task_alloc();
  *(void *)(v0 + 1888) = v51;
  *uint64_t v51 = v0;
  v51[1] = sub_10038B830;
  uint64_t v52 = *(void *)(v0 + 1280);
  uint64_t v53 = *(void *)(v0 + 1240);
  return SFProgressTask.finalValue.getter(v52, v53);
}

uint64_t sub_10038B1EC()
{
  uint64_t v1 = *(void *)(v0 + 1616);
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_10038B264, v1, 0);
}

uint64_t sub_10038B264()
{
  *(void *)(v0 + 1112) = *(void *)(v0 + 1728);
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    if ((*(unsigned int (**)(void, void))(*(void *)(v0 + 1320) + 88))(*(void *)(v0 + 1328), *(void *)(v0 + 1312)) == enum case for SFAirDropSend.Failure.cancelled(_:))
    {
      swift_errorRelease();
      uint64_t v1 = Logger.logObject.getter();
      os_log_type_t v2 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v1, v2))
      {
        uint64_t v3 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v3 = 0;
        _os_log_impl((void *)&_mh_execute_header, v1, v2, "Send StateMachine SHARE CONTACT PERMISSION END - Not exchanging contacts", v3, 2u);
        swift_slowDealloc();
      }
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v0 + 1688);
      uint64_t v4 = *(void *)(v0 + 1520);
      uint64_t v5 = *(void *)(v0 + 1488);
      uint64_t v6 = *(void *)(v0 + 1480);
      uint64_t v7 = *(void *)(v0 + 1376);
      uint64_t v8 = *(void *)(v0 + 1368);
      uint64_t v9 = *(void *)(v0 + 1360);
      uint64_t v32 = *(void *)(v0 + 1296);
      uint64_t v30 = *(void *)(v0 + 1288);
      uint64_t v10 = *(void *)(v0 + 1208);
      uint64_t v33 = *(void *)(v0 + 1192);

      (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for SFAirDrop.ContactRequest.notNeeded(_:), v6);
      uint64_t v11 = v10 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_currentTransfer;
      swift_beginAccess();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v11, v9);
      SFAirDropSend.Transfer.id.getter();
      v31(v7, v9);
      *(void *)(v0 + 776) = 0;
      *(_OWORD *)(v0 + 744) = 0u;
      *(_OWORD *)(v0 + 760) = 0u;
      *(_OWORD *)(v0 + 712) = 0u;
      *(_OWORD *)(v0 + 728) = 0u;
      *(_OWORD *)(v0 + 696) = 0u;
      sub_1005A9FAC(v4, v30, v0 + 696, v32);
      uint64_t v12 = swift_task_alloc();
      *(void *)(v0 + 2096) = v12;
      *(void *)(v12 + 16) = v33;
      *(void *)(v12 + 24) = v32;
      swift_asyncLet_begin();
      uint64_t v13 = *(void *)(v0 + 1256);
      return _swift_asyncLet_finish(v0 + 16, v13, sub_10038E9F8, v0 + 656);
    }
    unint64_t v34 = *(void (**)(uint64_t, uint64_t))(v0 + 1624);
    uint64_t v20 = *(void *)(v0 + 1608);
    uint64_t v21 = *(void *)(v0 + 1560);
    uint64_t v22 = *(void *)(v0 + 1448);
    uint64_t v23 = *(void *)(v0 + 1424);
    uint64_t v24 = *(void *)(v0 + 1416);
    uint64_t v25 = *(void *)(v0 + 1328);
    uint64_t v26 = *(void *)(v0 + 1320);
    uint64_t v27 = *(void *)(v0 + 1312);
    sub_10000A7E8(*(void *)(v0 + 1384), &qword_100970C58);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    v34(v20, v21);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  }
  else
  {
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v0 + 1624);
    uint64_t v15 = *(void *)(v0 + 1608);
    uint64_t v16 = *(void *)(v0 + 1560);
    uint64_t v17 = *(void *)(v0 + 1448);
    uint64_t v18 = *(void *)(v0 + 1424);
    uint64_t v19 = *(void *)(v0 + 1416);
    sub_10000A7E8(*(void *)(v0 + 1384), &qword_100970C58);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    v14(v15, v16);
  }
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t sub_10038B830()
{
  os_log_type_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 1896) = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[202];
  (*(void (**)(void, void))(v2[156] + 8))(v2[158], v2[155]);
  if (v0) {
    uint64_t v4 = sub_10038ECF0;
  }
  else {
    uint64_t v4 = sub_10038B9AC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10038B9AC()
{
  uint64_t v83 = v0;
  sub_1005A9FC4(*(void *)(v0 + 1512));
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Send StateMachine EXCHANGING END", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1856);
  uint64_t v5 = *(void *)(v0 + 1512);
  uint64_t v6 = *(void *)(v0 + 1504);
  uint64_t v7 = *(void *)(v0 + 1488);
  uint64_t v8 = *(void *)(v0 + 1480);

  v4(v6, v5, v8);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v7 + 88))(v6, v8) == enum case for SFAirDrop.ContactRequest.contact(_:))
  {
    uint64_t v9 = *(void *)(v0 + 1504);
    uint64_t v10 = *(void *)(v0 + 1464);
    uint64_t v11 = *(void *)(v0 + 1440);
    uint64_t v12 = *(void *)(v0 + 1424);
    uint64_t v13 = *(void *)(v0 + 1416);
    uint64_t v14 = *(void *)(v0 + 1200);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 1488) + 96))(v9, *(void *)(v0 + 1480));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v11, v9, v13);
    sub_10024A330(v14, v10, &qword_100970BD0);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v74 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1640);
      uint64_t v72 = *(void *)(v0 + 1480);
      uint64_t v17 = *(void *)(v0 + 1464);
      uint64_t v18 = *(void *)(v0 + 1456);
      BOOL v19 = *(_DWORD *)(v0 + 2116) == 1;
      uint64_t v20 = swift_slowAlloc();
      v82[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 67109635;
      *(_DWORD *)(v0 + 2104) = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v20 + 8) = 2160;
      *(void *)(v0 + 1176) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v20 + 18) = 2081;
      sub_10024A330(v17, v18, &qword_100970BD0);
      if (v74(v18, 1, v72) == 1)
      {
        sub_10000A7E8(*(void *)(v0 + 1456), &qword_100970BD0);
        unint64_t v21 = 0x80000001007BAE20;
        unint64_t v22 = 0xD000000000000013;
      }
      else
      {
        uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v0 + 1752);
        uint64_t v45 = *(void *)(v0 + 1480);
        uint64_t v46 = *(void *)(v0 + 1456);
        unint64_t v22 = SFAirDrop.ContactRequest.description.getter();
        unint64_t v21 = v47;
        v44(v46, v45);
      }
      uint64_t v48 = *(void *)(v0 + 1464);
      *(void *)(v0 + 1168) = sub_100254634(v22, v21, v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000A7E8(v48, &qword_100970BD0);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Should Import CONTACT START {afterAirDrop: %{BOOL}d, contactRequest: %{private,mask.hash}s}", (uint8_t *)v20, 0x1Cu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v36 = *(void *)(v0 + 1464);

      sub_10000A7E8(v36, &qword_100970BD0);
    }
    uint64_t v80 = *(void (**)(uint64_t, uint64_t))(v0 + 1872);
    uint64_t v49 = *(void *)(v0 + 1440);
    uint64_t v50 = *(void *)(v0 + 1424);
    uint64_t v51 = *(void *)(v0 + 1416);
    uint64_t v76 = *(void *)(v0 + 1376);
    uint64_t v78 = *(void *)(v0 + 1360);
    uint64_t v52 = *(void *)(v0 + 1352);
    uint64_t v53 = *(void *)(v0 + 1344);
    uint64_t v54 = *(void *)(v0 + 1336);
    uint64_t v55 = *(void *)(v0 + 1232);
    sub_1003909C8(v49, *(_DWORD *)(v0 + 2116) == 1, v55);
    uint64_t v56 = v52 + *(int *)(sub_10000A844(&qword_100970C88) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v52, v49, v51);
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_10097C390);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16))(v56, v55, v57);
    (*(void (**)(uint64_t, void, uint64_t))(v53 + 104))(v52, enum case for SFAirDropSend.Transfer.State.waitingForImportContactResponse(_:), v54);
    sub_100321A40(v52, v76);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v54);
    v80(v76, v78);
    return _swift_task_switch(sub_10038C46C, 0, 0);
  }
  else
  {
    uint64_t v81 = (void *)(v0 + 960);
    uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1856);
    uint64_t v24 = *(void *)(v0 + 1512);
    uint64_t v25 = *(void *)(v0 + 1496);
    uint64_t v26 = *(void *)(v0 + 1480);
    (*(void (**)(void, uint64_t))(v0 + 1752))(*(void *)(v0 + 1504), v26);
    v23(v25, v24, v26);
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    unint64_t v75 = v27;
    BOOL v29 = os_log_type_enabled(v27, v28);
    uint64_t v30 = *(void *)(v0 + 1832);
    uint64_t v77 = *(void (**)(uint64_t, uint64_t))(v0 + 1624);
    uint64_t v73 = *(void *)(v0 + 1608);
    uint64_t v79 = *(void *)(v0 + 1560);
    uint64_t v31 = *(void *)(v0 + 1496);
    uint64_t v32 = *(void *)(v0 + 1480);
    uint64_t v70 = *(void *)(v0 + 1304);
    uint64_t v71 = *(void *)(v0 + 1536);
    uint64_t v68 = *(void *)(v0 + 1512);
    uint64_t v69 = *(void *)(v0 + 1280);
    uint64_t v66 = *(void *)(v0 + 1816);
    unint64_t v67 = *(void *)(v0 + 1824);
    uint64_t v64 = *(void *)(v0 + 1800);
    unint64_t v65 = *(void *)(v0 + 1808);
    unint64_t v63 = *(void *)(v0 + 1792);
    if (v29)
    {
      uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v0 + 1752);
      uint64_t v61 = *(void *)(v0 + 1784);
      uint64_t v62 = *(void *)(v0 + 1776);
      uint64_t v60 = *(void *)(v0 + 1768);
      uint64_t v59 = *(void *)(v0 + 1840);
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      v82[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 136315138;
      sub_100394340(&qword_100970C80, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest);
      uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 1152) = sub_100254634(v34, v35, v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v58(v31, v32);
      _os_log_impl((void *)&_mh_execute_header, v75, v28, "Import CONTACT SKIP. No contact from receiver {exchangeContactResponse: %s}", v33, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100394590(v60, v62, v61, v63, v64, v65, v66, v67, v30, v59);
      sub_10039463C(v81, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100394590);
      v58(v68, v32);
      sub_1003956E4(v69, _s14descr1008C9A51V16ExchangeResponseVMa);
      sub_1003956E4(v70, _s14descr1008C9A51V15ExchangeRequestVMa);
      v58(v71, v32);
    }
    else
    {
      uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v0 + 1752);
      uint64_t v38 = *(void *)(v0 + 1840);
      uint64_t v39 = *(void *)(v0 + 1784);
      uint64_t v40 = *(void *)(v0 + 1776);
      uint64_t v41 = *(void *)(v0 + 1768);

      v37(v31, v32);
      sub_100394590(v41, v40, v39, v63, v64, v65, v66, v67, v30, v38);
      sub_10039463C(v81, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100394590);
      v37(v68, v32);
      sub_1003956E4(v69, _s14descr1008C9A51V16ExchangeResponseVMa);
      sub_1003956E4(v70, _s14descr1008C9A51V15ExchangeRequestVMa);
      v37(v71, v32);
    }
    v77(v73, v79);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v42 = *(uint64_t (**)(void, void))(v0 + 8);
    return v42(0, 0);
  }
}

uint64_t sub_10038C46C()
{
  uint64_t v1 = v0[154];
  uint64_t v2 = swift_task_alloc();
  v0[238] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = swift_task_alloc();
  v0[239] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[240] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10038C57C;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)((char *)v0 + 2124, &unk_100970C98, v2, sub_10039474C, v3, 0, 0, &type metadata for Bool);
}

uint64_t sub_10038C57C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1928) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10038CC98;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 1616);
    swift_task_dealloc();
    swift_task_dealloc();
    *(unsigned char *)(v2 + 2126) = *(unsigned char *)(v2 + 2124);
    uint64_t v3 = sub_10038C6C0;
    uint64_t v4 = v5;
  }
  return _swift_task_switch(v3, v4, 0);
}

uint64_t sub_10038C6C0()
{
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    int v3 = *(unsigned __int8 *)(v0 + 2126);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 67109120;
    *(_DWORD *)(v0 + 2108) = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Should Import CONTACT END {shouldImportContact: %{BOOL}d}", v4, 8u);
    swift_slowDealloc();
  }
  int v5 = *(unsigned __int8 *)(v0 + 2126);

  if (v5 == 1)
  {
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 1624);
    uint64_t v7 = *(void *)(v0 + 1584);
    uint64_t v8 = *(void *)(v0 + 1568);
    uint64_t v9 = *(void *)(v0 + 1560);
    SFAirDropSend.Request.type.getter();
    char v10 = SFAirDrop.TransferType.isOnlyExchange.getter();
    *(void *)(v0 + 1936) = (v8 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v6(v7, v9);
    uint64_t v39 = (char *)&dword_10096FEF8 + dword_10096FEF8;
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 1944) = v11;
    void *v11 = v0;
    v11[1] = sub_10038D08C;
    uint64_t v12 = *(void *)(v0 + 1440);
    return ((uint64_t (*)(uint64_t, void))v39)(v12, v10 & 1);
  }
  else
  {
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Import CONTACT SKIP. Declined.", v16, 2u);
      swift_slowDealloc();
    }
    long long v25 = *(_OWORD *)(v0 + 1832);
    uint64_t v27 = *(void *)(v0 + 1816);
    unint64_t v28 = *(void *)(v0 + 1824);
    unint64_t v26 = *(void *)(v0 + 1808);
    uint64_t v17 = *(void *)(v0 + 1800);
    unint64_t v18 = *(void *)(v0 + 1792);
    uint64_t v19 = *(void *)(v0 + 1784);
    uint64_t v20 = *(void *)(v0 + 1776);
    uint64_t v21 = *(void *)(v0 + 1768);
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v0 + 1752);
    uint64_t v38 = *(void *)(v0 + 1608);
    uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v0 + 1624);
    uint64_t v37 = *(void *)(v0 + 1560);
    uint64_t v36 = *(void *)(v0 + 1536);
    uint64_t v31 = *(void *)(v0 + 1480);
    uint64_t v32 = *(void *)(v0 + 1512);
    uint64_t v22 = *(void *)(v0 + 1424);
    uint64_t v29 = *(void *)(v0 + 1416);
    uint64_t v30 = *(void *)(v0 + 1440);
    uint64_t v35 = *(void *)(v0 + 1304);
    uint64_t v33 = *(void *)(v0 + 1280);
    uint64_t v23 = *(void *)(v0 + 1232);

    sub_100394590(v21, v20, v19, v18, v17, v26, v27, v28, v25, *((uint64_t *)&v25 + 1));
    sub_10039463C((void *)(v0 + 960), (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100394590);
    sub_10000A7E8(v23, &qword_100970C48);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v30, v29);
    v34(v32, v31);
    sub_1003956E4(v33, _s14descr1008C9A51V16ExchangeResponseVMa);
    sub_1003956E4(v35, _s14descr1008C9A51V15ExchangeRequestVMa);
    v34(v36, v31);
    v40(v38, v37);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = *(uint64_t (**)(void, void))(v0 + 8);
    return v24(0, 0);
  }
}

uint64_t sub_10038CC98()
{
  uint64_t v1 = *(void *)(v0 + 1616);
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_10038CD10, v1, 0);
}

uint64_t sub_10038CD10()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[219];
  uint64_t v14 = v0[201];
  os_log_type_t v15 = (void (*)(uint64_t, uint64_t))v0[203];
  uint64_t v13 = v0[195];
  uint64_t v2 = v0[189];
  uint64_t v3 = v0[185];
  uint64_t v4 = v0[180];
  uint64_t v5 = v0[178];
  uint64_t v6 = v0[177];
  uint64_t v11 = v0[163];
  uint64_t v12 = v0[192];
  uint64_t v10 = v0[160];
  uint64_t v7 = v0[154];
  sub_100394590(v0[221], v0[222], v0[223], v0[224], v0[225], v0[226], v0[227], v0[228], v0[229], v0[230]);
  sub_10039463C(v0 + 120, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100394590);
  sub_10000A7E8(v7, &qword_100970C48);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v1(v2, v3);
  sub_1003956E4(v10, _s14descr1008C9A51V16ExchangeResponseVMa);
  sub_1003956E4(v11, _s14descr1008C9A51V15ExchangeRequestVMa);
  v1(v12, v3);
  v15(v14, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10038D08C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v5[244] = a1;
  v5[245] = a2;
  v5[246] = v2;
  swift_task_dealloc();
  uint64_t v6 = v4[202];
  if (v2) {
    uint64_t v7 = sub_10038DD7C;
  }
  else {
    uint64_t v7 = sub_10038D1C8;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_10038D1C8()
{
  uint64_t v1 = *(void *)(v0 + 1960);
  uint64_t v90 = (void *)(v0 + 960);
  if (v1)
  {
    uint64_t v2 = (uint64_t *)(*(void *)(v0 + 1280) + *(int *)(*(void *)(v0 + 1272) + 36));
    uint64_t v3 = *v2;
    *(void *)(v0 + 1976) = *v2;
    uint64_t v4 = v2[1];
    *(void *)(v0 + 1984) = v4;
    uint64_t v5 = v2[2];
    *(void *)(v0 + 1992) = v5;
    unint64_t v6 = v2[3];
    *(void *)(v0 + 2000) = v6;
    uint64_t v7 = v2[4];
    *(void *)(v0 + 2008) = v7;
    unint64_t v8 = v2[5];
    *(void *)(v0 + 2016) = v8;
    uint64_t v9 = v2[6];
    *(void *)(v0 + 2024) = v9;
    unint64_t v10 = v2[7];
    *(void *)(v0 + 2032) = v10;
    uint64_t v11 = v2[8];
    *(void *)(v0 + 2040) = v11;
    uint64_t v12 = v2[9];
    *(void *)(v0 + 2048) = v12;
    uint64_t v13 = v2[10];
    *(void *)(v0 + 2056) = v13;
    if (!v12)
    {
      uint64_t v27 = Logger.logObject.getter();
      os_log_type_t v42 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v27, v42))
      {
        uint64_t v43 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v43 = 0;
        _os_log_impl((void *)&_mh_execute_header, v27, v42, "Import Identity SKIP. Not provided", v43, 2u);
        swift_slowDealloc();
      }
      goto LABEL_19;
    }
    uint64_t v76 = v3;
    uint64_t v77 = v1;
    uint64_t v87 = *(void (**)(uint64_t, uint64_t))(v0 + 1752);
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v0 + 1736);
    uint64_t v15 = *(unsigned int *)(v0 + 2120);
    uint64_t v16 = *(void *)(v0 + 1520);
    uint64_t v80 = *(void *)(v0 + 1480);
    *(void *)(v0 + 872) = v3;
    *(void *)(v0 + 880) = v4;
    *(void *)(v0 + 888) = v5;
    *(void *)(v0 + 896) = v6;
    *(void *)(v0 + 904) = v7;
    *(void *)(v0 + 912) = v8;
    *(void *)(v0 + 920) = v9;
    *(void *)(v0 + 928) = v10;
    uint64_t v68 = v11;
    *(void *)(v0 + 936) = v11;
    *(void *)(v0 + 944) = v12;
    *(void *)(v0 + 952) = v13;
    unint64_t v17 = v8;
    v14(v16, v15);
    uint64_t v71 = v4;
    swift_bridgeObjectRetain();
    uint64_t v18 = v5;
    uint64_t v19 = v5;
    uint64_t v20 = v7;
    unint64_t v21 = v17;
    sub_100278C78(v19, v6);
    sub_10025ADCC(v20, v17);
    uint64_t v74 = v9;
    sub_10025ADCC(v9, v10);
    swift_bridgeObjectRetain();
    char v22 = static SFAirDrop.ContactRequest.== infix(_:_:)();
    v87(v16, v80);
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    BOOL v25 = os_log_type_enabled(v23, v24);
    if (v22)
    {
      if (v25)
      {
        unint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v26 = 0;
        uint64_t v27 = v23;
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Exchange Contact IDENTITY IMPORT SKIP. User chose to only receive", v26, 2u);
        swift_slowDealloc();
        sub_100394590(v76, v71, v18, v6, v20, v21, v74, v10, v68, v12);
      }
      else
      {
        sub_100394590(v76, v71, v18, v6, v20, v21, v74, v10, v68, v12);
        uint64_t v27 = v23;
      }
LABEL_19:

      uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v0 + 1752);
      uint64_t v88 = *(void (**)(uint64_t, uint64_t))(v0 + 1624);
      uint64_t v84 = *(void *)(v0 + 1560);
      uint64_t v86 = *(void *)(v0 + 1608);
      uint64_t v53 = *(void *)(v0 + 1512);
      uint64_t v54 = *(void *)(v0 + 1480);
      uint64_t v55 = *(void *)(v0 + 1440);
      uint64_t v56 = *(void *)(v0 + 1424);
      uint64_t v57 = *(void *)(v0 + 1416);
      uint64_t v79 = *(void *)(v0 + 1304);
      uint64_t v82 = *(void *)(v0 + 1536);
      uint64_t v58 = *(void *)(v0 + 1280);
      uint64_t v59 = *(void *)(v0 + 1232);
      sub_100394590(*(void *)(v0 + 1768), *(void *)(v0 + 1776), *(void *)(v0 + 1784), *(void *)(v0 + 1792), *(void *)(v0 + 1800), *(void *)(v0 + 1808), *(void *)(v0 + 1816), *(void *)(v0 + 1824), *(void *)(v0 + 1832), *(void *)(v0 + 1840));
      sub_10039463C(v90, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100394590);
      sub_10000A7E8(v59, &qword_100970C48);
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
      v52(v53, v54);
      sub_1003956E4(v58, _s14descr1008C9A51V16ExchangeResponseVMa);
      sub_1003956E4(v79, _s14descr1008C9A51V15ExchangeRequestVMa);
      v52(v82, v54);
      v88(v86, v84);
      uint64_t v89 = *(void *)(v0 + 1952);
      uint64_t v92 = *(void *)(v0 + 1960);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v60 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
      return v60(v89, v92);
    }
    if (v25)
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Import Identity CONTINUE. Attempting identity import", v44, 2u);
      swift_slowDealloc();
    }
    uint64_t v45 = *(void *)(v0 + 1280);
    uint64_t v46 = *(void *)(v0 + 1272);

    unint64_t v47 = (uint64_t *)(v45 + *(int *)(v46 + 32));
    uint64_t v48 = *v47;
    *(void *)(v0 + 2064) = *v47;
    unint64_t v49 = v47[1];
    *(void *)(v0 + 2072) = v49;
    sub_100278C78(v48, v49);
    uint64_t v91 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))((char *)&dword_10096FF28
                                                                                       + dword_10096FF28);
    uint64_t v50 = (void *)swift_task_alloc();
    *(void *)(v0 + 2080) = v50;
    *uint64_t v50 = v0;
    v50[1] = sub_10038E0EC;
    uint64_t v51 = *(void *)(v0 + 1952);
    return v91(v0 + 872, v48, v49, v51, v77);
  }
  else
  {
    unint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Import CONTACT FAILED", v30, 2u);
      swift_slowDealloc();
    }
    long long v62 = *(_OWORD *)(v0 + 1832);
    uint64_t v65 = *(void *)(v0 + 1816);
    unint64_t v66 = *(void *)(v0 + 1824);
    unint64_t v64 = *(void *)(v0 + 1808);
    uint64_t v63 = *(void *)(v0 + 1800);
    unint64_t v61 = *(void *)(v0 + 1792);
    uint64_t v31 = *(void *)(v0 + 1784);
    uint64_t v32 = *(void *)(v0 + 1776);
    uint64_t v33 = *(void *)(v0 + 1768);
    uint64_t v73 = *(void (**)(uint64_t, uint64_t))(v0 + 1752);
    uint64_t v83 = *(void *)(v0 + 1608);
    uint64_t v85 = *(void (**)(uint64_t, uint64_t))(v0 + 1624);
    uint64_t v78 = *(void *)(v0 + 1536);
    uint64_t v81 = *(void *)(v0 + 1560);
    uint64_t v72 = *(void *)(v0 + 1512);
    uint64_t v34 = *(void *)(v0 + 1480);
    uint64_t v35 = *(void *)(v0 + 1424);
    uint64_t v67 = *(void *)(v0 + 1416);
    uint64_t v69 = *(void *)(v0 + 1440);
    uint64_t v36 = *(void *)(v0 + 1320);
    uint64_t v37 = *(void *)(v0 + 1312);
    uint64_t v75 = *(void *)(v0 + 1304);
    uint64_t v70 = *(void *)(v0 + 1280);
    uint64_t v38 = *(void *)(v0 + 1232);

    sub_100394340(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(v36 + 104))(v39, enum case for SFAirDropSend.Failure.badRequest(_:), v37);
    swift_willThrow();
    sub_100394590(v33, v32, v31, v61, v63, v64, v65, v66, v62, *((uint64_t *)&v62 + 1));
    sub_10039463C(v90, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100394590);
    sub_10000A7E8(v38, &qword_100970C48);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v69, v67);
    v73(v72, v34);
    sub_1003956E4(v70, _s14descr1008C9A51V16ExchangeResponseVMa);
    sub_1003956E4(v75, _s14descr1008C9A51V15ExchangeRequestVMa);
    v73(v78, v34);
    v85(v83, v81);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
    return v40();
  }
}

uint64_t sub_10038DD7C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[219];
  uint64_t v15 = (void (*)(uint64_t, uint64_t))v0[203];
  uint64_t v13 = v0[195];
  uint64_t v14 = v0[201];
  uint64_t v2 = v0[189];
  uint64_t v3 = v0[185];
  uint64_t v4 = v0[180];
  uint64_t v5 = v0[178];
  uint64_t v6 = v0[177];
  uint64_t v11 = v0[163];
  uint64_t v12 = v0[192];
  uint64_t v10 = v0[160];
  uint64_t v7 = v0[154];
  sub_100394590(v0[221], v0[222], v0[223], v0[224], v0[225], v0[226], v0[227], v0[228], v0[229], v0[230]);
  sub_10039463C(v0 + 120, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100394590);
  sub_10000A7E8(v7, &qword_100970C48);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v1(v2, v3);
  sub_1003956E4(v10, _s14descr1008C9A51V16ExchangeResponseVMa);
  sub_1003956E4(v11, _s14descr1008C9A51V15ExchangeRequestVMa);
  v1(v12, v3);
  v15(v14, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10038E0EC()
{
  uint64_t v2 = (void *)*v1;
  v2[261] = v0;
  swift_task_dealloc();
  unint64_t v3 = v2[259];
  uint64_t v4 = v2[258];
  if (v0)
  {
    uint64_t v5 = v2[202];
    sub_100250CB0(v4, v3);
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_10038E60C;
    uint64_t v7 = v5;
  }
  else
  {
    uint64_t v8 = v2[202];
    sub_100250CB0(v4, v3);
    uint64_t v6 = sub_10038E258;
    uint64_t v7 = v8;
  }
  return _swift_task_switch(v6, v7, 0);
}

uint64_t sub_10038E258()
{
  sub_100394590(v0[247], v0[248], v0[249], v0[250], v0[251], v0[252], v0[253], v0[254], v0[255], v0[256]);
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[219];
  uint64_t v15 = (void (*)(uint64_t, uint64_t))v0[203];
  uint64_t v13 = v0[195];
  uint64_t v14 = v0[201];
  uint64_t v2 = v0[189];
  uint64_t v3 = v0[185];
  uint64_t v4 = v0[180];
  uint64_t v5 = v0[178];
  uint64_t v6 = v0[177];
  uint64_t v11 = v0[163];
  uint64_t v12 = v0[192];
  uint64_t v7 = v0[160];
  uint64_t v8 = v0[154];
  sub_100394590(v0[221], v0[222], v0[223], v0[224], v0[225], v0[226], v0[227], v0[228], v0[229], v0[230]);
  sub_10039463C(v0 + 120, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100394590);
  sub_10000A7E8(v8, &qword_100970C48);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v1(v2, v3);
  sub_1003956E4(v7, _s14descr1008C9A51V16ExchangeResponseVMa);
  sub_1003956E4(v11, _s14descr1008C9A51V15ExchangeRequestVMa);
  v1(v12, v3);
  v15(v14, v13);
  uint64_t v16 = v0[244];
  uint64_t v17 = v0[245];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v9(v16, v17);
}

uint64_t sub_10038E60C()
{
  long long v11 = *(_OWORD *)(v0 + 1832);
  uint64_t v13 = *(void *)(v0 + 1816);
  unint64_t v14 = *(void *)(v0 + 1824);
  unint64_t v12 = *(void *)(v0 + 1808);
  uint64_t v1 = *(void *)(v0 + 1800);
  unint64_t v2 = *(void *)(v0 + 1792);
  uint64_t v3 = *(void *)(v0 + 1784);
  uint64_t v4 = *(void *)(v0 + 1776);
  uint64_t v5 = *(void *)(v0 + 1768);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v0 + 1752);
  uint64_t v23 = *(void *)(v0 + 1608);
  os_log_type_t v24 = *(void (**)(uint64_t, uint64_t))(v0 + 1624);
  uint64_t v21 = *(void *)(v0 + 1536);
  uint64_t v22 = *(void *)(v0 + 1560);
  uint64_t v6 = *(void *)(v0 + 1480);
  uint64_t v16 = *(void *)(v0 + 1440);
  uint64_t v17 = *(void *)(v0 + 1512);
  uint64_t v7 = *(void *)(v0 + 1424);
  uint64_t v15 = *(void *)(v0 + 1416);
  uint64_t v20 = *(void *)(v0 + 1304);
  uint64_t v18 = *(void *)(v0 + 1280);
  uint64_t v8 = *(void *)(v0 + 1232);
  sub_100394590(*(void *)(v0 + 1976), *(void *)(v0 + 1984), *(void *)(v0 + 1992), *(void *)(v0 + 2000), *(void *)(v0 + 2008), *(void *)(v0 + 2016), *(void *)(v0 + 2024), *(void *)(v0 + 2032), *(void *)(v0 + 2040), *(void *)(v0 + 2048));
  sub_100394590(v5, v4, v3, v2, v1, v12, v13, v14, v11, *((uint64_t *)&v11 + 1));
  sub_10039463C((void *)(v0 + 960), (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100394590);
  sub_10000A7E8(v8, &qword_100970C48);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v16, v15);
  v19(v17, v6);
  sub_1003956E4(v18, _s14descr1008C9A51V16ExchangeResponseVMa);
  sub_1003956E4(v20, _s14descr1008C9A51V15ExchangeRequestVMa);
  v19(v21, v6);
  v24(v23, v22);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_10038E9F8()
{
  return _swift_task_switch(sub_10038EA14, *(void *)(v0 + 1616), 0);
}

uint64_t sub_10038EA14()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[203];
  uint64_t v2 = v0[201];
  uint64_t v3 = v0[195];
  uint64_t v4 = v0[181];
  uint64_t v5 = v0[178];
  uint64_t v6 = v0[177];
  uint64_t v7 = v0[173];
  uint64_t v8 = v0[162];
  swift_task_dealloc();
  sub_10000A7E8(v7, &qword_100970C58);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v1(v2, v3);
  sub_1003956E4(v8, _s14descr1008C9A51V15ExchangeRequestVMa);
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void, void))v0[1];
  return v9(0, 0);
}

uint64_t sub_10038ECF0()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[219];
  uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[203];
  uint64_t v2 = v0[201];
  uint64_t v3 = v0[195];
  uint64_t v4 = v0[192];
  uint64_t v5 = v0[185];
  uint64_t v6 = v0[163];
  sub_100394590(v0[221], v0[222], v0[223], v0[224], v0[225], v0[226], v0[227], v0[228], v0[229], v0[230]);
  sub_10039463C(v0 + 120, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100394590);
  sub_1003956E4(v6, _s14descr1008C9A51V15ExchangeRequestVMa);
  v1(v4, v5);
  v9(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10038EFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  uint64_t v6 = sub_10000A844(&qword_100970D98);
  v5[9] = v6;
  v5[10] = *(void *)(v6 - 8);
  v5[11] = swift_task_alloc();
  v5[12] = _s14descr1008C9841V12ErrorRequestVMa();
  v5[13] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  v5[14] = static AirDropActor.shared;
  return _swift_task_switch(sub_10038F134, v7, 0);
}

uint64_t sub_10038F134()
{
  uint64_t v1 = (void *)v0[5];
  if (v1)
  {
    if ((v0[6] & 0xFF00000000) != 0x300000000 && (v0[6] & 4) != 0)
    {
      uint64_t v10 = v0[12];
      uint64_t v9 = v0[13];
      uint64_t v11 = v0[7];
      v1;
      SFAirDropSend.Request.id.getter();
      uint64_t v12 = v9 + *(int *)(v10 + 20);
      uint64_t v13 = type metadata accessor for CodableError();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v12, v11, v13);
      sub_1002EE26C(v9);
      unint64_t v14 = (void *)swift_task_alloc();
      v0[15] = v14;
      void *v14 = v0;
      v14[1] = sub_10038F364;
      uint64_t v15 = v0[9];
      return SFProgressTask.finalValue.getter(v0 + 2, v15);
    }
    id v3 = v1;
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "No HELLO response present with .errorMessage support", v6, 2u);
      swift_slowDealloc();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10038F364()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 112);
  if (v0)
  {
    swift_errorRelease();
    uint64_t v4 = sub_10038F560;
  }
  else
  {
    uint64_t v4 = sub_10038F49C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10038F49C()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 72);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1003956E4(v1, (uint64_t (*)(void))_s14descr1008C9841V12ErrorRequestVMa);
  sub_100250CC4(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_10038F560()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 72);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1003956E4(v1, (uint64_t (*)(void))_s14descr1008C9841V12ErrorRequestVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_10038F61C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = sub_10000A844(&qword_100970DE0);
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return _swift_task_switch(sub_10038F6E4, 0, 0);
}

uint64_t sub_10038F6E4()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v0 = static AirDropActor.shared;
  return _swift_task_switch(sub_10038F77C, v0, 0);
}

uint64_t sub_10038F77C()
{
  sub_1002E93F4(v0[4], v0[7]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10038F828;
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[2];
  return SFProgressTask.finalValue.getter(v3, v2);
}

uint64_t sub_10038F828()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 56);
  uint64_t v3 = *(void *)(*(void *)v1 + 48);
  uint64_t v4 = *(void *)(*(void *)v1 + 40);
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_10038F9FC;
  }
  else {
    uint64_t v5 = sub_10038F998;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10038F998()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10038F9FC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10038FA60@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v99 = a1;
  uint64_t v96 = a3;
  uint64_t v4 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v4 - 8);
  uint64_t v95 = (char *)v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  __chkstk_darwin(v6 - 8);
  uint64_t v91 = (char *)v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  __chkstk_darwin(v8 - 8);
  uint64_t v90 = (char *)v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000A844((uint64_t *)&unk_1009723F0);
  uint64_t v93 = *(void *)(v10 - 8);
  uint64_t v94 = v10;
  __chkstk_darwin(v10);
  uint64_t v105 = (char *)v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for SFAirDrop.ContactInfo.Handle();
  unint64_t v77 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v78 = (char *)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for SFAirDrop.ContactRequest();
  uint64_t v88 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v73 = (char *)v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_10000A844(&qword_100970CD8);
  uint64_t v92 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v98 = (char *)v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for SFAirDrop.ButtonConfiguration();
  uint64_t v15 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v17 = (void *)((char *)v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v103 = type metadata accessor for SFAirDrop.DeclineAction();
  uint64_t v89 = *(void *)(v103 - 8);
  uint64_t v18 = __chkstk_darwin(v103);
  uint64_t v84 = (char *)v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v106 = (char *)v71 - v20;
  uint64_t v21 = sub_10000A844(&qword_100970CE0);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void *)(v22 + 64);
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)v71 - v26;
  unint64_t v97 = 0xD000000000000017;
  SFProgressContinuation.init(_:initialProgress:file:line:)();
  *uint64_t v17 = 0x776F4E20746F4ELL;
  v17[1] = 0xE700000000000000;
  LODWORD(v74) = enum case for SFAirDrop.ButtonConfiguration.text(_:);
  unint64_t v28 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 104);
  uint64_t v75 = v15 + 104;
  uint64_t v81 = v28;
  ((void (*)(void *))v28)(v17);
  int v72 = ~a2;
  uint64_t v100 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  v100(v25, v27, v21);
  uint64_t v29 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v85 = v23;
  uint64_t v82 = ((v29 + 16) & ~v29) + v23;
  uint64_t v83 = (v29 + 16) & ~v29;
  uint64_t v101 = v29;
  uint64_t v30 = v29 | 7;
  uint64_t v31 = swift_allocObject() + v83;
  uint64_t v87 = v22;
  uint64_t v32 = *(void (**)(uint64_t, char *, uint64_t))(v22 + 32);
  v32(v31, v25, v21);
  uint64_t v33 = v25;
  SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)();
  v71[1] = v17;
  *uint64_t v17 = 0x6572616853;
  v17[1] = 0xE500000000000000;
  v81((uint64_t)v17, (char *)v74, v79);
  uint64_t v34 = type metadata accessor for SFAirDrop.ContactInfo();
  uint64_t v35 = v73;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v73, v99, v34);
  (*(void (**)(char *, void, uint64_t))(v88 + 104))(v35, enum case for SFAirDrop.ContactRequest.contact(_:), v102);
  uint64_t v79 = v22 + 16;
  v100(v33, v27, v21);
  uint64_t v82 = v30;
  uint64_t v36 = swift_allocObject() + v83;
  uint64_t v88 = v21;
  uint64_t v83 = v22 + 32;
  uint64_t v81 = v32;
  v32(v36, v33, v21);
  uint64_t v37 = v98;
  sub_100394340(&qword_100970CE8, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest);
  uint64_t v38 = sub_100394340(&qword_100970CF0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest);
  uint64_t v74 = sub_100394340(&qword_100970CF8, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest);
  uint64_t v75 = v38;
  SFAirDrop.AcceptAction.Single.init(id:buttonConfiguration:prominent:hidden:defaultAnswer:operation:)();
  uint64_t v39 = (void (**)(char *, uint64_t))(v77 + 8);
  uint64_t v86 = v27;
  uint64_t v76 = v33;
  if (v72)
  {
    uint64_t v107 = SFAirDrop.ContactInfo.fullName.getter();
    uint64_t v108 = v47;
    v48._countAndFlagsBits = 10;
    v48._object = (void *)0xE100000000000000;
    String.append(_:)(v48);
    unint64_t v49 = v78;
    SFAirDrop.ContactInfo.handle.getter();
    sub_100394340(&qword_100970CA8, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactInfo.Handle);
    uint64_t v50 = v80;
    v51._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v51);
    swift_bridgeObjectRelease();
    (*v39)(v49, v50);
    uint64_t v80 = v107;
    uint64_t v78 = v108;
    uint64_t v46 = "Exchange Contact Cards?";
  }
  else
  {
    uint64_t v107 = SFAirDrop.ContactInfo.fullName.getter();
    uint64_t v108 = v40;
    v41._countAndFlagsBits = 10272;
    v41._object = (void *)0xE200000000000000;
    String.append(_:)(v41);
    os_log_type_t v42 = v78;
    SFAirDrop.ContactInfo.handle.getter();
    sub_100394340(&qword_100970CA8, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactInfo.Handle);
    uint64_t v43 = v80;
    v44._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v44);
    swift_bridgeObjectRelease();
    (*v39)(v42, v43);
    v45._countAndFlagsBits = 41;
    v45._object = (void *)0xE100000000000000;
    String.append(_:)(v45);
    uint64_t v80 = v107;
    uint64_t v78 = v108;
    unint64_t v97 = 0xD00000000000001FLL;
    uint64_t v46 = "Share Your Contact Information?";
  }
  unint64_t v77 = (unint64_t)(v46 - 32) | 0x8000000000000000;
  uint64_t v99 = ~v101;
  UUID.init()();
  static Date.now.getter();
  sub_10000A844(&qword_100970D00);
  uint64_t v52 = sub_10000A844(&qword_100970D08);
  uint64_t v53 = *(void *)(v52 - 8);
  unint64_t v54 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_10076E7A0;
  unint64_t v56 = v55 + v54;
  sub_10000A844(&qword_100970D10);
  uint64_t v57 = v92;
  (*(void (**)(unint64_t, char *, uint64_t))(v92 + 16))(v56, v37, v104);
  UUID.init()();
  (*(void (**)(unint64_t, void, uint64_t))(v53 + 104))(v56, enum case for SFAirDrop.AcceptAction.single<A>(_:), v52);
  uint64_t v58 = v89;
  (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v84, v106, v103);
  SFAirDrop.PermissionRequest.init(id:requestDate:title:prompt:acceptActions:declineAction:isAnswered:)();
  uint64_t v59 = type metadata accessor for TaskPriority();
  uint64_t v60 = (uint64_t)v95;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v95, 1, 1, v59);
  unint64_t v61 = v76;
  long long v62 = v86;
  uint64_t v63 = v88;
  v100(v76, v86, v88);
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v64 = static AirDropActor.shared;
  uint64_t v65 = sub_100394340((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v66 = (v101 + 32) & v99;
  uint64_t v67 = swift_allocObject();
  *(void *)(v67 + 16) = v64;
  *(void *)(v67 + 24) = v65;
  v81(v67 + v66, v61, v63);
  swift_retain();
  uint64_t v68 = sub_10028CC74(v60, (uint64_t)&unk_100970D20, v67);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v98, v104);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v106, v103);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v62, v63);
  uint64_t v69 = v96;
  (*(void (**)(uint64_t, char *, uint64_t))(v93 + 32))(v96, v105, v94);
  uint64_t result = sub_10000A844(&qword_100970C58);
  *(void *)(v69 + *(int *)(result + 52)) = v68;
  return result;
}

uint64_t sub_1003908A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_1003908C8, 0, 0);
}

uint64_t sub_1003908C8()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v0 = static AirDropActor.shared;
  return _swift_task_switch(sub_100390960, v0, 0);
}

uint64_t sub_100390960()
{
  sub_1002EC8E0(*(void *)(v0 + 32));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003909C8@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  char v3 = a2;
  LODWORD(v76) = a2;
  uint64_t v82 = a1;
  uint64_t v94 = a3;
  uint64_t v4 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v4 - 8);
  uint64_t v93 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  __chkstk_darwin(v6 - 8);
  uint64_t v89 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  __chkstk_darwin(v8 - 8);
  uint64_t v87 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000A844((uint64_t *)&unk_10097C390);
  uint64_t v91 = *(void *)(v10 - 8);
  uint64_t v92 = v10;
  __chkstk_darwin(v10);
  uint64_t v100 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for SFAirDrop.ContactInfo.Handle();
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v70 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_10000A844(&qword_100970CA0);
  uint64_t v90 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v95 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = (void (*)(uint64_t, char *, uint64_t))type metadata accessor for SFAirDrop.ButtonConfiguration();
  uint64_t v14 = *((void *)v79 - 1);
  __chkstk_darwin(v79);
  uint64_t v16 = (uint64_t *)((char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v98 = type metadata accessor for SFAirDrop.DeclineAction();
  uint64_t v88 = *(void *)(v98 - 8);
  uint64_t v17 = __chkstk_darwin(v98);
  uint64_t v83 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v101 = (char *)&v69 - v19;
  uint64_t v20 = sub_10000A844((uint64_t *)&unk_10096BAA0);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(void *)(v21 + 64);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v69 - v25;
  uint64_t v96 = (char *)&v69 - v25;
  SFProgressContinuation.init(_:initialProgress:file:line:)();
  uint64_t v27 = 0x6574656C6544;
  if (v3) {
    uint64_t v27 = 0x656E696C636544;
  }
  unint64_t v28 = 0xE700000000000000;
  if ((v3 & 1) == 0) {
    unint64_t v28 = 0xE600000000000000;
  }
  *uint64_t v16 = v27;
  v16[1] = v28;
  LODWORD(v77) = enum case for SFAirDrop.ButtonConfiguration.text(_:);
  uint64_t v29 = *(void (**)(void))(v14 + 104);
  uint64_t v78 = v14 + 104;
  uint64_t v80 = (void (*)(uint64_t *, void, void *))v29;
  uint64_t v30 = 1885693259;
  if (v3) {
    uint64_t v30 = 0x747065636341;
  }
  uint64_t v81 = v30;
  unint64_t v31 = 0xE400000000000000;
  if (v3) {
    unint64_t v31 = 0xE600000000000000;
  }
  unint64_t v75 = v31;
  v29(v16);
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  v32(v24, v26, v20);
  uint64_t v33 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v34 = (v33 + 16) & ~v33;
  uint64_t v84 = v22;
  uint64_t v73 = v34 + v22;
  uint64_t v97 = v33;
  uint64_t v35 = v33 | 7;
  uint64_t v36 = swift_allocObject();
  uint64_t v85 = v21;
  uint64_t v37 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 32);
  v37(v36 + v34, v24, v20);
  SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)();
  uint64_t v38 = v16;
  unint64_t v74 = (unint64_t)v16;
  unint64_t v39 = v75;
  *uint64_t v16 = v81;
  v16[1] = v39;
  uint64_t v40 = v95;
  v80(v38, v77, v79);
  LOBYTE(v102) = 1;
  uint64_t v78 = v21 + 16;
  unint64_t v77 = v32;
  v32(v24, v96, v20);
  uint64_t v80 = (void (*)(uint64_t *, void, void *))v35;
  uint64_t v41 = swift_allocObject();
  uint64_t v81 = v21 + 32;
  uint64_t v79 = v37;
  v37(v41 + v34, v24, v20);
  SFAirDrop.AcceptAction.Single.init(id:buttonConfiguration:prominent:hidden:defaultAnswer:operation:)();
  uint64_t v86 = v20;
  os_log_type_t v42 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v76)
  {
    uint64_t v73 = SFAirDrop.ContactInfo.fullName.getter();
    unint64_t v74 = v43;
    unint64_t v76 = 0xD000000000000013;
    unint64_t v44 = 0x80000001007BAEF0;
    Swift::String v45 = &v105;
  }
  else
  {
    uint64_t v102 = SFAirDrop.ContactInfo.fullName.getter();
    unint64_t v103 = v46;
    v47._countAndFlagsBits = 10;
    v47._object = (void *)0xE100000000000000;
    String.append(_:)(v47);
    Swift::String v48 = v70;
    SFAirDrop.ContactInfo.handle.getter();
    sub_100394340(&qword_100970CA8, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactInfo.Handle);
    uint64_t v49 = v72;
    v50._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v50);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v48, v49);
    unint64_t v76 = v102;
    unint64_t v75 = v103;
    unint64_t v74 = 0x80000001007BAED0;
    unint64_t v44 = 0xD000000000000012;
    Swift::String v45 = &v104;
  }
  *(v45 - 32) = v44;
  uint64_t v82 = ~v97;
  UUID.init()();
  static Date.now.getter();
  sub_10000A844(&qword_100970CB0);
  uint64_t v51 = sub_10000A844(&qword_100970CB8);
  uint64_t v52 = *(void *)(v51 - 8);
  unint64_t v53 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_10076E7A0;
  unint64_t v55 = v54 + v53;
  sub_10000A844(&qword_100970CC0);
  uint64_t v56 = v90;
  (*(void (**)(unint64_t, char *, uint64_t))(v90 + 16))(v55, v40, v99);
  UUID.init()();
  (*(void (**)(unint64_t, void, uint64_t))(v52 + 104))(v55, enum case for SFAirDrop.AcceptAction.single<A>(_:), v51);
  uint64_t v57 = v88;
  (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v83, v101, v98);
  SFAirDrop.PermissionRequest.init(id:requestDate:title:prompt:acceptActions:declineAction:isAnswered:)();
  uint64_t v58 = type metadata accessor for TaskPriority();
  uint64_t v59 = (uint64_t)v93;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v93, 1, 1, v58);
  uint64_t v60 = v96;
  uint64_t v61 = v86;
  v77(v42, v96, v86);
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v62 = static AirDropActor.shared;
  uint64_t v63 = sub_100394340((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v64 = (v97 + 32) & v82;
  uint64_t v65 = swift_allocObject();
  *(void *)(v65 + 16) = v62;
  *(void *)(v65 + 24) = v63;
  v79(v65 + v64, v42, v61);
  swift_retain();
  uint64_t v66 = sub_10028CE18(v59, (uint64_t)&unk_100970CD0, v65);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v95, v99);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v101, v98);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v60, v61);
  uint64_t v67 = v94;
  (*(void (**)(uint64_t, char *, uint64_t))(v91 + 32))(v94, v100, v92);
  uint64_t result = sub_10000A844(&qword_100970C48);
  *(void *)(v67 + *(int *)(result + 52)) = v66;
  return result;
}

uint64_t sub_100391634()
{
  uint64_t v0 = type metadata accessor for SFAirDropSend.Failure();
  sub_100394340(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 - 8) + 104))(v1, enum case for SFAirDropSend.Failure.cancelled(_:), v0);
  sub_10000A844(&qword_100970CE0);
  SFProgressContinuation.fail(with:)();

  return swift_errorRelease();
}

uint64_t sub_10039171C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  uint64_t v5 = sub_10000A844(&qword_100970D28);
  v4[4] = v5;
  v4[5] = *(void *)(v5 - 8);
  v4[6] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v4[7] = static AirDropActor.shared;
  return _swift_task_switch(sub_10039181C, v6, 0);
}

uint64_t sub_10039181C()
{
  sub_10000A844(&qword_100970CE0);
  SFProgressContinuation.task.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1003918D8;
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  return SFProgressTask.finalValue.getter(v3, v2);
}

uint64_t sub_1003918D8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 48);
  uint64_t v4 = *(void *)(*v1 + 40);
  uint64_t v5 = *(void *)(*v1 + 32);
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v7 = sub_100391AC4;
  }
  else {
    uint64_t v7 = sub_100391A60;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_100391A60()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100391AC4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100391B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  uint64_t v5 = sub_10000A844(&qword_10096BB98);
  v4[4] = v5;
  v4[5] = *(void *)(v5 - 8);
  v4[6] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v4[7] = static AirDropActor.shared;
  return _swift_task_switch(sub_100391C28, v6, 0);
}

uint64_t sub_100391C28()
{
  sub_10000A844((uint64_t *)&unk_10096BAA0);
  SFProgressContinuation.task.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100391CE4;
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  return SFProgressTask.finalValue.getter(v3, v2);
}

uint64_t sub_100391CE4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 48);
  uint64_t v4 = *(void *)(*v1 + 40);
  uint64_t v5 = *(void *)(*v1 + 32);
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v7 = sub_100396ED4;
  }
  else {
    uint64_t v7 = sub_100396ED8;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_100391E6C()
{
  uint64_t v0 = type metadata accessor for SFAirDropSend.Failure();
  sub_100394340(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 - 8) + 104))(v1, enum case for SFAirDropSend.Failure.cancelled(_:), v0);
  sub_10000A844(&qword_10096CC68);
  SFProgressTask.cancel(_:)();

  return swift_errorRelease();
}

uint64_t sub_100391F54()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = (void *)result;
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, result + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_log, v0);

    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Accepted intervention via permission request", v8, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return result;
}

uint64_t sub_1003920E0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v56 = a1;
  uint64_t v3 = sub_10000A844(&qword_10096D8B8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v57 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v50 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v50 - v13;
  uint64_t v15 = type metadata accessor for SFAirDrop.TransferType();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  SFAirDropSend.Request.type.getter();
  char v19 = SFAirDrop.TransferType.isOnlyExchange.getter();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (v19) {
    return result;
  }
  uint64_t v51 = v12;
  uint64_t v52 = v9;
  uint64_t v21 = (uint64_t)v14;
  uint64_t v55 = v2;
  uint64_t v53 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints;
  swift_retain();
  CurrentValueSubject.value.getter();
  uint64_t v22 = swift_release();
  uint64_t v23 = v59[2];
  __chkstk_darwin(v22);
  uint64_t v24 = v56;
  *(&v50 - 2) = v56;
  sub_1003D8D24((uint64_t (*)(char *))sub_10039304C, v23, (uint64_t)v5);
  swift_bridgeObjectRelease();
  uint64_t v25 = v57;
  int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48))(v5, 1, v6);
  uint64_t v27 = v25;
  uint64_t v54 = v6;
  if (v26 == 1)
  {
    sub_10000A7E8((uint64_t)v5, &qword_10096D8B8);
LABEL_8:
    uint64_t v36 = (uint64_t)v52;
    sub_100394298(v24, (uint64_t)v52, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, v38))
    {
      unint64_t v39 = (uint8_t *)swift_slowAlloc();
      v59[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v39 = 136315138;
      uint64_t v40 = sub_100315DA0();
      uint64_t v58 = sub_100254634(v40, v41, v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1003956E4(v36, type metadata accessor for SDAirDropDiscoveredEndpoint);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Adding connectable endpoint to runner endpoints %s", v39, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v27 = v57;
      swift_slowDealloc();
    }
    else
    {

      sub_1003956E4(v36, type metadata accessor for SDAirDropDiscoveredEndpoint);
    }
    sub_10000A844(&qword_10096B4F8);
    unint64_t v42 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_10076E7A0;
    sub_100394298(v24, v43 + v42, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100259800(v43);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    swift_retain();
    CurrentValueSubject.value.getter();
    swift_release();
    uint64_t v44 = v59[0];
    swift_retain();
    uint64_t v45 = swift_bridgeObjectRetain();
    uint64_t v58 = sub_1006CC3B0(v45, v44);
    CurrentValueSubject.send(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  sub_1003940A4((uint64_t)v5, v21, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v28 = sub_10031B09C();
  if (sub_10031B09C() >= v28)
  {
    sub_1003956E4(v21, type metadata accessor for SDAirDropDiscoveredEndpoint);
    goto LABEL_8;
  }
  uint64_t v29 = (uint64_t)v51;
  sub_100394298(v24, (uint64_t)v51, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = v24;
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    v59[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136315138;
    uint64_t v53 = (uint64_t)(v33 + 4);
    uint64_t v34 = sub_100315DA0();
    uint64_t v58 = sub_100254634(v34, v35, v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1003956E4(v29, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Adding connectable endpoint to backup endpoints %s", v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v24 = v32;
    swift_slowDealloc();
  }
  else
  {

    sub_1003956E4(v29, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  sub_10000A844(&qword_10096B4F8);
  unint64_t v46 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_10076E7A0;
  sub_100394298(v24, v47 + v46, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_100259800(v47);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_retain();
  CurrentValueSubject.value.getter();
  swift_release();
  uint64_t v48 = v59[0];
  swift_retain();
  uint64_t v49 = swift_bridgeObjectRetain();
  uint64_t v58 = sub_1006CC3B0(v49, v48);
  CurrentValueSubject.send(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_1003956E4(v21, type metadata accessor for SDAirDropDiscoveredEndpoint);
}

uint64_t sub_100392928(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v13 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (id *)((char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v18 = (id *)((char *)&v31 - v17);
  sub_100394298(a1, (uint64_t)&v31 - v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1003940A4((uint64_t)v18, (uint64_t)v6, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      uint64_t v22 = (uint64_t *)&v6[*(int *)(v4 + 28)];
      uint64_t device_id = *v22;
      uint64_t v21 = v22[1];
      swift_bridgeObjectRetain();
      uint64_t v23 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
      uint64_t v24 = (uint64_t)v6;
      goto LABEL_11;
    case 2u:
      sub_1003956E4((uint64_t)v18, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      goto LABEL_7;
    case 3u:

LABEL_7:
      uint64_t device_id = 0;
      uint64_t v21 = 0;
      break;
    default:
      sub_1003940A4((uint64_t)v18, (uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      if (!NWEndpoint.nw.getter())
      {
        __break(1u);
LABEL_35:
        __break(1u);
        JUMPOUT(0x100392DBCLL);
      }
      uint64_t device_id = nw_endpoint_get_device_id();
      swift_unknownObjectRelease();
      if (device_id)
      {
        uint64_t device_id = String.init(cString:)();
        uint64_t v21 = v20;
      }
      else
      {
        uint64_t v21 = 0;
      }
      uint64_t v23 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
      uint64_t v24 = (uint64_t)v12;
LABEL_11:
      sub_1003956E4(v24, v23);
      break;
  }
  sub_100394298(a2, (uint64_t)v16, type metadata accessor for SDAirDropDiscoveredEndpoint);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1003940A4((uint64_t)v16, (uint64_t)v6, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      uint64_t v28 = (uint64_t *)&v6[*(int *)(v4 + 28)];
      uint64_t v25 = *v28;
      uint64_t v27 = v28[1];
      swift_bridgeObjectRetain();
      sub_1003956E4((uint64_t)v6, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      if (v21) {
        goto LABEL_21;
      }
      goto LABEL_29;
    case 2u:
      sub_1003956E4((uint64_t)v16, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
      goto LABEL_18;
    case 3u:

LABEL_18:
      uint64_t v25 = 0;
      uint64_t v27 = 0;
      if (!v21) {
        goto LABEL_29;
      }
      goto LABEL_21;
    default:
      sub_1003940A4((uint64_t)v16, (uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      if (!NWEndpoint.nw.getter()) {
        goto LABEL_35;
      }
      uint64_t v25 = nw_endpoint_get_device_id();
      swift_unknownObjectRelease();
      if (v25)
      {
        uint64_t v25 = String.init(cString:)();
        uint64_t v27 = v26;
      }
      else
      {
        uint64_t v27 = 0;
      }
      sub_1003956E4((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      if (v21)
      {
LABEL_21:
        if (v27)
        {
          if (device_id == v25 && v21 == v27)
          {
            swift_bridgeObjectRelease();
            char v29 = 1;
          }
          else
          {
            char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          char v29 = 0;
        }
        goto LABEL_31;
      }
LABEL_29:
      if (v27)
      {
        char v29 = 0;
LABEL_31:
        swift_bridgeObjectRelease();
        return v29 & 1;
      }
      char v29 = 1;
      return v29 & 1;
  }
}

uint64_t sub_100392DDC()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_10000A7E8(v0 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner____lazy_storage___senderContact, &qword_100970BB0);
}

uint64_t sub_100392F00()
{
  return _s6RunnerCMa(0);
}

uint64_t _s6RunnerCMa(uint64_t a1)
{
  return sub_10000B93C(a1, (uint64_t *)&unk_100970B90);
}

void sub_100392F28()
{
  sub_100392FF0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100392FF0()
{
  if (!qword_100970BA0)
  {
    sub_100247840(&qword_100970BA8);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100970BA0);
    }
  }
}

uint64_t sub_10039304C(uint64_t a1)
{
  return sub_100392928(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_10039306C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  uint64_t v23 = a1;
  uint64_t v10 = sub_10000A844(&qword_100970E08);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v28[3] = _s6RunnerCMa(0);
  v28[4] = &off_1008D7FA0;
  v28[0] = a5;
  swift_defaultActor_initialize();
  uint64_t v13 = a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askContinuation;
  uint64_t v14 = sub_10000A844(&qword_100970E10);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v26(v13, 1, 1, v14);
  *(void *)(a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askTasks) = &_swiftEmptySetSingleton;
  *(void *)(a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_failedResolveEndpointIDs) = &_swiftEmptySetSingleton;
  *(void *)(a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_needsFallbackDeviceIDs) = &_swiftEmptySetSingleton;
  *(unsigned char *)(a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_pipelinedUploadAvailable) = 1;
  uint64_t v15 = a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_sendRequest;
  uint64_t v16 = type metadata accessor for SFAirDropSend.Request();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, a1, v16);
  uint64_t v18 = a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_initialTransfer;
  uint64_t v19 = type metadata accessor for SFAirDropSend.Transfer();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v18, a2, v19);
  *(void *)(a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_endpointService) = v24;
  *(void *)(a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_deviceStatus) = v25;
  sub_100278C8C((uint64_t)v28, a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_runner);
  uint64_t v27 = 0;
  sub_10000A844(&qword_100970E18);
  sub_10000A844(&qword_100970E20);
  SFProgressContinuation.init(_:initialProgress:file:line:)();
  sub_10024D338((uint64_t)v28);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a2, v19);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v23, v16);
  v26((uint64_t)v12, 0, 1, v14);
  uint64_t v21 = a6 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askContinuation;
  swift_beginAccess();
  sub_10026B410((uint64_t)v12, v21, &qword_100970E08);
  swift_endAccess();
  return a6;
}

uint64_t sub_1003933C8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_1003933E8, 0, 0);
}

uint64_t sub_1003933E8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 + *(int *)(sub_10000A844(&qword_100970C48) + 52));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v3;
  uint64_t v4 = sub_10000A844(&qword_10096BAF0);
  *uint64_t v3 = v0;
  v3[1] = sub_1003934C8;
  return Task.value.getter(v0 + 48, v2, &type metadata for Bool, v4, &protocol self-conformance witness table for Error);
}

uint64_t sub_1003934C8()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100393600;
  }
  else {
    uint64_t v2 = sub_1003935DC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003935DC()
{
  **(unsigned char **)(v0 + 16) = *(unsigned char *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100393600()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100393618(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  uint64_t v62 = a8;
  uint64_t v63 = a6;
  uint64_t v65 = a5;
  uint64_t v66 = a4;
  uint64_t v69 = a2;
  uint64_t v52 = a14;
  uint64_t v58 = a13;
  uint64_t v59 = a1;
  uint64_t v60 = a11;
  uint64_t v61 = a12;
  uint64_t v49 = a10;
  uint64_t v57 = type metadata accessor for Logger();
  uint64_t v55 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v56 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for SFAirDropSend.Transfer();
  uint64_t v54 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v53 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for SFAirDrop.TransferType();
  uint64_t v19 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for SFAirDropSend.Request();
  uint64_t v22 = *(void *)(v51 - 8);
  uint64_t v23 = __chkstk_darwin(v51);
  uint64_t v25 = (char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v47 - v26;
  uint64_t v28 = v14;
  uint64_t v68 = a3;
  uint64_t v64 = a7;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    sub_1002CC590((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    char v29 = &_swiftEmptySetSingleton;
  }
  *(void *)&v28[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_sendConnections] = v29;
  *(void *)&v28[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_selectedConnection] = 0;
  *(void *)&v28[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_urls] = 0;
  uint64_t v30 = &v28[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner____lazy_storage___senderContact];
  uint64_t v31 = sub_10000A844(&qword_100970BA8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 1, 1, v31);
  *(void *)&v28[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_pseudonymService] = a9;
  uint64_t v32 = v49;
  *(void *)&v28[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_nearbyAgent] = v49;
  uint64_t v33 = v52;
  *(void *)&v28[OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_endpointService] = v52;
  swift_retain();
  id v34 = v32;
  id v35 = v33;

  static SFAirDrop.TransferType.transferType(for:)();
  uint64_t v48 = v27;
  SFAirDropSend.Request.requestWithType(_:)();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v50);
  uint64_t v36 = v22;
  uint64_t v37 = v51;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v25, v27, v51);
  uint64_t v38 = (uint64_t)v53;
  uint64_t v39 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v53, v68, v67);
  uint64_t v41 = v55;
  uint64_t v40 = (uint64_t)v56;
  uint64_t v42 = v65;
  uint64_t v43 = v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v56, v65, v57);
  id v44 = sub_100323F2C(v59, v62, (uint64_t)v25, v38, v63, v64, v60, v61, v58, v40);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v43);
  sub_10000A7E8(v66, &qword_100970BA8);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v68, v67);
  uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
  v45(v69, v37);
  v45((uint64_t)v48, v37);
  return v44;
}

void sub_100393AF8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  uint64_t v19 = 0;
  int64_t v4 = 0;
  uint64_t v20 = a3 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a3 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v8) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v20 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v8) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v20 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v8) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v20 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_5:
    id v11 = *(id *)(*(void *)(a3 + 48) + 8 * v10);
    char v12 = static NSObject.== infix(_:_:)();

    if ((v12 & 1) == 0)
    {
      *(unint64_t *)((char *)a1 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      if (__OFADD__(v19++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_1007075F4(a1, a2, v19, a3);
        return;
      }
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v8) {
    goto LABEL_24;
  }
  unint64_t v14 = *(void *)(v20 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v8) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v20 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_100393CD4(uint64_t a1, void *a2)
{
  char v4 = *(unsigned char *)(a1 + 32);
  unsigned int v5 = v4 & 0x3F;
  unint64_t v6 = (unint64_t)((1 << v4) + 63) >> 6;
  uint64_t isStackAllocationSafe = a2;
  int64_t v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    unint64_t v9 = (char *)&v17 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v9, 8 * v6);
    id v10 = v8;
    sub_100393AF8((unint64_t *)v9, v6, a1);
    uint64_t v12 = v11;
    swift_release();

    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    int64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, 8 * v6);
    id v14 = v8;
    sub_100393AF8((unint64_t *)v13, v6, a1);
    uint64_t v12 = v15;
    swift_release();

    swift_slowDealloc();
  }
  return v12;
}

Swift::Int sub_100393E88(uint64_t a1, void *a2)
{
  swift_getObjectType();
  if ((a1 & 0xC000000000000001) == 0) {
    return sub_100393CD4(a1, a2);
  }
  id v4 = a2;
  __CocoaSet.makeIterator()();
  while (__CocoaSet.Iterator.next()())
  {
    swift_dynamicCast();
    if (static NSObject.== infix(_:_:)())
    {
    }
    else
    {
      unint64_t v5 = *((void *)&_swiftEmptySetSingleton + 2);
      if (*((void *)&_swiftEmptySetSingleton + 3) <= v5) {
        sub_10059A5E0(v5 + 1);
      }
      Swift::Int result = NSObject._rawHashValue(seed:)(*((void *)&_swiftEmptySetSingleton + 5));
      unint64_t v7 = (char *)&_swiftEmptySetSingleton + 56;
      uint64_t v8 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
      unint64_t v9 = result & ~v8;
      unint64_t v10 = v9 >> 6;
      if (((-1 << v9) & ~*((void *)&_swiftEmptySetSingleton + (v9 >> 6) + 7)) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v9) & ~*((void *)&_swiftEmptySetSingleton + (v9 >> 6) + 7))) | v9 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v12 = 0;
        unint64_t v13 = (unint64_t)(63 - v8) >> 6;
        do
        {
          if (++v10 == v13 && (v12 & 1) != 0)
          {
            __break(1u);
            return result;
          }
          BOOL v14 = v10 == v13;
          if (v10 == v13) {
            unint64_t v10 = 0;
          }
          v12 |= v14;
          uint64_t v15 = *(void *)&v7[8 * v10];
        }
        while (v15 == -1);
        unint64_t v11 = __clz(__rbit64(~v15)) + (v10 << 6);
      }
      *(void *)&v7[(v11 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v11;
      *(void *)(*((void *)&_swiftEmptySetSingleton + 6) + 8 * v11) = v16;
      ++*((void *)&_swiftEmptySetSingleton + 2);
    }
  }

  swift_release();
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_1003940A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10039410C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v11 = v2[6];
  uint64_t v10 = v2[7];
  char v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *char v12 = v3;
  v12[1] = sub_10000A6F0;
  return sub_10037F270(a1, a2, v6, v7, v8, v9, v11, v10);
}

uint64_t sub_1003941E8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  return sub_100377EB4(a1, a2, v6);
}

uint64_t sub_100394298(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_100394300()
{
  unint64_t result = qword_10096AC60;
  if (!qword_10096AC60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10096AC60);
  }
  return result;
}

uint64_t sub_100394340(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100394388(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  return sub_10053A068(a1, v4);
}

void sub_100394428()
{
  sub_10053A194(*(void *)(v0 + 16));
}

uint64_t sub_100394430(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_10000A6F0;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return _swift_task_switch(sub_1003908C8, 0, 0);
}

uint64_t sub_1003944E4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a10)
  {
    swift_bridgeObjectRetain();
    sub_100278C78(a3, a4);
    sub_10025ADCC(a5, a6);
    sub_10025ADCC(a7, a8);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100394590(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a10)
  {
    swift_bridgeObjectRelease();
    sub_100250CB0(a3, a4);
    sub_100250CC4(a5, a6);
    sub_100250CC4(a7, a8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_10039463C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_100394698(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *long long v5 = v2;
  v5[1] = sub_10000A6F0;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100970C90 + dword_100970C90);
  return v6(a1, v4);
}

void sub_10039474C()
{
  sub_10053A514(*(void *)(v0 + 16));
}

uint64_t sub_100394754()
{
  return sub_100395108((uint64_t *)&unk_10096BAA0);
}

uint64_t sub_100394760()
{
  return SFProgressContinuation.finish(with:)();
}

uint64_t sub_1003947E0()
{
  return sub_100395108((uint64_t *)&unk_10096BAA0);
}

uint64_t sub_1003947EC()
{
  return SFProgressContinuation.finish(with:)();
}

uint64_t sub_10039487C()
{
  return sub_100394A2C((uint64_t *)&unk_10096BAA0);
}

uint64_t sub_100394888(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10000A844((uint64_t *)&unk_10096BAA0) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10000A6F0;
  return sub_100391B28(a1, v5, v6, v7);
}

uint64_t sub_100394978()
{
  return sub_100395108(&qword_100970CE0);
}

uint64_t sub_100394984()
{
  return sub_1003951B4(&qword_100970CE0, (uint64_t (*)(uint64_t))sub_100391634);
}

uint64_t sub_1003949A4()
{
  return sub_100395108(&qword_100970CE0);
}

uint64_t sub_1003949B0()
{
  return SFProgressContinuation.finish(with:)();
}

uint64_t sub_100394A20()
{
  return sub_100394A2C(&qword_100970CE0);
}

uint64_t sub_100394A2C(uint64_t *a1)
{
  uint64_t v2 = sub_10000A844(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v6, v7);
}

uint64_t sub_100394AF4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10000A844(&qword_100970CE0) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10000A6F0;
  return sub_10039171C(a1, v5, v6, v7);
}

uint64_t sub_100394BE4(uint64_t a1)
{
  uint64_t v2 = sub_10000A844(&qword_10096DFA8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SFAirDrop.TransferType();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v12 = _s14descr1008C9AB9V10AskRequestVMa();
  sub_10024A330(a1 + *(int *)(v12 + 20), (uint64_t)v4, &qword_10096DFA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    char v13 = SFAirDrop.TransferType.isFiles.getter();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    if (v13)
    {
      uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
      v14(v9, v5);
      v14(v11, v5);
    }
    else
    {
      char v15 = SFAirDrop.TransferType.isCustom.getter();
      uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
      v16(v9, v5);
      v16(v11, v5);
      if ((v15 & 1) == 0) {
        return 0;
      }
    }
    return 1;
  }
  sub_10000A7E8((uint64_t)v4, &qword_10096DFA8);
  return 0;
}

uint64_t sub_100394E24()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100394E5C()
{
  uint64_t v1 = type metadata accessor for SFAirDropSend.Transfer();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = sub_10000A844(&qword_100970D40);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v11 + 8, v10);
}

uint64_t sub_100394FCC()
{
  uint64_t v1 = *(void *)(type metadata accessor for SFAirDropSend.Transfer() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_10000A844(&qword_100970D40) - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_100380210(v6, v0 + v2, v0 + v5, v7);
}

uint64_t sub_1003950CC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1003950E4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1003950FC()
{
  return sub_100395108(&qword_10096CC68);
}

uint64_t sub_100395108(uint64_t *a1)
{
  uint64_t v2 = sub_10000A844(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v6, v7);
}

uint64_t sub_100395194()
{
  return sub_1003951B4(&qword_10096CC68, (uint64_t (*)(uint64_t))sub_100391E6C);
}

uint64_t sub_1003951B4(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void *)(sub_10000A844(a1) - 8);
  uint64_t v4 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a2(v4);
}

uint64_t sub_100395224()
{
  return sub_100391F54();
}

uint64_t sub_10039522C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  unint64_t v3 = *(void *)(a1 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100278C78(v2, v3);
  return a1;
}

uint64_t sub_1003952B0()
{
  uint64_t v1 = (int *)_s14descr1008C9AB9V10AskRequestVMa();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);

  uint64_t v5 = v0 + v3;
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  }
  uint64_t v8 = v5 + v1[5];
  uint64_t v9 = type metadata accessor for SFAirDrop.TransferType();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  unint64_t v11 = (uint64_t *)(v5 + v1[6]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    sub_100250CC4(*v11, v12);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v13 = (uint64_t *)(v5 + v1[14]);
  unint64_t v14 = v13[1];
  if (v14 >> 60 != 15) {
    sub_100250CC4(*v13, v14);
  }
  char v15 = (uint64_t *)(v5 + v1[15]);
  unint64_t v16 = v15[1];
  if (v16 >> 60 != 15) {
    sub_100250CC4(*v15, v16);
  }
  uint64_t v17 = (uint64_t *)(v5 + v1[17]);
  unint64_t v18 = v17[1];
  if (v18 >> 60 != 15) {
    sub_100250CC4(*v17, v18);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10039555C(uint64_t a1)
{
  uint64_t v4 = *(void *)(_s14descr1008C9AB9V10AskRequestVMa() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F0;
  return sub_10038F61C(a1, v5, v6);
}

uint64_t sub_100395644(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000A6F4;
  return sub_10053A068(a1, v4);
}

uint64_t sub_1003956E4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s15EndpointFailureVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100970E80);
}

uint64_t sub_100395764(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1003957B0(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *sub_1003957FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    type metadata accessor for SDAirDropDiscoveredEndpoint(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v22 = a2[1];
        *a1 = *a2;
        a1[1] = v22;
        uint64_t v23 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
        uint64_t v24 = v23[5];
        uint64_t v25 = (char *)a1 + v24;
        uint64_t v26 = (char *)a2 + v24;
        uint64_t v27 = type metadata accessor for NWEndpoint();
        uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v28(v25, v26, v27);
        uint64_t v29 = v23[6];
        uint64_t v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)a2 + v29;
        *(void *)uint64_t v30 = *(void *)v31;
        v30[8] = v31[8];
        uint64_t v32 = v23[7];
        uint64_t v33 = (uint64_t *)((char *)a1 + v32);
        id v34 = (uint64_t *)((char *)a2 + v32);
        uint64_t v35 = v34[1];
        *uint64_t v33 = *v34;
        v33[1] = v35;
        uint64_t v36 = v23[8];
        uint64_t v37 = (uint64_t *)((char *)a1 + v36);
        uint64_t v38 = (uint64_t *)((char *)a2 + v36);
        uint64_t v65 = v38[1];
        void *v37 = *v38;
        v37[1] = v65;
        uint64_t v39 = v23[9];
        uint64_t v40 = (uint64_t *)((char *)a1 + v39);
        uint64_t v41 = (uint64_t *)((char *)a2 + v39);
        uint64_t v64 = v41[1];
        *uint64_t v40 = *v41;
        v40[1] = v64;
        uint64_t v42 = v23[10];
        uint64_t v43 = (uint64_t *)((char *)a1 + v42);
        id v44 = (uint64_t *)((char *)a2 + v42);
        uint64_t v45 = v44[1];
        *uint64_t v43 = *v44;
        v43[1] = v45;
        uint64_t v46 = v23[11];
        uint64_t v47 = (uint64_t *)((char *)a1 + v46);
        uint64_t v48 = (uint64_t *)((char *)a2 + v46);
        uint64_t v49 = v48[1];
        *uint64_t v47 = *v48;
        v47[1] = v49;
        uint64_t v50 = v23[12];
        uint64_t v51 = (uint64_t *)((char *)a1 + v50);
        uint64_t v52 = (uint64_t *)((char *)a2 + v50);
        uint64_t v53 = v52[1];
        *uint64_t v51 = *v52;
        v51[1] = v53;
        *((unsigned char *)a1 + v23[13]) = *((unsigned char *)a2 + v23[13]);
        uint64_t v54 = v23[14];
        uint64_t v55 = (char *)a1 + v54;
        uint64_t v56 = (uint64_t *)((char *)a2 + v54);
        unint64_t v57 = *(uint64_t *)((char *)a2 + v54 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v57 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
        }
        else
        {
          uint64_t v58 = *v56;
          sub_10025ADCC(*v56, v57);
          *(void *)uint64_t v55 = v58;
          *((void *)v55 + 1) = v57;
        }
        *((unsigned char *)a1 + v23[15]) = *((unsigned char *)a2 + v23[15]);
        *((unsigned char *)a1 + v23[16]) = *((unsigned char *)a2 + v23[16]);
        break;
      case 2u:
        uint64_t v9 = *a2;
        unint64_t v10 = a2[1];
        sub_10025ADCC(*a2, v10);
        *a1 = v9;
        a1[1] = v10;
        unint64_t v11 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
        uint64_t v12 = v11[5];
        char v13 = (char *)a1 + v12;
        unint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
        *(uint64_t *)((char *)a1 + v11[6]) = *(uint64_t *)((char *)a2 + v11[6]);
        uint64_t v16 = v11[7];
        uint64_t v17 = (uint64_t *)((char *)a1 + v16);
        unint64_t v18 = (uint64_t *)((char *)a2 + v16);
        uint64_t v19 = v18[1];
        *uint64_t v17 = *v18;
        v17[1] = v19;
        *((unsigned char *)a1 + v11[8]) = *((unsigned char *)a2 + v11[8]);
        *((unsigned char *)a1 + v11[9]) = *((unsigned char *)a2 + v11[9]);
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v20 = (void *)*a2;
        *a1 = *a2;
        id v21 = v20;
        break;
      default:
        uint64_t v7 = type metadata accessor for NWEndpoint();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        break;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v59 = *(int *)(a3 + 20);
    uint64_t v60 = (char *)a1 + v59;
    uint64_t v61 = (char *)a2 + v59;
    uint64_t v62 = type metadata accessor for SFAirDropSend.Failure();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
  }
  return a1;
}

uint64_t sub_100395BFC(uint64_t a1, uint64_t a2)
{
  type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v4 = type metadata accessor for NWEndpoint();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      break;
    case 1u:
      swift_bridgeObjectRelease();
      uint64_t v7 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
      uint64_t v8 = a1 + *(int *)(v7 + 20);
      uint64_t v9 = type metadata accessor for NWEndpoint();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v10 = (uint64_t *)(a1 + *(int *)(v7 + 56));
      unint64_t v11 = v10[1];
      if (v11 >> 60 != 15) {
        sub_100250CC4(*v10, v11);
      }
      break;
    case 2u:
      sub_100250CC4(*(void *)a1, *(void *)(a1 + 8));
      uint64_t v5 = a1 + *(int *)(type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0) + 20);
      uint64_t v6 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 3u:

      break;
    default:
      break;
  }
  uint64_t v12 = a1 + *(int *)(a2 + 20);
  uint64_t v13 = type metadata accessor for SFAirDropSend.Failure();
  unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);

  return v14(v12, v13);
}

uint64_t *sub_100395E54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v63 = a3;
      uint64_t v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      id v21 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
      uint64_t v22 = v21[5];
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      uint64_t v25 = type metadata accessor for NWEndpoint();
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
      swift_bridgeObjectRetain();
      v26(v23, v24, v25);
      uint64_t v27 = v21[6];
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      *(void *)uint64_t v28 = *(void *)v29;
      v28[8] = v29[8];
      uint64_t v30 = v21[7];
      uint64_t v31 = (uint64_t *)((char *)a1 + v30);
      uint64_t v32 = (uint64_t *)((char *)a2 + v30);
      uint64_t v33 = v32[1];
      *uint64_t v31 = *v32;
      v31[1] = v33;
      uint64_t v34 = v21[8];
      uint64_t v35 = (uint64_t *)((char *)a1 + v34);
      uint64_t v36 = (uint64_t *)((char *)a2 + v34);
      uint64_t v64 = v36[1];
      *uint64_t v35 = *v36;
      v35[1] = v64;
      uint64_t v37 = v21[9];
      uint64_t v38 = (uint64_t *)((char *)a1 + v37);
      uint64_t v39 = (uint64_t *)((char *)a2 + v37);
      uint64_t v40 = v39[1];
      void *v38 = *v39;
      v38[1] = v40;
      uint64_t v41 = v21[10];
      uint64_t v42 = (uint64_t *)((char *)a1 + v41);
      uint64_t v43 = (uint64_t *)((char *)a2 + v41);
      uint64_t v44 = v43[1];
      void *v42 = *v43;
      v42[1] = v44;
      uint64_t v45 = v21[11];
      uint64_t v46 = (uint64_t *)((char *)a1 + v45);
      uint64_t v47 = (uint64_t *)((char *)a2 + v45);
      uint64_t v48 = v47[1];
      *uint64_t v46 = *v47;
      v46[1] = v48;
      uint64_t v49 = v21[12];
      uint64_t v50 = (uint64_t *)((char *)a1 + v49);
      uint64_t v51 = (uint64_t *)((char *)a2 + v49);
      uint64_t v52 = v51[1];
      *uint64_t v50 = *v51;
      v50[1] = v52;
      *((unsigned char *)a1 + v21[13]) = *((unsigned char *)a2 + v21[13]);
      uint64_t v53 = v21[14];
      uint64_t v62 = (char *)a1 + v53;
      uint64_t v54 = (uint64_t *)((char *)a2 + v53);
      unint64_t v55 = *(uint64_t *)((char *)a2 + v53 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v55 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v62 = *(_OWORD *)v54;
      }
      else
      {
        uint64_t v56 = *v54;
        sub_10025ADCC(*v54, v55);
        *(void *)uint64_t v62 = v56;
        *((void *)v62 + 1) = v55;
      }
      a3 = v63;
      *((unsigned char *)a1 + v21[15]) = *((unsigned char *)a2 + v21[15]);
      *((unsigned char *)a1 + v21[16]) = *((unsigned char *)a2 + v21[16]);
      break;
    case 2u:
      uint64_t v7 = *a2;
      unint64_t v8 = a2[1];
      sub_10025ADCC(*a2, v8);
      *a1 = v7;
      a1[1] = v8;
      uint64_t v9 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
      uint64_t v10 = v9[5];
      unint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      *(uint64_t *)((char *)a1 + v9[6]) = *(uint64_t *)((char *)a2 + v9[6]);
      uint64_t v14 = v9[7];
      uint64_t v15 = (uint64_t *)((char *)a1 + v14);
      uint64_t v16 = (uint64_t *)((char *)a2 + v14);
      uint64_t v17 = v16[1];
      *uint64_t v15 = *v16;
      v15[1] = v17;
      *((unsigned char *)a1 + v9[8]) = *((unsigned char *)a2 + v9[8]);
      *((unsigned char *)a1 + v9[9]) = *((unsigned char *)a2 + v9[9]);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 3u:
      unint64_t v18 = (void *)*a2;
      *a1 = *a2;
      id v19 = v18;
      break;
    default:
      uint64_t v6 = type metadata accessor for NWEndpoint();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      break;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v57 = *(int *)(a3 + 20);
  uint64_t v58 = (char *)a1 + v57;
  uint64_t v59 = (char *)a2 + v57;
  uint64_t v60 = type metadata accessor for SFAirDropSend.Failure();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
  return a1;
}

uint64_t *sub_100396210(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1003956E4((uint64_t)a1, type metadata accessor for SDAirDropDiscoveredEndpoint);
    type metadata accessor for SDAirDropDiscoveredEndpoint(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v57 = a3;
        *a1 = *a2;
        a1[1] = a2[1];
        id v19 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
        uint64_t v20 = v19[5];
        id v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = type metadata accessor for NWEndpoint();
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v24(v21, v22, v23);
        uint64_t v25 = v19[6];
        uint64_t v26 = (char *)a1 + v25;
        uint64_t v27 = (char *)a2 + v25;
        uint64_t v28 = *(void *)v27;
        v26[8] = v27[8];
        *(void *)uint64_t v26 = v28;
        uint64_t v29 = v19[7];
        uint64_t v30 = (uint64_t *)((char *)a1 + v29);
        uint64_t v31 = (uint64_t *)((char *)a2 + v29);
        void *v30 = *v31;
        v30[1] = v31[1];
        uint64_t v32 = v19[8];
        uint64_t v33 = (uint64_t *)((char *)a1 + v32);
        uint64_t v34 = (uint64_t *)((char *)a2 + v32);
        *uint64_t v33 = *v34;
        v33[1] = v34[1];
        uint64_t v35 = v19[9];
        uint64_t v36 = (uint64_t *)((char *)a1 + v35);
        uint64_t v37 = (uint64_t *)((char *)a2 + v35);
        *uint64_t v36 = *v37;
        v36[1] = v37[1];
        uint64_t v38 = v19[10];
        uint64_t v39 = (uint64_t *)((char *)a1 + v38);
        uint64_t v40 = (uint64_t *)((char *)a2 + v38);
        *uint64_t v39 = *v40;
        v39[1] = v40[1];
        uint64_t v41 = v19[11];
        uint64_t v42 = (uint64_t *)((char *)a1 + v41);
        uint64_t v43 = (uint64_t *)((char *)a2 + v41);
        void *v42 = *v43;
        v42[1] = v43[1];
        uint64_t v44 = v19[12];
        uint64_t v45 = (uint64_t *)((char *)a1 + v44);
        uint64_t v46 = (uint64_t *)((char *)a2 + v44);
        *uint64_t v45 = *v46;
        v45[1] = v46[1];
        *((unsigned char *)a1 + v19[13]) = *((unsigned char *)a2 + v19[13]);
        uint64_t v47 = v19[14];
        uint64_t v48 = (char *)a1 + v47;
        uint64_t v49 = (uint64_t *)((char *)a2 + v47);
        unint64_t v50 = *(uint64_t *)((char *)a2 + v47 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v50 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
        }
        else
        {
          uint64_t v51 = *v49;
          sub_10025ADCC(*v49, v50);
          *(void *)uint64_t v48 = v51;
          *((void *)v48 + 1) = v50;
        }
        *((unsigned char *)a1 + v19[15]) = *((unsigned char *)a2 + v19[15]);
        *((unsigned char *)a1 + v19[16]) = *((unsigned char *)a2 + v19[16]);
        swift_storeEnumTagMultiPayload();
        a3 = v57;
        break;
      case 2u:
        uint64_t v7 = *a2;
        unint64_t v8 = a2[1];
        sub_10025ADCC(*a2, v8);
        *a1 = v7;
        a1[1] = v8;
        uint64_t v9 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
        uint64_t v10 = v9[5];
        unint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
        *(uint64_t *)((char *)a1 + v9[6]) = *(uint64_t *)((char *)a2 + v9[6]);
        uint64_t v14 = v9[7];
        uint64_t v15 = (uint64_t *)((char *)a1 + v14);
        uint64_t v16 = (uint64_t *)((char *)a2 + v14);
        *uint64_t v15 = *v16;
        v15[1] = v16[1];
        *((unsigned char *)a1 + v9[8]) = *((unsigned char *)a2 + v9[8]);
        *((unsigned char *)a1 + v9[9]) = *((unsigned char *)a2 + v9[9]);
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_6;
      case 3u:
        uint64_t v17 = (void *)*a2;
        *a1 = *a2;
        id v18 = v17;
        goto LABEL_6;
      default:
        uint64_t v6 = type metadata accessor for NWEndpoint();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  uint64_t v52 = *(int *)(a3 + 20);
  uint64_t v53 = (char *)a1 + v52;
  uint64_t v54 = (char *)a2 + v52;
  uint64_t v55 = type metadata accessor for SFAirDropSend.Failure();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 24))(v53, v54, v55);
  return a1;
}

_OWORD *sub_10039662C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v9 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
    uint64_t v10 = v9[5];
    unint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    *(void *)((char *)a1 + v9[6]) = *(void *)((char *)a2 + v9[6]);
    *(_OWORD *)((char *)a1 + v9[7]) = *(_OWORD *)((char *)a2 + v9[7]);
    *((unsigned char *)a1 + v9[8]) = *((unsigned char *)a2 + v9[8]);
    *((unsigned char *)a1 + v9[9]) = *((unsigned char *)a2 + v9[9]);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    uint64_t v14 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
    uint64_t v15 = v14[5];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = type metadata accessor for NWEndpoint();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    uint64_t v19 = v14[6];
    uint64_t v20 = (char *)a1 + v19;
    id v21 = (char *)a2 + v19;
    *(void *)uint64_t v20 = *(void *)v21;
    v20[8] = v21[8];
    *(_OWORD *)((char *)a1 + v14[7]) = *(_OWORD *)((char *)a2 + v14[7]);
    *(_OWORD *)((char *)a1 + v14[8]) = *(_OWORD *)((char *)a2 + v14[8]);
    *(_OWORD *)((char *)a1 + v14[9]) = *(_OWORD *)((char *)a2 + v14[9]);
    *(_OWORD *)((char *)a1 + v14[10]) = *(_OWORD *)((char *)a2 + v14[10]);
    *(_OWORD *)((char *)a1 + v14[11]) = *(_OWORD *)((char *)a2 + v14[11]);
    *(_OWORD *)((char *)a1 + v14[12]) = *(_OWORD *)((char *)a2 + v14[12]);
    *((unsigned char *)a1 + v14[13]) = *((unsigned char *)a2 + v14[13]);
    *(_OWORD *)((char *)a1 + v14[14]) = *(_OWORD *)((char *)a2 + v14[14]);
    *((unsigned char *)a1 + v14[15]) = *((unsigned char *)a2 + v14[15]);
    *((unsigned char *)a1 + v14[16]) = *((unsigned char *)a2 + v14[16]);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for NWEndpoint();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v22 = *(int *)(a3 + 20);
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = type metadata accessor for SFAirDropSend.Failure();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  return a1;
}

_OWORD *sub_1003968F8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1003956E4((uint64_t)a1, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v6 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v9 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
      uint64_t v10 = v9[5];
      unint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      *(void *)((char *)a1 + v9[6]) = *(void *)((char *)a2 + v9[6]);
      *(_OWORD *)((char *)a1 + v9[7]) = *(_OWORD *)((char *)a2 + v9[7]);
      *((unsigned char *)a1 + v9[8]) = *((unsigned char *)a2 + v9[8]);
      *((unsigned char *)a1 + v9[9]) = *((unsigned char *)a2 + v9[9]);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v14 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
      uint64_t v15 = v14[5];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = type metadata accessor for NWEndpoint();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      uint64_t v19 = v14[6];
      uint64_t v20 = (char *)a1 + v19;
      id v21 = (char *)a2 + v19;
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      *(_OWORD *)((char *)a1 + v14[7]) = *(_OWORD *)((char *)a2 + v14[7]);
      *(_OWORD *)((char *)a1 + v14[8]) = *(_OWORD *)((char *)a2 + v14[8]);
      *(_OWORD *)((char *)a1 + v14[9]) = *(_OWORD *)((char *)a2 + v14[9]);
      *(_OWORD *)((char *)a1 + v14[10]) = *(_OWORD *)((char *)a2 + v14[10]);
      *(_OWORD *)((char *)a1 + v14[11]) = *(_OWORD *)((char *)a2 + v14[11]);
      *(_OWORD *)((char *)a1 + v14[12]) = *(_OWORD *)((char *)a2 + v14[12]);
      *((unsigned char *)a1 + v14[13]) = *((unsigned char *)a2 + v14[13]);
      *(_OWORD *)((char *)a1 + v14[14]) = *(_OWORD *)((char *)a2 + v14[14]);
      *((unsigned char *)a1 + v14[15]) = *((unsigned char *)a2 + v14[15]);
      *((unsigned char *)a1 + v14[16]) = *((unsigned char *)a2 + v14[16]);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v8 = type metadata accessor for NWEndpoint();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v22 = *(int *)(a3 + 20);
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = type metadata accessor for SFAirDropSend.Failure();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40))(v23, v24, v25);
  return a1;
}

uint64_t sub_100396BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100396BFC);
}

uint64_t sub_100396BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for SFAirDropSend.Failure();
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100396CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100396D08);
}

uint64_t sub_100396D08(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for SFAirDropSend.Failure();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_100396E0C()
{
  uint64_t result = type metadata accessor for SDAirDropDiscoveredEndpoint(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SFAirDropSend.Failure();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100396EE4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100970EB8);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100970EB8);
  if (qword_100969C70 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009945A0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_100396FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection] = 0;
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection] = 0;
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnectionTimeout] = 5;
  uint64_t v17 = &v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_serviceName];
  *(void *)uint64_t v17 = a1;
  *((void *)v17 + 1) = a2;
  uint64_t v18 = &v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_endpoint];
  uint64_t v19 = type metadata accessor for NWEndpoint();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v18, a3, v19);
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_deviceSupportFlags] = a4;
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_deviceStatus] = a5;
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_nearbyAgent] = a6;
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_browserQueue] = a8;
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_rpClient] = a7;
  v24.receiver = v8;
  v24.super_class = ObjectType;
  id v21 = [super init];
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a3, v19);
  return v21;
}

uint64_t sub_10039712C(uint64_t a1)
{
  v2[84] = v1;
  v2[83] = a1;
  uint64_t v3 = type metadata accessor for NWEndpoint();
  v2[85] = v3;
  v2[86] = *(void *)(v3 - 8);
  v2[87] = swift_task_alloc();
  v2[88] = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  v2[89] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Date();
  v2[90] = v4;
  v2[91] = *(void *)(v4 - 8);
  v2[92] = swift_task_alloc();
  v2[93] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  v2[94] = static AirDropActor.shared;
  return _swift_task_switch(sub_1003972C8, v5, 0);
}

uint64_t sub_1003972C8()
{
  Date.init()();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 760) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10039736C;
  return sub_100398F30(v0 + 16);
}

uint64_t sub_10039736C()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v3[96] = v0;
  uint64_t v30 = v2[2];
  uint64_t v29 = v2[3];
  uint64_t v28 = v2[4];
  uint64_t v27 = v2[5];
  uint64_t v26 = v2[6];
  uint64_t v25 = v2[7];
  uint64_t v24 = v2[8];
  uint64_t v23 = v2[9];
  uint64_t v22 = v2[10];
  uint64_t v21 = v2[11];
  uint64_t v20 = v2[12];
  uint64_t v19 = v2[13];
  uint64_t v4 = v2[14];
  uint64_t v5 = v2[15];
  uint64_t v6 = v2[16];
  char v7 = *((unsigned char *)v3 + 136);
  uint64_t v8 = v2[18];
  uint64_t v9 = v2[19];
  uint64_t v10 = v2[20];
  v3[97] = v10;
  swift_task_dealloc();
  uint64_t v11 = v3[94];
  if (v0)
  {
    uint64_t v12 = sub_100398E84;
  }
  else
  {
    v3[40] = v30;
    v3[41] = v29;
    v3[42] = v28;
    v3[43] = v27;
    v3[44] = v26;
    v3[45] = v25;
    v3[46] = v24;
    v3[47] = v23;
    v3[48] = v22;
    v3[49] = v21;
    v3[50] = v20;
    v3[51] = v19;
    v3[52] = v4;
    v3[53] = v5;
    v3[54] = v6;
    *((unsigned char *)v3 + 440) = v7;
    v3[56] = v8;
    v3[57] = v9;
    v3[58] = v10;
    long long v13 = *((_OWORD *)v3 + 21);
    *(_OWORD *)(v3 + 59) = *((_OWORD *)v3 + 20);
    *(_OWORD *)(v3 + 61) = v13;
    long long v14 = *((_OWORD *)v3 + 28);
    long long v15 = *((_OWORD *)v3 + 26);
    *(_OWORD *)(v3 + 73) = *((_OWORD *)v3 + 27);
    *(_OWORD *)(v3 + 75) = v14;
    long long v16 = *((_OWORD *)v3 + 24);
    *(_OWORD *)(v3 + 69) = *((_OWORD *)v3 + 25);
    *(_OWORD *)(v3 + 71) = v15;
    long long v17 = *((_OWORD *)v3 + 22);
    *(_OWORD *)(v3 + 65) = *((_OWORD *)v3 + 23);
    *(_OWORD *)(v3 + 67) = v16;
    *(_OWORD *)(v3 + 63) = v17;
    uint64_t v12 = sub_1003976CC;
  }
  return _swift_task_switch(v12, v11, 0);
}

uint64_t sub_1003976CC()
{
  uint64_t v55 = v0;
  long long v1 = *(_OWORD *)(v0 + 384);
  *(_OWORD *)(v0 + 248) = *(_OWORD *)(v0 + 400);
  long long v2 = *(_OWORD *)(v0 + 432);
  *(_OWORD *)(v0 + 264) = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v0 + 280) = v2;
  *(_OWORD *)(v0 + 296) = *(_OWORD *)(v0 + 448);
  long long v3 = *(_OWORD *)(v0 + 320);
  *(_OWORD *)(v0 + 184) = *(_OWORD *)(v0 + 336);
  long long v4 = *(_OWORD *)(v0 + 368);
  *(_OWORD *)(v0 + 200) = *(_OWORD *)(v0 + 352);
  *(_OWORD *)(v0 + 216) = v4;
  *(_OWORD *)(v0 + 232) = v1;
  uint64_t v5 = *(void *)(v0 + 776);
  *(_OWORD *)(v0 + 168) = v3;
  *(void *)(v0 + 312) = v5;
  SecTrustRef v6 = sub_10065EC34();
  *(void *)(v0 + 784) = v6;
  if (v6)
  {
    SecTrustRef v53 = v6;
    sub_10039C5EC((uint64_t *)(v0 + 168));
    swift_release();
    if (qword_100969D28 != -1) {
      swift_once();
    }
    uint64_t v7 = *(void *)(v0 + 744);
    uint64_t v8 = *(void *)(v0 + 736);
    uint64_t v9 = *(void *)(v0 + 728);
    uint64_t v10 = *(void *)(v0 + 720);
    uint64_t v11 = *(void **)(v0 + 672);
    uint64_t v12 = type metadata accessor for Logger();
    *(void *)(v0 + 792) = sub_10000B47C(v12, (uint64_t)qword_100970EB8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v7, v10);
    sub_10039C6B0((uint64_t *)(v0 + 320));
    id v13 = v11;
    sub_10039C6B0((uint64_t *)(v0 + 320));
    id v14 = v13;
    long long v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    BOOL v17 = os_log_type_enabled(v15, v16);
    uint64_t v18 = *(void *)(v0 + 736);
    uint64_t v19 = *(void *)(v0 + 728);
    uint64_t v20 = *(void *)(v0 + 720);
    uint64_t v21 = *(void **)(v0 + 672);
    if (v17)
    {
      os_log_type_t type = v16;
      uint64_t v22 = swift_slowAlloc();
      v54[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 134218498;
      Date.timeIntervalSinceNow.getter();
      *(double *)(v0 + 640) = -v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v24(v18, v20);
      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v25 = sub_10041611C();
      *(void *)(v0 + 648) = sub_100254634(v25, v26, v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10039C76C((uint64_t *)(v0 + 320));
      sub_10039C76C((uint64_t *)(v0 + 320));
      *(_WORD *)(v22 + 22) = 2080;
      uint64_t v27 = NWEndpoint.debugDescription.getter();
      *(void *)(v0 + 656) = sub_100254634(v27, v28, v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v15, type, "Got DISCOVER response - %fs - %s for endpoint %s", (uint8_t *)v22, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v24(*(void *)(v0 + 736), *(void *)(v0 + 720));
      sub_10039C76C((uint64_t *)(v0 + 320));
      sub_10039C76C((uint64_t *)(v0 + 320));
    }
    *(void *)(v0 + 800) = v24;
    uint64_t v40 = *(void *)(v0 + 672);
    uint64_t v41 = *(void **)(v40 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_deviceStatus);
    *(void *)(v0 + 808) = v41;
    uint64_t v42 = type metadata accessor for SDAirDropBonjourContactFetcher();
    uint64_t v43 = swift_allocObject();
    id v44 = v41;
    uint64_t v45 = v53;
    swift_defaultActor_initialize();
    *(void *)(v43 + 112) = v44;
    *(void *)(v43 + 120) = v45;
    *(void *)(v0 + 616) = v43;
    *(void *)(v0 + 624) = v42;
    [v0 init];
    uint64_t v46 = *(void *)(v0 + 352);
    uint64_t v47 = *(void *)(v0 + 360);
    *(void *)(v0 + 824) = v46;
    *(void *)(v0 + 832) = v47;
    uint64_t v48 = v40 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_serviceName;
    uint64_t v49 = *(void *)(v40 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_serviceName);
    *(void *)(v0 + 840) = v49;
    uint64_t v50 = *(void *)(v48 + 8);
    *(void *)(v0 + 848) = v50;
    uint64_t v51 = (void *)swift_task_alloc();
    *(void *)(v0 + 856) = v51;
    *uint64_t v51 = v0;
    v51[1] = sub_100397CE0;
    return sub_100614774(v46, v47, v49, v50);
  }
  else
  {
    if (qword_100969D28 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_10000B47C(v29, (uint64_t)qword_100970EB8);
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Missing SecTrust dropping", v32, 2u);
      swift_slowDealloc();
    }
    uint64_t v33 = *(void *)(v0 + 744);
    uint64_t v34 = *(void *)(v0 + 728);
    uint64_t v35 = *(void *)(v0 + 720);

    uint64_t v36 = type metadata accessor for SFAirDropSend.Failure();
    sub_10039C4D0();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v36 - 8) + 104))(v37, enum case for SFAirDropSend.Failure.badRequest(_:), v36);
    swift_willThrow();
    sub_10039C528((uint64_t *)(v0 + 168));
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
    return v38();
  }
}

uint64_t sub_100397CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void **)v4;
  uint64_t v6 = *(void *)(*(void *)v4 + 752);
  v5[108] = a1;
  v5[109] = a2;
  v5[110] = a3;
  v5[111] = a4;
  swift_task_dealloc();
  return _swift_task_switch(sub_100397E04, v6, 0);
}

uint64_t sub_100397E04()
{
  uint64_t v75 = v0;
  unint64_t v1 = *(void *)(v0 + 832);
  if (v1 >> 60 == 15)
  {
    Class isa = 0;
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 824);
    sub_10025ADCC(v3, *(void *)(v0 + 832));
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100250CB0(v3, v1);
  }
  uint64_t v4 = (__SecTrust *)*(id *)(v0 + 784);
  NSString v5 = String._bridgeToObjectiveC()();
  uint64_t v6 = (uint64_t)sub_100052470(isa, v4, v5);

  if (v6)
  {
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    swift_bridgeObjectRetain();
    LOBYTE(v6) = sub_100460F7C();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  *(void *)(v0 + 904) = v9;
  *(void *)(v0 + 896) = v7;
  *(unsigned char *)(v0 + 952) = v6 & 1;
  char v73 = v6;
  uint64_t v70 = v9;
  uint64_t v71 = *(void *)(v0 + 872);
  if (v71)
  {
    uint64_t v10 = *(void **)(v0 + 808);
    swift_bridgeObjectRetain();
    id v11 = [v10 meCard];
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = *(void *)(v0 + 872);
      uint64_t v14 = *(void *)(v0 + 864);
      id v15 = [v11 identifier];
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v18 = v17;

      if (v14 == v16 && v13 == v18) {
        char v19 = 1;
      }
      else {
        char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();

      LOBYTE(v6) = v73;
    }
    else
    {
      char v19 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v19 = 0;
  }
  id v20 = *(id *)(v0 + 672);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  uint64_t v72 = v7;
  if (os_log_type_enabled(v21, v22))
  {
    char v68 = v19;
    unint64_t v23 = *(void *)(v0 + 848);
    uint64_t v6 = *(void *)(v0 + 840);
    uint64_t v64 = *(void **)(v0 + 672);
    uint64_t v24 = swift_slowAlloc();
    uint64_t v74 = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136315650;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 632) = sub_100254634(v6, v23, &v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    char v19 = v68;
    swift_bridgeObjectRelease();

    *(_WORD *)(v24 + 12) = 1024;
    *(_DWORD *)(v0 + 944) = v68 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v24 + 18) = 1024;
    LOBYTE(v6) = v73;
    *(_DWORD *)(v0 + 948) = v73 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s - isContactIDMe: %{BOOL}d isSameAccount: %{BOOL}d", (uint8_t *)v24, 0x18u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v25 = *(void *)(v0 + 672);
  (*(void (**)(void, uint64_t, void))(*(void *)(v0 + 688) + 16))(*(void *)(v0 + 696), v25 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_endpoint, *(void *)(v0 + 680));
  uint64_t v69 = *(void *)(v25 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_deviceSupportFlags);
  if (v6 & 1 | ((v19 & 1) == 0))
  {
    uint64_t v26 = *(void *)(v0 + 424);
    uint64_t v67 = *(void *)(v0 + 416);
    swift_bridgeObjectRetain();
    if ((v6 & 1) == 0) {
      goto LABEL_22;
    }
LABEL_25:
    uint64_t v65 = 0;
    uint64_t v66 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = *(void *)(v0 + 368);
    uint64_t v27 = *(void *)(v0 + 344);
    uint64_t v62 = 0;
    uint64_t v63 = *(void *)(v0 + 336);
    uint64_t v30 = *(void *)(v0 + 376);
LABEL_27:
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
  uint64_t v67 = 0;
  uint64_t v26 = 0;
  if (v6) {
    goto LABEL_25;
  }
LABEL_22:
  uint64_t v27 = *(void *)(v0 + 344);
  uint64_t v63 = *(void *)(v0 + 336);
  if ((v19 & 1) == 0)
  {
    uint64_t v66 = *(void *)(v0 + 888);
    swift_bridgeObjectRetain();
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    uint64_t v65 = *(void *)(v0 + 880);
    uint64_t v62 = *(void *)(v0 + 864);
    uint64_t v28 = *(void *)(v0 + 872);
    goto LABEL_27;
  }
  uint64_t v65 = 0;
  uint64_t v66 = 0;
  uint64_t v62 = 0;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  uint64_t v30 = 0;
LABEL_28:
  uint64_t v31 = *(void *)(v0 + 848);
  uint64_t v32 = *(char **)(v0 + 712);
  uint64_t v33 = *(int **)(v0 + 704);
  uint64_t v34 = *(void *)(v0 + 696);
  uint64_t v35 = *(void *)(v0 + 688);
  uint64_t v36 = *(void *)(v0 + 680);
  uint64_t v37 = *(void *)(v0 + 320);
  unint64_t v38 = *(void *)(v0 + 328);
  *(void *)uint64_t v32 = *(void *)(v0 + 840);
  *((void *)v32 + 1) = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(&v32[v33[5]], v34, v36);
  uint64_t v39 = &v32[v33[6]];
  *(void *)uint64_t v39 = v69;
  v39[8] = 0;
  uint64_t v40 = &v32[v33[7]];
  *(void *)uint64_t v40 = v67;
  *((void *)v40 + 1) = v26;
  uint64_t v41 = &v32[v33[8]];
  *(void *)uint64_t v41 = v29;
  *((void *)v41 + 1) = v30;
  uint64_t v42 = &v32[v33[9]];
  *(void *)uint64_t v42 = v63;
  *((void *)v42 + 1) = v27;
  uint64_t v43 = (uint64_t *)&v32[v33[10]];
  *uint64_t v43 = v72;
  v43[1] = v70;
  id v44 = &v32[v33[11]];
  *(void *)id v44 = v62;
  *((void *)v44 + 1) = v28;
  uint64_t v45 = &v32[v33[12]];
  *(void *)uint64_t v45 = v65;
  *((void *)v45 + 1) = v66;
  v32[v33[13]] = v73 & 1;
  uint64_t v46 = (uint64_t *)&v32[v33[14]];
  *uint64_t v46 = v37;
  v46[1] = v38;
  v32[v33[15]] = 1;
  v32[v33[16]] = 1;
  if (v71 && *(void *)(v0 + 392) >> 60 != 15 && (v69 & 0x2000) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100278C78(v37, v38);
    swift_bridgeObjectRetain();
    uint64_t v47 = (void *)swift_task_alloc();
    *(void *)(v0 + 912) = v47;
    *uint64_t v47 = v0;
    v47[1] = sub_1003985C4;
    return sub_10039C828();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100278C78(v37, v38);
    swift_bridgeObjectRetain();
    uint64_t v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v51 = 0;
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "No receiver deviceIRKData or contactID or unsupported client - skipping IDENTITY-SHARE", v51, 2u);
      swift_slowDealloc();
    }

    uint64_t v52 = Logger.logObject.getter();
    os_log_type_t v53 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v54 = 0;
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "Finished DISCOVER", v54, 2u);
      swift_slowDealloc();
    }

    uint64_t v55 = *(void *)(v0 + 432);
    char v56 = *(unsigned char *)(v0 + 440);
    uint64_t v57 = *(void *)(v0 + 448);
    uint64_t v58 = *(void *)(v0 + 456);
    uint64_t v59 = (void *)swift_task_alloc();
    *(void *)(v0 + 936) = v59;
    *uint64_t v59 = v0;
    v59[1] = sub_100398BE0;
    uint64_t v60 = *(void *)(v0 + 872);
    uint64_t v61 = *(void *)(v0 + 864);
    uint64_t v77 = v57;
    uint64_t v78 = v58;
    return sub_100399B60(v0 + 472, v72, v70, v61, v60, v73 & 1, v55, v56);
  }
}

uint64_t sub_1003985C4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 920) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 752);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return _swift_task_switch(sub_100398AD0, v3, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void *)(v2 + 432);
    char v5 = *(unsigned char *)(v2 + 440);
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v2 + 928) = v6;
    *uint64_t v6 = v2;
    v6[1] = sub_1003987BC;
    uint64_t v7 = *(void *)(v2 + 904);
    uint64_t v8 = *(void *)(v2 + 896);
    char v9 = *(unsigned char *)(v2 + 952);
    uint64_t v10 = *(void *)(v2 + 872);
    uint64_t v11 = *(void *)(v2 + 864);
    return sub_100399B60(v2 + 472, v8, v7, v11, v10, v9, v4, v5);
  }
}

uint64_t sub_1003987BC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 752);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100398928, v1, 0);
}

uint64_t sub_100398928()
{
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Finished DISCOVER and IDENTITY-SHARE", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = *(void **)(v0 + 784);

  char v5 = *(void (**)(uint64_t, uint64_t))(v0 + 800);
  uint64_t v6 = *(void *)(v0 + 744);
  uint64_t v7 = *(void *)(v0 + 720);
  uint64_t v8 = *(void *)(v0 + 712);
  uint64_t v9 = *(void *)(v0 + 664);

  sub_10039C76C((uint64_t *)(v0 + 320));
  sub_10039C528((uint64_t *)(v0 + 168));
  v5(v6, v7);
  sub_10039D7F4(v8, v9, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_100398AD0()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 800);
  os_log_type_t v2 = *(void **)(v0 + 784);
  uint64_t v3 = *(void *)(v0 + 744);
  uint64_t v4 = *(void *)(v0 + 720);
  uint64_t v5 = *(void *)(v0 + 712);

  sub_10039C76C((uint64_t *)(v0 + 320));
  sub_10039C528((uint64_t *)(v0 + 168));
  sub_10039DA54(v5, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  v1(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100398BE0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 752);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100398D4C, v1, 0);
}

uint64_t sub_100398D4C()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 800);
  uint64_t v2 = *(void *)(v0 + 744);
  uint64_t v3 = *(void *)(v0 + 720);
  uint64_t v4 = *(void *)(v0 + 712);
  uint64_t v5 = *(void *)(v0 + 664);

  sub_10039C76C((uint64_t *)(v0 + 320));
  sub_10039C528((uint64_t *)(v0 + 168));
  v1(v2, v3);
  sub_10039D7F4(v4, v5, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
  type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100398E84()
{
  (*(void (**)(void, void))(v0[91] + 8))(v0[93], v0[90]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100398F30(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  sub_10000A844(&qword_10096C920);
  v2[8] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for SDAirDropMessage();
  v2[9] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[10] = v4;
  v2[11] = *(void *)(v4 + 64);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  v2[14] = static AirDropActor.shared;
  return _swift_task_switch(sub_100399074, v5, 0);
}

uint64_t sub_100399074()
{
  id v15 = v0;
  if (qword_100969D28 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_100970EB8);
  id v3 = v1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (void *)v0[7];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v14 = v9;
    uint64_t v10 = NWEndpoint.debugDescription.getter();
    v0[5] = sub_100254634(v10, v11, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Sending DISCOVER request %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v12 = (void *)swift_task_alloc();
  v0[15] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10039928C;
  return sub_10039A5C8();
}

uint64_t sub_10039928C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 112);
  *(void *)(*(void *)v1 + 128) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1003993A4, v2, 0);
}

uint64_t sub_1003993A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 2;
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[12];
  os_log_type_t v5 = (uint64_t *)v0[13];
  uint64_t v6 = v0[10];
  uint64_t v21 = v2;
  uint64_t v7 = v1[8];
  uint64_t v8 = (char *)v1[7];
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection] = v3;
  swift_retain();
  swift_release();
  id v9 = sub_1004610EC();
  v1[17] = v9;
  v1[18] = v10;
  if (v10 >> 60 == 15) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = (uint64_t)v9;
  }
  if (v10 >> 60 == 15) {
    unint64_t v12 = 0xC000000000000000;
  }
  else {
    unint64_t v12 = v10;
  }
  *os_log_type_t v5 = v11;
  v5[1] = v12;
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 1, 1, v13);
  sub_10039D78C((uint64_t)v5, v4);
  unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = swift_allocObject();
  v1[19] = v15;
  *(void *)(v15 + 16) = v3;
  sub_10039D7F4(v4, v15 + v14, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  uint64_t v16 = swift_allocObject();
  v1[20] = v16;
  *(void *)(v16 + 16) = v8;
  *(void *)(v16 + 24) = v3;
  swift_retain_n();
  uint64_t v17 = v8;
  sub_10025ADCC(v11, v12);
  uint64_t v18 = (void *)swift_task_alloc();
  v1[21] = v18;
  *uint64_t v18 = v1;
  v18[1] = sub_1003995EC;
  uint64_t v19 = v1[8];
  return concurrentRace<A>(priority:operation:against:)(v21, v19, &unk_100970F90, v15, &unk_100970FA0, v16, &type metadata for SDNWHTTPResponse);
}

uint64_t sub_1003995EC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 112);
  sub_10039D9F4(*(void *)(v2 + 64));
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v4 = sub_100399A68;
  }
  else {
    uint64_t v4 = sub_100399774;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100399774()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  unint64_t v2 = *(void *)(v0 + 32);
  if (v1 >= 3)
  {
    os_log_type_t v5 = (unsigned int *)&enum case for SFAirDropSend.Failure.badRequest(_:);
    if (v1 == 9) {
      os_log_type_t v5 = (unsigned int *)&enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    }
    if (v1 == 4) {
      uint64_t v6 = (unsigned int *)&enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    }
    else {
      uint64_t v6 = v5;
    }
    uint64_t v7 = type metadata accessor for SFAirDropSend.Failure();
    sub_10039C4D0();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v7 - 8) + 104))(v8, *v6, v7);
    swift_willThrow();
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 176);
    sub_10025ADCC(*(void *)(v0 + 24), *(void *)(v0 + 32));
    sub_1006AB720();
    if (!v4)
    {
      unint64_t v14 = *(void *)(v0 + 144);
      uint64_t v15 = *(void *)(v0 + 128);
      uint64_t v16 = *(void *)(v0 + 104);
      uint64_t v17 = *(void *)(v0 + 48);
      if (v14 >> 60 == 15) {
        uint64_t v18 = 0;
      }
      else {
        uint64_t v18 = *(void *)(v0 + 136);
      }
      if (v14 >> 60 == 15) {
        unint64_t v19 = 0xC000000000000000;
      }
      else {
        unint64_t v19 = *(void *)(v0 + 144);
      }
      sub_100250CC4(v3, v2);
      NWConnection.forceCancel()();
      sub_100250CC4(v3, v2);
      sub_100250CC4(v18, v19);
      sub_10039DA54(v16, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      *(_OWORD *)uint64_t v17 = v21;
      *(_OWORD *)(v17 + 16) = v22;
      *(_OWORD *)(v17 + 32) = v23;
      *(_OWORD *)(v17 + 48) = v24;
      *(_OWORD *)(v17 + 64) = v25;
      *(_OWORD *)(v17 + 80) = v26;
      *(_OWORD *)(v17 + 96) = v27;
      *(void *)(v17 + 112) = v28;
      *(unsigned char *)(v17 + 120) = v29 & 1;
      *(void *)(v17 + 128) = v30;
      *(void *)(v17 + 136) = v31;
      *(void *)(v17 + 144) = v15;
      uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_24;
    }
    sub_100250CC4(v3, v2);
  }
  sub_100250CC4(v3, v2);
  unint64_t v9 = *(void *)(v0 + 144);
  uint64_t v10 = *(void *)(v0 + 104);
  if (v9 >> 60 == 15) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = *(void *)(v0 + 136);
  }
  if (v9 >> 60 == 15) {
    unint64_t v12 = 0xC000000000000000;
  }
  else {
    unint64_t v12 = *(void *)(v0 + 144);
  }
  NWConnection.forceCancel()();
  swift_willThrow();
  sub_100250CC4(v11, v12);
  swift_release();
  sub_10039DA54(v10, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
LABEL_24:
  return v13();
}

uint64_t sub_100399A68()
{
  unint64_t v1 = v0[18];
  uint64_t v2 = v0[13];
  if (v1 >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = v0[17];
  }
  if (v1 >> 60 == 15) {
    unint64_t v4 = 0xC000000000000000;
  }
  else {
    unint64_t v4 = v0[18];
  }
  NWConnection.forceCancel()();
  swift_willThrow();
  sub_100250CC4(v3, v4);
  swift_release();
  sub_10039DA54(v2, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100399B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  *(void *)(v9 + 272) = v14;
  *(void *)(v9 + 280) = v8;
  *(void *)(v9 + 256) = a7;
  *(void *)(v9 + 264) = v13;
  *(unsigned char *)(v9 + 313) = a8;
  *(unsigned char *)(v9 + 312) = a6;
  *(void *)(v9 + 240) = a4;
  *(void *)(v9 + 248) = a5;
  *(void *)(v9 + 224) = a2;
  *(void *)(v9 + 232) = a3;
  *(void *)(v9 + 216) = a1;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v10 = static AirDropActor.shared;
  *(void *)(v9 + 288) = static AirDropActor.shared;
  return _swift_task_switch(sub_100399C20, v10, 0);
}

uint64_t sub_100399C20()
{
  if (*(unsigned char *)(v0 + 312))
  {
    if (qword_100969D28 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_10000B47C(v1, (uint64_t)qword_100970EB8);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v2, v3)) {
      goto LABEL_16;
    }
    unint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v4 = 0;
    os_log_type_t v5 = "SameAccount device detected, skipping identity update";
LABEL_15:
    _os_log_impl((void *)&_mh_execute_header, v2, v3, v5, v4, 2u);
    swift_slowDealloc();
LABEL_16:

    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  uint64_t v6 = *(void *)(v0 + 232);
  if (!v6) {
    goto LABEL_11;
  }
  sub_10024D388(*(void *)(v0 + 216) + 96, v0 + 136, &qword_10096B540);
  sub_10024D388(v0 + 136, v0 + 120, &qword_10096B540);
  uint64_t v7 = *(void *)(v0 + 128);
  if (!v7) {
    goto LABEL_11;
  }
  uint64_t v8 = *(void *)(v0 + 248);
  if (!v8) {
    goto LABEL_11;
  }
  uint64_t v25 = *(void *)(v0 + 120);
  sub_10024D388(*(void *)(v0 + 216) + 64, v0 + 152, &qword_10096B260);
  sub_10024D388(v0 + 152, v0 + 184, &qword_10096B260);
  unint64_t v9 = *(void *)(v0 + 192);
  if (v9 >> 60 == 15
    || (uint64_t v24 = *(void *)(v0 + 184),
        sub_10024D388(*(void *)(v0 + 216) + 80, v0 + 168, &qword_10096B260),
        sub_10024D388(v0 + 168, v0 + 200, &qword_10096B260),
        unint64_t v10 = *(void *)(v0 + 208),
        v10 >> 60 == 15))
  {
LABEL_11:
    if (qword_100969D28 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000B47C(v11, (uint64_t)qword_100970EB8);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v2, v3)) {
      goto LABEL_16;
    }
    unint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v4 = 0;
    os_log_type_t v5 = "Missing data for identity update, skipping";
    goto LABEL_15;
  }
  uint64_t v14 = *(void *)(v0 + 264);
  id v20 = *(void **)(v0 + 272);
  uint64_t v21 = *(void *)(v0 + 240);
  uint64_t v19 = *(void *)(v0 + 224);
  uint64_t v22 = *(void *)(v0 + 200);
  uint64_t v23 = *(void *)(v0 + 280);
  if (*(unsigned char *)(v0 + 313)) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = *(void *)(v0 + 256);
  }
  swift_bridgeObjectRetain();
  sub_10039DB5C(v0 + 152);
  sub_10039DB5C(v0 + 168);
  id v16 = sub_100362728(v19, v6, v21, v8, v24, v9, v22, v10, v25, v7, v15, v14, v20);
  *(void *)(v0 + 296) = v16;
  uint64_t v17 = *(void **)(v23 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_rpClient);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_10039A02C;
  uint64_t v18 = swift_continuation_init();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_10036188C;
  *(void *)(v0 + 104) = &unk_1008D81F0;
  *(void *)(v0 + 112) = v18;
  [v17 addOrUpdateIdentity:v16 completion:nil];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_10039A02C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 304) = v2;
  uint64_t v3 = *(void *)(v1 + 288);
  if (v2)
  {
    swift_bridgeObjectRelease();
    unint64_t v4 = sub_10039A37C;
  }
  else
  {
    unint64_t v4 = sub_10039A158;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10039A158()
{
  uint64_t v12 = v0;
  if (qword_100969D28 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_100970EB8);
  swift_bridgeObjectRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  os_log_type_t v5 = (void *)v0[37];
  unint64_t v6 = v0[31];
  if (v4)
  {
    uint64_t v7 = v0[30];
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_bridgeObjectRetain();
    v0[10] = sub_100254634(v7, v6, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Added/updated identity for contact %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    sub_10039DB8C((uint64_t)(v0 + 19));
  }
  else
  {
    sub_10039DB8C((uint64_t)(v0 + 19));
    swift_bridgeObjectRelease_n();
  }
  sub_10039DB8C((uint64_t)(v0 + 21));

  unint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_10039A37C()
{
  swift_willThrow();
  if (qword_100969D28 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_100970EB8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  os_log_type_t v5 = (void *)v0[37];
  if (v4)
  {
    uint64_t v11 = (void *)v0[37];
    unint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v6 = 138412290;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v7 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Identity update failed %@", v6, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    sub_10039DB8C((uint64_t)(v0 + 19));

    sub_10039DB8C((uint64_t)(v0 + 21));
    swift_errorRelease();
  }
  else
  {
    sub_10039DB8C((uint64_t)(v0 + 19));

    sub_10039DB8C((uint64_t)(v0 + 21));
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  unint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_10039A5C8()
{
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for NWEndpoint();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UUID();
  v1[6] = v3;
  v1[7] = *(void *)(v3 - 8);
  v1[8] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  return _swift_task_switch(sub_10039A71C, v4, 0);
}

uint64_t sub_10039A71C()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[2];
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  uint64_t v8 = String.utf8CString.getter();
  swift_bridgeObjectRelease();
  nw_content_context_t v9 = nw_content_context_create((const char *)(v8 + 32));
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v7 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_endpoint, v5);
  unint64_t v10 = *(NSObject **)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_browserQueue);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  sub_1006677F0(v10, (uint64_t)v9, 0, (uint64_t)sub_10039DB4C, v11, (uint64_t)sub_10039DB54, v12);
  swift_release_n();
  swift_release_n();
  swift_unknownObjectRelease();
  type metadata accessor for NWConnection();
  swift_allocObject();
  uint64_t v13 = NWConnection.init(to:using:)();
  NWConnection.start(queue:)();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(uint64_t))v0[1];
  return v14(v13);
}

void sub_10039A940(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    a3(1);
  }
}

uint64_t sub_10039A9AC(uint64_t a1, void (*a2)(void))
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = (void *)result;
    sub_10045F320();
    a2();

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10039AA3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  v3[8] = static AirDropActor.shared;
  return _swift_task_switch(sub_10039AAE0, v4, 0);
}

uint64_t sub_10039AAE0()
{
  v0[9] = sub_1006A97C4();
  v0[10] = sub_1006A9F00();
  v0[11] = v1;
  return _swift_task_switch(sub_10039ABA8, 0, 0);
}

uint64_t sub_10039ABA8()
{
  long long v6 = *(_OWORD *)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 96) = v3;
  *(void *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v6;
  *(void *)(v3 + 40) = v1;
  *(unsigned char *)(v3 + 48) = 1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10039ACBC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000029, 0x80000001007BB130, sub_10039DB08, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_10039ACBC()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10039AFDC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10039ADD8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10039ADD8()
{
  sub_100250CC4(v0[10], v0[11]);
  swift_unknownObjectRelease();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10039AEC8;
  uint64_t v2 = v0[6];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000015, 0x80000001007BB160, sub_10039DB0C, v2, &type metadata for SDNWHTTPResponse);
}

uint64_t sub_10039AEC8()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10039B110;
  }
  else {
    uint64_t v2 = sub_10039B0B8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10039AFDC()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_task_dealloc();
  return _swift_task_switch(sub_10039B048, v1, 0);
}

uint64_t sub_10039B048()
{
  sub_100250CC4(v0[10], v0[11]);
  swift_unknownObjectRelease();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10039B0B8()
{
  uint64_t v1 = *(void *)(v0 + 64);
  *(unsigned char *)(v0 + 152) = *(unsigned char *)(v0 + 16);
  *(_OWORD *)(v0 + 136) = *(_OWORD *)(v0 + 24);
  return _swift_task_switch(sub_10039B0E4, v1, 0);
}

uint64_t sub_10039B0E4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  long long v2 = *(_OWORD *)(v0 + 136);
  *(unsigned char *)uint64_t v1 = *(unsigned char *)(v0 + 152);
  *(_OWORD *)(v1 + 8) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10039B110()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10039B128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  uint64_t v4 = type metadata accessor for ContinuousClock();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  v3[8] = static AirDropActor.shared;
  return _swift_task_switch(sub_10039B224, v5, 0);
}

uint64_t sub_10039B224()
{
  ContinuousClock.init()();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10039B2EC;
  return v3(5000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_10039B2EC()
{
  long long v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[8];
  (*(void (**)(void, void))(v2[6] + 8))(v2[7], v2[5]);
  if (v0) {
    uint64_t v4 = sub_10039B468;
  }
  else {
    uint64_t v4 = sub_10039B4CC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10039B468()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10039B4CC()
{
  uint64_t v15 = v0;
  if (qword_100969D28 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_100970EB8);
  id v3 = v1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (char *)v0[3];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v10 = *(void *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_serviceName];
    unint64_t v9 = *(void *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_serviceName + 8];
    swift_bridgeObjectRetain();
    v0[2] = sub_100254634(v10, v9, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "DISCOVER request timeout for serviceName %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  NWConnection.forceCancel()();
  sub_10039DAB4();
  swift_allocError();
  _DWORD *v11 = 504;
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_10039B6F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  v3[8] = static AirDropActor.shared;
  return _swift_task_switch(sub_10039B79C, v4, 0);
}

uint64_t sub_10039B79C()
{
  v0[9] = sub_1006A97C4();
  v0[10] = sub_1006A9F00();
  v0[11] = v1;
  return _swift_task_switch(sub_10039B864, 0, 0);
}

uint64_t sub_10039B864()
{
  long long v6 = *(_OWORD *)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 96) = v3;
  *(void *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v6;
  *(void *)(v3 + 40) = v1;
  *(unsigned char *)(v3 + 48) = 1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10039B978;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000029, 0x80000001007BB130, sub_10039DB08, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_10039B978()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10039BC98;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10039BA94;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10039BA94()
{
  sub_100250CC4(v0[10], v0[11]);
  swift_unknownObjectRelease();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10039BB84;
  uint64_t v2 = v0[6];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000015, 0x80000001007BB160, sub_10039DB0C, v2, &type metadata for SDNWHTTPResponse);
}

uint64_t sub_10039BB84()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10039E4C0;
  }
  else {
    uint64_t v2 = sub_10039BD04;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10039BC98()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_task_dealloc();
  return _swift_task_switch(sub_10039E4C8, v1, 0);
}

uint64_t sub_10039BD04()
{
  uint64_t v1 = *(void *)(v0 + 64);
  *(unsigned char *)(v0 + 152) = *(unsigned char *)(v0 + 16);
  *(_OWORD *)(v0 + 136) = *(_OWORD *)(v0 + 24);
  return _swift_task_switch(sub_10039E4C4, v1, 0);
}

uint64_t sub_10039BD30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  uint64_t v4 = type metadata accessor for ContinuousClock();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  v3[8] = static AirDropActor.shared;
  return _swift_task_switch(sub_10039BE2C, v5, 0);
}

uint64_t sub_10039BE2C()
{
  ContinuousClock.init()();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10039BEF4;
  return v3(5000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_10039BEF4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[8];
  (*(void (**)(void, void))(v2[6] + 8))(v2[7], v2[5]);
  if (v0) {
    uint64_t v4 = sub_10039E4BC;
  }
  else {
    uint64_t v4 = sub_10039C070;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10039C070()
{
  uint64_t v15 = v0;
  if (qword_100969D28 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_100970EB8);
  id v3 = v1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (char *)v0[3];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v10 = *(void *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_serviceName];
    unint64_t v9 = *(void *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_serviceName + 8];
    swift_bridgeObjectRetain();
    v0[2] = sub_100254634(v10, v9, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "IDENTITY-SHARE request timeout for serviceName %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  NWConnection.forceCancel()();
  sub_10039DAB4();
  swift_allocError();
  _DWORD *v11 = 504;
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_10039C3B0()
{
  return type metadata accessor for SDAirDropBonjourDiscoverConnection();
}

uint64_t type metadata accessor for SDAirDropBonjourDiscoverConnection()
{
  uint64_t result = qword_100970F28;
  if (!qword_100970F28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10039C404()
{
  uint64_t result = type metadata accessor for NWEndpoint();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_10039C4D0()
{
  unint64_t result = qword_100974F50;
  if (!qword_100974F50)
  {
    type metadata accessor for SFAirDropSend.Failure();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100974F50);
  }
  return result;
}

uint64_t *sub_10039C528(uint64_t *a1)
{
  uint64_t v2 = a1[4];
  unint64_t v3 = a1[5];
  uint64_t v4 = a1[8];
  unint64_t v5 = a1[9];
  uint64_t v6 = a1[10];
  unint64_t v7 = a1[11];
  sub_100250CB0(*a1, a1[1]);
  swift_bridgeObjectRelease();
  sub_100250CB0(v2, v3);
  swift_bridgeObjectRelease();
  sub_100250CB0(v4, v5);
  sub_100250CB0(v6, v7);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *sub_10039C5EC(uint64_t *a1)
{
  uint64_t v2 = a1[4];
  unint64_t v3 = a1[5];
  uint64_t v4 = a1[8];
  unint64_t v5 = a1[9];
  uint64_t v6 = a1[10];
  unint64_t v7 = a1[11];
  sub_100278C78(*a1, a1[1]);
  swift_bridgeObjectRetain();
  sub_100278C78(v2, v3);
  swift_bridgeObjectRetain();
  sub_100278C78(v4, v5);
  sub_100278C78(v6, v7);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_10039C6B0(uint64_t *a1)
{
  uint64_t v2 = a1[4];
  unint64_t v3 = a1[5];
  uint64_t v4 = a1[8];
  unint64_t v5 = a1[9];
  uint64_t v6 = a1[10];
  unint64_t v7 = a1[11];
  sub_100278C78(*a1, a1[1]);
  swift_bridgeObjectRetain();
  sub_100278C78(v2, v3);
  swift_bridgeObjectRetain();
  sub_100278C78(v4, v5);
  sub_100278C78(v6, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_10039C76C(uint64_t *a1)
{
  uint64_t v2 = a1[4];
  unint64_t v3 = a1[5];
  uint64_t v4 = a1[8];
  unint64_t v5 = a1[9];
  uint64_t v6 = a1[10];
  unint64_t v7 = a1[11];
  sub_100250CB0(*a1, a1[1]);
  swift_bridgeObjectRelease();
  sub_100250CB0(v2, v3);
  swift_bridgeObjectRelease();
  sub_100250CB0(v4, v5);
  sub_100250CB0(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10039C828()
{
  v1[6] = v0;
  sub_10000A844(&qword_10096C920);
  v1[7] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for SDAirDropMessage();
  v1[8] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[9] = v3;
  v1[10] = *(void *)(v3 + 64);
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  v1[13] = static AirDropActor.shared;
  return _swift_task_switch(sub_10039C96C, v4, 0);
}

uint64_t sub_10039C96C()
{
  uint64_t v42 = v0;
  unint64_t v1 = (void **)(v0 + 6);
  uint64_t v2 = [*(id *)(v0[6] + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_nearbyAgent) idSelfIdentity];
  v0[14] = v2;
  id v3 = sub_1004610EC();
  v0[15] = v3;
  v0[16] = v4;
  if (v4 >> 60 != 15)
  {
    uint64_t v5 = (uint64_t)v3;
    unint64_t v6 = v4;
    if (v2)
    {
      id v7 = [v2 idsDeviceID];
      if (v7)
      {
        uint64_t v8 = v7;
        uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v11 = v10;

        v0[17] = v9;
        v0[18] = v11;
        id v12 = [v2 deviceIRKData];
        if (v12)
        {
          uint64_t v13 = v12;
          uint64_t v14 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v16 = v15;

          v0[19] = v14;
          v0[20] = v16;
          id v17 = [v2 edPKData];
          if (v17)
          {
            uint64_t v18 = v17;
            uint64_t v19 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v21 = v20;

            v0[21] = v19;
            v0[22] = v21;
            if (qword_100969D28 != -1) {
              swift_once();
            }
            uint64_t v22 = *v1;
            uint64_t v23 = type metadata accessor for Logger();
            sub_10000B47C(v23, (uint64_t)qword_100970EB8);
            id v24 = v22;
            uint64_t v25 = Logger.logObject.getter();
            os_log_type_t v26 = static os_log_type_t.default.getter();
            BOOL v27 = os_log_type_enabled(v25, v26);
            uint64_t v28 = *v1;
            if (v27)
            {
              char v29 = (uint8_t *)swift_slowAlloc();
              uint64_t v30 = swift_slowAlloc();
              *(_DWORD *)char v29 = 136315138;
              uint64_t v41 = v30;
              uint64_t v31 = NWEndpoint.debugDescription.getter();
              v0[5] = sub_100254634(v31, v32, &v41);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();

              _os_log_impl((void *)&_mh_execute_header, v25, v26, "Sending IDENTITY-SHARE request %s", v29, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
            }
            uint64_t v40 = (void *)swift_task_alloc();
            v0[23] = v40;
            *uint64_t v40 = v0;
            v40[1] = sub_10039CDD0;
            return sub_10039A5C8();
          }
          swift_bridgeObjectRelease();
          sub_100250CC4(v14, v16);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
    }
    sub_100250CB0(v5, v6);
  }
  if (qword_100969D28 != -1) {
    swift_once();
  }
  uint64_t v33 = type metadata accessor for Logger();
  sub_10000B47C(v33, (uint64_t)qword_100970EB8);
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Missing data for identity update, skipping IDENTITY-SHARE", v36, 2u);
    swift_slowDealloc();
    uint64_t v37 = v34;
  }
  else
  {
    uint64_t v37 = v2;
    uint64_t v2 = v34;
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v38 = (uint64_t (*)(void))v0[1];
  return v38();
}

uint64_t sub_10039CDD0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 104);
  *(void *)(*(void *)v1 + 192) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10039CEE8, v2, 0);
}

uint64_t sub_10039CEE8()
{
  uint64_t v2 = v0[21];
  unint64_t v1 = v0[22];
  uint64_t v3 = v0[19];
  unint64_t v4 = v0[20];
  unint64_t v24 = v1;
  unint64_t v5 = v0[16];
  uint64_t v18 = v0[17];
  uint64_t v19 = v0[18];
  unint64_t v6 = (void *)v0[14];
  uint64_t v7 = v0[15];
  uint64_t v8 = (void *)v0[12];
  uint64_t v23 = v0[24];
  uint64_t v21 = v0[11];
  uint64_t v22 = v0[9];
  uint64_t v20 = v0[7];
  uint64_t v25 = (char *)v0[6];
  *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection] = v23;
  swift_retain();
  swift_release();
  id v9 = [v6 featureFlags];
  *uint64_t v8 = 0;
  v8[1] = 0;
  v8[2] = v7;
  v8[3] = v5;
  v8[4] = v3;
  v8[5] = v4;
  v8[6] = v2;
  v8[7] = v1;
  v8[8] = v18;
  v8[9] = v19;
  v8[10] = v9;
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v20, 1, 1, v10);
  sub_10039D78C((uint64_t)v8, v21);
  unint64_t v11 = (*(unsigned __int8 *)(v22 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v12 = swift_allocObject();
  v0[25] = v12;
  *(void *)(v12 + 16) = v23;
  sub_10039D7F4(v21, v12 + v11, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  uint64_t v13 = swift_allocObject();
  v0[26] = v13;
  *(void *)(v13 + 16) = v25;
  *(void *)(v13 + 24) = v23;
  swift_retain_n();
  uint64_t v14 = v25;
  sub_100278C78(v7, v5);
  sub_10025ADCC(v3, v4);
  sub_10025ADCC(v2, v24);
  sub_100278C78(v7, v5);
  sub_10025ADCC(v3, v4);
  sub_10025ADCC(v2, v24);
  swift_bridgeObjectRetain();
  unint64_t v15 = (void *)swift_task_alloc();
  v0[27] = v15;
  *unint64_t v15 = v0;
  v15[1] = sub_10039D1D0;
  uint64_t v16 = v0[7];
  return concurrentRace<A>(priority:operation:against:)(v0 + 2, v16, &unk_100970F68, v12, &unk_100970F78, v13, &type metadata for SDNWHTTPResponse);
}

uint64_t sub_10039D1D0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  sub_10039D9F4(*(void *)(v2 + 56));
  swift_release();
  swift_release();
  if (v0) {
    unint64_t v4 = sub_10039D63C;
  }
  else {
    unint64_t v4 = sub_10039D358;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10039D358()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  unint64_t v3 = *(void *)(v0 + 32);
  if (v1 >= 3)
  {
    unint64_t v11 = (unsigned int *)&enum case for SFAirDropSend.Failure.badRequest(_:);
    if (v1 == 9) {
      unint64_t v11 = (unsigned int *)&enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    }
    if (v1 == 4) {
      uint64_t v12 = (unsigned int *)&enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    }
    else {
      uint64_t v12 = v11;
    }
    uint64_t v13 = type metadata accessor for SFAirDropSend.Failure();
    sub_10039C4D0();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v13 - 8) + 104))(v14, *v12, v13);
    swift_willThrow();
    sub_100250CC4(v2, v3);
    uint64_t v16 = *(void *)(v0 + 168);
    unint64_t v15 = *(void *)(v0 + 176);
    uint64_t v17 = *(void *)(v0 + 152);
    unint64_t v18 = *(void *)(v0 + 160);
    uint64_t v20 = *(void *)(v0 + 120);
    unint64_t v19 = *(void *)(v0 + 128);
    uint64_t v22 = *(void **)(v0 + 112);
    uint64_t v23 = *(void *)(v0 + 96);
    NWConnection.forceCancel()();
    swift_willThrow();
    swift_bridgeObjectRelease();
    sub_100250CB0(v20, v19);
    sub_100250CC4(v17, v18);
    sub_100250CC4(v16, v15);
    swift_bridgeObjectRelease();
    sub_100250CC4(v16, v15);
    sub_100250CC4(v17, v18);
    sub_100250CB0(v20, v19);
    swift_release();

    sub_10039DA54(v23, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 168);
    unint64_t v4 = *(void *)(v0 + 176);
    uint64_t v7 = *(void *)(v0 + 152);
    unint64_t v6 = *(void *)(v0 + 160);
    uint64_t v9 = *(void *)(v0 + 120);
    unint64_t v8 = *(void *)(v0 + 128);
    unint64_t v24 = *(void **)(v0 + 112);
    uint64_t v25 = *(void *)(v0 + 96);
    NWConnection.forceCancel()();
    sub_100250CC4(v2, v3);
    swift_bridgeObjectRelease();
    sub_100250CB0(v9, v8);
    sub_100250CC4(v7, v6);
    sub_100250CC4(v5, v4);
    swift_bridgeObjectRelease();
    sub_100250CC4(v5, v4);
    sub_100250CC4(v7, v6);
    sub_100250CB0(v9, v8);
    swift_release();

    sub_10039DA54(v25, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v10();
}

uint64_t sub_10039D63C()
{
  uint64_t v2 = v0[21];
  unint64_t v1 = v0[22];
  uint64_t v3 = v0[19];
  unint64_t v4 = v0[20];
  uint64_t v6 = v0[15];
  unint64_t v5 = v0[16];
  uint64_t v10 = (void *)v0[14];
  uint64_t v7 = v0[12];
  NWConnection.forceCancel()();
  swift_willThrow();
  swift_bridgeObjectRelease();
  sub_100250CB0(v6, v5);
  sub_100250CC4(v3, v4);
  sub_100250CC4(v2, v1);
  swift_bridgeObjectRelease();
  sub_100250CC4(v2, v1);
  sub_100250CC4(v3, v4);
  sub_100250CB0(v6, v5);
  swift_release();

  sub_10039DA54(v7, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10039D78C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropMessage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10039D7F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10039D85C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SDAirDropMessage() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F0;
  return sub_10039B6F8(a1, v5, v6);
}

uint64_t sub_10039D948(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_10000A6F0;
  return sub_10039BD30(a1, v5, v4);
}

uint64_t sub_10039D9F4(uint64_t a1)
{
  uint64_t v2 = sub_10000A844(&qword_10096C920);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10039DA54(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10039DAB4()
{
  unint64_t result = qword_100970F80;
  if (!qword_100970F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100970F80);
  }
  return result;
}

uint64_t sub_10039DB0C(uint64_t a1)
{
  return sub_100665B60(a1, v1);
}

uint64_t sub_10039DB14()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10039DB4C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
}

uint64_t sub_10039DB54(uint64_t a1, void (*a2)(void))
{
  return sub_10039A9AC(a1, a2);
}

uint64_t sub_10039DB5C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10039DB8C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10039DBC0()
{
  uint64_t v1 = *(void *)(type metadata accessor for SDAirDropMessage() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v5 = (uint64_t *)(v0 + v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v8 = type metadata accessor for SFAirDrop.TransferIdentifier();
      goto LABEL_46;
    case 2u:
      unint64_t v7 = v5[1];
      if (v7 >> 60 == 15) {
        break;
      }
      uint64_t v6 = *v5;
      goto LABEL_3;
    case 3u:
      unint64_t v9 = v5[1];
      if (v9 >> 60 != 15) {
        sub_100250CC4(*v5, v9);
      }
      swift_bridgeObjectRelease();
      unint64_t v10 = v5[5];
      if (v10 >> 60 != 15) {
        sub_100250CC4(v5[4], v10);
      }
      swift_bridgeObjectRelease();
      unint64_t v11 = v5[9];
      if (v11 >> 60 != 15) {
        sub_100250CC4(v5[8], v11);
      }
      unint64_t v12 = v5[11];
      if (v12 >> 60 != 15) {
        sub_100250CC4(v5[10], v12);
      }
      goto LABEL_15;
    case 4u:
      uint64_t v13 = type metadata accessor for SFAirDrop.TransferIdentifier();
      uint64_t v14 = *(void *)(v13 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v0 + v3, 1, v13)) {
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0 + v3, v13);
      }
      unint64_t v15 = (int *)_s14descr1008C9AB9V10AskRequestVMa();
      uint64_t v16 = (char *)v5 + v15[5];
      uint64_t v17 = type metadata accessor for SFAirDrop.TransferType();
      uint64_t v18 = *(void *)(v17 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17)) {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
      }
      unint64_t v19 = (uint64_t *)((char *)v5 + v15[6]);
      unint64_t v20 = v19[1];
      if (v20 >> 60 != 15) {
        sub_100250CC4(*v19, v20);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = (uint64_t *)((char *)v5 + v15[14]);
      unint64_t v22 = v21[1];
      if (v22 >> 60 != 15) {
        sub_100250CC4(*v21, v22);
      }
      uint64_t v23 = (uint64_t *)((char *)v5 + v15[15]);
      unint64_t v24 = v23[1];
      if (v24 >> 60 != 15) {
        sub_100250CC4(*v23, v24);
      }
      uint64_t v25 = (uint64_t *)((char *)v5 + v15[17]);
      unint64_t v7 = v25[1];
      if (v7 >> 60 == 15) {
        break;
      }
      uint64_t v6 = *v25;
      goto LABEL_3;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v7 = v5[12];
      if (v7 >> 60 == 15) {
        break;
      }
      uint64_t v6 = v5[11];
      goto LABEL_3;
    case 6u:
      uint64_t v26 = type metadata accessor for SFAirDrop.TransferIdentifier();
      uint64_t v27 = *(void *)(v26 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v0 + v3, 1, v26)) {
        (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v0 + v3, v26);
      }
      uint64_t v28 = _s14descr1008C92C9V13UploadRequestVMa();
      swift_bridgeObjectRelease();
      char v29 = (uint64_t *)((char *)v5 + *(int *)(v28 + 28));
      unint64_t v30 = v29[1];
      if (v30 >> 60 != 15) {
        sub_100250CC4(*v29, v30);
      }
LABEL_15:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 7u:
    case 0xBu:
    case 0xDu:
      uint64_t v6 = *v5;
      unint64_t v7 = v5[1];
LABEL_3:
      sub_100250CC4(v6, v7);
      break;
    case 8u:
      uint64_t v31 = type metadata accessor for SFAirDrop.TransferIdentifier();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v0 + v3, v31);
      uint64_t v32 = _s14descr1008C9A51V15ExchangeRequestVMa(0);
      goto LABEL_37;
    case 9u:
      uint64_t v33 = type metadata accessor for SFAirDrop.TransferIdentifier();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v0 + v3, v33);
      uint64_t v32 = _s14descr1008C9A51V16ExchangeResponseVMa(0);
LABEL_37:
      uint64_t v34 = (int *)v32;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      os_log_type_t v35 = (char *)v5 + v34[7];
      uint64_t v36 = type metadata accessor for SFAirDrop.ContactInfo.Handle();
      uint64_t v37 = *(void *)(v36 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36)) {
        (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v36);
      }
      unint64_t v38 = (uint64_t *)((char *)v5 + v34[8]);
      unint64_t v39 = v38[1];
      if (v39 >> 60 != 15) {
        sub_100250CC4(*v38, v39);
      }
      uint64_t v5 = (uint64_t *)((char *)v5 + v34[9]);
      if (v5[9]) {
        goto LABEL_42;
      }
      break;
    case 0xAu:
LABEL_42:
      swift_bridgeObjectRelease();
      unint64_t v40 = v5[3];
      if (v40 >> 60 != 15) {
        sub_100250CC4(v5[2], v40);
      }
      sub_100250CC4(v5[4], v5[5]);
      sub_100250CC4(v5[6], v5[7]);
      swift_bridgeObjectRelease();
      break;
    case 0xCu:
      uint64_t v41 = type metadata accessor for SFAirDrop.TransferIdentifier();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v0 + v3, v41);
      uint64_t v5 = (uint64_t *)((char *)v5 + *(int *)(_s14descr1008C9841V12ErrorRequestVMa() + 20));
      uint64_t v8 = type metadata accessor for CodableError();
LABEL_46:
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v8 - 8) + 8))(v5, v8);
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10039E2D4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SDAirDropMessage() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_10000A6F0;
  return sub_10039AA3C(a1, v5, v6);
}

uint64_t sub_10039E3C0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10039E400(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_10000A6F4;
  return sub_10039B128(a1, v5, v4);
}

void sub_10039E4AC(uint64_t a1)
{
  sub_10066412C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(NSObject **)(v1 + 40), *(unsigned char *)(v1 + 48));
}

uint64_t sub_10039E4CC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10000A844(&qword_10096AC88);
    uint64_t v2 = (unsigned char *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v29 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v30 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v30 << 6);
      goto LABEL_28;
    }
    int64_t v11 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v28) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v29 + 8 * v11);
    int64_t v13 = v30 + 1;
    if (!v12)
    {
      int64_t v13 = v30 + 2;
      if (v30 + 2 >= v28) {
        goto LABEL_37;
      }
      unint64_t v12 = *(void *)(v29 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v30 + 3;
        if (v30 + 3 >= v28) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v29 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v30 + 4;
          if (v30 + 4 >= v28) {
            goto LABEL_37;
          }
          unint64_t v12 = *(void *)(v29 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v30 = v13;
LABEL_28:
    uint64_t v16 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    *(void *)&v33[0] = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    unint64_t v15 = *(void **)&v33[0];
    *(void *)&v32[0] = v16;
    type metadata accessor for FileProtectionType(0);
    id v17 = v15;
    id v18 = v16;
    swift_dynamicCast();
    uint64_t v19 = *(void *)&v33[0];
    sub_100249444((_OWORD *)((char *)v33 + 8), v31);
    sub_100249444(v31, v33);
    sub_100249444(v33, v32);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v20 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v21 = -1 << v2[32];
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)&v6[8 * (v22 >> 6)]) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v22) & ~*(void *)&v6[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)&v6[8 * v23];
      }
      while (v27 == -1);
      unint64_t v8 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)&v6[(v8 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v8;
    *(void *)(*((void *)v2 + 6) + 8 * v8) = v19;
    uint64_t result = (uint64_t)sub_100249444(v32, (_OWORD *)(*((void *)v2 + 7) + 32 * v8));
    ++*((void *)v2 + 2);
  }
  int64_t v14 = v30 + 5;
  if (v30 + 5 >= v28)
  {
LABEL_37:
    swift_release();
    sub_10024D330();
    return (uint64_t)v2;
  }
  unint64_t v12 = *(void *)(v29 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v30 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v28) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v29 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_10039E870(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10000A844(&qword_10096A9F0);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    id v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_10024D2D4(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_100249444(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_100249444(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_100249444(v36, v37);
    sub_100249444(v37, &v33);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v20 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)])) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)&v6[8 * v22];
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_100249444(&v33, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_10024D330();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_10039EC38(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10000A844(&qword_10096ABE0);
    uint64_t v2 = (unsigned char *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v11 = v10 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v12 >= v26) {
      goto LABEL_37;
    }
    unint64_t v13 = *(void *)(v27 + 8 * v12);
    int64_t v14 = v8 + 1;
    if (!v13)
    {
      int64_t v14 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v13 = *(void *)(v27 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v13 = *(void *)(v27 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v13 = *(void *)(v27 + 8 * v14);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
    int64_t v8 = v14;
LABEL_28:
    int64_t v16 = *(void **)(*(void *)(a1 + 48) + 8 * v11);
    sub_1002AF920(*(void *)(a1 + 56) + 40 * v11, (uint64_t)v33);
    uint64_t v32 = v16;
    v29[0] = v33[0];
    v29[1] = v33[1];
    uint64_t v30 = v34;
    *(void *)&v31[0] = v16;
    id v17 = v16;
    swift_dynamicCast();
    uint64_t v18 = *(void *)&v31[0];
    sub_100249444((_OWORD *)((char *)v31 + 8), v28);
    sub_100249444(v28, v31);
    sub_100249444(v31, v29);
    Hasher.init(_seed:)();
    type metadata accessor for CFString(0);
    sub_1003B0BB8(&qword_10096B8A0, type metadata accessor for CFString);
    _CFObject.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v19 = -1 << v2[32];
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)])) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)&v6[8 * v21];
      }
      while (v25 == -1);
      unint64_t v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    *(void *)(*((void *)v2 + 6) + 8 * v9) = v18;
    uint64_t result = (uint64_t)sub_100249444(v29, (_OWORD *)(*((void *)v2 + 7) + 32 * v9));
    ++*((void *)v2 + 2);
  }
  int64_t v15 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_10024D330();
    return (uint64_t)v2;
  }
  unint64_t v13 = *(void *)(v27 + 8 * v15);
  if (v13)
  {
    int64_t v14 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v14 >= v26) {
      goto LABEL_37;
    }
    unint64_t v13 = *(void *)(v27 + 8 * v14);
    ++v15;
    if (v13) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_10039F00C(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_10000A844((uint64_t *)&unk_10096BB70);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v37;
  unint64_t v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  unint64_t v10 = (char *)&type metadata for Any + 8;
  unint64_t v11 = &type metadata for Bool;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_10024D330();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    BOOL v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_100249444(v6, v7);
    sub_100249444(v7, v40);
    sub_100249444(v40, &v38);
    unint64_t result = sub_1005838BC(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      int64_t v12 = v7;
      unint64_t v13 = v6;
      uint64_t v14 = v1;
      int64_t v15 = v11;
      int64_t v16 = v10;
      id v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *id v17 = v35;
      v17[1] = v36;
      unint64_t v10 = v16;
      unint64_t v11 = v15;
      uint64_t v1 = v14;
      uint64_t v6 = v13;
      unint64_t v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      sub_10024D338((uint64_t)v18);
      unint64_t result = (unint64_t)sub_100249444(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v27 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_100249444(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_10039F368(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_10000A844((uint64_t *)&unk_10096BB70);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v33 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v32 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v38;
  unint64_t v7 = &v40;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v34 = 0;
  unint64_t v9 = (unint64_t *)&qword_1009745A0;
  unint64_t v10 = NSNumber_ptr;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v19 = v34 + 1;
  if (__OFADD__(v34, 1)) {
    goto LABEL_35;
  }
  if (v19 >= v32) {
    goto LABEL_32;
  }
  unint64_t v20 = *(void *)(v33 + 8 * v19);
  int64_t v21 = v34 + 1;
  if (!v20)
  {
    int64_t v21 = v34 + 2;
    if (v34 + 2 >= v32) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v33 + 8 * v21);
    if (!v20)
    {
      int64_t v21 = v34 + 3;
      if (v34 + 3 >= v32) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v33 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v34 + 4;
        if (v34 + 4 >= v32) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v33 + 8 * v21);
        if (!v20)
        {
          int64_t v22 = v34 + 5;
          if (v34 + 5 < v32)
          {
            unint64_t v20 = *(void *)(v33 + 8 * v22);
            if (v20)
            {
              int64_t v21 = v34 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v21 = v22 + 1;
              if (__OFADD__(v22, 1)) {
                goto LABEL_36;
              }
              if (v21 >= v32) {
                break;
              }
              unint64_t v20 = *(void *)(v33 + 8 * v21);
              ++v22;
              if (v20) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_10024D330();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  int64_t v34 = v21;
  uint64_t v35 = (v20 - 1) & v20;
  for (unint64_t i = __clz(__rbit64(v20)) + (v21 << 6); ; unint64_t i = __clz(__rbit64(v5)) | (v34 << 6))
  {
    int64_t v23 = (uint64_t *)(*(void *)(v1 + 48) + 16 * i);
    BOOL v24 = *(void **)(*(void *)(v1 + 56) + 8 * i);
    uint64_t v36 = *v23;
    uint64_t v37 = v23[1];
    sub_10000B740(0, v9);
    swift_bridgeObjectRetain();
    id v25 = v24;
    swift_dynamicCast();
    sub_100249444(v6, v7);
    sub_100249444(v7, v41);
    sub_100249444(v41, &v39);
    unint64_t result = sub_1005838BC(v36, v37);
    unint64_t v26 = result;
    if (v27)
    {
      unint64_t v11 = v7;
      int64_t v12 = v6;
      uint64_t v13 = v1;
      uint64_t v14 = v10;
      int64_t v15 = v9;
      int64_t v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *int64_t v16 = v36;
      v16[1] = v37;
      unint64_t v9 = v15;
      unint64_t v10 = v14;
      uint64_t v1 = v13;
      uint64_t v6 = v12;
      unint64_t v7 = v11;
      id v17 = (_OWORD *)(v2[7] + 32 * v26);
      sub_10024D338((uint64_t)v17);
      unint64_t result = (unint64_t)sub_100249444(&v39, v17);
      unint64_t v5 = v35;
      if (!v35) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v28 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v28 = v36;
    v28[1] = v37;
    unint64_t result = (unint64_t)sub_100249444(&v39, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v29 = v2[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30) {
      goto LABEL_34;
    }
    v2[2] = v31;
    unint64_t v5 = v35;
    if (!v35) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v35 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_10039F6E8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10000A844(&qword_10096A9F0);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v26 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v25 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v25) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v26 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v25) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v26 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v25) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v26 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v25) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v26 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    int v17 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * v12);
    sub_10024D2D4(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v38 + 8);
    LODWORD(v38[0]) = v17;
    v36[0] = v38[0];
    v36[1] = v38[1];
    uint64_t v37 = v39;
    LODWORD(v35[0]) = v17;
    swift_dynamicCast();
    sub_100249444((_OWORD *)((char *)v36 + 8), v30);
    long long v31 = v27;
    long long v32 = v28;
    uint64_t v33 = v29;
    sub_100249444(v30, v34);
    long long v27 = v31;
    long long v28 = v32;
    uint64_t v29 = v33;
    sub_100249444(v34, v35);
    sub_100249444(v35, &v31);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v18 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)&v6[8 * (v19 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v19) & ~*(void *)&v6[8 * (v19 >> 6)])) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v21 = 0;
      unint64_t v22 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v22 && (v21 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v23 = v20 == v22;
        if (v20 == v22) {
          unint64_t v20 = 0;
        }
        v21 |= v23;
        uint64_t v24 = *(void *)&v6[8 * v20];
      }
      while (v24 == -1);
      unint64_t v9 = __clz(__rbit64(~v24)) + (v20 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v27;
    *(_OWORD *)(v10 + 16) = v28;
    *(void *)(v10 + 32) = v29;
    uint64_t result = (uint64_t)sub_100249444(&v31, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v25)
  {
LABEL_37:
    swift_release();
    sub_10024D330();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v26 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v25) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v26 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_10039FAA0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v40 = a3;
  uint64_t v43 = a2;
  uint64_t v44 = a4;
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_10096AC10);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  os_log_type_t v53 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v49 = (char *)&v39 - v12;
  uint64_t v54 = (char *)&_swiftEmptyArrayStorage;
  uint64_t v13 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v41 = v13;
  uint64_t v42 = a1;
  if (v13)
  {
    int64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v14 = v9 + 16;
    unint64_t v47 = (*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64);
    uint64_t v48 = v14;
    uint64_t v16 = a1 + v47;
    uint64_t v17 = *(void *)(v14 + 56);
    os_log_type_t v50 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 32);
    uint64_t v18 = (void (**)(char *, char *, uint64_t))(v14 + 16);
    uint64_t v45 = (void (**)(char *, uint64_t))(v14 - 8);
    uint64_t v46 = v17;
    uint64_t v51 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 40);
    uint64_t v52 = v15;
    unint64_t v39 = (v14 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    unint64_t v19 = v49;
    v15(v7, v16, v8);
    while (1)
    {
      unint64_t v20 = *v51;
      (*v51)(v7, 0, 1, v8);
      if ((*v50)(v7, 1, v8) == 1) {
        break;
      }
      char v21 = *v18;
      (*v18)(v19, v7, v8);
      if (URL.isFileURL.getter())
      {
        (*v45)(v19, v8);
      }
      else
      {
        v21(v53, v19, v8);
        unint64_t v22 = v54;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10025539C(0, *((void *)v22 + 2) + 1, 1);
          unint64_t v22 = v54;
        }
        unint64_t v24 = *((void *)v22 + 2);
        unint64_t v23 = *((void *)v22 + 3);
        if (v24 >= v23 >> 1)
        {
          sub_10025539C(v23 > 1, v24 + 1, 1);
          unint64_t v22 = v54;
        }
        *((void *)v22 + 2) = v24 + 1;
        uint64_t v17 = v46;
        v21(&v22[v47 + v24 * v46], v53, v8);
        uint64_t v54 = v22;
        unint64_t v19 = v49;
      }
      v16 += v17;
      if (!--v13)
      {
        v20(v7, 1, 1, v8);
        break;
      }
      v52(v7, v16, v8);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  uint64_t v25 = v42;
  swift_bridgeObjectRelease();
  sub_10000A7E8((uint64_t)v7, (uint64_t *)&unk_10096AC10);
  uint64_t v26 = v54;
  uint64_t v27 = *((void *)v54 + 2);
  if (v27)
  {
    if (v27 != v41)
    {
      if (qword_100969D30 != -1) {
        swift_once();
      }
      uint64_t v28 = type metadata accessor for Logger();
      sub_10000B47C(v28, (uint64_t)qword_100970FA8);
      uint64_t v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v29, v30))
      {
        long long v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)long long v31 = 0;
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "Asked to view mixed files and links, only viewing links", v31, 2u);
        swift_slowDealloc();
      }
    }
    uint64_t v54 = 0;
    uint64_t v32 = swift_allocObject();
    uint64_t v33 = v43;
    *(void *)(v32 + 16) = v26;
    *(void *)(v32 + 24) = v33;
    id v34 = v33;
  }
  else
  {
    swift_release();
    uint64_t v54 = 0;
    uint64_t v35 = swift_allocObject();
    uint64_t v36 = v43;
    *(void *)(v35 + 16) = v43;
    *(unsigned char *)(v35 + 24) = v40 & 1;
    *(void *)(v35 + 32) = v25;
    id v37 = v36;
    swift_bridgeObjectRetain();
  }
  return SFProgressTask.init(_:initialProgress:operation:file:line:)();
}

char *sub_10039FFF4(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  unint64_t v47 = a1;
  uint64_t v48 = a2;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v45 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  int v40 = (char *)v37 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v37 - v11;
  uint64_t v13 = sub_10000A844((uint64_t *)&unk_10096AC10);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  os_log_type_t v50 = (char *)v37 - v17;
  uint64_t v18 = *(void *)(a3 + 16);
  if (v18)
  {
    uint64_t v54 = v3;
    unint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v19 = v6 + 16;
    uint64_t v46 = v20;
    unint64_t v21 = (*(unsigned __int8 *)(v19 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 64);
    v37[1] = a3;
    unint64_t v38 = v21;
    uint64_t v22 = a3 + v21;
    uint64_t v23 = *(void *)(v19 + 56);
    uint64_t v49 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 40);
    uint64_t v52 = (void (**)(char *, char *, uint64_t))(v19 + 16);
    os_log_type_t v53 = (unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 32);
    uint64_t v43 = (void (**)(char *, uint64_t))(v19 - 8);
    uint64_t v44 = v12;
    swift_bridgeObjectRetain();
    uint64_t v51 = (char *)_swiftEmptyArrayStorage;
    unint64_t v24 = v50;
    unint64_t v39 = v16;
    uint64_t v42 = v19;
    while (1)
    {
      v46(v24, v22, v5);
      uint64_t v41 = *v49;
      v41(v24, 0, 1, v5);
      uint64_t v25 = *v53;
      if ((*v53)(v24, 1, v5) == 1) {
        break;
      }
      uint64_t v26 = *v52;
      uint64_t v27 = v5;
      uint64_t v28 = (uint64_t)v16;
      uint64_t v29 = v44;
      (*v52)(v44, v24, v27);
      uint64_t v30 = v54;
      v47(v29);
      uint64_t v54 = v30;
      if (v30)
      {
        (*v43)(v29, v27);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v51;
      }
      (*v43)(v29, v27);
      uint64_t v16 = (char *)v28;
      if (v25((char *)v28, 1, v27) == 1)
      {
        sub_10000A7E8(v28, (uint64_t *)&unk_10096AC10);
        unint64_t v24 = v50;
        uint64_t v5 = v27;
      }
      else
      {
        long long v31 = v40;
        v26(v40, (char *)v28, v27);
        v26(v45, v31, v27);
        uint64_t v5 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v51 = (char *)sub_100253318(0, *((void *)v51 + 2) + 1, 1, (unint64_t)v51);
        }
        unint64_t v33 = *((void *)v51 + 2);
        unint64_t v32 = *((void *)v51 + 3);
        if (v33 >= v32 >> 1) {
          uint64_t v51 = (char *)sub_100253318(v32 > 1, v33 + 1, 1, (unint64_t)v51);
        }
        id v34 = v51;
        *((void *)v51 + 2) = v33 + 1;
        v26(&v34[v38 + v33 * v23], v45, v27);
        unint64_t v24 = v50;
        uint64_t v16 = v39;
      }
      v22 += v23;
      if (!--v18)
      {
        v41(v50, 1, 1, v5);
        break;
      }
    }
  }
  else
  {
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    uint64_t v51 = (char *)_swiftEmptyArrayStorage;
    v35(v50, 1, 1, v5);
  }
  swift_bridgeObjectRelease();
  return v51;
}

void sub_1003A046C(unint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10000A844(&qword_100970FC8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)type metadata accessor for SFSecurityScopedURL();
  uint64_t v28 = *(v9 - 1);
  uint64_t v10 = __chkstk_darwin(v9);
  unint64_t v33 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v27 = (char *)&v25 - v12;
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v13; uint64_t v13 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v32 = a1 & 0xC000000000000001;
    uint64_t v29 = v28 + 32;
    uint64_t v30 = (unsigned int (**)(char *, uint64_t, void *))(v28 + 48);
    id v34 = _swiftEmptyArrayStorage;
    uint64_t v14 = 4;
    uint64_t v25 = a2;
    unint64_t v26 = a1;
    uint64_t v31 = v13;
    uint64_t v15 = (void (**)(char *, char *, void *))(v28 + 32);
    while (1)
    {
      uint64_t v16 = v9;
      uint64_t v17 = v32 ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a1 + 8 * v14);
      uint64_t v9 = v17;
      uint64_t v18 = v14 - 3;
      if (__OFADD__(v14 - 4, 1)) {
        break;
      }
      uint64_t v35 = v17;
      sub_1003AA28C(&v35, a2, (uint64_t)v8);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return;
      }

      uint64_t v9 = v16;
      if ((*v30)(v8, 1, v16) == 1)
      {
        sub_10000A7E8((uint64_t)v8, &qword_100970FC8);
      }
      else
      {
        uint64_t v19 = *v15;
        unint64_t v20 = v27;
        (*v15)(v27, v8, v16);
        v19(v33, v20, v16);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v21 = (unint64_t)v34;
        }
        else {
          unint64_t v21 = sub_1002540B0(0, v34[2] + 1, 1, (unint64_t)v34);
        }
        unint64_t v23 = *(void *)(v21 + 16);
        unint64_t v22 = *(void *)(v21 + 24);
        if (v23 >= v22 >> 1) {
          unint64_t v21 = sub_1002540B0(v22 > 1, v23 + 1, 1, v21);
        }
        *(void *)(v21 + 16) = v23 + 1;
        unint64_t v24 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
        id v34 = (void *)v21;
        uint64_t v9 = v16;
        v19((char *)(v21 + v24 + *(void *)(v28 + 72) * v23), v33, v16);
        a2 = v25;
        a1 = v26;
      }
      ++v14;
      if (v18 == v31) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
LABEL_22:
  swift_bridgeObjectRelease();
}

uint64_t sub_1003A07DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v24 = a3;
  uint64_t v26 = a1;
  uint64_t v27 = a4;
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_10096AC10);
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v25 + 64);
  uint64_t v7 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v10 = &v23[-v9];
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = &v23[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = &v23[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v16 + 16))(v18, a2, v15);
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v16 + 88))(v18, v15) == enum case for SFAirDropReceive.ItemDestination.customURL(_:))
  {
    (*(void (**)(unsigned char *, uint64_t))(v16 + 96))(v18, v15);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32))(v14, v18, v11);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 16))(v10, v14, v11);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    uint64_t v28 = 0;
    sub_1003AFF3C((uint64_t)v10, (uint64_t)v8);
    unint64_t v19 = (*(unsigned __int8 *)(v25 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    uint64_t v20 = swift_allocObject();
    sub_10024D388((uint64_t)v8, v20 + v19, (uint64_t *)&unk_10096AC10);
    *(void *)(v20 + ((v6 + v19 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
    swift_bridgeObjectRetain();
    sub_10000A844((uint64_t *)&unk_10096C8B0);
    SFProgressTask.init(_:initialProgress:operation:file:line:)();
    sub_10000A7E8((uint64_t)v10, (uint64_t *)&unk_10096AC10);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    uint64_t v28 = 0;
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v26;
    *(unsigned char *)(v22 + 24) = v24 & 1;
    swift_bridgeObjectRetain();
    sub_10000A844((uint64_t *)&unk_10096C8B0);
    SFProgressTask.init(_:initialProgress:operation:file:line:)();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v16 + 8))(v18, v15);
  }
}

uint64_t sub_1003A0C44@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_10000A844(&qword_1009700B0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A844((uint64_t *)&unk_10096AC10);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v15 = v1[1];
  unint64_t v16 = *(void *)(*v1 + 16);
  if (v15 == v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_5:
    sub_10000A7E8((uint64_t)v9, (uint64_t *)&unk_10096AC10);
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  }
  if (v15 >= v16)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v9, *v1+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v15, v10);
    v1[1] = v15 + 1;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
      goto LABEL_5;
    }
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v17(v14, v9, v10);
    uint64_t v18 = &v6[*(int *)(v3 + 48)];
    uint64_t v19 = v1[2];
    uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v17)(v18, v14, v10);
    if (!__OFADD__(v19, 1))
    {
      v1[2] = v19 + 1;
      uint64_t v20 = (char *)a1 + *(int *)(v3 + 48);
      *a1 = v19;
      v17(v20, v18, v10);
      return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
    }
  }
  __break(1u);
  return result;
}

uint64_t Sequence<>.fileCoordinatorReadingOptions()()
{
  if (Sequence.contains(where:)()) {
    return 8;
  }
  else {
    return 131074;
  }
}

uint64_t sub_1003A0F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[8] = a4;
  v5[9] = v4;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  uint64_t v6 = type metadata accessor for URL();
  v5[10] = v6;
  v5[11] = *(void *)(v6 - 8);
  v5[12] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SFSecurityScopedURL();
  v5[13] = v7;
  v5[14] = *(void *)(v7 - 8);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v8 = static AirDropActor.shared;
  v5[17] = static AirDropActor.shared;
  return _swift_task_switch(sub_1003A1104, v8, 0);
}

uint64_t sub_1003A1104()
{
  uint64_t v1 = v0[2].i64[1];
  if (!v1) {
    goto LABEL_16;
  }
  uint64_t v2 = _swiftEmptyArrayStorage;
  uint64_t v31 = _swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v26 = v4;
  if (v3)
  {
    uint64_t v5 = v0[7].i64[0];
    uint64_t v6 = *(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16);
    v5 += 16;
    uint64_t v7 = *(void *)(v5 + 56);
    unint64_t v8 = v4 + ((*(unsigned __int8 *)(v5 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 64));
    uint64_t v9 = (void (**)(uint64_t, uint64_t))(v0[5].i64[1] + 8);
    uint64_t v27 = (void (**)(uint64_t, uint64_t))(v5 - 8);
    unint64_t v28 = (*(unsigned __int8 *)(v5 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 64);
    uint64_t v29 = (void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    uint64_t v30 = v6;
    do
    {
      uint64_t v10 = v0[6].i64[0];
      uint64_t v11 = v0[5].i64[0];
      v30(v0[8].i64[0], v8, v0[6].i64[1]);
      SFSecurityScopedURL.url.getter();
      char v12 = URL.isFileURL.getter();
      (*v9)(v10, v11);
      if (v12)
      {
        uint64_t v13 = *v29;
        (*v29)(v0[7].i64[1], v0[8].i64[0], v0[6].i64[1]);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100255688(0, v2[2] + 1, 1);
          uint64_t v2 = v31;
        }
        unint64_t v15 = v2[2];
        unint64_t v14 = v2[3];
        if (v15 >= v14 >> 1)
        {
          sub_100255688(v14 > 1, v15 + 1, 1);
          uint64_t v2 = v31;
        }
        uint64_t v16 = v0[7].i64[1];
        uint64_t v17 = v0[6].i64[1];
        v2[2] = v15 + 1;
        v13((uint64_t)v2 + v28 + v15 * v7, v16, v17);
        uint64_t v31 = v2;
      }
      else
      {
        (*v27)(v0[8].i64[0], v0[6].i64[1]);
      }
      v8 += v7;
      --v3;
    }
    while (v3);
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = v2[2];
  swift_release();
  if (v18)
  {
    uint64_t v20 = v0[3].i64[0];
    uint64_t v19 = v0[3].i64[1];
    uint64_t v21 = (int8x16_t *)swift_task_alloc();
    v0[9].i64[0] = (uint64_t)v21;
    v21[1] = vextq_s8(v0[4], v0[4], 8uLL);
    v21[2].i64[0] = v20;
    v21[2].i64[1] = v19;
    v21[3].i64[0] = v26;
    uint64_t v22 = (void *)swift_task_alloc();
    v0[9].i64[1] = (uint64_t)v22;
    uint64_t v23 = sub_10000A844(&qword_100971108);
    *uint64_t v22 = v0;
    v22[1] = sub_1003A1428;
    return static SFSecurityScopedURL.withAccess<A>(to:body:)(&v0[1], v26, &unk_100971100, v21, v23);
  }
  else
  {
LABEL_16:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v24 = (uint64_t (*)(void, void, void))v0->i64[1];
    return v24(0, 0, 0);
  }
}

uint64_t sub_1003A1428()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 136);
    uint64_t v4 = sub_1003A15E8;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 136);
    swift_task_dealloc();
    uint64_t v4 = sub_1003A154C;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1003A154C()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[4];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[1];
  return v4(v2, v1, v3);
}

uint64_t sub_1003A15E8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003A1674()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100970FA8);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100970FA8);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1003A173C()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  sub_10000B740(0, (unint64_t *)&qword_10096A1A0);
  static DispatchQoS.unspecified.getter();
  v7[1] = _swiftEmptyArrayStorage;
  sub_1003B0BB8((unint64_t *)&unk_100974840, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000A844((uint64_t *)&unk_10096A1B0);
  sub_1002AE308((unint64_t *)&qword_100974850, (uint64_t *)&unk_10096A1B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  qword_100970FC0 = result;
  return result;
}

uint64_t sub_1003A19A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 248) = a5;
  *(void *)(v5 + 56) = a3;
  *(void *)(v5 + 64) = a4;
  *(void *)(v5 + 40) = a1;
  *(void *)(v5 + 48) = a2;
  uint64_t v6 = sub_10000A844(&qword_1009700B0);
  *(void *)(v5 + 72) = v6;
  *(void *)(v5 + 80) = *(void *)(v6 - 8);
  *(void *)(v5 + 88) = swift_task_alloc();
  sub_10000A844(&qword_1009700B8);
  *(void *)(v5 + 96) = swift_task_alloc();
  *(void *)(v5 + 104) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SFPlatform();
  *(void *)(v5 + 112) = v7;
  *(void *)(v5 + 120) = *(void *)(v7 - 8);
  *(void *)(v5 + 128) = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  *(void *)(v5 + 136) = swift_task_alloc();
  *(void *)(v5 + 144) = swift_task_alloc();
  *(void *)(v5 + 152) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for URL();
  *(void *)(v5 + 160) = v8;
  *(void *)(v5 + 168) = *(void *)(v8 - 8);
  *(void *)(v5 + 176) = swift_task_alloc();
  *(void *)(v5 + 184) = swift_task_alloc();
  *(void *)(v5 + 192) = swift_task_alloc();
  *(void *)(v5 + 200) = swift_task_alloc();
  *(void *)(v5 + 208) = swift_task_alloc();
  *(void *)(v5 + 216) = swift_task_alloc();
  *(void *)(v5 + 224) = swift_task_alloc();
  *(void *)(v5 + 232) = swift_task_alloc();
  *(void *)(v5 + 240) = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v9 = static AirDropActor.shared;
  return _swift_task_switch(sub_1003A1C78, v9, 0);
}

uint64_t sub_1003A1C78()
{
  uint64_t v148 = v0;
  uint64_t v1 = v0[8];
  v147[0] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = v0[21];
  uint64_t v146 = v0;
  unint64_t v128 = v2;
  if (v2)
  {
    uint64_t v6 = *(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16);
    uint64_t v5 = v4 + 16;
    uint64_t v139 = v6;
    unint64_t v131 = (*(unsigned __int8 *)(v5 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 64);
    unint64_t v7 = v3 + v131;
    uint64_t v8 = *(void *)(v5 + 56);
    uint64_t v9 = v2;
    uint64_t v134 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
    uint64_t v10 = (void (**)(void, void, void))(v5 + 16);
    uint64_t v129 = (void (**)(void, void))(v5 - 8);
    uint64_t v142 = _swiftEmptyArrayStorage;
    uint64_t v137 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 40);
    do
    {
      uint64_t v11 = v10;
      uint64_t v13 = v0[19];
      uint64_t v12 = v0[20];
      v139(v13, v7, v12);
      unint64_t v14 = *v137;
      (*v137)(v13, 0, 1, v12);
      if ((*v134)(v13, 1, v12) == 1)
      {
        uint64_t v2 = v128;
        uint64_t v21 = v142;
        goto LABEL_15;
      }
      uint64_t v10 = v11;
      unint64_t v15 = *v11;
      (*v11)(v0[30], v0[19], v0[20]);
      if (URL.isFileURL.getter())
      {
        v15(v0[29], v0[30], v0[20]);
        uint64_t v16 = (uint64_t)v142;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10025539C(0, v142[2] + 1, 1);
          uint64_t v16 = v147[0];
        }
        unint64_t v18 = *(void *)(v16 + 16);
        unint64_t v17 = *(void *)(v16 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_10025539C(v17 > 1, v18 + 1, 1);
          uint64_t v16 = v147[0];
        }
        uint64_t v0 = v146;
        uint64_t v19 = v146[29];
        uint64_t v20 = v146[20];
        *(void *)(v16 + 16) = v18 + 1;
        uint64_t v10 = v11;
        v15(v16 + v131 + v18 * v8, v19, v20);
        uint64_t v142 = (void *)v16;
        v147[0] = v16;
      }
      else
      {
        (*v129)(v0[30], v0[20]);
      }
      v7 += v8;
      --v9;
    }
    while (v9);
    uint64_t v2 = v128;
    uint64_t v21 = v142;
    v14(v0[19], 1, 1, v0[20]);
  }
  else
  {
    unint64_t v14 = *(void (**)(void, uint64_t, uint64_t, void))(v4 + 56);
    uint64_t v21 = _swiftEmptyArrayStorage;
    v14(v0[19], 1, 1, v0[20]);
  }
LABEL_15:
  uint64_t v22 = v0[19];
  swift_bridgeObjectRelease();
  sub_10000A7E8(v22, (uint64_t *)&unk_10096AC10);
  uint64_t v23 = v21[2];
  swift_release();
  if (!v23) {
    goto LABEL_48;
  }
  uint64_t v25 = v0[15];
  uint64_t v24 = v0[16];
  uint64_t v26 = v0[14];
  static SFPlatform.visionOS.getter();
  char v27 = static SFPlatform.isPlatform(_:)();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  if (v27)
  {
    if (!*((unsigned char *)v0 + 248)) {
      goto LABEL_43;
    }
    sub_10000B740(0, (unint64_t *)&qword_10096AC60);
    unint64_t v28 = (void *)static NSUserDefaults.airdrop.getter();
    char v29 = SFAirDropUserDefaults.overrideReceivedFilesPathiOS.getter();

    if (v29) {
      goto LABEL_43;
    }
  }
  else if (!*((unsigned char *)v0 + 248) {
         || (sub_10000B740(0, (unint64_t *)&qword_10096AC60),
  }
             uint64_t v30 = (void *)static NSUserDefaults.airdrop.getter(),
             char v31 = SFAirDropUserDefaults.overrideReceivedFilesPathiOS.getter(),
             v30,
             (v31 & 1) != 0)
         || (uint64_t v32 = (void *)static NSUserDefaults.airdrop.getter(),
             char v33 = SFAirDropUserDefaults.moveToAppEnabled.getter(),
             v32,
             (v33 & 1) == 0))
  {
LABEL_43:
    sub_10000B740(0, (unint64_t *)&qword_10096AC60);
    uint64_t v85 = (void *)static NSUserDefaults.airdrop.getter();
    char v86 = SFAirDropUserDefaults.overrideReceivedFilesPathiOS.getter();

    if (v86)
    {
      if (qword_100969D30 != -1) {
LABEL_75:
      }
        swift_once();
      uint64_t v87 = type metadata accessor for Logger();
      sub_10000B47C(v87, (uint64_t)qword_100970FA8);
      uint64_t v88 = Logger.logObject.getter();
      os_log_type_t v89 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v88, v89))
      {
        uint64_t v90 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v90 = 0;
        _os_log_impl((void *)&_mh_execute_header, v88, v89, "Not saving files to Downloads because path was overridden", v90, 2u);
        swift_slowDealloc();
      }
    }
LABEL_48:
    *(void *)v0[5] = v0[8];
    swift_bridgeObjectRetain();
    goto LABEL_49;
  }
  if (qword_100969D30 != -1) {
    swift_once();
  }
  unint64_t v124 = v0 + 2;
  uint64_t v34 = type metadata accessor for Logger();
  sub_10000B47C(v34, (uint64_t)qword_100970FA8);
  uint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    id v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v37 = 0;
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Saving files to Downloads", v37, 2u);
    swift_slowDealloc();
  }
  uint64_t v38 = v0[21];
  uint64_t v39 = v0[10];
  uint64_t v132 = v0[9];

  uint64_t v135 = v38;
  uint64_t v138 = (void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16);
  uint64_t v40 = v38 + 56;
  uint64_t v123 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
  uint64_t v41 = (void (**)(void, char *, void))(v38 + 32);
  unint64_t v126 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56);
  id v127 = [self defaultManager];
  uint64_t v125 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
  double v42 = (double)v2;
  uint64_t v130 = (void (**)(uint64_t, uint64_t))(v38 + 8);
  swift_bridgeObjectRetain();
  uint64_t v122 = 0;
  unint64_t v43 = 0;
  uint64_t v140 = _swiftEmptyArrayStorage;
  uint64_t v133 = v41;
  BOOL v44 = v2 == 0;
  if (v2) {
    goto LABEL_29;
  }
LABEL_28:
  v14(v0[18], 1, 1, v0[20]);
  uint64_t v45 = v2;
LABEL_31:
  uint64_t v48 = v0[12];
  uint64_t v49 = v0[9];
  sub_10000A7E8(v0[18], (uint64_t *)&unk_10096AC10);
  (*v126)(v48, 1, 1, v49);
  while (1)
  {
    uint64_t v59 = v0[13];
    uint64_t v60 = v0[9];
    sub_10024D388(v0[12], v59, &qword_1009700B8);
    if ((*v125)(v59, 1, v60) == 1) {
      break;
    }
    uint64_t v61 = (char *)v0[13];
    uint64_t v62 = *(void *)v61;
    uint64_t v63 = *v41;
    (*v41)(v0[27], &v61[*(int *)(v132 + 48)], v0[20]);
    URL._bridgeToObjectiveC()(v64);
    uint64_t v66 = v65;
    v0[2] = 0;
    id v67 = [v127 _doc_importItemAtURL:v65 toDestination:1 error:v124];

    char v68 = (void *)v0[2];
    if (!v67)
    {
      uint64_t v105 = v0[27];
      uint64_t v106 = v0[22];
      uint64_t v107 = v0[20];
      id v108 = v68;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _convertNSErrorToError(_:)();

      swift_willThrow();
      (*v138)(v106, v105, v107);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v109 = Logger.logObject.getter();
      os_log_type_t v110 = static os_log_type_t.error.getter();
      BOOL v111 = os_log_type_enabled(v109, v110);
      uint64_t v112 = v0[22];
      uint64_t v113 = v0[20];
      if (v111)
      {
        uint64_t v114 = swift_slowAlloc();
        uint64_t v136 = (void *)swift_slowAlloc();
        v147[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v114 = 136315394;
        sub_1003B0BB8((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v115 = dispatch thunk of CustomStringConvertible.description.getter();
        v0[3] = sub_100254634(v115, v116, v147);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v141 = *v130;
        (*v130)(v112, v113);
        *(_WORD *)(v114 + 12) = 2112;
        swift_errorRetain();
        uint64_t v117 = _swift_stdlib_bridgeErrorToNSError();
        v0[4] = v117;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v136 = v117;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v109, v110, "Failed to save file %s to Downloads: %@", (uint8_t *)v114, 0x16u);
        sub_10000A844(&qword_10096B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v141 = *v130;
        (*v130)(v0[22], v0[20]);
        swift_errorRelease();
        swift_errorRelease();
      }

      uint64_t v118 = v0[27];
      uint64_t v119 = v146[20];
      swift_willThrow();

      v141(v118, v119);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v91 = (uint64_t (*)(void))v146[1];
      goto LABEL_50;
    }
    unint64_t v144 = v45;
    uint64_t v69 = v40;
    uint64_t v70 = v14;
    uint64_t v72 = v0[25];
    uint64_t v71 = v0[26];
    uint64_t v73 = v0[20];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    id v74 = v68;

    (*v138)(v72, v71, v73);
    unint64_t v75 = (unint64_t)v140;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v75 = sub_100253318(0, v140[2] + 1, 1, (unint64_t)v140);
    }
    unint64_t v77 = *(void *)(v75 + 16);
    unint64_t v76 = *(void *)(v75 + 24);
    if (v77 >= v76 >> 1) {
      unint64_t v75 = sub_100253318(v76 > 1, v77 + 1, 1, v75);
    }
    uint64_t v78 = (char *)v146[25];
    uint64_t v79 = v146[26];
    uint64_t v80 = v146[20];
    *(void *)(v75 + 16) = v77 + 1;
    uint64_t v140 = (void *)v75;
    unint64_t v81 = v75
        + ((*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80))
        + *(void *)(v135 + 72) * v77;
    uint64_t v41 = v133;
    v63(v81, v78, v80);
    uint64_t v0 = *(void **)(v135 + 8);
    ((void (*)(uint64_t, uint64_t))v0)(v79, v80);
    if (__OFADD__(v62, 1))
    {
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    uint64_t v82 = v146[27];
    uint64_t v83 = v146[20];
    uint64_t v84 = (void (*)(uint64_t *))v146[6];
    *(double *)uint64_t v147 = (double)(v62 + 1) / v42;
    v84(v147);
    ((void (*)(uint64_t, uint64_t))v0)(v82, v83);
    uint64_t v0 = v146;
    uint64_t v2 = v128;
    unint64_t v14 = v70;
    uint64_t v40 = v69;
    unint64_t v43 = v144;
    BOOL v44 = v144 >= v128;
    if (v144 == v128) {
      goto LABEL_28;
    }
LABEL_29:
    if (v44) {
      goto LABEL_73;
    }
    uint64_t v46 = v0[20];
    uint64_t v47 = v0[18];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v135 + 16))(v47, v0[8]+ ((*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80))+ *(void *)(v135 + 72) * v43, v46);
    uint64_t v45 = v43 + 1;
    v14(v47, 0, 1, v46);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(v47, 1, v46) == 1) {
      goto LABEL_31;
    }
    uint64_t v143 = v45;
    os_log_type_t v50 = (char *)v0[28];
    uint64_t v51 = v0[20];
    uint64_t v52 = v0[11];
    os_log_type_t v53 = (void (*)(char *, char *, uint64_t))*v41;
    (*v41)(v50, (char *)v0[18], v51);
    uint64_t v54 = (char *)(v52 + *(int *)(v132 + 48));
    v53(v54, v50, v51);
    if (__OFADD__(v122, 1)) {
      goto LABEL_74;
    }
    uint64_t v55 = v0[20];
    char v56 = (void *)v0[12];
    uint64_t v57 = v0[9];
    uint64_t v58 = (char *)v56 + *(int *)(v132 + 48);
    *char v56 = v122;
    v53(v58, v54, v55);
    (*v126)((uint64_t)v56, 0, 1, v57);
    ++v122;
    uint64_t v2 = v128;
    uint64_t v45 = v143;
  }
  swift_bridgeObjectRelease();
  v147[0] = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  if (v2)
  {
    uint64_t v93 = v14;
    unint64_t v145 = (*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80);
    unint64_t v94 = v0[8] + v145;
    uint64_t v95 = *(void *)(v135 + 72);
    uint64_t v96 = *(void (**)(uint64_t, unint64_t, uint64_t))(v135 + 16);
    uint64_t v97 = (char *)_swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v0 = v146;
      uint64_t v98 = v146[20];
      uint64_t v99 = v146[17];
      v96(v99, v94, v98);
      v93(v99, 0, 1, v98);
      if ((*v123)(v99, 1, v98) == 1) {
        break;
      }
      uint64_t v100 = (void (*)(char *, char *, uint64_t))*v133;
      (*v133)(v146[24], (char *)v146[17], v146[20]);
      if (URL.isFileURL.getter())
      {
        (*v130)(v146[24], v146[20]);
      }
      else
      {
        v100((char *)v146[23], (char *)v146[24], v146[20]);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10025539C(0, *((void *)v97 + 2) + 1, 1);
          uint64_t v97 = (char *)v147[0];
        }
        unint64_t v102 = *((void *)v97 + 2);
        unint64_t v101 = *((void *)v97 + 3);
        if (v102 >= v101 >> 1)
        {
          sub_10025539C(v101 > 1, v102 + 1, 1);
          uint64_t v97 = (char *)v147[0];
        }
        unint64_t v103 = (char *)v146[23];
        uint64_t v104 = v146[20];
        *((void *)v97 + 2) = v102 + 1;
        v100(&v97[v145 + v102 * v95], v103, v104);
        v147[0] = (uint64_t)v97;
      }
      v94 += v95;
      if (!--v128)
      {
        uint64_t v0 = v146;
        unint64_t v14 = v93;
        goto LABEL_70;
      }
    }
  }
  else
  {
    uint64_t v97 = (char *)_swiftEmptyArrayStorage;
LABEL_70:
    v14(v0[17], 1, 1, v0[20]);
  }
  uint64_t v120 = v0[17];
  uint64_t v121 = (void *)v0[5];
  swift_bridgeObjectRelease();
  sub_10000A7E8(v120, (uint64_t *)&unk_10096AC10);
  v147[0] = (uint64_t)v140;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1003D4BA0((uint64_t)v97);

  swift_release();
  swift_bridgeObjectRelease();
  void *v121 = v147[0];
LABEL_49:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v91 = (uint64_t (*)(void))v146[1];
LABEL_50:
  return v91();
}

uint64_t sub_1003A2DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a4;
  *(void *)(v6 + 32) = a6;
  *(unsigned char *)(v6 + 81) = a5;
  *(void *)(v6 + 16) = a1;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  *(void *)(v6 + 40) = static AirDropActor.shared;
  return _swift_task_switch(sub_1003A2E88, v7, 0);
}

uint64_t sub_1003A2E88()
{
  uint64_t v1 = *(void **)(v0 + 24);
  if (v1) {
    BOOL v2 = *(unsigned char *)(v0 + 81) == 0;
  }
  else {
    BOOL v2 = 1;
  }
  if (v2)
  {
    uint64_t v8 = (uint64_t (*)(uint64_t))((char *)&dword_1009710A0 + dword_1009710A0);
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1003A32A4;
    uint64_t v4 = *(void *)(v0 + 32);
    return v8(v4);
  }
  else
  {
    uint64_t v6 = static AirDropActor.shared;
    *(void *)(v0 + 48) = static AirDropActor.shared;
    id v7 = v1;
    return _swift_task_switch(sub_1003A2F9C, v6, 0);
  }
}

uint64_t sub_1003A2F9C()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = static AirDropActor.shared;
  uint64_t v4 = sub_1003B0BB8((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v5 = swift_task_alloc();
  v0[7] = v5;
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[8] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1003A30E4;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 10, v3, v4, 0xD00000000000001ALL, 0x80000001007BB2C0, sub_1003AFDE4, v5, &type metadata for Bool);
}

uint64_t sub_1003A30E4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1003A3210, v1, 0);
}

uint64_t sub_1003A3210()
{
  uint64_t v1 = *(void *)(v0 + 40);
  *(unsigned char *)(v0 + 82) = *(unsigned char *)(v0 + 80);
  return _swift_task_switch(sub_1003A3234, v1, 0);
}

uint64_t sub_1003A3234()
{
  **(unsigned char **)(v0 + 16) = *(unsigned char *)(v0 + 82);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003A32A4(char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    uint64_t v8 = *(void *)(v4 + 40);
    *(unsigned char *)(v4 + 83) = a1 & 1;
    return _swift_task_switch(sub_1003A33F4, v8, 0);
  }
}

uint64_t sub_1003A33F4()
{
  **(unsigned char **)(v0 + 16) = *(unsigned char *)(v0 + 83);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003A3418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  v5[11] = a1;
  uint64_t v6 = type metadata accessor for Logger();
  v5[14] = v6;
  v5[15] = *(void *)(v6 - 8);
  v5[16] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SFSandboxTokenURLPair();
  v5[17] = v7;
  v5[18] = *(void *)(v7 - 8);
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SFSecurityScopedURL();
  v5[22] = v8;
  v5[23] = *(void *)(v8 - 8);
  v5[24] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v5[25] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for URL();
  v5[26] = v9;
  v5[27] = *(void *)(v9 - 8);
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v10 = static AirDropActor.shared;
  v5[31] = static AirDropActor.shared;
  return _swift_task_switch(sub_1003A36C0, v10, 0);
}

uint64_t sub_1003A36C0()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[27];
  uint64_t v3 = v0[25];
  sub_1003AFF3C(v0[12], v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000A7E8(v0[25], (uint64_t *)&unk_10096AC10);
    if (qword_100969D30 != -1) {
      swift_once();
    }
    sub_10000B47C(v0[14], (uint64_t)qword_100970FA8);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Could not move files to nil folder", v6, 2u);
      swift_slowDealloc();
    }
    uint64_t v7 = v0[13];
    uint64_t v8 = (void *)v0[11];

    *uint64_t v8 = v7;
    swift_bridgeObjectRetain();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[27] + 32))(v0[30], v0[25], v0[26]);
    if (qword_100969D38 != -1) {
      swift_once();
    }
    uint64_t v11 = v0[31];
    return _swift_task_switch(sub_1003A3984, v11, 0);
  }
}

uint64_t sub_1003A3984()
{
  uint64_t v1 = *(void *)(v0 + 248);
  return _swift_task_switch(sub_1003A3A10, v1, 0);
}

uint64_t sub_1003A3A10()
{
  uint64_t v69 = v0;
  (*(void (**)(void, void, void))(*(void *)(v0 + 216) + 16))(*(void *)(v0 + 232), *(void *)(v0 + 240), *(void *)(v0 + 208));
  SFSecurityScopedURL.init(_:readWrite:)();
  static SFSecurityScopedURL.consumeSandboxToken(item:)();
  if (qword_100969D30 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v6 = sub_10000B47C(*(void *)(v0 + 112), (uint64_t)qword_100970FA8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v7(v2, v3, v4);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  uint64_t v61 = v6;
  uint64_t v63 = v7;
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v11 = *(void *)(v0 + 216);
    uint64_t v10 = *(void *)(v0 + 224);
    uint64_t v12 = *(void *)(v0 + 208);
    uint64_t v58 = *(void *)(v0 + 160);
    uint64_t v59 = *(void *)(v0 + 144);
    uint64_t v66 = *(void *)(v0 + 136);
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    v68[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    SFSandboxTokenURLPair.url.getter();
    sub_1003B0BB8((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v16 = v15;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    *(void *)(v0 + 80) = sub_100254634(v14, v16, v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    unint64_t v17 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
    v17(v58, v66);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Moving downloaded files to folder %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    unint64_t v17 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 144) + 8);
    v17(*(void *)(v0 + 160), *(void *)(v0 + 136));
  }

  uint64_t v19 = *(void *)(v0 + 216);
  uint64_t v18 = *(void *)(v0 + 224);
  uint64_t v20 = *(void *)(v0 + 208);
  *(void *)(v0 + 56) = 0;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  SFSandboxTokenURLPair.url.getter();
  URL._bridgeToObjectiveC()(v22);
  uint64_t v24 = v23;
  uint64_t v65 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
  v65(v18, v20);
  uint64_t v25 = *(void **)(v0 + 56);
  *(void *)(v0 + 40) = v25;
  id v26 = sub_1001B3434(isa, v24, 0, (void *)(v0 + 40));

  char v27 = *(void **)(v0 + 40);
  *(void *)(v0 + 56) = v27;
  id v28 = v27;

  id v67 = v17;
  if (v26)
  {
    uint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (*(void *)(v29 + 16)) {
      goto LABEL_20;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v30 = *(void *)(v0 + 168);
  uint64_t v31 = *(void *)(v0 + 152);
  uint64_t v32 = *(void *)(v0 + 136);
  (*(void (**)(void, uint64_t, void))(*(void *)(v0 + 120) + 16))(*(void *)(v0 + 128), v61, *(void *)(v0 + 112));
  v63(v31, v30, v32);
  char v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = *(void *)(v0 + 224);
    uint64_t v36 = *(void *)(v0 + 208);
    uint64_t v37 = *(void *)(v0 + 152);
    uint64_t v60 = *(void *)(v0 + 136);
    uint64_t v38 = swift_slowAlloc();
    uint64_t v62 = (void *)swift_slowAlloc();
    v68[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 136315394;
    SFSandboxTokenURLPair.url.getter();
    sub_1003B0BB8((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v41 = v40;
    v65(v35, v36);
    *(void *)(v0 + 48) = sub_100254634(v39, v41, v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v67(v37, v60);
    *(_WORD *)(v38 + 12) = 2112;
    swift_beginAccess();
    double v42 = *(void **)(v0 + 56);
    if (v42)
    {
      *(void *)(v0 + 72) = v42;
      id v43 = v42;
    }
    else
    {
      *(void *)(v0 + 64) = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v48 = *(void *)(v0 + 120);
    uint64_t v47 = *(void *)(v0 + 128);
    uint64_t v49 = *(void *)(v0 + 112);
    *uint64_t v62 = v42;
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Failed to save files to %s: %@", (uint8_t *)v38, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
  }
  else
  {
    uint64_t v44 = *(void *)(v0 + 128);
    uint64_t v45 = *(void *)(v0 + 112);
    uint64_t v46 = *(void *)(v0 + 120);
    v17(*(void *)(v0 + 152), *(void *)(v0 + 136));

    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
  }
  uint64_t v29 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
LABEL_20:
  uint64_t v50 = *(void *)(v0 + 240);
  uint64_t v51 = *(void *)(v0 + 208);
  uint64_t v53 = *(void *)(v0 + 184);
  uint64_t v52 = *(void *)(v0 + 192);
  uint64_t v54 = *(void *)(v0 + 168);
  uint64_t v55 = *(void *)(v0 + 176);
  uint64_t v56 = *(void *)(v0 + 136);
  uint64_t v64 = *(uint64_t **)(v0 + 88);
  SFSandboxTokenURLPair.releaseSandboxExtension()();
  v67(v54, v56);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v55);
  v65(v50, v51);

  *uint64_t v64 = v29;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v57 = *(uint64_t (**)(void))(v0 + 8);
  return v57();
}

uint64_t sub_1003A428C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[32] = a4;
  v5[33] = a5;
  v5[30] = a2;
  v5[31] = a3;
  v5[29] = a1;
  uint64_t v6 = type metadata accessor for URL();
  v5[34] = v6;
  v5[35] = *(void *)(v6 - 8);
  v5[36] = swift_task_alloc();
  sub_10000A844(&qword_1009700B8);
  v5[37] = swift_task_alloc();
  v5[38] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  v5[39] = static AirDropActor.shared;
  return _swift_task_switch(sub_1003A43D0, v7, 0);
}

uint64_t sub_1003A43D0()
{
  uint64_t v78 = v0;
  uint64_t v1 = *(void *)(*(void *)(v0 + 256) + 16);
  *(void *)(v0 + 320) = v1;
  if (!v1)
  {
    if (qword_100969D30 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10000B47C(v16, (uint64_t)qword_100970FA8);
    unint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Cannot open empty list of URLs", v19, 2u);
      swift_slowDealloc();
    }

    char v20 = 0;
LABEL_44:
    **(unsigned char **)(v0 + 232) = v20;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v73 = *(uint64_t (**)(void))(v0 + 8);
    return v73();
  }
  uint64_t v2 = *(void **)(v0 + 264);
  uint64_t v3 = (char *)&type metadata for Any;
  if (!v2)
  {
    if (qword_100969D30 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_10000B47C(v21, (uint64_t)qword_100970FA8);
    swift_bridgeObjectRetain_n();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      id v25 = (id)SFCompactStringFromCollection();

      if (v25)
      {
        unint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v28 = v27;
      }
      else
      {
        unint64_t v26 = 0xD000000000000015;
        double v76 = 0.0;
        unint64_t v77 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        unint64_t v28 = 0x80000001007B7770;
      }
      *(void *)(v0 + 208) = sub_100254634(v26, v28, &v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v8, v22, "Opening URLs: %s", v23, 0xCu);
      uint64_t v3 = (char *)&type metadata for Any;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      goto LABEL_26;
    }
LABEL_18:
    swift_bridgeObjectRelease_n();
LABEL_26:

    goto LABEL_27;
  }
  uint64_t v4 = qword_100969D30;
  NSString v5 = v2;
  if (v4 != -1) {
LABEL_48:
  }
    swift_once();
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_100970FA8);
  swift_bridgeObjectRetain_n();
  id v7 = v5;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v8, v9))
  {

    goto LABEL_18;
  }
  uint64_t v10 = swift_slowAlloc();
  uint64_t v75 = swift_slowAlloc();
  *(_DWORD *)uint64_t v10 = 136315394;
  Class v11 = Array._bridgeToObjectiveC()().super.isa;
  id v12 = (id)SFCompactStringFromCollection();

  if (v12)
  {
    unint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;
  }
  else
  {
    unint64_t v13 = 0xD000000000000015;
    double v76 = 0.0;
    unint64_t v77 = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease();
    unint64_t v15 = 0x80000001007B7770;
  }
  *(void *)(v0 + 216) = sub_100254634(v13, v15, &v75);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v10 + 12) = 2080;
  id v29 = [v7 bundleIdentifier];
  if (v29)
  {
    uint64_t v30 = v29;
    unint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v33 = v32;
  }
  else
  {
    unint64_t v31 = 0xD000000000000015;
    double v76 = 0.0;
    unint64_t v77 = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease();
    unint64_t v33 = 0x80000001007B7770;
  }
  *(void *)(v0 + 224) = sub_100254634(v31, v33, &v75);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();

  _os_log_impl((void *)&_mh_execute_header, v8, v9, "Opening URLs: %s in %s", (uint8_t *)v10, 0x16u);
  swift_arrayDestroy();
  uint64_t v3 = (char *)&type metadata for Any;
  swift_slowDealloc();
  swift_slowDealloc();

LABEL_27:
  uint64_t v34 = *(void *)(v0 + 256);
  *(void *)(v0 + 184) = 0;
  *(void *)(v0 + 192) = 0;
  *(void *)(v0 + 176) = v34;
  *(void *)(v0 + 328) = FBSOpenApplicationOptionKeyPromptUnlockDevice;
  swift_bridgeObjectRetain();
  char v35 = 0;
  v3 += 8;
  while (1)
  {
    uint64_t v37 = *(void **)(v0 + 296);
    uint64_t v36 = *(void *)(v0 + 304);
    sub_1003A0C44(v37);
    sub_10024D388((uint64_t)v37, v36, &qword_1009700B8);
    uint64_t v38 = sub_10000A844(&qword_1009700B0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v36, 1, v38) == 1) {
      goto LABEL_43;
    }
    uint64_t v39 = *(char **)(v0 + 304);
    uint64_t v40 = *(void *)(v0 + 280);
    uint64_t v41 = *(void *)(v0 + 288);
    uint64_t v42 = *(void *)(v0 + 272);
    *(void *)(v0 + 336) = *(void *)v39;
    (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v41, &v39[*(int *)(v38 + 48)], v42);
    sub_10000A844(&qword_100971080);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v44;
    *(unsigned char *)(inited + 48) = 1;
    unint64_t v45 = sub_100246BE8(inited);
    if ((sub_1003AF788() & 1) == 0) {
      break;
    }
    id v46 = [self defaultWorkspace];
    if (!v46)
    {
      __break(1u);
      goto LABEL_50;
    }
    uint64_t v48 = v46;
    URL._bridgeToObjectiveC()(v47);
    uint64_t v50 = v49;
    sub_10039F00C(v45);
    swift_bridgeObjectRelease();
    Class v51 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    unsigned __int8 v52 = [v48 openSensitiveURL:v50 withOptions:v51];

    if ((v52 & 1) == 0)
    {
      (*(void (**)(void, void))(*(void *)(v0 + 280) + 8))(*(void *)(v0 + 288), *(void *)(v0 + 272));
      char v35 = 0;
LABEL_43:
      swift_bridgeObjectRelease();
      char v20 = v35 & 1;
      goto LABEL_44;
    }
    uint64_t v53 = *(void **)(v0 + 264);
    if (v53 && (id v54 = [v53 bundleIdentifier]) != 0)
    {
      uint64_t v55 = v54;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v5 = 0;
    }
    uint64_t v56 = *(void *)(v0 + 336);
    uint64_t v57 = self;
    URL._bridgeToObjectiveC()(v58);
    uint64_t v60 = v59;
    [v57 logReceiverBundleID:v5 forURL:v59];

    uint64_t v61 = v56 + 1;
    if (__OFADD__(v56, 1))
    {
      __break(1u);
      goto LABEL_48;
    }
    uint64_t v63 = *(void *)(v0 + 280);
    uint64_t v62 = *(void *)(v0 + 288);
    uint64_t v64 = *(void *)(v0 + 272);
    uint64_t v65 = *(void (**)(double *))(v0 + 240);
    double v76 = (double)v61 / (double)(*(void *)(v0 + 320) + 1);
    v65(&v76);
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
    char v35 = 1;
  }
  id v66 = [objc_allocWithZone((Class)_LSOpenConfiguration) init];
  *(void *)(v0 + 344) = v66;
  sub_10039F00C(v45);
  swift_bridgeObjectRelease();
  Class v67 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v66 setFrontBoardOptions:v67];

  id v46 = [self defaultWorkspace];
  *(void *)(v0 + 352) = v46;
  if (!v46)
  {
LABEL_50:
    __break(1u);
    return _swift_continuation_await(v46);
  }
  uint64_t v69 = v46;
  URL._bridgeToObjectiveC()(v68);
  uint64_t v71 = v70;
  *(void *)(v0 + 360) = v70;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 200;
  *(void *)(v0 + 24) = sub_1003A4E8C;
  uint64_t v72 = swift_continuation_init();
  *(void *)(v0 + 136) = _NSConcreteStackBlock;
  *(void *)(v0 + 144) = 0x40000000;
  *(void *)(v0 + 152) = sub_1003A55C4;
  *(void *)(v0 + 160) = &unk_1008D8258;
  *(void *)(v0 + 168) = v72;
  [v69 openURL:v71 configuration:v66 completionHandler:v0 + 136];
  id v46 = (id)(v0 + 16);
  return _swift_continuation_await(v46);
}

uint64_t sub_1003A4E8C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 368) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 312);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1003A54F0;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v1 + 312);
    uint64_t v4 = sub_1003A4FB4;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_1003A4FB4()
{
  uint64_t v47 = v0;
  uint64_t v2 = *(void **)(v0 + 352);
  uint64_t v1 = *(void **)(v0 + 360);
  uint64_t v3 = *(void **)(v0 + 344);

  uint64_t v4 = *(void *)(v0 + 200);
  swift_bridgeObjectRelease();
  if (!v4)
  {
LABEL_11:
    (*(void (**)(void, void))(*(void *)(v0 + 280) + 8))(*(void *)(v0 + 288), *(void *)(v0 + 272));
    char v23 = 0;
LABEL_12:
    swift_bridgeObjectRelease();
    **(unsigned char **)(v0 + 232) = v23;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v37 = *(uint64_t (**)(void))(v0 + 8);
    return v37();
  }
  while (1)
  {
    uint64_t v5 = *(void **)(v0 + 264);
    if (v5 && (id v6 = [v5 bundleIdentifier]) != 0)
    {
      uint64_t v7 = v6;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v8 = 0;
    }
    uint64_t v9 = *(void *)(v0 + 336);
    uint64_t v10 = self;
    URL._bridgeToObjectiveC()(v11);
    unint64_t v13 = v12;
    [v10 logReceiverBundleID:v8 forURL:v12];

    uint64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
      return _swift_continuation_await(v14);
    }
    uint64_t v17 = *(void *)(v0 + 280);
    uint64_t v16 = *(void *)(v0 + 288);
    uint64_t v18 = *(void *)(v0 + 272);
    uint64_t v19 = *(void (**)(double *))(v0 + 240);
    double v46 = (double)v15 / (double)(*(void *)(v0 + 320) + 1);
    v19(&v46);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    uint64_t v21 = *(void **)(v0 + 296);
    uint64_t v20 = *(void *)(v0 + 304);
    sub_1003A0C44(v21);
    sub_10024D388((uint64_t)v21, v20, &qword_1009700B8);
    uint64_t v22 = sub_10000A844(&qword_1009700B0);
    char v23 = 1;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v20, 1, v22) == 1) {
      goto LABEL_12;
    }
    uint64_t v24 = *(char **)(v0 + 304);
    uint64_t v25 = *(void *)(v0 + 280);
    uint64_t v26 = *(void *)(v0 + 288);
    uint64_t v27 = *(void *)(v0 + 272);
    *(void *)(v0 + 336) = *(void *)v24;
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v26, &v24[*(int *)(v22 + 48)], v27);
    sub_10000A844(&qword_100971080);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v29;
    *(unsigned char *)(inited + 48) = 1;
    unint64_t v30 = sub_100246BE8(inited);
    if ((sub_1003AF788() & 1) == 0) {
      break;
    }
    id v14 = [self defaultWorkspace];
    if (!v14) {
      goto LABEL_20;
    }
    unint64_t v32 = v14;
    URL._bridgeToObjectiveC()(v31);
    uint64_t v34 = v33;
    sub_10039F00C(v30);
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    unsigned __int8 v36 = [v32 openSensitiveURL:v34 withOptions:isa];

    if ((v36 & 1) == 0) {
      goto LABEL_11;
    }
  }
  id v39 = [objc_allocWithZone((Class)_LSOpenConfiguration) init];
  *(void *)(v0 + 344) = v39;
  sub_10039F00C(v30);
  swift_bridgeObjectRelease();
  Class v40 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v39 setFrontBoardOptions:v40];

  id v14 = [self defaultWorkspace];
  *(void *)(v0 + 352) = v14;
  if (!v14) {
    goto LABEL_21;
  }
  uint64_t v42 = v14;
  URL._bridgeToObjectiveC()(v41);
  uint64_t v44 = v43;
  *(void *)(v0 + 360) = v43;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 200;
  *(void *)(v0 + 24) = sub_1003A4E8C;
  uint64_t v45 = swift_continuation_init();
  *(void *)(v0 + 136) = _NSConcreteStackBlock;
  *(void *)(v0 + 144) = 0x40000000;
  *(void *)(v0 + 152) = sub_1003A55C4;
  *(void *)(v0 + 160) = &unk_1008D8258;
  *(void *)(v0 + 168) = v45;
  [v42 openURL:v44 configuration:v39 completionHandler:v0 + 136];
  id v14 = (id)(v0 + 16);
  return _swift_continuation_await(v14);
}