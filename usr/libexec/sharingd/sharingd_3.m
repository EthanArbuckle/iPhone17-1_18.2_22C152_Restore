uint64_t sub_1003A54F0()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v9;

  v1 = (void *)v0[45];
  v3 = (void *)v0[43];
  v2 = (void *)v0[44];
  v5 = v0[35];
  v4 = v0[36];
  v6 = v0[34];
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1003A55C4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_10000A844(&qword_10096BAF0);
    uint64_t v5 = swift_allocError();
    void *v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    if (a2) {
      uint64_t v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else {
      uint64_t v8 = 0;
    }
    uint64_t v10 = v8;
    sub_10024D388((uint64_t)&v10, *(void *)(*(void *)(v3 + 64) + 40), &qword_100971088);
    return swift_continuation_throwingResume();
  }
}

void sub_1003A56BC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v97 = a1;
  uint64_t v114 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v114 - 8);
  uint64_t v6 = __chkstk_darwin(v114);
  v99 = (char *)v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v113 = (char *)v84 - v8;
  uint64_t v9 = sub_10000A844(&qword_1009710A8);
  uint64_t v93 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v91 = v10;
  v92 = (char *)v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000A844((uint64_t *)&unk_10096AC10);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  v14 = (char *)v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v109 = (char *)v84 - v15;
  self;
  uint64_t v16 = swift_dynamicCastObjCClass();
  if (v16)
  {
    v17 = (void *)v16;
    uint64_t v18 = v9;
    uint64_t v19 = a3;
    id v20 = a2;
    id v21 = [v17 applicationState];
    unsigned int v22 = [v21 isInstalled];

    if (v22)
    {
      id v23 = [v17 applicationState];
      unsigned int v24 = [v23 isRestricted];

      int v25 = v24 ^ 1;
    }
    else
    {

      int v25 = 0;
    }
    a3 = v19;
    uint64_t v9 = v18;
  }
  else
  {
    int v25 = 1;
  }
  id v26 = [a2 bundleIdentifier];
  if (!v26)
  {
LABEL_25:
    id v68 = [self defaultWorkspace];
    if (v68)
    {
      v69 = v68;
      if (*(void *)(a3 + 16))
      {
        uint64_t v70 = v114;
        (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v14, a3 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), v114);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v70);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v70) == 1)
        {
          v72 = 0;
        }
        else
        {
          URL._bridgeToObjectiveC()(v71);
          v72 = v73;
          (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v114);
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v14, 1, 1, v114);
        v72 = 0;
      }
      id v74 = [a2 bundleIdentifier];
      [v69 _LSFailedToOpenURL:v72 withBundle:v74];

      LOBYTE(aBlock[0]) = 1;
      CheckedContinuation.resume(returning:)();
    }
    else
    {
LABEL_37:
      __break(1u);
    }
    return;
  }
  v27 = v26;
  uint64_t v94 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!v25)
  {
    swift_bridgeObjectRelease();

    goto LABEL_25;
  }
  unint64_t v96 = v28;
  uint64_t v85 = v9;
  sub_10000A844(&qword_100971080);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v30;
  *(unsigned char *)(inited + 48) = 1;
  unint64_t v100 = sub_100246BE8(inited);
  id v95 = [objc_allocWithZone((Class)NSOperationQueue) init];
  id v108 = [self defaultWorkspace];
  uint64_t v31 = *(void *)(a3 + 16);
  v84[2] = a3;
  if (v31)
  {
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v32 = v5 + 16;
    v111 = v33;
    uint64_t v34 = a3 + ((*(unsigned __int8 *)(v32 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 64));
    uint64_t v103 = *(void *)(v32 + 56);
    v106 = (unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 32);
    v105 = (void (**)(char *, char *, uint64_t))(v32 + 16);
    v102 = &v117;
    uint64_t v104 = LSMoveDocumentOnOpenKey;
    uint64_t v112 = v32;
    v110 = (void (**)(char *, uint64_t))(v32 - 8);
    v87 = &v116;
    swift_bridgeObjectRetain();
    v107 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 40);
    v84[1] = (v32 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v98 = (char *)&type metadata for Any + 8;
    *(void *)&long long v35 = 136315394;
    long long v86 = v35;
    v36 = v109;
    while (1)
    {
      uint64_t v37 = v114;
      v111(v36, v34, v114);
      v38 = *v107;
      (*v107)(v36, 0, 1, v37);
      if ((*v106)(v36, 1, v37) == 1) {
        break;
      }
      v101 = v38;
      (*v105)(v113, v36, v114);
      uint64_t v117 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v118 = v39;
      sub_10000B740(0, (unint64_t *)&qword_1009745A0);
      Class isa = NSNumber.init(BOOLeanLiteral:)(1).super.super.isa;
      sub_10000A844(&qword_10096AA90);
      v40 = (void *)static _DictionaryStorage.allocate(capacity:)();
      uint64_t v41 = v117;
      uint64_t v42 = v118;
      Class v43 = isa;
      swift_bridgeObjectRetain();
      v44 = v43;
      unint64_t v45 = sub_1005838BC(v41, v42);
      if (v46)
      {
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      v40[(v45 >> 6) + 8] |= 1 << v45;
      v47 = (uint64_t *)(v40[6] + 16 * v45);
      uint64_t *v47 = v41;
      v47[1] = v42;
      *(void *)(v40[7] + 8 * v45) = v44;
      uint64_t v48 = v40[2];
      BOOL v49 = __OFADD__(v48, 1);
      uint64_t v50 = v48 + 1;
      if (v49) {
        goto LABEL_36;
      }
      v40[2] = v50;
      sub_10000A844(&qword_1009710B0);
      swift_arrayDestroy();
      if (v108)
      {
        id v51 = v108;
        URL._bridgeToObjectiveC()((NSURL *)&v121);
        v53 = v52;
        sub_10039F368((uint64_t)v40);
        swift_release();
        Class v54 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        sub_10039F00C(v100);
        Class v55 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v56 = [v51 operationToOpenResource:v53 usingApplication:v27 uniqueDocumentIdentifier:0 isContentManaged:0 sourceAuditToken:0 userInfo:v54 options:v55 delegate:0];

        if (v56)
        {
          if (qword_100969D30 != -1) {
            swift_once();
          }
          uint64_t v57 = type metadata accessor for Logger();
          sub_10000B47C(v57, (uint64_t)qword_100970FA8);
          v58 = v99;
          uint64_t v59 = v114;
          v111(v99, (uint64_t)v113, v114);
          unint64_t v60 = v96;
          swift_bridgeObjectRetain_n();
          v61 = Logger.logObject.getter();
          os_log_type_t v62 = static os_log_type_t.default.getter();
          int v63 = v62;
          if (os_log_type_enabled(v61, v62))
          {
            uint64_t v64 = swift_slowAlloc();
            uint64_t v90 = swift_slowAlloc();
            aBlock[0] = v90;
            *(_DWORD *)uint64_t v64 = v86;
            int v89 = v63;
            swift_bridgeObjectRetain();
            uint64_t v115 = sub_100254634(v94, v60, aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v64 + 12) = 2080;
            uint64_t v88 = v64 + 14;
            sub_1003B0BB8((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
            uint64_t v65 = v114;
            uint64_t v66 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v115 = sub_100254634(v66, v67, aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            (*v110)(v58, v65);
            _os_log_impl((void *)&_mh_execute_header, v61, (os_log_type_t)v89, "Enqueuing resource open operation for %s, with URL: %s", (uint8_t *)v64, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease_n();
            (*v110)(v58, v59);
          }

          [v95 addOperation:v56];
        }
      }
      else
      {
        swift_release();
      }
      [self logReceiverBundleID:v27 forURL:0];
      (*v110)(v113, v114);
      v34 += v103;
      --v31;
      v36 = v109;
      if (!v31)
      {
        v101(v109, 1, 1, v114);
        break;
      }
    }
  }
  else
  {
    v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain();
    v75(v109, 1, 1, v114);
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v76 = v93;
  v77 = v92;
  uint64_t v78 = v85;
  (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v92, v97, v85);
  unint64_t v79 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
  uint64_t v80 = swift_allocObject();
  unint64_t v81 = v96;
  *(void *)(v80 + 16) = v94;
  *(void *)(v80 + 24) = v81;
  (*(void (**)(unint64_t, char *, uint64_t))(v76 + 32))(v80 + v79, v77, v78);
  aBlock[4] = (uint64_t)sub_1003AFEBC;
  aBlock[5] = v80;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100296520;
  aBlock[3] = (uint64_t)&unk_1008D82E8;
  v82 = _Block_copy(aBlock);
  swift_release();
  id v83 = v95;
  [v95 addBarrierBlock:v82];
  _Block_release(v82);
}

uint64_t sub_1003A63F0(uint64_t a1, unint64_t a2)
{
  if (qword_100969D30 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_100970FA8);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_100254634(a1, a2, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Resource open operation completed for %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  LOBYTE(v9) = 1;
  sub_10000A844(&qword_1009710A8);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_1003A65C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[20] = a2;
  v3[21] = a3;
  uint64_t v4 = type metadata accessor for URL.DirectoryHint();
  v3[22] = v4;
  v3[23] = *(void *)(v4 - 8);
  v3[24] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo();
  v3[28] = v5;
  v3[29] = *(void *)(v5 - 8);
  v3[30] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFAirDropReceive.AskRequest();
  v3[31] = v6;
  v3[32] = *(void *)(v6 - 8);
  v3[33] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for URL();
  v3[34] = v7;
  v3[35] = *(void *)(v7 - 8);
  v3[36] = swift_task_alloc();
  v3[37] = swift_task_alloc();
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  v3[40] = swift_task_alloc();
  v3[41] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SFAirDropReceive.Transfer.State();
  v3[42] = v8;
  v3[43] = *(void *)(v8 - 8);
  v3[44] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for SFAirDropReceive.Transfer();
  v3[45] = v9;
  v3[46] = *(void *)(v9 - 8);
  v3[47] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SFPlatform();
  v3[48] = v10;
  v3[49] = *(void *)(v10 - 8);
  v3[50] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  v3[51] = v11;
  v3[52] = *(void *)(v11 - 8);
  v3[53] = swift_task_alloc();
  v3[54] = type metadata accessor for OS_dispatch_queue.Attributes();
  v3[55] = swift_task_alloc();
  type metadata accessor for DispatchQoS();
  v3[56] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v12 = static AirDropActor.shared;
  v3[57] = static AirDropActor.shared;
  return _swift_task_switch(sub_1003A6A5C, v12, 0);
}

uint64_t sub_1003A6A5C()
{
  id v68 = v0;
  v1 = v0;
  uint64_t v2 = v0[52];
  uint64_t v3 = v0[50];
  uint64_t v59 = v0[53];
  uint64_t v60 = v0[51];
  uint64_t v4 = v0[49];
  uint64_t v5 = v0[46];
  uint64_t v63 = v0[45];
  uint64_t v66 = v0[47];
  uint64_t v61 = v0[48];
  uint64_t v62 = v0[20];
  sub_10000B740(0, (unint64_t *)&qword_10096A1A0);
  static DispatchQoS.default.getter();
  v0[17] = _swiftEmptyArrayStorage;
  sub_1003B0BB8((unint64_t *)&unk_100974840, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000A844((uint64_t *)&unk_10096A1B0);
  uint64_t v6 = v0 + 17;
  sub_1002AE308((unint64_t *)&qword_100974850, (uint64_t *)&unk_10096A1B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v59, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v60);
  uint64_t v7 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v0[58] = v7;
  static SFPlatform.macOS.getter();
  char v8 = static SFPlatform.isPlatform(_:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v61);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v66, v62, v63);
  uint64_t v10 = v0[46];
  uint64_t v9 = v0[47];
  uint64_t v11 = v0[45];
  if (v8)
  {
    uint64_t v13 = v0[43];
    uint64_t v12 = v0[44];
    uint64_t v14 = v0[42];
    SFAirDropReceive.Transfer.state.getter();
    char v15 = SFAirDropReceive.Transfer.State.completedSuccessfully.getter();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = v1[57];
      type metadata accessor for SDAirDropDownloadDestinationProvideriOS();
      v1[59] = swift_initStackObject();
      return _swift_task_switch(sub_1003A74C4, v16, 0);
    }
  }
  else
  {
    (*(void (**)(void, void))(v10 + 8))(v0[47], v0[45]);
  }
  uint64_t v64 = (void *)v7;
  id v17 = sub_1001B2E7C();
  p_inst_meths = &OBJC_PROTOCOL___NSNetServiceBrowserDelegate.inst_meths;
  if (!v17)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v1[35] + 56))(v1[25], 1, 1, v1[34]);
    goto LABEL_16;
  }
  uint64_t v19 = v17;
  uint64_t v21 = v1[35];
  uint64_t v20 = v1[36];
  uint64_t v22 = v1[34];
  uint64_t v23 = v1[25];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  unsigned int v24 = *(void (**)(void))(v21 + 32);
  ((void (*)(uint64_t, uint64_t, uint64_t))v24)(v23, v20, v22);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v23, 0, 1, v22);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v23, 1, v22) == 1)
  {
LABEL_16:
    sub_10000A7E8(v1[25], (uint64_t *)&unk_10096AC10);
    uint64_t v48 = type metadata accessor for SFAirDropReceive.Failure();
    sub_1003B0BB8(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v48 - 8) + 104))(v49, enum case for SFAirDropReceive.Failure.missingDownloadDirectory(_:), v48);
    swift_willThrow();
LABEL_17:
    if (p_inst_meths[422] != (__objc2_meth_list *)-1) {
      swift_once();
    }
    uint64_t v50 = type metadata accessor for Logger();
    sub_10000B47C(v50, (uint64_t)qword_100970FA8);
    swift_errorRetain();
    swift_errorRetain();
    id v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v65 = (void *)v1[58];
      v53 = (uint8_t *)swift_slowAlloc();
      Class v54 = (void *)swift_slowAlloc();
      *(_DWORD *)v53 = 138412290;
      swift_errorRetain();
      uint64_t v55 = _swift_stdlib_bridgeErrorToNSError();
      *(v6 - 2) = v55;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *Class v54 = v55;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "Remove URL failed with error %@", v53, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    goto LABEL_22;
  }
  uint64_t v25 = v1[24];
  uint64_t v27 = v1[22];
  uint64_t v26 = v1[23];
  v24();
  v1[10] = 0xD000000000000011;
  v1[11] = 0x80000001007B60B0;
  uint64_t v28 = enum case for URL.DirectoryHint.isDirectory(_:);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 104);
  v29(v25, enum case for URL.DirectoryHint.isDirectory(_:), v27);
  sub_10024A1FC();
  URL.append<A>(path:directoryHint:)();
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
  v30(v25, v27);
  v1[12] = UUID.uuidString.getter();
  v1[13] = v31;
  v29(v25, v28, v27);
  URL.append<A>(path:directoryHint:)();
  uint64_t v32 = v27;
  p_inst_meths = &OBJC_PROTOCOL___NSNetServiceBrowserDelegate.inst_meths;
  v30(v25, v32);
  swift_bridgeObjectRelease();
  if (qword_100969D30 != -1) {
    swift_once();
  }
  uint64_t v33 = type metadata accessor for Logger();
  sub_10000B47C(v33, (uint64_t)qword_100970FA8);
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    *(_DWORD *)v36 = 136315138;
    swift_beginAccess();
    uint64_t v37 = URL.path.getter();
    v1[16] = sub_100254634(v37, v38, &v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Cleaning up transfer folder %s", v36, 0xCu);
    swift_arrayDestroy();
    p_inst_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___NSNetServiceBrowserDelegate + 24);
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v39 = [self defaultManager];
  swift_beginAccess();
  URL._bridgeToObjectiveC()(v40);
  uint64_t v42 = v41;
  v1[14] = 0;
  unsigned int v43 = [v39 removeItemAtURL:v41 error:v1 + 14];

  id v44 = (id)v1[14];
  uint64_t v45 = v1[37];
  uint64_t v46 = v1[34];
  uint64_t v47 = v1[35];
  if (!v43)
  {
    uint64_t v57 = v44;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
    uint64_t v6 = v1 + 17;
    goto LABEL_17;
  }

  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
LABEL_22:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v56 = (uint64_t (*)(void))v1[1];
  return v56();
}

uint64_t sub_1003A74C4()
{
  v1 = v0;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[60] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1003A7594;
  uint64_t v3 = v1[41];
  uint64_t v4 = v1[21];
  return sub_100244DD0(v3, v4);
}

uint64_t sub_1003A7594()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 488) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 456);
  if (v0) {
    uint64_t v4 = sub_1003A8110;
  }
  else {
    uint64_t v4 = sub_1003A76EC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1003A76EC()
{
  uint64_t v94 = v0;
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[33];
  uint64_t v3 = v0[31];
  SFAirDropReceive.Transfer.askRequest.getter();
  uint64_t v4 = SFAirDropReceive.AskRequest.files.getter();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v0[29];
    char v8 = *(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 16);
    uint64_t v7 = v6 + 16;
    unint64_t v9 = v4 + ((*(unsigned __int8 *)(v7 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 64));
    uint64_t v87 = *(void *)(v7 + 56);
    uint64_t v90 = v8;
    swift_bridgeObjectRetain();
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
    do
    {
      uint64_t v11 = v0[30];
      uint64_t v12 = v0[28];
      v90(v11, v9, v12);
      uint64_t v13 = SFAirDropReceive.AskRequest.ItemInfo.fileBomPath.getter();
      uint64_t v15 = v14;
      (*(void (**)(uint64_t, uint64_t))(v7 - 8))(v11, v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_100253208(0, *((void *)v10 + 2) + 1, 1, v10);
      }
      unint64_t v17 = *((void *)v10 + 2);
      unint64_t v16 = *((void *)v10 + 3);
      if (v17 >= v16 >> 1) {
        uint64_t v10 = sub_100253208((char *)(v16 > 1), v17 + 1, 1, v10);
      }
      *((void *)v10 + 2) = v17 + 1;
      uint64_t v18 = &v10[16 * v17];
      *((void *)v18 + 4) = v13;
      *((void *)v18 + 5) = v15;
      v9 += v87;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease_n();
    uint64_t v19 = *((void *)v10 + 2);
    if (v19) {
      goto LABEL_9;
    }
LABEL_20:
    uint64_t v23 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_21;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  uint64_t v19 = _swiftEmptyArrayStorage[2];
  if (!v19) {
    goto LABEL_20;
  }
LABEL_9:
  uint64_t v20 = v0[35];
  uint64_t v88 = v20;
  uint64_t v91 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  uint64_t v21 = (void (**)(char *, char *, uint64_t))(v20 + 32);
  swift_bridgeObjectRetain();
  uint64_t v22 = v10 + 40;
  uint64_t v23 = (char *)_swiftEmptyArrayStorage;
  do
  {
    uint64_t v24 = v0[34];
    uint64_t v25 = v0[27];
    swift_bridgeObjectRetain();
    URL.init(string:)();
    swift_bridgeObjectRelease();
    if ((*v91)(v25, 1, v24) == 1)
    {
      sub_10000A7E8(v0[27], (uint64_t *)&unk_10096AC10);
    }
    else
    {
      uint64_t v27 = (char *)v0[39];
      uint64_t v26 = (char *)v0[40];
      uint64_t v28 = v0[34];
      v29 = *v21;
      (*v21)(v26, (char *)v0[27], v28);
      v29(v27, v26, v28);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v23 = (char *)sub_100253318(0, *((void *)v23 + 2) + 1, 1, (unint64_t)v23);
      }
      unint64_t v31 = *((void *)v23 + 2);
      unint64_t v30 = *((void *)v23 + 3);
      if (v31 >= v30 >> 1) {
        uint64_t v23 = (char *)sub_100253318(v30 > 1, v31 + 1, 1, (unint64_t)v23);
      }
      uint64_t v32 = (char *)v0[39];
      uint64_t v33 = v0[34];
      *((void *)v23 + 2) = v31 + 1;
      v29(&v23[((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80))+ *(void *)(v88 + 72) * v31], v32, v33);
    }
    v22 += 16;
    --v19;
  }
  while (v19);
  swift_bridgeObjectRelease();
LABEL_21:
  uint64_t v34 = v0[41];
  swift_bridgeObjectRelease();
  uint64_t v35 = swift_task_alloc();
  *(void *)(v35 + 16) = v34;
  v36 = sub_10039FFF4((void (*)(char *))sub_1003AB78C, v35, (uint64_t)v23);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (qword_100969D30 != -1) {
    swift_once();
  }
  uint64_t v81 = type metadata accessor for Logger();
  sub_10000B47C(v81, (uint64_t)qword_100970FA8);
  swift_bridgeObjectRetain_n();
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.default.getter();
  v82 = v36;
  if (os_log_type_enabled(v37, v38))
  {
    id v39 = (uint8_t *)swift_slowAlloc();
    uint64_t v93 = swift_slowAlloc();
    *(_DWORD *)id v39 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v40 = Array.description.getter();
    unint64_t v42 = v41;
    swift_bridgeObjectRelease();
    v0[19] = sub_100254634(v40, v42, &v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v36 = v82;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Removing placeholder files %s", v39, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v43 = *((void *)v36 + 2);
  uint64_t v44 = v0[35];
  if (v43)
  {
    uint64_t v46 = *(void (**)(uint64_t, char *, uint64_t))(v44 + 16);
    uint64_t v45 = v44 + 16;
    v92 = v46;
    uint64_t v47 = &v36[(*(unsigned __int8 *)(v45 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 64)];
    uint64_t v83 = *(void *)(v45 + 56);
    long long v86 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 32);
    int v89 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 40);
    v84 = (void (**)(void, void, void))(v45 + 16);
    uint64_t v85 = (void (**)(uint64_t, uint64_t))(v45 - 8);
    uint64_t v48 = (void (**)(uint64_t, uint64_t))(v45 - 8);
    while (1)
    {
      uint64_t v49 = v0[34];
      uint64_t v50 = v0[26];
      v92(v50, v47, v49);
      id v51 = *v89;
      (*v89)(v50, 0, 1, v49);
      if ((*v86)(v50, 1, v49) == 1) {
        break;
      }
      (*v84)(v0[38], v0[26], v0[34]);
      id v52 = [self defaultManager];
      URL._bridgeToObjectiveC()(v53);
      uint64_t v55 = v54;
      v0[18] = 0;
      unsigned int v56 = [v52 removeItemAtURL:v54 error:v0 + 18];

      uint64_t v57 = (void *)v0[18];
      if (!v56)
      {
        uint64_t v69 = v0[41];
        uint64_t v70 = v0[38];
        uint64_t v71 = v0[34];
        id v72 = v57;
        swift_bridgeObjectRelease();
        _convertNSErrorToError(_:)();

        swift_willThrow();
        v73 = *v85;
        (*v85)(v70, v71);
        v73(v69, v71);
        if (qword_100969D30 != -1) {
          swift_once();
        }
        sub_10000B47C(v81, (uint64_t)qword_100970FA8);
        swift_errorRetain();
        swift_errorRetain();
        id v74 = Logger.logObject.getter();
        os_log_type_t v75 = static os_log_type_t.error.getter();
        BOOL v76 = os_log_type_enabled(v74, v75);
        v77 = (void *)v0[58];
        if (v76)
        {
          uint64_t v78 = (uint8_t *)swift_slowAlloc();
          unint64_t v79 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v78 = 138412290;
          swift_errorRetain();
          uint64_t v80 = _swift_stdlib_bridgeErrorToNSError();
          v0[15] = v80;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *unint64_t v79 = v80;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v74, v75, "Remove URL failed with error %@", v78, 0xCu);
          sub_10000A844(&qword_10096B850);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {

          swift_errorRelease();
          swift_errorRelease();
          swift_errorRelease();
        }
        goto LABEL_35;
      }
      uint64_t v58 = v0[38];
      uint64_t v59 = v0[34];
      uint64_t v60 = v45;
      uint64_t v61 = *v48;
      id v62 = v57;
      v61(v58, v59);
      uint64_t v45 = v60;
      v47 += v83;
      if (!--v43) {
        goto LABEL_33;
      }
    }
  }
  else
  {
    id v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56);
LABEL_33:
    v51(v0[26], 1, 1, v0[34]);
  }
  uint64_t v63 = (void *)v0[58];
  uint64_t v64 = v0[41];
  uint64_t v65 = v0[34];
  uint64_t v66 = v0[35];
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v64, v65);
LABEL_35:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v67 = (uint64_t (*)(void))v0[1];
  return v67();
}

uint64_t sub_1003A8110()
{
  if (qword_100969D30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_100970FA8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    unint64_t v9 = *(void **)(v0 + 464);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 120) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Remove URL failed with error %@", v4, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1003A8424@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.standardized.getter();
  URL.absoluteString.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(a1, 0, 1, v2);
}

uint64_t sub_1003A8558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  v7[5] = a5;
  v7[2] = a1;
  v7[3] = a2;
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v7[8] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for URL();
  v7[9] = v8;
  v7[10] = *(void *)(v8 - 8);
  v7[11] = swift_task_alloc();
  v7[12] = swift_task_alloc();
  return _swift_task_switch(sub_1003A8660, 0, 0);
}

uint64_t sub_1003A8660()
{
  uint64_t v26 = _swiftEmptyArrayStorage;
  uint64_t v1 = *(void *)(v0[3] + 16);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = v0[10];
  if (v1)
  {
    uint64_t v5 = *(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16);
    uint64_t v4 = v3 + 16;
    uint64_t v25 = v5;
    unint64_t v22 = (*(unsigned __int8 *)(v4 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 64);
    unint64_t v6 = v2 + v22;
    uint64_t v7 = *(void *)(v4 + 56);
    uint64_t v8 = (void (**)(void, void, void))(v4 + 16);
    unint64_t v9 = _swiftEmptyArrayStorage;
    uint64_t v24 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 40);
    do
    {
      uint64_t v10 = v9;
      uint64_t v11 = v8;
      uint64_t v13 = v0[8];
      uint64_t v12 = v0[9];
      v25(v13, v6, v12);
      uint64_t v23 = *v24;
      (*v24)(v13, 0, 1, v12);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v13, 1, v12) == 1)
      {
        unint64_t v9 = v10;
        goto LABEL_15;
      }
      uint64_t v8 = v11;
      uint64_t v14 = (void (*)(char *, uint64_t, uint64_t))*v11;
      (*v11)(v0[12], v0[8], v0[9]);
      if (URL.isFileURL.getter())
      {
        v14((char *)v0[11], v0[12], v0[9]);
        unint64_t v9 = v10;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10025539C(0, v10[2] + 1, 1);
          unint64_t v9 = v26;
        }
        unint64_t v16 = v9[2];
        unint64_t v15 = v9[3];
        if (v16 >= v15 >> 1)
        {
          sub_10025539C(v15 > 1, v16 + 1, 1);
          unint64_t v9 = v26;
        }
        uint64_t v17 = v0[11];
        uint64_t v18 = v0[9];
        v9[2] = v16 + 1;
        uint64_t v8 = v11;
        v14((char *)v9 + v22 + v16 * v7, v17, v18);
        uint64_t v26 = v9;
      }
      else
      {
        (*(void (**)(void, void))(v4 - 8))(v0[12], v0[9]);
        unint64_t v9 = v10;
      }
      v6 += v7;
      --v1;
    }
    while (v1);
    v23(v0[8], 1, 1, v0[9]);
  }
  else
  {
    unint64_t v9 = _swiftEmptyArrayStorage;
    (*(void (**)(void, uint64_t, uint64_t, void))(v3 + 56))(v0[8], 1, 1, v0[9]);
  }
LABEL_15:
  v0[13] = v9;
  uint64_t v19 = v0[8];
  swift_bridgeObjectRelease();
  sub_10000A7E8(v19, (uint64_t *)&unk_10096AC10);
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v20 = static AirDropActor.shared;
  return _swift_task_switch(sub_1003A8958, v20, 0);
}

uint64_t sub_1003A8958()
{
  *(void *)(v0 + 112) = sub_1003B04F0(*(void *)(v0 + 32));
  *(_DWORD *)(v0 + 144) = v1;
  return _swift_task_switch(sub_1003A89C8, 0, 0);
}

uint64_t sub_1003A89C8()
{
  int v1 = *(_DWORD *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  long long v11 = *(_OWORD *)(v0 + 32);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 120) = v6;
  *(_OWORD *)(v6 + 16) = v11;
  *(void *)(v6 + 32) = v5;
  *(void *)(v6 + 40) = v3;
  *(void *)(v6 + 48) = v2;
  *(unsigned char *)(v6 + 56) = v1 & 1;
  *(unsigned char *)(v6 + 57) = BYTE1(v1) & 1;
  *(unsigned char *)(v6 + 58) = BYTE2(v1) & 1;
  *(void *)(v6 + 64) = v4;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v7;
  uint64_t v8 = sub_10000A844(&qword_100971108);
  *uint64_t v7 = v0;
  v7[1] = sub_1003A8B10;
  uint64_t v9 = *(void *)(v0 + 16);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v9, 0, 0, 0xD000000000000023, 0x80000001007BB340, sub_1003B06F0, v6, v8);
}

uint64_t sub_1003A8B10()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1003A8CC4;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v2 = sub_1003A8C38;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003A8C38()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003A8CC4()
{
  uint64_t v1 = *(void **)(v0 + 112);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_1003A8D68(uint64_t a1, id a2, void *a3, unint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, unsigned __int8 a9, uint64_t a10)
{
  int v47 = a7;
  int v48 = a8;
  uint64_t v49 = a6;
  NSString v50 = a3;
  uint64_t v51 = a5;
  uint64_t v46 = sub_10000A844(&qword_100971110);
  uint64_t v44 = *(void *)(v46 - 8);
  uint64_t v13 = *(objc_class **)(v44 + 64);
  __chkstk_darwin(v46);
  uint64_t v43 = (char *)&v39 - (((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v42 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v42 + 64);
  uint64_t v16 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v39 - v18;
  if (qword_100969D30 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_10000B47C(v20, (uint64_t)qword_100970FA8);
  sub_10025AE8C((uint64_t)a2, (uint64_t)v19);
  swift_bridgeObjectRetain_n();
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v39 = v15;
    id v40 = a2;
    uint64_t v41 = a1;
    Class isa = v13;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v24 = sub_100313BE0();
    uint64_t aBlock = sub_100254634(v24, v25, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1003B0C68((uint64_t)v19, type metadata accessor for SDAirDropDiscoveredEndpoint);
    *(_WORD *)(v23 + 12) = 2080;
    uint64_t v26 = (uint64_t)v50;
    unint64_t v27 = a4;
    if (!a4)
    {
      uint64_t aBlock = 0;
      unint64_t v54 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v27 = 0x80000001007B7770;
      uint64_t v26 = 0xD000000000000015;
    }
    swift_bridgeObjectRetain();
    uint64_t aBlock = sub_100254634(v26, v27, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Converting media items for endpoint %s from requestSource %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v13 = isa;
    a2 = v40;
    a1 = v41;
    uint64_t v15 = v39;
  }
  else
  {
    sub_1003B0C68((uint64_t)v19, type metadata accessor for SDAirDropDiscoveredEndpoint);

    swift_bridgeObjectRelease_n();
  }
  LODWORD(v41) = a9;
  type metadata accessor for URL();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  if (a4) {
    NSString v50 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v50 = 0;
  }
  id v40 = self;
  uint64_t v28 = (uint64_t)v17;
  sub_10025AE8C((uint64_t)a2, (uint64_t)v17);
  v29 = v43;
  uint64_t v30 = v44;
  uint64_t v31 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v43, a1, v46);
  unint64_t v32 = (*(unsigned __int8 *)(v42 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  unint64_t v33 = (v15 + *(unsigned __int8 *)(v30 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  unint64_t v34 = ((unint64_t)v13 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = swift_allocObject();
  sub_1003B0C00(v28, v35 + v32, type metadata accessor for SDAirDropDiscoveredEndpoint);
  (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v35 + v33, v29, v31);
  *(void *)(v35 + v34) = v51;
  *(void *)(v35 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8)) = a10;
  uint64_t v57 = sub_1003B0A98;
  uint64_t v58 = v35;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  unint64_t v54 = 1107296256;
  uint64_t v55 = sub_1003AA9EC;
  unsigned int v56 = &unk_1008D83D8;
  v36 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  Class v37 = isa;
  os_log_type_t v38 = v50;
  [v40 convertMediaItemsWithFileURLs:isa clientBundleID:v50 mediaCapabilities:v49 supportsLivePhoto:v47 & 1 supportsAssetBundles:v48 & 1 supportsWideGamut:v41 & 1 completionHandler:v36];
  _Block_release(v36);
}

uint64_t sub_1003A930C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v100 = a6;
  v111 = a5;
  uint64_t v102 = a4;
  uint64_t v103 = a3;
  unint64_t v101 = a1;
  uint64_t v104 = type metadata accessor for Logger();
  uint64_t v99 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v8 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v107 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  long long v11 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SFSecurityScopedURL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v96 - v17;
  uint64_t v19 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v96 - v23;
  __chkstk_darwin(v22);
  uint64_t v28 = (char *)&v96 - v27;
  if (a2)
  {
    swift_errorRetain();
    if (qword_100969D30 != -1) {
      swift_once();
    }
    sub_10000B47C(v104, (uint64_t)qword_100970FA8);
    sub_10025AE8C(v103, (uint64_t)v28);
    swift_errorRetain();
    swift_errorRetain();
    v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      unint64_t v32 = (void *)swift_slowAlloc();
      uint64_t v113 = swift_slowAlloc();
      v117[0] = v113;
      *(_DWORD *)uint64_t v31 = 136315394;
      uint64_t v33 = sub_100313BE0();
      uint64_t v114 = sub_100254634(v33, v34, v117);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1003B0C68((uint64_t)v28, type metadata accessor for SDAirDropDiscoveredEndpoint);
      *(_WORD *)(v31 + 12) = 2112;
      swift_errorRetain();
      uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v114 = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v32 = v35;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Conversion of media items for endpoint %s failed: %@", (uint8_t *)v31, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1003B0C68((uint64_t)v28, type metadata accessor for SDAirDropDiscoveredEndpoint);
      swift_errorRelease();
      swift_errorRelease();
    }

    v117[0] = a2;
    sub_10000A844(&qword_100971110);
    return CheckedContinuation.resume(throwing:)();
  }
  v36 = v111;
  uint64_t v112 = (uint64_t)v16;
  uint64_t v113 = v9;
  id v108 = v18;
  v109 = v11;
  uint64_t v110 = v12;
  v98 = v8;
  unint64_t v37 = v101;
  if (!v101)
  {
    if (qword_100969D30 == -1)
    {
LABEL_17:
      sub_10000B47C(v104, (uint64_t)qword_100970FA8);
      sub_10025AE8C(v103, (uint64_t)v24);
      NSString v50 = Logger.logObject.getter();
      os_log_type_t v51 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v52 = (uint8_t *)swift_slowAlloc();
        v117[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v52 = 136315138;
        uint64_t v53 = sub_100313BE0();
        uint64_t v114 = sub_100254634(v53, v54, v117);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1003B0C68((uint64_t)v24, type metadata accessor for SDAirDropDiscoveredEndpoint);
        _os_log_impl((void *)&_mh_execute_header, v50, v51, "Conversion of media items for endpoint %s failed", v52, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_1003B0C68((uint64_t)v24, type metadata accessor for SDAirDropDiscoveredEndpoint);
      }

      uint64_t v55 = type metadata accessor for SFAirDropSend.Failure();
      sub_1003B0BB8(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
      uint64_t v56 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v55 - 8) + 104))(v57, enum case for SFAirDropSend.Failure.badRequest(_:), v55);
      v117[0] = v56;
      sub_10000A844(&qword_100971110);
      return CheckedContinuation.resume(throwing:)();
    }
LABEL_58:
    swift_once();
    goto LABEL_17;
  }
  uint64_t v38 = v26;
  uint64_t v97 = v25;
  uint64_t v24 = (char *)_swiftEmptyArrayStorage;
  unint64_t v118 = sub_100246C1C((uint64_t)_swiftEmptyArrayStorage);
  sub_1003A046C(v37, (uint64_t *)&v118);
  uint64_t v40 = v39;
  uint64_t v42 = v109;
  uint64_t v41 = v110;
  if (!*(void *)(v39 + 16) && v36[2])
  {
    uint64_t v96 = v39;
    if (qword_100969D30 != -1) {
      swift_once();
    }
    sub_10000B47C(v104, (uint64_t)qword_100970FA8);
    uint64_t v43 = v38;
    sub_10025AE8C(v103, v38);
    uint64_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      v111 = (void *)swift_slowAlloc();
      v117[0] = (uint64_t)v111;
      *(_DWORD *)uint64_t v46 = 136315138;
      uint64_t v41 = v110;
      v105 = (void (**)(char *, uint64_t))(v46 + 4);
      v106 = v46;
      uint64_t v47 = sub_100313BE0();
      uint64_t v114 = sub_100254634(v47, v48, v117);
      uint64_t v24 = (char *)_swiftEmptyArrayStorage;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1003B0C68(v43, type metadata accessor for SDAirDropDiscoveredEndpoint);
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Conversion of media items for endpoint %s returned no results, falling back to initial URLs", v106, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1003B0C68(v43, type metadata accessor for SDAirDropDiscoveredEndpoint);
    }

    uint64_t v40 = v96;
    memset(v117, 0, 24);
    sub_10000A844(&qword_100971110);
    CheckedContinuation.resume(returning:)();
  }
  v117[0] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v58 = *(void *)(v100 + 16);
  uint64_t v59 = swift_bridgeObjectRetain();
  uint64_t v60 = v108;
  if (v58)
  {
    uint64_t v96 = v40;
    id v62 = *(void **)(v13 + 16);
    uint64_t v61 = v13 + 16;
    v111 = v62;
    uint64_t v63 = *(void *)(v61 + 56);
    v106 = (uint8_t *)((*(unsigned __int8 *)(v61 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 64));
    uint64_t v64 = &v106[v59];
    uint64_t v65 = (void (**)(char *, uint64_t))(v107 + 8);
    uint64_t v66 = (void (**)(uint64_t, char *, uint64_t))(v61 + 16);
    v105 = (void (**)(char *, uint64_t))(v61 - 8);
    uint64_t v107 = v61;
    ((void (*)(char *, uint8_t *, uint64_t))v62)(v108, &v106[v59], v41);
    while (1)
    {
      uint64_t v67 = v60;
      SFSecurityScopedURL.url.getter();
      char v68 = URL.isFileURL.getter();
      (*v65)(v42, v113);
      if (v68)
      {
        (*v105)(v67, v41);
        uint64_t v60 = v67;
      }
      else
      {
        uint64_t v69 = *v66;
        (*v66)(v112, v67, v41);
        uint64_t v70 = v117[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100255688(0, *(void *)(v70 + 16) + 1, 1);
          uint64_t v70 = v117[0];
        }
        unint64_t v72 = *(void *)(v70 + 16);
        unint64_t v71 = *(void *)(v70 + 24);
        if (v72 >= v71 >> 1)
        {
          sub_100255688(v71 > 1, v72 + 1, 1);
          uint64_t v70 = v117[0];
        }
        *(void *)(v70 + 16) = v72 + 1;
        v73 = &v106[v70 + v72 * v63];
        uint64_t v41 = v110;
        v69((uint64_t)v73, (char *)v112, v110);
        v117[0] = v70;
        uint64_t v60 = v108;
        uint64_t v42 = v109;
      }
      v64 += v63;
      if (!--v58) {
        break;
      }
      ((void (*)(char *, uint8_t *, uint64_t))v111)(v60, v64, v41);
    }
    id v74 = (void *)v117[0];
    unint64_t v37 = v101;
    uint64_t v24 = (char *)_swiftEmptyArrayStorage;
    uint64_t v40 = v96;
  }
  else
  {
    id v74 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  v117[0] = (uint64_t)v74;
  sub_1003D4D98(v40);
  uint64_t v112 = v117[0];
  v117[0] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v75 = v104;
  uint64_t v76 = v99;
  if (v37 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v77 = _CocoaArrayWrapper.endIndex.getter();
    if (v77) {
      goto LABEL_38;
    }
  }
  else
  {
    uint64_t v77 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v77)
    {
LABEL_38:
      if (v77 >= 1)
      {
        for (uint64_t i = 0; i != v77; ++i)
        {
          if ((v37 & 0xC000000000000001) != 0) {
            id v79 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v79 = *(id *)(v37 + 8 * i + 32);
          }
          uint64_t v80 = v79;
          id v81 = [v79 conversionDestination:v96];

          if (v81)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v117[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v117[0] & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
        }
        swift_bridgeObjectRelease();
        v82 = (void *)v117[0];
        goto LABEL_51;
      }
      __break(1u);
      goto LABEL_58;
    }
  }
  swift_bridgeObjectRelease();
  v82 = _swiftEmptyArrayStorage;
LABEL_51:
  uint64_t v83 = v98;
  if (qword_100969D30 != -1) {
    swift_once();
  }
  uint64_t v84 = sub_10000B47C(v75, (uint64_t)qword_100970FA8);
  (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v83, v84, v75);
  uint64_t v85 = v97;
  sub_10025AE8C(v103, v97);
  long long v86 = Logger.logObject.getter();
  os_log_type_t v87 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v86, v87))
  {
    uint64_t v88 = swift_slowAlloc();
    v111 = v82;
    uint64_t v89 = v88;
    v117[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v89 = 136315394;
    uint64_t v90 = sub_100315DA0();
    uint64_t v114 = sub_100254634(v90, v91, v117);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1003B0C68(v85, type metadata accessor for SDAirDropDiscoveredEndpoint);
    *(_WORD *)(v89 + 12) = 2080;
    uint64_t v110 = v89 + 14;
    swift_beginAccess();
    sub_1003B0BB8(&qword_10096B5A0, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v92 = v75;
    swift_bridgeObjectRetain();
    uint64_t v93 = Dictionary.description.getter();
    unint64_t v95 = v94;
    swift_bridgeObjectRelease();
    uint64_t v114 = sub_100254634(v93, v95, v117);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v86, v87, "Conversion of media items for endpoint %s returned map of conversion needed: %s", (uint8_t *)v89, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    v82 = v111;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v76 + 8))(v98, v92);
  }
  else
  {
    sub_1003B0C68(v85, type metadata accessor for SDAirDropDiscoveredEndpoint);

    (*(void (**)(char *, uint64_t))(v76 + 8))(v83, v75);
  }
  swift_beginAccess();
  uint64_t v114 = v112;
  unint64_t v115 = v118;
  char v116 = v82;
  sub_10000A844(&qword_100971110);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_1003AA28C@<X0>(void **a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v60 = a3;
  uint64_t v57 = a2;
  uint64_t v4 = sub_10000A844(&qword_100970FC8);
  __chkstk_darwin(v4 - 8);
  uint64_t v58 = &v54[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_10096AC10);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v54[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = &v54[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = &v54[-v15];
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = &v54[-v18];
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = &v54[-v21];
  __chkstk_darwin(v20);
  uint64_t v59 = &v54[-v23];
  uint64_t v24 = *a1;
  id v25 = [v24 url];
  if (!v25)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_6;
  }
  uint64_t v26 = v25;
  uint64_t v56 = v13;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v27 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32);
  v27(v8, v22, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_6:
    sub_10000A7E8((uint64_t)v8, (uint64_t *)&unk_10096AC10);
    uint64_t v33 = type metadata accessor for SFSecurityScopedURL();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v60, 1, 1, v33);
  }
  uint64_t v28 = v59;
  v27(v59, v8, v9);
  v29 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16);
  v29(v19, v28, v9);
  id v30 = [v24 conversionNeeded];
  if (v30)
  {
    uint64_t v31 = v30;
    char v32 = [v30 BOOLValue];
  }
  else
  {
    char v32 = 0;
  }
  uint64_t v35 = v57;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v63 = (unsigned char *)*v35;
  *uint64_t v35 = 0x8000000000000000;
  sub_1005939A4(v32, (uint64_t)v19, isUniquelyReferenced_nonNull_native);
  *uint64_t v35 = (uint64_t)v63;
  swift_bridgeObjectRelease();
  unint64_t v37 = *(void (**)(unsigned char *, uint64_t))(v10 + 8);
  v37(v19, v9);
  uint64_t v38 = v59;
  v29(v16, v59, v9);
  uint64_t v39 = (uint64_t)v58;
  uint64_t v40 = v61;
  SFSecurityScopedURL.init(_:readWrite:)();
  if (v40)
  {
    if (qword_100969D30 != -1) {
      swift_once();
    }
    uint64_t v41 = type metadata accessor for Logger();
    sub_10000B47C(v41, (uint64_t)qword_100970FA8);
    uint64_t v42 = v56;
    v29(v56, v38, v9);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.error.getter();
    int v45 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v46 = swift_slowAlloc();
      uint64_t v61 = v40;
      uint64_t v47 = v46;
      uint64_t v57 = (uint64_t *)swift_slowAlloc();
      uint64_t v58 = (unsigned char *)swift_slowAlloc();
      uint64_t v63 = v58;
      *(_DWORD *)uint64_t v47 = 136315394;
      sub_1003B0BB8((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
      int v55 = v45;
      uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v62 = sub_100254634(v48, v49, (uint64_t *)&v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v37(v42, v9);
      *(_WORD *)(v47 + 12) = 2112;
      swift_errorRetain();
      uint64_t v50 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v62 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v57 = v50;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v55, "Failed to get security scoped URL for URL: %s. Error: %@", (uint8_t *)v47, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      os_log_type_t v51 = v59;
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      v37(v42, v9);
      swift_errorRelease();
      os_log_type_t v51 = v38;
    }
    v37(v51, v9);
    uint64_t v53 = type metadata accessor for SFSecurityScopedURL();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v60, 1, 1, v53);
  }
  else
  {
    v37(v38, v9);
    uint64_t v52 = type metadata accessor for SFSecurityScopedURL();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v39, 0, 1, v52);
    return sub_10024D388(v39, v60, &qword_100970FC8);
  }
}

uint64_t sub_1003AA9EC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_10000B740(0, &qword_100971118);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_1003AAA90@<X0>(NSURL *a1@<X8>)
{
  URL._bridgeToObjectiveC()(a1);
  uint64_t v2 = v1;
  id v3 = [v1 isiWorkDocument];

  return v3;
}

uint64_t Sequence<>.markAllRecent()(void (**a1)(char *, char *, uint64_t), uint64_t a2)
{
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_10097F250);
  __chkstk_darwin(v4 - 8);
  uint64_t v80 = (char *)v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for SFSandboxTokenURLPair();
  uint64_t v72 = *(void *)(v79 - 8);
  uint64_t v6 = __chkstk_darwin(v79);
  uint64_t v69 = (char *)v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v67 = (char *)v63 - v9;
  __chkstk_darwin(v8);
  uint64_t v66 = (char *)v63 - v10;
  uint64_t v11 = sub_10000A844(&qword_100970FC8);
  __chkstk_darwin(v11 - 8);
  uint64_t v89 = (char *)v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for SFSecurityScopedURL();
  *(void *)&long long v78 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v76 = (char *)v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v92 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v70 = (char *)v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v88 = (char *)v63 - v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v63 - v19;
  uint64_t v21 = sub_10000A844((uint64_t *)&unk_10096AC10);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  unint64_t v91 = (char *)v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (uint64_t)*(a1 - 1);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = a2;
  uint64_t v93 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v71 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v29 = (char *)v63 - v28;
  uint64_t v30 = type metadata accessor for SFPlatform();
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)v63 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  static SFPlatform.macOS.getter();
  LOBYTE(a2) = static SFPlatform.isPlatform(_:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v33, v30);
  if (a2)
  {
    (*(void (**)(char *, uint64_t, void))(v24 + 16))(v26, v86, v93);
    dispatch thunk of Sequence.makeIterator()();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v36 = v91;
    unint64_t v37 = v29;
    uint64_t v87 = AssociatedConformanceWitness;
    dispatch thunk of IteratorProtocol.next()();
    uint64_t v38 = v92;
    uint64_t v85 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48);
    uint64_t v86 = v92 + 48;
    if (v85(v36, 1, v14) == 1)
    {
      char v68 = (char *)_swiftEmptyArrayStorage;
    }
    else
    {
      uint64_t v40 = v38;
      uint64_t v41 = v36;
      uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
      v40 += 32;
      uint64_t v93 = (void (**)(char *, char *, uint64_t))(v40 - 16);
      id v81 = (void (**)(char *, void, uint64_t, uint64_t))(v78 + 56);
      v82 = v42;
      uint64_t v75 = (void (**)(void))(v78 + 32);
      id v74 = (void (**)(char *, void, uint64_t, uint64_t))(v72 + 56);
      v73 = (void (**)(char *, uint64_t))(v78 + 8);
      uint64_t v43 = (void (**)(char *, uint64_t))(v40 - 24);
      uint64_t v65 = (void (**)(char *, char *, uint64_t))(v72 + 32);
      uint64_t v64 = (void (**)(char *, char *, uint64_t))(v72 + 16);
      v63[1] = v72 + 8;
      char v68 = (char *)_swiftEmptyArrayStorage;
      *(void *)&long long v39 = 136315138;
      long long v78 = v39;
      uint64_t v77 = (char *)&type metadata for Any + 8;
      os_log_type_t v44 = v80;
      uint64_t v45 = v90;
      uint64_t v92 = v40;
      uint64_t v83 = AssociatedTypeWitness;
      uint64_t v84 = v37;
      do
      {
        v82(v20, v41, v14);
        (*v93)(v88, v20, v14);
        uint64_t v46 = v89;
        SFSecurityScopedURL.init(_:readWrite:)();
        (*v81)(v46, 0, 1, v45);
        (*v75)();
        static SFSecurityScopedURL.consumeSandboxToken(item:)();
        uint64_t v47 = v79;
        (*v74)(v44, 0, 1, v79);
        uint64_t v48 = *v65;
        unint64_t v49 = v66;
        (*v65)(v66, v44, v47);
        (*v64)(v67, v49, v47);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t AssociatedTypeWitness = v83;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          char v68 = (char *)sub_10025396C(0, *((void *)v68 + 2) + 1, 1, (unint64_t)v68);
        }
        unint64_t v52 = *((void *)v68 + 2);
        unint64_t v51 = *((void *)v68 + 3);
        if (v52 >= v51 >> 1) {
          char v68 = (char *)sub_10025396C(v51 > 1, v52 + 1, 1, (unint64_t)v68);
        }
        uint64_t v53 = v68;
        *((void *)v68 + 2) = v52 + 1;
        uint64_t v54 = v72;
        uint64_t v55 = v79;
        v48(&v53[((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v72 + 72) * v52], v67, v79);
        (*(void (**)(char *, uint64_t))(v54 + 8))(v66, v55);
        (*v43)(v20, v14);
        uint64_t v45 = v90;
        (*v73)(v76, v90);
        uint64_t v41 = v91;
        unint64_t v37 = v84;
        dispatch thunk of IteratorProtocol.next()();
      }
      while (v85(v41, 1, v14) != 1);
    }
    (*(void (**)(char *, uint64_t))(v71 + 8))(v37, AssociatedTypeWitness);
    uint64_t v56 = *((void *)v68 + 2);
    if (v56)
    {
      uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
      uint64_t v58 = &v68[(*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80)];
      uint64_t v59 = *(void *)(v72 + 72);
      uint64_t v60 = (void (**)(char *, uint64_t))(v72 + 8);
      swift_bridgeObjectRetain();
      uint64_t v61 = v79;
      uint64_t v62 = v69;
      do
      {
        v57(v62, v58, v61);
        SFSandboxTokenURLPair.releaseSandboxExtension()();
        (*v60)(v62, v61);
        v58 += v59;
        --v56;
      }
      while (v56);
      return swift_bridgeObjectRelease_n();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t type metadata accessor for SDAirDropContentHandlerUtilities()
{
  return self;
}

uint64_t sub_1003AB78C@<X0>(uint64_t a1@<X8>)
{
  return sub_1003A8424(a1);
}

void sub_1003AB7A8(uint64_t a1, int a2)
{
  uint64_t v3 = type metadata accessor for SFPlatform();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A844(&qword_100971070);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(SFAirDropReceive.AskRequest.files.getter() + 16);
  swift_bridgeObjectRelease();
  if (v10 != 1) {
    goto LABEL_7;
  }
  uint64_t v42 = v4;
  LODWORD(v43) = a2;
  uint64_t v11 = SFAirDropReceive.AskRequest.files.getter();
  uint64_t v12 = *(void *)(v11 + 16);
  uint64_t v13 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo();
  uint64_t v14 = *(void *)(v13 - 8);
  if (v12)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v9, v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)), v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v9, 1, 1, v13);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) == 1)
  {
    sub_10000A7E8((uint64_t)v9, &qword_100971070);
    LOBYTE(a2) = v43;
LABEL_7:
    sub_10000A844(&qword_10096D760);
    uint64_t inited = swift_initStackObject();
    long long v43 = xmmword_10076E7A0;
    *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
    strcpy((char *)(inited + 32), "GENERIC_FILE");
    *(unsigned char *)(inited + 45) = 0;
    *(_WORD *)(inited + 46) = -5120;
    *(void *)(inited + 48) = v10;
    uint64_t v44 = 0x545F4E5245444F4DLL;
    unint64_t v45 = 0xEF524546534E4152;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16._countAndFlagsBits = 95;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    v17._countAndFlagsBits = 0x5F434952454E4547;
    v17._object = (void *)0xEC000000454C4946;
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    if (v10 > 1)
    {
      v18._countAndFlagsBits = 0x4C4152554C505FLL;
      v18._object = (void *)0xE700000000000000;
      String.append(_:)(v18);
    }
    swift_bridgeObjectRelease();
    if (a2)
    {
      v19._countAndFlagsBits = 0x4C4154495041435FLL;
      v19._object = (void *)0xEC00000044455A49;
      String.append(_:)(v19);
    }
    v20._countAndFlagsBits = 0x545845545FLL;
    v20._object = (void *)0xE500000000000000;
    String.append(_:)(v20);
    swift_setDeallocating();
    sub_10000A844((uint64_t *)&unk_100977CB0);
    swift_arrayDestroy();
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v22 = (id)SFLocalizedStringForKey();

    if (v22)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10000A844((uint64_t *)&unk_10096EE60);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = v43;
      *(void *)(v23 + 56) = &type metadata for Int;
      *(void *)(v23 + 64) = &protocol witness table for Int;
      *(void *)(v23 + 32) = v10;
LABEL_21:
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v24 = SFAirDropReceive.AskRequest.ItemInfo.fileName.getter();
  uint64_t v26 = v25;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v13);
  static SFPlatform.macOS.getter();
  char v27 = static SFPlatform.isPlatform(_:)();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v3);
  if (v27)
  {
    char v28 = v43;
  }
  else
  {
    NSString v29 = String._bridgeToObjectiveC()();
    id v30 = (id)SFTruncateAirDropFilenameForUI();

    char v28 = v43;
    if (v30)
    {
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v32 = v31;
      swift_bridgeObjectRelease();

      uint64_t v26 = v32;
    }
  }
  sub_10000A844(&qword_10096D760);
  uint64_t v33 = swift_initStackObject();
  *(void *)(v33 + 32) = 0xD000000000000017;
  long long v43 = xmmword_10076E7A0;
  *(_OWORD *)(v33 + 16) = xmmword_10076E7A0;
  *(void *)(v33 + 40) = 0x80000001007BB230;
  *(void *)(v33 + 48) = 1;
  uint64_t v44 = 0x545F4E5245444F4DLL;
  unint64_t v45 = 0xEF524546534E4152;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34._countAndFlagsBits = 95;
  v34._object = (void *)0xE100000000000000;
  String.append(_:)(v34);
  v35._countAndFlagsBits = 0xD000000000000017;
  v35._object = (void *)0x80000001007BB230;
  String.append(_:)(v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v28)
  {
    v36._countAndFlagsBits = 0x4C4154495041435FLL;
    v36._object = (void *)0xEC00000044455A49;
    String.append(_:)(v36);
  }
  v37._countAndFlagsBits = 0x545845545FLL;
  v37._object = (void *)0xE500000000000000;
  String.append(_:)(v37);
  swift_setDeallocating();
  sub_10000A844((uint64_t *)&unk_100977CB0);
  swift_arrayDestroy();
  NSString v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v39 = (id)SFLocalizedStringForKey();

  if (v39)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = v43;
    *(void *)(v40 + 56) = &type metadata for String;
    *(void *)(v40 + 64) = sub_1002E695C();
    *(void *)(v40 + 32) = v24;
    *(void *)(v40 + 40) = v26;
    goto LABEL_21;
  }
LABEL_23:
  __break(1u);
}

void *sub_1003ABE64()
{
  uint64_t v0 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v90 = (char *)&v79 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v92 = [objc_allocWithZone((Class)NSMutableOrderedSet) init];
  uint64_t v3 = SFAirDropReceive.AskRequest.files.getter();
  uint64_t v89 = *(void *)(v3 + 16);
  if (!v89)
  {
LABEL_54:
    swift_bridgeObjectRelease();
    if (qword_100969D30 != -1) {
      goto LABEL_65;
    }
    goto LABEL_55;
  }
  uint64_t v4 = self;
  unint64_t v5 = 0;
  uint64_t v81 = 0;
  unint64_t v87 = v3 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  id v88 = v4;
  uint64_t v86 = v1 + 16;
  uint64_t v83 = (void (**)(char *, uint64_t))(v1 + 8);
  *(void *)&long long v6 = 138412290;
  long long v79 = v6;
  uint64_t v80 = (char *)&type metadata for Any + 8;
  uint64_t v82 = v0;
  uint64_t v84 = v3;
  uint64_t v85 = v1;
  while (v5 < *(void *)(v3 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v90, v87 + *(void *)(v1 + 72) * v5, v0);
    id v11 = [objc_allocWithZone((Class)NSMutableOrderedSet) init];
    SFAirDropReceive.AskRequest.ItemInfo.fileName.getter();
    SFAirDropReceive.AskRequest.ItemInfo.fileType.getter();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v14 = [v88 documentProxyForName:v12 type:v13 MIMEType:0];

    SFAirDropReceive.AskRequest.ItemInfo.fileType.getter();
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    LOBYTE(v12) = SFIsCoreType();

    id v91 = v11;
    if (v12) {
      goto LABEL_29;
    }
    v94[0] = 0;
    id v16 = [v14 availableClaimBindingsForMode:1 error:v94];
    id v17 = v94[0];
    if (v16)
    {
      Swift::String v18 = v16;
      sub_10000B740(0, &qword_1009710E8);
      unint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
      id v20 = v17;

      v94[0] = _swiftEmptyArrayStorage;
      if (v19 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
        if (!v21) {
          goto LABEL_27;
        }
LABEL_10:
        if (v21 < 1) {
          goto LABEL_63;
        }
        for (uint64_t i = 0; i != v21; ++i)
        {
          if ((v19 & 0xC000000000000001) != 0) {
            id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v23 = *(id *)(v19 + 8 * i + 32);
          }
          uint64_t v24 = v23;
          id v25 = [v23 bundleRecord:v79, v80, v81];

          if (v25)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)(((unint64_t)v94[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v94[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v26 = v94[0];
        uint64_t v0 = v82;
      }
      else
      {
        uint64_t v21 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v21) {
          goto LABEL_10;
        }
LABEL_27:
        swift_bridgeObjectRelease();
        uint64_t v26 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease();
      sub_10045E758((unint64_t)v26);
      swift_bridgeObjectRelease();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v11 = v91;
      [v91 addObjectsFromArray:isa];

      goto LABEL_29;
    }
    id v27 = v94[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_100969D30 != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    sub_10000B47C(v28, (uint64_t)qword_100970FA8);
    swift_errorRetain();
    swift_errorRetain();
    NSString v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v81 = 0;
    if (v31)
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = v79;
      swift_errorRetain();
      uint64_t v34 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v32 + 4) = v34;
      *uint64_t v33 = v34;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Failed to get airdrop available applications for opening: %@", (uint8_t *)v32, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      uint64_t v0 = v82;
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
LABEL_29:
    id v36 = [v11 set:v79];
    uint64_t v37 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v38 = *(void *)(v37 + 16);
    swift_bridgeObjectRelease();
    if (!v38)
    {
      v94[0] = 0;
      id v39 = [v14 availableClaimBindingsReturningError:v94];
      id v40 = v94[0];
      if (!v39)
      {
        id v50 = v94[0];
        _convertNSErrorToError(_:)();

        swift_willThrow();
        if (qword_100969D30 != -1) {
          swift_once();
        }
        uint64_t v51 = type metadata accessor for Logger();
        sub_10000B47C(v51, (uint64_t)qword_100970FA8);
        swift_errorRetain();
        swift_errorRetain();
        unint64_t v52 = Logger.logObject.getter();
        os_log_type_t v53 = static os_log_type_t.error.getter();
        BOOL v54 = os_log_type_enabled(v52, v53);
        uint64_t v81 = 0;
        if (v54)
        {
          uint64_t v55 = swift_slowAlloc();
          uint64_t v56 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v55 = v79;
          swift_errorRetain();
          uint64_t v57 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v55 + 4) = v57;
          *uint64_t v56 = v57;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v52, v53, "Failed to get airdrop available applications for opening: %@", (uint8_t *)v55, 0xCu);
          sub_10000A844(&qword_10096B850);
          swift_arrayDestroy();
          uint64_t v0 = v82;
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_errorRelease();
        }
        goto LABEL_52;
      }
      uint64_t v41 = v39;
      sub_10000B740(0, &qword_1009710E8);
      unint64_t v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
      id v43 = v40;

      v94[0] = _swiftEmptyArrayStorage;
      if (v42 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
        if (!v44) {
          goto LABEL_50;
        }
LABEL_33:
        if (v44 < 1) {
          goto LABEL_64;
        }
        for (uint64_t j = 0; j != v44; ++j)
        {
          if ((v42 & 0xC000000000000001) != 0) {
            id v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v46 = *(id *)(v42 + 8 * j + 32);
          }
          uint64_t v47 = v46;
          id v48 = [v46 bundleRecord];

          if (v48)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)(((unint64_t)v94[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v94[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v49 = v94[0];
        uint64_t v0 = v82;
        id v11 = v91;
      }
      else
      {
        uint64_t v44 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v44) {
          goto LABEL_33;
        }
LABEL_50:
        swift_bridgeObjectRelease();
        unint64_t v49 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease();
      sub_10045E758((unint64_t)v49);
      swift_bridgeObjectRelease();
      Class v58 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v11 addObjectsFromArray:v58];
    }
LABEL_52:
    id v59 = v92;
    id v60 = [v92 set];
    uint64_t v61 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v62 = *(void *)(v61 + 16);
    swift_bridgeObjectRelease();
    if (v62)
    {
      id v7 = v59;
      id v8 = v91;
      id v9 = [v91 set];
      static Set._unconditionallyBridgeFromObjectiveC(_:)();

      Class v10 = Set._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v7 intersectSet:v10];

      (*v83)(v90, v0);
    }
    else
    {

      (*v83)(v90, v0);
      id v92 = v91;
    }
    uint64_t v3 = v84;
    uint64_t v1 = v85;
    if (++v5 == v89) {
      goto LABEL_54;
    }
  }
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  swift_once();
LABEL_55:
  uint64_t v63 = type metadata accessor for Logger();
  sub_10000B47C(v63, (uint64_t)qword_100970FA8);
  id v64 = v92;
  uint64_t v65 = Logger.logObject.getter();
  os_log_type_t v66 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v65, v66))
  {
    uint64_t v67 = (uint8_t *)swift_slowAlloc();
    uint64_t v93 = swift_slowAlloc();
    *(_DWORD *)uint64_t v67 = 136315138;
    id v68 = [v64 array];
    static Array._unconditionallyBridgeFromObjectiveC(_:)();

    Class v69 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v70 = (id)SFCompactStringFromCollection();

    if (v70)
    {
      unint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v73 = v72;
    }
    else
    {
      v94[0] = 0;
      v94[1] = (id)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v73 = 0x80000001007B7770;
      unint64_t v71 = 0xD000000000000015;
    }
    v94[0] = (id)sub_100254634(v71, v73, &v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v65, v66, "Generic handler found available applications %s", v67, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  swift_beginAccess();
  id v74 = v92;
  id v75 = [v92 array];
  uint64_t v76 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v77 = sub_10045E9BC(v76);
  swift_bridgeObjectRelease();
  return v77;
}

void sub_1003ACB84(void *a1)
{
  uint64_t v2 = sub_10000A844((uint64_t *)&unk_10096AC10);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  unint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  id v8 = (char *)&v39 - v7;
  __chkstk_darwin(v6);
  Class v10 = (char *)&v39 - v9;
  id v11 = self;
  id v12 = [v11 defaultWorkspace];
  if (!v12)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    return;
  }
  id v14 = v12;
  URL._bridgeToObjectiveC()(v13);
  id v16 = v15;
  id v17 = [v14 URLOverrideForURL:v15];

  if (v17)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v18 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 0, 1, v18);
  }
  else
  {
    uint64_t v19 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 1, 1, v19);
  }
  sub_10024D388((uint64_t)v8, (uint64_t)v10, (uint64_t *)&unk_10096AC10);
  id v20 = [v11 defaultWorkspace];
  if (!v20) {
    goto LABEL_26;
  }
  uint64_t v21 = v20;
  sub_1003AFF3C((uint64_t)v10, (uint64_t)v5);
  uint64_t v22 = type metadata accessor for URL();
  uint64_t v23 = *(void *)(v22 - 8);
  id v25 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v5, 1, v22) != 1)
  {
    URL._bridgeToObjectiveC()(v24);
    id v25 = v26;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
  }
  id v27 = [v21 applicationsAvailableForOpeningURL:v25];

  if (!v27) {
    goto LABEL_21;
  }
  sub_10000B740(0, (unint64_t *)&qword_10096B598);
  unint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v28 >> 62))
  {
    if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_11;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v38) {
    goto LABEL_20;
  }
LABEL_11:
  if ((v28 & 0xC000000000000001) == 0)
  {
    if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v29 = *(id *)(v28 + 32);
      goto LABEL_14;
    }
    __break(1u);
    goto LABEL_25;
  }
  id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_14:
  os_log_type_t v30 = v29;
  swift_bridgeObjectRelease();
  id v31 = [v30 correspondingApplicationRecord];

  if (!v31)
  {
LABEL_21:
    sub_10000A7E8((uint64_t)v10, (uint64_t *)&unk_10096AC10);
    return;
  }
  id v32 = [v31 bundleIdentifier];
  if (!v32)
  {

    goto LABEL_21;
  }
  uint64_t v33 = v32;
  uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v36 = v35;

  char v37 = sub_100361924(v34, v36, a1);
  sub_10000A7E8((uint64_t)v10, (uint64_t *)&unk_10096AC10);
  swift_bridgeObjectRelease();
  if ((v37 & 1) == 0) {
}
  }

void sub_1003ACF8C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v52 = a2;
  os_log_type_t v53 = a4;
  uint64_t v50 = a3;
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_10096AC10);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v51 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  Class v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)&v48 - v11;
  uint64_t v13 = type metadata accessor for SFAirDrop.TransferType();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  SFAirDropSend.Request.type.getter();
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v16, v13);
  int v18 = enum case for SFAirDrop.TransferType.links(_:);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v19 = v53;
  if (v17 != v18) {
    goto LABEL_10;
  }
  uint64_t v20 = (uint64_t)v6;
  unint64_t v49 = v10;
  uint64_t v21 = v53;
  uint64_t v22 = v51;
  if (!*(void *)(v52 + 16))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v20, 1, 1, v7);
    goto LABEL_8;
  }
  type metadata accessor for SFSecurityScopedURL();
  SFSecurityScopedURL.url.getter();
  uint64_t v23 = v22;
  uint64_t v24 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56);
  uint64_t v25 = v7;
  v24(v20, 0, 1, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v20, 1, v7) == 1)
  {
LABEL_8:
    sub_10000A7E8(v20, (uint64_t *)&unk_10096AC10);
    goto LABEL_9;
  }
  uint64_t v26 = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v12, v20, v25);
  URL.scheme.getter();
  if (v27)
  {
    String.lowercased()();
    swift_bridgeObjectRelease();
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    char v29 = SFIsCredential();

    os_log_type_t v30 = v49;
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v49, v26, v25);
    if (v29)
    {
      id v32 = *(void (**)(char *, uint64_t))(v23 + 8);
      v32(v30, v25);
    }
    else
    {
      URL._bridgeToObjectiveC()(v31);
      uint64_t v38 = v37;
      int v39 = SFIsPasskeyCredentialLink();

      id v32 = *(void (**)(char *, uint64_t))(v23 + 8);
      v32(v30, v25);
      if (!v39)
      {
LABEL_16:
        v32(v26, v25);
        goto LABEL_9;
      }
    }
    if ((sub_100317418() & 1) == 0)
    {
      URL._bridgeToObjectiveC()(v40);
      unint64_t v42 = v41;
      char v43 = SFIsPasskeyCredentialLink();

      _sSo11SFUserAlertC16DaemoniOSLibraryE015credentialShareB09isPasskeyABSb_tFZ_0(v43);
      unint64_t v45 = v44;
      [v44 present];
      uint64_t v46 = type metadata accessor for SFAirDropSend.Failure();
      sub_1003B0BB8(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v46 - 8) + 104))(v47, enum case for SFAirDropSend.Failure.badRequest(_:), v46);
      swift_willThrow();

      v32(v26, v25);
      return;
    }
    goto LABEL_16;
  }
  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v25);
LABEL_9:
  uint64_t v19 = v21;
LABEL_10:
  if ([v19 carplayConnected])
  {
    _sSo11SFUserAlertC16DaemoniOSLibraryE07carPlayB0AByFZ_0();
    uint64_t v34 = v33;
    [v33 present];
    uint64_t v35 = type metadata accessor for SFAirDropSend.Failure();
    sub_1003B0BB8(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v35 - 8) + 104))(v36, enum case for SFAirDropSend.Failure.badRequest(_:), v35);
    swift_willThrow();
  }
}

uint64_t sub_1003AD57C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (uint64_t *)((char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (id *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100317418();
  sub_10025AE8C(a1, (uint64_t)v7);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1003B0C00((uint64_t)v7, (uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      uint64_t v9 = *v4;
      swift_bridgeObjectRetain();
      sub_1003B0C68((uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      break;
    case 2u:
      uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint;
      goto LABEL_4;
    case 3u:

      uint64_t v9 = 0;
      break;
    default:
      uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
LABEL_4:
      sub_1003B0C68((uint64_t)v7, v8);
      uint64_t v9 = 0;
      break;
  }
  return v9;
}

uint64_t sub_1003AD790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[8] = a5;
  v6[9] = a6;
  v6[6] = a3;
  v6[7] = a4;
  v6[4] = a1;
  v6[5] = a2;
  uint64_t v7 = type metadata accessor for SFSecurityScopedURL();
  v6[10] = v7;
  v6[11] = *(void *)(v7 - 8);
  v6[12] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for URL();
  v6[13] = v8;
  v6[14] = *(void *)(v8 - 8);
  v6[15] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v9 = static AirDropActor.shared;
  return _swift_task_switch(sub_1003AD8EC, v9, 0);
}

uint64_t sub_1003AD8EC()
{
  uint64_t v1 = v0[5];
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2)
  {
LABEL_32:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v44 = (uint64_t (*)(void *))v48[1];
    return v44(v3);
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[11];
  unint64_t v49 = _swiftEmptyArrayStorage;
  sub_10025539C(0, v2, 0);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v5 += 16;
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v5 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 64));
  uint64_t v46 = *(void *)(v5 + 56);
  uint64_t v47 = v6;
  uint64_t v8 = (void (**)(uint64_t, uint64_t))(v5 - 8);
  uint64_t v9 = _swiftEmptyArrayStorage;
  int64_t v45 = v2;
  Class v10 = v0;
  do
  {
    uint64_t v11 = v10[12];
    uint64_t v12 = v10[10];
    v47(v11, v7, v12);
    SFSecurityScopedURL.url.getter();
    (*v8)(v11, v12);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10025539C(0, v9[2] + 1, 1);
      uint64_t v9 = v49;
    }
    unint64_t v14 = v9[2];
    unint64_t v13 = v9[3];
    Class v10 = v48;
    if (v14 >= v13 >> 1)
    {
      sub_10025539C(v13 > 1, v14 + 1, 1);
      Class v10 = v48;
      uint64_t v9 = v49;
    }
    uint64_t v15 = v10[15];
    uint64_t v16 = v10[13];
    v9[2] = v14 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))((unint64_t)v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v14, v15, v16);
    unint64_t v49 = v9;
    v7 += v46;
    --v2;
  }
  while (v2);
  sub_1003ACF8C(v10[4], v10[5], v10[8], (void *)v10[9]);
  uint64_t v17 = v10[7];
  sub_1003AD57C(v10[8]);
  uint64_t v19 = v18;
  unsigned int v21 = v20;
  sub_10045E458((uint64_t)v9);
  swift_release();
  v22.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  if (!v17)
  {
    NSString v23 = 0;
    if (v19) {
      goto LABEL_10;
    }
LABEL_12:
    NSString v24 = 0;
    goto LABEL_13;
  }
  NSString v23 = String._bridgeToObjectiveC()();
  if (!v19) {
    goto LABEL_12;
  }
LABEL_10:
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_13:
  id v25 = [self preprocessItems:v22.super.isa forClientBundleID:v23 receiverIdentifier:v24 receiverSupportsURLs:v21 & 1 receiverIsUnknown:(v21 >> 8) & 1];

  if ([v25 success])
  {
    id v26 = [v25 files];
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      id v29 = [v25 links];
      if (v29)
      {
        os_log_type_t v30 = v29;
        uint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        sub_1003D4BA0(v28);
        v48[2] = v31;
        sub_10000A844((uint64_t *)&unk_10096C8B0);
        sub_1002AE308((unint64_t *)&qword_10096E060, (uint64_t *)&unk_10096C8B0);
        uint64_t v3 = (void *)RandomAccessCollection<>.securityScopedURLs.getter();
        swift_bridgeObjectRelease();
        if (v3[2])
        {
        }
        else
        {
          swift_bridgeObjectRelease();
          if (qword_100969D30 != -1) {
            swift_once();
          }
          uint64_t v40 = type metadata accessor for Logger();
          sub_10000B47C(v40, (uint64_t)qword_100970FA8);
          swift_bridgeObjectRetain();
          uint64_t v41 = Logger.logObject.getter();
          os_log_type_t v42 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v41, v42))
          {
            char v43 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)char v43 = 134217984;
            v0[3] = v45;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v41, v42, "Preprocessing URLs returned no items, although we were given %ld URLs. Falling back to initial URLs", v43, 0xCu);
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease();
          }

          uint64_t v3 = (void *)v48[5];
          swift_bridgeObjectRetain();
        }
        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
    }
  }
  if (qword_100969D30 != -1) {
    swift_once();
  }
  uint64_t v32 = type metadata accessor for Logger();
  sub_10000B47C(v32, (uint64_t)qword_100970FA8);
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Failed to preprocess items", v35, 2u);
    swift_slowDealloc();
  }

  uint64_t v36 = type metadata accessor for SFAirDropSend.Failure();
  sub_1003B0BB8(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v36 - 8) + 104))(v37, enum case for SFAirDropSend.Failure.badRequest(_:), v36);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v38 = (uint64_t (*)(void))v48[1];
  return v38();
}

uint64_t sub_1003ADFD4(uint64_t a1)
{
  v1[11] = a1;
  uint64_t v2 = type metadata accessor for URLQueryItem();
  v1[12] = v2;
  v1[13] = *(void *)(v2 - 8);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URLComponents();
  v1[16] = v3;
  v1[17] = *(void *)(v3 - 8);
  v1[18] = swift_task_alloc();
  uint64_t v4 = sub_10000A844(&qword_10096CC68);
  v1[19] = v4;
  v1[20] = *(void *)(v4 - 8);
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v1[28] = v5;
  v1[29] = *(void *)(v5 - 8);
  v1[30] = swift_task_alloc();
  v1[31] = swift_task_alloc();
  v1[32] = swift_task_alloc();
  v1[33] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v1[34] = static AirDropActor.shared;
  return _swift_task_switch(sub_1003AE294, v6, 0);
}

uint64_t sub_1003AE294()
{
  if (qword_100969D30 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_100970FA8);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Opening files with Files App for transfer", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[11];

  int64_t v6 = *(void *)(v5 + 16);
  if (!v6)
  {
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "No items to open with Files App", v50, 2u);
      swift_slowDealloc();
    }

    goto LABEL_28;
  }
  if (v6 != 1) {
    goto LABEL_9;
  }
  uint64_t v7 = v0[28];
  uint64_t v8 = v0[29];
  uint64_t v9 = v0[27];
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v11(v9, v0[11] + ((v10 + 32) & ~v10), v7);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v9, 0, 1, v7);
  uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v12(v9, 1, v7) == 1)
  {
    sub_10000A7E8(v0[27], (uint64_t *)&unk_10096AC10);
LABEL_9:
    uint64_t v13 = v0[29];
    uint64_t v14 = v0[11];
    URLComponents.init()();
    URLComponents.scheme.setter();
    URLQueryItem.init(name:value:)();
    sub_100255510(0, v6, 0);
    uint64_t v15 = *(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 16);
    v13 += 16;
    uint64_t v85 = v15;
    unint64_t v76 = (*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64);
    uint64_t v16 = v14 + v76;
    uint64_t v84 = *(void *)(v13 + 56);
    uint64_t v17 = (void (**)(unint64_t, uint64_t))(v13 - 8);
    uint64_t v83 = v0;
    do
    {
      unint64_t v18 = v0[30];
      uint64_t v19 = v0[28];
      v85(v18, v16, v19);
      uint64_t v20 = URL.lastPathComponent.getter();
      uint64_t v22 = v21;
      NSString v23 = *v17;
      v0[37] = *v17;
      v0[38] = (unint64_t)v17 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v23(v18, v19);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_100255510(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v25 = _swiftEmptyArrayStorage[2];
      unint64_t v24 = _swiftEmptyArrayStorage[3];
      if (v25 >= v24 >> 1) {
        sub_100255510(v24 > 1, v25 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v25 + 1;
      id v26 = &_swiftEmptyArrayStorage[2 * v25];
      v26[4] = v20;
      v26[5] = v22;
      uint64_t v0 = v83;
      v16 += v84;
      --v6;
    }
    while (v6);
    uint64_t v27 = v83[29];
    uint64_t v81 = v83[28];
    uint64_t v78 = v83[24];
    uint64_t v79 = v83[23];
    uint64_t v28 = v83[14];
    uint64_t v77 = v83[15];
    uint64_t v29 = v83[12];
    uint64_t v30 = v83[13];
    v83[8] = _swiftEmptyArrayStorage;
    sub_10000A844((uint64_t *)&unk_100974C30);
    sub_1002AE308((unint64_t *)&qword_10096CE90, (uint64_t *)&unk_100974C30);
    BidirectionalCollection<>.joined(separator:)();
    swift_release();
    URLQueryItem.init(name:value:)();
    swift_bridgeObjectRelease();
    sub_10000A844(&qword_10096FF00);
    uint64_t v31 = *(void *)(v30 + 72);
    unint64_t v32 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_100770AD0;
    unint64_t v34 = v33 + v32;
    uint64_t v35 = *(void (**)(unint64_t, uint64_t, uint64_t))(v30 + 16);
    v35(v34, v77, v29);
    v35(v34 + v31, v28, v29);
    URLComponents.queryItems.setter();
    URLComponents.url.getter();
    sub_1003AFF3C(v78, v79);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v79, 1, v81) == 1)
    {
      sub_10000A7E8(v83[23], (uint64_t *)&unk_10096AC10);
      uint64_t v36 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.error.getter();
      BOOL v38 = os_log_type_enabled(v36, v37);
      uint64_t v39 = v83[24];
      uint64_t v40 = v83[17];
      uint64_t v41 = v83[18];
      uint64_t v42 = v83[15];
      uint64_t v87 = v83[16];
      uint64_t v43 = v83[13];
      uint64_t v44 = v83[14];
      uint64_t v45 = v83[12];
      if (v38)
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v46 = 0;
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "Could not create Files launch URL", v46, 2u);
        uint64_t v0 = v83;
        swift_slowDealloc();

        sub_10000A7E8(v39, (uint64_t *)&unk_10096AC10);
        uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
        v47(v44, v45);
        v47(v42, v45);
      }
      else
      {

        sub_10000A7E8(v39, (uint64_t *)&unk_10096AC10);
        id v68 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
        v68(v44, v45);
        v68(v42, v45);
      }
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v87);
LABEL_28:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      Class v69 = (uint64_t (*)(void))v0[1];
      return v69(0);
    }
    uint64_t v51 = v83[31];
    uint64_t v52 = v83[28];
    (*(void (**)(uint64_t, void, uint64_t))(v83[29] + 32))(v51, v83[23], v52);
    sub_10000A844(&qword_10096B358);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_10076E7A0;
    v85(v53 + v76, v51, v52);
    v83[9] = 0;
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = v53;
    *(void *)(v54 + 24) = 0;
    SFProgressTask.init(_:initialProgress:operation:file:line:)();
    uint64_t v55 = (void *)swift_task_alloc();
    v83[39] = v55;
    *uint64_t v55 = v83;
    v55[1] = sub_1003AF16C;
    uint64_t v56 = v83[19];
    uint64_t v57 = v83 + 41;
    goto LABEL_32;
  }
  uint64_t v82 = v11;
  uint64_t v58 = v0[26];
  uint64_t v86 = v0[25];
  uint64_t v88 = v0[28];
  uint64_t v80 = *(void (**)(uint64_t, void, uint64_t))(v0[29] + 32);
  ((void (*)(void, void))v80)(v0[33], v0[27]);
  v0[6] = URL.absoluteString.getter();
  v0[7] = v59;
  v0[2] = 0x2F2F3A656C6966;
  v0[3] = 0xE700000000000000;
  v0[4] = 0xD000000000000012;
  v0[5] = 0x80000001007BB2E0;
  sub_10024A1FC();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  URL.init(string:)();
  swift_bridgeObjectRelease();
  sub_1003AFF3C(v58, v86);
  if (v12(v86, 1, v88) == 1)
  {
    sub_10000A7E8(v0[25], (uint64_t *)&unk_10096AC10);
    id v60 = Logger.logObject.getter();
    os_log_type_t v61 = static os_log_type_t.error.getter();
    BOOL v62 = os_log_type_enabled(v60, v61);
    uint64_t v63 = v0[33];
    uint64_t v64 = v0[28];
    uint64_t v65 = v0[29];
    uint64_t v66 = v0[26];
    if (v62)
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v67 = 0;
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "Could not create Files launch URL", v67, 2u);
      swift_slowDealloc();
    }

    sub_10000A7E8(v66, (uint64_t *)&unk_10096AC10);
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v63, v64);
    goto LABEL_28;
  }
  uint64_t v71 = v0[32];
  uint64_t v72 = v0[28];
  v80(v71, v0[25], v72);
  sub_10000A844(&qword_10096B358);
  uint64_t v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = xmmword_10076E7A0;
  v82(v73 + ((v10 + 32) & ~v10), v71, v72);
  v0[10] = 0;
  uint64_t v74 = swift_allocObject();
  *(void *)(v74 + 16) = v73;
  *(void *)(v74 + 24) = 0;
  SFProgressTask.init(_:initialProgress:operation:file:line:)();
  id v75 = (void *)swift_task_alloc();
  v0[35] = v75;
  *id v75 = v0;
  v75[1] = sub_1003AEE80;
  uint64_t v56 = v0[19];
  uint64_t v57 = (void *)((char *)v0 + 329);
LABEL_32:
  return SFProgressTask.finalValue.getter(v57, v56);
}

uint64_t sub_1003AEE80()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 176);
  uint64_t v4 = *(void *)(*v1 + 160);
  uint64_t v5 = *(void *)(*v1 + 152);
  *(void *)(*v1 + 288) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 272);
  if (v0) {
    uint64_t v7 = sub_1003AF48C;
  }
  else {
    uint64_t v7 = sub_1003AF008;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1003AF008()
{
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 232) + 8);
  v4(*(void *)(v0 + 256), v2);
  sub_10000A7E8(v3, (uint64_t *)&unk_10096AC10);
  v4(v1, v2);
  unsigned int v7 = *(unsigned __int8 *)(v0 + 329);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5(v7);
}

uint64_t sub_1003AF16C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 168);
  uint64_t v4 = *(void *)(*v1 + 160);
  uint64_t v5 = *(void *)(*v1 + 152);
  *(void *)(*v1 + 320) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 272);
  if (v0) {
    unsigned int v7 = sub_1003AF5F0;
  }
  else {
    unsigned int v7 = sub_1003AF2F4;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1003AF2F4()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v8 = *(void *)(v0 + 96);
  (*(void (**)(void, void))(v0 + 296))(*(void *)(v0 + 248), *(void *)(v0 + 224));
  sub_10000A7E8(v1, (uint64_t *)&unk_10096AC10);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v9(v6, v8);
  v9(v5, v8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  unsigned int v12 = *(unsigned __int8 *)(v0 + 328);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10(v12);
}

uint64_t sub_1003AF48C()
{
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[28];
  uint64_t v3 = v0[26];
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v0[29] + 8);
  v4(v0[32], v2);
  sub_10000A7E8(v3, (uint64_t *)&unk_10096AC10);
  v4(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5(0);
}

uint64_t sub_1003AF5F0()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v8 = *(void *)(v0 + 96);
  (*(void (**)(void, void))(v0 + 296))(*(void *)(v0 + 248), *(void *)(v0 + 224));
  sub_10000A7E8(v1, (uint64_t *)&unk_10096AC10);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v9(v6, v8);
  v9(v5, v8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10(0);
}

uint64_t sub_1003AF788()
{
  URL.scheme.getter();
  if (!v0) {
    return 0;
  }
  Swift::String v1 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v1._countAndFlagsBits == 0x6D656D6563696F76 && v1._object == (void *)0xEA0000000000736FLL
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || v1._countAndFlagsBits == 0x736F746F6870 && v1._object == (void *)0xE600000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || v1._countAndFlagsBits == 0xD000000000000010 && v1._object == (void *)0x80000001007BB280
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || v1._countAndFlagsBits == 0x786F62656F6873 && v1._object == (void *)0xE700000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || v1._countAndFlagsBits == 0x736B636F7473 && v1._object == (void *)0xE600000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || v1._countAndFlagsBits == 0x6870656C69626F6DLL && v1._object == (void *)0xEB00000000656E6FLL
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || v1._countAndFlagsBits == 0x746361746E6F63 && v1._object == (void *)0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    return v3 & 1;
  }
}

uint64_t sub_1003AFA44(uint64_t a1, double a2)
{
  uint64_t v4 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = type metadata accessor for SFPlatform();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = a2 < 8.0;
  static SFPlatform.macOS.getter();
  char v16 = static SFPlatform.isPlatform(_:)();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, a1, v4);
    if (a2 >= 8.0)
    {
      (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for SFAirDropReceive.ItemDestination.default(_:), v4);
      sub_1003B0BB8(&qword_10096CCB0, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
      char v17 = dispatch thunk of static Equatable.== infix(_:_:)();
      unint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
      v18(v8, v4);
      v18(v10, v4);
      char v15 = v17 ^ 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      char v15 = 1;
    }
  }
  return v15 & 1;
}

uint64_t sub_1003AFCD4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003AFD14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(v3 + 16);
  char v9 = *(unsigned char *)(v3 + 24);
  uint64_t v10 = *(void *)(v3 + 32);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v11;
  *uint64_t v11 = v4;
  v11[1] = sub_10000A6F4;
  return sub_1003A2DE0(a1, a2, a3, v8, v9, v10);
}

void sub_1003AFDE4(uint64_t a1)
{
  sub_1003A56BC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1003AFDEC()
{
  uint64_t v1 = sub_10000A844(&qword_1009710A8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003AFEBC()
{
  sub_10000A844(&qword_1009710A8);
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);

  return sub_1003A63F0(v1, v2);
}

uint64_t sub_1003AFF24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003AFF34()
{
  return swift_release();
}

uint64_t sub_1003AFF3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_10096AC10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003AFFA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_10000A6F0;
  return sub_1003A428C(a1, a2, a3, v9, v8);
}

uint64_t sub_1003B0070()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003B00B0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1003B00E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(v3 + 16);
  char v9 = *(unsigned char *)(v3 + 24);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_10000A6F0;
  return sub_1003A19A0(a1, a2, a3, v8, v9);
}

uint64_t sub_1003B01B0()
{
  uint64_t v1 = *(void *)(sub_10000A844((uint64_t *)&unk_10096AC10) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1003B02EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(sub_10000A844((uint64_t *)&unk_10096AC10) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v3 + v9;
  uint64_t v11 = *(void *)(v3 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v12;
  *uint64_t v12 = v4;
  v12[1] = sub_10000A6F0;
  return sub_1003A3418(a1, a2, a3, v10, v11);
}

uint64_t sub_1003B0418(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_10000A6F0;
  return sub_1003A8558(a1, a2, v6, v7, v8, v9, v10);
}

id sub_1003B04F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (id *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10025AE8C(a1, (uint64_t)v7);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1003B0C00((uint64_t)v7, (uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      id v9 = sub_1004ED5F0();
      sub_1003B0C68((uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      return v9;
    case 2u:
      uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint;
      goto LABEL_4;
    case 3u:

      return 0;
    default:
      uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
LABEL_4:
      sub_1003B0C68((uint64_t)v7, v8);
      return 0;
  }
}

void sub_1003B06F0(uint64_t a1)
{
  sub_1003A8D68(a1, *(id *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(unsigned __int8 *)(v1 + 57), *(unsigned char *)(v1 + 58), *(void *)(v1 + 64));
}

uint64_t sub_1003B0734()
{
  uint64_t v1 = *(void *)(type metadata accessor for SDAirDropDiscoveredEndpoint(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_10000A844(&qword_100971110);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v10 = type metadata accessor for NWEndpoint();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v0 + v3, v10);
      break;
    case 1u:
      swift_bridgeObjectRelease();
      uint64_t v15 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
      uint64_t v26 = v8;
      uint64_t v16 = v4;
      uint64_t v17 = v9 + *(int *)(v15 + 20);
      uint64_t v18 = type metadata accessor for NWEndpoint();
      uint64_t v19 = v17;
      uint64_t v4 = v16;
      uint64_t v8 = v26;
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v19, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v20 = (uint64_t *)(v9 + *(int *)(v15 + 56));
      unint64_t v21 = v20[1];
      if (v21 >> 60 != 15) {
        sub_100250CC4(*v20, v21);
      }
      break;
    case 2u:
      sub_100250CC4(*(void *)v9, *(void *)(v9 + 8));
      uint64_t v25 = v8;
      uint64_t v11 = v4;
      uint64_t v12 = v9 + *(int *)(type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0) + 20);
      uint64_t v13 = type metadata accessor for UUID();
      uint64_t v14 = v12;
      uint64_t v4 = v11;
      uint64_t v8 = v25;
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v14, v13);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 3u:

      break;
    default:
      break;
  }
  uint64_t v22 = (v3 + v4 + v7) & ~v7;
  unint64_t v23 = (((v8 + v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v22, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v23 + 8, v2 | v7 | 7);
}

uint64_t sub_1003B0A98(unint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for SDAirDropDiscoveredEndpoint(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_10000A844(&qword_100971110) - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void **)(v2 + v10);
  uint64_t v12 = *(void *)(v2 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_1003A930C(a1, a2, v2 + v6, v2 + v9, v11, v12);
}

uint64_t sub_1003B0BB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003B0C00(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003B0C68(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for SDAirDropMediaConversionResults()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s16DaemoniOSLibrary31SDAirDropMediaConversionResultsVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SDAirDropMediaConversionResults(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SDAirDropMediaConversionResults(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SDAirDropMediaConversionResults(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDAirDropMediaConversionResults(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropMediaConversionResults()
{
  return &type metadata for SDAirDropMediaConversionResults;
}

uint64_t sub_1003B0EC8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100971128);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100971128);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1003B0F90(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  uint64_t v3 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropReceive.AskRequest();
  v2[11] = v4;
  v2[12] = *(void *)(v4 - 8);
  v2[13] = swift_task_alloc();
  uint64_t v5 = sub_10000A844(&qword_100971228);
  v2[14] = v5;
  v2[15] = *(void *)(v5 - 8);
  v2[16] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferType();
  v2[17] = v6;
  v2[18] = *(void *)(v6 - 8);
  v2[19] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  v2[20] = static AirDropActor.shared;
  return _swift_task_switch(sub_1003B11A4, v7, 0);
}

uint64_t sub_1003B11A4()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  SFAirDropReceive.AskRequest.type.getter();
  char v4 = SFAirDrop.TransferType.isLinks.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v4)
  {
    uint64_t v5 = SFAirDropReceive.AskRequest.urlItems.getter();
    uint64_t v6 = sub_100254AAC(v5);
    swift_bridgeObjectRelease();
    v0[2] = 0;
    *(void *)(swift_allocObject() + 16) = v6;
    sub_10000A844(&qword_100971240);
    SFProgressTask.init(_:initialProgress:operation:file:line:)();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[21] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1003B13B4;
    uint64_t v8 = v0[14];
    return SFProgressTask.finalValue.getter(v0 + 3, v8);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9(0);
  }
}

uint64_t sub_1003B13B4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 128);
  uint64_t v4 = *(void *)(*v1 + 120);
  uint64_t v5 = *(void *)(*v1 + 112);
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 160);
  if (v0) {
    uint64_t v7 = sub_1003B15F0;
  }
  else {
    uint64_t v7 = sub_1003B153C;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1003B153C()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = v0[3];

  BOOL v3 = *(void *)(v0[7] + 16) != 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(BOOL))v0[1];
  return v4(v3);
}

uint64_t sub_1003B15F0()
{
  uint64_t v29 = v0;
  if (qword_100969D40 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v4 = v0[11];
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000B47C(v5, (uint64_t)qword_100971128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v10 = v0[12];
  uint64_t v9 = v0[13];
  uint64_t v11 = v0[11];
  if (v8)
  {
    os_log_type_t type = v7;
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[10];
    uint64_t v14 = v0[8];
    uint64_t v24 = v0[11];
    uint64_t v15 = swift_slowAlloc();
    uint64_t v26 = (void *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    log = v6;
    SFAirDropReceive.AskRequest.id.getter();
    sub_1003B3F24(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v23 = v9;
    unint64_t v18 = v17;
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v14);
    v0[4] = sub_100254634(v16, v18, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v23, v24);
    *(_WORD *)(v15 + 12) = 2112;
    swift_errorRetain();
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    v0[5] = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v26 = v19;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, type, "Failed to get handling app for ask request %s: %@", (uint8_t *)v15, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    swift_errorRelease();
    swift_errorRelease();
  }
  BOOL v20 = *(void *)(v0[7] + 16) != 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v21 = (uint64_t (*)(BOOL))v0[1];
  return v21(v20);
}

void sub_1003B19A8(uint64_t a1, char a2)
{
  unint64_t v4 = *(void *)(SFAirDropReceive.AskRequest.urlItems.getter() + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(v2 + 16);
  if (v5)
  {
    id v6 = [v5 localizedName];
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    unint64_t v9 = 0xE000000000000000;
  }
  sub_10000A844(&qword_10096D760);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
  strcpy((char *)(inited + 32), "GENERIC_LINK");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(void *)(inited + 48) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11._countAndFlagsBits = 95;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 0x5F434952454E4547;
  v12._object = (void *)0xEC0000004B4E494CLL;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  if (v4 > 1)
  {
    v13._countAndFlagsBits = 0x4C4152554C505FLL;
    v13._object = (void *)0xE700000000000000;
    String.append(_:)(v13);
  }
  swift_bridgeObjectRelease();
  if (a2)
  {
    v14._countAndFlagsBits = 0x4C4154495041435FLL;
    v14._object = (void *)0xEC00000044455A49;
    String.append(_:)(v14);
  }
  v15._countAndFlagsBits = 0x545845545FLL;
  v15._object = (void *)0xE500000000000000;
  String.append(_:)(v15);
  swift_setDeallocating();
  sub_10000A844((uint64_t *)&unk_100977CB0);
  swift_arrayDestroy();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v17 = (id)SFLocalizedStringForKey();

  if (v17)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_100770AD0;
    *(void *)(v18 + 56) = &type metadata for Int;
    *(void *)(v18 + 64) = &protocol witness table for Int;
    *(void *)(v18 + 32) = v4;
    *(void *)(v18 + 96) = &type metadata for String;
    *(void *)(v18 + 104) = sub_1002E695C();
    *(void *)(v18 + 72) = v7;
    *(void *)(v18 + 80) = v9;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003B1C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[18] = a3;
  v4[19] = a4;
  v4[16] = a1;
  v4[17] = a2;
  uint64_t v5 = sub_10000A844(&qword_1009700B0);
  v4[20] = v5;
  v4[21] = *(void *)(v5 - 8);
  v4[22] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URL();
  v4[27] = v6;
  v4[28] = *(void *)(v6 - 8);
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  sub_10000A844(&qword_1009700B8);
  v4[32] = swift_task_alloc();
  v4[33] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  v4[34] = static AirDropActor.shared;
  return _swift_task_switch(sub_1003B1E84, v7, 0);
}

uint64_t sub_1003B1E84()
{
  uint64_t v83 = v0;
  unint64_t v1 = *(void *)(v0[19] + 16);
  v0[35] = v1;
  swift_bridgeObjectRetain();
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  unint64_t v4 = 0;
  while (1)
  {
    v0[36] = v2;
    if (v4 == v1)
    {
      uint64_t v81 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[28] + 56);
      v81(v0[26], 1, 1, v0[27]);
      unint64_t v5 = v0[35];
LABEL_6:
      uint64_t v9 = v0[32];
      uint64_t v11 = v0[20];
      uint64_t v10 = v0[21];
      sub_10000A7E8(v0[26], (uint64_t *)&unk_10096AC10);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v9, 1, 1, v11);
      goto LABEL_9;
    }
    if (v4 >= v1) {
      goto LABEL_46;
    }
    uint64_t v7 = v0[27];
    uint64_t v6 = v0[28];
    uint64_t v8 = v0[26];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 16))(v8, v0[19]+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v4, v7);
    unint64_t v5 = v4 + 1;
    uint64_t v81 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v81(v8, 0, 1, v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v7) == 1) {
      goto LABEL_6;
    }
    uint64_t v12 = v0[31];
    uint64_t v13 = v0[27];
    uint64_t v14 = v0[22];
    uint64_t v15 = v0[20];
    NSString v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[28] + 32);
    v16(v12, v0[26], v13);
    uint64_t v17 = v14 + *(int *)(v15 + 48);
    v16(v17, v12, v13);
    if (__OFADD__(v3, 1)) {
      goto LABEL_47;
    }
    uint64_t v18 = (void *)v0[32];
    uint64_t v19 = v0[27];
    uint64_t v80 = v2;
    uint64_t v21 = v0[20];
    uint64_t v20 = v0[21];
    uint64_t v22 = (char *)v18 + *(int *)(v21 + 48);
    *uint64_t v18 = v3;
    v16((uint64_t)v22, v17, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v21);
    uint64_t v2 = v80;
    ++v3;
LABEL_9:
    v0[37] = v3;
    v0[38] = v5;
    uint64_t v23 = v0[33];
    uint64_t v25 = v0[20];
    uint64_t v24 = v0[21];
    sub_10024D388(v0[32], v23, &qword_1009700B8);
    int v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v23, 1, v25);
    uint64_t v27 = (char *)v0[33];
    if (v26 == 1) {
      break;
    }
    uint64_t v28 = v0[30];
    uint64_t v29 = v0[27];
    uint64_t v30 = v0[28];
    uint64_t v31 = v0[20];
    v0[39] = *(void *)v27;
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v28, &v27[*(int *)(v31 + 48)], v29);
    URL.scheme.getter();
    if (v32)
    {
      Swift::String v33 = String.lowercased()();
      swift_bridgeObjectRelease();
      if (v33._countAndFlagsBits == 1886680168 && v33._object == (void *)0xE400000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
        || v33._countAndFlagsBits == 0x7370747468 && v33._object == (void *)0xE500000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_41:
        uint64_t v74 = self;
        URL._bridgeToObjectiveC()(v75);
        uint64_t v77 = v76;
        v0[40] = v76;
        v0[2] = v0;
        v0[7] = v0 + 15;
        v0[3] = sub_1003B2690;
        uint64_t v78 = swift_continuation_init();
        v0[10] = _NSConcreteStackBlock;
        v0[11] = 0x40000000;
        v0[12] = sub_1003B3B2C;
        v0[13] = &unk_1008D8528;
        v0[14] = v78;
        [v74 getAppLinksWithURL:v77 completionHandler:v0 + 10];
        uint64_t v79 = v0 + 2;
        return _swift_continuation_await(v79);
      }
      char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v34) {
        goto LABEL_41;
      }
    }
    uint64_t v35 = self;
    id v36 = [v35 defaultWorkspace];
    if (!v36) {
      goto LABEL_48;
    }
    BOOL v38 = v36;
    URL._bridgeToObjectiveC()(v37);
    uint64_t v40 = v39;
    id v41 = [v38 URLOverrideForURL:v39];

    if (v41)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v42 = 0;
    }
    else
    {
      uint64_t v42 = 1;
    }
    uint64_t v44 = v0[24];
    uint64_t v43 = v0[25];
    v81(v44, v42, 1, v0[27]);
    sub_10024D388(v44, v43, (uint64_t *)&unk_10096AC10);
    id v45 = [v35 defaultWorkspace];
    if (!v45) {
      goto LABEL_49;
    }
    uint64_t v46 = v45;
    uint64_t v48 = v0[27];
    uint64_t v47 = v0[28];
    uint64_t v49 = v0[23];
    sub_1003AFF3C(v0[25], v49);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v49, 1, v48) == 1)
    {
      uint64_t v51 = 0;
    }
    else
    {
      uint64_t v53 = v0[27];
      uint64_t v52 = v0[28];
      uint64_t v54 = v0[23];
      URL._bridgeToObjectiveC()(v50);
      uint64_t v51 = v55;
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v54, v53);
    }
    id v56 = [v46 applicationsAvailableForOpeningURL:v51];

    if (!v56) {
      goto LABEL_50;
    }
    sub_10000B740(0, (unint64_t *)&qword_10096B598);
    unint64_t v57 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v57 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v62 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v62)
      {
LABEL_33:
        uint64_t v63 = v0[25];
        swift_bridgeObjectRelease();
        sub_10000A7E8(v63, (uint64_t *)&unk_10096AC10);

        uint64_t v2 = 0;
        goto LABEL_34;
      }
    }
    else if (!*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_33;
    }
    if ((v57 & 0xC000000000000001) != 0)
    {
      id v58 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_45;
      }
      id v58 = *(id *)(v57 + 32);
    }
    uint64_t v59 = v58;
    uint64_t v60 = v0[25];
    swift_bridgeObjectRelease();
    id v61 = [v59 correspondingApplicationRecord];

    sub_10000A7E8(v60, (uint64_t *)&unk_10096AC10);
    uint64_t v2 = v61;
LABEL_34:
    uint64_t v64 = v0[39];
    BOOL v65 = __OFADD__(v64, 1);
    uint64_t v66 = v64 + 1;
    if (v65)
    {
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:

      __break(1u);
LABEL_49:

      __break(1u);
LABEL_50:

      __break(1u);
      return _swift_continuation_await(v79);
    }
    uint64_t v67 = v0[30];
    uint64_t v69 = v0[27];
    uint64_t v68 = v0[28];
    id v70 = (void (*)(double *))v0[17];
    double v82 = (double)v66 / (double)(v0[35] + 1);
    v70(&v82);
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
    uint64_t v3 = v0[37];
    unint64_t v4 = v0[38];
    unint64_t v1 = v0[35];
  }
  uint64_t v71 = (void *)v0[16];
  swift_bridgeObjectRelease();
  void *v71 = v2;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v72 = (uint64_t (*)(void))v0[1];
  return v72();
}

uint64_t sub_1003B2690()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 328) = v2;
  uint64_t v3 = *(void *)(v1 + 272);
  if (v2) {
    unint64_t v4 = sub_1003B3080;
  }
  else {
    unint64_t v4 = sub_1003B27B0;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1003B27B0()
{
  uint64_t v91 = v0;
  unint64_t v2 = *(void *)(v0 + 120);

  if (!(v2 >> 62))
  {
    uint64_t v87 = v0 + 120;
    if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t v7 = *(void **)(v0 + 288);
    swift_bridgeObjectRelease();

    id v1 = 0;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v87 = v0 + 120;
  if (!v6) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0) {
    goto LABEL_57;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    for (id i = *(id *)(v2 + 32); ; id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
    {
      unint64_t v4 = i;
      unint64_t v5 = *(void **)(v0 + 288);
      swift_bridgeObjectRelease();
      id v1 = [v4 targetApplicationRecord];

LABEL_9:
      uint64_t v8 = *(void *)(v0 + 312);
      BOOL v9 = __OFADD__(v8, 1);
      uint64_t v10 = v8 + 1;
      if (!v9) {
        break;
      }
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      ;
    }
    while (1)
    {
      uint64_t v13 = *(void *)(v0 + 240);
      uint64_t v15 = *(void *)(v0 + 216);
      uint64_t v14 = *(void *)(v0 + 224);
      NSString v16 = *(void (**)(double *))(v0 + 136);
      double v90 = (double)v10 / (double)(*(void *)(v0 + 280) + 1);
      v16(&v90);
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
      uint64_t v17 = *(void *)(v0 + 296);
      unint64_t v18 = *(void *)(v0 + 304);
      *(void *)(v0 + 288) = v1;
      unint64_t v19 = *(void *)(v0 + 280);
      if (v18 == v19) {
        break;
      }
      if (v18 >= v19) {
        goto LABEL_55;
      }
      uint64_t v21 = *(void *)(v0 + 216);
      uint64_t v22 = *(void *)(v0 + 224);
      uint64_t v23 = *(void *)(v0 + 208);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v22 + 16))(v23, *(void *)(v0 + 152)+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v18, v21);
      unint64_t v20 = v18 + 1;
      uint64_t v89 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
      v89(v23, 0, 1, v21);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v23, 1, v21) == 1) {
        goto LABEL_17;
      }
      uint64_t v27 = *(void *)(v0 + 248);
      uint64_t v28 = *(void *)(v0 + 216);
      uint64_t v29 = *(void *)(v0 + 176);
      uint64_t v30 = *(void *)(v0 + 160);
      uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 224) + 32);
      v31(v27, *(void *)(v0 + 208), v28);
      uint64_t v32 = v29 + *(int *)(v30 + 48);
      v31(v32, v27, v28);
      if (__OFADD__(v17, 1)) {
        goto LABEL_56;
      }
      Swift::String v33 = *(void **)(v0 + 256);
      uint64_t v34 = *(void *)(v0 + 216);
      id v88 = v1;
      uint64_t v36 = *(void *)(v0 + 160);
      uint64_t v35 = *(void *)(v0 + 168);
      os_log_type_t v37 = (char *)v33 + *(int *)(v36 + 48);
      *Swift::String v33 = v17;
      v31((uint64_t)v37, v32, v34);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v33, 0, 1, v36);
      id v1 = v88;
      ++v17;
LABEL_20:
      *(void *)(v0 + 296) = v17;
      *(void *)(v0 + 304) = v20;
      uint64_t v38 = *(void *)(v0 + 264);
      uint64_t v40 = *(void *)(v0 + 160);
      uint64_t v39 = *(void *)(v0 + 168);
      sub_10024D388(*(void *)(v0 + 256), v38, &qword_1009700B8);
      int v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v38, 1, v40);
      uint64_t v42 = *(char **)(v0 + 264);
      if (v41 == 1)
      {
        uint64_t v78 = *(void **)(v0 + 128);
        swift_bridgeObjectRelease();
        *uint64_t v78 = v1;
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v79 = *(uint64_t (**)(void))(v0 + 8);
        return v79();
      }
      uint64_t v43 = *(void *)(v0 + 240);
      uint64_t v44 = *(void *)(v0 + 216);
      uint64_t v45 = *(void *)(v0 + 224);
      uint64_t v46 = *(void *)(v0 + 160);
      *(void *)(v0 + 312) = *(void *)v42;
      (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v43, &v42[*(int *)(v46 + 48)], v44);
      URL.scheme.getter();
      if (v47)
      {
        Swift::String v48 = String.lowercased()();
        swift_bridgeObjectRelease();
        if (v48._countAndFlagsBits == 1886680168 && v48._object == (void *)0xE400000000000000
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
          || v48._countAndFlagsBits == 0x7370747468 && v48._object == (void *)0xE500000000000000)
        {
          swift_bridgeObjectRelease();
LABEL_50:
          uint64_t v81 = self;
          URL._bridgeToObjectiveC()(v82);
          uint64_t v84 = v83;
          *(void *)(v0 + 320) = v83;
          *(void *)(v0 + 16) = v0;
          *(void *)(v0 + 56) = v87;
          *(void *)(v0 + 24) = sub_1003B2690;
          uint64_t v85 = swift_continuation_init();
          *(void *)(v0 + 80) = _NSConcreteStackBlock;
          *(void *)(v0 + 88) = 0x40000000;
          *(void *)(v0 + 96) = sub_1003B3B2C;
          *(void *)(v0 + 104) = &unk_1008D8528;
          *(void *)(v0 + 112) = v85;
          [v81 getAppLinksWithURL:v84 completionHandler:v0 + 80];
          uint64_t v86 = v0 + 16;
          return _swift_continuation_await(v86);
        }
        char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v49) {
          goto LABEL_50;
        }
      }
      uint64_t v50 = self;
      id v51 = [v50 defaultWorkspace];
      if (!v51) {
        goto LABEL_59;
      }
      uint64_t v53 = v51;
      URL._bridgeToObjectiveC()(v52);
      uint64_t v55 = v54;
      id v56 = [v53 URLOverrideForURL:v54];

      if (v56)
      {
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v57 = 0;
      }
      else
      {
        uint64_t v57 = 1;
      }
      uint64_t v59 = *(void *)(v0 + 192);
      uint64_t v58 = *(void *)(v0 + 200);
      v89(v59, v57, 1, *(void *)(v0 + 216));
      sub_10024D388(v59, v58, (uint64_t *)&unk_10096AC10);
      id v60 = [v50 defaultWorkspace];
      if (!v60) {
        goto LABEL_60;
      }
      id v61 = v60;
      uint64_t v63 = *(void *)(v0 + 216);
      uint64_t v62 = *(void *)(v0 + 224);
      uint64_t v64 = *(void *)(v0 + 184);
      sub_1003AFF3C(*(void *)(v0 + 200), v64);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v64, 1, v63) == 1)
      {
        uint64_t v66 = 0;
      }
      else
      {
        uint64_t v68 = *(void *)(v0 + 216);
        uint64_t v67 = *(void *)(v0 + 224);
        uint64_t v69 = *(void *)(v0 + 184);
        URL._bridgeToObjectiveC()(v65);
        uint64_t v66 = v70;
        (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v69, v68);
      }
      id v71 = [v61 applicationsAvailableForOpeningURL:v66];

      if (!v71) {
        goto LABEL_61;
      }
      sub_10000B740(0, (unint64_t *)&qword_10096B598);
      unint64_t v72 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v72 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v77 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v77)
        {
LABEL_11:
          uint64_t v11 = *(void *)(v0 + 200);
          swift_bridgeObjectRelease();
          sub_10000A7E8(v11, (uint64_t *)&unk_10096AC10);

          id v1 = 0;
          goto LABEL_12;
        }
      }
      else if (!*(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_11;
      }
      if ((v72 & 0xC000000000000001) != 0)
      {
        id v73 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_54;
        }
        id v73 = *(id *)(v72 + 32);
      }
      uint64_t v74 = v73;
      uint64_t v75 = *(void *)(v0 + 200);
      swift_bridgeObjectRelease();
      id v76 = [v74 correspondingApplicationRecord];

      sub_10000A7E8(v75, (uint64_t *)&unk_10096AC10);
      id v1 = v76;
LABEL_12:
      uint64_t v12 = *(void *)(v0 + 312);
      BOOL v9 = __OFADD__(v12, 1);
      uint64_t v10 = v12 + 1;
      if (v9) {
        goto LABEL_53;
      }
    }
    uint64_t v89 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 224) + 56);
    v89(*(void *)(v0 + 208), 1, 1, *(void *)(v0 + 216));
    unint64_t v20 = *(void *)(v0 + 280);
LABEL_17:
    uint64_t v24 = *(void *)(v0 + 256);
    uint64_t v26 = *(void *)(v0 + 160);
    uint64_t v25 = *(void *)(v0 + 168);
    sub_10000A7E8(*(void *)(v0 + 208), (uint64_t *)&unk_10096AC10);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v24, 1, 1, v26);
    goto LABEL_20;
  }
  __break(1u);
LABEL_59:

  __break(1u);
LABEL_60:

  __break(1u);
LABEL_61:

  __break(1u);
  return _swift_continuation_await(v86);
}

uint64_t sub_1003B3080()
{
  uint64_t v104 = v0;
  id v1 = (void *)v0[40];
  swift_willThrow();

  unint64_t v2 = (void *)_convertErrorToNSError(_:)();
  id v3 = [v2 code];

  if (v3 == (id)-10814) {
    goto LABEL_5;
  }
  if (qword_100969D40 != -1) {
    goto LABEL_55;
  }
  while (1)
  {
    uint64_t v5 = v0[29];
    uint64_t v4 = v0[30];
    uint64_t v6 = v0[27];
    uint64_t v7 = v0[28];
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000B47C(v8, (uint64_t)qword_100971128);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v4, v6);
    swift_errorRetain();
    swift_errorRetain();
    BOOL v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    BOOL v11 = os_log_type_enabled(v9, v10);
    uint64_t v12 = v0[29];
    uint64_t v13 = v0[27];
    uint64_t v14 = (void (**)(uint64_t, uint64_t))(v0[28] + 8);
    if (v11)
    {
      uint64_t v15 = swift_slowAlloc();
      NSString v16 = (void *)swift_slowAlloc();
      v103[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315394;
      sub_1003B3F24((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v15 + 4) = sub_100254634(v17, v18, v103);
      swift_bridgeObjectRelease();
      (*v14)(v12, v13);
      *(_WORD *)(v15 + 12) = 2112;
      swift_errorRetain();
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v15 + 14) = v19;
      *NSString v16 = v19;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to generate app link for %s (%@)", (uint8_t *)v15, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

LABEL_5:
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      (*v14)(v12, v13);
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v20 = v0[39];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21) {
      break;
    }
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    swift_once();
  }
  uint64_t v100 = v0 + 15;
  uint64_t v23 = (void *)v0[36];
  while (1)
  {
    uint64_t v26 = v0[30];
    uint64_t v28 = v0[27];
    uint64_t v27 = v0[28];
    uint64_t v29 = (void (*)(uint64_t *))v0[17];
    *(double *)uint64_t v103 = (double)v22 / (double)(v0[35] + 1);
    v29(v103);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    uint64_t v31 = v0[37];
    unint64_t v30 = v0[38];
    v0[36] = v23;
    unint64_t v32 = v0[35];
    if (v30 == v32)
    {
      uint64_t v102 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[28] + 56);
      v102(v0[26], 1, 1, v0[27]);
      unint64_t v33 = v0[35];
LABEL_15:
      uint64_t v37 = v0[32];
      uint64_t v39 = v0[20];
      uint64_t v38 = v0[21];
      sub_10000A7E8(v0[26], (uint64_t *)&unk_10096AC10);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v37, 1, 1, v39);
      goto LABEL_18;
    }
    if (v30 >= v32) {
      goto LABEL_53;
    }
    uint64_t v34 = v0[27];
    uint64_t v35 = v0[28];
    uint64_t v36 = v0[26];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v35 + 16))(v36, v0[19]+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v30, v34);
    unint64_t v33 = v30 + 1;
    uint64_t v102 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56);
    v102(v36, 0, 1, v34);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v36, 1, v34) == 1) {
      goto LABEL_15;
    }
    uint64_t v40 = v0[31];
    uint64_t v41 = v0[27];
    uint64_t v42 = v0[22];
    uint64_t v43 = v0[20];
    uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[28] + 32);
    v44(v40, v0[26], v41);
    uint64_t v45 = v42 + *(int *)(v43 + 48);
    v44(v45, v40, v41);
    if (__OFADD__(v31, 1)) {
      goto LABEL_54;
    }
    uint64_t v46 = (void *)v0[32];
    uint64_t v47 = v0[27];
    unint64_t v101 = v23;
    uint64_t v49 = v0[20];
    uint64_t v48 = v0[21];
    uint64_t v50 = (char *)v46 + *(int *)(v49 + 48);
    *uint64_t v46 = v31;
    v44((uint64_t)v50, v45, v47);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v46, 0, 1, v49);
    uint64_t v23 = v101;
    ++v31;
LABEL_18:
    v0[37] = v31;
    v0[38] = v33;
    uint64_t v51 = v0[33];
    uint64_t v53 = v0[20];
    uint64_t v52 = v0[21];
    sub_10024D388(v0[32], v51, &qword_1009700B8);
    int v54 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v51, 1, v53);
    uint64_t v55 = (char *)v0[33];
    if (v54 == 1) {
      break;
    }
    uint64_t v56 = v0[30];
    uint64_t v57 = v0[27];
    uint64_t v58 = v0[28];
    uint64_t v59 = v0[20];
    v0[39] = *(void *)v55;
    (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v56, &v55[*(int *)(v59 + 48)], v57);
    URL.scheme.getter();
    if (v60)
    {
      Swift::String v61 = String.lowercased()();
      swift_bridgeObjectRelease();
      if (v61._countAndFlagsBits == 1886680168 && v61._object == (void *)0xE400000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
        || v61._countAndFlagsBits == 0x7370747468 && v61._object == (void *)0xE500000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_48:
        unint64_t v94 = self;
        URL._bridgeToObjectiveC()(v95);
        uint64_t v97 = v96;
        v0[40] = v96;
        v0[2] = v0;
        v0[7] = v100;
        v0[3] = sub_1003B2690;
        uint64_t v98 = swift_continuation_init();
        v0[10] = _NSConcreteStackBlock;
        v0[11] = 0x40000000;
        v0[12] = sub_1003B3B2C;
        v0[13] = &unk_1008D8528;
        v0[14] = v98;
        [v94 getAppLinksWithURL:v97 completionHandler:v0 + 10];
        uint64_t v99 = v0 + 2;
        return _swift_continuation_await(v99);
      }
      char v62 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v62) {
        goto LABEL_48;
      }
    }
    uint64_t v63 = self;
    id v64 = [v63 defaultWorkspace];
    if (!v64)
    {

      __break(1u);
LABEL_57:

      __break(1u);
LABEL_58:

      __break(1u);
      return _swift_continuation_await(v99);
    }
    uint64_t v66 = v64;
    URL._bridgeToObjectiveC()(v65);
    uint64_t v68 = v67;
    id v69 = [v66 URLOverrideForURL:v67];

    if (v69)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v70 = 0;
    }
    else
    {
      uint64_t v70 = 1;
    }
    uint64_t v72 = v0[24];
    uint64_t v71 = v0[25];
    v102(v72, v70, 1, v0[27]);
    sub_10024D388(v72, v71, (uint64_t *)&unk_10096AC10);
    id v73 = [v63 defaultWorkspace];
    if (!v73) {
      goto LABEL_57;
    }
    uint64_t v74 = v73;
    uint64_t v76 = v0[27];
    uint64_t v75 = v0[28];
    uint64_t v77 = v0[23];
    sub_1003AFF3C(v0[25], v77);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v77, 1, v76) == 1)
    {
      uint64_t v79 = 0;
    }
    else
    {
      uint64_t v81 = v0[27];
      uint64_t v80 = v0[28];
      uint64_t v82 = v0[23];
      URL._bridgeToObjectiveC()(v78);
      uint64_t v79 = v83;
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v82, v81);
    }
    id v84 = [v74 applicationsAvailableForOpeningURL:v79, v100];

    if (!v84) {
      goto LABEL_58;
    }
    sub_10000B740(0, (unint64_t *)&qword_10096B598);
    unint64_t v85 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v85 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v90 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v90)
      {
LABEL_9:
        uint64_t v24 = v0[25];
        swift_bridgeObjectRelease();
        sub_10000A7E8(v24, (uint64_t *)&unk_10096AC10);

        uint64_t v23 = 0;
        goto LABEL_10;
      }
    }
    else if (!*(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_9;
    }
    if ((v85 & 0xC000000000000001) != 0)
    {
      id v86 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_52;
      }
      id v86 = *(id *)(v85 + 32);
    }
    uint64_t v87 = v86;
    uint64_t v88 = v0[25];
    swift_bridgeObjectRelease();
    id v89 = [v87 correspondingApplicationRecord];

    sub_10000A7E8(v88, (uint64_t *)&unk_10096AC10);
    uint64_t v23 = v89;
LABEL_10:
    uint64_t v25 = v0[39];
    BOOL v21 = __OFADD__(v25, 1);
    uint64_t v22 = v25 + 1;
    if (v21) {
      goto LABEL_51;
    }
  }
  uint64_t v91 = (void *)v0[16];
  swift_bridgeObjectRelease();
  *uint64_t v91 = v23;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v92 = (uint64_t (*)(void))v0[1];
  return v92();
}

uint64_t sub_1003B3B2C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_10000A844(&qword_10096BAF0);
    uint64_t v5 = swift_allocError();
    void *v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    sub_10000B740(0, &qword_100971248);
    **(void **)(*(void *)(v3 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    return swift_continuation_throwingResume();
  }
}

uint64_t type metadata accessor for SDAirDropContentHandlerGenericLinks()
{
  return self;
}

uint64_t sub_1003B3C2C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerGenericLinks();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1003B3C64(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_1003B0F90(a1);
}

void sub_1003B3CFC(uint64_t a1, char a2)
{
}

uint64_t sub_1003B3D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_10097F1D0);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void **)(*(void *)v2 + 16);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v9 = type metadata accessor for SFAirDropReceive.ItemDestination();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  id v10 = v8;
  sub_10039FAA0(a1, v8, 1, a2);

  return sub_10000A7E8((uint64_t)v7, (uint64_t *)&unk_10097F1D0);
}

uint64_t sub_1003B3E34()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003B3E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_10000A6F4;
  return sub_1003B1C70(a1, a2, a3, v8);
}

uint64_t sub_1003B3F24(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003B3F6C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100971250);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100971250);
  if (qword_100969CD8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946D8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1003B4034()
{
  id v0 = objc_allocWithZone((Class)_s10LTKManagerCMa());
  id result = sub_1003B4070(0, 0);
  qword_100994790 = (uint64_t)result;
  return result;
}

id sub_1003B4070(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v66 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  id v73 = (char *)&v66 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v72 = (char *)&v66 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v71 = (char *)&v66 - v18;
  __chkstk_darwin(v17);
  uint64_t v70 = (char *)&v66 - v19;
  uint64_t v20 = OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_lockStateMonitor;
  type metadata accessor for SFLockStateMonitor();
  swift_allocObject();
  uint64_t v74 = v2;
  *(void *)&v2[v20] = SFLockStateMonitor.init()();
  uint64_t v21 = IDSCopyLocalDeviceUniqueID();
  if (v21)
  {
    uint64_t v22 = (void *)v21;
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v25 = v24;
  }
  else
  {
    unint64_t v25 = 0x80000001007BB520;
    uint64_t v23 = 0xD000000000000014;
  }
  uint64_t v26 = v74;
  uint64_t v27 = (uint64_t *)&v74[OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localDeviceID];
  uint64_t *v27 = v23;
  v27[1] = v25;
  if (a2)
  {
    uint64_t v75 = a1;
    uint64_t v76 = a2;
    swift_bridgeObjectRetain();
    v28._countAndFlagsBits = 0x6B746C6C2DLL;
    v28._object = (void *)0xE500000000000000;
    String.append(_:)(v28);
    uint64_t v29 = v76;
    unint64_t v30 = &v26[OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localLTKBasename];
    *(void *)unint64_t v30 = v75;
    *((void *)v30 + 1) = v29;
    uint64_t v75 = a1;
    uint64_t v76 = a2;
    v31._countAndFlagsBits = 0x6C6E556F7475412DLL;
    v31._object = (void *)0xEB000000006B636FLL;
    String.append(_:)(v31);
  }
  else
  {
    unint64_t v32 = &v26[OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localLTKBasename];
    *(void *)unint64_t v32 = 1802792044;
    *((void *)v32 + 1) = 0xE400000000000000;
  }
  id result = sub_1001B2B24();
  if (!result) {
    goto LABEL_33;
  }
  uint64_t v34 = result;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  URL.init(fileURLWithPath:)();
  swift_bridgeObjectRelease();
  uint64_t v35 = (uint64_t)v71;
  URL.appendingPathComponent(_:isDirectory:)();
  swift_bridgeObjectRelease();
  uint64_t v36 = (uint64_t)v72;
  URL.appendingPathComponent(_:isDirectory:)();
  uint64_t v37 = (uint64_t)v73;
  URL.appendingPathComponent(_:isDirectory:)();
  URL.appendingPathComponent(_:isDirectory:)();
  sub_1003B5CF0(v35);
  sub_1003B5CF0(v36);
  sub_1003B5CF0(v37);
  sub_1003B5CF0((uint64_t)v12);
  sub_10000A844(&qword_1009712B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007709D0;
  *(unsigned char *)(inited + 32) = 0;
  uint64_t v68 = v6;
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v39(v9, v36, v5);
  _s13LTKCollectionCMa();
  swift_allocObject();
  *(void *)(inited + 40) = sub_1004FC8F4(0, (uint64_t)v9);
  *(unsigned char *)(inited + 48) = 1;
  v39(v9, v37, v5);
  swift_allocObject();
  *(void *)(inited + 56) = sub_1004FC8F4(1, (uint64_t)v9);
  *(unsigned char *)(inited + 64) = 2;
  uint64_t v67 = v12;
  uint64_t v69 = v5;
  v39(v9, (uint64_t)v12, v5);
  swift_allocObject();
  *(void *)(inited + 72) = sub_1004FC8F4(2, (uint64_t)v9);
  unint64_t v40 = sub_100249EDC(inited);
  swift_setDeallocating();
  sub_10000A844(&qword_1009712B8);
  swift_arrayDestroy();
  unint64_t v41 = v40 + 64;
  uint64_t v42 = 1 << *(unsigned char *)(v40 + 32);
  uint64_t v43 = -1;
  if (v42 < 64) {
    uint64_t v43 = ~(-1 << v42);
  }
  unint64_t v44 = v43 & *(void *)(v40 + 64);
  int64_t v45 = (unint64_t)(v42 + 63) >> 6;
  id result = (id)swift_bridgeObjectRetain();
  int64_t v46 = 0;
  while (1)
  {
    if (v44)
    {
      unint64_t v47 = __clz(__rbit64(v44));
      v44 &= v44 - 1;
      unint64_t v48 = v47 | (v46 << 6);
      goto LABEL_12;
    }
    int64_t v56 = v46 + 1;
    if (__OFADD__(v46, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v56 >= v45) {
      goto LABEL_30;
    }
    unint64_t v57 = *(void *)(v41 + 8 * v56);
    ++v46;
    if (!v57)
    {
      int64_t v46 = v56 + 1;
      if (v56 + 1 >= v45) {
        goto LABEL_30;
      }
      unint64_t v57 = *(void *)(v41 + 8 * v46);
      if (!v57)
      {
        int64_t v46 = v56 + 2;
        if (v56 + 2 >= v45) {
          goto LABEL_30;
        }
        unint64_t v57 = *(void *)(v41 + 8 * v46);
        if (!v57)
        {
          int64_t v46 = v56 + 3;
          if (v56 + 3 >= v45) {
            goto LABEL_30;
          }
          unint64_t v57 = *(void *)(v41 + 8 * v46);
          if (!v57) {
            break;
          }
        }
      }
    }
LABEL_29:
    unint64_t v44 = (v57 - 1) & v57;
    unint64_t v48 = __clz(__rbit64(v57)) + (v46 << 6);
LABEL_12:
    uint64_t v49 = *(void *)(*(void *)(v40 + 56) + 8 * v48);
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = v40;
    uint64_t v51 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X1>, unsigned __int8@<W2>, uint64_t@<X8>))(v49 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_cacheDirectoryBlock);
    uint64_t v52 = *(void *)(v49 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_cacheDirectoryBlock);
    *uint64_t v51 = sub_1003B6260;
    v51[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, unsigned __int8@<W2>, uint64_t@<X8>))v50;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1002CA430(v52);
    uint64_t v53 = swift_allocObject();
    *(void *)(v53 + 16) = v40;
    int v54 = (uint64_t (**))(v49
                                                   + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_protectionClassBlock);
    uint64_t v55 = *(void *)(v49 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_protectionClassBlock);
    *int v54 = sub_1003B6268;
    v54[1] = (uint64_t (*))v53;
    swift_bridgeObjectRetain();
    sub_1002CA430(v55);
    id result = (id)swift_release();
  }
  int64_t v58 = v56 + 4;
  if (v58 >= v45)
  {
LABEL_30:
    swift_release();
    uint64_t v59 = v74;
    *(void *)&v74[OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localLTKByKeyClass] = v40;

    uint64_t v60 = (objc_class *)_s10LTKManagerCMa();
    v77.receiver = v59;
    v77.super_class = v60;
    id v61 = [super init];
    sub_1003B6270(&qword_1009712C0, v62, (void (*)(uint64_t))_s10LTKManagerCMa);
    id v63 = v61;
    dispatch thunk of SFLockStateMonitor.delegate.setter();

    uint64_t v64 = v69;
    BOOL v65 = *(void (**)(char *, uint64_t))(v68 + 8);
    v65(v67, v69);
    v65(v73, v64);
    v65(v72, v64);
    v65(v71, v64);
    v65(v70, v64);
    return v63;
  }
  unint64_t v57 = *(void *)(v41 + 8 * v58);
  if (v57)
  {
    int64_t v46 = v58;
    goto LABEL_29;
  }
  while (1)
  {
    int64_t v46 = v58 + 1;
    if (__OFADD__(v58, 1)) {
      break;
    }
    if (v46 >= v45) {
      goto LABEL_30;
    }
    unint64_t v57 = *(void *)(v41 + 8 * v46);
    ++v58;
    if (v57) {
      goto LABEL_29;
    }
  }
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1003B47E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v27 = a5;
  uint64_t v8 = type metadata accessor for UTType();
  uint64_t v25 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL.DirectoryHint();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for URL();
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a4 + 16) && (v26 = v16, sub_100583BA8(a3), uint64_t v16 = v26, (v19 & 1) != 0))
  {
    uint64_t v28 = a1;
    uint64_t v29 = v24;
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for URL.DirectoryHint.notDirectory(_:), v11);
    sub_10024A1FC();
    swift_retain();
    URL.appending<A>(path:directoryHint:)();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    static UTType.propertyList.getter();
    uint64_t v20 = v27;
    URL.appendingPathExtension(for:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v18, v15);
    swift_release();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v20, 0, 1, v15);
  }
  else
  {
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
    uint64_t v23 = v27;
    return v22(v23, 1, 1, v15);
  }
}

uint64_t sub_1003B4B1C(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  unint64_t v3 = sub_100583BA8(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  if (!*(unsigned char *)(*(void *)(*(void *)(a2 + 56) + 8 * v3) + 16)) {
    return 0x20000000;
  }
  if (*(unsigned char *)(*(void *)(*(void *)(a2 + 56) + 8 * v3) + 16) == 1) {
    return 0x40000000;
  }
  return 0x10000000;
}

void sub_1003B4B90()
{
  if (qword_100969D48 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_100971250);
  uint64_t v2 = v0;
  unint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v6 = *(void *)&v2[OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localDeviceID];
    unint64_t v7 = *(void *)&v2[OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localDeviceID + 8];
    swift_bridgeObjectRetain();
    sub_100254634(v6, v7, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Starting LTKManager, localDeviceID=%s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_1003B4F68();
}

uint64_t sub_1003B4D48()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localLTKByKeyClass);
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v3 = v1 + 64;
  uint64_t v2 = v4;
  uint64_t v5 = 1 << *(unsigned char *)(*(void *)(v0
                                   + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localLTKByKeyClass)
                       + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  uint64_t v7 = v6 & v2;
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v10 = 0;
  for (id i = _swiftEmptyArrayStorage; ; id i = v18)
  {
    if (v7)
    {
      v7 &= v7 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v10 >= v8) {
      goto LABEL_26;
    }
    uint64_t v16 = *(void *)(v3 + 8 * v10);
    if (!v16) {
      break;
    }
LABEL_21:
    uint64_t v7 = (v16 - 1) & v16;
LABEL_5:
    __chkstk_darwin(result);
    uint64_t v13 = v12 + 4;
    os_unfair_lock_lock(v12 + 4);
    sub_1003B62F8(&v18);
    os_unfair_lock_unlock(v13);
    unint64_t v14 = (unint64_t)v18;
    uint64_t v18 = i;
    swift_bridgeObjectRetain();
    sub_1003D4F80(v14);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v17 = v10 + 1;
  if (v10 + 1 >= v8) {
    goto LABEL_26;
  }
  uint64_t v16 = *(void *)(v3 + 8 * v17);
  if (v16) {
    goto LABEL_20;
  }
  int64_t v17 = v10 + 2;
  if (v10 + 2 >= v8) {
    goto LABEL_26;
  }
  uint64_t v16 = *(void *)(v3 + 8 * v17);
  if (v16) {
    goto LABEL_20;
  }
  int64_t v17 = v10 + 3;
  if (v10 + 3 >= v8) {
    goto LABEL_26;
  }
  uint64_t v16 = *(void *)(v3 + 8 * v17);
  if (v16) {
    goto LABEL_20;
  }
  int64_t v17 = v10 + 4;
  if (v10 + 4 >= v8) {
    goto LABEL_26;
  }
  uint64_t v16 = *(void *)(v3 + 8 * v17);
  if (v16) {
    goto LABEL_20;
  }
  int64_t v17 = v10 + 5;
  if (v10 + 5 >= v8)
  {
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease();
    return (uint64_t)i;
  }
  uint64_t v16 = *(void *)(v3 + 8 * v17);
  if (v16)
  {
LABEL_20:
    int64_t v10 = v17;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_26;
    }
    uint64_t v16 = *(void *)(v3 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_21;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1003B4F68()
{
  uint64_t v1 = v0;
  id v2 = [self sharedMonitor];
  if (v2)
  {
    uint64_t v3 = v2;
    if ([v2 deviceKeyBagUnlocked])
    {
      uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localLTKByKeyClass);
      if (!*(void *)(v4 + 16)) {
        goto LABEL_23;
      }
      unint64_t v5 = sub_100583BA8(0);
      if (v6)
      {
        __chkstk_darwin(v5);
        int64_t v8 = v7 + 4;
        swift_retain();
        os_unfair_lock_lock(v8);
        sub_1003B5CD8(&v26);
        os_unfair_lock_unlock(v8);
        if (v26 == 1) {
          sub_1004FDD30();
        }
        swift_release();
      }
      if (!*(void *)(v4 + 16)) {
        goto LABEL_23;
      }
      unint64_t v9 = sub_100583BA8(1u);
      if ((v10 & 1) == 0) {
        goto LABEL_23;
      }
      __chkstk_darwin(v9);
      uint64_t v12 = v11 + 4;
      swift_retain();
      os_unfair_lock_lock(v12);
      sub_1003B5CD8(&v27);
      os_unfair_lock_unlock(v12);
      int v13 = v27;
    }
    else
    {
      if (![v3 deviceWasUnlockedOnce]
        || !*(void *)(*(void *)(v0
                                  + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localLTKByKeyClass)
                      + 16)
        || (unint64_t v18 = sub_100583BA8(1u), (v19 & 1) == 0))
      {
LABEL_23:

        goto LABEL_24;
      }
      __chkstk_darwin(v18);
      uint64_t v21 = v20 + 4;
      swift_retain();
      os_unfair_lock_lock(v21);
      sub_1003B5CD8(v28);
      os_unfair_lock_unlock(v21);
      int v13 = v28[0];
    }
    if (v13 == 1) {
      sub_1004FDD30();
    }
    swift_release();
    goto LABEL_23;
  }
  if (qword_100969D48 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_10000B47C(v14, (uint64_t)qword_100971250);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v15, v16))
  {
    int64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Failed to get SDStatusMonitor to check lock state, only class D local LTKs will be loaded", v17, 2u);
    swift_slowDealloc();
  }

LABEL_24:
  if (*(void *)(*(void *)(v1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localLTKByKeyClass)
                 + 16))
  {
    unint64_t v22 = sub_100583BA8(2u);
    if (v23)
    {
      __chkstk_darwin(v22);
      uint64_t v25 = v24 + 4;
      swift_retain();
      os_unfair_lock_lock(v25);
      sub_1003B5CD8(&v29);
      os_unfair_lock_unlock(v25);
      if (v29 == 1) {
        sub_1004FDD30();
      }
      swift_release();
    }
  }
}

void *sub_1003B5358(char a1, char a2, uint64_t a3, uint64_t a4, char a5, int a6)
{
  int v46 = a6;
  unint64_t v11 = *(void *)(v6 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localLTKBasename);
  unint64_t v10 = *(void *)(v6 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localLTKBasename + 8);
  int v12 = a2 & 1;
  uint64_t v47 = a4;
  unint64_t v48 = v11;
  unint64_t v49 = v10;
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = 95;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  unint64_t v14 = 0xE700000000000000;
  uint64_t v15 = 0x6E776F6E6B6E75;
  switch(a1)
  {
    case 1:
      unint64_t v14 = 0xEE00656E6F68506BLL;
      uint64_t v15 = 0x636F6C6E5563616DLL;
      break;
    case 2:
      unint64_t v14 = 0xEC00000043737361;
      uint64_t v15 = 0x6C436B636F6C6E75;
      break;
    case 3:
      unint64_t v14 = 0xEF6B636F6C6E5565;
      uint64_t v15 = 0x646F4D7473657567;
      break;
    default:
      break;
  }
  unint64_t v16 = v14;
  String.append(_:)(*(Swift::String *)&v15);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 95;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  if (v12) {
    uint64_t v18 = 7955787;
  }
  else {
    uint64_t v18 = 1801678668;
  }
  if (v12) {
    unint64_t v19 = 0xE300000000000000;
  }
  else {
    unint64_t v19 = 0xE400000000000000;
  }
  if (v12) {
    signed __int8 v20 = a1 == 2;
  }
  else {
    signed __int8 v20 = 0x1020100u >> (8 * a1);
  }
  unint64_t v21 = v19;
  String.append(_:)(*(Swift::String *)&v18);
  swift_bridgeObjectRelease();
  unint64_t v22 = v49;
  uint64_t v23 = *(void *)(v6 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localLTKByKeyClass);
  if (*(void *)(v23 + 16) && (unint64_t v24 = v48, v25 = sub_100583BA8(v20), (v26 & 1) != 0))
  {
    v45[1] = v45;
    uint64_t v27 = *(void *)(*(void *)(v23 + 56) + 8 * v25);
    uint64_t v28 = __chkstk_darwin(v25);
    v38[6] = v27;
    v38[7] = v24;
    v38[8] = v22;
    char v39 = a1;
    char v40 = v12;
    char v41 = a5 & 1;
    char v42 = v46 & 1;
    uint64_t v43 = a3;
    uint64_t v44 = v47;
    __chkstk_darwin(v28);
    char v29 = v38;
    v38[2] = sub_1003B62B8;
    v38[3] = v30;
    unint64_t v32 = v31 + 4;
    swift_retain();
    os_unfair_lock_lock(v32);
    uint64_t v33 = v50;
    sub_1003B62F8(&v48);
    os_unfair_lock_unlock(v32);
    if (!v33) {
      char v29 = (void *)v48;
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    _StringGuts.grow(_:)(35);
    swift_bridgeObjectRelease();
    unint64_t v48 = 0xD000000000000011;
    unint64_t v49 = 0x80000001007BB570;
    v34._countAndFlagsBits = qword_100774390[v20];
    v34._object = (void *)0xE100000000000000;
    String.append(_:)(v34);
    v35._object = (void *)0x80000001007BB590;
    v35._countAndFlagsBits = 0xD000000000000010;
    String.append(_:)(v35);
    char v29 = (void *)0xD000000000000011;
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v36 = 1;
    *(void *)(v36 + 8) = 0xD000000000000011;
    *(void *)(v36 + 16) = 0x80000001007BB570;
    swift_willThrow();
  }
  return v29;
}

id sub_1003B5718()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s10LTKManagerCMa();
  return [super dealloc];
}

uint64_t _s10LTKManagerCMa()
{
  return self;
}

unint64_t sub_1003B584C()
{
  _StringGuts.grow(_:)(45);
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localDeviceID);
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localDeviceID + 8);
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 10;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  return 0xD00000000000002ALL;
}

uint64_t sub_1003B58F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DeviceLockState();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = &v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, void, uint64_t))(v3 + 104))(v5, enum case for DeviceLockState.unlocked(_:), v2);
  char v6 = static DeviceLockState.== infix(_:_:)();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_100969D48 != -1) {
LABEL_34:
    }
      swift_once();
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000B47C(v8, (uint64_t)qword_100971250);
    unint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      unint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Unlocked, start LTK checkup", v11, 2u);
      swift_slowDealloc();
    }

    uint64_t v1 = *(void *)(v1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKManager_localLTKByKeyClass);
    uint64_t v12 = v1 + 64;
    uint64_t v13 = 1 << *(unsigned char *)(v1 + 32);
    uint64_t v14 = -1;
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    unint64_t v15 = v14 & *(void *)(v1 + 64);
    int64_t v16 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v17 = swift_bridgeObjectRetain();
    int64_t v18 = 0;
    while (1)
    {
      if (v15)
      {
        unint64_t v19 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v20 = v19 | (v18 << 6);
      }
      else
      {
        if (__OFADD__(v18++, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
        if (v18 >= v16) {
          return swift_release();
        }
        unint64_t v22 = *(void *)(v12 + 8 * v18);
        if (!v22)
        {
          int64_t v23 = v18 + 1;
          if (v18 + 1 >= v16) {
            return swift_release();
          }
          unint64_t v22 = *(void *)(v12 + 8 * v23);
          if (!v22)
          {
            int64_t v23 = v18 + 2;
            if (v18 + 2 >= v16) {
              return swift_release();
            }
            unint64_t v22 = *(void *)(v12 + 8 * v23);
            if (!v22)
            {
              int64_t v23 = v18 + 3;
              if (v18 + 3 >= v16) {
                return swift_release();
              }
              unint64_t v22 = *(void *)(v12 + 8 * v23);
              if (!v22)
              {
                int64_t v23 = v18 + 4;
                if (v18 + 4 >= v16) {
                  return swift_release();
                }
                unint64_t v22 = *(void *)(v12 + 8 * v23);
                if (!v22)
                {
                  while (1)
                  {
                    int64_t v18 = v23 + 1;
                    if (__OFADD__(v23, 1)) {
                      goto LABEL_33;
                    }
                    if (v18 >= v16) {
                      return swift_release();
                    }
                    unint64_t v22 = *(void *)(v12 + 8 * v18);
                    ++v23;
                    if (v22) {
                      goto LABEL_23;
                    }
                  }
                }
              }
            }
          }
          int64_t v18 = v23;
        }
LABEL_23:
        unint64_t v15 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v1 + 56) + 8 * v20);
      __chkstk_darwin(v17);
      *(void *)&v27[-16] = sub_1003B5C78;
      *(void *)&v27[-8] = v24;
      char v26 = v25 + 4;
      swift_retain();
      os_unfair_lock_lock(v26);
      sub_1003B5CD8(&v28);
      os_unfair_lock_unlock(v26);
      if (v28 == 1) {
        sub_1004FDD30();
      }
      uint64_t v17 = swift_release();
    }
  }
  return result;
}

void sub_1003B5C78(char *a1@<X8>)
{
  sub_1004FCAD4(v1, a1);
}

void *sub_1003B5C94@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X1>, unsigned char *a2@<X8>)
{
  uint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

void *sub_1003B5CD8@<X0>(unsigned char *a1@<X8>)
{
  return sub_10030E790(a1);
}

void sub_1003B5CF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v29 = [self defaultManager];
  URL.path(percentEncoded:)(1);
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v7 = [v29 directoryExistsAtPath:v6];

  if (v7)
  {
    id v8 = v29;
  }
  else
  {
    if (qword_100969D48 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    uint64_t v10 = sub_10000B47C(v9, (uint64_t)qword_100971250);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    unint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = (void *)swift_slowAlloc();
      v28[2] = v10;
      id v31 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      v28[1] = v13 + 4;
      sub_1003B6270((unint64_t *)&qword_10096B590, 255, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v30 = sub_100254634(v15, v16, (uint64_t *)&v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Create LTK directory: %s", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }

    URL._bridgeToObjectiveC()(v17);
    unint64_t v19 = v18;
    id v31 = 0;
    unsigned int v20 = [v29 createDirectoryAtURL:v18 withIntermediateDirectories:1 attributes:0 error:&v31];

    if (v20)
    {
      id v21 = v31;
    }
    else
    {
      id v22 = v31;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRetain();
      swift_errorRetain();
      int64_t v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v23, v24))
      {
        unint64_t v25 = (uint8_t *)swift_slowAlloc();
        char v26 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v25 = 138412290;
        swift_errorRetain();
        uint64_t v27 = (void *)_swift_stdlib_bridgeErrorToNSError();
        id v31 = v27;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *char v26 = v27;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Create LTK directory failed: %@", v25, 0xCu);
        sub_10000A844(&qword_10096B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
    }
  }
}

uint64_t sub_1003B6228()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003B6260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  return sub_1003B47E8(a1, a2, a3, *(void *)(v4 + 16), a4);
}

uint64_t sub_1003B6268(unsigned __int8 a1)
{
  return sub_1003B4B1C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1003B6270(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003B62B8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1004FCD2C(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(unsigned char *)(v1 + 41), *(unsigned __int8 *)(v1 + 42), *(unsigned __int8 *)(v1 + 43), *(void *)(v1 + 48), a1, *(void *)(v1 + 56));
}

void *sub_1003B62F8@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_1003B633C@<X0>(void *a1@<X8>)
{
  return sub_1004FCA5C(a1);
}

void *sub_1003B635C(int a1, size_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    if (!a2) {
      return _swiftEmptyArrayStorage;
    }
    sub_10000A844(&qword_1009713C0);
    uint64_t v4 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1, a2);
    return (void *)v4;
  }
  return result;
}

uint64_t sub_1003B6420(char a1, uint64_t (*a2)(char *))
{
  char v3 = a1;
  return a2(&v3);
}

uint64_t sub_1003B6458(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  swift_retain();
  id v8 = a3;
  v4(v5, v7, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003B64F0(uint64_t *a1, unint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t v6 = (void *)*a1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a1 = (uint64_t)v6;
  if (result)
  {
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = (uint64_t)sub_1002AD474(v6);
  uint64_t v6 = (void *)result;
  *a1 = result;
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (v6[2] > a2)
  {
    *((unsigned char *)v6 + a2 + 32) = a3 & 1;
    return swift_endAccess();
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1003B659C(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    id v8 = _swiftEmptyArrayStorage;
    do
    {
      int v9 = *(unsigned __int8 *)(v5 + v7 + 32);
      if (v9 != 2)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v8 = sub_1002539E8(0, v8[2] + 1, 1, v8);
        }
        unint64_t v11 = v8[2];
        unint64_t v10 = v8[3];
        if (v11 >= v10 >> 1) {
          id v8 = sub_1002539E8((void *)(v10 > 1), v11 + 1, 1, v8);
        }
        v8[2] = v11 + 1;
        *((unsigned char *)v8 + v11 + 32) = v9 & 1;
      }
      ++v7;
    }
    while (v6 != v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v8 = _swiftEmptyArrayStorage;
  }
  a3(v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003B66D4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_1009712C8);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_1009712C8);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  char v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1003B679C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a1;
  v5[3] = a5;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v5[4] = static AirDropActor.shared;
  return _swift_task_switch(sub_1003B683C, v6, 0);
}

uint64_t sub_1003B683C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = static AirDropActor.shared;
  uint64_t v3 = sub_1003B9594((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v4 = swift_task_alloc();
  v0[5] = v4;
  *(void *)(v4 + 16) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1003B698C;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 7, v2, v3, 0x496C6C6174736E69, 0xEF293A5F28734150, sub_1003B91DC, v4, &type metadata for Bool);
}

uint64_t sub_1003B698C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1003B6AB8, v1, 0);
}

uint64_t sub_1003B6AB8()
{
  **(unsigned char **)(v0 + 16) = *(unsigned char *)(v0 + 56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003B6ADC(size_t a1, uint64_t a2)
{
  size_t v111 = a1;
  uint64_t v3 = sub_10000A844(&qword_1009700B0);
  uint64_t v110 = *(char **)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v87 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v85 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v83 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for DispatchQoS();
  uint64_t v82 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v81 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A844((uint64_t *)&unk_10096AC10);
  __chkstk_darwin(v8 - 8);
  v106 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v97 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v96 = (char *)&v78 - v15;
  v109 = v16;
  __chkstk_darwin(v14);
  id v86 = (char *)&v78 - v17;
  uint64_t v18 = sub_10000A844(&qword_1009700B8);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v107 = (uint64_t *)((char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  uint64_t v105 = (char *)&v78 - v21;
  uint64_t v22 = sub_10000A844(&qword_1009710A8);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void *)(v23 + 64);
  __chkstk_darwin(v22);
  size_t v25 = *(void *)(a2 + 16);
  if (!v25)
  {
    if (qword_100969D58 != -1) {
      goto LABEL_19;
    }
    goto LABEL_14;
  }
  uint64_t v104 = v3;
  uint64_t v80 = v5;
  sub_1002B62F0();
  uint64_t v79 = static OS_dispatch_queue.main.getter();
  (*(void (**)(char *, size_t, uint64_t))(v23 + 16))((char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v111, v22);
  unint64_t v26 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v78 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v78 + v26, (char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v22);
  dispatch_group_t v100 = dispatch_group_create();
  sub_10000A844((uint64_t *)&unk_10096D4C0);
  uint64_t v98 = swift_allocObject();
  *(_DWORD *)(v98 + 16) = 0;
  uint64_t v27 = swift_allocObject();
  char v28 = sub_1003B635C(2, v25);
  uint64_t v108 = v11 + 16;
  uint64_t v99 = v27;
  *(void *)(v27 + 16) = v28;
  uint64_t v103 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v89 = v11 + 48;
  id v29 = (void (**)(char *, uint64_t, uint64_t))(v11 + 32);
  unint64_t v101 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v110 + 48);
  uint64_t v102 = (void (**)(void *, uint64_t, uint64_t, uint64_t))(v110 + 56);
  uint64_t v93 = v109 + 7;
  uint64_t v92 = &v115;
  uint64_t v91 = v11 + 8;
  uint64_t v90 = a2;
  swift_bridgeObjectRetain();
  uint64_t v88 = 0;
  size_t v30 = 0;
  size_t v31 = v25;
  size_t v95 = v25;
  unint64_t v94 = (void (**)(char *, uint64_t, uint64_t))(v11 + 32);
  while (1)
  {
    uint64_t v32 = (uint64_t)v106;
    if (v30 == v31)
    {
      (*v103)(v106, 1, 1, v10);
      size_t v33 = v31;
      uint64_t v34 = v104;
LABEL_7:
      Swift::String v35 = (uint64_t *)v105;
      sub_10000A7E8(v32, (uint64_t *)&unk_10096AC10);
      uint64_t v36 = 1;
      goto LABEL_10;
    }
    uint64_t v34 = v104;
    if (v30 >= v31) {
      break;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v106, v90+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v30, v10);
    size_t v33 = v30 + 1;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v32, 0, 1, v10);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v32, 1, v10) == 1) {
      goto LABEL_7;
    }
    uint64_t v37 = *v29;
    uint64_t v38 = v86;
    (*v29)(v86, v32, v10);
    char v39 = &v87[*(int *)(v34 + 48)];
    v37(v39, (uint64_t)v38, v10);
    uint64_t v40 = v88 + 1;
    if (__OFADD__(v88, 1)) {
      goto LABEL_18;
    }
    char v41 = (char *)v107 + *(int *)(v34 + 48);
    *uint64_t v107 = v88;
    v37(v41, (uint64_t)v39, v10);
    uint64_t v36 = 0;
    uint64_t v88 = v40;
    Swift::String v35 = (uint64_t *)v105;
LABEL_10:
    uint64_t v42 = (uint64_t)v107;
    (*v102)(v107, v36, 1, v34);
    sub_10034346C(v42, (uint64_t)v35);
    if ((*v101)(v35, 1, v34) == 1)
    {
      swift_bridgeObjectRelease();
      BOOL v65 = (void *)swift_allocObject();
      v65[2] = v99;
      v65[3] = v31;
      uint64_t v66 = v78;
      v65[4] = sub_1003B9278;
      v65[5] = v66;
      uint64_t v117 = sub_100343514;
      unint64_t v118 = v65;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v114 = 1107296256;
      unint64_t v115 = sub_100296520;
      char v116 = &unk_1008D86A8;
      uint64_t v67 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      uint64_t v68 = v81;
      static DispatchQoS.unspecified.getter();
      uint64_t v112 = _swiftEmptyArrayStorage;
      sub_1003B9594((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10000A844((uint64_t *)&unk_10096C490);
      sub_1002B4B9C();
      uint64_t v69 = v83;
      uint64_t v70 = v80;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v71 = (void *)v79;
      dispatch_group_t v72 = v100;
      OS_dispatch_group.notify(qos:flags:queue:execute:)();
      _Block_release(v67);
      swift_release();

      (*(void (**)(char *, uint64_t))(v85 + 8))(v69, v70);
      (*(void (**)(char *, uint64_t))(v82 + 8))(v68, v84);

      swift_release();
      swift_release();
      return swift_release();
    }
    uint64_t v43 = *v35;
    uint64_t v44 = (char *)v35 + *(int *)(v34 + 48);
    uint64_t v110 = *(char **)(v11 + 32);
    int64_t v45 = v96;
    ((void (*)(char *, char *, uint64_t))v110)(v96, v44, v10);
    dispatch_group_t v46 = v100;
    dispatch_group_enter(v100);
    uint64_t v47 = (void *)swift_allocObject();
    uint64_t v48 = v99;
    v47[2] = v98;
    v47[3] = v48;
    v47[4] = v43;
    v47[5] = v46;
    uint64_t v49 = swift_allocObject();
    size_t v111 = v33;
    uint64_t v50 = v49;
    *(void *)(v49 + 16) = sub_100343568;
    *(void *)(v49 + 24) = v47;
    v109 = (char *)self;
    swift_retain();
    swift_retain();
    uint64_t v51 = v46;
    swift_retain();
    URL._bridgeToObjectiveC()(v52);
    int v54 = v53;
    uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v56 = v10;
    uint64_t v57 = v11;
    int64_t v58 = v97;
    v55(v97, v45, v56);
    unint64_t v59 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    unint64_t v60 = (unint64_t)&v93[v59] & 0xFFFFFFFFFFFFFFF8;
    uint64_t v61 = swift_allocObject();
    uint64_t v62 = v58;
    uint64_t v11 = v57;
    uint64_t v10 = v56;
    id v29 = v94;
    ((void (*)(unint64_t, char *, uint64_t))v110)(v61 + v59, v62, v10);
    id v63 = (uint64_t (**)(char))(v61 + v60);
    *id v63 = sub_1003B93FC;
    v63[1] = (uint64_t (*)(char))v50;
    size_t v30 = v111;
    uint64_t v117 = sub_1003B94DC;
    unint64_t v118 = (void *)v61;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v114 = 1107296256;
    unint64_t v115 = sub_1003B6458;
    char v116 = &unk_1008D8748;
    uint64_t v64 = _Block_copy(&aBlock);
    swift_release();
    [v109 installApplication:v54 options:0 completion:v64];
    _Block_release(v64);
    size_t v31 = v95;
    swift_release();

    (*(void (**)(char *, uint64_t))(v11 + 8))(v45, v10);
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  swift_once();
LABEL_14:
  uint64_t v74 = type metadata accessor for Logger();
  sub_10000B47C(v74, (uint64_t)qword_1009712C8);
  uint64_t v75 = Logger.logObject.getter();
  os_log_type_t v76 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v75, v76))
  {
    objc_super v77 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)objc_super v77 = 0;
    _os_log_impl((void *)&_mh_execute_header, v75, v76, "No completedURLs to install", v77, 2u);
    swift_slowDealloc();
  }

  LOBYTE(aBlock) = 0;
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_1003B7734(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v47 = a6;
  uint64_t v48 = a5;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v45 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v45 - v18;
  if (a3)
  {
    swift_errorRetain();
    if (qword_100969D58 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_10000B47C(v20, (uint64_t)qword_1009712C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v19, a4, v10);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v46 = v10;
      uint64_t v24 = v23;
      uint64_t v25 = swift_slowAlloc();
      uint64_t v49 = a3;
      uint64_t v50 = v25;
      *(_DWORD *)uint64_t v24 = 136315394;
      swift_errorRetain();
      sub_10000A844(&qword_10096BAF0);
      uint64_t v26 = String.init<A>(describing:)();
      uint64_t v49 = sub_100254634(v26, v27, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v24 + 12) = 2080;
      uint64_t v28 = URL.description.getter();
      uint64_t v49 = sub_100254634(v28, v29, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v46);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "IPA Handler: Failed to install app with error (%s for URL %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v10);
    }
LABEL_20:
    uint64_t v43 = 0;
    return v48(v43);
  }
  if (!a2)
  {
    if (qword_100969D58 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_10000B47C(v37, (uint64_t)qword_1009712C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v17, a4, v10);
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136315138;
      sub_1003B9594((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v41 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v49 = sub_100254634(v41, v42, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "IPA Handler: No error or success bundle ID for installing: %s", v40, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    }

    goto LABEL_20;
  }
  uint64_t v30 = qword_100969D58;
  swift_bridgeObjectRetain();
  if (v30 != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for Logger();
  sub_10000B47C(v31, (uint64_t)qword_1009712C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a4, v10);
  swift_bridgeObjectRetain();
  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v50 = v46;
    *(_DWORD *)uint64_t v34 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_100254634(a1, a2, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v34 + 12) = 2080;
    uint64_t v35 = URL.description.getter();
    uint64_t v49 = sub_100254634(v35, v36, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "IPA Handler: Successful app install '%s' for URL %s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }

  uint64_t v43 = 1;
  return v48(v43);
}

uint64_t sub_1003B7E6C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1 && (*(unsigned char *)(result + 32) & 1) != 0 && v1 != 1)
  {
    uint64_t v2 = 33;
    while (1)
    {
      uint64_t v3 = v2 - 31;
      if (__OFADD__(v2 - 32, 1)) {
        break;
      }
      int v4 = *(unsigned __int8 *)(result + v2++);
      if (v4 != 1 || v3 == v1) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    sub_10000A844(&qword_1009710A8);
    return CheckedContinuation.resume(returning:)();
  }
  return result;
}

uint64_t type metadata accessor for SDAirDropContentHandlerIPA()
{
  return self;
}

uint64_t sub_1003B7F24@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerIPA();
  uint64_t result = swift_allocObject();
  *a1 = result;
  return result;
}

uint64_t sub_1003B7F58(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1009713A8 + dword_1009713A8);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10024DEC4;
  return v5(a1);
}

uint64_t sub_1003B8004(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  return SFProgressTask.init(_:initialProgress:operation:file:line:)();
}

uint64_t sub_1003B80DC(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_1003B8104(uint64_t a1, os_unfair_lock_s *a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  uint64_t v6 = a2 + 4;
  os_unfair_lock_lock(a2 + 4);
  sub_1003B9600();
  os_unfair_lock_unlock(v6);
  dispatch_group_leave(a5);
}

void sub_1003B818C(uint64_t a1, char a2)
{
  uint64_t v3 = sub_10000A844(&qword_100971070);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(SFAirDropReceive.AskRequest.files.getter() + 16);
  swift_bridgeObjectRelease();
  if (v10 != 1) {
    goto LABEL_7;
  }
  uint64_t v11 = SFAirDropReceive.AskRequest.files.getter();
  if (*(void *)(v11 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v5, v11 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_10000A7E8((uint64_t)v5, &qword_100971070);
LABEL_7:
    sub_10000A844(&qword_10096D760);
    uint64_t inited = swift_initStackObject();
    long long v32 = xmmword_10076E7A0;
    *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
    *(void *)(inited + 32) = 4280393;
    *(void *)(inited + 40) = 0xE300000000000000;
    *(void *)(inited + 48) = v10;
    uint64_t v33 = 0x545F4E5245444F4DLL;
    unint64_t v34 = 0xEF524546534E4152;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13._countAndFlagsBits = 95;
    v13._object = (void *)0xE100000000000000;
    String.append(_:)(v13);
    v14._countAndFlagsBits = 4280393;
    v14._object = (void *)0xE300000000000000;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    if (v10 > 1)
    {
      v15._countAndFlagsBits = 0x4C4152554C505FLL;
      v15._object = (void *)0xE700000000000000;
      String.append(_:)(v15);
    }
    swift_bridgeObjectRelease();
    if (a2)
    {
      v16._countAndFlagsBits = 0x4C4154495041435FLL;
      v16._object = (void *)0xEC00000044455A49;
      String.append(_:)(v16);
    }
    v17._countAndFlagsBits = 0x545845545FLL;
    v17._object = (void *)0xE500000000000000;
    String.append(_:)(v17);
    swift_setDeallocating();
    sub_10000A844((uint64_t *)&unk_100977CB0);
    swift_arrayDestroy();
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v19 = (id)SFLocalizedStringForKey();

    if (v19)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10000A844((uint64_t *)&unk_10096EE60);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = v32;
      *(void *)(v20 + 56) = &type metadata for Int;
      *(void *)(v20 + 64) = &protocol witness table for Int;
      *(void *)(v20 + 32) = v10;
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  sub_10000A844(&qword_10096D760);
  uint64_t v21 = swift_initStackObject();
  long long v32 = xmmword_10076E7A0;
  *(_OWORD *)(v21 + 16) = xmmword_10076E7A0;
  strcpy((char *)(v21 + 32), "IPA_WITH_TITLE");
  *(unsigned char *)(v21 + 47) = -18;
  *(void *)(v21 + 48) = 1;
  uint64_t v33 = 0x545F4E5245444F4DLL;
  unint64_t v34 = 0xEF524546534E4152;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22._countAndFlagsBits = 95;
  v22._object = (void *)0xE100000000000000;
  String.append(_:)(v22);
  v23._countAndFlagsBits = 0x485449575F415049;
  v23._object = (void *)0xEE00454C5449545FLL;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a2)
  {
    v24._countAndFlagsBits = 0x4C4154495041435FLL;
    v24._object = (void *)0xEC00000044455A49;
    String.append(_:)(v24);
  }
  v25._countAndFlagsBits = 0x545845545FLL;
  v25._object = (void *)0xE500000000000000;
  String.append(_:)(v25);
  swift_setDeallocating();
  sub_10000A844((uint64_t *)&unk_100977CB0);
  swift_arrayDestroy();
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v27 = (id)SFLocalizedStringForKey();

  if (v27)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = v32;
    uint64_t v29 = SFAirDropReceive.AskRequest.ItemInfo.fileName.getter();
    uint64_t v31 = v30;
    *(void *)(v28 + 56) = &type metadata for String;
    *(void *)(v28 + 64) = sub_1002E695C();
    *(void *)(v28 + 32) = v29;
    *(void *)(v28 + 40) = v31;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_1003B8780(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for SFAirDropReceive.AskRequest();
  v1[6] = v3;
  v1[7] = *(void *)(v3 - 8);
  v1[8] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  v1[9] = static AirDropActor.shared;
  return _swift_task_switch(sub_1003B88D8, v4, 0);
}

uint64_t sub_1003B88D8()
{
  *(void *)(v0 + 80) = self;
  type metadata accessor for MainActor();
  *(void *)(v0 + 88) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1003B897C, v2, v1);
}

uint64_t sub_1003B897C()
{
  uint64_t v1 = *(void **)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 72);
  swift_release();
  *(unsigned char *)(v0 + 100) = [v1 isRunningInStoreDemoMode];
  return _swift_task_switch(sub_1003B89FC, v2, 0);
}

id sub_1003B89FC()
{
  if ((*(unsigned char *)(v0 + 100) & 1) == 0)
  {
    id result = [self sharedConnection];
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v7 = result;
    unsigned int v8 = [result isAirDropAppInstallationAllowed];

    if (v8)
    {
      uint64_t v10 = *(void *)(v0 + 56);
      uint64_t v9 = *(void *)(v0 + 64);
      uint64_t v11 = *(void *)(v0 + 48);
      uint64_t v12 = *(void *)(v0 + 16);
      uint64_t v13 = *(void *)(SFAirDropReceive.AskRequest.files.getter() + 16);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v12, v11);
      uint64_t v15 = *(void *)(v0 + 56);
      uint64_t v14 = *(void *)(v0 + 64);
      uint64_t v16 = *(void *)(v0 + 48);
      if (v13)
      {
        uint64_t v17 = *(void *)(SFAirDropReceive.AskRequest.urlItems.getter() + 16);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
        if (!v17)
        {
          uint64_t v18 = SFAirDropReceive.AskRequest.files.getter();
          uint64_t v19 = *(void *)(v18 + 16);
          if (!v19)
          {
            swift_bridgeObjectRelease();
LABEL_27:
            if (SFAirDropReceive.AskRequest.senderIsMe.getter())
            {
              if (qword_100969D58 != -1) {
                swift_once();
              }
              uint64_t v32 = type metadata accessor for Logger();
              sub_10000B47C(v32, (uint64_t)qword_1009712C8);
              uint64_t v2 = Logger.logObject.getter();
              os_log_type_t v33 = static os_log_type_t.default.getter();
              if (!os_log_type_enabled(v2, v33))
              {
                uint64_t v31 = 1;
                goto LABEL_41;
              }
              unint64_t v34 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)unint64_t v34 = 0;
              _os_log_impl((void *)&_mh_execute_header, v2, v33, "IPA Handler: Transfer is me, can handle.", v34, 2u);
              uint64_t v31 = 1;
            }
            else
            {
              id v35 = [self defaultManager];
              NSString v36 = String._bridgeToObjectiveC()();
              uint64_t v31 = (uint64_t)[v35 fileExistsAtPath:v36];

              if (qword_100969D58 != -1) {
                swift_once();
              }
              uint64_t v37 = type metadata accessor for Logger();
              sub_10000B47C(v37, (uint64_t)qword_1009712C8);
              uint64_t v2 = Logger.logObject.getter();
              os_log_type_t v38 = static os_log_type_t.default.getter();
              if (!os_log_type_enabled(v2, v38)) {
                goto LABEL_41;
              }
              os_log_type_t v39 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)os_log_type_t v39 = 67109120;
              *(_DWORD *)(v0 + 96) = v31;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              _os_log_impl((void *)&_mh_execute_header, v2, v38, "IPA Handler: Developer settings bundle exists? %{BOOL}d", v39, 8u);
            }
            goto LABEL_25;
          }
          uint64_t v20 = *(void *)(v0 + 32);
          Swift::String v22 = *(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 16);
          uint64_t v21 = v20 + 16;
          unint64_t v23 = v18 + ((*(unsigned __int8 *)(v21 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 64));
          uint64_t v42 = *(void *)(v21 + 56);
          uint64_t v43 = v22;
          swift_bridgeObjectRetain();
          while (1)
          {
            uint64_t v24 = *(void *)(v0 + 40);
            uint64_t v25 = *(void *)(v0 + 24);
            v43(v24, v23, v25);
            SFAirDropReceive.AskRequest.ItemInfo.fileName.getter();
            NSString v26 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v27 = [v26 pathExtension];

            static String._unconditionallyBridgeFromObjectiveC(_:)();
            NSString v28 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            LODWORD(v26) = SFIsIPA();

            (*(void (**)(uint64_t, uint64_t))(v21 - 8))(v24, v25);
            if (!v26) {
              break;
            }
            v23 += v42;
            if (!--v19)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_27;
            }
          }
          swift_bridgeObjectRelease_n();
          if (qword_100969D58 != -1) {
            swift_once();
          }
          uint64_t v40 = type metadata accessor for Logger();
          sub_10000B47C(v40, (uint64_t)qword_1009712C8);
          uint64_t v2 = Logger.logObject.getter();
          os_log_type_t v3 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v2, v3))
          {
            uint64_t v4 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v4 = 0;
            uint64_t v5 = "IPA Handler: File is not IPA, ignoring...";
            goto LABEL_24;
          }
          goto LABEL_40;
        }
      }
      else
      {
        (*(void (**)(void, void))(v15 + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
      }
      if (qword_100969D58 != -1) {
        swift_once();
      }
      uint64_t v30 = type metadata accessor for Logger();
      sub_10000B47C(v30, (uint64_t)qword_1009712C8);
      uint64_t v2 = Logger.logObject.getter();
      os_log_type_t v3 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v2, v3))
      {
        uint64_t v4 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v4 = 0;
        uint64_t v5 = "IPA Handler: isJustFiles is false";
        goto LABEL_24;
      }
    }
    else
    {
      if (qword_100969D58 != -1) {
        swift_once();
      }
      uint64_t v29 = type metadata accessor for Logger();
      sub_10000B47C(v29, (uint64_t)qword_1009712C8);
      uint64_t v2 = Logger.logObject.getter();
      os_log_type_t v3 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v2, v3))
      {
        uint64_t v4 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v4 = 0;
        uint64_t v5 = "IPA Handler: AirDrop app installation not allowed";
        goto LABEL_24;
      }
    }
LABEL_40:
    uint64_t v31 = 0;
    goto LABEL_41;
  }
  if (qword_100969D58 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_1009712C8);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v2, v3)) {
    goto LABEL_40;
  }
  uint64_t v4 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v4 = 0;
  uint64_t v5 = "IPA Handler: Device running in store demo mode";
LABEL_24:
  _os_log_impl((void *)&_mh_execute_header, v2, v3, v5, v4, 2u);
  uint64_t v31 = 0;
LABEL_25:
  swift_slowDealloc();
LABEL_41:

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return (id)v41(v31);
}

uint64_t sub_1003B90D8()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003B9118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_10000A6F4;
  return sub_1003B679C(a1, a2, a3, v9, v8);
}

uint64_t sub_1003B91DC(size_t a1)
{
  return sub_1003B6ADC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1003B91E4()
{
  uint64_t v1 = sub_10000A844(&qword_1009710A8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003B9278(uint64_t a1)
{
  sub_10000A844(&qword_1009710A8);

  return sub_1003B7E6C(a1);
}

uint64_t sub_1003B92EC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003B9324()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003B9364(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003B9374()
{
  return swift_release();
}

uint64_t sub_1003B937C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003B93C4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003B93FC(char a1)
{
  uint64_t v2 = *(uint64_t (**)(char *))(v1 + 16);
  char v4 = a1;
  return v2(&v4);
}

uint64_t sub_1003B9434()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1003B94DC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v3 + v8;
  uint64_t v10 = v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *(uint64_t (**)(uint64_t))v10;
  uint64_t v12 = *(void *)(v10 + 8);

  return sub_1003B7734(a1, a2, a3, v9, v11, v12);
}

uint64_t sub_1003B9594(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003B95DC()
{
  return sub_1003B64F0(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), **(unsigned char **)(v0 + 32));
}

uint64_t sub_1003B9600()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1003B9630()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_1009713C8);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_1009713C8);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1003B96F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SFAirDrop.TransferType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A844(&qword_10096D8B8);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002E5BCC(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10000A7E8((uint64_t)v8, &qword_10096D8B8);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    sub_1003BBDF0((uint64_t)v8, (uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
    SFAirDropSend.Request.type.getter();
    uint64_t v13 = sub_1003BA1CC((uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1003BBE58((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
    return v13;
  }
  return result;
}

uint64_t sub_1003B9980(uint64_t a1)
{
  uint64_t v2 = sub_10000A844(&qword_10096D8B8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v15 - v10;
  if (*(void *)(a1 + 16) != 1) {
    return 2;
  }
  sub_1002E5BCC(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    sub_1003BBDF0((uint64_t)v4, (uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1003BBD88((uint64_t)v11, (uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t EnumCaseMultiPayload = (int)swift_getEnumCaseMultiPayload();
    uint64_t v13 = *(void *)((char *)&unk_100774408 + EnumCaseMultiPayload * 8);
    sub_1003BBE58((uint64_t)v9, (uint64_t (*)(void))off_1008D8770[EnumCaseMultiPayload]);
    sub_1003BBE58((uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
    return v13;
  }
  sub_10000A7E8((uint64_t)v4, &qword_10096D8B8);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003B9BCC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SFAirDrop.DeviceRelationship();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A844(&qword_10096D8B8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002E5BCC(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10000A7E8((uint64_t)v8, &qword_10096D8B8);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    sub_1003BBDF0((uint64_t)v8, (uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1003143B4((uint64_t)v5);
    uint64_t v13 = SFAirDrop.DeviceRelationship.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1003BBE58((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
    return v13;
  }
  return result;
}

uint64_t sub_1003B9E44()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SFAirDropSend.Failure();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v22 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v22 - v10;
  uint64_t v12 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v1, v12);
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v16 == enum case for SFAirDropSend.Transfer.Metrics.TransferResult.failure(_:))
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v11, v15, v2);
    uint64_t v17 = *(void (**)(char *, void, uint64_t))(v3 + 104);
    v17(v9, enum case for SFAirDropSend.Failure.cancelled(_:), v2);
    char v18 = static SFAirDropSend.Failure.== infix(_:_:)();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v3 + 8);
    v19(v9, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v11, v2);
    if (v18)
    {
      v19(v6, v2);
      v19(v11, v2);
      return 2;
    }
    else
    {
      v17(v9, enum case for SFAirDropSend.Failure.receiverDeclined(_:), v2);
      char v21 = static SFAirDropSend.Failure.== infix(_:_:)();
      v19(v9, v2);
      v19(v6, v2);
      v19(v11, v2);
      if (v21) {
        return 2;
      }
      else {
        return 1;
      }
    }
  }
  else if (v16 == enum case for SFAirDropSend.Transfer.Metrics.TransferResult.success(_:))
  {
    return 0;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1003BA1CC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003BBD88(v2, (uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    int v11 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
    int v12 = enum case for SFAirDrop.TransferType.exchange(_:);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1003BBE58((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
    if (v11 == v12) {
      return 0x706F7264656D616ELL;
    }
    else {
      return 0x2D706F7264726961;
    }
  }
  else
  {
    sub_1003BBE58((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
    return 0x706F7264726961;
  }
}

uint64_t type metadata accessor for SDAirDropTelemetry()
{
  return self;
}

uint64_t sub_1003BA418(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10024BCEC();
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v7;
  uint64_t v11 = v8;
  uint64_t v12 = v9;
  uint64_t v13 = (void *)*a5;
  unint64_t v15 = sub_1005838BC(v7, v8);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v19 = v14;
  if (v13[3] >= v18)
  {
    if (a4)
    {
      uint64_t v22 = (void *)*a5;
      if (v14) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_10058DB14();
      uint64_t v22 = (void *)*a5;
      if (v19) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v22[(v15 >> 6) + 8] |= 1 << v15;
    uint64_t v25 = (uint64_t *)(v22[6] + 16 * v15);
    *uint64_t v25 = v10;
    v25[1] = v11;
    *(void *)(v22[7] + 8 * v15) = v12;
    uint64_t v26 = v22[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v22[2] = v28;
LABEL_13:
    sub_10024BCEC();
    if (v30)
    {
      uint64_t v32 = v29;
      uint64_t v33 = v30;
      uint64_t v34 = v31;
      do
      {
        uint64_t v40 = (void *)*a5;
        unint64_t v42 = sub_1005838BC(v32, v33);
        uint64_t v43 = v40[2];
        BOOL v44 = (v41 & 1) == 0;
        uint64_t v45 = v43 + v44;
        if (__OFADD__(v43, v44)) {
          goto LABEL_25;
        }
        char v46 = v41;
        if (v40[3] < v45)
        {
          sub_1005874F8(v45, 1);
          uint64_t v47 = sub_1005838BC(v32, v33);
          if ((v46 & 1) != (v48 & 1)) {
            goto LABEL_27;
          }
          unint64_t v42 = v47;
        }
        uint64_t v49 = (void *)*a5;
        if (v46)
        {
          swift_bridgeObjectRelease();
          uint64_t v35 = v49[7];
          uint64_t v36 = 8 * v42;

          *(void *)(v35 + v36) = v34;
        }
        else
        {
          v49[(v42 >> 6) + 8] |= 1 << v42;
          uint64_t v50 = (uint64_t *)(v49[6] + 16 * v42);
          *uint64_t v50 = v32;
          v50[1] = v33;
          *(void *)(v49[7] + 8 * v42) = v34;
          uint64_t v51 = v49[2];
          BOOL v27 = __OFADD__(v51, 1);
          uint64_t v52 = v51 + 1;
          if (v27) {
            goto LABEL_26;
          }
          v49[2] = v52;
        }
        sub_10024BCEC();
        uint64_t v32 = v37;
        uint64_t v33 = v38;
        uint64_t v34 = v39;
      }
      while (v38);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_10024D330();
    return swift_release();
  }
  sub_1005874F8(v18, a4 & 1);
  uint64_t v20 = sub_1005838BC(v10, v11);
  if ((v19 & 1) == (v21 & 1))
  {
    unint64_t v15 = v20;
    uint64_t v22 = (void *)*a5;
    if ((v19 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t v23 = v22[7];
    uint64_t v24 = 8 * v15;

    *(void *)(v23 + v24) = v12;
    goto LABEL_13;
  }
LABEL_27:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

id sub_1003BA700@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  id v4 = (id)a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v4;
  swift_bridgeObjectRetain();

  return v4;
}

void sub_1003BA74C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a3;
  uint64_t v25 = a2;
  uint64_t v23 = a1;
  uint64_t v26 = type metadata accessor for SFAirDrop.TransferType();
  uint64_t v24 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  id v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for SFAirDrop.DeviceRelationship();
  uint64_t v5 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SFAirDropSend.Failure();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A844(&qword_100971478);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007709D0;
  strcpy((char *)(inited + 32), "failureSubType");
  *(unsigned char *)(inited + 47) = -18;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v21, v8);
  if ((*(unsigned int (**)(char *, uint64_t))(v9 + 88))(v11, v8) == enum case for SFAirDropSend.Transfer.Metrics.TransferResult.failure(_:))
  {
    (*(void (**)(char *, uint64_t))(v9 + 96))(v11, v8);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    SFAirDropSend.Failure.errorDescription.getter();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 48) = v17;
  *(void *)(inited + 56) = 0xD000000000000010;
  *(void *)(inited + 64) = 0x80000001007BB6D0;
  sub_1003143B4((uint64_t)v7);
  SFAirDrop.DeviceRelationship.rawValue.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v22);
  *(NSNumber *)(inited + 72) = Int._bridgeToObjectiveC()();
  *(void *)(inited + 80) = 1701869940;
  *(void *)(inited + 88) = 0xE400000000000000;
  SFAirDropSend.Request.type.getter();
  sub_1003BA1CC((uint64_t)v4);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v26);
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = v18;
  sub_100245E58(inited);
  NSString v19 = String._bridgeToObjectiveC()();
  sub_10031F3F4();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  SFMetricsLog();
}

void sub_1003BABE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v129 = a8;
  uint64_t v113 = a4;
  uint64_t v132 = a3;
  uint64_t v136 = a2;
  uint64_t v139 = a5;
  uint64_t v140 = a1;
  sub_1003BBC44(a5, (uint64_t)v142);
  uint64_t v115 = v142[1];
  uint64_t v116 = v142[3];
  uint64_t v117 = v142[6];
  uint64_t v118 = v142[8];
  uint64_t v114 = v142[10];
  unint64_t v119 = v142[12];
  uint64_t v120 = v142[11];
  uint64_t v10 = sub_10000A844(&qword_100970BC0);
  __chkstk_darwin(v10 - 8);
  uint64_t v135 = (uint64_t)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SDAirDropSendConnectionTelemetry(0);
  uint64_t v133 = *(void *)(v12 - 8);
  uint64_t v134 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  v137 = (char *)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v101 - v15;
  uint64_t v17 = type metadata accessor for SFAirDrop.DeviceRelationship();
  uint64_t v111 = *(void *)(v17 - 8);
  uint64_t v112 = v17;
  __chkstk_darwin(v17);
  uint64_t v110 = (uint64_t)&v101 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for SFAirDrop.TransferType();
  uint64_t v106 = *(void *)(v19 - 8);
  uint64_t v107 = v19;
  __chkstk_darwin(v19);
  uint64_t v105 = (char *)&v101 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10000A844(&qword_10096D8B8);
  __chkstk_darwin(v21 - 8);
  uint64_t v130 = (uint64_t)&v101 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v128 = *(void *)(v131 - 8);
  uint64_t v23 = __chkstk_darwin(v131);
  uint64_t v108 = (uint64_t)&v101 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v109 = (uint64_t)&v101 - v25;
  uint64_t v26 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult();
  uint64_t v126 = *(void *)(v26 - 8);
  uint64_t v127 = v26;
  __chkstk_darwin(v26);
  v125 = (char *)&v101 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for SFAirDropSend.Failure();
  uint64_t v103 = *(void *)(v28 - 8);
  uint64_t v104 = v28;
  __chkstk_darwin(v28);
  uint64_t v102 = (char *)&v101 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for UUID();
  uint64_t v123 = *(void *)(v30 - 8);
  uint64_t v124 = v30;
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v101 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v33 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v35 = (char *)&v101 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10000A844(&qword_10097F260);
  __chkstk_darwin(v36 - 8);
  uint64_t v38 = (char *)&v101 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_10000A844(&qword_10096DF68);
  __chkstk_darwin(v39 - 8);
  char v41 = (char *)&v101 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10024A330(a6, (uint64_t)v41, &qword_10096DF68);
  uint64_t v42 = _s14descr1008C92C9V13UploadRequestVMa();
  int v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 48))(v41, 1, v42);
  v138 = v16;
  if (v43 == 1)
  {
    sub_10000A7E8((uint64_t)v41, &qword_10096DF68);
    uint64_t v121 = 0;
  }
  else
  {
    uint64_t v121 = *(void *)&v41[*(int *)(v42 + 20)];
    sub_1003BBE58((uint64_t)v41, (uint64_t (*)(void))_s14descr1008C92C9V13UploadRequestVMa);
  }
  sub_10024A330(a7, (uint64_t)v38, &qword_10097F260);
  uint64_t v44 = type metadata accessor for SFNWInterfaceType();
  uint64_t v45 = *(void *)(v44 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v38, 1, v44) == 1)
  {
    sub_10000A7E8((uint64_t)v38, &qword_10097F260);
  }
  else
  {
    SFNWInterfaceType.description.getter();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v38, v44);
  }
  sub_10000A844(&qword_100971478);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007706B0;
  *(void *)(inited + 32) = 0x726566736E617274;
  *(void *)(inited + 40) = 0xEA00000000004449;
  SFAirDropSend.Request.id.getter();
  SFAirDrop.TransferIdentifier.id.getter();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v122);
  UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v32, v124);
  NSString v47 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 48) = v47;
  *(void *)(inited + 56) = 1702521203;
  *(void *)(inited + 64) = 0xE400000000000000;
  *(NSNumber *)(inited + 72) = Int._bridgeToObjectiveC()();
  *(void *)(inited + 80) = 0x726F70736E617274;
  *(void *)(inited + 88) = 0xE900000000000074;
  NSString v48 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = v48;
  *(void *)(inited + 104) = 0x746C75736572;
  *(void *)(inited + 112) = 0xE600000000000000;
  uint64_t v49 = v129;
  sub_1003B9E44();
  *(NSNumber *)(inited + 120) = Int._bridgeToObjectiveC()();
  strcpy((char *)(inited + 128), "failureSubType");
  *(unsigned char *)(inited + 143) = -18;
  uint64_t v51 = v125;
  uint64_t v50 = v126;
  uint64_t v52 = v49;
  uint64_t v53 = v127;
  (*(void (**)(char *, uint64_t, uint64_t))(v126 + 16))(v125, v52, v127);
  int v54 = (*(uint64_t (**)(char *, uint64_t))(v50 + 88))(v51, v53);
  uint64_t v55 = (uint64_t)v138;
  if (v54 == enum case for SFAirDropSend.Transfer.Metrics.TransferResult.failure(_:))
  {
    (*(void (**)(char *, uint64_t))(v50 + 96))(v51, v53);
    uint64_t v57 = v102;
    uint64_t v56 = v103;
    int64_t v58 = v51;
    uint64_t v59 = v104;
    (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v102, v58, v104);
    SFAirDropSend.Failure.errorDescription.getter();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v59);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v53);
  }
  uint64_t v60 = (uint64_t)v137;
  NSString v61 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 144) = v61;
  unint64_t v62 = sub_100245E58(inited);
  uint64_t v63 = v130;
  sub_10024A330(v132, v130, &qword_10096D8B8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v128 + 48))(v63, 1, v131) == 1)
  {
    sub_10000A7E8(v63, &qword_10096D8B8);
    uint64_t v64 = v113;
    if (*(void *)(v113 + 16))
    {
      sub_1003B96F8(v113);
      NSString v65 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v143[0] = v62;
      sub_100592944((uint64_t)v65, 1701869940, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
      uint64_t v67 = v143[0];
      swift_bridgeObjectRelease();
      sub_1003B9980(v64);
      Class isa = Int._bridgeToObjectiveC()().super.super.isa;
      char v69 = swift_isUniquelyReferenced_nonNull_native();
      v143[0] = v67;
      sub_100592944((uint64_t)isa, 0x6C6F636F746F7270, 0xE800000000000000, v69);
      uint64_t v70 = v143[0];
      swift_bridgeObjectRelease();
      sub_1003B9BCC(v64);
      Class v71 = Int._bridgeToObjectiveC()().super.super.isa;
      char v72 = swift_isUniquelyReferenced_nonNull_native();
      v143[0] = v70;
      sub_100592944((uint64_t)v71, 0xD000000000000010, 0x80000001007BB6D0, v72);
      unint64_t v62 = v143[0];
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v73 = v109;
    sub_1003BBDF0(v63, v109, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v74 = (uint64_t)v105;
    SFAirDropSend.Request.type.getter();
    sub_1003BA1CC(v74);
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v74, v107);
    NSString v75 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    char v76 = swift_isUniquelyReferenced_nonNull_native();
    v143[0] = v62;
    sub_100592944((uint64_t)v75, 1701869940, 0xE400000000000000, v76);
    uint64_t v77 = v143[0];
    swift_bridgeObjectRelease();
    uint64_t v78 = v108;
    sub_1003BBD88(v73, v108, type metadata accessor for SDAirDropDiscoveredEndpoint);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1003BBE58(v78, (uint64_t (*)(void))off_1008D8790[EnumCaseMultiPayload]);
    Class v80 = Int._bridgeToObjectiveC()().super.super.isa;
    char v81 = swift_isUniquelyReferenced_nonNull_native();
    v143[0] = v77;
    sub_100592944((uint64_t)v80, 0x6C6F636F746F7270, 0xE800000000000000, v81);
    uint64_t v82 = v143[0];
    swift_bridgeObjectRelease();
    uint64_t v83 = v110;
    sub_1003143B4(v110);
    SFAirDrop.DeviceRelationship.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v83, v112);
    Class v84 = Int._bridgeToObjectiveC()().super.super.isa;
    char v85 = swift_isUniquelyReferenced_nonNull_native();
    v143[0] = v82;
    sub_100592944((uint64_t)v84, 0xD000000000000010, 0x80000001007BB6D0, v85);
    unint64_t v62 = v143[0];
    swift_bridgeObjectRelease();
    sub_1003BBE58(v73, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  uint64_t v86 = v139;
  uint64_t v87 = v135;
  sub_10024A330(v136, v135, &qword_100970BC0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v87, 1, v134) == 1)
  {
    sub_10000A7E8(v87, &qword_100970BC0);
  }
  else
  {
    sub_1003BBDF0(v87, v55, type metadata accessor for SDAirDropSendConnectionTelemetry);
    uint64_t v88 = sub_1002F6BD8();
    char v89 = swift_isUniquelyReferenced_nonNull_native();
    v143[0] = v62;
    sub_1003BA418((uint64_t)v88, (uint64_t)sub_1003BA700, 0, v89, v143);
    unint64_t v62 = v143[0];
    swift_bridgeObjectRelease();
    if (qword_100969D60 != -1) {
      swift_once();
    }
    uint64_t v90 = type metadata accessor for Logger();
    sub_10000B47C(v90, (uint64_t)qword_1009713C8);
    sub_1003BBD88(v55, v60, type metadata accessor for SDAirDropSendConnectionTelemetry);
    uint64_t v91 = Logger.logObject.getter();
    os_log_type_t v92 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v91, v92))
    {
      uint64_t v93 = (uint8_t *)swift_slowAlloc();
      v143[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v93 = 136315138;
      uint64_t v94 = sub_1002F6DA4();
      uint64_t v141 = sub_100254634(v94, v95, v143);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1003BBE58(v60, type metadata accessor for SDAirDropSendConnectionTelemetry);
      _os_log_impl((void *)&_mh_execute_header, v91, v92, "Performance: %s", v93, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v86 = v139;
      swift_slowDealloc();

      uint64_t v96 = (uint64_t)v138;
    }
    else
    {

      sub_1003BBE58(v60, type metadata accessor for SDAirDropSendConnectionTelemetry);
      uint64_t v96 = v55;
    }
    sub_1003BBE58(v96, type metadata accessor for SDAirDropSendConnectionTelemetry);
  }
  sub_1003BBC44(v86, (uint64_t)v143);
  if (v143[1])
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100278C78(v120, v119);
    NSString v97 = String._bridgeToObjectiveC()();
    char v98 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v141 = v62;
    sub_100592944((uint64_t)v97, 0xD000000000000012, 0x80000001007BB750, v98);
    swift_bridgeObjectRelease();
    sub_1003BBCAC(v86);
  }
  NSString v99 = String._bridgeToObjectiveC()();
  sub_10031F3F4();
  Class v100 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  SFMetricsLog();
}

uint64_t sub_1003BBC44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_100970D88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003BBCAC(uint64_t a1)
{
  return a1;
}

void sub_1003BBD00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100250CB0(a12, a13);
  }
}

uint64_t sub_1003BBD88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003BBDF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003BBE58(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1003BBEB8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16))
  {
    sub_10000A844(&qword_100971478);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1007706B0;
    *(void *)(inited + 32) = 0x726566736E617274;
    *(void *)(inited + 40) = 0xEA00000000004449;
    LODWORD(v23) = a3;
    SFAirDropSend.Request.id.getter();
    SFAirDrop.TransferIdentifier.id.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    UUID.uuidString.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    *(void *)(inited + 48) = v14;
    *(void *)(inited + 56) = 1701869940;
    *(void *)(inited + 64) = 0xE400000000000000;
    sub_1003B96F8(a2);
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    *(void *)(inited + 72) = v15;
    *(void *)(inited + 80) = 0x6C6F636F746F7270;
    *(void *)(inited + 88) = 0xE800000000000000;
    sub_1003B9980(a2);
    *(NSNumber *)(inited + 96) = Int._bridgeToObjectiveC()();
    *(void *)(inited + 104) = 0xD000000000000010;
    *(void *)(inited + 112) = 0x80000001007BB6D0;
    sub_1003B9BCC(a2);
    *(NSNumber *)(inited + 120) = Int._bridgeToObjectiveC()();
    *(void *)(inited + 128) = 0xD000000000000015;
    *(void *)(inited + 136) = 0x80000001007BB7E0;
    *(NSNumber *)(inited + 144) = Bool._bridgeToObjectiveC()();
    sub_100245E58(inited);
    NSString v16 = String._bridgeToObjectiveC()();
    sub_10031F3F4();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    SFMetricsLog();
  }
  else
  {
    if (qword_100969D60 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_10000B47C(v18, (uint64_t)qword_1009713C8);
    os_log_t v23 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v19, "No send endpoints for logging send start", v20, 2u);
      swift_slowDealloc();
    }
    os_log_t v21 = v23;
  }
}

uint64_t sub_1003BC2BC(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for URL();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v2[7] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferType();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_1003BC440, v5, 0);
}

void sub_1003BC440()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  SFAirDropReceive.AskRequest.type.getter();
  char v4 = SFAirDrop.TransferType.isLinks.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if ((v4 & 1) == 0)
  {
    uint64_t v24 = 0;
LABEL_28:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (void (*)(uint64_t))v0[1];
    v25(v24);
    return;
  }
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[3];
  uint64_t v7 = SFAirDropReceive.AskRequest.urlItems.getter();
  int64_t v8 = 0;
  uint64_t v26 = v7 + 56;
  uint64_t v9 = -1;
  uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
  if (-v10 < 64) {
    uint64_t v9 = ~(-1 << -(char)v10);
  }
  unint64_t v11 = v9 & *(void *)(v7 + 56);
  uint64_t v28 = v7;
  int64_t v27 = (unint64_t)(63 - v10) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v13 = v12 | (v8 << 6);
      goto LABEL_21;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v14 >= v27) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v27) {
        goto LABEL_26;
      }
      unint64_t v15 = *(void *)(v26 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v27) {
          goto LABEL_26;
        }
        unint64_t v15 = *(void *)(v26 + 8 * v8);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_21:
    uint64_t v17 = v0[7];
    uint64_t v18 = v0[4];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))(v17, *(void *)(v28 + 48) + *(void *)(v5 + 72) * v13, v18);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v17, 0, 1, v18);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v17, 1, v18) == 1)
    {
      swift_release();
      uint64_t v24 = 1;
      goto LABEL_27;
    }
    uint64_t v19 = v0[6];
    uint64_t v20 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 32))(v19, v0[7], v20);
    sub_1003ACB84(&off_1008D2698);
    uint64_t v22 = v21;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v20);
    os_log_t v23 = *(void **)(v6 + 16);
    *(void *)(v6 + 16) = v22;

    if (!*(void *)(v6 + 16))
    {
      swift_release();
      uint64_t v24 = 0;
LABEL_27:
      swift_arrayDestroy();
      goto LABEL_28;
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v27)
  {
LABEL_26:
    uint64_t v24 = 1;
    (*(void (**)(void, uint64_t, uint64_t, void))(v5 + 56))(v0[7], 1, 1, v0[4]);
    swift_release();
    goto LABEL_27;
  }
  unint64_t v15 = *(void *)(v26 + 8 * v16);
  if (v15)
  {
    int64_t v8 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v8 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v8 >= v27) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v8);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_32:
  __break(1u);
}

uint64_t type metadata accessor for SDAirDropContentHandleriTunesULinks()
{
  return self;
}

uint64_t sub_1003BC7CC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandleriTunesULinks();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1003BC804(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_1003BC2BC(a1);
}

uint64_t sub_1003BC8A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_10097F1D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void **)(*(void *)v2 + 16);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v9 = type metadata accessor for SFAirDropReceive.ItemDestination();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  id v10 = v8;
  sub_10039FAA0(a1, v8, 1, a2);

  return sub_10024DFE8((uint64_t)v7);
}

void sub_1003BC9A4(uint64_t a1, char a2)
{
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = 95;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  v4._countAndFlagsBits = 0xD00000000000001ALL;
  v4._object = "IWORK_LINK_WITH_TITLE";
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  if (a2)
  {
    v5._countAndFlagsBits = 0x4C4154495041435FLL;
    v5._object = (void *)0xEC00000044455A49;
    String.append(_:)(v5);
  }
  v6._countAndFlagsBits = 0x545845545FLL;
  v6._object = (void *)0xE500000000000000;
  String.append(_:)(v6);
  sub_10000A844((uint64_t *)&unk_100977CB0);
  swift_arrayDestroy();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = (id)SFLocalizedStringForKey();

  if (v8)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003BCB48()
{
  return sub_1003BCB8C(_s15MacApprovePhoneV4FlowVMa, _s15MacApprovePhoneV4FlowVMa) & 1;
}

uint64_t sub_1003BCB8C(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  uint64_t v5 = type metadata accessor for SDAuthenticationCommonOperationInput();
  __chkstk_darwin(v5);
  NSString v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1(0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  unint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  int64_t v14 = (char *)&v28 - v13;
  __chkstk_darwin(v12);
  int64_t v16 = (char *)&v28 - v15;
  unint64_t v17 = *(void *)(v2 + *(int *)(v5 + 28));
  if (v17 - 9 < 2) {
    return 1;
  }
  BOOL v18 = v17 > 0xE;
  uint64_t v19 = (1 << v17) & 0x618E;
  uint64_t v20 = (char *)&v28 - v15;
  if (v18 || v19 == 0)
  {
    sub_1003BD018(v2, (uint64_t)v20, a2);
    sub_1003BD080((uint64_t)v16, a2);
    sub_1003BD018(v2, (uint64_t)v14, a2);
  }
  else
  {
    sub_1003BD018(v2, (uint64_t)v20, a2);
    sub_1003BD018((uint64_t)v16, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
    sub_1003BD080((uint64_t)v16, a2);
    char v22 = v7[*(int *)(v5 + 32)];
    sub_1003BD080((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
    sub_1003BD018(v2, (uint64_t)v14, a2);
    if ((v22 & 1) == 0)
    {
      sub_1003BD080((uint64_t)v14, a2);
      return 1;
    }
  }
  unint64_t v24 = *(void *)&v14[*(int *)(v5 + 28)];
  BOOL v18 = v24 > 0xE;
  uint64_t v25 = (1 << v24) & 0x658E;
  if (v18 || v25 == 0)
  {
    sub_1003BD018((uint64_t)v14, (uint64_t)v11, a2);
    sub_1003BD018((uint64_t)v11, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
    sub_1003BD080((uint64_t)v11, a2);
    sub_1003BD080((uint64_t)v14, a2);
    uint64_t v23 = v7[*(int *)(v5 + 32)];
    sub_1003BD080((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
  }
  else
  {
    sub_1003BD018((uint64_t)v14, (uint64_t)v11, a2);
    sub_1003BD080((uint64_t)v11, a2);
    sub_1003BD080((uint64_t)v14, a2);
    return 0;
  }
  return v23;
}

uint64_t sub_1003BCE18()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SDAuthenticationCommonOperationInput() + 28));
}

uint64_t sub_1003BCE3C()
{
  return sub_1003BCB8C(_s10NanoWalletV4FlowVMa, _s10NanoWalletV4FlowVMa) & 1;
}

uint64_t sub_1003BCE80()
{
  return sub_1003BCB8C(_s6UnpairV4FlowVMa, _s6UnpairV4FlowVMa) & 1;
}

uint64_t sub_1003BCEC4()
{
  return sub_1003BCB8C(_s15GuestModeUnlockV4FlowVMa, _s15GuestModeUnlockV4FlowVMa) & 1;
}

uint64_t sub_1003BCF08()
{
  return sub_1003BCB8C(_s14MacUnlockPhoneV4FlowVMa, _s14MacUnlockPhoneV4FlowVMa) & 1;
}

uint64_t sub_1003BCF4C()
{
  return sub_1003BCB8C(_s27GuestModeUnlockRegistrationV4FlowVMa, _s27GuestModeUnlockRegistrationV4FlowVMa) & 1;
}

uint64_t sub_1003BCF90()
{
  return sub_1003BCB8C(_s22GuestModeUnlockPairingV4FlowVMa, _s22GuestModeUnlockPairingV4FlowVMa) & 1;
}

uint64_t sub_1003BCFD4()
{
  return sub_1003BCB8C(_s8KeyCheckV4FlowVMa, _s8KeyCheckV4FlowVMa) & 1;
}

uint64_t sub_1003BD018(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003BD080(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1003BD0E4()
{
  return 0x100000000;
}

uint64_t sub_1003BD100()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100971568);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100971568);
  if (qword_100969CD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946C0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1003BD1C8()
{
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  sub_10026BB6C(v0 + 5, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  sub_10000A844(&qword_10096B540);
  Optional.tryUnwrap(_:file:line:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v1) {
    return v5;
  }
  return result;
}

uint64_t sub_1003BD2A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[23] = a2;
  v3[24] = a3;
  v3[22] = a1;
  v3[25] = type metadata accessor for AuthenticationSecurityRequest(0);
  v3[26] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Date();
  v3[27] = v4;
  v3[28] = *(void *)(v4 - 8);
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  return _swift_task_switch(sub_1003BD3A8, 0, 0);
}

uint64_t sub_1003BD3A8()
{
  uint64_t v37 = v0;
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput();
  uint64_t v3 = 0;
  int v4 = *(unsigned __int8 *)(v1 + *(int *)(v2 + 32));
  switch(*(void *)(v1 + *(int *)(v2 + 28)))
  {
    case 0:
    case 2:
      break;
    case 1:
      BOOL v5 = v4 == 0;
      uint64_t v6 = 96;
      uint64_t v7 = 31;
      goto LABEL_17;
    case 3:
      BOOL v5 = v4 == 0;
      uint64_t v6 = 2050;
      uint64_t v7 = 2688;
      goto LABEL_17;
    case 4:
      BOOL v5 = v4 == 0;
      uint64_t v6 = 256;
      uint64_t v7 = 3584;
      goto LABEL_17;
    case 5:
      uint64_t v3 = 34816;
      break;
    case 6:
      BOOL v5 = v4 == 0;
      uint64_t v6 = 47744;
      goto LABEL_9;
    case 7:
      BOOL v5 = v4 == 0;
      uint64_t v6 = 0x4000;
LABEL_9:
      uint64_t v7 = 2;
      goto LABEL_17;
    case 8:
    case 0xALL:
      uint64_t v3 = 128;
      break;
    case 9:
      BOOL v5 = v4 == 0;
      uint64_t v6 = 34816;
      goto LABEL_12;
    case 0xBLL:
      BOOL v5 = v4 == 0;
      uint64_t v6 = 43648;
LABEL_12:
      uint64_t v7 = 34818;
      goto LABEL_17;
    case 0xELL:
      BOOL v5 = v4 == 0;
      uint64_t v6 = 35456;
      uint64_t v7 = 34816;
LABEL_17:
      if (v5) {
        uint64_t v3 = v6;
      }
      else {
        uint64_t v3 = v7;
      }
      break;
    default:
      if (qword_100969BE8 != -1) {
        swift_once();
      }
      uint64_t v3 = qword_100994470;
      break;
  }
  sub_100278C8C(*(void *)(v0 + 184), v0 + 56);
  sub_10000A844(&qword_10096BDF0);
  sub_10000A844(&qword_100971980);
  if (swift_dynamicCast())
  {
    sub_1002AF688((long long *)(v0 + 96), v0 + 16);
    uint64_t v8 = *(void *)(v0 + 40);
    uint64_t v9 = *(void *)(v0 + 48);
    sub_10026BB6C((void *)(v0 + 16), v8);
    (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
    sub_10024D338(v0 + 16);
  }
  else
  {
    *(void *)(v0 + 128) = 0;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    sub_10000A7E8(v0 + 96, &qword_100971988);
    static Date.distantFuture.getter();
  }
  if (qword_100969D68 != -1) {
    swift_once();
  }
  uint64_t v10 = *(void *)(v0 + 232);
  uint64_t v11 = *(void *)(v0 + 240);
  uint64_t v12 = *(void *)(v0 + 216);
  uint64_t v13 = *(void *)(v0 + 224);
  uint64_t v14 = type metadata accessor for Logger();
  sub_10000B47C(v14, (uint64_t)qword_100971568);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  v15(v10, v11, v12);
  int64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v20 = *(void *)(v0 + 224);
  uint64_t v19 = *(void *)(v0 + 232);
  uint64_t v21 = *(void *)(v0 + 216);
  if (v18)
  {
    os_log_type_t type = v17;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v23 = String.init<A>(describing:)();
    *(void *)(v0 + 160) = sub_100254634(v23, v24, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    sub_1003CF140(&qword_100974530, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 168) = sub_100254634(v25, v26, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    int64_t v27 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v27(v19, v21);
    _os_log_impl((void *)&_mh_execute_header, v16, type, "%s: using requestingDeviceUnlockDate: %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    int64_t v27 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v27(*(void *)(v0 + 232), *(void *)(v0 + 216));
  }

  *(void *)(v0 + 248) = v27;
  uint64_t v28 = *(uint64_t **)(v0 + 208);
  uint64_t v29 = *(void **)(v0 + 192);
  v15((uint64_t)v28 + *(int *)(*(void *)(v0 + 200) + 20), *(void *)(v0 + 240), *(void *)(v0 + 216));
  *uint64_t v28 = v3;
  uint64_t v30 = (void *)(*sub_10026BB6C(v29, v29[3])
                 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager);
  swift_beginAccess();
  uint64_t v31 = *sub_10026BB6C(v30, v30[3]);
  uint64_t v32 = swift_task_alloc();
  *(void *)(v0 + 256) = v32;
  *(void *)(v32 + 16) = v31;
  *(void *)(v32 + 24) = v28;
  uint64_t v33 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v33;
  *uint64_t v33 = v0;
  v33[1] = sub_1003BD968;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v33, 0, 0, 0x6F6974616C6F6976, 0xEF293A726F66286ELL, sub_1003CEA74, v32, (char *)&type metadata for () + 8);
}

uint64_t sub_1003BD968()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1003BDB60;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1003BDA84;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003BDA84()
{
  uint64_t v1 = v0[30];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[31];
  uint64_t v3 = v0[27];
  uint64_t v5 = v0[22];
  uint64_t v4 = v0[23];
  sub_1003CF010(v0[26], type metadata accessor for AuthenticationSecurityRequest);
  v2(v1, v3);
  sub_100278C8C(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1003BDB60()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[31];
  uint64_t v2 = v0[30];
  uint64_t v3 = v0[27];
  uint64_t v4 = v0[26];
  swift_task_dealloc();
  sub_1003CF010(v4, type metadata accessor for AuthenticationSecurityRequest);
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1003BDC2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  return sub_1003BD2A4(a1, a2, a3);
}

uint64_t sub_1003BDCDC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_1003BDCFC, 0, 0);
}

id sub_1003BDCFC()
{
  id result = [self sharedMonitor];
  if (result)
  {
    uint64_t v2 = result;
    unsigned int v3 = [result bluetoothEnabled];

    if (v3)
    {
      sub_100278C8C(v0[3], v0[2]);
    }
    else
    {
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v5 = 17;
      *(void *)(v5 + 8) = 0xD000000000000015;
      *(void *)(v5 + 16) = 0x80000001007BB8C0;
      swift_willThrow();
    }
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return (id)v4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003BDE04(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = a2;
  v5[1] = sub_10000A6F0;
  return _swift_task_switch(sub_1003BDCFC, 0, 0);
}

uint64_t sub_1003BDEB4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_1003BDED4, 0, 0);
}

id sub_1003BDED4()
{
  id result = [self sharedMonitor];
  if (result)
  {
    uint64_t v2 = result;
    unsigned int v3 = [result wirelessEnabled];

    if (v3)
    {
      sub_100278C8C(v0[3], v0[2]);
    }
    else
    {
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v5 = 16;
      *(void *)(v5 + 8) = 0xD000000000000010;
      *(void *)(v5 + 16) = 0x80000001007BB8E0;
      swift_willThrow();
    }
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return (id)v4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003BDFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = a2;
  v5[1] = sub_10000A6F0;
  return _swift_task_switch(sub_1003BDED4, 0, 0);
}

uint64_t sub_1003BE08C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[8] = a2;
  v3[9] = a3;
  v3[7] = a1;
  return _swift_task_switch(sub_1003BE0B0, 0, 0);
}

uint64_t sub_1003BE0B0()
{
  sub_100278C8C(v0[9] + 40, (uint64_t)(v0 + 2));
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_10026BB6C(v0 + 2, v1);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(v1, v2))
  {
    sub_100278C8C(v0[8], v0[7]);
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v4 = 18;
    *(void *)(v4 + 8) = 0xD000000000000025;
    *(void *)(v4 + 16) = 0x80000001007BB900;
    swift_willThrow();
  }
  sub_10024D338((uint64_t)(v0 + 2));
  unsigned int v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1003BE1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[8] = a2;
  v7[9] = a3;
  v7[7] = a1;
  return _swift_task_switch(sub_1003BE0B0, 0, 0);
}

uint64_t sub_1003BE294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  return _swift_task_switch(sub_1003BE2B8, 0, 0);
}

uint64_t sub_1003BE2B8()
{
  uint64_t v1 = *(void *)(v0 + 88);
  sub_100278C8C(v1 + 40, v0 + 16);
  unint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for SDAuthenticationCommonOperationInput() + 28)) - 1;
  float v3 = 0.0;
  if (v2 <= 0xA) {
    float v3 = flt_100775DFC[v2];
  }
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  sub_10026BB6C((void *)(v0 + 16), v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 64))(v4, v5);
  float v8 = (float)((float)v7 / 10.0) + (float)v6;
  if (v3 <= v8)
  {
    sub_100278C8C(*(void *)(v0 + 80), *(void *)(v0 + 72));
    sub_10024D338(v0 + 16);
    BOOL v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    if (qword_100969D68 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000B47C(v9, (uint64_t)qword_100971568);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 134218240;
      *(double *)(v0 + 56) = v3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v12 + 12) = 2048;
      *(double *)(v0 + 56) = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Remote Device version is unsupported. Need: %f, got: %f", (uint8_t *)v12, 0x16u);
      swift_slowDealloc();
    }

    _StringGuts.grow(_:)(55);
    *(void *)(v0 + 56) = 0;
    *(void *)(v0 + 64) = 0xE000000000000000;
    v13._object = (void *)0x80000001007BB930;
    v13._countAndFlagsBits = 0xD00000000000002CLL;
    String.append(_:)(v13);
    Float.write<A>(to:)();
    v14._countAndFlagsBits = 0x203A746F67202CLL;
    v14._object = (void *)0xE700000000000000;
    String.append(_:)(v14);
    Float.write<A>(to:)();
    uint64_t v15 = *(void *)(v0 + 56);
    uint64_t v16 = *(void *)(v0 + 64);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v17 = 15;
    *(void *)(v17 + 8) = v15;
    *(void *)(v17 + 16) = v16;
    swift_willThrow();
    sub_10024D338(v0 + 16);
    BOOL v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v18();
}

uint64_t sub_1003BE5AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[10] = a2;
  v7[11] = a3;
  v7[9] = a1;
  return _swift_task_switch(sub_1003BE2B8, 0, 0);
}

uint64_t sub_1003BE66C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  return _swift_task_switch(sub_1003BE690, 0, 0);
}

uint64_t sub_1003BE690()
{
  uint64_t v1 = (void *)v0[13];
  uint64_t v30 = (uint64_t *)v0[11];
  sub_100278C8C(v0[12], (uint64_t)(v0 + 2));
  uint64_t v2 = v1[8];
  uint64_t v3 = v1[9];
  sub_10026BB6C(v1 + 5, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  uint64_t v6 = v5;
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v7);
  uint64_t v9 = (void (*)(void *, void))(*(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 32))(v0 + 7, v7, v8);
  uint64_t v11 = v10;
  uint64_t v12 = type metadata accessor for SDAuthenticationSessionMetrics();
  Swift::String v13 = (uint64_t *)(v11 + *(int *)(v12 + 80));
  *Swift::String v13 = v4;
  v13[1] = v6;
  swift_bridgeObjectRelease();
  v9(v0 + 7, 0);
  uint64_t v14 = v1[8];
  uint64_t v15 = v1[9];
  sub_10026BB6C(v1 + 5, v14);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
  uint64_t v18 = v17;
  uint64_t v19 = v0[5];
  uint64_t v20 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v19);
  uint64_t v21 = (void (*)(void *, void))(*(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 32))(v0 + 7, v19, v20);
  uint64_t v23 = (uint64_t *)(v22 + *(int *)(v12 + 84));
  *uint64_t v23 = v16;
  v23[1] = v18;
  swift_bridgeObjectRelease();
  v21(v0 + 7, 0);
  uint64_t v24 = v0[5];
  uint64_t v25 = v0[6];
  unint64_t v26 = sub_10026BB6C(v0 + 2, v24);
  v30[3] = v24;
  v30[4] = *(void *)(v25 + 8);
  int64_t v27 = sub_100278AE4(v30);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v27, v26, v24);
  sub_10024D338((uint64_t)(v0 + 2));
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_1003BE8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[12] = a2;
  v7[13] = a3;
  v7[11] = a1;
  return _swift_task_switch(sub_1003BE690, 0, 0);
}

uint64_t sub_1003BE98C(uint64_t a1, uint64_t a2)
{
  v2[12] = a1;
  v2[13] = a2;
  sub_10000A844((uint64_t *)&unk_100975040);
  v2[14] = swift_task_alloc();
  return _swift_task_switch(sub_1003BEA20, 0, 0);
}

uint64_t sub_1003BEA20()
{
  uint64_t v2 = (void *)v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = (uint64_t *)v0[12];
  sub_1003CF0DC((uint64_t)v2, (uint64_t)(v0 + 2));
  sub_10026BB6C(v2, v2[3]);
  Date.init()();
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 0, 1, v4);
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v5);
  uint64_t v7 = (void (*)(void *, void))(*(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 32))(v0 + 8, v5, v6);
  uint64_t v9 = v8;
  uint64_t v10 = type metadata accessor for SDAuthenticationSessionMetrics();
  sub_100340238(v1, v9 + *(int *)(v10 + 28));
  v7(v0 + 8, 0);
  uint64_t v11 = v0[5];
  uint64_t v12 = v0[6];
  Swift::String v13 = sub_10026BB6C(v0 + 2, v11);
  v3[3] = v11;
  v3[4] = *(void *)(v12 + 8);
  uint64_t v14 = sub_100278AE4(v3);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v14, v13, v11);
  sub_10024D338((uint64_t)(v0 + 2));
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1003BEBD4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  return sub_1003BE98C(a1, a2);
}

uint64_t sub_1003BEC74(uint64_t a1, uint64_t a2)
{
  v2[12] = a1;
  v2[13] = a2;
  sub_10000A844((uint64_t *)&unk_100975040);
  v2[14] = swift_task_alloc();
  return _swift_task_switch(sub_1003BED08, 0, 0);
}

uint64_t sub_1003BED08()
{
  uint64_t v2 = (void *)v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = (uint64_t *)v0[12];
  sub_1003CF0DC((uint64_t)v2, (uint64_t)(v0 + 2));
  sub_10026BB6C(v2, v2[3]);
  Date.init()();
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 0, 1, v4);
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v5);
  uint64_t v7 = (void (*)(void *, void))(*(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 32))(v0 + 8, v5, v6);
  sub_100340238(v1, v8);
  v7(v0 + 8, 0);
  uint64_t v9 = v0[5];
  uint64_t v10 = v0[6];
  uint64_t v11 = sub_10026BB6C(v0 + 2, v9);
  v3[3] = v9;
  v3[4] = *(void *)(v10 + 8);
  uint64_t v12 = sub_100278AE4(v3);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v12, v11, v9);
  sub_10024D338((uint64_t)(v0 + 2));
  swift_task_dealloc();
  Swift::String v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1003BEEA8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  return sub_1003BEC74(a1, a2);
}

uint64_t sub_1003BEF48(uint64_t a1, uint64_t a2)
{
  v2[26] = a1;
  v2[27] = a2;
  sub_10000A844((uint64_t *)&unk_100975040);
  v2[28] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Date();
  v2[29] = v3;
  v2[30] = *(void *)(v3 - 8);
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  return _swift_task_switch(sub_1003BF048, 0, 0);
}

uint64_t sub_1003BF048()
{
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v25 = (void *)(v0 + 16);
  sub_100278C8C(v1, v0 + 16);
  Date.init()();
  sub_100278C8C(v1, v0 + 96);
  sub_10000A844(&qword_100971F98);
  sub_10000A844(&qword_100971980);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 248);
    uint64_t v2 = *(void *)(v0 + 256);
    uint64_t v5 = *(void *)(v0 + 232);
    uint64_t v4 = *(void *)(v0 + 240);
    sub_1002AF688((long long *)(v0 + 136), v0 + 56);
    uint64_t v6 = *(void *)(v0 + 80);
    uint64_t v7 = *(void *)(v0 + 88);
    sub_10026BB6C((void *)(v0 + 56), v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v6, v7);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v3, v5);
    sub_10024D338(v0 + 56);
  }
  else
  {
    *(void *)(v0 + 168) = 0;
    *(_OWORD *)(v0 + 136) = 0u;
    *(_OWORD *)(v0 + 152) = 0u;
    sub_10000A7E8(v0 + 136, &qword_100971988);
  }
  uint64_t v24 = *(void *)(v0 + 256);
  uint64_t v9 = *(void *)(v0 + 232);
  uint64_t v8 = *(void *)(v0 + 240);
  uint64_t v10 = *(void *)(v0 + 224);
  uint64_t v11 = *(uint64_t **)(v0 + 208);
  (*(void (**)(uint64_t))(v8 + 16))(v10);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v9);
  uint64_t v13 = *(void *)(v0 + 40);
  uint64_t v12 = *(void *)(v0 + 48);
  sub_1002AF758((uint64_t)v25, v13);
  uint64_t v14 = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v0 + 176, v13, v12);
  uint64_t v16 = v15;
  uint64_t v17 = type metadata accessor for SDAuthenticationSessionMetrics();
  sub_100340238(v10, v16 + *(int *)(v17 + 32));
  v14(v0 + 176, 0);
  uint64_t v18 = *(void *)(v0 + 40);
  uint64_t v19 = *(void *)(v0 + 48);
  uint64_t v20 = sub_10026BB6C(v25, v18);
  v11[3] = v18;
  v11[4] = *(void *)(v19 + 8);
  uint64_t v21 = sub_100278AE4(v11);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v21, v20, v18);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v24, v9);
  sub_10024D338((uint64_t)v25);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_1003BF334(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  return sub_1003BEF48(a1, a2);
}

uint64_t sub_1003BF3D4(uint64_t a1, uint64_t a2)
{
  v2[11] = a1;
  v2[12] = a2;
  sub_10000A844((uint64_t *)&unk_100975040);
  v2[13] = swift_task_alloc();
  return _swift_task_switch(sub_1003BF468, 0, 0);
}

uint64_t sub_1003BF468()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = (uint64_t *)v0[11];
  sub_100278C8C(v0[12], (uint64_t)(v0 + 2));
  Date.init()();
  uint64_t v3 = type metadata accessor for Date();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 0, 1, v3);
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v4);
  uint64_t v6 = (void (*)(void *, void))(*(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 32))(v0 + 7, v4, v5);
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for SDAuthenticationSessionMetrics();
  sub_100340238(v1, v8 + *(int *)(v9 + 40));
  v6(v0 + 7, 0);
  uint64_t v10 = v0[5];
  uint64_t v11 = v0[6];
  uint64_t v12 = sub_10026BB6C(v0 + 2, v10);
  v2[3] = v10;
  v2[4] = *(void *)(v11 + 8);
  uint64_t v13 = sub_100278AE4(v2);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v13, v12, v10);
  sub_10024D338((uint64_t)(v0 + 2));
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1003BF60C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  return sub_1003BF3D4(a1, a2);
}

uint64_t sub_1003BF6AC(uint64_t a1, uint64_t a2)
{
  v2[11] = a1;
  v2[12] = a2;
  sub_10000A844((uint64_t *)&unk_100975040);
  v2[13] = swift_task_alloc();
  return _swift_task_switch(sub_1003BF740, 0, 0);
}

uint64_t sub_1003BF740()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = (uint64_t *)v0[11];
  sub_100278C8C(v0[12], (uint64_t)(v0 + 2));
  Date.init()();
  uint64_t v3 = type metadata accessor for Date();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 0, 1, v3);
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v4);
  uint64_t v6 = (void (*)(void *, void))(*(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 32))(v0 + 7, v4, v5);
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for SDAuthenticationSessionMetrics();
  sub_100340238(v1, v8 + *(int *)(v9 + 36));
  v6(v0 + 7, 0);
  uint64_t v10 = v0[5];
  uint64_t v11 = v0[6];
  uint64_t v12 = sub_10026BB6C(v0 + 2, v10);
  v2[3] = v10;
  v2[4] = *(void *)(v11 + 8);
  uint64_t v13 = sub_100278AE4(v2);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v13, v12, v10);
  sub_10024D338((uint64_t)(v0 + 2));
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1003BF8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  return sub_1003BF6AC(a1, a2);
}

uint64_t sub_1003BF984(uint64_t a1, uint64_t a2)
{
  v2[12] = a1;
  v2[13] = a2;
  sub_10000A844((uint64_t *)&unk_100975040);
  v2[14] = swift_task_alloc();
  return _swift_task_switch(sub_1003BFA18, 0, 0);
}

uint64_t sub_1003BFA18()
{
  uint64_t v2 = (void *)v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = (uint64_t *)v0[12];
  sub_1003CF0DC((uint64_t)v2, (uint64_t)(v0 + 2));
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[5];
  sub_10026BB6C(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v1, 0, 1, v6);
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v7);
  uint64_t v9 = (void (*)(void *, void))(*(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 32))(v0 + 8, v7, v8);
  uint64_t v11 = v10;
  uint64_t v12 = type metadata accessor for SDAuthenticationSessionMetrics();
  sub_100340238(v1, v11 + *(int *)(v12 + 68));
  v9(v0 + 8, 0);
  uint64_t v13 = v0[5];
  uint64_t v14 = v0[6];
  uint64_t v15 = sub_10026BB6C(v0 + 2, v13);
  v3[3] = v13;
  v3[4] = *(void *)(v14 + 8);
  uint64_t v16 = sub_100278AE4(v3);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v16, v15, v13);
  sub_10024D338((uint64_t)(v0 + 2));
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1003BFBF0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  return sub_1003BF984(a1, a2);
}

uint64_t sub_1003BFC90(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return _swift_task_switch(sub_1003BFCB0, 0, 0);
}

uint64_t sub_1003BFCB0()
{
  uint64_t v15 = v0;
  if (qword_100969D68 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_100971568);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v14 = v5;
    CFStringRef v6 = (const __CFString *)SFAuthenticationRegistrationSucceeded;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v0[2] = sub_100254634(v7, v8, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Posting darwin notification %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    CFStringRef v6 = (const __CFString *)SFAuthenticationRegistrationSucceeded;
  }
  uint64_t v10 = v0[3];
  uint64_t v9 = v0[4];
  uint64_t v11 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterPostNotification(v11, v6, 0, 0, 1u);

  sub_100278C8C(v9, v10);
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1003BFEC0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  v5[3] = a1;
  v5[4] = a2;
  return _swift_task_switch(sub_1003BFCB0, 0, 0);
}

uint64_t sub_1003BFF70(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return _swift_task_switch(sub_1003BFF90, 0, 0);
}

uint64_t sub_1003BFF90()
{
  uint64_t v1 = (_OWORD *)(v0 + 96);
  sub_100278C8C(*(void *)(v0 + 144), v0 + 56);
  sub_10000A844(&qword_100971998);
  sub_10000A844(&qword_1009719A0);
  int v2 = swift_dynamicCast();
  os_log_type_t v3 = *(void **)(v0 + 144);
  if (v2)
  {
    uint64_t v4 = *(uint64_t **)(v0 + 136);
    sub_1002AF688((long long *)(v0 + 96), v0 + 16);
    uint64_t v5 = *(void *)(v0 + 40);
    uint64_t v6 = *(void *)(v0 + 48);
    sub_1002AF758(v0 + 16, v5);
    uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
    uint64_t v8 = v3[3];
    uint64_t v9 = v3[4];
    sub_10026BB6C(v3, v8);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
    unint64_t v12 = v11;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100250CC4(v10, v12);
    [v7 setAwdlInfo:isa];

LABEL_5:
    uint64_t v25 = *(void *)(v0 + 40);
    uint64_t v26 = *(void *)(v0 + 48);
    int64_t v27 = sub_10026BB6C((void *)(v0 + 16), v25);
    v4[3] = v25;
    v4[4] = *(void *)(v26 + 8);
    uint64_t v28 = sub_100278AE4(v4);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v28, v27, v25);
    sub_10024D338(v0 + 16);
    uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_7;
  }
  *(void *)(v0 + 128) = 0;
  _OWORD *v1 = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_10000A7E8(v0 + 96, &qword_1009719A8);
  sub_100278C8C((uint64_t)v3, v0 + 56);
  sub_10000A844(&qword_1009719B0);
  int v14 = swift_dynamicCast();
  uint64_t v15 = *(void **)(v0 + 144);
  if (v14)
  {
    uint64_t v4 = *(uint64_t **)(v0 + 136);
    sub_1002AF688((long long *)(v0 + 96), v0 + 16);
    uint64_t v16 = *(void *)(v0 + 40);
    uint64_t v17 = *(void *)(v0 + 48);
    sub_1002AF758(v0 + 16, v16);
    uint64_t v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
    uint64_t v19 = v15[3];
    uint64_t v20 = v15[4];
    sub_10026BB6C(v15, v19);
    uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
    unint64_t v23 = v22;
    Class v24 = Data._bridgeToObjectiveC()().super.isa;
    sub_100250CC4(v21, v23);
    [v18 setAwdlInfo:v24];

    goto LABEL_5;
  }
  *(void *)(v0 + 128) = 0;
  _OWORD *v1 = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_10000A7E8(v0 + 96, &qword_1009719B8);
  _StringGuts.grow(_:)(114);
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  _print_unlocked<A, B>(_:_:)();
  v30._object = (void *)0x80000001007BB960;
  v30._countAndFlagsBits = 0xD000000000000070;
  String.append(_:)(v30);
  uint64_t v31 = *(void *)(v0 + 16);
  uint64_t v32 = *(void *)(v0 + 24);
  sub_10024D280();
  swift_allocError();
  *(_DWORD *)uint64_t v33 = 10;
  *(void *)(v33 + 8) = v31;
  *(void *)(v33 + 16) = v32;
  swift_willThrow();
  uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
LABEL_7:
  return v29();
}

uint64_t sub_1003C0324(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  v5[17] = a1;
  v5[18] = a2;
  return _swift_task_switch(sub_1003BFF90, 0, 0);
}

uint64_t sub_1003C03D4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 272) = a1;
  *(void *)(v2 + 280) = a2;
  return _swift_task_switch(sub_1003C03F4, 0, 0);
}

uint64_t sub_1003C03F4()
{
  sub_1003CF0DC(v0[35], (uint64_t)(v0 + 2));
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_10026BB6C(v0 + 2, v1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  unint64_t v5 = v4;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100250CC4(v3, v5);
  id v7 = sub_1000D2064(isa);

  if (!v7)
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v22 = 1;
    *(void *)(v22 + 8) = 0xD000000000000033;
    *(void *)(v22 + 16) = 0x80000001007BBDD0;
    swift_willThrow();
    sub_10024D338((uint64_t)(v0 + 2));
    uint64_t v21 = (uint64_t (*)(void))v0[1];
LABEL_9:
    return v21();
  }
  uint64_t v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  v0[36] = v8;

  id v9 = [self standardUserDefaults];
  NSString v10 = String._bridgeToObjectiveC()();
  unsigned int v11 = [v9 BOOLForKey:v10];

  if (v11)
  {
    swift_bridgeObjectRelease();
    if (qword_100969D68 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000B47C(v12, (uint64_t)qword_100971568);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Default classCUnlockSkipRanging is set. Skipping ranging", v15, 2u);
      swift_slowDealloc();
    }
    uint64_t v16 = (uint64_t *)v0[34];

    uint64_t v17 = v0[5];
    uint64_t v18 = v0[6];
    uint64_t v19 = sub_10026BB6C(v0 + 2, v17);
    v16[3] = v17;
    v16[4] = *(void *)(*(void *)(v18 + 8) + 8);
    uint64_t v20 = sub_100278AE4(v16);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v20, v19, v17);
    sub_10024D338((uint64_t)(v0 + 2));
    uint64_t v21 = (uint64_t (*)(void))v0[1];
    goto LABEL_9;
  }
  if (qword_100969D68 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  sub_10000B47C(v24, (uint64_t)qword_100971568);
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    int64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Starting ranging as initiator", v27, 2u);
    swift_slowDealloc();
  }
  uint64_t v28 = (void *)v0[35];

  uint64_t v30 = v0[5];
  uint64_t v29 = v0[6];
  sub_10026BB6C(v0 + 2, v30);
  (*(void (**)(uint64_t))(*(void *)(v29 + 8) + 16))(v30);
  sub_10026BB6C(v0 + 14, v0[17]);
  uint64_t v31 = v28[3];
  uint64_t v32 = v28[5];
  sub_10026BB6C(v28, v31);
  uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
  uint64_t v35 = v34;
  v0[37] = v33;
  v0[38] = v34;
  uint64_t v36 = (void *)swift_task_alloc();
  v0[39] = v36;
  void *v36 = v0;
  v36[1] = sub_1003C08C0;
  return sub_100422094(v8, v33, v35);
}

uint64_t sub_1003C08C0(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 320) = v1;
  swift_task_dealloc();
  unint64_t v5 = *(void *)(v4 + 304);
  uint64_t v6 = *(void *)(v4 + 296);
  if (v1)
  {
    sub_100250CC4(v6, v5);
    swift_bridgeObjectRelease();
    id v7 = sub_1003C0CC0;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(unsigned char *)(v4 + 328) = a1 & 1;
    sub_100250CC4(v6, v5);
    id v7 = sub_1003C0A5C;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1003C0A5C()
{
  char v1 = *(unsigned char *)(v0 + 328);
  sub_10024D338(v0 + 112);
  if (v1)
  {
    sub_1003CF0DC(v0 + 16, v0 + 64);
    sub_10000A844(&qword_100972058);
    sub_10000A844(&qword_100972060);
    int v2 = swift_dynamicCast();
    uint64_t v3 = *(uint64_t **)(v0 + 272);
    if (v2)
    {
      sub_1002AF688((long long *)(v0 + 192), v0 + 152);
      uint64_t v4 = *(void *)(v0 + 176);
      uint64_t v5 = *(void *)(v0 + 184);
      sub_1002AF758(v0 + 152, v4);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(1, v4, v5);
      sub_100278C8C(v0 + 152, v0 + 232);
      sub_10000A844(&qword_10096BDF0);
      swift_dynamicCast();
      sub_10024D338(v0 + 152);
    }
    else
    {
      *(void *)(v0 + 224) = 0;
      *(_OWORD *)(v0 + 192) = 0u;
      *(_OWORD *)(v0 + 208) = 0u;
      sub_10000A7E8(v0 + 192, &qword_100972068);
      uint64_t v8 = *(void *)(v0 + 40);
      uint64_t v9 = *(void *)(v0 + 48);
      NSString v10 = sub_10026BB6C((void *)(v0 + 16), v8);
      v3[3] = v8;
      v3[4] = *(void *)(*(void *)(v9 + 8) + 8);
      unsigned int v11 = sub_100278AE4(v3);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v11, v10, v8);
    }
    sub_10024D338(v0 + 16);
    id v7 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    type metadata accessor for SFAuthenticationError(0);
    sub_1003CF140(&qword_100977FB0, type metadata accessor for SFAuthenticationError);
    swift_allocError();
    _DWORD *v6 = 9;
    swift_willThrow();
    sub_10024D338(v0 + 16);
    id v7 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v7();
}

uint64_t sub_1003C0CC0()
{
  sub_10024D338(v0 + 112);
  sub_10024D338(v0 + 16);
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003C0D30(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  v5[34] = a1;
  v5[35] = a2;
  return _swift_task_switch(sub_1003C03F4, 0, 0);
}

uint64_t sub_1003C0DE0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return _swift_task_switch(sub_1003C0E00, 0, 0);
}

uint64_t sub_1003C0E00()
{
  char v1 = (void *)v0[8];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10026BB6C(v1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  unint64_t v6 = v5;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100250CC4(v4, v6);
  id v8 = sub_1000D2064(isa);

  if (v8)
  {
    uint64_t v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
    v0[9] = v9;

    if (qword_100969D68 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    v0[10] = sub_10000B47C(v10, (uint64_t)qword_100971568);
    unsigned int v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Starting ranging", v13, 2u);
      swift_slowDealloc();
    }
    os_log_type_t v14 = (void *)v0[8];

    uint64_t v16 = v1[3];
    uint64_t v15 = v1[4];
    sub_10026BB6C(v14, v16);
    (*(void (**)(uint64_t))(*(void *)(v15 + 8) + 16))(v16);
    sub_10026BB6C(v0 + 2, v0[5]);
    uint64_t v17 = v1[3];
    uint64_t v18 = v1[5];
    sub_10026BB6C(v14, v17);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
    uint64_t v21 = v20;
    v0[11] = v19;
    v0[12] = v20;
    uint64_t v22 = (void *)swift_task_alloc();
    v0[13] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1003C111C;
    return sub_100423F48(v9, v19, v21);
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v24 = 1;
    *(void *)(v24 + 8) = 0xD000000000000033;
    *(void *)(v24 + 16) = 0x80000001007BBDD0;
    swift_willThrow();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    return v25();
  }
}

uint64_t sub_1003C111C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  unint64_t v3 = *(void *)(v2 + 96);
  uint64_t v4 = *(void *)(v2 + 88);
  if (v0)
  {
    sub_100250CC4(v4, v3);
    swift_bridgeObjectRelease();
    unint64_t v5 = sub_1003C13E0;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_100250CC4(v4, v3);
    unint64_t v5 = sub_1003C12A4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003C12A4()
{
  sub_10024D338((uint64_t)(v0 + 2));
  char v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Ranging started", v3, 2u);
    swift_slowDealloc();
  }
  unint64_t v5 = (uint64_t *)v0[7];
  uint64_t v4 = (void *)v0[8];

  uint64_t v6 = v4[3];
  uint64_t v7 = v4[4];
  id v8 = sub_10026BB6C(v4, v6);
  v5[3] = v6;
  v5[4] = *(void *)(*(void *)(v7 + 8) + 8);
  uint64_t v9 = sub_100278AE4(v5);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(v9, v8, v6);
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1003C13E0()
{
  sub_10024D338(v0 + 16);
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003C1444(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  v5[7] = a1;
  v5[8] = a2;
  return _swift_task_switch(sub_1003C0E00, 0, 0);
}

uint64_t sub_1003C14F4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return _swift_task_switch(sub_1003C1514, 0, 0);
}

uint64_t sub_1003C1514()
{
  char v1 = (void *)v0[8];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10026BB6C(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  sub_10026BB6C(v0 + 2, v0[5]);
  unsigned __int8 v4 = sub_1006A0848();
  sub_10024D338((uint64_t)(v0 + 2));
  if (v4)
  {
    unint64_t v5 = (uint64_t *)v0[7];
    uint64_t v6 = v1[3];
    uint64_t v7 = v1[4];
    id v8 = sub_10026BB6C((void *)v0[8], v6);
    v5[3] = v6;
    v5[4] = *(void *)(v7 + 8);
    uint64_t v9 = sub_100278AE4(v5);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(v9, v8, v6);
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v11 = 33;
    *(void *)(v11 + 8) = 0x62616E6520746F4ELL;
    *(void *)(v11 + 16) = 0xEB0000000064656CLL;
    swift_willThrow();
  }
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1003C1694(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  v5[7] = a1;
  v5[8] = a2;
  return _swift_task_switch(sub_1003C1514, 0, 0);
}

uint64_t sub_1003C1744(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  sub_10000A844((uint64_t *)&unk_100975040);
  v2[4] = swift_task_alloc();
  v2[5] = swift_task_alloc();
  v2[6] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Date();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  return _swift_task_switch(sub_1003C1860, 0, 0);
}

uint64_t sub_1003C1860()
{
  uint64_t v51 = v0;
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  unsigned __int8 v4 = (void *)v0[3];
  uint64_t v5 = v4[3];
  uint64_t v6 = v4[4];
  sub_10026BB6C(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v7(v3, 1, v1) == 1)
  {
    sub_10000A7E8(v0[6], (uint64_t *)&unk_100975040);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v8 = 11;
    strcpy((char *)(v8 + 8), "Unregistered");
    *(unsigned char *)(v8 + 21) = 0;
    *(_WORD *)(v8 + 22) = -5120;
    swift_willThrow();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v36 = (uint64_t (*)(void))v0[1];
    goto LABEL_8;
  }
  uint64_t v9 = v0[7];
  uint64_t v10 = v0[5];
  uint64_t v11 = (void *)v0[3];
  NSString v48 = *(void (**)(void, void, uint64_t))(v0[8] + 32);
  v48(v0[10], v0[6], v9);
  uint64_t v12 = v4[3];
  uint64_t v13 = v4[5];
  sub_10026BB6C(v11, v12);
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  unsigned int v14 = v7(v10, 1, v9);
  uint64_t v15 = v0[10];
  if (v14 == 1)
  {
    uint64_t v16 = v0[7];
    uint64_t v17 = v0[8];
    sub_10000A7E8(v0[5], (uint64_t *)&unk_100975040);
    _StringGuts.grow(_:)(38);
    swift_bridgeObjectRelease();
    strcpy((char *)v50, "Registered on ");
    HIBYTE(v50[1]) = -18;
    sub_1003CF140(&qword_100974530, (void (*)(uint64_t))&type metadata accessor for Date);
    v18._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    v19._countAndFlagsBits = 0xD000000000000016;
    v19._object = (void *)0x80000001007BBD70;
    String.append(_:)(v19);
    uint64_t v20 = v50[0];
    uint64_t v21 = v50[1];
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v22 = 36;
    *(void *)(v22 + 8) = v20;
    *(void *)(v22 + 16) = v21;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    goto LABEL_7;
  }
  v48(v0[9], v0[5], v0[7]);
  sub_1003CF140((unint64_t *)&unk_100974490, (void (*)(uint64_t))&type metadata accessor for Date);
  if (dispatch thunk of static Comparable.< infix(_:_:)())
  {
    uint64_t v23 = v0[10];
    uint64_t v49 = v0[9];
    v50[0] = 0;
    uint64_t v24 = v0[7];
    uint64_t v25 = v0[8];
    int64_t v27 = (void *)v0[3];
    uint64_t v26 = v0[4];
    v50[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(57);
    v28._countAndFlagsBits = 0xD00000000000001CLL;
    v28._object = (void *)0x80000001007BBD90;
    String.append(_:)(v28);
    sub_1003CF140(&qword_100974530, (void (*)(uint64_t))&type metadata accessor for Date);
    v29._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v29);
    swift_bridgeObjectRelease();
    v30._object = (void *)0x80000001007BBDB0;
    v30._countAndFlagsBits = 0xD000000000000010;
    String.append(_:)(v30);
    uint64_t v31 = v4[3];
    uint64_t v32 = v4[5];
    sub_10026BB6C(v27, v31);
    (*(void (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    sub_10000A7E8(v26, (uint64_t *)&unk_100975040);
    v33._countAndFlagsBits = 0x736C616620736920;
    v33._object = (void *)0xE900000000000065;
    String.append(_:)(v33);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v34 = 36;
    *(void *)(v34 + 8) = 0;
    *(void *)(v34 + 16) = 0xE000000000000000;
    swift_willThrow();
    uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v35(v49, v24);
    v35(v23, v24);
    goto LABEL_7;
  }
  uint64_t v39 = v0[9];
  uint64_t v38 = v0[10];
  uint64_t v41 = v0[7];
  uint64_t v40 = v0[8];
  uint64_t v42 = (uint64_t *)v0[2];
  uint64_t v44 = v4[3];
  uint64_t v43 = v4[4];
  uint64_t v45 = sub_10026BB6C((void *)v0[3], v44);
  v42[3] = v44;
  v42[4] = *(void *)(v43 + 8);
  char v46 = sub_100278AE4(v42);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v44 - 8) + 16))(v46, v45, v44);
  NSString v47 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
  v47(v39, v41);
  v47(v38, v41);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = (uint64_t (*)(void))v0[1];
LABEL_8:
  return v36();
}

uint64_t sub_1003C1E68(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  return sub_1003C1744(a1, a2);
}

uint64_t sub_1003C1F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  sub_10000A844((uint64_t *)&unk_100975040);
  v3[15] = swift_task_alloc();
  return _swift_task_switch(sub_1003C1FA0, 0, 0);
}

uint64_t sub_1003C1FA0()
{
  uint64_t v33 = v0;
  uint64_t v3 = sub_1003BD1C8();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = type metadata accessor for SDAuthenticationCommonOperationInput();
  sub_1003CE9F0(v6 + *(int *)(v7 + 36), v0 + 56);
  if (!*(void *)(v0 + 80))
  {
    sub_10000A7E8(v0 + 56, &qword_1009778D0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v12 = 37;
    *(void *)(v12 + 8) = 0xD000000000000027;
    *(void *)(v12 + 16) = 0x80000001007BB890;
    swift_willThrow();
    swift_bridgeObjectRelease();
LABEL_2:
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_3;
  }
  sub_1002AF688((long long *)(v0 + 56), v0 + 16);
  uint64_t v8 = *(void *)(*sub_10026BB6C((void *)(v0 + 16), *(void *)(v0 + 40))
                 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
  uint64_t v9 = *(os_unfair_lock_s **)(v8 + 112);
  uint64_t v10 = (void *)swift_task_alloc();
  v10[2] = v8;
  v10[3] = v3;
  v10[4] = v5;
  uint64_t v11 = swift_task_alloc();
  *(void *)(v11 + 16) = sub_1003CEC38;
  *(void *)(v11 + 24) = v10;
  os_unfair_lock_lock(v9 + 4);
  sub_1003CEC58(v32);
  os_unfair_lock_unlock(v9 + 4);
  char v13 = v32[0];
  swift_task_dealloc();
  swift_task_dealloc();
  if (v13)
  {
    swift_bridgeObjectRelease();
    if (qword_100969D68 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10000B47C(v14, (uint64_t)qword_100971568);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Just paired and armed, no need for registration yet", v17, 2u);
      swift_slowDealloc();
    }

    goto LABEL_15;
  }
  uint64_t v24 = *(void *)(*sub_10026BB6C((void *)(v0 + 16), *(void *)(v0 + 40))
                  + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
  uint64_t v25 = *(os_unfair_lock_s **)(v24 + 112);
  uint64_t v26 = (void *)swift_task_alloc();
  v26[2] = v24;
  v26[3] = v3;
  v26[4] = v5;
  uint64_t v27 = swift_task_alloc();
  *(void *)(v27 + 16) = sub_1003CF190;
  *(void *)(v27 + 24) = v26;
  os_unfair_lock_lock(v25 + 4);
  sub_10030F73C(v28);
  os_unfair_lock_unlock(v25 + 4);
  uint64_t v29 = *(void *)(v0 + 120);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = type metadata accessor for Date();
  LODWORD(v27) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v29, 1, v30);
  sub_10000A7E8(v29, (uint64_t *)&unk_100975040);
  if (v27 == 1)
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v31 = 11;
    strcpy((char *)(v31 + 8), "Unregistered");
    *(unsigned char *)(v31 + 21) = 0;
    *(_WORD *)(v31 + 22) = -5120;
    swift_willThrow();
    sub_10024D338(v0 + 16);
    goto LABEL_2;
  }
  sub_10026BB6C((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_1003CFCE0();
LABEL_15:
  Swift::String v19 = *(uint64_t **)(v0 + 96);
  Swift::String v18 = *(void **)(v0 + 104);
  uint64_t v20 = v18[3];
  uint64_t v21 = v18[4];
  uint64_t v22 = sub_10026BB6C(v18, v20);
  v19[3] = v20;
  v19[4] = *(void *)(v21 + 8);
  uint64_t v23 = sub_100278AE4(v19);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v23, v22, v20);
  sub_10024D338(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
LABEL_3:
  return v1();
}

uint64_t sub_1003C2448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  return sub_1003C1F08(a1, a2, a3);
}

uint64_t sub_1003C24F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  sub_10000A844((uint64_t *)&unk_100975040);
  v3[15] = swift_task_alloc();
  return _swift_task_switch(sub_1003C2590, 0, 0);
}

uint64_t sub_1003C2590()
{
  uint64_t v36 = v0;
  uint64_t v3 = sub_1003BD1C8();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = type metadata accessor for SDAuthenticationCommonOperationInput();
  sub_1003CE9F0(v6 + *(int *)(v7 + 36), v0 + 56);
  if (!*(void *)(v0 + 80))
  {
    sub_10000A7E8(v0 + 56, &qword_1009778D0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v13 = 37;
    *(void *)(v13 + 8) = 0xD000000000000027;
    *(void *)(v13 + 16) = 0x80000001007BB890;
    swift_willThrow();
    swift_bridgeObjectRelease();
LABEL_2:
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_3;
  }
  sub_1002AF688((long long *)(v0 + 56), v0 + 16);
  uint64_t v8 = *(void *)(*sub_10026BB6C((void *)(v0 + 16), *(void *)(v0 + 40))
                 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
  uint64_t v9 = *(os_unfair_lock_s **)(v8 + 112);
  uint64_t v10 = (void *)swift_task_alloc();
  v10[2] = v8;
  v10[3] = v3;
  v10[4] = v5;
  uint64_t v11 = swift_task_alloc();
  *(void *)(v11 + 16) = sub_1003CF190;
  *(void *)(v11 + 24) = v10;
  v9 += 4;
  os_unfair_lock_lock(v9);
  sub_10030F73C(v12);
  os_unfair_lock_unlock(v9);
  swift_task_dealloc();
  uint64_t v14 = *(void *)(v0 + 120);
  swift_task_dealloc();
  uint64_t v15 = type metadata accessor for Date();
  int v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15);
  uint64_t v17 = *(void *)(v0 + 120);
  if (v16 == 1)
  {
    swift_bridgeObjectRelease();
    sub_10000A7E8(v17, (uint64_t *)&unk_100975040);
LABEL_11:
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v18 = 11;
    unint64_t v19 = 0x7473696765726E55;
    unint64_t v20 = 0xEC00000064657265;
LABEL_12:
    *(void *)(v18 + 8) = v19;
    *(void *)(v18 + 16) = v20;
    swift_willThrow();
    sub_10024D338(v0 + 16);
    goto LABEL_2;
  }
  sub_10000A7E8(*(void *)(v0 + 120), (uint64_t *)&unk_100975040);
  uint64_t v21 = *(void *)(*sub_10026BB6C((void *)(v0 + 16), *(void *)(v0 + 40))
                  + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
  uint64_t v22 = *(os_unfair_lock_s **)(v21 + 112);
  uint64_t v23 = (void *)swift_task_alloc();
  v23[2] = v21;
  v23[3] = v3;
  v23[4] = v5;
  uint64_t v24 = swift_task_alloc();
  *(void *)(v24 + 16) = sub_1003CF1A8;
  *(void *)(v24 + 24) = v23;
  os_unfair_lock_lock(v22 + 4);
  sub_1003CEC20(&v35);
  os_unfair_lock_unlock(v22 + 4);
  long long v25 = v35;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  if (!*((void *)&v25 + 1)) {
    goto LABEL_11;
  }
  uint64_t v26 = *(void **)(v0 + 104);
  uint64_t v27 = sub_10026BB6C(v26, v26[3]);
  if (v25 == *(_OWORD *)((char *)v27 + *(int *)(_s8KeyCheckV21HandleKeyCheckContextVMa(0) + 28)))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v28 & 1) == 0)
    {
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v18 = 11;
      unint64_t v19 = 0xD000000000000017;
      unint64_t v20 = 0x80000001007BBB70;
      goto LABEL_12;
    }
  }
  uint64_t v30 = *(uint64_t **)(v0 + 96);
  uint64_t v29 = *(void **)(v0 + 104);
  uint64_t v31 = v26[3];
  uint64_t v32 = v29[4];
  uint64_t v33 = sub_10026BB6C(v29, v31);
  v30[3] = v31;
  v30[4] = *(void *)(v32 + 8);
  uint64_t v34 = sub_100278AE4(v30);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v34, v33, v31);
  sub_10024D338(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
LABEL_3:
  return v1();
}

uint64_t sub_1003C2A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  return sub_1003C24F8(a1, a2, a3);
}

uint64_t sub_1003C2AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  v3[11] = type metadata accessor for SDAuthenticationCommonOperationInput();
  v3[12] = swift_task_alloc();
  return _swift_task_switch(sub_1003C2B8C, 0, 0);
}

uint64_t sub_1003C2B8C()
{
  uint64_t v37 = v0;
  id v1 = [self standardUserDefaults];
  NSString v2 = String._bridgeToObjectiveC()();
  unsigned int v3 = [v1 BOOLForKey:v2];

  if (v3)
  {
    if (qword_100969D68 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_100971568);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "### TESTING ONLY: throwAKSCreateTokenError default set, throwing generic error", v7, 2u);
      swift_slowDealloc();
    }

    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v8 = 34;
    *(void *)(v8 + 8) = 0xD00000000000002CLL;
    *(void *)(v8 + 16) = 0x80000001007BBD40;
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    uint64_t v9 = (void *)v0[9];
    uint64_t v10 = v9[3];
    uint64_t v11 = v9[4];
    sub_10026BB6C(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
    sub_10026BB6C(v0 + 2, v0[5]);
    uint64_t v12 = v9[3];
    uint64_t v13 = v9[5];
    sub_10026BB6C(v9, v12);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
    unint64_t v16 = v15;
    sub_10069FBEC(v14, v15);

    sub_100250CC4(v14, v16);
    sub_10024D338((uint64_t)(v0 + 2));
    if (qword_100969D68 != -1) {
      swift_once();
    }
    uint64_t v20 = v0[12];
    uint64_t v21 = v0[10];
    uint64_t v22 = type metadata accessor for Logger();
    sub_10000B47C(v22, (uint64_t)qword_100971568);
    sub_1003CEF58(v21, v20);
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    BOOL v25 = os_log_type_enabled(v23, v24);
    uint64_t v26 = v0[12];
    if (v25)
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315138;
      uint64_t v36 = v28;
      uint64_t v29 = sub_10050938C();
      v0[7] = sub_100254634(v29, v30, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1003CF010(v26, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "AUTHENTICATION SUCCEEDED for %s", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1003CF010(v0[12], (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
    }

    uint64_t v31 = (uint64_t *)v0[8];
    uint64_t v32 = v9[3];
    uint64_t v33 = v9[4];
    uint64_t v34 = sub_10026BB6C((void *)v0[9], v32);
    v31[3] = v32;
    v31[4] = *(void *)(v33 + 8);
    long long v35 = sub_100278AE4(v31);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v35, v34, v32);
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
  }
  return v17();
}

uint64_t sub_1003C30A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  return sub_1003C2AF4(a1, a2, a3);
}

uint64_t sub_1003C3158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[27] = a2;
  v3[28] = a3;
  v3[26] = a1;
  v3[29] = type metadata accessor for SDAuthenticationCommonOperationInput();
  v3[30] = swift_task_alloc();
  return _swift_task_switch(sub_1003C31F0, 0, 0);
}

uint64_t sub_1003C31F0()
{
  uint64_t v34 = v0;
  uint64_t v1 = *(void *)(v0 + 224) + *(int *)(*(void *)(v0 + 232) + 36);
  sub_1003CE9F0(v1, v0 + 56);
  if (*(void *)(v0 + 80))
  {
    NSString v2 = *(void **)(v0 + 216);
    sub_1002AF688((long long *)(v0 + 56), v0 + 16);
    uint64_t v3 = sub_10026BB6C((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v4 = v2[3];
    uint64_t v5 = v2[4];
    sub_10026BB6C(v2, v4);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
    unint64_t v8 = v7;
    uint64_t v9 = *v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession;
    uint64_t v10 = *(void *)v9;
    LOBYTE(v9) = *(unsigned char *)(v9 + 8);
    *(void *)(v0 + 176) = v10;
    *(unsigned char *)(v0 + 184) = v9;
    sub_10000A844(&qword_100971FC0);
    Optional.tryUnwrap(_:file:line:)();
    uint64_t v11 = sub_1004BF850(v6, v8);
    sub_100250CB0(v11, v16);
    sub_100250CC4(v6, v8);
    sub_10024D338(v0 + 16);
    sub_1003CE9F0(v1, v0 + 96);
    if (*(void *)(v0 + 120))
    {
      sub_1002AF688((long long *)(v0 + 96), v0 + 136);
      sub_10026BB6C((void *)(v0 + 136), *(void *)(v0 + 160));
      sub_1003CFA20();
      sub_10024D338(v0 + 136);
    }
    else
    {
      sub_10000A7E8(v0 + 96, &qword_1009778D0);
    }
    if (qword_100969D68 != -1) {
      swift_once();
    }
    uint64_t v17 = *(void *)(v0 + 240);
    uint64_t v18 = *(void *)(v0 + 224);
    uint64_t v19 = type metadata accessor for Logger();
    sub_10000B47C(v19, (uint64_t)qword_100971568);
    sub_1003CEF58(v18, v17);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v23 = *(void *)(v0 + 240);
    if (v22)
    {
      os_log_type_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v24 = 136315138;
      uint64_t v33 = v25;
      uint64_t v26 = sub_10050938C();
      *(void *)(v0 + 200) = sub_100254634(v26, v27, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1003CF010(v23, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "AUTHENTICATION SUCCEEDED for %s", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1003CF010(*(void *)(v0 + 240), (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
    }

    uint64_t v28 = *(uint64_t **)(v0 + 208);
    uint64_t v29 = v2[3];
    uint64_t v30 = v2[4];
    uint64_t v31 = sub_10026BB6C(*(void **)(v0 + 216), v29);
    void v28[3] = v29;
    v28[4] = *(void *)(v30 + 8);
    uint64_t v32 = sub_100278AE4(v28);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v32, v31, v29);
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    sub_10000A7E8(v0 + 56, &qword_1009778D0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v12 = 37;
    *(void *)(v12 + 8) = 0xD000000000000027;
    *(void *)(v12 + 16) = 0x80000001007BB890;
    swift_willThrow();
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v13 = 34;
    *(void *)(v13 + 8) = 0xD00000000000003ALL;
    *(void *)(v13 + 16) = 0x80000001007BBC80;
    swift_willThrow();
    swift_errorRelease();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v14();
}

uint64_t sub_1003C36E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  return sub_1003C3158(a1, a2, a3);
}

uint64_t sub_1003C3794(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_1003C37B4, 0, 0);
}

uint64_t sub_1003C37B4()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10026BB6C(v1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  unint64_t v6 = v5;
  sub_100250CB0(v4, v5);
  if (v6 >> 60 == 15)
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v7 = 1;
    *(void *)(v7 + 8) = 0xD000000000000012;
    *(void *)(v7 + 16) = 0x80000001007BBA60;
    swift_willThrow();
  }
  else
  {
    uint64_t v9 = (uint64_t *)v0[2];
    uint64_t v10 = v1[3];
    uint64_t v11 = v1[4];
    uint64_t v12 = sub_10026BB6C((void *)v0[3], v10);
    v9[3] = v10;
    v9[4] = *(void *)(*(void *)(v11 + 8) + 8);
    uint64_t v13 = sub_100278AE4(v9);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v13, v12, v10);
  }
  unint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1003C391C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = a2;
  v5[1] = sub_10000A6F0;
  return _swift_task_switch(sub_1003C37B4, 0, 0);
}

uint64_t sub_1003C39CC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return _swift_task_switch(sub_1003C39EC, 0, 0);
}

uint64_t sub_1003C39EC()
{
  uint64_t v1 = (void *)v0[9];
  sub_1003CF0DC((uint64_t)v1, (uint64_t)(v0 + 2));
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[7];
  sub_1002AF758((uint64_t)(v0 + 2), v2);
  uint64_t v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  unint64_t v5 = sub_10026BB6C(v1, v1[3]);
  unint64_t v6 = (int *)_s15MacApprovePhoneV18InitialLockContextVMa(0);
  if (*(void *)((char *)v5 + v6[9] + 8))
  {
    swift_bridgeObjectRetain();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  unint64_t v8 = (void *)v0[9];
  [v4 setAppName:v7];

  uint64_t v9 = v0[5];
  uint64_t v10 = v0[7];
  sub_1002AF758((uint64_t)(v0 + 2), v9);
  uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
  if (*(void *)((char *)sub_10026BB6C(v8, v1[3]) + v6[8] + 8))
  {
    swift_bridgeObjectRetain();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v12 = 0;
  }
  uint64_t v13 = (uint64_t *)v0[8];
  uint64_t v14 = (void *)v0[9];
  [v11 setBundleID:v12];

  uint64_t v15 = v0[5];
  uint64_t v16 = v0[7];
  sub_1002AF758((uint64_t)(v0 + 2), v15);
  uint64_t v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
  [v17 setBiometricOnly:*((unsigned char *)sub_10026BB6C(v14, v1[3]) + v6[10]) & 1];

  uint64_t v18 = v0[5];
  uint64_t v19 = v0[6];
  uint64_t v20 = sub_10026BB6C(v0 + 2, v18);
  v13[3] = v18;
  v13[4] = *(void *)(v19 + 8);
  os_log_type_t v21 = sub_100278AE4(v13);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v21, v20, v18);
  sub_10024D338((uint64_t)(v0 + 2));
  BOOL v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_1003C3C88(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  v5[8] = a1;
  v5[9] = a2;
  return _swift_task_switch(sub_1003C39EC, 0, 0);
}

uint64_t sub_1003C3D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_1003C3D5C, 0, 0);
}

uint64_t sub_1003C3D5C()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = (void *)v0[4];
  uint64_t v25 = type metadata accessor for SDAuthenticationCommonOperationInput();
  uint64_t v3 = sub_100508E74(*(void *)((char *)v2 + *(int *)(v25 + 28)));
  uint64_t v4 = v2[8];
  uint64_t v5 = v2[9];
  sub_10026BB6C(v2 + 5, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  uint64_t v7 = v6;
  sub_10026BB6C(v1, v1[3]);
  uint64_t v8 = _s15MacApprovePhoneV26HandleApprovePromptContextVMa(0);
  sub_10026BB6C(v1, v1[3]);
  uint64_t v9 = *((unsigned __int8 *)sub_10026BB6C(v1, v1[3]) + *(int *)(v8 + 40));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  id v11 = objc_allocWithZone((Class)SFAuthenticationApproveInfo);
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [v11 initWithType:v3 idsDeviceID:v10 appName:v12 bundleID:v13 biometricOnly:v9];

  if (v14)
  {
    uint64_t v15 = (void *)v0[4];
    sub_10026BB6C(v15, v15[3]);
    sub_1006FA2BC((uint64_t)v15 + *(int *)(v25 + 24), (uint64_t)v14);
    uint64_t v18 = (uint64_t *)v0[2];
    uint64_t v17 = (void *)v0[3];
    uint64_t v19 = v1[3];
    uint64_t v20 = v17[4];
    os_log_type_t v21 = sub_10026BB6C(v17, v19);
    v18[3] = v19;
    v18[4] = *(void *)(v20 + 8);
    BOOL v22 = sub_100278AE4(v18);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v22, v21, v19);
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v16 = 10;
    *(void *)(v16 + 8) = 0xD00000000000001DLL;
    *(void *)(v16 + 16) = 0x80000001007BBCC0;
    swift_willThrow();
  }
  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_1003C4034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[3] = a2;
  v7[4] = a3;
  v7[1] = sub_10000A6F0;
  v7[2] = a1;
  return _swift_task_switch(sub_1003C3D5C, 0, 0);
}

uint64_t sub_1003C4108()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1003C4110()
{
  return *(unsigned int *)(v0 + 20);
}

uint64_t sub_1003C4118(uint64_t a1, uint64_t a2)
{
  v2[8] = a1;
  v2[9] = a2;
  uint64_t v3 = type metadata accessor for Date();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  return _swift_task_switch(sub_1003C41D8, 0, 0);
}

uint64_t sub_1003C41D8()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v4 = (void *)v0[9];
  uint64_t v3 = v0[10];
  uint64_t v5 = (uint64_t *)v0[8];
  sub_1003CF0DC((uint64_t)v4, (uint64_t)(v0 + 2));
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v6);
  uint64_t v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
  sub_10026BB6C(v4, v4[3]);
  Date.init()();
  Date.timeIntervalSince1970.getter();
  double v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  [v8 setSessionStartDate:v10];

  uint64_t v11 = v0[5];
  uint64_t v12 = v0[6];
  NSString v13 = sub_10026BB6C(v0 + 2, v11);
  v5[3] = v11;
  v5[4] = *(void *)(v12 + 8);
  id v14 = sub_100278AE4(v5);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v14, v13, v11);
  sub_10024D338((uint64_t)(v0 + 2));
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1003C435C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  return sub_1003C4118(a1, a2);
}

uint64_t sub_1003C43FC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return _swift_task_switch(sub_1003C441C, 0, 0);
}

uint64_t sub_1003C441C()
{
  uint64_t v1 = (void *)v0[15];
  sub_1003CF070((uint64_t)v1, (uint64_t)(v0 + 2));
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[5];
  sub_10026BB6C(v1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  if (v5 >> 60 == 15)
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v6 = 1;
    *(void *)(v6 + 8) = 0xD000000000000010;
    *(void *)(v6 + 16) = 0x80000001007BBD00;
    swift_willThrow();
  }
  else
  {
    uint64_t v7 = v4;
    unint64_t v8 = v5;
    double v9 = (void *)v0[15];
    uint64_t v10 = v1[3];
    uint64_t v11 = v1[5];
    sub_10026BB6C(v9, v10);
    (*(void (**)(uint64_t))(*(void *)(v11 + 8) + 16))(v10);
    sub_10026BB6C(v0 + 9, v0[12]);
    uint64_t v12 = v1[3];
    uint64_t v13 = v9[4];
    sub_10026BB6C(v9, v12);
    id v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 16);
    sub_10025ADCC(v7, v8);
    uint64_t v15 = v14(v12, v13);
    unint64_t v17 = v16;
    sub_10069FF44(v7, v8);
    sub_10069FBEC(v15, v17);
    os_log_type_t v21 = v20;
    BOOL v22 = (uint64_t *)v0[14];
    sub_100250CC4(v15, v17);
    sub_100250CB0(v7, v8);
    uint64_t v23 = Data.init(referencing:)();
    unint64_t v25 = v24;

    sub_10024D338((uint64_t)(v0 + 9));
    uint64_t v26 = v0[5];
    uint64_t v27 = v0[8];
    sub_1002AF758((uint64_t)(v0 + 2), v26);
    uint64_t v28 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v27 + 24))(v26, v27);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v28 setAksToken:isa];

    uint64_t v30 = v0[5];
    uint64_t v31 = v0[6];
    uint64_t v32 = sub_10026BB6C(v0 + 2, v30);
    v22[3] = v30;
    v22[4] = *(void *)(v31 + 8);
    uint64_t v33 = sub_100278AE4(v22);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v33, v32, v30);
    sub_100250CC4(v23, v25);
    sub_100250CB0(v7, v8);
  }
  sub_10024D338((uint64_t)(v0 + 2));
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_1003C4778(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  v5[14] = a1;
  v5[15] = a2;
  return _swift_task_switch(sub_1003C441C, 0, 0);
}

uint64_t sub_1003C4828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return _swift_task_switch(sub_1003C484C, 0, 0);
}

uint64_t sub_1003C484C()
{
  uint64_t v1 = v0[12];
  sub_100278C8C(v0[11], (uint64_t)(v0 + 2));
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v2);
  uint64_t v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  [v4 setVersion:1];

  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v5);
  uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
  uint64_t v8 = type metadata accessor for SDAuthenticationCommonOperationInput();
  UUID.uuidString.getter();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setSessionID:v9];

  uint64_t v10 = v0[5];
  uint64_t v11 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v10);
  uint64_t v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
  if (HIDWORD(*(void *)(v1 + *(int *)(v8 + 28)))) {
    return _assertionFailure(_:_:file:line:flags:)();
  }
  uint64_t v13 = v12;
  [v12 setType:];

  if (qword_100969D68 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_10000B47C(v14, (uint64_t)qword_100971568);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    unint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v17 = 138412290;
    swift_beginAccess();
    uint64_t v19 = v0[5];
    uint64_t v18 = v0[6];
    sub_1002AF758((uint64_t)(v0 + 2), v19);
    uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v19, v18);
    swift_endAccess();
    v0[7] = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v28 = v20;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Sending %@", v17, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  os_log_type_t v21 = (uint64_t *)v0[10];

  swift_beginAccess();
  uint64_t v22 = v0[5];
  uint64_t v23 = v0[6];
  unint64_t v24 = sub_10026BB6C(v0 + 2, v22);
  v21[3] = v22;
  v21[4] = *(void *)(v23 + 8);
  unint64_t v25 = sub_100278AE4(v21);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v25, v24, v22);
  sub_10024D338((uint64_t)(v0 + 2));
  uint64_t v26 = (uint64_t (*)(void))v0[1];
  return v26();
}

uint64_t sub_1003C4C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  return _swift_task_switch(sub_1003C484C, 0, 0);
}

uint64_t sub_1003C4D14(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return _swift_task_switch(sub_1003C4D34, 0, 0);
}

uint64_t sub_1003C4D34()
{
  uint64_t v1 = (void *)v0[14];
  sub_1003CF0DC((uint64_t)v1, (uint64_t)(v0 + 2));
  uint64_t v2 = sub_10026BB6C(v1, v1[3]);
  uint64_t v3 = (void *)((char *)v2 + *(int *)(_s14MacUnlockPhoneV17InitialKeyContextVMa(0) + 36));
  unint64_t v4 = v3[1];
  if (v4 >> 60 == 15)
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v5 = 1;
    *(void *)(v5 + 8) = 0xD000000000000012;
    *(void *)(v5 + 16) = 0x80000001007BBA40;
    swift_willThrow();
  }
  else
  {
    uint64_t v6 = *v3;
    uint64_t v7 = (void *)v0[14];
    uint64_t v8 = v1[3];
    uint64_t v9 = v7[4];
    sub_10026BB6C(v7, v8);
    uint64_t v10 = *(void *)(v9 + 8);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 16);
    sub_10025ADCC(v6, v4);
    v11(v8, v10);
    sub_10026BB6C(v0 + 8, v0[11]);
    sub_10025ADCC(v6, v4);
    sub_10069FF44(v6, v4);
    sub_10069FBEC(0, 0xF000000000000000);
    uint64_t v15 = v14;
    os_log_type_t v16 = (uint64_t *)v0[13];
    sub_100250CB0(v6, v4);
    uint64_t v17 = Data.init(referencing:)();
    unint64_t v19 = v18;

    sub_10024D338((uint64_t)(v0 + 8));
    uint64_t v20 = v0[5];
    uint64_t v21 = v0[7];
    sub_1002AF758((uint64_t)(v0 + 2), v20);
    uint64_t v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v22 setAksToken:isa];

    uint64_t v24 = v0[5];
    uint64_t v25 = v0[7];
    uint64_t v26 = sub_10026BB6C(v0 + 2, v24);
    v16[3] = v24;
    v16[4] = *(void *)(v25 + 8);
    uint64_t v27 = sub_100278AE4(v16);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v27, v26, v24);
    sub_100250CC4(v17, v19);
    sub_100250CB0(v6, v4);
  }
  sub_10024D338((uint64_t)(v0 + 2));
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1003C5028(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  v5[13] = a1;
  v5[14] = a2;
  return _swift_task_switch(sub_1003C4D34, 0, 0);
}

uint64_t sub_1003C50D8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return _swift_task_switch(sub_1003C50F8, 0, 0);
}

uint64_t sub_1003C50F8()
{
  char v46 = v0;
  uint64_t v1 = v0 + 2;
  uint64_t v2 = (void *)v0[15];
  sub_1003CF070((uint64_t)v2, (uint64_t)(v0 + 2));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_10026BB6C(v2, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  if (v6 >> 60 == 15)
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v7 = 30;
    *(void *)(v7 + 8) = 0xD000000000000019;
    *(void *)(v7 + 16) = 0x80000001007BBCE0;
    swift_willThrow();
    sub_10024D338((uint64_t)(v0 + 2));
    uint64_t v29 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    uint64_t v8 = v5;
    unint64_t v9 = v6;
    if (qword_100969D68 != -1) {
      swift_once();
    }
    uint64_t v44 = v0 + 9;
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000B47C(v10, (uint64_t)qword_100971568);
    sub_100278C78(v8, v9);
    unint64_t v11 = v9 >> 62;
    sub_10025ADCC(v8, v9);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      sub_10025ADCC(v8, v9);
      uint64_t v15 = Data.description.getter();
      unint64_t v17 = v16;
      sub_100250CB0(v8, v9);
      uint64_t v18 = v15;
      unint64_t v11 = v9 >> 62;
      v0[9] = sub_100254634(v18, v17, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v1 = v0 + 2;
      swift_bridgeObjectRelease();
      sub_100250CB0(v8, v9);
      sub_100250CB0(v8, v9);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Starting MacApprovePhone AKS session with acmToken: %s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100250CB0(v8, v9);
      sub_100250CB0(v8, v9);
    }

    switch((int)v11)
    {
      case 1:
        LODWORD(v19) = HIDWORD(v8) - v8;
        if (__OFSUB__(HIDWORD(v8), v8))
        {
          __break(1u);
LABEL_21:
          __break(1u);
          JUMPOUT(0x1003C5690);
        }
        uint64_t v19 = (int)v19;
LABEL_13:
        if (v19 == 1)
        {
          uint64_t v23 = v2[3];
          uint64_t v24 = v2[4];
          sub_10026BB6C((void *)v0[15], v23);
          (*(void (**)(uint64_t))(*(void *)(v24 + 8) + 16))(v23);
          sub_10026BB6C(v44, v0[12]);
          sub_10069FF44(0, 0xF000000000000000);
          sub_10069FBEC(0, 0xF000000000000000);
          uint64_t v26 = v25;
        }
        else
        {
LABEL_15:
          uint64_t v27 = v2[3];
          uint64_t v28 = v2[4];
          sub_10026BB6C((void *)v0[15], v27);
          (*(void (**)(uint64_t))(*(void *)(v28 + 8) + 16))(v27);
          sub_10026BB6C(v44, v0[12]);
          sub_10025ADCC(v8, v9);
          sub_10069FF44(v8, v9);
          sub_10069FBEC(0, 0xF000000000000000);
          uint64_t v26 = v31;
          sub_100250CB0(v8, v9);
        }
        uint64_t v32 = Data.init(referencing:)();
        unint64_t v34 = v33;

        sub_10024D338((uint64_t)v44);
        uint64_t v35 = (uint64_t *)v0[14];
        uint64_t v36 = v0[5];
        uint64_t v37 = v0[8];
        sub_1002AF758((uint64_t)v1, v36);
        uint64_t v38 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v37 + 24))(v36, v37);
        Class isa = Data._bridgeToObjectiveC()().super.isa;
        [v38 setAksToken:isa];

        sub_100250CC4(v32, v34);
        uint64_t v40 = v0[5];
        uint64_t v41 = v0[8];
        uint64_t v42 = sub_10026BB6C(v1, v40);
        v35[3] = v40;
        v35[4] = *(void *)(v41 + 8);
        uint64_t v43 = sub_100278AE4(v35);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(v43, v42, v40);
        sub_100250CB0(v8, v9);
        sub_10024D338((uint64_t)v1);
        uint64_t v29 = (uint64_t (*)(void))v0[1];
        break;
      case 2:
        uint64_t v21 = *(void *)(v8 + 16);
        uint64_t v20 = *(void *)(v8 + 24);
        BOOL v22 = __OFSUB__(v20, v21);
        uint64_t v19 = v20 - v21;
        if (!v22) {
          goto LABEL_13;
        }
        goto LABEL_21;
      case 3:
        goto LABEL_15;
      default:
        uint64_t v19 = BYTE6(v9);
        goto LABEL_13;
    }
  }
  return v29();
}

uint64_t sub_1003C56A0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  v5[14] = a1;
  v5[15] = a2;
  return _swift_task_switch(sub_1003C50F8, 0, 0);
}

uint64_t sub_1003C5750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[18] = a2;
  v3[19] = a3;
  v3[17] = a1;
  return _swift_task_switch(sub_1003C5774, 0, 0);
}

uint64_t sub_1003C5774()
{
  uint64_t v1 = *(void *)(v0 + 152);
  sub_100278C8C(*(void *)(v0 + 144), v0 + 16);
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput();
  sub_1003CE9F0(v1 + *(int *)(v2 + 36), v0 + 96);
  if (*(void *)(v0 + 120))
  {
    sub_1002AF688((long long *)(v0 + 96), v0 + 56);
    sub_10026BB6C((void *)(v0 + 56), *(void *)(v0 + 80));
    uint64_t v4 = sub_1003CF28C(0, 0xF000000000000000, 0, 0xF000000000000000);
    unint64_t v6 = v5;
    uint64_t v7 = *(uint64_t **)(v0 + 136);
    sub_10024D338(v0 + 56);
    uint64_t v8 = *(void *)(v0 + 40);
    uint64_t v9 = *(void *)(v0 + 48);
    sub_1002AF758(v0 + 16, v8);
    uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v10 setAksToken:isa];

    uint64_t v12 = *(void *)(v0 + 40);
    uint64_t v13 = *(void *)(v0 + 48);
    uint64_t v14 = sub_10026BB6C((void *)(v0 + 16), v12);
    v7[3] = v12;
    v7[4] = *(void *)(v13 + 8);
    uint64_t v15 = sub_100278AE4(v7);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v15, v14, v12);
    sub_100250CC4(v4, v6);
  }
  else
  {
    sub_10000A7E8(v0 + 96, &qword_1009778D0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v3 = 37;
    *(void *)(v3 + 8) = 0xD000000000000027;
    *(void *)(v3 + 16) = 0x80000001007BB890;
    swift_willThrow();
  }
  sub_10024D338(v0 + 16);
  unint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_1003C59B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[18] = a2;
  v7[19] = a3;
  v7[17] = a1;
  return _swift_task_switch(sub_1003C5774, 0, 0);
}

uint64_t sub_1003C5A78(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return _swift_task_switch(sub_1003C5A98, 0, 0);
}

uint64_t sub_1003C5A98()
{
  uint64_t v1 = (void *)v0[15];
  sub_1003CF070((uint64_t)v1, (uint64_t)(v0 + 2));
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10026BB6C(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  sub_10026BB6C(v0 + 9, v0[12]);
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[5];
  sub_10026BB6C(v1, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  unint64_t v8 = v7;
  sub_10069FF44(0, 0xF000000000000000);
  sub_10069FBEC(v6, v8);
  unint64_t v11 = v10;
  uint64_t v12 = (uint64_t *)v0[14];
  sub_100250CC4(v6, v8);
  uint64_t v13 = Data.init(referencing:)();
  unint64_t v15 = v14;

  sub_10024D338((uint64_t)(v0 + 9));
  uint64_t v16 = v0[5];
  uint64_t v17 = v0[8];
  sub_1002AF758((uint64_t)(v0 + 2), v16);
  uint64_t v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  [v18 setAksToken:isa];

  uint64_t v20 = v0[5];
  uint64_t v21 = v0[6];
  BOOL v22 = sub_10026BB6C(v0 + 2, v20);
  v12[3] = v20;
  v12[4] = *(void *)(v21 + 8);
  uint64_t v23 = sub_100278AE4(v12);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v23, v22, v20);
  sub_100250CC4(v13, v15);
  sub_10024D338((uint64_t)(v0 + 2));
  uint64_t v24 = (uint64_t (*)(void))v0[1];
  return v24();
}

uint64_t sub_1003C5CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  v5[14] = a1;
  v5[15] = a2;
  return _swift_task_switch(sub_1003C5A98, 0, 0);
}

uint64_t sub_1003C5DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[19] = a2;
  v3[20] = a3;
  v3[18] = a1;
  return _swift_task_switch(sub_1003C5DCC, 0, 0);
}

uint64_t sub_1003C5DCC()
{
  uint64_t v1 = *(void *)(v0 + 160);
  sub_1003CF0DC(*(void *)(v0 + 152), v0 + 16);
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput();
  sub_1003CE9F0(v1 + *(int *)(v2 + 36), v0 + 104);
  if (*(void *)(v0 + 128))
  {
    uint64_t v3 = *(void **)(v0 + 152);
    sub_1002AF688((long long *)(v0 + 104), v0 + 64);
    sub_10026BB6C((void *)(v0 + 64), *(void *)(v0 + 88));
    uint64_t v4 = v3[3];
    uint64_t v5 = v3[4];
    sub_10026BB6C(v3, v4);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
    unint64_t v8 = v7;
    uint64_t v10 = sub_1003CF28C(0, 0xF000000000000000, v6, v7);
    unint64_t v12 = v11;
    uint64_t v13 = *(uint64_t **)(v0 + 144);
    sub_100250CC4(v6, v8);
    sub_10024D338(v0 + 64);
    uint64_t v14 = *(void *)(v0 + 40);
    uint64_t v15 = *(void *)(v0 + 56);
    sub_1002AF758(v0 + 16, v14);
    uint64_t v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v16 setAksToken:isa];

    uint64_t v18 = *(void *)(v0 + 40);
    uint64_t v19 = *(void *)(v0 + 48);
    uint64_t v20 = sub_10026BB6C((void *)(v0 + 16), v18);
    v13[3] = v18;
    v13[4] = *(void *)(v19 + 8);
    uint64_t v21 = sub_100278AE4(v13);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v21, v20, v18);
    sub_100250CC4(v10, v12);
  }
  else
  {
    sub_10000A7E8(v0 + 104, &qword_1009778D0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v9 = 37;
    *(void *)(v9 + 8) = 0xD000000000000027;
    *(void *)(v9 + 16) = 0x80000001007BB890;
    swift_willThrow();
  }
  sub_10024D338(v0 + 16);
  BOOL v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_1003C6074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[19] = a2;
  v7[20] = a3;
  v7[18] = a1;
  return _swift_task_switch(sub_1003C5DCC, 0, 0);
}

uint64_t sub_1003C6134(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 192) = a1;
  *(void *)(v2 + 200) = a2;
  return _swift_task_switch(sub_1003C6154, 0, 0);
}

uint64_t sub_1003C6154()
{
  uint64_t v1 = *(void *)(v0 + 200);
  sub_1003CF0DC(v1, v0 + 16);
  sub_1003CF0DC(v1, v0 + 64);
  sub_10000A844(&qword_100972010);
  sub_10000A844(&qword_100972018);
  if (swift_dynamicCast())
  {
    sub_1002AF688((long long *)(v0 + 152), v0 + 112);
    uint64_t v2 = *(void *)(v0 + 136);
    uint64_t v3 = *(void *)(v0 + 144);
    sub_10026BB6C((void *)(v0 + 112), v2);
    uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
    unint64_t v6 = v5;
    sub_10024D338(v0 + 112);
  }
  else
  {
    *(void *)(v0 + 184) = 0;
    *(_OWORD *)(v0 + 152) = 0u;
    *(_OWORD *)(v0 + 168) = 0u;
    sub_10000A7E8(v0 + 152, &qword_100972020);
    uint64_t v4 = 0;
    unint64_t v6 = 0xF000000000000000;
  }
  unint64_t v7 = *(void **)(v0 + 200);
  uint64_t v8 = v7[3];
  uint64_t v9 = v7[4];
  sub_10026BB6C(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  sub_10026BB6C((void *)(v0 + 64), *(void *)(v0 + 88));
  sub_10069FBEC(v4, v6);
  unint64_t v11 = v10;
  unint64_t v12 = *(uint64_t **)(v0 + 192);
  sub_10024D338(v0 + 64);
  uint64_t v13 = *(void *)(v0 + 40);
  uint64_t v14 = *(void *)(v0 + 56);
  sub_1002AF758(v0 + 16, v13);
  uint64_t v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14);
  uint64_t v16 = Data.init(referencing:)();
  unint64_t v18 = v17;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100250CC4(v16, v18);
  [v15 setAksToken:isa];

  uint64_t v20 = *(void *)(v0 + 40);
  uint64_t v21 = *(void *)(v0 + 48);
  BOOL v22 = sub_10026BB6C((void *)(v0 + 16), v20);
  v12[3] = v20;
  v12[4] = *(void *)(v21 + 8);
  uint64_t v23 = sub_100278AE4(v12);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v23, v22, v20);
  sub_100250CB0(v4, v6);

  sub_10024D338(v0 + 16);
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_1003C6424(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  v5[24] = a1;
  v5[25] = a2;
  return _swift_task_switch(sub_1003C6154, 0, 0);
}

uint64_t sub_1003C64D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[20] = a2;
  v3[21] = a3;
  v3[19] = a1;
  return _swift_task_switch(sub_1003C64F8, 0, 0);
}

uint64_t sub_1003C64F8()
{
  uint64_t v1 = *(void *)(v0 + 168);
  sub_1003CF0DC(*(void *)(v0 + 160), v0 + 16);
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput();
  sub_1003CE9F0(v1 + *(int *)(v2 + 36), v0 + 104);
  if (*(void *)(v0 + 128))
  {
    uint64_t v3 = *(void **)(v0 + 160);
    sub_1002AF688((long long *)(v0 + 104), v0 + 64);
    uint64_t v4 = sub_10026BB6C((void *)(v0 + 64), *(void *)(v0 + 88));
    uint64_t v5 = v3[3];
    uint64_t v6 = v3[4];
    sub_10026BB6C(v3, v5);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
    unint64_t v9 = v8;
    uint64_t v10 = *v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession;
    uint64_t v11 = *(void *)v10;
    LOBYTE(v10) = *(unsigned char *)(v10 + 8);
    *(void *)(v0 + 104) = v11;
    *(unsigned char *)(v0 + 112) = v10;
    sub_10000A844(&qword_100971FC0);
    Optional.tryUnwrap(_:file:line:)();
    uint64_t v13 = sub_1004BF850(v7, v9);
    unint64_t v15 = v14;
    sub_100250CC4(v7, v9);
    sub_10024D338(v0 + 64);
    uint64_t v18 = *(void *)(v0 + 40);
    uint64_t v19 = *(void *)(v0 + 56);
    sub_1002AF758(v0 + 16, v18);
    uint64_t v20 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19);
    if (v15 >> 60 == 15)
    {
      Class isa = 0;
    }
    else
    {
      sub_10025ADCC(v13, v15);
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_100250CB0(v13, v15);
    }
    BOOL v22 = *(uint64_t **)(v0 + 152);
    [v20 setAksToken:isa];

    uint64_t v23 = *(void *)(v0 + 40);
    uint64_t v24 = *(void *)(v0 + 48);
    uint64_t v25 = sub_10026BB6C((void *)(v0 + 16), v23);
    v22[3] = v23;
    v22[4] = *(void *)(v24 + 8);
    uint64_t v26 = sub_100278AE4(v22);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v26, v25, v23);
    sub_100250CB0(v13, v15);
    sub_10024D338(v0 + 16);
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    sub_10000A7E8(v0 + 104, &qword_1009778D0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v12 = 37;
    *(void *)(v12 + 8) = 0xD000000000000027;
    *(void *)(v12 + 16) = 0x80000001007BB890;
    swift_willThrow();
    sub_10024D338(v0 + 16);
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v16();
}

uint64_t sub_1003C684C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[20] = a2;
  v7[21] = a3;
  v7[19] = a1;
  return _swift_task_switch(sub_1003C64F8, 0, 0);
}

uint64_t sub_1003C690C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return _swift_task_switch(sub_1003C692C, 0, 0);
}

uint64_t sub_1003C692C()
{
  sub_1003CF0DC(v0[9], (uint64_t)(v0 + 2));
  uint64_t v1 = sub_1003CEA7C();
  unint64_t v3 = v2;
  uint64_t v4 = v0[5];
  uint64_t v6 = v0[7];
  uint64_t v5 = (uint64_t *)v0[8];
  sub_1002AF758((uint64_t)(v0 + 2), v4);
  uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v4, v6);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  [v7 setRangingToken:isa];

  uint64_t v9 = v0[5];
  uint64_t v10 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v9);
  uint64_t v11 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v10 + 16);
  sub_10025ADCC(v1, v3);
  v11(v1, v3, v9, v10);
  uint64_t v12 = v0[5];
  uint64_t v13 = v0[7];
  unint64_t v14 = sub_10026BB6C(v0 + 2, v12);
  v5[3] = v12;
  v5[4] = *(void *)(v13 + 8);
  unint64_t v15 = sub_100278AE4(v5);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v15, v14, v12);
  sub_100250CC4(v1, v3);
  sub_10024D338((uint64_t)(v0 + 2));
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1003C6AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  v5[8] = a1;
  v5[9] = a2;
  return _swift_task_switch(sub_1003C692C, 0, 0);
}

uint64_t sub_1003C6BAC(uint64_t a1, uint64_t a2)
{
  v2[8] = a1;
  v2[9] = a2;
  uint64_t v3 = type metadata accessor for Date();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_100975040);
  v2[13] = swift_task_alloc();
  return _swift_task_switch(sub_1003C6C9C, 0, 0);
}

uint64_t sub_1003C6C9C()
{
  uint64_t v2 = v0 + 13;
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  uint64_t v22 = v0[10];
  uint64_t v4 = (void *)v0[9];
  sub_1003CF0DC((uint64_t)v4, (uint64_t)(v0 + 2));
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[7];
  sub_1002AF758((uint64_t)(v0 + 2), v5);
  uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
  uint64_t v8 = v4[3];
  uint64_t v9 = v4[4];
  sub_10026BB6C(v4, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v22) == 1)
  {
    uint64_t v2 = v0 + 12;
    sub_10000A7E8(v0[13], (uint64_t *)&unk_100975040);
    static Date.distantFuture.getter();
  }
  uint64_t v10 = *v2;
  uint64_t v11 = v0[10];
  uint64_t v12 = v0[11];
  uint64_t v13 = (uint64_t *)v0[8];
  Date.timeIntervalSince1970.getter();
  double v15 = v14;
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  [v7 setUnlockDate:v15];

  uint64_t v16 = v0[5];
  uint64_t v17 = v0[6];
  uint64_t v18 = sub_10026BB6C(v0 + 2, v16);
  v13[3] = v16;
  v13[4] = *(void *)(v17 + 8);
  uint64_t v19 = sub_100278AE4(v13);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v19, v18, v16);
  sub_10024D338((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_1003C6EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  return sub_1003C6BAC(a1, a2);
}

uint64_t sub_1003C6F48(uint64_t a1, uint64_t a2)
{
  v2[9] = a1;
  v2[10] = a2;
  sub_10000A844((uint64_t *)&unk_100975040);
  v2[11] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Date();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  return _swift_task_switch(sub_1003C7048, 0, 0);
}

uint64_t sub_1003C7048()
{
  uint64_t v37 = v0;
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = (void *)v0[10];
  uint64_t v4 = v0[11];
  sub_1003CF0DC((uint64_t)v3, (uint64_t)(v0 + 2));
  uint64_t v5 = v3[3];
  uint64_t v6 = v3[4];
  sub_10026BB6C(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v4, 1, v2) == 1)
  {
    sub_10000A7E8(v0[11], (uint64_t *)&unk_100975040);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v7 = 11;
    *(void *)(v7 + 8) = 0xD00000000000002ELL;
    *(void *)(v7 + 16) = 0x80000001007BBA10;
    swift_willThrow();
    sub_10024D338((uint64_t)(v0 + 2));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    uint64_t v35 = v0 + 2;
    (*(void (**)(void, void, void))(v0[13] + 32))(v0[15], v0[11], v0[12]);
    if (qword_100969D68 != -1) {
      swift_once();
    }
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v12 = v0[12];
    uint64_t v11 = v0[13];
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000B47C(v13, (uint64_t)qword_100971568);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v9, v12);
    double v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v18 = v0[13];
    uint64_t v17 = v0[14];
    uint64_t v19 = v0[12];
    if (v16)
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      sub_1003CF140(&qword_100974530, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[8] = sub_100254634(v21, v22, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      unint64_t v34 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
      v34(v17, v19);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Registration success date: %s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      unint64_t v34 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
      v34(v0[14], v0[12]);
    }

    uint64_t v23 = v0[15];
    uint64_t v24 = v0[12];
    uint64_t v25 = (uint64_t *)v0[9];
    uint64_t v26 = v0[5];
    uint64_t v27 = v0[7];
    sub_1002AF758((uint64_t)v35, v26);
    uint64_t v28 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v27 + 24))(v26, v27);
    Date.timeIntervalSince1970.getter();
    [v28 setUnlockDate:];

    uint64_t v29 = v0[5];
    uint64_t v30 = v0[6];
    uint64_t v31 = sub_10026BB6C(v35, v29);
    v25[3] = v29;
    v25[4] = *(void *)(v30 + 8);
    uint64_t v32 = sub_100278AE4(v25);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v32, v31, v29);
    v34(v23, v24);
    sub_10024D338((uint64_t)v35);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
  }
  return v8();
}

uint64_t sub_1003C74D4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000A6F0;
  return sub_1003C6F48(a1, a2);
}

uint64_t sub_1003C7574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[19] = a2;
  v3[20] = a3;
  v3[18] = a1;
  sub_10000A844((uint64_t *)&unk_100975040);
  v3[21] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Date();
  v3[22] = v4;
  v3[23] = *(void *)(v4 - 8);
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  return _swift_task_switch(sub_1003C7678, 0, 0);
}

uint64_t sub_1003C7678()
{
  uint64_t v63 = v0;
  sub_100278C8C(*(void *)(v0 + 152), v0 + 16);
  uint64_t v3 = sub_1003BD1C8();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v0 + 160);
  uint64_t v7 = type metadata accessor for SDAuthenticationCommonOperationInput();
  sub_1003CE9F0(v6 + *(int *)(v7 + 36), v0 + 96);
  if (!*(void *)(v0 + 120))
  {
    sub_10000A7E8(v0 + 96, &qword_1009778D0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v13 = 37;
    *(void *)(v13 + 8) = 0xD000000000000027;
    *(void *)(v13 + 16) = 0x80000001007BB890;
    swift_willThrow();
    swift_bridgeObjectRelease();
LABEL_2:
    sub_10024D338(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_3;
  }
  sub_1002AF688((long long *)(v0 + 96), v0 + 56);
  uint64_t v8 = *(void *)(*sub_10026BB6C((void *)(v0 + 56), *(void *)(v0 + 80))
                 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
  uint64_t v9 = *(os_unfair_lock_s **)(v8 + 112);
  uint64_t v10 = (void *)swift_task_alloc();
  v10[2] = v8;
  v10[3] = v3;
  v10[4] = v5;
  uint64_t v11 = swift_task_alloc();
  *(void *)(v11 + 16) = sub_1003CEBE0;
  *(void *)(v11 + 24) = v10;
  v9 += 4;
  os_unfair_lock_lock(v9);
  sub_1002CEA38(v12);
  os_unfair_lock_unlock(v9);
  swift_task_dealloc();
  NSString v61 = (void *)(v0 + 56);
  uint64_t v14 = *(void *)(v0 + 176);
  uint64_t v15 = *(void *)(v0 + 184);
  uint64_t v16 = *(void *)(v0 + 168);
  swift_task_dealloc();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v16, 1, v14) == 1)
  {
    uint64_t v17 = *(void *)(v0 + 168);
    swift_bridgeObjectRelease();
    sub_10000A7E8(v17, (uint64_t *)&unk_100975040);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v18 = 11;
    *(void *)(v18 + 8) = 0xD00000000000002ELL;
    *(void *)(v18 + 16) = 0x80000001007BBA10;
    swift_willThrow();
    uint64_t v19 = v0 + 56;
LABEL_11:
    sub_10024D338(v19);
    goto LABEL_2;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 184) + 32))(*(void *)(v0 + 200), *(void *)(v0 + 168), *(void *)(v0 + 176));
  uint64_t v20 = *(void *)(*sub_10026BB6C(v61, *(void *)(v0 + 80))
                  + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
  uint64_t v21 = *(os_unfair_lock_s **)(v20 + 112);
  unint64_t v22 = (void *)swift_task_alloc();
  v22[2] = v20;
  v22[3] = v3;
  v22[4] = v5;
  uint64_t v23 = swift_task_alloc();
  *(void *)(v23 + 16) = sub_1003CEC00;
  *(void *)(v23 + 24) = v22;
  os_unfair_lock_lock(v21 + 4);
  sub_1003CEC20(&v62);
  os_unfair_lock_unlock(v21 + 4);
  uint64_t v24 = *((void *)&v62 + 1);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  if (!v24)
  {
    uint64_t v41 = *(void *)(v0 + 200);
    uint64_t v43 = *(void *)(v0 + 176);
    uint64_t v42 = *(void *)(v0 + 184);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v44 = 11;
    *(void *)(v44 + 8) = 0xD00000000000002ELL;
    *(void *)(v44 + 16) = 0x80000001007BBA10;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
    uint64_t v19 = v0 + 56;
    goto LABEL_11;
  }
  if (qword_100969D68 != -1) {
    swift_once();
  }
  uint64_t v26 = *(void *)(v0 + 192);
  uint64_t v25 = *(void *)(v0 + 200);
  uint64_t v28 = *(void *)(v0 + 176);
  uint64_t v27 = *(void *)(v0 + 184);
  uint64_t v29 = type metadata accessor for Logger();
  sub_10000B47C(v29, (uint64_t)qword_100971568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v26, v25, v28);
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  BOOL v32 = os_log_type_enabled(v30, v31);
  uint64_t v34 = *(void *)(v0 + 184);
  uint64_t v33 = *(void *)(v0 + 192);
  uint64_t v35 = *(void *)(v0 + 176);
  if (v32)
  {
    log = v30;
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v62 = swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 136315138;
    sub_1003CF140(&qword_100974530, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v37 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 136) = sub_100254634(v37, v38, (uint64_t *)&v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    v39(v33, v35);
    uint64_t v40 = v39;
    _os_log_impl((void *)&_mh_execute_header, log, v31, "Registration success date: %s", v36, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    v45(v33, v35);
    uint64_t v40 = v45;
  }
  uint64_t v46 = *(void *)(v0 + 200);
  uint64_t v47 = *(void *)(v0 + 176);
  NSString v48 = *(uint64_t **)(v0 + 144);
  uint64_t v49 = *(void *)(v0 + 40);
  uint64_t v50 = *(void *)(v0 + 48);
  sub_1002AF758(v0 + 16, v49);
  uint64_t v51 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v50 + 24))(v49, v50);
  Date.timeIntervalSince1970.getter();
  [v51 setUnlockDate:];

  uint64_t v52 = *(void *)(v0 + 40);
  uint64_t v53 = *(void *)(v0 + 48);
  sub_1002AF758(v0 + 16, v52);
  int v54 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v53 + 24))(v52, v53);
  NSString v55 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v54 setRegistrationID:v55];

  uint64_t v56 = *(void *)(v0 + 40);
  uint64_t v57 = *(void *)(v0 + 48);
  int64_t v58 = sub_10026BB6C((void *)(v0 + 16), v56);
  v48[3] = v56;
  v48[4] = *(void *)(v57 + 8);
  uint64_t v59 = sub_100278AE4(v48);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v56 - 8) + 16))(v59, v58, v56);
  v40(v46, v47);
  sub_10024D338((uint64_t)v61);
  sub_10024D338(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
LABEL_3:
  return v1();
}

uint64_t sub_1003C7E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  return sub_1003C7574(a1, a2, a3);
}

uint64_t sub_1003C7ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return _swift_task_switch(sub_1003C7EF0, 0, 0);
}

uint64_t sub_1003C7EF0()
{
  uint64_t v1 = v0[12];
  sub_100278C8C(v0[11], (uint64_t)(v0 + 2));
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v2);
  uint64_t v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  [v4 setVersion:1];

  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v5);
  uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
  uint64_t v8 = type metadata accessor for SDAuthenticationCommonOperationInput();
  UUID.uuidString.getter();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setSessionID:v9];

  uint64_t v10 = v0[5];
  uint64_t v11 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v10);
  uint64_t v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
  if (HIDWORD(*(void *)(v1 + *(int *)(v8 + 28)))) {
    return _assertionFailure(_:_:file:line:flags:)();
  }
  uint64_t v13 = v12;
  [v12 setType:];

  if (qword_100969D68 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_10000B47C(v14, (uint64_t)qword_100971568);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 138412290;
    swift_beginAccess();
    uint64_t v19 = v0[5];
    uint64_t v18 = v0[6];
    sub_1002AF758((uint64_t)(v0 + 2), v19);
    uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v19, v18);
    swift_endAccess();
    v0[7] = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v28 = v20;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Sending %@", v17, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t v21 = (uint64_t *)v0[10];

  swift_beginAccess();
  uint64_t v22 = v0[5];
  uint64_t v23 = v0[6];
  uint64_t v24 = sub_10026BB6C(v0 + 2, v22);
  v21[3] = v22;
  v21[4] = *(void *)(v23 + 8);
  uint64_t v25 = sub_100278AE4(v21);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v25, v24, v22);
  sub_10024D338((uint64_t)(v0 + 2));
  uint64_t v26 = (uint64_t (*)(void))v0[1];
  return v26();
}

uint64_t sub_1003C82F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  return _swift_task_switch(sub_1003C7EF0, 0, 0);
}

uint64_t sub_1003C83B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return _swift_task_switch(sub_1003C83DC, 0, 0);
}

uint64_t sub_1003C83DC()
{
  sub_100278C8C(v0[11], (uint64_t)(v0 + 2));
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v1);
  uint64_t v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
  [v3 setVersion:1];

  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v4);
  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  type metadata accessor for SDAuthenticationCommonOperationInput();
  UUID.uuidString.getter();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v6 setSessionID:v7];

  if (qword_100969D68 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000B47C(v8, (uint64_t)qword_100971568);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412290;
    swift_beginAccess();
    uint64_t v12 = v0[5];
    uint64_t v13 = v0[6];
    sub_1002AF758((uint64_t)(v0 + 2), v12);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
    swift_endAccess();
    v0[7] = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v22 = v14;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Sending %@", v11, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t v15 = (uint64_t *)v0[10];

  swift_beginAccess();
  uint64_t v16 = v0[5];
  uint64_t v17 = v0[6];
  uint64_t v18 = sub_10026BB6C(v0 + 2, v16);
  v15[3] = v16;
  v15[4] = *(void *)(v17 + 8);
  uint64_t v19 = sub_100278AE4(v15);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v19, v18, v16);
  sub_10024D338((uint64_t)(v0 + 2));
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_1003C8720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *NSString v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  return _swift_task_switch(sub_1003C83DC, 0, 0);
}

uint64_t sub_1003C87E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return _swift_task_switch(sub_1003C8804, 0, 0);
}

uint64_t sub_1003C8804()
{
  sub_100278C8C(v0[11], (uint64_t)(v0 + 2));
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v1);
  uint64_t v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
  [v3 setVersion:1];

  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v4);
  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  type metadata accessor for SDAuthenticationCommonOperationInput();
  UUID.uuidString.getter();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v6 setSessionID:v7];

  if (qword_100969D68 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000B47C(v8, (uint64_t)qword_100971568);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412290;
    swift_beginAccess();
    uint64_t v12 = v0[5];
    uint64_t v13 = v0[6];
    sub_1002AF758((uint64_t)(v0 + 2), v12);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
    swift_endAccess();
    v0[7] = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v22 = v14;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Sending %@", v11, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t v15 = (uint64_t *)v0[10];

  swift_beginAccess();
  uint64_t v16 = v0[5];
  uint64_t v17 = v0[6];
  uint64_t v18 = sub_10026BB6C(v0 + 2, v16);
  v15[3] = v16;
  v15[4] = *(void *)(v17 + 8);
  uint64_t v19 = sub_100278AE4(v15);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v19, v18, v16);
  sub_10024D338((uint64_t)(v0 + 2));
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_1003C8B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *NSString v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  return _swift_task_switch(sub_1003C8804, 0, 0);
}

uint64_t sub_1003C8C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return _swift_task_switch(sub_1003C8C2C, 0, 0);
}

uint64_t sub_1003C8C2C()
{
  sub_100278C8C(v0[11], (uint64_t)(v0 + 2));
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v1);
  uint64_t v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
  [v3 setVersion:1];

  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v4);
  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
  type metadata accessor for SDAuthenticationCommonOperationInput();
  UUID.uuidString.getter();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v6 setSessionID:v7];

  uint64_t v8 = v0[5];
  uint64_t v9 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v8);
  os_log_type_t v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(v8, v9);
  [v10 setSuccess:1];

  if (qword_100969D68 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10000B47C(v11, (uint64_t)qword_100971568);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 138412290;
    swift_beginAccess();
    uint64_t v15 = v0[5];
    uint64_t v16 = v0[6];
    sub_1002AF758((uint64_t)(v0 + 2), v15);
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 32))(v15, v16);
    swift_endAccess();
    v0[7] = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v25 = v17;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Sending %@", v14, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t v18 = (uint64_t *)v0[10];

  swift_beginAccess();
  uint64_t v19 = v0[5];
  uint64_t v20 = v0[6];
  uint64_t v21 = sub_10026BB6C(v0 + 2, v19);
  v18[3] = v19;
  v18[4] = *(void *)(v20 + 16);
  uint64_t v22 = sub_100278AE4(v18);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v22, v21, v19);
  sub_10024D338((uint64_t)(v0 + 2));
  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_1003C8FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *NSString v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  return _swift_task_switch(sub_1003C8C2C, 0, 0);
}

uint64_t sub_1003C9078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[18] = a2;
  v3[19] = a3;
  v3[17] = a1;
  return _swift_task_switch(sub_1003C909C, 0, 0);
}

uint64_t sub_1003C909C()
{
  uint64_t v45 = v0;
  sub_100278C8C(*(void *)(v0 + 144), v0 + 16);
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  sub_1002AF758(v0 + 16, v1);
  uint64_t v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
  [v3 setVersion:1];

  uint64_t v6 = sub_1003BD1C8();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v0 + 152);
  uint64_t v10 = type metadata accessor for SDAuthenticationCommonOperationInput();
  sub_1003CE9F0(v9 + *(int *)(v10 + 36), v0 + 96);
  if (!*(void *)(v0 + 120))
  {
    sub_10000A7E8(v0 + 96, &qword_1009778D0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v15 = 37;
    *(void *)(v15 + 8) = 0xD000000000000027;
    *(void *)(v15 + 16) = 0x80000001007BB890;
    swift_willThrow();
    swift_bridgeObjectRelease();
LABEL_2:
    sub_10024D338(v0 + 16);
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_3;
  }
  sub_1002AF688((long long *)(v0 + 96), v0 + 56);
  uint64_t v11 = *(void *)(*sub_10026BB6C((void *)(v0 + 56), *(void *)(v0 + 80))
                  + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
  uint64_t v12 = *(os_unfair_lock_s **)(v11 + 112);
  os_log_type_t v13 = (void *)swift_task_alloc();
  v13[2] = v11;
  v13[3] = v6;
  v13[4] = v8;
  uint64_t v14 = swift_task_alloc();
  *(void *)(v14 + 16) = sub_1003CEC74;
  *(void *)(v14 + 24) = v13;
  v12 += 4;
  os_unfair_lock_lock(v12);
  sub_1003CEC20(&v44);
  os_unfair_lock_unlock(v12);
  uint64_t v16 = *((void *)&v44 + 1);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  if (!v16)
  {
    sub_10024D338(v0 + 56);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v42 = 10;
    *(void *)(v42 + 8) = 0xD000000000000012;
    *(void *)(v42 + 16) = 0x80000001007BBB10;
    swift_willThrow();
    goto LABEL_2;
  }
  uint64_t v17 = *(void *)(v0 + 152);
  sub_10024D338(v0 + 56);
  uint64_t v18 = *(void *)(v0 + 40);
  uint64_t v19 = *(void *)(v0 + 48);
  sub_1002AF758(v0 + 16, v18);
  uint64_t v20 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19);
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v20 setPairingID:v21];

  uint64_t v22 = *(void *)(v0 + 40);
  uint64_t v23 = *(void *)(v0 + 48);
  sub_1002AF758(v0 + 16, v22);
  uint64_t v24 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(v22, v23);
  UUID.uuidString.getter();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v24 setSessionID:v25];

  uint64_t v26 = *(void *)(v0 + 40);
  uint64_t v27 = *(void *)(v0 + 48);
  sub_1002AF758(v0 + 16, v26);
  uint64_t v28 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v27 + 24))(v26, v27);
  if (HIDWORD(*(void *)(v17 + *(int *)(v10 + 28)))) {
    return _assertionFailure(_:_:file:line:flags:)();
  }
  uint64_t v29 = v28;
  [v28 setType:];

  if (qword_100969D68 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  sub_10000B47C(v30, (uint64_t)qword_100971568);
  os_log_type_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v43 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 138412290;
    swift_beginAccess();
    uint64_t v35 = *(void *)(v0 + 40);
    uint64_t v34 = *(void *)(v0 + 48);
    sub_1002AF758(v0 + 16, v35);
    uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 24))(v35, v34);
    swift_endAccess();
    *(void *)(v0 + 56) = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v43 = v36;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Sending %@", v33, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  uint64_t v37 = *(uint64_t **)(v0 + 136);

  swift_beginAccess();
  uint64_t v38 = *(void *)(v0 + 40);
  uint64_t v39 = *(void *)(v0 + 48);
  uint64_t v40 = sub_10026BB6C((void *)(v0 + 16), v38);
  v37[3] = v38;
  v37[4] = *(void *)(v39 + 8);
  uint64_t v41 = sub_100278AE4(v37);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(v41, v40, v38);
  sub_10024D338(v0 + 16);
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
LABEL_3:
  return v4();
}

uint64_t sub_1003C9704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[18] = a2;
  v7[19] = a3;
  v7[17] = a1;
  return _swift_task_switch(sub_1003C909C, 0, 0);
}

uint64_t sub_1003C97C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  return _swift_task_switch(sub_1003C97E8, 0, 0);
}

uint64_t sub_1003C97E8()
{
  uint64_t v19 = v0;
  uint64_t v3 = sub_1003BD1C8();
  unint64_t v5 = v4;
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = type metadata accessor for SDAuthenticationCommonOperationInput();
  sub_1003CE9F0(v6 + *(int *)(v7 + 36), v0 + 56);
  if (*(void *)(v0 + 80))
  {
    sub_1002AF688((long long *)(v0 + 56), v0 + 16);
    uint64_t v8 = *(void *)(*sub_10026BB6C((void *)(v0 + 16), *(void *)(v0 + 40))
                   + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
    uint64_t v9 = *(os_unfair_lock_s **)(v8 + 112);
    uint64_t v10 = (void *)swift_task_alloc();
    v10[2] = v8;
    v10[3] = v3;
    v10[4] = v5;
    uint64_t v11 = swift_task_alloc();
    *(void *)(v11 + 16) = sub_1003CEC94;
    *(void *)(v11 + 24) = v10;
    os_unfair_lock_lock(v9 + 4);
    sub_1002CEA38(v12);
    os_unfair_lock_unlock(v9 + 4);
    swift_task_dealloc();
    swift_task_dealloc();
    sub_10024D338(v0 + 16);
    if (qword_100969D68 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10000B47C(v14, (uint64_t)qword_100971568);
    swift_bridgeObjectRetain();
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 16) = sub_100254634(v3, v5, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Unpaired %s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_100278C8C(*(void *)(v0 + 104), *(void *)(v0 + 96));
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    sub_10000A7E8(v0 + 56, &qword_1009778D0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v13 = 37;
    *(void *)(v13 + 8) = 0xD000000000000027;
    *(void *)(v13 + 16) = 0x80000001007BB890;
    swift_willThrow();
    swift_bridgeObjectRelease();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v1();
}

uint64_t sub_1003C9B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[13] = a2;
  v7[14] = a3;
  v7[12] = a1;
  return _swift_task_switch(sub_1003C97E8, 0, 0);
}

uint64_t sub_1003C9C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  return _swift_task_switch(sub_1003C9C2C, 0, 0);
}

uint64_t sub_1003C9C2C()
{
  uint64_t v22 = v0;
  uint64_t v3 = sub_1003BD1C8();
  unint64_t v5 = v4;
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = type metadata accessor for SDAuthenticationCommonOperationInput();
  sub_1003CE9F0(v6 + *(int *)(v7 + 36), v0 + 56);
  if (*(void *)(v0 + 80))
  {
    uint64_t v8 = *(void **)(v0 + 104);
    sub_1002AF688((long long *)(v0 + 56), v0 + 16);
    sub_10026BB6C((void *)(v0 + 16), *(void *)(v0 + 40));
    sub_10026BB6C(v8, v8[3]);
    _s6UnpairV27HandlePairingDisableContextVMa(0);
    swift_bridgeObjectRetain();
    sub_1003D1B08();
    swift_bridgeObjectRelease();
    sub_10024D338(v0 + 16);
    if (qword_100969D68 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000B47C(v10, (uint64_t)qword_100971568);
    swift_bridgeObjectRetain();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v21 = v14;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 16) = sub_100254634(v3, v5, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Unpaired %s", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    os_log_type_t v16 = *(uint64_t **)(v0 + 96);
    uint64_t v15 = *(void **)(v0 + 104);
    uint64_t v17 = v8[3];
    uint64_t v18 = v15[4];
    uint64_t v19 = sub_10026BB6C(v15, v17);
    v16[3] = v17;
    v16[4] = *(void *)(v18 + 8);
    uint64_t v20 = sub_100278AE4(v16);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v20, v19, v17);
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    sub_10000A7E8(v0 + 56, &qword_1009778D0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v9 = 37;
    *(void *)(v9 + 8) = 0xD000000000000027;
    *(void *)(v9 + 16) = 0x80000001007BB890;
    swift_willThrow();
    swift_bridgeObjectRelease();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v1();
}

uint64_t sub_1003C9FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[13] = a2;
  v7[14] = a3;
  v7[12] = a1;
  return _swift_task_switch(sub_1003C9C2C, 0, 0);
}

uint64_t sub_1003CA078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return _swift_task_switch(sub_1003CA09C, 0, 0);
}

uint64_t sub_1003CA09C()
{
  os_log_type_t v31 = v0;
  uint64_t v1 = v0[12];
  sub_100278C8C(v0[11], (uint64_t)(v0 + 2));
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v2);
  [*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32)(v2, v3) setVersion:1];
  swift_unknownObjectRelease();
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v4);
  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
  uint64_t v7 = type metadata accessor for SDAuthenticationCommonOperationInput();
  UUID.uuidString.getter();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v6 setSessionID:v8];

  swift_unknownObjectRelease();
  uint64_t v9 = v0[5];
  uint64_t v10 = v0[6];
  sub_1002AF758((uint64_t)(v0 + 2), v9);
  uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
  if (HIDWORD(*(void *)(v1 + *(int *)(v7 + 28)))) {
    return _assertionFailure(_:_:file:line:flags:)();
  }
  [v11 setType:];
  swift_unknownObjectRelease();
  if (qword_100969D68 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000B47C(v12, (uint64_t)qword_100971568);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315138;
    swift_beginAccess();
    uint64_t v17 = v0[5];
    uint64_t v16 = v0[6];
    sub_1002AF758((uint64_t)(v0 + 2), v17);
    uint64_t v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 32))(v17, v16);
    swift_endAccess();
    id v19 = [v18 description];
    swift_unknownObjectRelease();
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v22 = v21;

    v0[7] = sub_100254634(v20, v22, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Sending %s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v23 = (uint64_t *)v0[10];
  swift_beginAccess();
  uint64_t v24 = v0[5];
  uint64_t v25 = v0[6];
  uint64_t v26 = sub_10026BB6C(v0 + 2, v24);
  v23[3] = v24;
  v23[4] = *(void *)(v25 + 8);
  uint64_t v27 = sub_100278AE4(v23);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v27, v26, v24);
  sub_10024D338((uint64_t)(v0 + 2));
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_1003CA4EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  return _swift_task_switch(sub_1003CA09C, 0, 0);
}

uint64_t sub_1003CA5AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[18] = a2;
  v3[19] = a3;
  v3[17] = a1;
  return _swift_task_switch(sub_1003CA5D0, 0, 0);
}

uint64_t sub_1003CA5D0()
{
  uint64_t v1 = *(void *)(v0 + 152);
  sub_100278C8C(*(void *)(v0 + 144), v0 + 16);
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput();
  sub_1003CE9F0(v1 + *(int *)(v2 + 36), v0 + 96);
  if (*(void *)(v0 + 120))
  {
    sub_1002AF688((long long *)(v0 + 96), v0 + 56);
    uint64_t v3 = *(void *)(*sub_10026BB6C((void *)(v0 + 56), *(void *)(v0 + 80))
                   + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
    uint64_t v4 = *(os_unfair_lock_s **)(v3 + 112);
    uint64_t v5 = swift_task_alloc();
    *(void *)(v5 + 16) = sub_1003CEA58;
    *(void *)(v5 + 24) = v3;
    os_unfair_lock_lock(v4 + 4);
    sub_1002CEA38(v6);
    NSString v8 = *(uint64_t **)(v0 + 136);
    os_unfair_lock_unlock(v4 + 4);
    swift_task_dealloc();
    sub_10024D338(v0 + 56);
    uint64_t v9 = *(void *)(v0 + 40);
    uint64_t v10 = *(void *)(v0 + 48);
    sub_1002AF758(v0 + 16, v9);
    uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v11 setLongTermKey:isa];

    uint64_t v13 = *(void *)(v0 + 40);
    uint64_t v14 = *(void *)(v0 + 48);
    uint64_t v15 = sub_10026BB6C((void *)(v0 + 16), v13);
    v8[3] = v13;
    v8[4] = *(void *)(v14 + 8);
    uint64_t v16 = sub_100278AE4(v8);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v16, v15, v13);
    sub_100250CC4(v19, v20);
  }
  else
  {
    sub_10000A7E8(v0 + 96, &qword_1009778D0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v7 = 37;
    *(void *)(v7 + 8) = 0xD000000000000027;
    *(void *)(v7 + 16) = 0x80000001007BB890;
    swift_willThrow();
  }
  sub_10024D338(v0 + 16);
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_1003CA868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[18] = a2;
  v7[19] = a3;
  v7[17] = a1;
  return _swift_task_switch(sub_1003CA5D0, 0, 0);
}

uint64_t sub_1003CA928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[19] = a2;
  v3[20] = a3;
  v3[18] = a1;
  return _swift_task_switch(sub_1003CA94C, 0, 0);
}

uint64_t sub_1003CA94C()
{
  uint64_t v1 = *(void *)(v0 + 160);
  sub_1003CF0DC(*(void *)(v0 + 152), v0 + 16);
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput();
  sub_1003CE9F0(v1 + *(int *)(v2 + 36), v0 + 104);
  if (*(void *)(v0 + 128))
  {
    sub_1002AF688((long long *)(v0 + 104), v0 + 64);
    uint64_t v3 = *(void *)(*sub_10026BB6C((void *)(v0 + 64), *(void *)(v0 + 88))
                   + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
    uint64_t v4 = *(os_unfair_lock_s **)(v3 + 112);
    uint64_t v5 = swift_task_alloc();
    *(void *)(v5 + 16) = sub_1003CEA58;
    *(void *)(v5 + 24) = v3;
    v4 += 4;
    os_unfair_lock_lock(v4);
    sub_10030F73C(v6);
    NSString v8 = *(void **)(v0 + 152);
    os_unfair_lock_unlock(v4);
    swift_task_dealloc();
    sub_10026BB6C((void *)(v0 + 64), *(void *)(v0 + 88));
    uint64_t v9 = v8[3];
    uint64_t v10 = v8[4];
    sub_10026BB6C(v8, v9);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
    unint64_t v13 = v12;
    uint64_t v15 = sub_1003D0338(v11, v12, 0, 0xF000000000000000);
    uint64_t v16 = *(uint64_t **)(v0 + 144);
    unint64_t v31 = v17;
    sub_100250CC4(v11, v13);
    uint64_t v18 = *(void *)(v0 + 40);
    uint64_t v19 = *(void *)(v0 + 56);
    sub_1002AF758(v0 + 16, v18);
    unint64_t v20 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v20 setLongTermKey:isa];

    uint64_t v22 = *(void *)(v0 + 40);
    uint64_t v23 = *(void *)(v0 + 56);
    sub_1002AF758(v0 + 16, v22);
    uint64_t v24 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(v22, v23);
    Class v25 = Data._bridgeToObjectiveC()().super.isa;
    [v24 setToken:v25];

    uint64_t v26 = *(void *)(v0 + 40);
    uint64_t v27 = *(void *)(v0 + 48);
    uint64_t v28 = sub_10026BB6C((void *)(v0 + 16), v26);
    v16[3] = v26;
    v16[4] = *(void *)(v27 + 8);
    uint64_t v29 = sub_100278AE4(v16);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v29, v28, v26);
    sub_100250CC4(v15, v31);
    sub_100250CC4(v32, v33);
    sub_10024D338(v0 + 64);
  }
  else
  {
    sub_10000A7E8(v0 + 104, &qword_1009778D0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v7 = 37;
    *(void *)(v7 + 8) = 0xD000000000000027;
    *(void *)(v7 + 16) = 0x80000001007BB890;
    swift_willThrow();
  }
  sub_10024D338(v0 + 16);
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_1003CAD04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[19] = a2;
  v7[20] = a3;
  v7[18] = a1;
  return _swift_task_switch(sub_1003CA94C, 0, 0);
}

uint64_t sub_1003CADC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[20] = a2;
  v3[21] = a3;
  v3[19] = a1;
  return _swift_task_switch(sub_1003CADE8, 0, 0);
}

uint64_t sub_1003CADE8()
{
  sub_1003CF070(*(void *)(v0 + 160), v0 + 16);
  sub_1003BD1C8();
  uint64_t v2 = *(void *)(v0 + 168);
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for SDAuthenticationCommonOperationInput();
  sub_1003CE9F0(v2 + *(int *)(v3 + 36), v0 + 112);
  if (*(void *)(v0 + 136))
  {
    uint64_t v4 = *(void **)(v0 + 160);
    sub_1002AF688((long long *)(v0 + 112), v0 + 72);
    sub_10026BB6C((void *)(v0 + 72), *(void *)(v0 + 96));
    uint64_t v5 = v4[3];
    uint64_t v6 = v4[4];
    sub_10026BB6C(v4, v5);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
    unint64_t v9 = v8;
    uint64_t v10 = v4[3];
    uint64_t v11 = v4[5];
    sub_10026BB6C(v4, v10);
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
    unint64_t v14 = v13;
    uint64_t v15 = sub_1003D0338(v7, v9, v12, v13);
    unint64_t v18 = v17;
    uint64_t v19 = *(uint64_t **)(v0 + 152);
    uint64_t v29 = v15;
    sub_100250CC4(v12, v14);
    sub_100250CC4(v7, v9);
    uint64_t v20 = *(void *)(v0 + 40);
    uint64_t v21 = *(void *)(v0 + 64);
    sub_1002AF758(v0 + 16, v20);
    uint64_t v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v22 setToken:isa];

    uint64_t v24 = *(void *)(v0 + 40);
    uint64_t v25 = *(void *)(v0 + 48);
    uint64_t v26 = sub_10026BB6C((void *)(v0 + 16), v24);
    v19[3] = v24;
    v19[4] = *(void *)(v25 + 8);
    uint64_t v27 = sub_100278AE4(v19);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v27, v26, v24);
    sub_100250CC4(v29, v18);
    sub_10024D338(v0 + 72);
  }
  else
  {
    sub_10000A7E8(v0 + 112, &qword_1009778D0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v16 = 37;
    *(void *)(v16 + 8) = 0xD000000000000027;
    *(void *)(v16 + 16) = 0x80000001007BB890;
    swift_willThrow();
  }
  sub_10024D338(v0 + 16);
  uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t sub_1003CB108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[20] = a2;
  v7[21] = a3;
  v7[19] = a1;
  return _swift_task_switch(sub_1003CADE8, 0, 0);
}

uint64_t sub_1003CB1C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v3[6] = type metadata accessor for SDAuthenticationCommonOperationInput();
  v3[7] = swift_task_alloc();
  return _swift_task_switch(sub_1003CB260, 0, 0);
}

uint64_t sub_1003CB260()
{
  uint64_t v16 = v0;
  if (*(void *)(v0[5] + *(int *)(v0[6] + 28)) == 3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (qword_100969D68 != -1) {
      swift_once();
    }
    uint64_t v1 = v0[7];
    uint64_t v2 = v0[5];
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000B47C(v3, (uint64_t)qword_100971568);
    sub_1003CEF58(v2, v1);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v7 = v0[7];
    if (v6)
    {
      unint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)unint64_t v8 = 136315138;
      uint64_t v9 = sub_10050938C();
      v0[2] = sub_100254634(v9, v10, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1003CF010(v7, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Setting dynamic store to enabled for type %s", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1003CF010(v0[7], (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
    }

    NSString v11 = String._bridgeToObjectiveC()();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    sub_1000D289C(0, v11, v12);
  }
  sub_100278C8C(v0[4], v0[3]);
  swift_task_dealloc();
  unint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1003CB50C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  return sub_1003CB1C8(a1, a2, a3);
}

uint64_t sub_1003CB5BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[19] = a2;
  v3[20] = a3;
  v3[18] = a1;
  return _swift_task_switch(sub_1003CB5E0, 0, 0);
}

uint64_t sub_1003CB5E0()
{
  uint64_t v1 = *(void *)(v0 + 160);
  sub_1003CF0DC(*(void *)(v0 + 152), v0 + 16);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 56);
  sub_1002AF758(v0 + 16, v2);
  uint64_t v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  uint64_t v5 = type metadata accessor for SDAuthenticationCommonOperationInput();
  sub_1003CE9F0(v1 + *(int *)(v5 + 36), v0 + 104);
  if (*(void *)(v0 + 128))
  {
    BOOL v6 = *(void **)(v0 + 152);
    sub_1002AF688((long long *)(v0 + 104), v0 + 64);
    sub_10026BB6C((void *)(v0 + 64), *(void *)(v0 + 88));
    uint64_t v7 = v6[3];
    uint64_t v8 = v6[4];
    sub_10026BB6C(v6, v7);
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
    unint64_t v11 = (unint64_t)v10;
    unint64_t v13 = sub_1003D093C(v9, v10);
    unint64_t v15 = v14;
    uint64_t v16 = *(uint64_t **)(v0 + 144);
    sub_100250CC4(v9, v11);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100250CC4((uint64_t)v13, v15);
    sub_10024D338(v0 + 64);
    [v4 setToken:isa];

    uint64_t v18 = *(void *)(v0 + 40);
    uint64_t v19 = *(void *)(v0 + 48);
    uint64_t v20 = sub_10026BB6C((void *)(v0 + 16), v18);
    v16[3] = v18;
    v16[4] = *(void *)(v19 + 8);
    uint64_t v21 = sub_100278AE4(v16);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v21, v20, v18);
  }
  else
  {
    sub_10000A7E8(v0 + 104, &qword_1009778D0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v12 = 37;
    *(void *)(v12 + 8) = 0xD000000000000027;
    *(void *)(v12 + 16) = 0x80000001007BB890;
    swift_willThrow();
  }
  sub_10024D338(v0 + 16);
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_1003CB880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[19] = a2;
  v7[20] = a3;
  v7[18] = a1;
  return _swift_task_switch(sub_1003CB5E0, 0, 0);
}

uint64_t sub_1003CB940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[19] = a2;
  v3[20] = a3;
  v3[18] = a1;
  return _swift_task_switch(sub_1003CB964, 0, 0);
}

uint64_t sub_1003CB964()
{
  uint64_t v1 = *(void *)(v0 + 160);
  sub_1003CF0DC(*(void *)(v0 + 152), v0 + 16);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 56);
  sub_1002AF758(v0 + 16, v2);
  uint64_t v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  uint64_t v5 = type metadata accessor for SDAuthenticationCommonOperationInput();
  sub_1003CE9F0(v1 + *(int *)(v5 + 36), v0 + 104);
  if (*(void *)(v0 + 128))
  {
    BOOL v6 = *(void **)(v0 + 152);
    sub_1002AF688((long long *)(v0 + 104), v0 + 64);
    sub_10026BB6C((void *)(v0 + 64), *(void *)(v0 + 88));
    uint64_t v7 = v6[3];
    uint64_t v8 = v6[4];
    sub_10026BB6C(v6, v7);
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
    unint64_t v11 = v10;
    unint64_t v13 = sub_1003D16F8(v9, v10);
    unint64_t v15 = v14;
    uint64_t v16 = *(uint64_t **)(v0 + 144);
    sub_100250CC4(v9, v11);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100250CC4((uint64_t)v13, v15);
    sub_10024D338(v0 + 64);
    [v4 setToken:isa];

    uint64_t v18 = *(void *)(v0 + 40);
    uint64_t v19 = *(void *)(v0 + 48);
    uint64_t v20 = sub_10026BB6C((void *)(v0 + 16), v18);
    v16[3] = v18;
    v16[4] = *(void *)(v19 + 8);
    uint64_t v21 = sub_100278AE4(v16);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v21, v20, v18);
  }
  else
  {
    sub_10000A7E8(v0 + 104, &qword_1009778D0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v12 = 37;
    *(void *)(v12 + 8) = 0xD000000000000027;
    *(void *)(v12 + 16) = 0x80000001007BB890;
    swift_willThrow();
  }
  sub_10024D338(v0 + 16);
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_1003CBC04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[19] = a2;
  v7[20] = a3;
  v7[18] = a1;
  return _swift_task_switch(sub_1003CB964, 0, 0);
}

uint64_t sub_1003CBCC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[15] = a2;
  v3[16] = a3;
  v3[14] = a1;
  type metadata accessor for String.Encoding();
  v3[17] = swift_task_alloc();
  return _swift_task_switch(sub_1003CBD58, 0, 0);
}

uint64_t sub_1003CBD58()
{
  uint64_t v1 = *(void **)(v0 + 120);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[5];
  sub_10026BB6C(v1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  if (v5 >> 60 == 15) {
    goto LABEL_6;
  }
  uint64_t v6 = v4;
  unint64_t v7 = v5;
  *(void *)(v0 + 96) = v4;
  *(void *)(v0 + 104) = v5;
  static String.Encoding.utf8.getter();
  sub_1003CEFBC();
  String.init<A>(bytes:encoding:)();
  if (!v8)
  {
    sub_100250CB0(v6, v7);
LABEL_6:
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v17 = 1;
    *(void *)(v17 + 8) = 0xD000000000000024;
    *(void *)(v17 + 16) = 0x80000001007BBBB0;
    swift_willThrow();
    goto LABEL_7;
  }
  uint64_t v9 = *(void *)(v0 + 128);
  uint64_t v10 = type metadata accessor for SDAuthenticationCommonOperationInput();
  sub_1003CE9F0(v9 + *(int *)(v10 + 36), v0 + 56);
  if (*(void *)(v0 + 80))
  {
    unint64_t v11 = *(void **)(v0 + 120);
    sub_1002AF688((long long *)(v0 + 56), v0 + 16);
    sub_10026BB6C((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v13 = v1[3];
    uint64_t v12 = v1[4];
    sub_10026BB6C(v11, v13);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v13, v12);
    unint64_t v16 = v15;
    sub_1003D1088(v14, v15);
    uint64_t v21 = *(uint64_t **)(v0 + 112);
    uint64_t v20 = *(void **)(v0 + 120);
    swift_bridgeObjectRelease();
    sub_100250CC4(v14, v16);
    sub_10024D338(v0 + 16);
    uint64_t v23 = v1[3];
    uint64_t v22 = v1[4];
    uint64_t v24 = sub_10026BB6C(v20, v23);
    v21[3] = v23;
    v21[4] = *(void *)(v22 + 8);
    uint64_t v25 = sub_100278AE4(v21);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v25, v24, v23);
    sub_100250CB0(v6, v7);
    swift_task_dealloc();
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_8;
  }
  sub_10000A7E8(v0 + 56, &qword_1009778D0);
  sub_10024D280();
  swift_allocError();
  *(_DWORD *)uint64_t v19 = 37;
  *(void *)(v19 + 8) = 0xD000000000000027;
  *(void *)(v19 + 16) = 0x80000001007BB890;
  swift_willThrow();
  swift_bridgeObjectRelease();
  sub_100250CB0(v6, v7);
LABEL_7:
  swift_task_dealloc();
  uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
LABEL_8:
  return v26();
}

uint64_t sub_1003CC0A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  return sub_1003CBCC4(a1, a2, a3);
}

uint64_t sub_1003CC158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[18] = a2;
  v3[19] = a3;
  v3[17] = a1;
  return _swift_task_switch(sub_1003CC17C, 0, 0);
}

uint64_t sub_1003CC17C()
{
  uint64_t v1 = *(void *)(v0 + 152);
  sub_100278C8C(*(void *)(v0 + 144), v0 + 16);
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput();
  sub_1003CE9F0(v1 + *(int *)(v2 + 36), v0 + 96);
  if (*(void *)(v0 + 120))
  {
    sub_1002AF688((long long *)(v0 + 96), v0 + 56);
    sub_10026BB6C((void *)(v0 + 56), *(void *)(v0 + 80));
    sub_1003CFC48();
    sub_10026BB6C((void *)(v0 + 56), *(void *)(v0 + 80));
    uint64_t v5 = sub_1003D13A0(0, 0xF000000000000000);
    unint64_t v7 = v6;
    uint64_t v8 = *(uint64_t **)(v0 + 136);
    uint64_t v9 = *(void *)(v0 + 40);
    uint64_t v10 = *(void *)(v0 + 48);
    sub_1002AF758(v0 + 16, v9);
    unint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v11 setToken:isa];

    uint64_t v13 = *(void *)(v0 + 40);
    uint64_t v14 = *(void *)(v0 + 48);
    unint64_t v15 = sub_10026BB6C((void *)(v0 + 16), v13);
    v8[3] = v13;
    v8[4] = *(void *)(v14 + 8);
    unint64_t v16 = sub_100278AE4(v8);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v16, v15, v13);
    sub_100250CC4(v5, v7);
    sub_10024D338(v0 + 56);
  }
  else
  {
    sub_10000A7E8(v0 + 96, &qword_1009778D0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v3 = 37;
    *(void *)(v3 + 8) = 0xD000000000000027;
    *(void *)(v3 + 16) = 0x80000001007BB890;
    swift_willThrow();
  }
  sub_10024D338(v0 + 16);
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_1003CC3F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[18] = a2;
  v7[19] = a3;
  v7[17] = a1;
  return _swift_task_switch(sub_1003CC17C, 0, 0);
}

uint64_t sub_1003CC4B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[19] = a2;
  v3[20] = a3;
  v3[18] = a1;
  return _swift_task_switch(sub_1003CC4DC, 0, 0);
}

uint64_t sub_1003CC4DC()
{
  uint64_t v1 = *(void *)(v0 + 160);
  sub_1003CF0DC(*(void *)(v0 + 152), v0 + 16);
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput();
  sub_1003CE9F0(v1 + *(int *)(v2 + 36), v0 + 104);
  if (*(void *)(v0 + 128))
  {
    uint64_t v3 = *(void **)(v0 + 152);
    sub_1002AF688((long long *)(v0 + 104), v0 + 64);
    sub_10026BB6C((void *)(v0 + 64), *(void *)(v0 + 88));
    uint64_t v4 = v3[3];
    uint64_t v5 = v3[4];
    sub_10026BB6C(v3, v4);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
    unint64_t v8 = v7;
    uint64_t v10 = sub_1003D13A0(v6, v7);
    unint64_t v12 = v11;
    uint64_t v13 = *(uint64_t **)(v0 + 144);
    sub_100250CC4(v6, v8);
    sub_10024D338(v0 + 64);
    uint64_t v14 = *(void *)(v0 + 40);
    uint64_t v15 = *(void *)(v0 + 56);
    sub_1002AF758(v0 + 16, v14);
    unint64_t v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v16 setToken:isa];

    uint64_t v18 = *(void *)(v0 + 40);
    uint64_t v19 = *(void *)(v0 + 48);
    uint64_t v20 = sub_10026BB6C((void *)(v0 + 16), v18);
    v13[3] = v18;
    v13[4] = *(void *)(v19 + 8);
    uint64_t v21 = sub_100278AE4(v13);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v21, v20, v18);
    sub_100250CC4(v10, v12);
  }
  else
  {
    sub_10000A7E8(v0 + 104, &qword_1009778D0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v9 = 37;
    *(void *)(v9 + 8) = 0xD000000000000027;
    *(void *)(v9 + 16) = 0x80000001007BB890;
    swift_willThrow();
  }
  sub_10024D338(v0 + 16);
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_1003CC774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[19] = a2;
  v7[20] = a3;
  v7[18] = a1;
  return _swift_task_switch(sub_1003CC4DC, 0, 0);
}

uint64_t sub_1003CC834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  return _swift_task_switch(sub_1003CC858, 0, 0);
}

uint64_t sub_1003CC858()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput();
  sub_1003CE9F0(v1 + *(int *)(v2 + 36), v0 + 56);
  if (*(void *)(v0 + 80))
  {
    uint64_t v3 = *(void **)(v0 + 104);
    sub_1002AF688((long long *)(v0 + 56), v0 + 16);
    sub_10026BB6C((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v4 = v3[3];
    uint64_t v5 = v3[4];
    sub_10026BB6C(v3, v4);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
    unint64_t v8 = v7;
    sub_1003D1958(v6, v7);
    sub_100250CC4(v6, v8);
    sub_10024D338(v0 + 16);
    if (qword_100969D68 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000B47C(v9, (uint64_t)qword_100971568);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Finalized Registration", v12, 2u);
      swift_slowDealloc();
    }
    uint64_t v14 = *(uint64_t **)(v0 + 96);
    uint64_t v13 = *(void **)(v0 + 104);

    uint64_t v15 = v3[3];
    uint64_t v16 = v3[4];
    uint64_t v17 = sub_10026BB6C(v13, v15);
    v14[3] = v15;
    v14[4] = *(void *)(v16 + 8);
    uint64_t v18 = sub_100278AE4(v14);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v18, v17, v15);
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    sub_10000A7E8(v0 + 56, &qword_1009778D0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v20 = 37;
    *(void *)(v20 + 8) = 0xD000000000000027;
    *(void *)(v20 + 16) = 0x80000001007BB890;
    swift_willThrow();
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v19();
}

uint64_t sub_1003CCAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[13] = a2;
  v7[14] = a3;
  v7[12] = a1;
  return _swift_task_switch(sub_1003CC858, 0, 0);
}

uint64_t sub_1003CCBB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  return _swift_task_switch(sub_1003CCBD4, 0, 0);
}

uint64_t sub_1003CCBD4()
{
  sub_1003BD1C8();
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = type metadata accessor for SDAuthenticationCommonOperationInput();
  sub_1003CE9F0(v2 + *(int *)(v3 + 36), v0 + 56);
  if (*(void *)(v0 + 80))
  {
    sub_1002AF688((long long *)(v0 + 56), v0 + 16);
    sub_10026BB6C((void *)(v0 + 16), *(void *)(v0 + 40));
    UUID.uuidString.getter();
    sub_1003D1BB4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10024D338(v0 + 16);
    if (qword_100969D68 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_100971568);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      unint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Record Last Registration", v7, 2u);
      swift_slowDealloc();
    }
    uint64_t v9 = *(void *)(v0 + 96);
    uint64_t v8 = *(void *)(v0 + 104);

    sub_100278C8C(v8, v9);
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    sub_10000A7E8(v0 + 56, &qword_1009778D0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v11 = 37;
    *(void *)(v11 + 8) = 0xD000000000000027;
    *(void *)(v11 + 16) = 0x80000001007BB890;
    swift_willThrow();
    swift_bridgeObjectRelease();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v10();
}

uint64_t sub_1003CCE44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[13] = a2;
  v7[14] = a3;
  v7[12] = a1;
  return _swift_task_switch(sub_1003CCBD4, 0, 0);
}

uint64_t sub_1003CCF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  return _swift_task_switch(sub_1003CCF28, 0, 0);
}

uint64_t sub_1003CCF28()
{
  sub_1003BD1C8();
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = type metadata accessor for SDAuthenticationCommonOperationInput();
  sub_1003CE9F0(v2 + *(int *)(v3 + 36), v0 + 56);
  if (*(void *)(v0 + 80))
  {
    uint64_t v4 = *(void *)(v0 + 112);
    sub_1002AF688((long long *)(v0 + 56), v0 + 16);
    sub_10026BB6C((void *)(v0 + 16), *(void *)(v0 + 40));
    UUID.uuidString.getter();
    uint64_t v11 = *(int *)(v3 + 32);
    sub_1003D1C58();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10024D338(v0 + 16);
    if (qword_100969D68 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000B47C(v5, (uint64_t)qword_100971568);
    os_log_type_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Record PairingID and Last Registration Date", v8, 2u);
      swift_slowDealloc();
    }

    if ((*(unsigned char *)(v4 + v11) & 1) == 0)
    {
      sub_10026BB6C(*(void **)(v0 + 112), *(void *)(*(void *)(v0 + 112) + 24));
      sub_1006FA0E4();
    }
    sub_100278C8C(*(void *)(v0 + 104), *(void *)(v0 + 96));
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    sub_10000A7E8(v0 + 56, &qword_1009778D0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v10 = 37;
    *(void *)(v10 + 8) = 0xD000000000000027;
    *(void *)(v10 + 16) = 0x80000001007BB890;
    swift_willThrow();
    swift_bridgeObjectRelease();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v9();
}

uint64_t sub_1003CD1C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *os_log_type_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[13] = a2;
  v7[14] = a3;
  v7[12] = a1;
  return _swift_task_switch(sub_1003CCF28, 0, 0);
}

uint64_t sub_1003CD280(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_1003CD2A0, 0, 0);
}

uint64_t sub_1003CD2A0()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10026BB6C(v1, v2);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3))
  {
    uint64_t v4 = (uint64_t *)v0[2];
    uint64_t v5 = v1[3];
    uint64_t v6 = v1[4];
    os_log_type_t v7 = sub_10026BB6C((void *)v0[3], v5);
    v4[3] = v5;
    v4[4] = *(void *)(v6 + 16);
    uint64_t v8 = sub_100278AE4(v4);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(v8, v7, v5);
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v10 = 10;
    *(void *)(v10 + 8) = 0xD000000000000037;
    *(void *)(v10 + 16) = 0x80000001007BBB30;
    swift_willThrow();
  }
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1003CD3F4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = a2;
  v5[1] = sub_10000A6F0;
  return _swift_task_switch(sub_1003CD2A0, 0, 0);
}

uint64_t sub_1003CD4A4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return _swift_task_switch(sub_1003CD4C4, 0, 0);
}

uint64_t sub_1003CD4C4()
{
  uint64_t v1 = (void *)v0[8];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10026BB6C(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
  sub_10026BB6C(v0 + 2, v0[5]);
  sub_1006A073C();
  uint64_t v5 = (uint64_t *)v0[7];
  uint64_t v4 = (void *)v0[8];
  sub_10024D338((uint64_t)(v0 + 2));
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = sub_10026BB6C(v4, v6);
  v5[3] = v6;
  v5[4] = *(void *)(v7 + 8);
  uint64_t v9 = sub_100278AE4(v5);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(v9, v8, v6);
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1003CD604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  return _swift_task_switch(sub_1003CD628, 0, 0);
}

uint64_t sub_1003CD628()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput();
  sub_1003CE9F0(v1 + *(int *)(v2 + 36), v0 + 56);
  if (*(void *)(v0 + 80))
  {
    sub_1002AF688((long long *)(v0 + 56), v0 + 16);
    sub_10026BB6C((void *)(v0 + 16), *(void *)(v0 + 40));
    sub_1003CF798();
    uint64_t v5 = *(void *)(v0 + 96);
    uint64_t v4 = *(void *)(v0 + 104);
    sub_10024D338(v0 + 16);
    sub_100278C8C(v4, v5);
  }
  else
  {
    sub_10000A7E8(v0 + 56, &qword_1009778D0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v3 = 37;
    *(void *)(v3 + 8) = 0xD000000000000027;
    *(void *)(v3 + 16) = 0x80000001007BB890;
    swift_willThrow();
  }
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1003CD770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[13] = a2;
  v7[14] = a3;
  v7[12] = a1;
  return _swift_task_switch(sub_1003CD628, 0, 0);
}

uint64_t sub_1003CD830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[27] = a2;
  v3[28] = a3;
  v3[26] = a1;
  v3[29] = type metadata accessor for SDAuthenticationSessionMetrics();
  v3[30] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_100975040);
  v3[31] = swift_task_alloc();
  return _swift_task_switch(sub_1003CD8F8, 0, 0);
}

uint64_t sub_1003CD8F8()
{
  uint64_t v1 = *(void *)(v0 + 216);
  sub_100278C8C(v1, *(void *)(v0 + 208));
  sub_100278C8C(v1, v0 + 56);
  sub_10000A844(&qword_10096BDF0);
  sub_10000A844(&qword_100971F98);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)(v0 + 240);
    uint64_t v3 = *(void *)(v0 + 248);
    uint64_t v4 = *(void *)(v0 + 232);
    uint64_t v5 = *(void *)(v0 + 208);
    sub_1002AF688((long long *)(v0 + 96), v0 + 16);
    Date.init()();
    uint64_t v6 = type metadata accessor for Date();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v3, 0, 1, v6);
    uint64_t v7 = *(void *)(v0 + 40);
    uint64_t v8 = *(void *)(v0 + 48);
    sub_1002AF758(v0 + 16, v7);
    uint64_t v9 = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v0 + 176, v7, v8);
    sub_100340238(v3, v10 + *(int *)(v4 + 20));
    v9(v0 + 176, 0);
    uint64_t v11 = *(void *)(v0 + 40);
    uint64_t v12 = *(void *)(v0 + 48);
    sub_10026BB6C((void *)(v0 + 16), v11);
    (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
    type metadata accessor for SDAuthenticationCommonOperationInput();
    sub_10069DBFC();
    sub_1003CF010(v2, (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
    uint64_t v13 = *(void *)(v0 + 40);
    uint64_t v14 = *(void *)(v0 + 48);
    uint64_t v15 = sub_10026BB6C((void *)(v0 + 16), v13);
    *(void *)(v0 + 160) = v13;
    *(void *)(v0 + 168) = *(void *)(v14 + 8);
    uint64_t v16 = sub_100278AE4((uint64_t *)(v0 + 136));
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v16, v15, v13);
    sub_10024D338(v5);
    sub_1002AF688((long long *)(v0 + 136), v5);
    sub_10024D338(v0 + 16);
  }
  else
  {
    *(void *)(v0 + 128) = 0;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    sub_10000A7E8(v0 + 96, &qword_100971FE0);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_1003CDBAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F4;
  return sub_1003CD830(a1, a2, a3);
}

id sub_1003CDC5C()
{
  return [*v0 hasErrorCode];
}

id sub_1003CDC80()
{
  return [*v0 errorCode];
}

uint64_t sub_1003CDC90(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    long long v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(v4 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v4 + 40, (uint64_t)(a2 + 5));
    uint64_t v9 = a3[6];
    uint64_t v10 = v4 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[8];
    *(void *)(v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(unsigned char *)(v4 + v13) = *((unsigned char *)a2 + v13);
    uint64_t v14 = a3[9];
    uint64_t v15 = v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = *(uint64_t *)((char *)a2 + v14 + 24);
    if (v17)
    {
      uint64_t v18 = *(void *)(v16 + 32);
      *(void *)(v15 + 24) = v17;
      *(void *)(v15 + 32) = v18;
      (**(void (***)(void))(v17 - 8))();
    }
    else
    {
      long long v20 = *(_OWORD *)(v16 + 16);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *(_OWORD *)(v15 + 16) = v20;
      *(void *)(v15 + 32) = *(void *)(v16 + 32);
    }
  }
  return v4;
}

uint64_t sub_1003CDE5C(uint64_t a1, uint64_t a2)
{
  sub_10024D338(a1);
  sub_10024D338(a1 + 40);
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t result = a1 + *(int *)(a2 + 36);
  if (*(void *)(result + 24)) {
    return sub_10024D338(result);
  }
  return result;
}

uint64_t sub_1003CDEE8(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[9];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(a2 + v13 + 24);
  if (v16)
  {
    uint64_t v17 = *(void *)(v15 + 32);
    *(void *)(v14 + 24) = v16;
    *(void *)(v14 + 32) = v17;
    (**(void (***)(void))(v16 - 8))();
  }
  else
  {
    long long v18 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + 16) = v18;
    *(void *)(v14 + 32) = *(void *)(v15 + 32);
  }
  return a1;
}

uint64_t *sub_1003CE05C(uint64_t *a1, uint64_t *a2, int *a3)
{
  sub_10026F6D4(a1, a2);
  sub_10026F6D4(a1 + 5, a2 + 5);
  uint64_t v6 = a3[6];
  long long v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v10 = a3[9];
  uint64_t v11 = (uint64_t)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *((void *)v12 + 3);
  if (!*(uint64_t *)((char *)a1 + v10 + 24))
  {
    if (v13)
    {
      *(void *)(v11 + 24) = v13;
      *(void *)(v11 + 32) = *((void *)v12 + 4);
      (**(void (***)(uint64_t, char *))(v13 - 8))(v11, v12);
      return a1;
    }
LABEL_7:
    long long v14 = *(_OWORD *)v12;
    long long v15 = *((_OWORD *)v12 + 1);
    *(void *)(v11 + 32) = *((void *)v12 + 4);
    *(_OWORD *)uint64_t v11 = v14;
    *(_OWORD *)(v11 + 16) = v15;
    return a1;
  }
  if (!v13)
  {
    sub_10024D338(v11);
    goto LABEL_7;
  }
  sub_10026F6D4((uint64_t *)v11, (uint64_t *)v12);
  return a1;
}

uint64_t sub_1003CE190(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  long long v7 = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 56) = v7;
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[9];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  long long v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  return a1;
}

uint64_t sub_1003CE26C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10024D338(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  sub_10024D338(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[9];
  uint64_t v13 = a1 + v12;
  if (*(void *)(a1 + v12 + 24)) {
    sub_10024D338(a1 + v12);
  }
  long long v14 = *(_OWORD *)(a2 + v12 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)(a2 + v12);
  *(_OWORD *)(v13 + 16) = v14;
  *(void *)(v13 + 32) = *(void *)(a2 + v12 + 32);
  return a1;
}

uint64_t sub_1003CE364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003CE378);
}

uint64_t sub_1003CE378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1003CE428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003CE43C);
}

uint64_t sub_1003CE43C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SDAuthenticationCommonOperationInput()
{
  uint64_t result = qword_1009715D8;
  if (!qword_1009715D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003CE530()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDAuthentication()
{
  return &type metadata for SDAuthentication;
}

uint64_t *destroy for SDAuthenticationApproveResult(uint64_t *result)
{
  unint64_t v1 = result[1];
  if (v1 >> 60 != 15) {
    return (uint64_t *)sub_100250CC4(*result, v1);
  }
  return result;
}

uint64_t _s16DaemoniOSLibrary29SDAuthenticationApproveResultVwCP_0(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v5 = *a2;
    sub_10025ADCC(*a2, a2[1]);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v4;
  }
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(_DWORD *)(a1 + 20) = *((_DWORD *)a2 + 5);
  return a1;
}

uint64_t assignWithCopy for SDAuthenticationApproveResult(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      uint64_t v6 = *(void *)a2;
      sub_10025ADCC(*(void *)a2, *(void *)(a2 + 8));
      uint64_t v7 = *(void *)a1;
      unint64_t v8 = *(void *)(a1 + 8);
      *(void *)a1 = v6;
      *(void *)(a1 + 8) = v4;
      sub_100250CC4(v7, v8);
      goto LABEL_8;
    }
    sub_10026F904(a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)a2;
  sub_10025ADCC(*(void *)a2, *(void *)(a2 + 8));
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
LABEL_8:
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  return a1;
}

uint64_t assignWithTake for SDAuthenticationApproveResult(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  if (v4 >> 60 != 15)
  {
    unint64_t v5 = *(void *)(a2 + 8);
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = *(void *)a1;
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v5;
      sub_100250CC4(v6, v4);
      goto LABEL_6;
    }
    sub_10026F904(a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDAuthenticationApproveResult(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SDAuthenticationApproveResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDAuthenticationApproveResult()
{
  return &type metadata for SDAuthenticationApproveResult;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.UnpairRemoteLTK()
{
  return &type metadata for SDAuthentication.Operation.UnpairRemoteLTK;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.BuildPairingDisableMessage()
{
  return &type metadata for SDAuthentication.Operation.BuildPairingDisableMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckLockRegisteredAndArmedWithAKSManager()
{
  return &type metadata for SDAuthentication.Operation.CheckLockRegisteredAndArmedWithAKSManager;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeAKSTokenInRegistrationResponseMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeAKSTokenInRegistrationResponseMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeFirstAKSTokenWithLTKSessionInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeFirstAKSTokenWithLTKSessionInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeLastRegistrationInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeLastRegistrationInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.SendApprovePromptMessage()
{
  return &type metadata for SDAuthentication.Operation.SendApprovePromptMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeApproveMetadataInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeApproveMetadataInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckACMTokenExists()
{
  return &type metadata for SDAuthentication.Operation.CheckACMTokenExists;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.UseAuthTokenForFirstAKSTokenAsKeyInMessage()
{
  return &type metadata for SDAuthentication.Operation.UseAuthTokenForFirstAKSTokenAsKeyInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeSessionStartDateInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeSessionStartDateInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeLastRegistrationDateInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeLastRegistrationDateInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckEnabledWithPeer()
{
  return &type metadata for SDAuthentication.Operation.CheckEnabledWithPeer;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.SendRequestMessage()
{
  return &type metadata for SDAuthentication.Operation.SendRequestMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeRangingTokenInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeRangingTokenInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeLastUnlockDateInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeLastUnlockDateInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeAWDLInfoInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeAWDLInfoInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckLocalSecurityPolicy()
{
  return &type metadata for SDAuthentication.Operation.CheckLocalSecurityPolicy;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordRemoteDevice()
{
  return &type metadata for SDAuthentication.Operation.RecordRemoteDevice;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckRemoteDeviceOSVersionIsSupported()
{
  return &type metadata for SDAuthentication.Operation.CheckRemoteDeviceOSVersionIsSupported;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckWatchIsNearby()
{
  return &type metadata for SDAuthentication.Operation.CheckWatchIsNearby;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckIsWiFiEnabled()
{
  return &type metadata for SDAuthentication.Operation.CheckIsWiFiEnabled;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckIsBluetoothEnabled()
{
  return &type metadata for SDAuthentication.Operation.CheckIsBluetoothEnabled;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeLongTermKeyInPairingMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeLongTermKeyInPairingMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.BuildMessageHeader()
{
  return &type metadata for SDAuthentication.Operation.BuildMessageHeader;
}

uint64_t sub_1003CE9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_1009778D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003CEA58@<X0>(uint64_t *a1@<X8>)
{
  return sub_10030876C(v1, a1);
}

uint64_t sub_1003CEA74(uint64_t a1)
{
  return sub_10033D018(a1, *(char **)(v1 + 16), *(char **)(v1 + 24));
}

uint64_t sub_1003CEA7C()
{
  uint64_t v0 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(void *)(v0 + 16) = 64;
  *(_OWORD *)(v0 + 32) = 0u;
  uint64_t v1 = (unsigned char *)(v0 + 32);
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  if (SecRandomCopyBytes(kSecRandomDefault, 0x40uLL, (void *)(v0 + 32)))
  {
    swift_bridgeObjectRelease();
    _StringGuts.grow(_:)(42);
    swift_bridgeObjectRelease();
    v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v2);
    swift_bridgeObjectRelease();
    v3._countAndFlagsBits = 41;
    v3._object = (void *)0xE100000000000000;
    String.append(_:)(v3);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v4 = 10;
    *(void *)(v4 + 8) = 0xD000000000000027;
    *(void *)(v4 + 16) = 0x80000001007BB9E0;
    return swift_willThrow();
  }
  else
  {
    uint64_t v6 = sub_1004EC700(v1, 64);
    swift_bridgeObjectRelease();
    return v6;
  }
}

uint64_t sub_1003CEBE0@<X0>(uint64_t a1@<X8>)
{
  return sub_10030B514(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1003CEC00@<X0>(void *a1@<X8>)
{
  return sub_10030B438(v1[2], v1[3], v1[4], a1);
}

double sub_1003CEC20@<D0>(_OWORD *a1@<X8>)
{
  return sub_1003CEF14(a1);
}

uint64_t sub_1003CEC38@<X0>(unsigned char *a1@<X8>)
{
  return sub_10030B654(v1[2], v1[3], v1[4], a1);
}

void *sub_1003CEC58@<X0>(unsigned char *a1@<X8>)
{
  return sub_1003B5C94(*(void *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_1003CEC74@<X0>(void *a1@<X8>)
{
  return sub_10030AA98(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1003CEC94()
{
  return sub_10030AB74(v0[2], v0[3], v0[4]);
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RangeAsInitiator()
{
  return &type metadata for SDAuthentication.Operation.RangeAsInitiator;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordAWDLBringUpStart()
{
  return &type metadata for SDAuthentication.Operation.RecordAWDLBringUpStart;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RangeAsResponder()
{
  return &type metadata for SDAuthentication.Operation.RangeAsResponder;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.ConfirmAKSSession()
{
  return &type metadata for SDAuthentication.Operation.ConfirmAKSSession;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.UseReceivedTokenForIncludingFirstAKSTokenInMessage()
{
  return &type metadata for SDAuthentication.Operation.UseReceivedTokenForIncludingFirstAKSTokenInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckLockRegisteredAndArmed()
{
  return &type metadata for SDAuthentication.Operation.CheckLockRegisteredAndArmed;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.ConsumeAKSToken()
{
  return &type metadata for SDAuthentication.Operation.ConsumeAKSToken;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeNextAKSTokenInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeNextAKSTokenInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.UseApproveTokenForIncludingFirstAKSTokenInMessage()
{
  return &type metadata for SDAuthentication.Operation.UseApproveTokenForIncludingFirstAKSTokenInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.UseApprovalACMTokenForIncludingFirstAKSTokenInMessage()
{
  return &type metadata for SDAuthentication.Operation.UseApprovalACMTokenForIncludingFirstAKSTokenInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RequestUserApproval()
{
  return &type metadata for SDAuthentication.Operation.RequestUserApproval;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.ConfirmAKSSessionWithLTKSession()
{
  return &type metadata for SDAuthentication.Operation.ConfirmAKSSessionWithLTKSession;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.FinishSession()
{
  return &type metadata for SDAuthentication.Operation.FinishSession;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.ConsumeAKSTokenWithLTKSession()
{
  return &type metadata for SDAuthentication.Operation.ConsumeAKSTokenWithLTKSession;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.SendTokenMessage()
{
  return &type metadata for SDAuthentication.Operation.SendTokenMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeNextAKSTokenWithLTKSessionInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeNextAKSTokenWithLTKSessionInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.SendResponseMessage()
{
  return &type metadata for SDAuthentication.Operation.SendResponseMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.UseReceivedTokenForIncludingFirstAKSTokenWithLTKSessionInMessage()
{
  return &type metadata for SDAuthentication.Operation.UseReceivedTokenForIncludingFirstAKSTokenWithLTKSessionInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordKeyExchangeEnd()
{
  return &type metadata for SDAuthentication.Operation.RecordKeyExchangeEnd;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordKeyExchangeStart()
{
  return &type metadata for SDAuthentication.Operation.RecordKeyExchangeStart;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordDiscoveryEnd()
{
  return &type metadata for SDAuthentication.Operation.RecordDiscoveryEnd;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordRemoteUnlockDate()
{
  return &type metadata for SDAuthentication.Operation.RecordRemoteUnlockDate;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordSessionStart()
{
  return &type metadata for SDAuthentication.Operation.RecordSessionStart;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.StepPairingCreateRecordWithPasscode()
{
  return &type metadata for SDAuthentication.Operation.StepPairingCreateRecordWithPasscode;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordPairing()
{
  return &type metadata for SDAuthentication.Operation.RecordPairing;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.StepPairingCreateSecret()
{
  return &type metadata for SDAuthentication.Operation.StepPairingCreateSecret;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.EnableDynamicStore()
{
  return &type metadata for SDAuthentication.Operation.EnableDynamicStore;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.SignAndStoreRemoteLTK()
{
  return &type metadata for SDAuthentication.Operation.SignAndStoreRemoteLTK;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeLongTermKeyAndAKSTokenInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeLongTermKeyAndAKSTokenInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordLastRegistration()
{
  return &type metadata for SDAuthentication.Operation.RecordLastRegistration;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.NotifyRegistrationSucceeded()
{
  return &type metadata for SDAuthentication.Operation.NotifyRegistrationSucceeded;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.FinalizeRegistration()
{
  return &type metadata for SDAuthentication.Operation.FinalizeRegistration;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.StepRegistrationCreateSecret()
{
  return &type metadata for SDAuthentication.Operation.StepRegistrationCreateSecret;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.StepRegisterResponseToken()
{
  return &type metadata for SDAuthentication.Operation.StepRegisterResponseToken;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckRegistered()
{
  return &type metadata for SDAuthentication.Operation.CheckRegistered;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.HandleSucceededResult()
{
  return &type metadata for SDAuthentication.Operation.HandleSucceededResult;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.SendConfirmation()
{
  return &type metadata for SDAuthentication.Operation.SendConfirmation;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.ProcessUnpairRequest()
{
  return &type metadata for SDAuthentication.Operation.ProcessUnpairRequest;
}

double sub_1003CEF14@<D0>(_OWORD *a1@<X8>)
{
  (*(void (**)(long long *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
  {
    double result = *(double *)&v5;
    *a1 = v5;
  }
  return result;
}

uint64_t sub_1003CEF58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAuthenticationCommonOperationInput();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003CEFBC()
{
  unint64_t result = qword_10097D2C0;
  if (!qword_10097D2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097D2C0);
  }
  return result;
}

uint64_t sub_1003CF010(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1003CF070(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  uint64_t v4 = *(void *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(void *)(a2 + 48) = v4;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1003CF0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1003CF140(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003CF190@<X0>(uint64_t a1@<X8>)
{
  return sub_1003CEBE0(a1);
}

uint64_t sub_1003CF1A8@<X0>(void *a1@<X8>)
{
  return sub_1003CEC00(a1);
}

uint64_t sub_1003CF1C4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100972070);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100972070);
  if (qword_100969CD8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946D8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1003CF28C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession;
  if ((*(unsigned char *)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession + 8) & 1) == 0)
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v15 = 1;
    *(void *)(v15 + 8) = 0xD000000000000038;
    *(void *)(v15 + 16) = 0x80000001007BBF70;
    return swift_willThrow();
  }
  uint64_t v9 = *(void *)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID);
  uint64_t v10 = *(void **)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID + 8);
  uint64_t v11 = sub_10030C1A0();
  if (v12 >> 60 == 15)
  {
    _StringGuts.grow(_:)(32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v13._countAndFlagsBits = v9;
    v13._object = v10;
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v14 = 10;
    *(void *)(v14 + 8) = 0xD00000000000001ELL;
    *(void *)(v14 + 16) = 0x80000001007BBF30;
    return swift_willThrow();
  }
  uint64_t v35 = a3;
  unint64_t v36 = a4;
  uint64_t v38 = v11;
  unint64_t v39 = v12;
  char v37 = *(unsigned char *)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_role);
  __chkstk_darwin(v11);
  long long v18 = v17 + 4;
  os_unfair_lock_lock(v17 + 4);
  sub_1002CEA38(v19);
  if (v5)
  {
    os_unfair_lock_unlock(v18);
    return sub_100250CB0(v38, v39);
  }
  else
  {
    os_unfair_lock_unlock(v18);
    uint64_t v21 = __chkstk_darwin(v20);
    __chkstk_darwin(v21);
    uint64_t v23 = v22 + 4;
    os_unfair_lock_lock(v22 + 4);
    sub_1002CEA38(v24);
    os_unfair_lock_unlock(v23);
    unint64_t v25 = a2;
    uint64_t v26 = a1;
    uint64_t v27 = a1;
    unint64_t v28 = a2;
    if (a2 >> 60 == 15)
    {
      sub_100278C78(v41, v42);
      uint64_t v26 = a1;
      unint64_t v25 = a2;
      uint64_t v27 = v41;
      unint64_t v28 = v42;
    }
    unint64_t v29 = *(void *)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_type) - 4;
    uint64_t v30 = v27;
    if (v29 > 7) {
      uint64_t v31 = 2;
    }
    else {
      uint64_t v31 = qword_100775EC0[v29];
    }
    sub_100278C78(v26, v25);
    *(void *)uint64_t v6 = sub_1002FB78C(v31, v37, v41, v42, v38, v39, v30, v28, v42 >> 60 != 15);
    *(unsigned char *)(v6 + 8) = 0;
    uint64_t v32 = sub_1004BF850(v35, v36);
    unint64_t v34 = v33;
    sub_10000A844(&qword_10096B260);
    Optional.tryUnwrap(_:file:line:)();
    sub_100250CB0(v32, v34);
    sub_100250CB0(v41, v42);
    sub_100250CB0(v30, v28);
    sub_100250CC4(v41, v42);
    sub_100250CB0(v38, v39);
    return v41;
  }
}

void sub_1003CF798()
{
  char v2 = *(unsigned char *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession + 8);
  unint64_t v12 = *(unsigned char **)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession);
  char v13 = v2;
  sub_10000A844(&qword_100971FC0);
  Optional.tryUnwrap(_:file:line:)();
  if (!v1)
  {
    if (qword_100969D70 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000B47C(v3, (uint64_t)qword_100972070);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      unint64_t v12 = (unsigned char *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315138;
      uint64_t v7 = sub_1004C00B0();
      sub_100254634(v7, v8, (uint64_t *)&v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Confirm aksSession: %s", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    unint64_t v12 = 0;
    int v9 = aks_remote_peer_confirm();
    uint64_t v10 = sub_1004C01C0(v9, v12, 0, 0xD000000000000021, 0x80000001007BC1B0);
    sub_100250CB0(v10, v11);
    sub_1003CFA20();
  }
}

void sub_1003CFA20()
{
  if (qword_100969D70 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_100972070);
  swift_retain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    type metadata accessor for UUID();
    sub_10000BA58((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v4 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_100254634(v4, v5, &v6);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "End AKSSession: %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_10030900C();
}

void sub_1003CFC48()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(*(void *)(v0
                                                  + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK)
                                      + 112)
                          + 16);
  os_unfair_lock_lock(v1);
  sub_1002CEA38(v2);
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1003CFCE0()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v3 - 8);
  unint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_role))
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v6 = 10;
    *(void *)(v6 + 8) = 0xD00000000000002DLL;
    *(void *)(v6 + 16) = 0x80000001007BBFB0;
    return swift_willThrow();
  }
  unint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID);
  unint64_t v8 = *(void **)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID + 8);
  uint64_t v10 = sub_10030C1A0();
  if (v11 >> 60 == 15)
  {
    unint64_t v36 = 0;
    unint64_t v37 = 0xE000000000000000;
    _StringGuts.grow(_:)(32);
    swift_bridgeObjectRelease();
    unint64_t v36 = 0xD00000000000001ELL;
    unint64_t v37 = 0x80000001007BBF30;
    swift_bridgeObjectRetain();
    v12._countAndFlagsBits = v9;
    v12._object = v8;
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    unint64_t v13 = v36;
    unint64_t v14 = v37;
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v15 = 10;
    *(void *)(v15 + 8) = v13;
    *(void *)(v15 + 16) = v14;
    return swift_willThrow();
  }
  uint64_t v17 = v10;
  unint64_t v18 = v11;
  uint64_t v19 = __chkstk_darwin(v10);
  *(&v36 - 4) = v7;
  *(&v36 - 3) = v9;
  *(&v36 - 2) = (unint64_t)v8;
  __chkstk_darwin(v19);
  *(&v36 - 2) = (unint64_t)sub_1003CEBE0;
  *(&v36 - 1) = v20;
  uint64_t v22 = v21 + 4;
  os_unfair_lock_lock(v21 + 4);
  sub_1002CEA38(v23);
  if (v1)
  {
    os_unfair_lock_unlock(v22);
    __break(1u);
    JUMPOUT(0x1003D030CLL);
  }
  os_unfair_lock_unlock(v22);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  uint64_t v25 = sub_10001D4C4(isa);

  switch(v25)
  {
    case 0:
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v26 = 33;
      unint64_t v27 = 0xD00000000000001ALL;
      unint64_t v28 = "got SDAKSPeerStateNotSetUp";
      goto LABEL_21;
    case 1:
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v26 = 10;
      unint64_t v27 = 0xD00000000000001ELL;
      unint64_t v28 = "got SDAKSPeerStateNotAvailable";
      goto LABEL_21;
    case 2:
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v26 = 11;
      unint64_t v27 = 0xD000000000000025;
      unint64_t v28 = "got SDAKSPeerStateOnlyEscrowAvailable";
      goto LABEL_21;
    case 3:
      sub_10033FEB0((uint64_t)v5);
      return sub_100250CB0(v17, v18);
    case 4:
      sub_10024D280();
      swift_allocError();
      int v29 = 8;
      goto LABEL_15;
    case 5:
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v26 = 27;
      unint64_t v27 = 0xD00000000000002CLL;
      unint64_t v28 = "got SDAKSPeerStateNoRemoteUnlockWithinWindow";
      goto LABEL_21;
    case 6:
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v26 = 27;
      unint64_t v27 = 0xD00000000000002ELL;
      unint64_t v28 = "got SDAKSPeerStateTooManyFailedPasscodeEntries";
      goto LABEL_21;
    case 7:
      sub_10024D280();
      swift_allocError();
      int v29 = 5;
LABEL_15:
      *(_DWORD *)uint64_t v26 = v29;
      unint64_t v27 = 0xD00000000000002ELL;
      unint64_t v28 = "got SDAKSPeerStateNoPasscodeUnlockWithinWindow";
      goto LABEL_21;
    case 8:
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v26 = 27;
      unint64_t v27 = 0xD00000000000001CLL;
      unint64_t v28 = "got SDAKSPeerStateBioLockout";
      goto LABEL_21;
    case 9:
      unint64_t v36 = 0;
      unint64_t v37 = 0xE000000000000000;
      _StringGuts.grow(_:)(35);
      v30._countAndFlagsBits = 0xD000000000000021;
      v30._object = (void *)0x80000001007BC020;
      String.append(_:)(v30);
      type metadata accessor for Date();
      sub_10000BA58(&qword_100974530, (void (*)(uint64_t))&type metadata accessor for Date);
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      unint64_t v31 = v36;
      unint64_t v32 = v37;
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v33 = 36;
      *(void *)(v33 + 8) = v31;
      *(void *)(v33 + 16) = v32;
      goto LABEL_23;
    case 10:
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v26 = 11;
      unint64_t v27 = 0x6967657220746F4ELL;
      unint64_t v34 = 0xEE00646572657473;
      goto LABEL_22;
    default:
      Class v35 = Data._bridgeToObjectiveC()().super.isa;
      sub_10001D790(v35);

      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v26 = 10;
      unint64_t v27 = 0xD000000000000034;
      unint64_t v28 = "got SDAKSPeerStateUnknown, see logs for more details";
LABEL_21:
      unint64_t v34 = (unint64_t)(v28 - 32) | 0x8000000000000000;
LABEL_22:
      *(void *)(v26 + 8) = v27;
      *(void *)(v26 + 16) = v34;
LABEL_23:
      swift_willThrow();
      sub_100250CB0(v17, v18);
      uint64_t result = sub_10033FEB0((uint64_t)v5);
      break;
  }
  return result;
}

uint64_t sub_1003D0338(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession;
  if ((*(unsigned char *)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession + 8) & 1) == 0)
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v16 = 1;
    *(void *)(v16 + 8) = 0xD000000000000038;
    *(void *)(v16 + 16) = 0x80000001007BBF70;
    return swift_willThrow();
  }
  uint64_t v10 = *(void *)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID);
  uint64_t v9 = *(void **)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID + 8);
  uint64_t result = sub_1003D06C0(a1, a2, v10, v9);
  if (v5) {
    return result;
  }
  uint64_t v12 = sub_10030C1A0();
  if (v13 >> 60 == 15)
  {
    _StringGuts.grow(_:)(32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v14._countAndFlagsBits = v10;
    v14._object = v9;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v15 = 10;
    *(void *)(v15 + 8) = 0xD00000000000001ELL;
    *(void *)(v15 + 16) = 0x80000001007BBF30;
    return swift_willThrow();
  }
  unint64_t v17 = v13;
  uint64_t v33 = v12;
  unint64_t v28 = &v27;
  HIDWORD(v27) = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_role);
  __chkstk_darwin(v12);
  uint64_t v19 = v18 + 4;
  os_unfair_lock_lock(v18 + 4);
  sub_10030F73C(v20);
  os_unfair_lock_unlock(v19);
  uint64_t v22 = v31;
  unint64_t v21 = v32;
  if ((unint64_t)(*(void *)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_type) - 3) >= 2) {
    uint64_t v23 = 4;
  }
  else {
    uint64_t v23 = 6;
  }
  *(void *)uint64_t v6 = sub_1002FB78C(v23, SBYTE4(v27), v31, v32, v33, v17, 0, 0xF000000000000000, 0);
  *(unsigned char *)(v6 + 8) = 0;
  uint64_t v24 = sub_1004BF850(a3, a4);
  unint64_t v26 = v25;
  uint64_t v29 = v24;
  unint64_t v30 = v25;
  sub_10000A844(&qword_10096B260);
  Optional.tryUnwrap(_:file:line:)();
  sub_100250CB0(v24, v26);
  sub_100250CC4(v22, v21);
  sub_100250CB0(v33, v17);
  return v31;
}

uint64_t sub_1003D06C0(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  if (a2 >> 60 == 15)
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v6 = 1;
    *(void *)(v6 + 8) = 0xD000000000000011;
    *(void *)(v6 + 16) = 0x80000001007BC200;
    return swift_willThrow();
  }
  else
  {
    uint64_t v12 = *(void *)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
    uint64_t v13 = __chkstk_darwin(a1);
    uint64_t v15 = v14 + 4;
    sub_10025ADCC(v13, v16);
    os_unfair_lock_lock(v15);
    sub_10030F73C(v17);
    os_unfair_lock_unlock(v15);
    if (!v5)
    {
      uint64_t v29 = a3;
      int v18 = sub_100308714();
      uint64_t v19 = sub_100308740();
      uint64_t v20 = sub_1002FD0A8(v18, v30, v31, v19, a1, a2);
      unint64_t v22 = v21;
      uint64_t v23 = *(void *)(v12 + 24);
      uint64_t v28 = *(void *)(v12 + 16);
      sub_100308714();
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = v25;
      uint64_t v27 = v24;
      _s9RemoteLTKCMa();
      swift_allocObject();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10025ADCC(v20, v22);
      sub_1004F6A18(v29, a4, v28, v23, v20, v22, v27, v26);
      sub_100250CC4(v20, v22);
      swift_bridgeObjectRelease();
      sub_100308C0C();
      swift_release();
      sub_100250CC4(v20, v22);
      sub_100250CC4(v30, v31);
    }
    return sub_100250CB0(a1, a2);
  }
}

unsigned char *sub_1003D093C(uint64_t a1, unsigned char *a2)
{
  uint64_t v4 = v2;
  char v7 = *(unsigned char *)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession + 8);
  Class isa = *(unsigned char **)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession);
  LOBYTE(v45) = v7;
  sub_10000A844(&qword_100971FC0);
  Optional.tryUnwrap(_:file:line:)();
  if (!v3)
  {
    uint64_t v8 = sub_1004BF850(a1, (unint64_t)a2);
    unint64_t v10 = v9;
    uint64_t v42 = v8;
    unint64_t v43 = v9;
    sub_10000A844(&qword_10096B260);
    Optional.tryUnwrap(_:file:line:)();
    sub_100250CB0(v8, v10);
    a2 = isa;
    if (qword_100969D70 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000B47C(v11, (uint64_t)qword_100972070);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      Swift::String v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Started createAndStoreRangingKey", v14, 2u);
      swift_slowDealloc();
    }

    sub_1003D0F28();
    if ((unint64_t)(*(void *)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_type)
                          - 3) <= 1)
    {
      Class isa = 0;
      uint64_t v42 = 0;
      int v16 = aks_remote_peer_confirm();
      uint64_t v17 = sub_1004C01C0(v16, 0, 0, 0xD000000000000021, 0x80000001007BC1B0);
      unint64_t v19 = v18;
      if (v18 >> 60 == 15)
      {
        uint64_t v20 = Logger.logObject.getter();
        os_log_type_t v21 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v20, v21))
        {
          unint64_t v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v22 = 0;
          _os_log_impl((void *)&_mh_execute_header, v20, v21, "Failed to generate escrow", v22, 2u);
          swift_slowDealloc();
        }
      }
      else
      {
        uint64_t v23 = v17;
        sub_10025ADCC(v17, v18);
        uint64_t v24 = Logger.logObject.getter();
        os_log_type_t v25 = static os_log_type_t.default.getter();
        int v26 = v25;
        uint64_t v41 = v24;
        if (os_log_type_enabled(v24, v25))
        {
          int v39 = v26;
          uint64_t v27 = (uint8_t *)swift_slowAlloc();
          uint64_t v40 = (void *)swift_slowAlloc();
          uint64_t v38 = v27;
          *(_DWORD *)uint64_t v27 = 138412290;
          unint64_t v37 = v27 + 4;
          Class isa = Data._bridgeToObjectiveC()().super.isa;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          void *v40 = isa;
          sub_100250CB0(v23, v19);
          _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v39, "Generated escrow: %@", v38, 0xCu);
          sub_10000A844(&qword_10096B850);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_100250CB0(v23, v19);
        }

        uint64_t v41 = &v37;
        uint64_t v29 = __chkstk_darwin(v28);
        uint64_t v30 = __chkstk_darwin(v29);
        __chkstk_darwin(v30);
        unint64_t v32 = v31 + 4;
        os_unfair_lock_lock(v31 + 4);
        sub_10030F73C(v33);
        os_unfair_lock_unlock(v32);
        sub_100250CB0(v23, v19);
      }
    }
    Class isa = 0;
    uint64_t v42 = 0;
    int v34 = aks_remote_peer_confirm();
    uint64_t v35 = sub_1004C01C0(v34, isa, v42, 0xD000000000000021, 0x80000001007BC1B0);
    sub_100250CB0(v35, v36);
    sub_1003CFA20();
  }
  return a2;
}

uint64_t sub_1003D0F28()
{
  sub_10000A844(&qword_100971FC0);
  uint64_t result = Optional.tryUnwrap(_:file:line:)();
  if (!v1)
  {
    uint64_t v3 = aks_remote_session_token();
    uint64_t v4 = sub_1002FEC44(v3, 0, 0, 0xD00000000000001ELL, 0x80000001007BC220);
    unint64_t v6 = v5;
    sub_10030A7FC(v4, v5, *(void *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID), *(void *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID + 8));
    return sub_100250CC4(v4, v6);
  }
  return result;
}

uint64_t sub_1003D1088(uint64_t a1, unint64_t a2)
{
  unint64_t v21 = a2;
  uint64_t v5 = type metadata accessor for String.Encoding();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v7) = *(unsigned char *)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession + 8);
  uint64_t v22 = *(void *)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession);
  char v23 = v7;
  sub_10000A844(&qword_100971FC0);
  uint64_t result = Optional.tryUnwrap(_:file:line:)();
  if (!v3)
  {
    uint64_t v10 = sub_1004BF850(a1, v21);
    sub_100250CB0(v10, v11);
    static String.Encoding.utf8.getter();
    uint64_t v12 = String.data(using:allowLossyConversion:)();
    unint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if (v14 >> 60 == 15)
    {
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v15 = 10;
      *(void *)(v15 + 8) = 0xD000000000000017;
      *(void *)(v15 + 16) = 0x80000001007BC240;
      return swift_willThrow();
    }
    else
    {
      sub_10025ADCC(v12, v14);
      sub_1004BFC9C(v12, v14);
      sub_100250CB0(v12, v14);
      sub_1003CFA20();
      if (qword_100969D70 != -1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      sub_10000B47C(v16, (uint64_t)qword_100972070);
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v17, v18))
      {
        unint64_t v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v19 = 0;
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "Started createAndStoreRangingKey", v19, 2u);
        swift_slowDealloc();
      }

      sub_1003D0F28();
      return sub_100250CB0(v12, v14);
    }
  }
  return result;
}

uint64_t sub_1003D13A0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession;
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession + 8) & 1) == 0)
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v13 = 1;
    *(void *)(v13 + 8) = 0xD000000000000038;
    *(void *)(v13 + 16) = 0x80000001007BBF70;
    return swift_willThrow();
  }
  uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID);
  uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID + 8);
  uint64_t v9 = sub_10030C1A0();
  if (v10 >> 60 == 15)
  {
    _StringGuts.grow(_:)(32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v11._countAndFlagsBits = v8;
    v11._object = v7;
    String.append(_:)(v11);
    swift_bridgeObjectRelease();
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v12 = 10;
    *(void *)(v12 + 8) = 0xD00000000000001ELL;
    *(void *)(v12 + 16) = 0x80000001007BBF30;
    return swift_willThrow();
  }
  unint64_t v15 = v10;
  uint64_t v28 = v9;
  v25[1] = v25;
  char v16 = *(unsigned char *)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_role);
  __chkstk_darwin(v9);
  os_log_type_t v18 = v17 + 4;
  os_unfair_lock_lock(v17 + 4);
  sub_10030F73C(v19);
  os_unfair_lock_unlock(v18);
  if (v3) {
    return sub_100250CB0(v28, v15);
  }
  uint64_t v21 = v26;
  unint64_t v20 = v27;
  *(void *)uint64_t v4 = sub_1002FB78C(5, v16, v26, v27, v28, v15, 0, 0xF000000000000000, 0);
  *(unsigned char *)(v4 + 8) = 0;
  uint64_t v22 = sub_1004BF850(a1, a2);
  unint64_t v24 = v23;
  v25[2] = v22;
  v25[3] = v23;
  sub_10000A844(&qword_10096B260);
  Optional.tryUnwrap(_:file:line:)();
  sub_100250CB0(v22, v24);
  sub_100250CC4(v21, v20);
  sub_100250CB0(v28, v15);
  return v26;
}

void *sub_1003D16F8(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v2;
  __src = *(void **)&v2[OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession];
  sub_10000A844(&qword_100971FC0);
  Optional.tryUnwrap(_:file:line:)();
  if (!v3)
  {
    Optional.tryUnwrap(_:file:line:)();
    uint64_t v7 = sub_1004BF850(a1, a2);
    unint64_t v9 = v8;
    sub_10000A844(&qword_10096B260);
    Optional.tryUnwrap(_:file:line:)();
    sub_100250CB0(v7, v9);
    uint64_t v4 = __src;
    int v10 = aks_remote_peer_confirm();
    uint64_t v11 = sub_1004C01C0(v10, 0, 0, 0xD000000000000021, 0x80000001007BC1B0);
    sub_100250CB0(v11, v13);
    sub_1003CFA20();
  }
  return v4;
}

void sub_1003D1958(uint64_t a1, unint64_t a2)
{
  sub_10000A844(&qword_100971FC0);
  Optional.tryUnwrap(_:file:line:)();
  if (!v2)
  {
    Optional.tryUnwrap(_:file:line:)();
    uint64_t v5 = sub_1004BF850(a1, a2);
    sub_100250CB0(v5, v6);
    int v7 = aks_remote_peer_setup();
    uint64_t v8 = sub_1004C01C0(v7, 0, 0, 0xD00000000000001FLL, 0x80000001007BC1E0);
    sub_100250CB0(v8, v9);
    sub_1003CFA20();
  }
}

void sub_1003D1B08()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(*(void *)(v0
                                                  + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK)
                                      + 112)
                          + 16);
  os_unfair_lock_lock(v1);
  sub_10030F73C(v2);
  os_unfair_lock_unlock(v1);
}

void sub_1003D1BB4()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(*(void *)(v0
                                                  + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK)
                                      + 112)
                          + 16);
  os_unfair_lock_lock(v1);
  sub_10030F73C(v2);
  os_unfair_lock_unlock(v1);
}

void sub_1003D1C58()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(*(void *)(v0
                                                  + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK)
                                      + 112)
                          + 16);
  os_unfair_lock_lock(v1);
  sub_10030F73C(v2);
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1003D1D08()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_sessionID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1003D1DCC()
{
  return _s10LTKSessionCMa();
}

uint64_t _s10LTKSessionCMa()
{
  uint64_t result = qword_1009720B0;
  if (!qword_1009720B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003D1E20()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1003D1EE8()
{
  return sub_100309B58(v0[2], v0[3], v0[4], v0[5]);
}

void sub_1003D1F08(void *a1)
{
  sub_10030AC4C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1003D1F2C()
{
  return sub_10030E664();
}

uint64_t sub_1003D1F44(uint64_t a1)
{
  return sub_10030AF54(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1003D1F60(uint64_t a1)
{
  sub_100308A2C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1003D1F7C(void *a1)
{
  return sub_10030B19C(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1003D1FA0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100972160);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100972160);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1003D2068(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  uint64_t v3 = type metadata accessor for URL();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropReceive.AskRequest();
  v2[14] = v4;
  v2[15] = *(void *)(v4 - 8);
  v2[16] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_1003D2208, v5, 0);
}

uint64_t sub_1003D2208()
{
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v4 = v0[14];
  uint64_t v5 = *(void *)(SFAirDropReceive.AskRequest.files.getter() + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  uint64_t v7 = v0[15];
  uint64_t v6 = v0[16];
  uint64_t v8 = v0[14];
  if (!v5)
  {
    (*(void (**)(void, void))(v7 + 8))(v0[16], v0[14]);
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(SFAirDropReceive.AskRequest.urlItems.getter() + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  if (v9)
  {
LABEL_6:
    char v13 = 0;
    goto LABEL_7;
  }
  id v10 = [self defaultManager];
  id v11 = [v10 URLForUbiquityContainerIdentifier:BRUbiquitousDefaultContainerID];

  if (v11)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v12 = 1;
  }
  uint64_t v17 = v0[12];
  uint64_t v16 = v0[13];
  uint64_t v18 = v0[7];
  char v13 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[9] + 56))(v16, v12, 1, v0[8]);
  sub_1003D2B28(v16, v17);
  uint64_t v19 = v18 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropContentHandleriCloudDrive_iCloudDriveFolder;
  swift_beginAccess();
  sub_1003D2B90(v17, v19);
  swift_endAccess();
  if (SFFilesAppAvailable()) {
    goto LABEL_7;
  }
  if (qword_100969D78 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_10000B47C(v20, (uint64_t)qword_100972160);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    unint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Files App not available", v23, 2u);
    swift_slowDealloc();
  }
  uint64_t v24 = v0[11];
  uint64_t v25 = v0[8];
  uint64_t v26 = v0[9];

  sub_1003AFF3C(v19, v24);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    sub_10000A7E8(v0[11], (uint64_t *)&unk_10096AC10);
    unint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "iCloud drive not enabled or accessible.", v29, 2u);
      swift_slowDealloc();
    }

    goto LABEL_6;
  }
  (*(void (**)(void, void, void))(v0[9] + 32))(v0[10], v0[11], v0[8]);
  Swift::Bool v30 = URL.checkResourceIsReachable()();
  if (v31)
  {
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      int v34 = (uint8_t *)swift_slowAlloc();
      unint64_t v36 = (void *)swift_slowAlloc();
      *(_DWORD *)int v34 = 138412290;
      swift_errorRetain();
      uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
      v0[5] = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v36 = v35;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "iCloud drive not enabled or accessible. Error: %@", v34, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }
    swift_errorRelease();
    char v13 = 0;
  }
  else
  {
    char v13 = v30;
  }
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
LABEL_7:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14(v13 & 1);
}

uint64_t sub_1003D2720()
{
  sub_10000A7E8(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropContentHandleriCloudDrive_iCloudDriveFolder, (uint64_t *)&unk_10096AC10);

  return swift_deallocClassInstance();
}

uint64_t sub_1003D278C()
{
  return type metadata accessor for SDAirDropContentHandleriCloudDrive();
}

uint64_t type metadata accessor for SDAirDropContentHandleriCloudDrive()
{
  uint64_t result = qword_1009721A8;
  if (!qword_1009721A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003D27E0()
{
  sub_10026B2E0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1003D2870@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandleriCloudDrive();
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropContentHandleriCloudDrive_iCloudDriveFolder;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *a1 = v2;
  return result;
}

uint64_t sub_1003D2900(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_1003D2068(a1);
}

uint64_t sub_1003D2998@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_1003A07DC(a1, a2, 1, a3);
}

uint64_t sub_1003D29EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_10097F1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v9 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a2, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  sub_10039FAA0(a1, 0, 0, a3);
  return sub_10000A7E8((uint64_t)v8, (uint64_t *)&unk_10097F1D0);
}

uint64_t sub_1003D2B28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_10096AC10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003D2B90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_10096AC10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003D2BF8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100972280);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100972280);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1003D2CC0(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v2[4] = swift_task_alloc();
  v2[5] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferType();
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  v2[13] = static AirDropActor.shared;
  return _swift_task_switch(sub_1003D2E68, v5, 0);
}

void sub_1003D2E68()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  SFAirDropReceive.AskRequest.type.getter();
  char v4 = SFAirDrop.TransferType.isLinks.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if ((v4 & 1) == 0)
  {
LABEL_4:
    uint64_t v10 = 0;
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v11 = (void (*)(uint64_t))v0[1];
    v11(v10);
    return;
  }
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[5];
  uint64_t v8 = SFAirDropReceive.AskRequest.urlItems.getter();
  sub_1002E5BA0(v8, v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  v0[14] = v9;
  v0[15] = (v6 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v9(v7, 1, v5) == 1)
  {
    sub_10000A7E8(v0[5], (uint64_t *)&unk_10096AC10);
    goto LABEL_4;
  }
  uint64_t v12 = v0[9];
  uint64_t v13 = v0[6];
  uint64_t v14 = v0[7];
  uint64_t v15 = v0[5];
  uint64_t v16 = v0[3];
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
  v0[16] = v17;
  v0[17] = (v14 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v17(v12, v15, v13);
  sub_1003D3FCC(v18);
  uint64_t v19 = *(void **)(v16 + 16);
  *(void *)(v16 + 16) = v20;

  if (!*(void *)(v16 + 16))
  {
    uint64_t v44 = v0[3];
    type metadata accessor for SDAirDropContentHandlerWebLinks();
    *(void *)(v44 + 24) = swift_allocObject();
    swift_release();
    uint64_t v45 = *(void *)(v44 + 24);
    v0[18] = v45;
    if (v45)
    {
      uint64_t v50 = (void (*)(uint64_t))((char *)&dword_10096DD70 + dword_10096DD70);
      swift_retain();
      uint64_t v46 = (void *)swift_task_alloc();
      v0[19] = v46;
      *uint64_t v46 = v0;
      v46[1] = sub_1003D3364;
      uint64_t v47 = v0[2];
      v50(v47);
      return;
    }
    (*(void (**)(void, void))(v0[7] + 8))(v0[9], v0[6]);
    goto LABEL_4;
  }
  uint64_t v21 = v0[7];
  uint64_t v22 = SFAirDropReceive.AskRequest.urlItems.getter();
  int64_t v23 = 0;
  uint64_t v48 = v22 + 56;
  uint64_t v24 = -1;
  uint64_t v25 = -1 << *(unsigned char *)(v22 + 32);
  if (-v25 < 64) {
    uint64_t v24 = ~(-1 << -(char)v25);
  }
  unint64_t v26 = v24 & *(void *)(v22 + 56);
  int64_t v49 = (unint64_t)(63 - v25) >> 6;
  unint64_t v27 = (void (**)(uint64_t, uint64_t))(v21 + 8);
  while (1)
  {
    if (v26)
    {
      unint64_t v28 = __clz(__rbit64(v26));
      v26 &= v26 - 1;
      unint64_t v29 = v28 | (v23 << 6);
      goto LABEL_28;
    }
    int64_t v30 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v30 >= v49) {
      goto LABEL_35;
    }
    unint64_t v31 = *(void *)(v48 + 8 * v30);
    ++v23;
    if (!v31)
    {
      int64_t v23 = v30 + 1;
      if (v30 + 1 >= v49) {
        goto LABEL_35;
      }
      unint64_t v31 = *(void *)(v48 + 8 * v23);
      if (!v31)
      {
        int64_t v23 = v30 + 2;
        if (v30 + 2 >= v49) {
          goto LABEL_35;
        }
        unint64_t v31 = *(void *)(v48 + 8 * v23);
        if (!v31) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v26 = (v31 - 1) & v31;
    unint64_t v29 = __clz(__rbit64(v31)) + (v23 << 6);
LABEL_28:
    os_log_type_t v33 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[14];
    uint64_t v34 = v0[6];
    uint64_t v35 = v0[4];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v21 + 16))(v35, *(void *)(v22 + 48) + *(void *)(v21 + 72) * v29, v34);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v35, 0, 1, v34);
    if (v33(v35, 1, v34) == 1) {
      goto LABEL_36;
    }
    uint64_t v36 = v0[8];
    uint64_t v37 = v0[6];
    ((void (*)(uint64_t, void, uint64_t))v0[16])(v36, v0[4], v37);
    URL._bridgeToObjectiveC()(v38);
    uint64_t v40 = v39;
    uint64_t v41 = *v27;
    (*v27)(v36, v37);
    LOBYTE(v36) = [v40 isiWorkURL];

    if ((v36 & 1) == 0)
    {
      uint64_t v42 = v0[9];
      uint64_t v43 = v0[6];
      swift_release();
      v41(v42, v43);
      goto LABEL_4;
    }
  }
  int64_t v32 = v30 + 3;
  if (v32 >= v49)
  {
LABEL_35:
    (*(void (**)(void, uint64_t, uint64_t, void))(v21 + 56))(v0[4], 1, 1, v0[6]);
LABEL_36:
    swift_release();
    (*v27)(v0[9], v0[6]);
    uint64_t v10 = 1;
    goto LABEL_5;
  }
  unint64_t v31 = *(void *)(v48 + 8 * v32);
  if (v31)
  {
    int64_t v23 = v32;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v23 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v23 >= v49) {
      goto LABEL_35;
    }
    unint64_t v31 = *(void *)(v48 + 8 * v23);
    ++v32;
    if (v31) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
}

uint64_t sub_1003D3364(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 104);
  *(unsigned char *)(*(void *)v1 + 160) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1003D347C, v2, 0);
}

void sub_1003D347C()
{
  char v1 = *(unsigned char *)(v0 + 160);
  swift_release();
  if ((v1 & 1) == 0)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 72), *(void *)(v0 + 48));
    uint64_t v25 = 0;
LABEL_27:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v26 = *(void (**)(uint64_t))(v0 + 8);
    v26(v25);
    return;
  }
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = SFAirDropReceive.AskRequest.urlItems.getter();
  int64_t v4 = 0;
  uint64_t v27 = v3 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(v3 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(v3 + 56);
  int64_t v28 = (unint64_t)(63 - v6) >> 6;
  uint64_t v8 = (void (**)(uint64_t, uint64_t))(v2 + 8);
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_21;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v11 >= v28) {
      goto LABEL_25;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v28) {
        goto LABEL_25;
      }
      unint64_t v12 = *(void *)(v27 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v28) {
          goto LABEL_25;
        }
        unint64_t v12 = *(void *)(v27 + 8 * v4);
        if (!v12) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_21:
    uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 112);
    uint64_t v15 = *(void *)(v0 + 48);
    uint64_t v16 = *(void *)(v0 + 32);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v2 + 16))(v16, *(void *)(v3 + 48) + *(void *)(v2 + 72) * v10, v15);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v16, 0, 1, v15);
    if (v14(v16, 1, v15) == 1) {
      goto LABEL_26;
    }
    uint64_t v17 = *(void *)(v0 + 64);
    uint64_t v18 = *(void *)(v0 + 48);
    (*(void (**)(uint64_t, void, uint64_t))(v0 + 128))(v17, *(void *)(v0 + 32), v18);
    URL._bridgeToObjectiveC()(v19);
    uint64_t v21 = v20;
    uint64_t v22 = *v8;
    (*v8)(v17, v18);
    LOBYTE(v17) = [v21 isiWorkURL];

    if ((v17 & 1) == 0)
    {
      uint64_t v23 = *(void *)(v0 + 72);
      uint64_t v24 = *(void *)(v0 + 48);
      swift_release();
      v22(v23, v24);
      uint64_t v25 = 0;
      goto LABEL_27;
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v28)
  {
LABEL_25:
    (*(void (**)(void, uint64_t, uint64_t, void))(v2 + 56))(*(void *)(v0 + 32), 1, 1, *(void *)(v0 + 48));
LABEL_26:
    swift_release();
    (*v8)(*(void *)(v0 + 72), *(void *)(v0 + 48));
    uint64_t v25 = 1;
    goto LABEL_27;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v28) {
      goto LABEL_25;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_31:
  __break(1u);
}

void sub_1003D37D0(uint64_t a1, char a2)
{
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_10096AC10);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v2 + 40);
  if (v11)
  {
    uint64_t v12 = *(void *)(v2 + 32);
    swift_bridgeObjectRetain();
    unint64_t v13 = *(void *)(SFAirDropReceive.AskRequest.urlItems.getter() + 16);
    swift_bridgeObjectRelease();
    uint64_t v14 = SFAirDropReceive.AskRequest.urlItems.getter();
    sub_1002E5BA0(v14, (uint64_t)v6);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_10000A7E8((uint64_t)v6, (uint64_t *)&unk_10096AC10);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      URL._bridgeToObjectiveC()(v19);
      uint64_t v21 = v20;
      id v22 = [v20 iWorkDocumentName];

      if (v22)
      {
        uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v25 = v24;

        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        if (v13 == 1)
        {
          uint64_t v44 = 0x545F4E5245444F4DLL;
          unint64_t v45 = 0xEF524546534E4152;
          swift_bridgeObjectRetain();
          v26._countAndFlagsBits = 95;
          v26._object = (void *)0xE100000000000000;
          String.append(_:)(v26);
          v27._countAndFlagsBits = 0xD000000000000015;
          v27._object = "PHONE_LINK_WITH_NUMBER";
          String.append(_:)(v27);
          swift_bridgeObjectRelease();
          if (a2)
          {
            v28._countAndFlagsBits = 0x4C4154495041435FLL;
            v28._object = (void *)0xEC00000044455A49;
            String.append(_:)(v28);
          }
          v29._countAndFlagsBits = 0x545845545FLL;
          v29._object = (void *)0xE500000000000000;
          String.append(_:)(v29);
          sub_10000A844((uint64_t *)&unk_100977CB0);
          swift_arrayDestroy();
          NSString v30 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v31 = (id)SFLocalizedStringForKey();

          if (v31)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            sub_10000A844((uint64_t *)&unk_10096EE60);
            uint64_t v32 = swift_allocObject();
            *(_OWORD *)(v32 + 16) = xmmword_100770AD0;
            *(void *)(v32 + 56) = &type metadata for String;
            unint64_t v33 = sub_1002E695C();
            *(void *)(v32 + 32) = v12;
            *(void *)(v32 + 40) = v11;
            *(void *)(v32 + 96) = &type metadata for String;
            *(void *)(v32 + 104) = v33;
            *(void *)(v32 + 64) = v33;
            *(void *)(v32 + 72) = v23;
            *(void *)(v32 + 80) = v25;
            static String.localizedStringWithFormat(_:_:)();
            swift_bridgeObjectRelease();
LABEL_23:
            swift_bridgeObjectRelease();
            return;
          }
          goto LABEL_25;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      }
    }
    sub_10000A844(&qword_10096D760);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
    *(void *)(inited + 32) = 0x494C5F4B524F5749;
    *(void *)(inited + 40) = 0xEA00000000004B4ELL;
    *(void *)(inited + 48) = v13;
    uint64_t v44 = 0x545F4E5245444F4DLL;
    unint64_t v45 = 0xEF524546534E4152;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v35._countAndFlagsBits = 95;
    v35._object = (void *)0xE100000000000000;
    String.append(_:)(v35);
    v36._countAndFlagsBits = 0x494C5F4B524F5749;
    v36._object = (void *)0xEA00000000004B4ELL;
    String.append(_:)(v36);
    swift_bridgeObjectRelease();
    if (v13 > 1)
    {
      v37._countAndFlagsBits = 0x4C4152554C505FLL;
      v37._object = (void *)0xE700000000000000;
      String.append(_:)(v37);
    }
    swift_bridgeObjectRelease();
    if (a2)
    {
      v38._countAndFlagsBits = 0x4C4154495041435FLL;
      v38._object = (void *)0xEC00000044455A49;
      String.append(_:)(v38);
    }
    v39._countAndFlagsBits = 0x545845545FLL;
    v39._object = (void *)0xE500000000000000;
    String.append(_:)(v39);
    swift_setDeallocating();
    sub_10000A844((uint64_t *)&unk_100977CB0);
    swift_arrayDestroy();
    NSString v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v41 = (id)SFLocalizedStringForKey();

    if (v41)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10000A844((uint64_t *)&unk_10096EE60);
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_100770AD0;
      *(void *)(v42 + 56) = &type metadata for Int;
      *(void *)(v42 + 64) = &protocol witness table for Int;
      *(void *)(v42 + 32) = v13;
      *(void *)(v42 + 96) = &type metadata for String;
      *(void *)(v42 + 104) = sub_1002E695C();
      *(void *)(v42 + 72) = v12;
      *(void *)(v42 + 80) = v11;
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    __break(1u);
LABEL_25:
    __break(1u);
    return;
  }
  if (qword_100969D80 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_10000B47C(v15, (uint64_t)qword_100972280);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Called localizedDescription on SDAirDropContentHandleriWorkLinks without an appName", v18, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1003D3E70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_10097F1D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v2 + 24))
  {
    swift_retain();
    sub_1002E5D8C(a1, a2);
    return swift_release();
  }
  else
  {
    uint64_t v9 = *(void **)(v2 + 16);
    type metadata accessor for SDAirDropContentHandlerUtilities();
    uint64_t v10 = type metadata accessor for SFAirDropReceive.ItemDestination();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
    id v11 = v9;
    sub_10039FAA0(a1, v9, 1, a2);

    return sub_10000A7E8((uint64_t)v7, (uint64_t *)&unk_10097F1D0);
  }
}

void sub_1003D3FCC(NSURL *a1@<X8>)
{
  uint64_t v2 = v1;
  URL._bridgeToObjectiveC()(a1);
  uint64_t v4 = v3;
  unsigned int v5 = [v3 isiWorkURL];

  if (v5)
  {
    URL._bridgeToObjectiveC()(v6);
    uint64_t v8 = v7;
    id v9 = [v7 iWorkApplicationName];

    if (!v9)
    {
      __break(1u);
      return;
    }
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10024A1FC();
    uint64_t v10 = StringProtocol.capitalized.getter();
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    if (v10 == 0x7365676150 && v12 == 0xE500000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      id v13 = objc_allocWithZone((Class)LSApplicationRecord);
      uint64_t v14 = 0x6C7070612E6D6F63;
      unint64_t v15 = 0xEF73656761502E65;
    }
    else
    {
      if (v10 == 0x737265626D754ELL && v12 == 0xE700000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        id v16 = objc_allocWithZone((Class)LSApplicationRecord);
        os_log_type_t v17 = "com.apple.Numbers";
      }
      else
      {
        if ((v10 != 0x65746F6E79654BLL || v12 != 0xE700000000000000)
          && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          goto LABEL_16;
        }
        id v26 = objc_allocWithZone((Class)LSApplicationRecord);
        os_log_type_t v17 = "com.apple.Keynote";
      }
      unint64_t v15 = (unint64_t)(v17 - 32) | 0x8000000000000000;
      uint64_t v14 = 0xD000000000000011;
    }
    id v18 = sub_1006A5458(v14, v15, 1);
    if (v18)
    {
      id v19 = v18;
      id v20 = [v19 applicationState];
      unsigned int v21 = [v20 isInstalled];

      if (v21)
      {
        swift_bridgeObjectRelease();
        id v22 = [v19 localizedName];
        uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v25 = v24;

        *(void *)(v2 + 32) = v23;
        *(void *)(v2 + 40) = v25;
LABEL_17:
        swift_bridgeObjectRelease();
        return;
      }
    }
LABEL_16:
    *(void *)(v2 + 32) = v10;
    *(void *)(v2 + 40) = v12;
    goto LABEL_17;
  }
}

uint64_t sub_1003D44E0()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDAirDropContentHandleriWorkLinks()
{
  return self;
}

double sub_1003D454C@<D0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandleriWorkLinks();
  uint64_t v2 = swift_allocObject();
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *a1 = v2;
  return result;
}

uint64_t sub_1003D4588(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_1003D2CC0(a1);
}

void sub_1003D4620(uint64_t a1, char a2)
{
}

uint64_t sub_1003D4644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003D3E70(a1, a2);
}

uint64_t sub_1003D4668(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_100253828(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v10 = &v3[16 * v9 + 32];
  if (a1 + 32 < (unint64_t)&v10[16 * v8] && (unint64_t)v10 < a1 + 32 + 16 * v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), 16 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = *((void *)v3 + 2);
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    *((void *)v3 + 2) = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    os_unfair_lock_s *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003D47B4(unint64_t a1)
{
  return sub_1003D4814(a1, &qword_100972420, (unint64_t *)&unk_100972430, &qword_100972428, (uint64_t *)sub_1003D8798);
}

uint64_t sub_1003D47E4(unint64_t a1)
{
  return sub_1003D4814(a1, &qword_100972450, (unint64_t *)&unk_100972460, &qword_100972458, (uint64_t *)sub_1003D886C);
}

uint64_t sub_1003D4814(unint64_t a1, uint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v5 >> 62))
  {
    uint64_t v12 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v13 = v12 + v11;
    if (!__OFADD__(v12, v11)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v13 = v23 + v11;
  if (__OFADD__(v23, v11)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v14 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *int64_t v5 = v14;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v14 & 0x8000000000000000) == 0 && (v14 & 0x4000000000000000) == 0)
    {
      uint64_t v16 = v14 & 0xFFFFFFFFFFFFFF8;
      if (v13 <= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  uint64_t v24 = v11;
  uint64_t v11 = (uint64_t)a2;
  a2 = (uint64_t *)a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if (v14 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *int64_t v5 = v17;
    uint64_t v16 = v17 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = (unint64_t *)a2;
    a2 = (uint64_t *)v11;
    uint64_t v11 = v24;
LABEL_11:
    uint64_t result = sub_1003D8148(v16 + 8 * *(void *)(v16 + 16) + 32, (*(void *)(v16 + 24) >> 1) - *(void *)(v16 + 16), a1, a2, a3, a4, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v19 >= 1)
  {
    uint64_t v20 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v21 = __OFADD__(v20, v19);
    uint64_t v22 = v20 + v19;
    if (v21)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1003D4A38(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_100253724(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = &v3[v8 + 32];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    os_unfair_lock_s *v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003D4B80(uint64_t a1)
{
  return sub_1003D5EA8(a1, (uint64_t (*)(void))sub_100253DC0, (uint64_t *)&unk_10096B440);
}

uint64_t sub_1003D4BA0(uint64_t a1)
{
  return sub_1003D4DC4(a1, (uint64_t (*)(void))sub_100253318, (uint64_t (*)(void))&type metadata accessor for URL);
}

uint64_t sub_1003D4BCC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    uint64_t *v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_1003D8368(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1003D4D98(uint64_t a1)
{
  return sub_1003D4DC4(a1, (uint64_t (*)(void))sub_1002540B0, (uint64_t (*)(void))&type metadata accessor for SFSecurityScopedURL);
}

uint64_t sub_1003D4DC4(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(a3(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003D4F80(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    uint64_t *v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_1003D8588(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1003D514C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_100253208(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[16 * v8 + 32];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t *v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003D52A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_10025438C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[9 * v8 + 4];
  if (a1 + 32 < v9 + 72 * v2 && v9 < a1 + 32 + 72 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003D53FC(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Data.Iterator();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_32;
      }
      uint64_t v10 = HIDWORD(a1) - (int)a1;
LABEL_6:
      uint64_t v13 = *v3;
      int64_t v14 = *((void *)*v3 + 2);
      int64_t v15 = v14 + v10;
      if (__OFADD__(v14, v10))
      {
        __break(1u);
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v3 = v13;
      if (!isUniquelyReferenced_nonNull_native || (int64_t v17 = *((void *)v13 + 3) >> 1, v17 < v15))
      {
        if (v14 <= v15) {
          int64_t v18 = v14 + v10;
        }
        else {
          int64_t v18 = v14;
        }
        uint64_t v13 = sub_100253724(isUniquelyReferenced_nonNull_native, v18, 1, v13);
        *uint64_t v3 = v13;
        int64_t v17 = *((void *)v13 + 3) >> 1;
      }
      uint64_t v19 = v17 - *((void *)v13 + 2);
      sub_10025ADCC(a1, a2);
      uint64_t v20 = Data._copyContents(initializing:)();
      sub_100250CC4(a1, a2);
      sub_100250CC4(a1, a2);
      if (v20 < v10) {
        goto LABEL_20;
      }
      if (v20 >= 1)
      {
        uint64_t v21 = *((void *)v13 + 2);
        BOOL v22 = __OFADD__(v21, v20);
        uint64_t v23 = v21 + v20;
        if (v22)
        {
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
          JUMPOUT(0x1003D56ECLL);
        }
        *((void *)v13 + 2) = v23;
      }
      if (v20 == v19)
      {
LABEL_21:
        int64_t v25 = *((void *)v13 + 2);
        sub_1003D8C84((unint64_t *)&unk_10096B460, (void (*)(uint64_t))&type metadata accessor for Data.Iterator);
        dispatch thunk of IteratorProtocol.next()();
        if (v30) {
          return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
        }
        while (1)
        {
          unint64_t v26 = *((void *)v13 + 3);
          int64_t v27 = v26 >> 1;
          if ((uint64_t)(v26 >> 1) >= v25 + 1) {
            break;
          }
          uint64_t v13 = sub_100253724((char *)(v26 > 1), v25 + 1, 1, v13);
          *uint64_t v3 = v13;
          char v28 = v30;
          int64_t v27 = *((void *)v13 + 3) >> 1;
          if ((v30 & 1) == 0) {
            goto LABEL_26;
          }
LABEL_23:
          *((void *)v13 + 2) = v25;
          if (v28) {
            return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
          }
        }
        char v28 = 0;
        do
        {
LABEL_26:
          if (v25 >= v27) {
            break;
          }
          v13[v25++ + 32] = v29[14];
          dispatch thunk of IteratorProtocol.next()();
          char v28 = v30;
        }
        while ((v30 & 1) == 0);
        goto LABEL_23;
      }
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    case 2uLL:
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      uint64_t v10 = v11 - v12;
      if (!__OFSUB__(v11, v12)) {
        goto LABEL_6;
      }
      goto LABEL_33;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v10 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1003D56FC(uint64_t a1)
{
  return sub_1003D5EA8(a1, (uint64_t (*)(void))sub_1002545D8, (uint64_t *)&unk_100972440);
}

uint64_t sub_1003D571C(uint64_t result)
{
  int64_t v4 = v2;
  uint64_t v5 = result;
  if ((result & 0xC000000000000001) != 0)
  {
    uint64_t result = __CocoaSet.count.getter();
    uint64_t v6 = result;
  }
  else
  {
    uint64_t v6 = *(void *)(result + 16);
  }
  if ((unint64_t)*v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v8 = v18 + v6;
    if (!__OFADD__(v18, v6)) {
      goto LABEL_6;
    }
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v6;
  if (__OFADD__(v7, v6)) {
    goto LABEL_21;
  }
LABEL_6:
  unint64_t v9 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *int64_t v4 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    uint64_t v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *int64_t v4 = v12;
    uint64_t v11 = v12 & 0xFFFFFFFFFFFFFF8;
  }
  uint64_t v13 = *(void *)(v11 + 16);
  uint64_t v14 = (*(void *)(v11 + 24) >> 1) - v13;
  uint64_t result = (uint64_t)sub_10025841C(&v42, (void *)(v11 + 8 * v13 + 32), v14, v5);
  if (result < v6) {
    goto LABEL_22;
  }
  if (result >= 1)
  {
    uint64_t v15 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v16 = __OFADD__(v15, result);
    uint64_t v17 = v15 + result;
    if (v16)
    {
      __break(1u);
LABEL_29:
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_18;
      }
      sub_10000B740(0, &qword_10096B3E8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      BOOL v22 = v41;
      swift_unknownObjectRelease();
      while (2)
      {
        if (!v22) {
          goto LABEL_18;
        }
        while (1)
        {
          uint64_t v24 = *v4 & 0xFFFFFFFFFFFFFF8;
          if (v3 + 1 > *(void *)(v24 + 0x18) >> 1)
          {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v24 = *v4 & 0xFFFFFFFFFFFFFF8;
          }
          uint64_t v25 = *(void *)(v24 + 24) >> 1;
          if (v3 < v25) {
            break;
          }
LABEL_33:
          *(void *)(v24 + 16) = v3;
        }
        uint64_t v26 = v24 + 32;
        while (1)
        {
          *(void *)(v26 + 8 * v3++) = v22;
          int64_t v27 = v45;
          if (v42 < 0)
          {
            if (!__CocoaSet.Iterator.next()()) {
              goto LABEL_70;
            }
            sub_10000B740(0, &qword_10096B3E8);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            BOOL v22 = v41;
            swift_unknownObjectRelease();
            goto LABEL_45;
          }
          if (!v46) {
            break;
          }
          unint64_t v28 = (v46 - 1) & v46;
          unint64_t v29 = __clz(__rbit64(v46)) | (v45 << 6);
LABEL_41:
          BOOL v22 = *(void **)(*(void *)(v42 + 48) + 8 * v29);
          id v30 = v22;
LABEL_42:
          int64_t v45 = v27;
          unint64_t v46 = v28;
LABEL_45:
          if (!v22)
          {
LABEL_70:
            *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v3;
            goto LABEL_18;
          }
          if (v3 >= v25)
          {
            uint64_t v24 = *v4 & 0xFFFFFFFFFFFFFF8;
            goto LABEL_33;
          }
        }
        int64_t v31 = v45 + 1;
        if (__OFADD__(v45, 1))
        {
          __break(1u);
LABEL_94:
          BOOL v22 = 0;
          unint64_t v20 = 0;
          int64_t v19 = v1;
LABEL_27:
          int64_t v45 = v19;
          unint64_t v46 = v20;
          continue;
        }
        break;
      }
      int64_t v32 = (unint64_t)(v44 + 64) >> 6;
      if (v31 >= v32)
      {
        BOOL v22 = 0;
        unint64_t v28 = 0;
        goto LABEL_42;
      }
      unint64_t v33 = *(void *)(v43 + 8 * v31);
      if (!v33)
      {
        int64_t v34 = v45 + 2;
        if (v45 + 2 >= v32) {
          goto LABEL_67;
        }
        unint64_t v33 = *(void *)(v43 + 8 * v34);
        if (!v33)
        {
          int64_t v1 = v45 + 3;
          if (v45 + 3 >= v32) {
            goto LABEL_68;
          }
          unint64_t v33 = *(void *)(v43 + 8 * v1);
          if (v33)
          {
            int64_t v31 = v45 + 3;
            goto LABEL_51;
          }
          int64_t v34 = v45 + 4;
          if (v45 + 4 >= v32)
          {
            BOOL v22 = 0;
            unint64_t v28 = 0;
            int64_t v27 = v45 + 3;
            goto LABEL_42;
          }
          unint64_t v33 = *(void *)(v43 + 8 * v34);
          if (!v33)
          {
            int64_t v31 = v45 + 5;
            if (v45 + 5 >= v32)
            {
LABEL_68:
              BOOL v22 = 0;
              unint64_t v28 = 0;
              int64_t v27 = v34;
              goto LABEL_42;
            }
            unint64_t v33 = *(void *)(v43 + 8 * v31);
            if (!v33)
            {
              int64_t v31 = v32 - 1;
              uint64_t v35 = v45 + 6;
              while (v32 != v35)
              {
                unint64_t v33 = *(void *)(v43 + 8 * v35++);
                if (v33)
                {
                  int64_t v31 = v35 - 1;
                  goto LABEL_51;
                }
              }
LABEL_67:
              BOOL v22 = 0;
              unint64_t v28 = 0;
              int64_t v27 = v31;
              goto LABEL_42;
            }
            goto LABEL_51;
          }
        }
        int64_t v31 = v34;
      }
LABEL_51:
      unint64_t v28 = (v33 - 1) & v33;
      unint64_t v29 = __clz(__rbit64(v33)) + (v31 << 6);
      int64_t v27 = v31;
      goto LABEL_41;
    }
    *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v17;
  }
  if (result != v14)
  {
LABEL_18:
    sub_10024D330();
    return specialized Array._endMutation()();
  }
LABEL_23:
  uint64_t v3 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  int64_t v19 = v45;
  if (v42 < 0) {
    goto LABEL_29;
  }
  if (v46)
  {
    unint64_t v20 = (v46 - 1) & v46;
    unint64_t v21 = __clz(__rbit64(v46)) | (v45 << 6);
LABEL_26:
    BOOL v22 = *(void **)(*(void *)(v42 + 48) + 8 * v21);
    id v23 = v22;
    goto LABEL_27;
  }
  int64_t v36 = v45 + 1;
  if (!__OFADD__(v45, 1))
  {
    int64_t v37 = (unint64_t)(v44 + 64) >> 6;
    if (v36 >= v37)
    {
      BOOL v22 = 0;
      unint64_t v20 = 0;
      goto LABEL_27;
    }
    unint64_t v38 = *(void *)(v43 + 8 * v36);
    if (v38) {
      goto LABEL_75;
    }
    int64_t v39 = v45 + 2;
    if (v45 + 2 >= v37)
    {
LABEL_91:
      BOOL v22 = 0;
      unint64_t v20 = 0;
      int64_t v19 = v36;
      goto LABEL_27;
    }
    unint64_t v38 = *(void *)(v43 + 8 * v39);
    if (v38) {
      goto LABEL_79;
    }
    int64_t v1 = v45 + 3;
    if (v45 + 3 < v37)
    {
      unint64_t v38 = *(void *)(v43 + 8 * v1);
      if (v38)
      {
        int64_t v36 = v45 + 3;
        goto LABEL_75;
      }
      int64_t v39 = v45 + 4;
      if (v45 + 4 >= v37) {
        goto LABEL_94;
      }
      unint64_t v38 = *(void *)(v43 + 8 * v39);
      if (v38)
      {
LABEL_79:
        int64_t v36 = v39;
LABEL_75:
        unint64_t v20 = (v38 - 1) & v38;
        unint64_t v21 = __clz(__rbit64(v38)) + (v36 << 6);
        int64_t v19 = v36;
        goto LABEL_26;
      }
      int64_t v36 = v45 + 5;
      if (v45 + 5 < v37)
      {
        unint64_t v38 = *(void *)(v43 + 8 * v36);
        if (!v38)
        {
          int64_t v36 = v37 - 1;
          uint64_t v40 = v45 + 6;
          do
          {
            if (v37 == v40) {
              goto LABEL_91;
            }
            unint64_t v38 = *(void *)(v43 + 8 * v40++);
          }
          while (!v38);
          int64_t v36 = v40 - 1;
        }
        goto LABEL_75;
      }
    }
    BOOL v22 = 0;
    unint64_t v20 = 0;
    int64_t v19 = v39;
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003D5D1C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_100253AE4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  sub_10000A844((uint64_t *)&unk_10097BB90);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003D5E88(uint64_t a1)
{
  return sub_1003D5EA8(a1, (uint64_t (*)(void))sub_100254620, &qword_10096B430);
}

uint64_t sub_1003D5EA8(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v6 + v4) <= *(void *)(v5 + 24) >> 1)
  {
    unint64_t v10 = *(void *)(a1 + 16);
    if (v10) {
      goto LABEL_5;
    }
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
  uint64_t v5 = a2();
  unint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v11 = *(void *)(v5 + 16);
  if ((*(void *)(v5 + 24) >> 1) - v11 < (uint64_t)v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v12 = v5 + 40 * v11 + 32;
  if (a1 + 32 < v12 + 40 * v10 && v12 < a1 + 32 + 40 * v10) {
    goto LABEL_21;
  }
  sub_10000A844(a3);
  swift_arrayInitWithCopy();
  if (v10 < v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v14 = *(void *)(v5 + 16);
  BOOL v15 = __OFADD__(v14, v10);
  uint64_t v16 = v14 + v10;
  if (!v15)
  {
    *(void *)(v5 + 16) = v16;
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t SFAirDropTransfer.init(incomingTransfer:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SFAirDropReceive.AskRequest();
  uint64_t v185 = *(void *)(v2 - 8);
  uint64_t v186 = v2;
  __chkstk_darwin(v2);
  v184 = (char *)&v170 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v179 = *(void *)(v4 - 8);
  uint64_t v180 = v4;
  __chkstk_darwin(v4);
  v178 = (char *)&v170 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = type metadata accessor for CodableError();
  uint64_t v171 = *(void *)(v172 - 8);
  __chkstk_darwin(v172);
  v170 = (char *)&v170 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = type metadata accessor for SFAirDropReceive.Failure();
  v188 = *(void **)(v190 - 8);
  uint64_t v7 = __chkstk_darwin(v190);
  v173 = (char *)&v170 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v174 = (char *)&v170 - v9;
  uint64_t v187 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v189 = *(void *)(v187 - 8);
  uint64_t v10 = __chkstk_darwin(v187);
  unint64_t v12 = (char *)&v170 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v175 = (char *)&v170 - v13;
  uint64_t v14 = type metadata accessor for SFAirDropReceive.Transfer.State();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t *)((char *)&v170 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_10000A844((uint64_t *)&unk_10096AC10);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v177 = (uint64_t)&v170 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  v176 = (char *)&v170 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v170 - v23;
  uint64_t v25 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  unint64_t v28 = (char *)&v170 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B740(0, &qword_1009723C8);
  uint64_t v182 = v26;
  uint64_t v183 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v28, a1, v25);
  uint64_t v181 = SFAirDropTransferMetaData.init(transfer:)((uint64_t)v28);
  uint64_t v29 = type metadata accessor for URL();
  uint64_t v30 = *(void *)(v29 - 8);
  int64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 56);
  v192 = v24;
  uint64_t v193 = v29;
  v31(v24, 1, 1);
  uint64_t v191 = a1;
  SFAirDropReceive.Transfer.state.getter();
  int64_t v32 = v17;
  int v33 = (*(uint64_t (**)(uint64_t *, uint64_t))(v15 + 88))(v17, v14);
  if (v33 == enum case for SFAirDropReceive.Transfer.State.waitingForAskResponse(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v34 = sub_10000A844(&qword_10096B2C0);
    (*(void (**)(uint64_t *, uint64_t))(*(void *)(v34 - 8) + 8))(v17, v34);
    unint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v189 = 0;
    uint64_t v190 = 0;
    uint64_t v187 = 1;
LABEL_3:
    v188 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  if (v33 == enum case for SFAirDropReceive.Transfer.State.waitingForShareContactPermissionResponse(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v17, v14);
    int64_t v37 = (char *)v17 + *(int *)(sub_10000A844(&qword_100972418) + 48);
    uint64_t v38 = sub_10000A844((uint64_t *)&unk_1009723F0);
    (*(void (**)(char *, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
    uint64_t v39 = type metadata accessor for SFAirDrop.ContactInfo();
LABEL_8:
    (*(void (**)(uint64_t *, uint64_t))(*(void *)(v39 - 8) + 8))(v17, v39);
    unint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v189 = 0;
    uint64_t v187 = 1;
    v188 = _swiftEmptyArrayStorage;
    uint64_t v190 = 1;
    goto LABEL_18;
  }
  if (v33 == enum case for SFAirDropReceive.Transfer.State.waitingForSensitivePreviewIntervention(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v39 = sub_10000A844(&qword_10096B2C0);
    goto LABEL_8;
  }
  if (v33 == enum case for SFAirDropReceive.Transfer.State.transferring(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v40 = sub_10000A844(&qword_100972410);
    id v41 = v31;
    uint64_t v42 = (char *)v17 + *(int *)(v40 + 48);
    swift_bridgeObjectRelease();
    uint64_t v43 = (char *)v17 + *(int *)(v40 + 80);
    uint64_t v44 = v189;
    int64_t v45 = v175;
    uint64_t v46 = v187;
    (*(void (**)(char *, uint64_t *, uint64_t))(v189 + 32))(v175, v32, v187);
    uint64_t v47 = (uint64_t)v176;
    SFAirDropReceive.ItemDestination.url.getter();
    uint64_t v48 = (uint64_t)v192;
    sub_10026114C((uint64_t)v192);
    uint64_t v190 = 1;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v41)(v47, 0, 1, v193);
    sub_1003D2B28(v47, v48);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
    uint64_t v49 = type metadata accessor for SFAirDrop.DeclineAction();
    (*(void (**)(char *, uint64_t))(*(void *)(v49 - 8) + 8))(v43, v49);
    uint64_t v50 = type metadata accessor for SFAirDrop.Progress();
    (*(void (**)(char *, uint64_t))(*(void *)(v50 - 8) + 8))(v42, v50);
    unint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v189 = 0;
    v188 = _swiftEmptyArrayStorage;
    uint64_t v51 = 2;
LABEL_17:
    uint64_t v187 = v51;
    goto LABEL_18;
  }
  if (v33 == enum case for SFAirDropReceive.Transfer.State.analyzingFullContent(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v52 = sub_10000A844(&qword_10096B2D8);
    v188 = *(void **)((char *)v17 + *(int *)(v52 + 48));
    uint64_t v53 = v31;
    int v54 = (char *)v17 + *(int *)(v52 + 80);
    uint64_t v55 = v189;
    uint64_t v56 = v175;
    uint64_t v57 = v17;
    uint64_t v58 = v187;
    (*(void (**)(char *, uint64_t *, uint64_t))(v189 + 32))(v175, v57, v187);
    uint64_t v59 = (uint64_t)v176;
    SFAirDropReceive.ItemDestination.url.getter();
    uint64_t v60 = (uint64_t)v192;
    sub_10026114C((uint64_t)v192);
    uint64_t v190 = 1;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v53)(v59, 0, 1, v193);
    sub_1003D2B28(v59, v60);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v58);
    uint64_t v61 = type metadata accessor for SFAirDrop.DeclineAction();
LABEL_16:
    (*(void (**)(char *, uint64_t))(*(void *)(v61 - 8) + 8))(v54, v61);
    unint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v189 = 0;
    uint64_t v51 = 5;
    goto LABEL_17;
  }
  if (v33 == enum case for SFAirDropReceive.Transfer.State.waitingForSensitiveContentResponse(_:)
    || v33 == enum case for SFAirDropReceive.Transfer.State.waitingForSensitiveContentIntervention(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v62 = sub_10000A844(&qword_10096B2D0);
    v188 = *(void **)((char *)v17 + *(int *)(v62 + 48));
    uint64_t v63 = v31;
    int v54 = (char *)v17 + *(int *)(v62 + 64);
    uint64_t v64 = v189;
    NSString v65 = v175;
    uint64_t v66 = v17;
    uint64_t v67 = v187;
    (*(void (**)(char *, uint64_t *, uint64_t))(v189 + 32))(v175, v66, v187);
    uint64_t v68 = (uint64_t)v176;
    SFAirDropReceive.ItemDestination.url.getter();
    uint64_t v69 = (uint64_t)v192;
    sub_10026114C((uint64_t)v192);
    uint64_t v190 = 1;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v63)(v68, 0, 1, v193);
    sub_1003D2B28(v68, v69);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v67);
    uint64_t v61 = sub_10000A844(&qword_10096B2C0);
    goto LABEL_16;
  }
  if (v33 == enum case for SFAirDropReceive.Transfer.State.importing(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v17, v14);
    v188 = *(void **)((char *)v17 + *(int *)(sub_10000A844(&qword_10096B2C8) + 48));
    uint64_t v89 = v189;
    uint64_t v90 = v175;
    uint64_t v91 = v17;
    uint64_t v92 = v187;
    (*(void (**)(char *, uint64_t *, uint64_t))(v189 + 32))(v175, v91, v187);
    uint64_t v93 = (uint64_t)v176;
    SFAirDropReceive.ItemDestination.url.getter();
    uint64_t v94 = v31;
    uint64_t v95 = (uint64_t)v192;
    sub_10026114C((uint64_t)v192);
    uint64_t v190 = 1;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v94)(v93, 0, 1, v193);
    sub_1003D2B28(v93, v95);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v92);
    unint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v189 = 0;
    uint64_t v51 = 6;
    goto LABEL_17;
  }
  if (v33 == enum case for SFAirDropReceive.Transfer.State.waitingForOpenResponse(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v96 = v31;
    uint64_t v97 = sub_10000A844((uint64_t *)&unk_100972400);
    swift_bridgeObjectRelease();
    v188 = *(void **)((char *)v17 + *(int *)(v97 + 64));
    char v98 = (char *)v17 + *(int *)(v97 + 80);
    uint64_t v99 = v189;
    Class v100 = v175;
    uint64_t v101 = v17;
    uint64_t v102 = v187;
    (*(void (**)(char *, uint64_t *, uint64_t))(v189 + 32))(v175, v101, v187);
    uint64_t v103 = (uint64_t)v176;
    SFAirDropReceive.ItemDestination.url.getter();
    uint64_t v104 = (uint64_t)v192;
    sub_10026114C((uint64_t)v192);
    uint64_t v190 = 1;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v96)(v103, 0, 1, v193);
    sub_1003D2B28(v103, v104);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v100, v102);
    uint64_t v105 = sub_10000A844(&qword_10096B2C0);
    (*(void (**)(char *, uint64_t))(*(void *)(v105 - 8) + 8))(v98, v105);
    unint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v189 = 0;
    uint64_t v51 = 7;
    goto LABEL_17;
  }
  if (v33 == enum case for SFAirDropReceive.Transfer.State.waitingForOpenDestinationResponse(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v106 = v31;
    uint64_t v107 = sub_10000A844((uint64_t *)&unk_100972400);
    swift_bridgeObjectRelease();
    v188 = *(void **)((char *)v17 + *(int *)(v107 + 64));
    (*(void (**)(char *, uint64_t *, uint64_t))(v189 + 32))(v12, v17, v187);
    uint64_t v108 = (uint64_t)v176;
    SFAirDropReceive.ItemDestination.url.getter();
    uint64_t v109 = (uint64_t)v192;
    sub_10026114C((uint64_t)v192);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v106)(v108, 0, 1, v193);
    sub_1003D2B28(v108, v109);
    NSString v110 = String._bridgeToObjectiveC()();
    id v111 = (id)SFLocalizedStringForKey();

    if (v111)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v35 = v112;
    }
    else
    {
      unint64_t v35 = 0;
    }
    uint64_t v127 = (char *)v32 + *(int *)(v107 + 80);
    (*(void (**)(char *, uint64_t))(v189 + 8))(v12, v187);
    uint64_t v128 = sub_10000A844(&qword_10096B2C0);
    (*(void (**)(char *, uint64_t))(*(void *)(v128 - 8) + 8))(v127, v128);
    uint64_t v36 = 0;
    uint64_t v189 = 0;
    uint64_t v190 = 1;
    uint64_t v187 = 7;
    goto LABEL_18;
  }
  if (v33 == enum case for SFAirDropReceive.Transfer.State.opening(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v113 = v31;
    uint64_t v114 = sub_10000A844((uint64_t *)&unk_10096B2B0);
    swift_bridgeObjectRelease();
    v188 = *(void **)((char *)v17 + *(int *)(v114 + 64));
    uint64_t v115 = v189;
    uint64_t v116 = v175;
    uint64_t v117 = v17;
    uint64_t v118 = v187;
    (*(void (**)(char *, uint64_t *, uint64_t))(v189 + 32))(v175, v117, v187);
    uint64_t v119 = (uint64_t)v176;
    SFAirDropReceive.ItemDestination.url.getter();
    uint64_t v120 = (uint64_t)v192;
    sub_10026114C((uint64_t)v192);
    uint64_t v190 = 1;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v113)(v119, 0, 1, v193);
    sub_1003D2B28(v119, v120);
    (*(void (**)(char *, uint64_t))(v115 + 8))(v116, v118);
LABEL_37:
    unint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v189 = 0;
    uint64_t v51 = 8;
    goto LABEL_17;
  }
  if (v33 == enum case for SFAirDropReceive.Transfer.State.waitingForShouldImportContactResponse(_:))
  {
    uint64_t v121 = (uint64_t)v192;
    sub_10026114C((uint64_t)v192);
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v122 = sub_10000A844((uint64_t *)&unk_100974560);
    uint64_t v123 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31;
    uint64_t v124 = (char *)v17 + *(int *)(v122 + 48);
    uint64_t v190 = 1;
    v123(v121, 1, 1, v193);
    v125 = &qword_10096B2C0;
LABEL_40:
    uint64_t v126 = sub_10000A844(v125);
    (*(void (**)(char *, uint64_t))(*(void *)(v126 - 8) + 8))(v124, v126);
LABEL_45:
    uint64_t v131 = type metadata accessor for SFAirDrop.ContactInfo();
    (*(void (**)(uint64_t *, uint64_t))(*(void *)(v131 - 8) + 8))(v17, v131);
LABEL_46:
    unint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v189 = 0;
    v188 = _swiftEmptyArrayStorage;
    uint64_t v51 = 8;
    goto LABEL_17;
  }
  uint64_t v129 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31;
  if (v33 == enum case for SFAirDropReceive.Transfer.State.importingReceivedContact(_:))
  {
    uint64_t v130 = (uint64_t)v192;
    sub_10026114C((uint64_t)v192);
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v190 = 1;
    v129(v130, 1, 1, v193);
    goto LABEL_45;
  }
  if (v33 == enum case for SFAirDropReceive.Transfer.State.waitingForContactShareBackResponse(_:))
  {
    uint64_t v132 = (uint64_t)v192;
    sub_10026114C((uint64_t)v192);
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v124 = (char *)v17 + *(int *)(sub_10000A844(&qword_1009723E8) + 48);
    uint64_t v190 = 1;
    v129(v132, 1, 1, v193);
    v125 = (uint64_t *)&unk_1009723F0;
    goto LABEL_40;
  }
  if (v33 == enum case for SFAirDropReceive.Transfer.State.sharingContactBack(_:))
  {
    uint64_t v133 = (uint64_t)v192;
    sub_10026114C((uint64_t)v192);
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v134 = (char *)v17 + *(int *)(sub_10000A844(&qword_1009723E0) + 48);
    uint64_t v190 = 1;
    v129(v133, 1, 1, v193);
    uint64_t v135 = type metadata accessor for SFAirDrop.ContactRequest();
    uint64_t v136 = *(void (**)(char *, uint64_t))(*(void *)(v135 - 8) + 8);
    v136(v134, v135);
    v136((char *)v17, v135);
    goto LABEL_46;
  }
  if (v33 == enum case for SFAirDropReceive.Transfer.State.completedSuccessfully(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v137 = sub_10000A844((uint64_t *)&unk_100974550);
    v138 = (char *)v17 + *(int *)(v137 + 48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v188 = *(void **)((char *)v17 + *(int *)(v137 + 96));
    swift_bridgeObjectRelease();
    uint64_t v139 = v189;
    uint64_t v140 = v175;
    uint64_t v141 = v187;
    (*(void (**)(char *, char *, uint64_t))(v189 + 32))(v175, v138, v187);
    uint64_t v142 = (uint64_t)v176;
    SFAirDropReceive.ItemDestination.url.getter();
    uint64_t v143 = (uint64_t)v192;
    sub_10026114C((uint64_t)v192);
    uint64_t v190 = 1;
    v129(v142, 0, 1, v193);
    sub_1003D2B28(v142, v143);
    (*(void (**)(char *, uint64_t))(v139 + 8))(v140, v141);
    uint64_t v144 = type metadata accessor for SFAirDropReceive.Transfer.Metrics();
    (*(void (**)(uint64_t *, uint64_t))(*(void *)(v144 - 8) + 8))(v32, v144);
    goto LABEL_37;
  }
  if (v33 == enum case for SFAirDropReceive.Transfer.State.transferFailed(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v17, v14);
    v145 = (char *)v17 + *(int *)(sub_10000A844(&qword_100970340) + 48);
    v146 = v188;
    v147 = v174;
    uint64_t v148 = v190;
    ((void (*)(char *, char *, uint64_t))v188[4])(v174, v145, v190);
    sub_1003D8C84(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    uint64_t v36 = swift_allocError();
    v149 = (void (*)(uint64_t, char *, uint64_t))v146[2];
    v149(v150, v147, v148);
    uint64_t v189 = SFAirDropReceive.Failure.legacyFailureReason.getter();
    v151 = v173;
    v149((uint64_t)v173, v147, v148);
    int v152 = ((uint64_t (*)(char *, uint64_t))v146[11])(v151, v148);
    if (v152 == enum case for SFAirDropReceive.Failure.unsupportedType(_:))
    {
      v153 = v188;
      v154 = v173;
      uint64_t v155 = v190;
      ((void (*)(char *, uint64_t))v188[12])(v173, v190);
      swift_bridgeObjectRelease();
      v156 = &v154[*(int *)(sub_10000A844((uint64_t *)&unk_1009723D0) + 48)];
      ((void (*)(char *, uint64_t))v153[1])(v174, v155);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v156, v193);
      v157 = "Unsupported type";
LABEL_56:
      unint64_t v35 = (unint64_t)(v157 - 32) | 0x8000000000000000;
LABEL_57:
      uint64_t v190 = 2;
      uint64_t v158 = 9;
LABEL_73:
      uint64_t v187 = v158;
LABEL_74:
      uint64_t v168 = type metadata accessor for SFAirDropReceive.Transfer.Metrics();
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v168 - 8) + 8))(v32, v168);
      v188 = _swiftEmptyArrayStorage;
      goto LABEL_18;
    }
    if (v152 == enum case for SFAirDropReceive.Failure.unexpected(_:))
    {
      v159 = v188;
      v160 = v173;
      ((void (*)(char *, uint64_t))v188[12])(v173, v190);
      uint64_t v161 = v171;
      v162 = v170;
      uint64_t v163 = v172;
      (*(void (**)(char *, char *, uint64_t))(v171 + 32))(v170, v160, v172);
      v196 = 0;
      unint64_t v197 = 0xE000000000000000;
      v164._countAndFlagsBits = 0x203A64656C696146;
      v164._object = (void *)0xE800000000000000;
      String.append(_:)(v164);
      uint64_t v194 = CodableError.localizedDescription.getter();
      uint64_t v195 = v165;
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      swift_bridgeObjectRelease();
      unint64_t v35 = v197;
      (*(void (**)(char *, uint64_t))(v161 + 8))(v162, v163);
      ((void (*)(char *, uint64_t))v159[1])(v174, v190);
      uint64_t v190 = 0;
      uint64_t v158 = 9;
      goto LABEL_73;
    }
    if (v152 == enum case for SFAirDropReceive.Failure.declined(_:)) {
      goto LABEL_68;
    }
    if (v152 == enum case for SFAirDropReceive.Failure.askDismissed(_:))
    {
      ((void (*)(char *, uint64_t))v188[1])(v174, v190);
      unint64_t v35 = 0xED00006465737369;
      uint64_t v167 = 3;
      goto LABEL_71;
    }
    if (v152 == enum case for SFAirDropReceive.Failure.senderCancelled(_:))
    {
      ((void (*)(char *, uint64_t))v188[1])(v174, v190);
      uint64_t v190 = 0;
      unint64_t v35 = 0xEF64656C65636E61;
      uint64_t v158 = 3;
      goto LABEL_73;
    }
    if (v152 == enum case for SFAirDropReceive.Failure.receiverCancelled(_:))
    {
LABEL_68:
      ((void (*)(char *, uint64_t))v188[1])(v174, v190);
      unint64_t v35 = 0xE800000000000000;
      uint64_t v167 = 2;
LABEL_71:
      uint64_t v190 = v167;
LABEL_72:
      uint64_t v158 = 8;
      goto LABEL_73;
    }
    if (v152 == enum case for SFAirDropReceive.Failure.mixedTypes(_:))
    {
      ((void (*)(char *, uint64_t))v188[1])(v174, v190);
      unint64_t v35 = 0xEB00000000736570;
      goto LABEL_57;
    }
    if (v152 == enum case for SFAirDropReceive.Failure.missingDownloadDirectory(_:))
    {
      ((void (*)(char *, uint64_t))v188[1])(v174, v190);
      uint64_t v190 = 0;
      uint64_t v187 = 9;
      unint64_t v35 = 0x80000001007BC3D0;
      goto LABEL_74;
    }
    if (v152 == enum case for SFAirDropReceive.Failure.missingOwnContact(_:))
    {
      ((void (*)(char *, uint64_t))v188[1])(v174, v190);
      uint64_t v190 = 0;
      unint64_t v35 = 0x80000001007BC3B0;
      uint64_t v158 = 9;
      goto LABEL_73;
    }
    if (v152 == enum case for SFAirDropReceive.Failure.streamError(_:))
    {
      ((void (*)(char *, uint64_t))v188[1])(v174, v190);
      uint64_t v190 = 0;
      unint64_t v35 = 0xEC000000726F7272;
      uint64_t v158 = 9;
      goto LABEL_73;
    }
    if (v152 == enum case for SFAirDropReceive.Failure.askNotHandled(_:))
    {
      ((void (*)(char *, uint64_t))v188[1])(v174, v190);
      unint64_t v35 = 0xEF64656C646E6168;
      goto LABEL_57;
    }
    if (v152 == enum case for SFAirDropReceive.Failure.incompleteTransfer(_:))
    {
      ((void (*)(char *, uint64_t))v188[1])(v174, v190);
      v157 = "Incomplete Transfer";
      goto LABEL_56;
    }
    if (v152 == enum case for SFAirDropReceive.Failure.badRequest(_:))
    {
      ((void (*)(char *, uint64_t))v188[1])(v174, v190);
      uint64_t v190 = 0;
      unint64_t v35 = 0xEB00000000747365;
      uint64_t v158 = 9;
      goto LABEL_73;
    }
    if (v152 == enum case for SFAirDropReceive.Failure.moveToAppFailed(_:))
    {
      ((void (*)(char *, uint64_t))v188[1])(v174, v190);
      uint64_t v190 = 0;
      v169 = "Move To App Failed, Content In Default";
LABEL_97:
      unint64_t v35 = (unint64_t)(v169 - 32) | 0x8000000000000000;
      goto LABEL_72;
    }
    if (v152 == enum case for SFAirDropReceive.Failure.insufficientStorage(_:))
    {
      ((void (*)(char *, uint64_t))v188[1])(v174, v190);
      uint64_t v190 = 0;
      v169 = "Insufficient Space";
      goto LABEL_97;
    }
LABEL_99:
    swift_errorRelease();
    uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
    __break(1u);
    return result;
  }
  if (v33 == enum case for SFAirDropReceive.Transfer.State.legacyTransferState(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v17, v14);
    unint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v189 = 0;
    uint64_t v190 = 0;
    uint64_t v187 = *v17;
    goto LABEL_3;
  }
  uint64_t v187 = 1;
  v188 = _swiftEmptyArrayStorage;
  if (v33 == enum case for SFAirDropReceive.Transfer.State.created(_:)
    || v33 == enum case for SFAirDropReceive.Transfer.State.autoAccepted(_:))
  {
    unint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v189 = 0;
    uint64_t v190 = 0;
    goto LABEL_18;
  }
  unint64_t v35 = 0;
  uint64_t v36 = 0;
  uint64_t v189 = 0;
  uint64_t v190 = 0;
  if (v33 != enum case for SFAirDropReceive.Transfer.State.analyizingPreview(_:))
  {
    if (v33 == enum case for SFAirDropReceive.Transfer.State.waitingForContactExchangeRequest(_:))
    {
      uint64_t v166 = (uint64_t)v192;
      sub_10026114C((uint64_t)v192);
      uint64_t v190 = 1;
      v129(v166, 1, 1, v193);
      goto LABEL_46;
    }
    _diagnoseUnexpectedEnumCase<A>(type:)();
    __break(1u);
    goto LABEL_99;
  }
LABEL_18:
  uint64_t v70 = v178;
  SFAirDropReceive.Transfer.id.getter();
  SFAirDrop.TransferIdentifier.stringValue.getter();
  (*(void (**)(char *, uint64_t))(v179 + 8))(v70, v180);
  NSString v71 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (v36)
  {
    swift_errorRetain();
    char v72 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
  }
  else
  {
    char v72 = 0;
  }
  uint64_t v73 = v177;
  sub_1003AFF3C((uint64_t)v192, v177);
  uint64_t v74 = v193;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v73, 1, v193) == 1)
  {
    char v76 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v75);
    char v76 = v77;
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v73, v74);
  }
  NSString v78 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (v35)
  {
    NSString v79 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v79 = 0;
  }
  id v80 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  char v81 = v184;
  uint64_t v82 = v191;
  SFAirDropReceive.Transfer.askRequest.getter();
  uint64_t v83 = SFAirDropReceive.AskRequest.urlItems.getter();
  (*(void (**)(char *, uint64_t))(v185 + 8))(v81, v186);
  Class v84 = sub_100254AAC(v83);
  swift_bridgeObjectRelease();
  v196 = v188;
  sub_1003D4DC4((uint64_t)v84, (uint64_t (*)(void))sub_100253318, (uint64_t (*)(void))&type metadata accessor for URL);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v86 = (void *)v181;
  id v87 = [v80 initWithIdentifier:v71 metaData:v181 userResponse:v190 transferState:v187 failureReason:v189 error:v72 customDestinationURL:v76 contentsTitle:v78 contentsDescription:v79 selectedAction:0 possibleActions:0 cancelAction:0 completedURLs:isa];

  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v82, v183);
  sub_10026114C((uint64_t)v192);
  return (uint64_t)v87;
}

uint64_t sub_1003D7F28(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1003D8CCC(&qword_1009724A8, &qword_1009724A0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10000A844(&qword_1009724A0);
          unint64_t v12 = sub_1003D8804(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10000B740(0, &qword_10096D4E8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003D8148(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_1003D8CCC(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = sub_10000A844(a6);
          uint64_t v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          uint64_t v24 = *v23;
          swift_unknownObjectRetain();
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    sub_10000A844(a4);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003D8368(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1003D8CCC((unint64_t *)&unk_100972490, &qword_100972480);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10000A844(&qword_100972480);
          unint64_t v12 = sub_1003D88D4(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10000B740(0, &qword_100972488);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003D8588(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1003D8CCC(&qword_100972478, &qword_100972470);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10000A844(&qword_100972470);
          unint64_t v12 = sub_1003D893C(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    _s8LocalLTKCMa();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t (*sub_1003D8798(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1003D89EC(v6, a2, a3);
  return sub_1003D8800;
}

uint64_t (*sub_1003D8804(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1003D8A74(v6, a2, a3);
  return sub_1003D8800;
}

uint64_t (*sub_1003D886C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1003D8AF4(v6, a2, a3);
  return sub_1003D8800;
}

uint64_t (*sub_1003D88D4(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1003D8B74(v6, a2, a3);
  return sub_1003D8800;
}

uint64_t (*sub_1003D893C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1003D8BFC(v6, a2, a3);
  return sub_1003D8800;
}

void sub_1003D89A4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_1003D89EC(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_1003D8A6C;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003D8A6C()
{
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1003D8A74(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1003D8D20;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1003D8AF4(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_1003D8D1C;
  }
  __break(1u);
  return result;
}

void (*sub_1003D8B74(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1003D8BF4;
  }
  __break(1u);
  return result;
}

void sub_1003D8BF4(id *a1)
{
}

uint64_t (*sub_1003D8BFC(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_1003D8C7C;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003D8C7C()
{
  return swift_release();
}

uint64_t sub_1003D8C84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003D8CCC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100247840(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003D8D24@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1003D90BC(a1, a2, type metadata accessor for SDAirDropDiscoveredEndpoint, type metadata accessor for SDAirDropDiscoveredEndpoint, type metadata accessor for SDAirDropDiscoveredEndpoint, type metadata accessor for SDAirDropDiscoveredEndpoint, a3);
}

void sub_1003D8D8C(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_1003DC47C();
    sub_1003DC4BC((unint64_t *)&qword_10096B4D0, (void (*)(uint64_t))sub_1003DC47C);
    Set.Iterator.init(_cocoa:)();
    uint64_t v5 = v24;
    uint64_t v23 = v25;
    uint64_t v7 = v26;
    int64_t v8 = v27;
    unint64_t v9 = v28;
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v23 = a3 + 56;
    uint64_t v11 = ~v10;
    uint64_t v12 = -v10;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v9 = v13 & *(void *)(a3 + 56);
    swift_bridgeObjectRetain();
    uint64_t v7 = v11;
    int64_t v8 = 0;
  }
  int64_t v22 = (unint64_t)(v7 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (!__CocoaSet.Iterator.next()()) {
    goto LABEL_36;
  }
  sub_1003DC47C();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v14 = v29;
  swift_unknownObjectRelease();
  int64_t v15 = v8;
  uint64_t v16 = v9;
  if (!v14) {
    goto LABEL_36;
  }
  while (1)
  {
    id v29 = v14;
    char v20 = a1(&v29);
    if (v4)
    {

      goto LABEL_36;
    }
    if (v20) {
      goto LABEL_36;
    }

    int64_t v8 = v15;
    unint64_t v9 = v16;
    if (v5 < 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (!v9) {
      break;
    }
    uint64_t v16 = (v9 - 1) & v9;
    unint64_t v17 = __clz(__rbit64(v9)) | (v8 << 6);
    int64_t v15 = v8;
LABEL_24:
    id v14 = *(id *)(*(void *)(v5 + 48) + 8 * v17);
    if (!v14) {
      goto LABEL_36;
    }
  }
  int64_t v15 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    return;
  }
  if (v15 >= v22) {
    goto LABEL_36;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v15);
  if (v18)
  {
LABEL_23:
    uint64_t v16 = (v18 - 1) & v18;
    unint64_t v17 = __clz(__rbit64(v18)) + (v15 << 6);
    goto LABEL_24;
  }
  int64_t v19 = v8 + 2;
  if (v8 + 2 >= v22) {
    goto LABEL_36;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v19);
  if (v18) {
    goto LABEL_22;
  }
  int64_t v19 = v8 + 3;
  if (v8 + 3 >= v22) {
    goto LABEL_36;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v19);
  if (v18) {
    goto LABEL_22;
  }
  int64_t v19 = v8 + 4;
  if (v8 + 4 >= v22) {
    goto LABEL_36;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v19);
  if (v18)
  {
LABEL_22:
    int64_t v15 = v19;
    goto LABEL_23;
  }
  int64_t v15 = v8 + 5;
  if (v8 + 5 >= v22) {
    goto LABEL_36;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v15);
  if (v18) {
    goto LABEL_23;
  }
  int64_t v21 = v8 + 6;
  while (v22 != v21)
  {
    unint64_t v18 = *(void *)(v23 + 8 * v21++);
    if (v18)
    {
      int64_t v15 = v21 - 1;
      goto LABEL_23;
    }
  }
LABEL_36:
  sub_10024D330();
}

uint64_t sub_1003D90BC@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(void)@<X3>, uint64_t (*a4)(void)@<X4>, uint64_t (*a5)(void)@<X5>, uint64_t (*a6)(void)@<X6>, uint64_t a7@<X8>)
{
  unint64_t v35 = a6;
  uint64_t v36 = a5;
  uint64_t v32 = a7;
  uint64_t v31 = a3(0);
  uint64_t v37 = *(void *)(v31 - 8);
  uint64_t v11 = __chkstk_darwin(v31);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  int64_t v15 = (char *)&v31 - v14;
  uint64_t v16 = *(void *)(a2 + 56);
  uint64_t v33 = a2 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v34 = (unint64_t)(v17 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v21 = 0;
  if (!v19) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (unint64_t i = v22 | (v21 << 6); ; unint64_t i = __clz(__rbit64(v25)) + (v21 << 6))
  {
    sub_1003DC3AC(*(void *)(a2 + 48) + *(void *)(v37 + 72) * i, (uint64_t)v15, a4);
    sub_1003DC414((uint64_t)v15, (uint64_t)v13, v36);
    char v27 = a1(v13);
    if (v7)
    {
      sub_1003DC32C((uint64_t)v13, v35);
      return swift_release();
    }
    if (v27)
    {
      swift_release();
      uint64_t v28 = v32;
      sub_1003DC414((uint64_t)v13, v32, v36);
      uint64_t v29 = 0;
      uint64_t v30 = v31;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v28, v29, 1, v30);
    }
    uint64_t result = sub_1003DC32C((uint64_t)v13, v35);
    if (v19) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v21++, 1)) {
      break;
    }
    if (v21 >= v34) {
      goto LABEL_28;
    }
    unint64_t v25 = *(void *)(v33 + 8 * v21);
    if (!v25)
    {
      int64_t v26 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_28;
      }
      unint64_t v25 = *(void *)(v33 + 8 * v26);
      if (v25) {
        goto LABEL_16;
      }
      int64_t v26 = v21 + 2;
      if (v21 + 2 >= v34) {
        goto LABEL_28;
      }
      unint64_t v25 = *(void *)(v33 + 8 * v26);
      if (v25) {
        goto LABEL_16;
      }
      int64_t v26 = v21 + 3;
      if (v21 + 3 >= v34) {
        goto LABEL_28;
      }
      unint64_t v25 = *(void *)(v33 + 8 * v26);
      if (v25)
      {
LABEL_16:
        int64_t v21 = v26;
        goto LABEL_17;
      }
      int64_t v26 = v21 + 4;
      if (v21 + 4 < v34)
      {
        unint64_t v25 = *(void *)(v33 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v21 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_31;
            }
            if (v21 >= v34) {
              goto LABEL_28;
            }
            unint64_t v25 = *(void *)(v33 + 8 * v21);
            ++v26;
            if (v25) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      uint64_t v30 = v31;
      uint64_t v28 = v32;
      swift_release();
      uint64_t v29 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v28, v29, 1, v30);
    }
LABEL_17:
    unint64_t v19 = (v25 - 1) & v25;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1003D93C0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_1009724B0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_1009724B0);
  if (qword_100969C68 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994588);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1003D9488(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for NWEndpoint();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (void *)((char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints) = &_swiftEmptySetSingleton;
  *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_bonjourEndpoints) = &_swiftEmptySetSingleton;
  *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_applicationServiceEndpoints) = &_swiftEmptySetSingleton;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  swift_bridgeObjectRetain();
  sub_10065ECDC((uint64_t)v12, a1, a2, (uint64_t)v16);
  sub_10000A7E8((uint64_t)v12, &qword_100974EA0);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_connectableUUID, v16, v13);
  uint64_t v33 = v16;
  *unint64_t v9 = nw_endpoint_create_application_service();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for NWEndpoint.opaque(_:), v6);
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v7 + 32))(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_displayEndpoint, v9, v6);
  uint64_t v17 = (uint64_t *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_contactID);
  uint64_t *v17 = a1;
  v17[1] = a2;
  swift_bridgeObjectRetain();
  sub_10054D6A8(8);
  swift_bridgeObjectRelease();
  uint64_t v18 = static String._fromSubstring(_:)();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  int64_t v21 = (uint64_t *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_debugIdentifier);
  *int64_t v21 = v18;
  v21[1] = v20;
  if (qword_100969D88 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_10000B47C(v22, (uint64_t)qword_1009724B0);
  swift_retain();
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v23, v24))
  {
    unint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)unint64_t v25 = 136315138;
    v32[1] = v25 + 4;
    uint64_t v26 = v14;
    uint64_t v27 = v13;
    uint64_t v29 = *(void *)(v3 + 16);
    unint64_t v28 = *(void *)(v3 + 24);
    swift_bridgeObjectRetain();
    uint64_t v30 = v29;
    uint64_t v13 = v27;
    uint64_t v14 = v26;
    uint64_t v34 = sub_100254634(v30, v28, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Creating Person %s", v25, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v33, v13);
  return v3;
}

uint64_t sub_1003D9950()
{
  _StringGuts.grow(_:)(48);
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_debugIdentifier);
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_debugIdentifier + 8);
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 0x6F6A6E6F42202D20;
  v4._object = (void *)0xEC000000203A7275;
  String.append(_:)(v4);
  swift_beginAccess();
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._object = (void *)0x80000001007BC510;
  v6._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v6);
  swift_beginAccess();
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 41;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  return 0x286E6F73726550;
}

uint64_t sub_1003D9AF4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SFAirDrop.DeviceRelationship();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Swift::String v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SFAirDrop.TXTRecord();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000A844(&qword_10096D8B8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1003D9950();
  unint64_t v14 = v13;
  uint64_t result = NWEndpoint.nw.getter();
  uint64_t v44 = result;
  if (result)
  {
    uint64_t v43 = v6;
    uint64_t v16 = (uint64_t *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints);
    swift_beginAccess();
    sub_1002E5BCC(*v16, (uint64_t)v12);
    uint64_t v17 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v12, 1, v17) == 1)
    {
      sub_10000A7E8((uint64_t)v12, &qword_10096D8B8);
    }
    else
    {
      sub_100316F00();
      uint64_t v19 = v18;
      sub_1003DC32C((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
      if (v19)
      {
        String.utf8CString.getter();
        swift_bridgeObjectRelease();
        nw_endpoint_set_contact_id();
        swift_release();
      }
    }
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for SFAirDrop.DeviceRelationship.contact(_:), v2);
    SFAirDrop.TXTRecord.init(deviceRelationship:)();
    SFAirDrop.TXTRecord.addToEndpoint(_:)();
    swift_bridgeObjectRetain();
    sub_10054D6A8(8);
    swift_bridgeObjectRelease();
    uint64_t v20 = static String._fromSubstring(_:)();
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    uint64_t v47 = v20;
    unint64_t v48 = v22;
    v23._countAndFlagsBits = 58;
    v23._object = (void *)0xE100000000000000;
    String.append(_:)(v23);
    uint64_t v49 = v47;
    unint64_t v50 = v48;
    uint64_t v24 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_applicationServiceEndpoints;
    swift_beginAccess();
    if (*(void *)(*(void *)v24 + 16))
    {
      v25._countAndFlagsBits = 97;
      v25._object = (void *)0xE100000000000000;
      String.append(_:)(v25);
    }
    uint64_t v26 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_bonjourEndpoints;
    swift_beginAccess();
    if (*(void *)(*(void *)v26 + 16))
    {
      v27._countAndFlagsBits = 98;
      v27._object = (void *)0xE100000000000000;
      String.append(_:)(v27);
    }
    uint64_t v42 = v7;
    v28._countAndFlagsBits = 99;
    v28._object = (void *)0xE100000000000000;
    String.append(_:)(v28);
    unint64_t v29 = v50;
    uint64_t v30 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_debugIdentifier);
    *uint64_t v30 = v49;
    v30[1] = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_1003D9950();
    unint64_t v33 = v32;
    if (qword_100969D88 != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    sub_10000B47C(v34, (uint64_t)qword_1009724B0);
    uint64_t v36 = v49;
    unint64_t v35 = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 136315651;
      uint64_t v40 = v9;
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_100254634(v36, v35, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v39 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_100254634(v41, v14, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v39 + 22) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_100254634(v31, v33, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "DiscoveredPerson Updated %s [%{private}s] -> [%{private}s]", (uint8_t *)v39, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_unknownObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v40, v43);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      swift_unknownObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v9, v43);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003DA150()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_connectableUUID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_displayEndpoint;
  uint64_t v4 = type metadata accessor for NWEndpoint();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1003DA258()
{
  sub_1003DA150();

  return swift_deallocClassInstance();
}

uint64_t sub_1003DA2B0()
{
  return type metadata accessor for SDAirDropDiscoveredPerson();
}

uint64_t type metadata accessor for SDAirDropDiscoveredPerson()
{
  uint64_t result = qword_100972510;
  if (!qword_100972510) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003DA304()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for NWEndpoint();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1003DA3F0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 24);
  *a1 = *(void *)(*(void *)v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1003DA400()
{
  return sub_1003D9950();
}

uint64_t sub_1003DA424@<X0>(uint64_t a1@<X8>)
{
  return sub_1003DC000(&OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_displayEndpoint, (uint64_t (*)(void))&type metadata accessor for NWEndpoint, a1);
}

unint64_t sub_1003DA444()
{
  uint64_t v39 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v39);
  uint64_t v38 = (uint64_t)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v37 = (uint64_t)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (id *)((char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v37 - v10;
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v37 - v12;
  unint64_t v14 = (uint64_t *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints);
  swift_beginAccess();
  uint64_t v15 = *v14;
  uint64_t v16 = v15 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(v15 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(v15 + 56);
  int64_t v41 = (unint64_t)(v17 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v20 = 0;
  LOBYTE(v21) = 0;
  uint64_t v40 = v15 + 56;
  while (1)
  {
    if (v19)
    {
      unint64_t v22 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_27;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v24 >= v41) {
      goto LABEL_35;
    }
    unint64_t v25 = *(void *)(v16 + 8 * v24);
    ++v20;
    if (!v25)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_35;
      }
      unint64_t v25 = *(void *)(v16 + 8 * v20);
      if (!v25)
      {
        int64_t v20 = v24 + 2;
        if (v24 + 2 >= v41) {
          goto LABEL_35;
        }
        unint64_t v25 = *(void *)(v16 + 8 * v20);
        if (!v25)
        {
          int64_t v20 = v24 + 3;
          if (v24 + 3 >= v41) {
            goto LABEL_35;
          }
          unint64_t v25 = *(void *)(v16 + 8 * v20);
          if (!v25)
          {
            int64_t v20 = v24 + 4;
            if (v24 + 4 >= v41) {
              goto LABEL_35;
            }
            unint64_t v25 = *(void *)(v16 + 8 * v20);
            if (!v25) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v20 << 6);
LABEL_27:
    sub_1003DC3AC(*(void *)(v15 + 48) + *(void *)(v5 + 72) * v23, (uint64_t)v13, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1003DC414((uint64_t)v13, (uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (v21)
    {
LABEL_5:
      LOBYTE(v21) = 1;
    }
    else
    {
      sub_1003DC3AC((uint64_t)v11, (uint64_t)v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v28 = (uint64_t)v8;
          unint64_t v29 = v13;
          uint64_t v30 = v8;
          uint64_t v31 = v15;
          uint64_t v32 = v5;
          uint64_t v33 = v4;
          uint64_t v34 = v38;
          sub_1003DC414(v28, v38, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
          LOBYTE(v21) = *(unsigned char *)(v34 + *(int *)(v39 + 60));
          uint64_t v35 = v34;
          uint64_t v4 = v33;
          uint64_t v5 = v32;
          uint64_t v15 = v31;
          uint64_t v8 = v30;
          unint64_t v13 = v29;
          uint64_t v16 = v40;
          sub_1003DC32C(v35, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
          break;
        case 2u:
          sub_1003DC32C((uint64_t)v8, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
          goto LABEL_5;
        case 3u:

          goto LABEL_5;
        default:
          uint64_t v27 = v37;
          sub_1003DC414((uint64_t)v8, v37, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          if ((sub_100314A58() & 0x4000000000) != 0) {
            LOBYTE(v21) = 1;
          }
          else {
            unint64_t v21 = ((unint64_t)sub_100314A58() >> 39) & 1;
          }
          sub_1003DC32C(v27, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          uint64_t v16 = v40;
          break;
      }
    }
    sub_1003DC32C((uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  int64_t v26 = v24 + 5;
  if (v26 < v41)
  {
    unint64_t v25 = *(void *)(v16 + 8 * v26);
    if (!v25)
    {
      while (1)
      {
        int64_t v20 = v26 + 1;
        if (__OFADD__(v26, 1)) {
          break;
        }
        if (v20 >= v41) {
          goto LABEL_35;
        }
        unint64_t v25 = *(void *)(v16 + 8 * v20);
        ++v26;
        if (v25) {
          goto LABEL_26;
        }
      }
LABEL_37:
      __break(1u);
      JUMPOUT(0x1003DA91CLL);
    }
    int64_t v20 = v26;
    goto LABEL_26;
  }
LABEL_35:
  swift_release();
  swift_bridgeObjectRelease();
  return v21 & 1;
}

uint64_t sub_1003DA92C(uint64_t a1)
{
  v2[20] = a1;
  v2[21] = v1;
  type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UUID();
  v2[25] = v3;
  v2[26] = *(void *)(v3 - 8);
  v2[27] = swift_task_alloc();
  sub_10000A844(&qword_100972600);
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  v2[30] = v4;
  v2[31] = *(void *)(v4 - 8);
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  v2[36] = swift_task_alloc();
  v2[37] = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v2[38] = swift_task_alloc();
  v2[39] = swift_task_alloc();
  v2[40] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_1003DAB88, v5, 0);
}

uint64_t sub_1003DAB88()
{
  NSString v65 = v0;
  sub_1003DC3AC(v0[20], v0[40], type metadata accessor for SDAirDropDiscoveredEndpoint);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1003DC414(v0[40], v0[24], type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      if (qword_100969D88 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      sub_10000B47C(v8, (uint64_t)qword_1009724B0);
      swift_retain();
      uint64_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.debug.getter();
      BOOL v11 = os_log_type_enabled(v9, v10);
      uint64_t v12 = v0[21];
      if (v11)
      {
        unint64_t v13 = (uint8_t *)swift_slowAlloc();
        v64[0] = swift_slowAlloc();
        *(_DWORD *)unint64_t v13 = 136315138;
        uint64_t v15 = *(void *)(v12 + 16);
        unint64_t v14 = *(void *)(v12 + 24);
        swift_bridgeObjectRetain();
        v0[18] = sub_100254634(v15, v14, v64);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "Person: %s adding bonjour endpoint", v13, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release();
      }

      uint64_t v42 = v0[23];
      uint64_t v41 = v0[24];
      uint64_t v43 = (void *)v0[22];
      sub_1003DC3AC(v41, (uint64_t)v43, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      swift_beginAccess();
      sub_100597940(v42, v43);
      swift_endAccess();
      uint64_t v44 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
      uint64_t v45 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
      uint64_t v46 = v42;
      goto LABEL_32;
    case 2u:
      if (qword_100969D88 != -1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      sub_10000B47C(v16, (uint64_t)qword_1009724B0);
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v17, v18))
      {
        unint64_t v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v19 = 0;
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "NearField endpoints not applicable for SDAirDropDiscoveredPerson", v19, 2u);
        swift_slowDealloc();
      }
      uint64_t v20 = v0[40];

      unint64_t v21 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint;
      uint64_t v22 = v20;
      goto LABEL_33;
    case 3u:

      if (qword_100969D88 != -1) {
        swift_once();
      }
      uint64_t v23 = type metadata accessor for Logger();
      sub_10000B47C(v23, (uint64_t)qword_1009724B0);
      int64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v24, v25))
      {
        int64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int64_t v26 = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Classroom endpoints not applicable for SDAirDropDiscoveredPerson", v26, 2u);
        swift_slowDealloc();
      }

      goto LABEL_34;
    default:
      uint64_t v1 = v0[36];
      uint64_t v2 = v0[30];
      uint64_t v3 = v0[31];
      uint64_t v4 = v0[29];
      uint64_t v5 = v0[21];
      sub_1003DC414(v0[40], v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      uint64_t v6 = (uint64_t *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_applicationServiceEndpoints);
      swift_beginAccess();
      uint64_t v7 = *v6;
      *(void *)(swift_task_alloc() + 16) = v1;
      swift_bridgeObjectRetain();
      sub_1003D90BC((uint64_t (*)(char *))sub_1003DC38C, v7, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint, v4);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
      {
        sub_10000A7E8(v0[29], &qword_100972600);
      }
      else
      {
        sub_1003DC414(v0[29], v0[35], type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        if (qword_100969D88 != -1) {
          swift_once();
        }
        uint64_t v27 = v0[34];
        uint64_t v28 = v0[35];
        uint64_t v29 = type metadata accessor for Logger();
        sub_10000B47C(v29, (uint64_t)qword_1009724B0);
        sub_1003DC3AC(v28, v27, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        uint64_t v30 = Logger.logObject.getter();
        os_log_type_t v31 = static os_log_type_t.default.getter();
        BOOL v32 = os_log_type_enabled(v30, v31);
        uint64_t v33 = v0[34];
        if (v32)
        {
          uint64_t v35 = v0[26];
          uint64_t v34 = v0[27];
          uint64_t v36 = v0[25];
          os_log_type_t type = v31;
          uint64_t v37 = (uint8_t *)swift_slowAlloc();
          v64[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v37 = 136315138;
          sub_10031430C();
          sub_1003DC4BC((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter();
          unint64_t v40 = v39;
          (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
          v0[19] = sub_100254634(v38, v40, v64);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_1003DC32C(v33, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
          _os_log_impl((void *)&_mh_execute_header, v30, type, "Removing duplicate/stale endpoint %s", v37, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_1003DC32C(v0[34], type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        }

        uint64_t v47 = v0[35];
        uint64_t v48 = v0[28];
        swift_beginAccess();
        sub_1005A26C8(v47, v48);
        swift_endAccess();
        sub_10000A7E8(v48, &qword_100972600);
        sub_1003DC32C(v47, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      }
      if (qword_100969D88 != -1) {
        swift_once();
      }
      uint64_t v49 = type metadata accessor for Logger();
      sub_10000B47C(v49, (uint64_t)qword_1009724B0);
      swift_retain();
      unint64_t v50 = Logger.logObject.getter();
      os_log_type_t v51 = static os_log_type_t.debug.getter();
      BOOL v52 = os_log_type_enabled(v50, v51);
      uint64_t v53 = v0[21];
      if (v52)
      {
        int v54 = (uint8_t *)swift_slowAlloc();
        v64[0] = swift_slowAlloc();
        *(_DWORD *)int v54 = 136315138;
        uint64_t v55 = *(void *)(v53 + 16);
        unint64_t v56 = *(void *)(v53 + 24);
        swift_bridgeObjectRetain();
        v0[17] = sub_100254634(v55, v56, v64);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v50, v51, "Person: %s adding application service endpoint", v54, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release();
      }

      uint64_t v41 = v0[36];
      uint64_t v57 = v0[32];
      uint64_t v58 = v0[33];
      sub_1003DC3AC(v41, v57, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      swift_beginAccess();
      sub_100597BC4(v58, v57);
      swift_endAccess();
      uint64_t v44 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
      uint64_t v45 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
      uint64_t v46 = v58;
LABEL_32:
      sub_1003DC32C(v46, v44);
      uint64_t v22 = v41;
      unint64_t v21 = v45;
LABEL_33:
      sub_1003DC32C(v22, v21);
LABEL_34:
      uint64_t v59 = v0[39];
      uint64_t v60 = v0[38];
      sub_1003DC3AC(v0[20], v60, type metadata accessor for SDAirDropDiscoveredEndpoint);
      swift_beginAccess();
      sub_100595DA4(v59, v60);
      swift_endAccess();
      sub_1003DC32C(v59, type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_1003D9AF4();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v61 = (uint64_t (*)(void))v0[1];
      return v61();
  }
}

uint64_t sub_1003DB724()
{
  uint64_t result = NWEndpoint.nw.getter();
  if (result)
  {
    uint64_t device_id = nw_endpoint_get_device_id();
    swift_unknownObjectRelease();
    if (device_id)
    {
      uint64_t v2 = String.init(cString:)();
      uint64_t device_id = v3;
    }
    else
    {
      uint64_t v2 = 0;
    }
    uint64_t result = NWEndpoint.nw.getter();
    if (result)
    {
      uint64_t v4 = nw_endpoint_get_device_id();
      swift_unknownObjectRelease();
      if (v4)
      {
        uint64_t v5 = String.init(cString:)();
        if (device_id)
        {
          if (v6)
          {
            if (v2 == v5 && device_id == v6)
            {
              swift_bridgeObjectRelease();
              char v7 = 1;
            }
            else
            {
              char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
            }
            goto LABEL_18;
          }
          goto LABEL_13;
        }
        if (v6)
        {
          char v7 = 0;
          goto LABEL_18;
        }
      }
      else if (device_id)
      {
LABEL_13:
        char v7 = 0;
LABEL_18:
        swift_bridgeObjectRelease();
        return v7 & 1;
      }
      char v7 = 1;
      return v7 & 1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003DB84C(uint64_t a1)
{
  v2[11] = a1;
  v2[12] = v1;
  sub_10000A844(&qword_10096D8B8);
  v2[13] = swift_task_alloc();
  sub_10000A844(&qword_1009725F8);
  v2[14] = swift_task_alloc();
  type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  v2[15] = swift_task_alloc();
  sub_10000A844(&qword_100972600);
  v2[16] = swift_task_alloc();
  type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  v2[17] = swift_task_alloc();
  v2[18] = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v2[19] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v3 = static AirDropActor.shared;
  return _swift_task_switch(sub_1003DBA00, v3, 0);
}

uint64_t sub_1003DBA00()
{
  sub_1003DC3AC(v0[11], v0[19], type metadata accessor for SDAirDropDiscoveredEndpoint);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1003DC414(v0[19], v0[15], type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      if (qword_100969D88 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      sub_10000B47C(v8, (uint64_t)qword_1009724B0);
      uint64_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v9, v10))
      {
        BOOL v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)BOOL v11 = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "Person: Removing bonjour endpoint", v11, 2u);
        swift_slowDealloc();
      }
      uint64_t v13 = v0[14];
      uint64_t v12 = (void *)v0[15];

      swift_beginAccess();
      sub_1005A2C60(v12, v13);
      swift_endAccess();
      sub_10000A7E8(v13, &qword_1009725F8);
      unint64_t v14 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
      uint64_t v15 = (uint64_t)v12;
      goto LABEL_18;
    case 2u:
      if (qword_100969D88 != -1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      sub_10000B47C(v16, (uint64_t)qword_1009724B0);
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v17, v18))
      {
        unint64_t v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v19 = 0;
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "NearField endpoints not applicable for SDAirDropDiscoveredPerson", v19, 2u);
        swift_slowDealloc();
      }
      uint64_t v5 = v0[19];

      char v7 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint;
      goto LABEL_17;
    case 3u:

      if (qword_100969D88 != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      sub_10000B47C(v20, (uint64_t)qword_1009724B0);
      unint64_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "Classroom endpoints not applicable for SDAirDropDiscoveredPerson", v23, 2u);
        swift_slowDealloc();
      }

      goto LABEL_24;
    default:
      sub_1003DC414(v0[19], v0[17], type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      if (qword_100969D88 != -1) {
        swift_once();
      }
      uint64_t v1 = type metadata accessor for Logger();
      sub_10000B47C(v1, (uint64_t)qword_1009724B0);
      uint64_t v2 = Logger.logObject.getter();
      os_log_type_t v3 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v2, v3))
      {
        uint64_t v4 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v4 = 0;
        _os_log_impl((void *)&_mh_execute_header, v2, v3, "Person: Removing application service endpoint", v4, 2u);
        swift_slowDealloc();
      }
      uint64_t v6 = v0[16];
      uint64_t v5 = v0[17];

      swift_beginAccess();
      sub_1005A26C8(v5, v6);
      swift_endAccess();
      sub_10000A7E8(v6, &qword_100972600);
      char v7 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
LABEL_17:
      unint64_t v14 = v7;
      uint64_t v15 = v5;
LABEL_18:
      sub_1003DC32C(v15, v14);
LABEL_24:
      uint64_t v24 = v0[13];
      uint64_t v25 = v0[11];
      swift_beginAccess();
      sub_1005A29BC(v25, v24);
      swift_endAccess();
      sub_10000A7E8(v24, &qword_10096D8B8);
      sub_1003D9AF4();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      int64_t v26 = (uint64_t (*)(void))v0[1];
      return v26();
  }
}

uint64_t sub_1003DBF84()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1003DBFB8()
{
  return sub_1003DA444() & 1;
}

uint64_t sub_1003DBFE0@<X0>(uint64_t a1@<X8>)
{
  return sub_1003DC000(&OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_connectableUUID, (uint64_t (*)(void))&type metadata accessor for UUID, a1);
}

uint64_t sub_1003DC000@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5 = *v3 + *a1;
  uint64_t v6 = a2(0);
  char v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);

  return v7(a3, v5, v6);
}

uint64_t sub_1003DC078()
{
  *(void *)(v1 + 40) = v0;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v2 = static AirDropActor.shared;
  return _swift_task_switch(sub_1003DC114, v2, 0);
}

uint64_t sub_1003DC114()
{
  swift_beginAccess();
  os_log_type_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v1 = swift_bridgeObjectRetain();
  return v3(v1);
}

uint64_t sub_1003DC1A4(uint64_t a1)
{
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_10000A6F4;
  return sub_1003DA92C(a1);
}

uint64_t sub_1003DC23C(uint64_t a1)
{
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_10000A6F0;
  return sub_1003DB84C(a1);
}

uint64_t sub_1003DC2D4(uint64_t a1)
{
  uint64_t result = sub_1003DC4BC(&qword_1009725E8, (void (*)(uint64_t))type metadata accessor for SDAirDropDiscoveredPerson);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003DC32C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1003DC38C()
{
  return sub_1003DB724() & 1;
}

uint64_t sub_1003DC3AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003DC414(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1003DC47C()
{
  unint64_t result = qword_100977CD0;
  if (!qword_100977CD0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100977CD0);
  }
  return result;
}

uint64_t sub_1003DC4BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1003DC504()
{
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_listener;
  if (!*(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_listener])
  {
    uint64_t v2 = v0;
    if (qword_100969D90 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000B47C(v3, (uint64_t)qword_100972610);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Starting AirDrop Application Service Server", v6, 2u);
      swift_slowDealloc();
    }

    type metadata accessor for NWListener();
    sub_100666978(0);
    uint64_t v7 = NWListener.__allocating_init(applicationService:using:)();
    *(void *)&v2[v1] = v7;
    swift_retain();
    swift_release();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v2;
    *(void *)(v8 + 24) = v7;
    swift_retain();
    uint64_t v9 = v2;
    NWListener.stateUpdateHandler.setter();
    *(void *)(swift_allocObject() + 16) = v9;
    os_log_type_t v10 = v9;
    NWListener.newConnectionHandler.setter();
    NWListener.start(queue:)();
    swift_release();
  }
}

uint64_t sub_1003DC770()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100972610);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100972610);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1003DC838(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NWListener.State();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  uint64_t v5 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = 0;
  *((void *)v12 + 3) = 0;
  *((void *)v12 + 4) = v9;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v12[v11], (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  *(void *)&v12[(v4 + v11 + 7) & 0xFFFFFFFFFFFFFFF8] = v10;
  sub_10028CFD4((uint64_t)v7, (uint64_t)&unk_1009726B0, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_1003DCA68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a1;
  v6[9] = a4;
  return _swift_task_switch(sub_1003DCA8C, 0, 0);
}

uint64_t sub_1003DCA8C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 96) = Strong;
  if (Strong)
  {
    swift_beginAccess();
    uint64_t v2 = swift_weakLoadStrong();
    *(void *)(v0 + 104) = v2;
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100358C44;
    uint64_t v4 = *(void *)(v0 + 80);
    return sub_1003DCBBC(v4, v2);
  }
  else
  {
    **(unsigned char **)(v0 + 64) = 1;
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_1003DCBBC(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  uint64_t v4 = type metadata accessor for NWError();
  v3[10] = v4;
  v3[11] = *(void *)(v4 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for NWListener.State();
  v3[16] = v5;
  v3[17] = *(void *)(v5 - 8);
  v3[18] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v3[19] = static AirDropActor.shared;
  return _swift_task_switch(sub_1003DCD40, v6, 0);
}

uint64_t sub_1003DCD40()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[16];
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 16))(v2, v0[7], v3);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88))(v2, v3);
  if (v4 == enum case for NWListener.State.waiting(_:))
  {
    uint64_t v5 = v0[18];
    uint64_t v6 = v0[15];
    uint64_t v8 = v0[10];
    uint64_t v7 = v0[11];
    (*(void (**)(uint64_t, void))(v0[17] + 96))(v5, v0[16]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v8);
    if (qword_100969D90 != -1) {
      swift_once();
    }
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[10];
    uint64_t v12 = v0[11];
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000B47C(v13, (uint64_t)qword_100972610);
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
    v14(v10, v9, v11);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    BOOL v17 = os_log_type_enabled(v15, v16);
    uint64_t v18 = v0[14];
    uint64_t v20 = v0[10];
    uint64_t v19 = v0[11];
    if (v17)
    {
      os_log_type_t type = v16;
      NSString v71 = v14;
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      char v72 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v21 = 138412290;
      sub_1003DED94(&qword_10096E020, (void (*)(uint64_t))&type metadata accessor for NWError);
      swift_allocError();
      v71(v22, v18, v20);
      uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
      v0[6] = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v72 = v23;
      uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v24(v18, v20);
      _os_log_impl((void *)&_mh_execute_header, v15, type, "AirDrop Application Service server waiting with error %@", v21, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v24(v18, v20);
    }
    v24(v0[15], v0[10]);
    goto LABEL_42;
  }
  if (v4 == enum case for NWListener.State.failed(_:))
  {
    uint64_t v25 = v0[18];
    uint64_t v26 = v0[13];
    uint64_t v27 = v0[10];
    uint64_t v28 = v0[11];
    (*(void (**)(uint64_t, void))(v0[17] + 96))(v25, v0[16]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v26, v25, v27);
    if (qword_100969D90 != -1) {
      swift_once();
    }
    uint64_t v29 = v0[12];
    uint64_t v30 = v0[13];
    uint64_t v31 = v0[10];
    uint64_t v32 = v0[11];
    uint64_t v33 = type metadata accessor for Logger();
    sub_10000B47C(v33, (uint64_t)qword_100972610);
    uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
    v34(v29, v30, v31);
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    BOOL v37 = os_log_type_enabled(v35, v36);
    uint64_t v39 = v0[11];
    uint64_t v38 = v0[12];
    uint64_t v40 = v0[10];
    if (v37)
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v73 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 138412290;
      sub_1003DED94(&qword_10096E020, (void (*)(uint64_t))&type metadata accessor for NWError);
      swift_allocError();
      v34(v42, v38, v40);
      uint64_t v43 = _swift_stdlib_bridgeErrorToNSError();
      v0[5] = v43;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v73 = v43;
      uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
      v44(v38, v40);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "AirDrop Application Service server failed with error %@", v41, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
      v44(v0[12], v0[10]);
    }

    v0[21] = v44;
    if (v0[8]) {
      NWListener.cancel()();
    }
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    v0[22] = Strong;
    if (Strong)
    {
      os_log_type_t v51 = (void *)swift_task_alloc();
      v0[23] = v51;
      *os_log_type_t v51 = v0;
      v51[1] = sub_1003DD8E4;
      uint64_t v52 = v0[13];
      return sub_1003497CC(0, v52);
    }
    ((void (*)(void, void))v0[21])(v0[13], v0[10]);
LABEL_42:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v63 = (uint64_t (*)(void))v0[1];
    return v63();
  }
  if (v4 == enum case for NWListener.State.setup(_:))
  {
    if (qword_100969D90 != -1) {
      swift_once();
    }
    uint64_t v45 = type metadata accessor for Logger();
    sub_10000B47C(v45, (uint64_t)qword_100972610);
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v46, v47)) {
      goto LABEL_41;
    }
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v48 = 0;
    uint64_t v49 = "AirDrop Application Service server setting up";
LABEL_40:
    _os_log_impl((void *)&_mh_execute_header, v46, v47, v49, v48, 2u);
    swift_slowDealloc();
LABEL_41:

    goto LABEL_42;
  }
  if (v4 != enum case for NWListener.State.ready(_:))
  {
    if (v4 != enum case for NWListener.State.cancelled(_:))
    {
      if (qword_100969D90 != -1) {
        swift_once();
      }
      uint64_t v64 = type metadata accessor for Logger();
      sub_10000B47C(v64, (uint64_t)qword_100972610);
      NSString v65 = Logger.logObject.getter();
      os_log_type_t v66 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v65, v66))
      {
        uint64_t v67 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v67 = 0;
        _os_log_impl((void *)&_mh_execute_header, v65, v66, "Unknown AirDrop server state", v67, 2u);
        swift_slowDealloc();
      }
      uint64_t v69 = v0[17];
      uint64_t v68 = v0[18];
      uint64_t v70 = v0[16];

      (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v68, v70);
      goto LABEL_42;
    }
    if (qword_100969D90 != -1) {
      swift_once();
    }
    uint64_t v62 = type metadata accessor for Logger();
    sub_10000B47C(v62, (uint64_t)qword_100972610);
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v46, v47)) {
      goto LABEL_41;
    }
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v48 = 0;
    uint64_t v49 = "AirDrop Application Service server stopped";
    goto LABEL_40;
  }
  if (qword_100969D90 != -1) {
    swift_once();
  }
  uint64_t v54 = type metadata accessor for Logger();
  sub_10000B47C(v54, (uint64_t)qword_100972610);
  uint64_t v55 = Logger.logObject.getter();
  os_log_type_t v56 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v55, v56))
  {
    uint64_t v57 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v57 = 0;
    _os_log_impl((void *)&_mh_execute_header, v55, v56, "AirDrop Application Service server ready", v57, 2u);
    swift_slowDealloc();
  }

  NSString v58 = String._bridgeToObjectiveC()();
  uint64_t v59 = getpid();
  sub_100046EFC(@"ApplicationServiceAdvertise", @"Start", (uint64_t)v58, v59);

  uint64_t v60 = swift_unknownObjectWeakLoadStrong();
  v0[20] = v60;
  if (!v60) {
    goto LABEL_42;
  }
  uint64_t v61 = static AirDropActor.shared;
  return _swift_task_switch(sub_1003DD7AC, v61, 0);
}

uint64_t sub_1003DD7AC()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = (void *)(*(void *)(v0 + 160)
                + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServerErrors);
  swift_beginAccess();
  *uint64_t v2 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_1003DD854, v1, 0);
}

uint64_t sub_1003DD854()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003DD8E4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 152);
  swift_task_dealloc();
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_1003DDA10, v1, 0);
}

uint64_t sub_1003DDA10()
{
  (*(void (**)(void, void))(v0 + 168))(*(void *)(v0 + 104), *(void *)(v0 + 80));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003DDABC(uint64_t a1)
{
  uint64_t v2 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v6;
  v7[5] = a1;
  swift_retain();
  sub_10028CFD4((uint64_t)v4, (uint64_t)&unk_100972690, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_1003DDBE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return _swift_task_switch(sub_1003DDC08, 0, 0);
}

uint64_t sub_1003DDC08()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 64) = Strong;
  if (Strong)
  {
    if (qword_100969B90 != -1) {
      swift_once();
    }
    uint64_t v2 = static AirDropActor.shared;
    return _swift_task_switch(sub_1003DDD08, v2, 0);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_1003DDD08()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_1003DDD74(*(void *)(v0 + 56));

  return _swift_task_switch(sub_1002D1768, 0, 0);
}

uint64_t sub_1003DDD74(uint64_t a1)
{
  uint64_t v3 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050C448();
  uint64_t v6 = (void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_connections);
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = qword_100969B90;
  swift_retain();
  swift_retain();
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v10 = static AirDropActor.shared;
  uint64_t v11 = sub_1003DED94((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v10;
  v12[3] = v11;
  v12[4] = v8;
  v12[5] = a1;
  swift_retain();
  swift_release();
  sub_10028CFD4((uint64_t)v5, (uint64_t)&unk_1009726A0, (uint64_t)v12);
  return swift_release();
}

void sub_1003DDFA8()
{
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_listener;
  if (*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_listener))
  {
    uint64_t v2 = v0;
    uint64_t v3 = qword_100969D90;
    swift_retain();
    if (v3 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_100972610);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Stopping AirDrop Application Service Server", v7, 2u);
      swift_slowDealloc();
    }

    NWListener.cancel()();
    NSString v8 = String._bridgeToObjectiveC()();
    uint64_t v9 = getpid();
    sub_100046EFC(@"ApplicationServiceAdvertise", @"Stop", (uint64_t)v8, v9);

    sub_10035A468();
    swift_release();
    *(void *)(v2 + v1) = 0;
    swift_release();
  }
}

uint64_t sub_1003DE13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  v5[8] = type metadata accessor for SDAirDropServerConnection(0);
  v5[9] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v5[10] = static AirDropActor.shared;
  return _swift_task_switch(sub_1003DE210, v6, 0);
}

uint64_t sub_1003DE210()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (v2 = (void *)Strong, uint64_t v3 = swift_unknownObjectWeakLoadStrong(), *(void *)(v0 + 88) = v3, v2, v3))
  {
    **(void **)(v0 + 72) = *(void *)(v0 + 56);
    swift_storeEnumTagMultiPayload();
    swift_retain();
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1003DE360;
    uint64_t v5 = *(void *)(v0 + 72);
    return sub_1003448AC(v5);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_1003DE360()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = *(void *)(*(void *)v0 + 72);
  swift_task_dealloc();
  swift_unknownObjectRelease();
  sub_10035B15C(v2);
  return _swift_task_switch(sub_1003DE4B0, v1, 0);
}

uint64_t sub_1003DE4B0()
{
  **(unsigned char **)(v0 + 40) = 0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for SDAirDropApplicationServiceServer()
{
  return self;
}

uint64_t sub_1003DE5F8()
{
  return swift_retain();
}

uint64_t sub_1003DE608()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_serverType);
}

uint64_t sub_1003DE61C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003DE65C(uint64_t a1)
{
  return sub_1003DC838(a1);
}

uint64_t sub_1003DE664()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003DE69C(uint64_t a1)
{
  return sub_1003DDABC(a1);
}

uint64_t sub_1003DE6A4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003DE6E0(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_10000A6F0;
  *(_OWORD *)(v4 + 48) = v5;
  *(void *)(v4 + 40) = a1;
  return _swift_task_switch(sub_1003DDC08, 0, 0);
}

uint64_t sub_1003DE798(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10000A6F4;
  return sub_1003DE13C(a1, v4, v5, v7, v6);
}

uint64_t sub_1003DE858()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003DE890()
{
  uint64_t v1 = type metadata accessor for NWListener.State();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1003DE980(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for NWListener.State() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000A6F0;
  v9[10] = v7;
  v9[11] = v8;
  v9[8] = a1;
  v9[9] = v6;
  return _swift_task_switch(sub_1003DCA8C, 0, 0);
}

id sub_1003DEAA4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v21 = a4;
  uint64_t v22 = a3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v18 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v5 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v8);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v9 - 8);
  *(void *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_listener] = 0;
  v4[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_serverType] = 0;
  *(void *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_connections] = _swiftEmptyArrayStorage;
  uint64_t v10 = &v4[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_delegate];
  *((void *)v10 + 1) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v17 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_queue;
  v16[1] = sub_1002B62F0();
  uint64_t v11 = v4;
  static DispatchQoS.default.getter();
  uint64_t v25 = _swiftEmptyArrayStorage;
  sub_1003DED94((unint64_t *)&unk_100974840, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000A844((uint64_t *)&unk_10096A1B0);
  sub_1002477E4();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v18);
  *(void *)&v4[v17] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v13 = v19;
  uint64_t v12 = v20;
  *(void *)&v11[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_deviceStatus] = v19;
  *(void *)&v11[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_sessionLogger] = v12;
  *((void *)v10 + 1) = v21;
  swift_unknownObjectWeakAssign();
  id v14 = v13;
  swift_retain();

  v24.receiver = v11;
  v24.super_class = ObjectType;
  return [super init];
}

uint64_t sub_1003DED94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003DEDDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (id *)((char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t v41 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  uint64_t v11 = __chkstk_darwin(v41);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v39 - v14;
  uint64_t v16 = sub_100316F00();
  if (!v17) {
    goto LABEL_24;
  }
  uint64_t v18 = v16;
  unint64_t v19 = v17;
  sub_10025AE8C(v0, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1003DF284((uint64_t)v10, (uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    uint64_t v20 = (uint64_t *)&v15[*(int *)(v41 + 48)];
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    swift_bridgeObjectRetain();
    sub_1003DC32C((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if (v22)
    {
      swift_bridgeObjectRelease();
      return v21;
    }
  }
  else
  {
    sub_1003DC32C((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }
  type metadata accessor for SDContactStore();
  uint64_t inited = swift_initStackObject();
  uint64_t v39 = v4;
  uint64_t v40 = v13;
  uint64_t v24 = v18;
  uint64_t v25 = (void *)CNContactStoreMeContactDidChangeNotification;
  id v26 = objc_allocWithZone((Class)CNContactStore);
  uint64_t v27 = CNContactStoreDidChangeNotification;
  id v28 = v25;
  id v29 = [v26 init];
  *(void *)(inited + 32) = v29;
  uint64_t v30 = (void *)sub_1005CAC30(v24, v19);

  uint64_t v4 = v39;
  uint64_t v13 = v40;

  swift_bridgeObjectRelease();
  if (v30)
  {
    id v31 = [v30 displayName];
    if (v31)
    {
      uint64_t v32 = v31;
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      id v36 = [objc_allocWithZone((Class)CNContactFormatter) init];
      id v37 = [v36 stringFromContact:v30];

      if (v37)
      {
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else
      {

        return 0;
      }
    }
  }
  else
  {
LABEL_24:
    sub_10025AE8C(v1, (uint64_t)v8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1003DF284((uint64_t)v8, (uint64_t)v13, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
        uint64_t v21 = *(void *)&v13[*(int *)(v41 + 36)];
        swift_bridgeObjectRetain();
        sub_1003DC32C((uint64_t)v13, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
        break;
      case 2u:
        sub_1003DC32C((uint64_t)v8, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
        return 0;
      case 3u:
        id v33 = *v8;
        id v34 = [*v8 displayName];
        if (!v34)
        {
          __break(1u);
          JUMPOUT(0x1003DF274);
        }
        uint64_t v35 = v34;
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();

        break;
      default:
        sub_1003DF284((uint64_t)v8, (uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        uint64_t v21 = sub_1003148A4();
        sub_1003DC32C((uint64_t)v4, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        break;
    }
  }
  return v21;
}

uint64_t sub_1003DF284(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003DF2EC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_1009726C0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_1009726C0);
  if (qword_100969C48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994528);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1003DF3B4()
{
  uint64_t v0 = type metadata accessor for SDTempPairingEndpoint(0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self sharedNearbyAgent];
  id v5 = [v4 adHocPairedDeviceIdentities];

  if (v5)
  {
    sub_10000B740(0, (unint64_t *)&unk_100972810);
    uint64_t v6 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v6 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_1003E5754(v7, (uint64_t)v6);
  swift_bridgeObjectRelease();
  unint64_t v37 = (unint64_t)v6;
  swift_bridgeObjectRelease();
  int64_t v9 = v8[2];
  if (v9)
  {
    uint64_t v38 = _swiftEmptyArrayStorage;
    sub_100255510(0, v9, 0);
    uint64_t v10 = *(unsigned __int8 *)(v1 + 80);
    id v36 = v8;
    uint64_t v11 = (uint64_t)v8 + ((v10 + 32) & ~v10);
    uint64_t v12 = *(void *)(v1 + 72);
    uint64_t v13 = v38;
    do
    {
      sub_1003E6BBC(v11, (uint64_t)v3);
      uint64_t v14 = &v3[*(int *)(v0 + 20)];
      uint64_t v15 = *(void *)v14;
      uint64_t v16 = *((void *)v14 + 1);
      swift_bridgeObjectRetain();
      sub_1003E6C20((uint64_t)v3);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100255510(0, v13[2] + 1, 1);
        uint64_t v13 = v38;
      }
      unint64_t v18 = v13[2];
      unint64_t v17 = v13[3];
      if (v18 >= v17 >> 1)
      {
        sub_100255510(v17 > 1, v18 + 1, 1);
        uint64_t v13 = v38;
      }
      v13[2] = v18 + 1;
      unint64_t v19 = &v13[2 * v18];
      v19[4] = v15;
      v19[5] = v16;
      v11 += v12;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v20 = v37;
  if (!(v37 >> 62))
  {
    uint64_t v21 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v21) {
      goto LABEL_15;
    }
LABEL_29:
    uint64_t v25 = (char *)_swiftEmptyArrayStorage;
LABEL_30:
    swift_bridgeObjectRelease_n();
    uint64_t v38 = v13;
    sub_1003D514C((uint64_t)v25);
    return (uint64_t)v38;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v21 = result;
  if (!result) {
    goto LABEL_29;
  }
LABEL_15:
  if (v21 >= 1)
  {
    uint64_t v23 = 0;
    unint64_t v24 = v20 & 0xC000000000000001;
    uint64_t v25 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if (v24) {
        id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v26 = *(id *)(v20 + 8 * v23 + 32);
      }
      uint64_t v27 = v26;
      id v28 = [v26 name:v36];
      if (v28)
      {
        id v29 = v28;
        uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v32 = v31;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v25 = sub_100253208(0, *((void *)v25 + 2) + 1, 1, v25);
        }
        unint64_t v34 = *((void *)v25 + 2);
        unint64_t v33 = *((void *)v25 + 3);
        if (v34 >= v33 >> 1) {
          uint64_t v25 = sub_100253208((char *)(v33 > 1), v34 + 1, 1, v25);
        }
        *((void *)v25 + 2) = v34 + 1;
        uint64_t v35 = &v25[16 * v34];
        *((void *)v35 + 4) = v30;
        *((void *)v35 + 5) = v32;
        unint64_t v20 = v37;
      }
      else
      {
      }
      ++v23;
    }
    while (v21 != v23);
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003DF784()
{
  id v1 = [self sharedNearbyAgent];
  id v2 = [v1 adHocPairedDeviceIdentities];

  if (v2)
  {
    sub_10000B740(0, (unint64_t *)&unk_100972810);
    unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v3 >> 62)) {
      goto LABEL_3;
    }
  }
  else
  {
    unint64_t v3 = (unint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    {
LABEL_3:
      if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v8 = OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState;
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v9) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v4 = swift_bridgeObjectRetain();
  id v5 = sub_1003E600C(v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v5[2];
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v8 = OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState;
  if (!v6)
  {
    *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState) = 2;
    goto LABEL_10;
  }
LABEL_9:
  *(void *)(v0 + v8) = 0;
LABEL_10:
  uint64_t v10 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
  if (v10)
  {
    uint64_t v11 = swift_retain();
    v10(v11);
    return sub_1002CA430((uint64_t)v10);
  }
  return result;
}

id sub_1003DF930(void *a1)
{
  id v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = type metadata accessor for NWBrowser.Descriptor();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (id *)((char *)&v26.receiver - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = &v2[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState] = 0;
  uint64_t v10 = OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_bluetoothController;
  uint64_t v11 = qword_10096A050;
  uint64_t v12 = v2;
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_100994918;
  *(void *)&v12[v10] = qword_100994918;
  id v14 = v13;
  UUID.init()();
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_availableEndpoints] = _swiftEmptyArrayStorage;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_activeConnections] = _swiftEmptyArrayStorage;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier] = &_swiftEmptyDictionarySingleton;
  v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_hasStartedBonjourBrowsing] = 0;
  id v15 = [objc_allocWithZone((Class)RPClient) init];
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_rpClient] = v15;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_queue] = a1;
  type metadata accessor for NWParameters();
  swift_allocObject();
  id v16 = a1;
  NWParameters.init()();
  NWParameters.includePeerToPeer.setter();
  *uint64_t v8 = 0xD000000000000011;
  v8[1] = 0x80000001007BC830;
  v8[2] = 0;
  v8[3] = 0;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for NWBrowser.Descriptor.bonjourWithTXTRecord(_:), v5);
  type metadata accessor for NWBrowser();
  swift_allocObject();
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_browser] = NWBrowser.init(for:using:)();
  type metadata accessor for SDTempPairingStatusItemController();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = [objc_allocWithZone((Class)STStatusItemsStatusDomainPublisher) init];
  *(void *)(v17 + 24) = 0;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_statusItemController] = v17;

  v26.receiver = v12;
  v26.super_class = ObjectType;
  id v18 = [super init];
  unint64_t v19 = self;
  id v20 = v18;
  id v21 = [v19 defaultCenter];
  [v21 addObserver:v20 selector:"handleRapportIdentitiesChanged" name:off_100969790 object:0];

  id v22 = [v19 defaultCenter];
  id v23 = v20;
  unint64_t v24 = @"com.apple.sharingd.DiscoverableModeChanged";
  [v22 addObserver:v23 selector:"handleDiscoverableModeChanged" name:v24 object:0];

  return v23;
}

uint64_t sub_1003DFCC0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100969D98 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_1009726C0);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Starting to scan over bluetooth", v9, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_scanningIdentifier, v2);
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1005DD670((uint64_t)v5, (uint64_t)sub_1003E6E38, v10);
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_release();
  return sub_1003DF784();
}

void sub_1003DFED8(void *a1, char a2)
{
  if (a2)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      return;
    }
    uint64_t v4 = (void *)Strong;
    sub_1003DFF68(a1);
  }
  else
  {
    swift_beginAccess();
    uint64_t v5 = swift_unknownObjectWeakLoadStrong();
    if (!v5) {
      return;
    }
    uint64_t v4 = (void *)v5;
    sub_1003E0D44(a1);
  }
}

void sub_1003DFF68(void *a1)
{
  uint64_t v2 = v1;
  id v3 = [a1 identifier];
  if (!v3) {
    return;
  }
  uint64_t v4 = v3;
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v7 = v6;

  os_log_type_t v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier);
  swift_beginAccess();
  uint64_t v74 = v5;
  uint64_t v75 = v8;
  if (*(void *)(*v8 + 16))
  {
    if (qword_100969D98 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000B47C(v9, (uint64_t)qword_1009726C0);
    id v10 = a1;
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v11, v12))
    {
LABEL_10:
      id v14 = (uint8_t *)swift_slowAlloc();
      v78[0] = swift_slowAlloc();
      *(_DWORD *)id v14 = 136315138;
      sub_10000B740(0, &qword_10096FC48);
      id v15 = v10;
      uint64_t v16 = String.init<A>(describing:)();
      uint64_t v77 = sub_100254634(v16, v17, v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Found AirDrop device: %s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      goto LABEL_12;
    }
  }
  else
  {
    if (qword_100969D98 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000B47C(v13, (uint64_t)qword_1009726C0);
    id v10 = a1;
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12)) {
      goto LABEL_10;
    }
  }

LABEL_12:
  id v18 = [a1 airdropTempAuthTagData];
  if (v18)
  {
    unint64_t v19 = v18;
    uint64_t v20 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v22 = v21;

    id v23 = [a1 btAddressData];
    if (v23)
    {
      unint64_t v24 = v23;
      unint64_t v25 = v7;
      uint64_t v26 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v28 = v27;

      id v29 = [self sharedNearbyAgent];
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      Class v31 = Data._bridgeToObjectiveC()().super.isa;
      unsigned int v32 = [v29 isTempAuthTagKnown:isa bluetoothAddressData:v31];

      if (v32)
      {
        swift_bridgeObjectRelease();
        if (qword_100969D98 != -1) {
          swift_once();
        }
        uint64_t v33 = type metadata accessor for Logger();
        sub_10000B47C(v33, (uint64_t)qword_1009726C0);
        sub_10025ADCC(v20, v22);
        sub_10025ADCC(v20, v22);
        unint64_t v34 = Logger.logObject.getter();
        os_log_type_t v35 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v34, v35))
        {
          id v36 = (uint8_t *)swift_slowAlloc();
          uint64_t v77 = swift_slowAlloc();
          *(_DWORD *)id v36 = 136315138;
          v78[0] = (uint64_t)sub_10045E0B4(v20, v22);
          sub_10000A844((uint64_t *)&unk_100974C30);
          sub_1002AE308((unint64_t *)&qword_10096CE90, (uint64_t *)&unk_100974C30);
          uint64_t v37 = BidirectionalCollection<>.joined(separator:)();
          uint64_t v39 = v38;
          swift_bridgeObjectRelease();
          v78[0] = v37;
          v78[1] = v39;
          uint64_t v40 = String.init<A>(describing:)();
          v78[0] = sub_100254634(v40, v41, &v77);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100250CC4(v20, v22);
          sub_100250CC4(v20, v22);
          _os_log_impl((void *)&_mh_execute_header, v34, v35, "Recognized temp auth tag: %s", v36, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_100250CC4(v20, v22);
          sub_100250CC4(v20, v22);
        }

        sub_1005DDA98();
        sub_100250CC4(v26, v28);
        sub_100250CC4(v20, v22);
        return;
      }
      sub_100250CC4(v26, v28);
      unint64_t v7 = v25;
    }
    sub_100250CC4(v20, v22);
  }
  id v42 = [self sharedMonitor];
  if (!v42)
  {
    __break(1u);
    return;
  }
  uint64_t v43 = v42;
  id v44 = [self sharedNearbyAgent];
  char v45 = sub_100556DF0(v43, v44);

  if (v45)
  {
    swift_bridgeObjectRelease();
    if (qword_100969D98 != -1) {
      swift_once();
    }
    uint64_t v46 = type metadata accessor for Logger();
    sub_10000B47C(v46, (uint64_t)qword_1009726C0);
    os_log_type_t v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v49 = 0;
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "Device is already known", v49, 2u);
      swift_slowDealloc();
    }
LABEL_63:

    return;
  }
  if ([a1 airdropConfigData])
  {
    uint64_t v55 = v75;
    swift_beginAccess();
    os_log_type_t v56 = &selRef_setProducerScanEnabled_;
    if (*(void *)(*v75 + 16))
    {
      swift_bridgeObjectRetain();
      sub_1005838BC(v74, v7);
      if (v57)
      {
        swift_endAccess();
        swift_bridgeObjectRelease_n();
        goto LABEL_60;
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    id v58 = [self sharedController];
    id v59 = [v58 checkDeviceRegion:a1];

    if (v59 != (id)4)
    {
      sub_10000B740(0, (unint64_t *)&qword_10096AC60);
      uint64_t v60 = (void *)static NSUserDefaults.airdrop.getter();
      char v61 = SFAirDropUserDefaults.a2aRangingAssumeClose.getter();

      if ((v61 & 1) == 0)
      {
        if (qword_100969D98 != -1) {
          swift_once();
        }
        uint64_t v66 = type metadata accessor for Logger();
        sub_10000B47C(v66, (uint64_t)qword_1009726C0);
        swift_bridgeObjectRetain_n();
        uint64_t v67 = Logger.logObject.getter();
        os_log_type_t v68 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v67, v68))
        {
          uint64_t v69 = (uint8_t *)swift_slowAlloc();
          v78[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v69 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v70 = v74;
          uint64_t v77 = sub_100254634(v74, v7, v78);
          os_log_type_t v56 = &selRef_setProducerScanEnabled_;
          uint64_t v55 = v75;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v67, v68, "Starting to measure RSSI for Ask to AirDrop for %s", v69, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();

          uint64_t v70 = v74;
        }
        swift_beginAccess();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v77 = *v55;
        *uint64_t v55 = 0x8000000000000000;
        sub_100593B44(0, v70, v7, isUniquelyReferenced_nonNull_native);
        *uint64_t v55 = v77;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        char v72 = *(void (**)(uint64_t))(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
        if (v72)
        {
          uint64_t v73 = swift_retain();
          v72(v73);
          sub_1002CA430((uint64_t)v72);
        }
        sub_1005DDDA4();
        goto LABEL_60;
      }
      if (qword_100969D98 != -1) {
        swift_once();
      }
      uint64_t v62 = type metadata accessor for Logger();
      sub_10000B47C(v62, (uint64_t)qword_1009726C0);
      uint64_t v63 = Logger.logObject.getter();
      os_log_type_t v64 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v63, v64))
      {
        NSString v65 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)NSString v65 = 0;
        _os_log_impl((void *)&_mh_execute_header, v63, v64, "Assuming device is in range", v65, 2u);
        swift_slowDealloc();
      }
    }
    sub_1003E3DB4(v74, v7);
    swift_bridgeObjectRelease();
LABEL_60:
    if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_hasStartedBonjourBrowsing) & 1) == 0) {
      sub_1003E215C();
    }
    os_log_type_t v47 = [self v56[470]];
    [v47 sender:v2 notifyBluetoothSample:a1 forType:3];
    goto LABEL_63;
  }
  swift_beginAccess();
  if (!*(void *)(*v75 + 16))
  {
LABEL_40:
    swift_endAccess();
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  sub_1005838BC(v74, v7);
  if ((v50 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  if (qword_100969D98 != -1) {
    swift_once();
  }
  uint64_t v51 = type metadata accessor for Logger();
  sub_10000B47C(v51, (uint64_t)qword_1009726C0);
  swift_bridgeObjectRetain();
  uint64_t v52 = Logger.logObject.getter();
  os_log_type_t v53 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = (uint8_t *)swift_slowAlloc();
    v78[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v54 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v77 = sub_100254634(v74, v7, v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v52, v53, "Device (%s) no longer advertising Ask to AirDrop", v54, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_1003E44AC(a1, 0);
}

void sub_1003E0D44(void *a1)
{
  if (qword_100969D98 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_1009726C0);
  id v3 = a1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)unint64_t v6 = 136315138;
    sub_10000B740(0, &qword_10096FC48);
    id v7 = v3;
    uint64_t v8 = String.init<A>(describing:)();
    sub_100254634(v8, v9, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Lost AirDrop device: %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_1003E44AC(v3, 1);
}

uint64_t sub_1003E0F2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NWBrowser.Descriptor();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  os_log_type_t v5 = (uint64_t *)((char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100969D98 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000B47C(v10, (uint64_t)qword_1009726C0);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Stopping browsing over Bonjour for available endpoints", v13, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_scanningIdentifier, v6);
  sub_1005DD6C0((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v14 = OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_browser;
  swift_retain();
  NWBrowser.cancel()();
  swift_release();
  type metadata accessor for NWParameters();
  swift_allocObject();
  NWParameters.init()();
  NWParameters.includePeerToPeer.setter();
  *os_log_type_t v5 = 0xD000000000000011;
  v5[1] = 0x80000001007BC830;
  v5[2] = 0;
  v5[3] = 0;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for NWBrowser.Descriptor.bonjourWithTXTRecord(_:), v2);
  type metadata accessor for NWBrowser();
  swift_allocObject();
  *(void *)(v1 + v14) = NWBrowser.init(for:using:)();
  swift_release();
  *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState) = 0;
  id v15 = (void (**)(uint64_t))(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
  uint64_t v16 = *(void (**)(uint64_t))(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
  if (v16)
  {
    uint64_t v17 = swift_retain();
    v16(v17);
    sub_1002CA430((uint64_t)v16);
  }
  *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_availableEndpoints) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  sub_1003DF784();
  id v18 = *v15;
  if (*v15)
  {
    uint64_t v19 = swift_retain();
    v18(v19);
    sub_1002CA430((uint64_t)v18);
  }
  unint64_t v20 = sub_100246E10((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v21 = (unint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier);
  swift_beginAccess();
  *unint64_t v21 = v20;
  uint64_t result = swift_bridgeObjectRelease();
  id v23 = *v15;
  if (*v15)
  {
    uint64_t v24 = swift_retain();
    v23(v24);
    uint64_t result = sub_1002CA430((uint64_t)v23);
  }
  *(unsigned char *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_hasStartedBonjourBrowsing) = 0;
  return result;
}

void sub_1003E132C(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a1;
  uint64_t v35 = type metadata accessor for SDTempPairingConnection.Role(0);
  __chkstk_darwin(v35);
  os_log_type_t v5 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [self sharedNearbyAgent];
  uint64_t v7 = [v6 temporarySelfIdentity];

  uint64_t v37 = v7;
  if (v7)
  {
    if (qword_100969D98 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000B47C(v8, (uint64_t)qword_1009726C0);
    unint64_t v9 = v2;
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v12 = 134217984;
      uint64_t v38 = *(void *)(*(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_availableEndpoints] + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Pairing to %ld available endpoints", v12, 0xCu);
      swift_slowDealloc();
    }
    else
    {
    }
    *(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState] = 1;
    uint64_t v17 = *(void (**)(uint64_t))&v9[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged];
    if (v17)
    {
      uint64_t v18 = swift_retain();
      v17(v18);
      sub_1002CA430((uint64_t)v17);
    }
    uint64_t v19 = *(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_availableEndpoints];
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      unint64_t v21 = &v9[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_activeConnections];
      id v33 = *(id *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_queue];
      unint64_t v34 = v9;
      uint64_t v22 = *(void *)(type metadata accessor for SDTempPairingEndpoint(0) - 8);
      uint64_t v23 = v19 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
      uint64_t v24 = *(void *)(v22 + 72);
      v32[1] = v19;
      swift_bridgeObjectRetain();
      do
      {
        uint64_t v25 = &v5[*(int *)(sub_10000A844((uint64_t *)&unk_100972880) + 48)];
        sub_1003E6BBC(v23, (uint64_t)v5);
        *(void *)uint64_t v25 = v36;
        *((void *)v25 + 1) = a2;
        swift_storeEnumTagMultiPayload();
        type metadata accessor for SDTempPairingConnection(0);
        swift_allocObject();
        swift_bridgeObjectRetain();
        uint64_t v26 = v37;
        id v27 = v33;
        unint64_t v28 = sub_1004C51BC((uint64_t)v5, v26, v27);

        uint64_t v29 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v30 = swift_allocObject();
        *(void *)(v30 + 16) = v29;
        *(void *)(v30 + 24) = v28;
        uint64_t v31 = v28[3];
        void v28[3] = sub_1003E74B4;
        v28[4] = v30;
        swift_retain();
        sub_1002CA430(v31);
        swift_beginAccess();
        swift_retain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*(void *)v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v21 & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_endAccess();
        swift_release();
        v23 += v24;
        --v20;
      }
      while (v20);

      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
  else
  {
    if (qword_100969D98 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000B47C(v13, (uint64_t)qword_1009726C0);
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v14, "No temporary identity", v15, 2u);
      swift_slowDealloc();
    }
    uint64_t v16 = v37;
  }
}

void sub_1003E1850(void *a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = (void *)Strong;
    sub_1003E18C0(a1, a3);
  }
}

uint64_t sub_1003E18C0(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_100969D98 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_1009726C0);
  id v7 = a1;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = v3;
    v25[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    sub_10000B740(0, (unint64_t *)&unk_100972810);
    id v11 = v7;
    uint64_t v12 = String.init<A>(describing:)();
    uint64_t v24 = sub_100254634(v12, v13, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Adding remote identity: %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  os_log_type_t v14 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_rpClient);
  [v14 addOrUpdateIdentity:v7 completion:v23, v24];
  NWConnection.cancel()();
  id v15 = (uint64_t *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_activeConnections);
  swift_beginAccess();
  swift_retain();
  int64_t v16 = sub_1003E6FDC(v15, a2);
  swift_release();
  if (!((unint64_t)*v15 >> 62))
  {
    uint64_t v17 = *(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17 >= v16) {
      goto LABEL_8;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v17 < v16) {
    goto LABEL_15;
  }
LABEL_8:
  sub_1005A5A30(v16, v17);
  swift_endAccess();
  unint64_t v18 = *v15;
  if (!(v18 >> 62))
  {
    if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_16:
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v22) {
LABEL_10:
  }
    [v14 invalidate];
LABEL_11:
  *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState) = 2;
  uint64_t v19 = *(void (**)(uint64_t))(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
  if (v19)
  {
    uint64_t v20 = swift_retain();
    v19(v20);
    sub_1002CA430((uint64_t)v19);
  }
  return sub_1005DDA98();
}

void sub_1003E1C2C()
{
  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState) = 3;
  uint64_t v1 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
  if (v1)
  {
    uint64_t v2 = swift_retain();
    v1(v2);
    sub_1002CA430((uint64_t)v1);
  }
  if (qword_100969D98 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000B47C(v3, (uint64_t)qword_1009726C0);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Unpairing and regenerating temporary self identity", v6, 2u);
    swift_slowDealloc();
  }

  id v7 = [objc_allocWithZone((Class)RPClient) init];
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  *(void *)(v9 + 24) = v8;
  v12[4] = sub_1003E746C;
  v12[5] = v9;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_1006B210C;
  v12[3] = &unk_1008D96D8;
  uint64_t v10 = _Block_copy(v12);
  id v11 = v7;
  swift_release();
  sub_10017ED64(v11, v10);
  _Block_release(v10);
}

void sub_1003E1E3C(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_100969D98 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000B47C(v3, (uint64_t)qword_1009726C0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      v17[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315138;
      swift_errorRetain();
      sub_10000A844(&qword_10096BAF0);
      uint64_t v7 = String.init<A>(describing:)();
      uint64_t v16 = sub_100254634(v7, v8, v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to regenerate temporary self identity: %s", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      goto LABEL_12;
    }
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_100969D98 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000B47C(v9, (uint64_t)qword_1009726C0);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v10, "Successfully regenerated temporary self identity", v11, 2u);
      swift_slowDealloc();
    }
  }

LABEL_12:
  [a2 invalidate:v16, v17[0]];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v13 = (void *)Strong;
    *(void *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState) = 0;
    os_log_type_t v14 = *(void (**)(uint64_t))(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
    if (v14)
    {
      uint64_t v15 = swift_retain();
      v14(v15);
      sub_1002CA430((uint64_t)v14);
    }
  }
}

void sub_1003E215C()
{
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_hasStartedBonjourBrowsing;
  if (v0[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_hasStartedBonjourBrowsing])
  {
    if (qword_100969D98 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000B47C(v2, (uint64_t)qword_1009726C0);
    oslog = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v3, "Already browsing over Bonjour for temp pairing", v4, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    os_log_type_t v5 = v0;
    if (qword_100969D98 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_1009726C0);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Starting to browse over Bonjour for available endpoints", v9, 2u);
      swift_slowDealloc();
    }

    v5[v1] = 1;
    *(void *)(swift_allocObject() + 16) = v5;
    swift_retain();
    os_log_type_t v10 = v5;
    NWBrowser.stateUpdateHandler.setter();
    swift_release();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    swift_retain();
    NWBrowser.browseResultsChangedHandler.setter();
    swift_release();
    swift_release();
    swift_retain();
    NWBrowser.start(queue:)();
    swift_release();
  }
}

uint64_t sub_1003E2428(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v4 - 8);
  uint64_t v35 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NWBrowser.State();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  os_log_type_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  unint64_t v13 = (char *)&v31 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v31 - v14;
  if (qword_100969D98 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_10000B47C(v16, (uint64_t)qword_1009726C0);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v36 = a1;
  v17(v15, a1, v6);
  unint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    unsigned int v32 = v10;
    unint64_t v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    id v33 = a2;
    uint64_t v38 = v22;
    uint64_t v34 = v7;
    *(_DWORD *)unint64_t v21 = 136315138;
    uint64_t v31 = v21 + 4;
    v17(v13, (uint64_t)v15, v6);
    uint64_t v23 = String.init<A>(describing:)();
    uint64_t v37 = sub_100254634(v23, v24, &v38);
    uint64_t v7 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void (**)(char *, uint64_t))(v7 + 8);
    v25(v15, v6);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Bonjour server state changed to %s", v21, 0xCu);
    swift_arrayDestroy();
    a2 = v33;
    swift_slowDealloc();
    os_log_type_t v10 = v32;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v25 = *(void (**)(char *, uint64_t))(v7 + 8);
    v25(v15, v6);
  }

  v17(v10, v36, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
  if (result == enum case for NWBrowser.State.failed(_:))
  {
    uint64_t v27 = type metadata accessor for TaskPriority();
    uint64_t v28 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v35, 1, 1, v27);
    uint64_t v29 = (void *)swift_allocObject();
    v29[2] = 0;
    v29[3] = 0;
    v29[4] = a2;
    id v30 = a2;
    sub_10028CFA8(v28, (uint64_t)&unk_100972870, (uint64_t)v29);
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v25)(v10, v6);
  }
  if (result == enum case for NWBrowser.State.waiting(_:)
    || result != enum case for NWBrowser.State.setup(_:)
    && result != enum case for NWBrowser.State.ready(_:)
    && result != enum case for NWBrowser.State.cancelled(_:))
  {
    return ((uint64_t (*)(char *, uint64_t))v25)(v10, v6);
  }
  return result;
}

uint64_t sub_1003E288C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_1003E28AC, 0, 0);
}

uint64_t sub_1003E28AC()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v0 = static AirDropActor.shared;
  return _swift_task_switch(sub_1003E2944, v0, 0);
}

uint64_t sub_1003E2944()
{
  sub_1003E29A4();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1003E29A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NWBrowser.Descriptor();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_100969D98 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_1009726C0);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Restarting Bonjour browsing", v9, 2u);
    swift_slowDealloc();
  }

  *(unsigned char *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_hasStartedBonjourBrowsing) = 0;
  type metadata accessor for NWParameters();
  swift_allocObject();
  NWParameters.init()();
  NWParameters.includePeerToPeer.setter();
  *uint64_t v5 = 0xD000000000000011;
  v5[1] = 0x80000001007BC830;
  v5[2] = 0;
  v5[3] = 0;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for NWBrowser.Descriptor.bonjourWithTXTRecord(_:), v2);
  type metadata accessor for NWBrowser();
  swift_allocObject();
  *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_browser) = NWBrowser.init(for:using:)();
  swift_release();
  sub_1003E215C();
}

uint64_t sub_1003E2BCC(uint64_t a1)
{
  uint64_t v2 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
    os_log_type_t v8 = (void *)swift_allocObject();
    v8[2] = 0;
    v8[3] = 0;
    v8[4] = v6;
    v8[5] = a1;
    swift_bridgeObjectRetain();
    sub_10028CFA8((uint64_t)v4, (uint64_t)&unk_100972848, (uint64_t)v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_1003E2CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_1003E2D1C, 0, 0);
}

uint64_t sub_1003E2D1C()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v0 = static AirDropActor.shared;
  return _swift_task_switch(sub_1003E2DB4, v0, 0);
}

uint64_t sub_1003E2DB4()
{
  sub_1003E2E14(*(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003E2E14(uint64_t a1)
{
  uint64_t v72 = type metadata accessor for NWEndpoint();
  uint64_t v96 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  NSString v71 = (char *)&v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for NWBrowser.Result.Metadata();
  uint64_t v3 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NWTXTRecord();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v80 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v68 - v10;
  uint64_t v12 = sub_10000A844(&qword_100972850);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for SDTempPairingEndpoint(0);
  uint64_t v15 = *(void *)(v97 - 8);
  uint64_t v16 = __chkstk_darwin(v97);
  uint64_t v94 = (uint64_t)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v70 = (char *)&v68 - v19;
  __chkstk_darwin(v18);
  uint64_t v93 = (uint64_t)&v68 - v20;
  uint64_t v98 = type metadata accessor for NWBrowser.Result();
  uint64_t v21 = __chkstk_darwin(v98);
  uint64_t v23 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v91 = (char *)&v68 - v25;
  uint64_t v101 = _swiftEmptyArrayStorage;
  uint64_t v26 = *(void *)(a1 + 56);
  uint64_t v82 = a1 + 56;
  uint64_t v27 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v26;
  int64_t v83 = (unint64_t)(v27 + 63) >> 6;
  uint64_t v90 = v24 + 16;
  uint64_t v89 = v24 + 32;
  uint64_t v88 = (uint64_t (**)(char *, uint64_t))(v3 + 88);
  int v87 = enum case for NWBrowser.Result.Metadata.bonjour(_:);
  uint64_t v92 = v24;
  uint64_t v86 = (void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v77 = (void (**)(char *, uint64_t))(v3 + 8);
  char v76 = (void (**)(char *, uint64_t))(v3 + 96);
  uint64_t v75 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v74 = (void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v73 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v69 = (void (**)(char *, char *, uint64_t))(v96 + 32);
  char v85 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v78 = v15;
  Class v84 = (unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  int64_t v30 = 0;
  uint64_t v31 = a1;
  uint64_t v81 = a1;
  uint64_t v96 = v6;
  NSString v79 = v11;
  if (v29) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v36 = v30 + 1;
  uint64_t v35 = v98;
  if (!__OFADD__(v30, 1))
  {
    if (v36 >= v83) {
      goto LABEL_34;
    }
    unint64_t v37 = *(void *)(v82 + 8 * v36);
    ++v30;
    if (!v37)
    {
      int64_t v30 = v36 + 1;
      if (v36 + 1 >= v83) {
        goto LABEL_34;
      }
      unint64_t v37 = *(void *)(v82 + 8 * v30);
      if (!v37)
      {
        int64_t v30 = v36 + 2;
        if (v36 + 2 >= v83) {
          goto LABEL_34;
        }
        unint64_t v37 = *(void *)(v82 + 8 * v30);
        if (!v37)
        {
          int64_t v38 = v36 + 3;
          if (v38 < v83)
          {
            unint64_t v37 = *(void *)(v82 + 8 * v38);
            if (v37)
            {
              int64_t v30 = v38;
              goto LABEL_20;
            }
            while (1)
            {
              int64_t v30 = v38 + 1;
              if (__OFADD__(v38, 1)) {
                goto LABEL_42;
              }
              if (v30 >= v83) {
                break;
              }
              unint64_t v37 = *(void *)(v82 + 8 * v30);
              ++v38;
              if (v37) {
                goto LABEL_20;
              }
            }
          }
LABEL_34:
          swift_release();
          if (qword_100969D98 == -1) {
            goto LABEL_35;
          }
          goto LABEL_43;
        }
      }
    }
LABEL_20:
    uint64_t v32 = v6;
    unint64_t v29 = (v37 - 1) & v37;
    unint64_t v34 = __clz(__rbit64(v37)) + (v30 << 6);
    while (1)
    {
      uint64_t v39 = v92;
      uint64_t v40 = v91;
      (*(void (**)(char *, unint64_t, uint64_t))(v92 + 16))(v91, *(void *)(v31 + 48) + *(void *)(v92 + 72) * v34, v35);
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v23, v40, v35);
      NWBrowser.Result.metadata.getter();
      uint64_t v41 = v95;
      int v42 = (*v88)(v5, v95);
      if (v42 == v87)
      {
        uint64_t v43 = v31;
        (*v76)(v5, v41);
        id v44 = v79;
        uint64_t v6 = v32;
        (*v75)(v79, v5, v32);
        uint64_t v45 = (uint64_t)v80;
        (*v74)(v80, v44, v6);
        sub_1004BEEE8(v45, &v102);
        sub_1003E7318((uint64_t)&v102, (uint64_t)v103);
        if (*((void *)&v103[0] + 1))
        {
          long long v104 = v103[0];
          long long v105 = v103[1];
          long long v106 = v103[2];
          uint64_t v46 = v71;
          NWBrowser.Result.endpoint.getter();
          (*v86)(v23, v98);
          (*v73)(v44, v96);
          uint64_t v47 = (uint64_t)v70;
          os_log_type_t v48 = v46;
          uint64_t v6 = v96;
          (*v69)(v70, v48, v72);
          uint64_t v49 = (_OWORD *)(v47 + *(int *)(v97 + 20));
          long long v50 = v105;
          *uint64_t v49 = v104;
          v49[1] = v50;
          v49[2] = v106;
          sub_1003E6C7C(v47, (uint64_t)v14);
          uint64_t v51 = 0;
        }
        else
        {
          (*v86)(v23, v98);
          (*v73)(v44, v6);
          uint64_t v51 = 1;
        }
        uint64_t v31 = v43;
      }
      else
      {
        (*v86)(v23, v35);
        (*v77)(v5, v41);
        uint64_t v51 = 1;
        uint64_t v6 = v32;
      }
      uint64_t v52 = v97;
      (*v85)(v14, v51, 1, v97);
      if ((*v84)(v14, 1, v52) == 1)
      {
        sub_1003E6F7C((uint64_t)v14);
        if (!v29) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v53 = v93;
        sub_1003E6C7C((uint64_t)v14, v93);
        sub_1003E6BBC(v53, v94);
        unint64_t v54 = (unint64_t)v101;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v54 = sub_1002540E4(0, *(void *)(v54 + 16) + 1, 1, v54);
        }
        unint64_t v56 = *(void *)(v54 + 16);
        unint64_t v55 = *(void *)(v54 + 24);
        if (v56 >= v55 >> 1) {
          unint64_t v54 = sub_1002540E4(v55 > 1, v56 + 1, 1, v54);
        }
        *(void *)(v54 + 16) = v56 + 1;
        sub_1003E6C7C(v94, v54+ ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))+ *(void *)(v78 + 72) * v56);
        uint64_t v101 = (void *)v54;
        sub_1003E6C20(v93);
        uint64_t v31 = v81;
        uint64_t v6 = v96;
        if (!v29) {
          goto LABEL_7;
        }
      }
LABEL_6:
      uint64_t v32 = v6;
      unint64_t v33 = __clz(__rbit64(v29));
      v29 &= v29 - 1;
      unint64_t v34 = v33 | (v30 << 6);
      uint64_t v35 = v98;
    }
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  swift_once();
LABEL_35:
  uint64_t v57 = type metadata accessor for Logger();
  sub_10000B47C(v57, (uint64_t)qword_1009726C0);
  id v58 = v101;
  swift_bridgeObjectRetain_n();
  id v59 = Logger.logObject.getter();
  os_log_type_t v60 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v59, v60))
  {
    char v61 = (uint8_t *)swift_slowAlloc();
    uint64_t v100 = swift_slowAlloc();
    *(_DWORD *)char v61 = 136315138;
    uint64_t v99 = (uint64_t)v58;
    swift_bridgeObjectRetain();
    sub_10000A844(&qword_100972860);
    uint64_t v62 = String.init<A>(describing:)();
    uint64_t v99 = sub_100254634(v62, v63, &v100);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v59, v60, "Temp pairing endpoints changed: %s", v61, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  uint64_t v64 = v68;
  *(void *)(v68 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_availableEndpoints) = v101;
  swift_bridgeObjectRelease();
  uint64_t result = sub_1003DF784();
  uint64_t v66 = *(void (**)(uint64_t))(v64 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
  if (v66)
  {
    uint64_t v67 = swift_retain();
    v66(v67);
    return sub_1002CA430((uint64_t)v66);
  }
  return result;
}

void sub_1003E3A1C()
{
  if (qword_100969D98 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_1009726C0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Rapport identities changed, updating connection state", v3, 2u);
    swift_slowDealloc();
  }

  sub_1003DF784();
  id v4 = [self sharedNearbyAgent];
  id v5 = [v4 adHocPairedDeviceIdentities];

  if (v5)
  {
    sub_10000B740(0, (unint64_t *)&unk_100972810);
    unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (!v7) {
      sub_1005DDAB8();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1003E3C14()
{
  if (qword_100969D98 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_1009726C0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "AirDrop discoverable mode changed", v3, 2u);
    swift_slowDealloc();
  }

  id v4 = [self sharedMonitor];
  if (v4)
  {
    id v5 = v4;
    id v6 = [v4 discoverableLevel];

    if (v6)
    {
      sub_1003DFCC0();
    }
    else
    {
      sub_1003E0F2C();
      sub_1003E1C2C();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003E3DB4(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v47 = v6;
  __chkstk_darwin(v6);
  id v44 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchQoS();
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  int v42 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTimeInterval();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char **)((char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for DispatchTime();
  uint64_t v40 = *(void *)(v13 - 8);
  uint64_t v41 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v39 = (char *)&v36 - v17;
  if (qword_100969D98 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_10000B47C(v18, (uint64_t)qword_1009726C0);
  swift_bridgeObjectRetain_n();
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    int64_t v36 = v16;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v37 = v10;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v38 = v9;
    aBlock[0] = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v49 = (void *)sub_100254634(a1, a2, aBlock);
    uint64_t v16 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Ask to AirDrop device (%s) within bubble", v22, 0xCu);
    swift_arrayDestroy();
    uint64_t v9 = v38;
    swift_slowDealloc();
    uint64_t v10 = v37;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v24 = (void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v49 = *v24;
  *uint64_t v24 = (void *)0x8000000000000000;
  sub_100593B44(1, a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v24 = v49;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v26 = *(void (**)(uint64_t))(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
  if (v26)
  {
    uint64_t v27 = swift_retain();
    v26(v27);
    sub_1002CA430((uint64_t)v26);
  }
  sub_1004F3004(1);
  sub_1005DDDC4();
  uint64_t v38 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_queue);
  static DispatchTime.now()();
  *uint64_t v12 = 5;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchTimeInterval.seconds(_:), v9);
  uint64_t v28 = v39;
  + infix(_:_:)();
  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v29 = v41;
  uint64_t v40 = *(void *)(v40 + 8);
  ((void (*)(char *, uint64_t))v40)(v16, v41);
  uint64_t v30 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = (uint64_t)sub_1003E6D18;
  aBlock[5] = v30;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100296520;
  aBlock[3] = (uint64_t)&unk_1008D95E8;
  uint64_t v31 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v32 = v42;
  static DispatchQoS.unspecified.getter();
  uint64_t v49 = _swiftEmptyArrayStorage;
  sub_1003E6D38((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  unint64_t v33 = v44;
  uint64_t v34 = v47;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v31);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v34);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v45);
  ((void (*)(char *, uint64_t))v40)(v28, v29);
  swift_release();
  return swift_release();
}

void sub_1003E44AC(void *a1, char a2)
{
  uint64_t v3 = v2;
  id v6 = [a1 identifier];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    uint64_t v11 = v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier;
    swift_beginAccess();
    sub_1002A9CB8(v8, v10);
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void (**)(uint64_t))(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
    if (v12)
    {
      uint64_t v13 = swift_retain();
      v12(v13);
      sub_1002CA430((uint64_t)v12);
    }
    if (a2)
    {
      id v14 = [self sharedController];
      [v14 notifyDeviceLost:a1];
    }
    if (!*(void *)(*(void *)v11 + 16))
    {
      sub_1005DDDC4();
      sub_1004F3004(0);
    }
  }
}

uint64_t sub_1003E4600()
{
  uint64_t v0 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v4 = (void *)result;
    uint64_t v5 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
    uint64_t v6 = qword_100969B90;
    id v7 = v4;
    if (v6 != -1) {
      swift_once();
    }
    uint64_t v8 = static AirDropActor.shared;
    uint64_t v9 = sub_1003E6D38((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = v8;
    v10[3] = v9;
    v10[4] = v7;
    swift_retain();
    sub_10028CFA8((uint64_t)v2, (uint64_t)&unk_100972830, (uint64_t)v10);

    return swift_release();
  }
  return result;
}

uint64_t sub_1003E47BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_1003E4858, v5, 0);
}

uint64_t sub_1003E4858()
{
  if (qword_100969D98 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_1009726C0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Nearby device is close timer fired", v4, 2u);
    swift_slowDealloc();
  }

  sub_1004F3004(0);
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1003E4AB8()
{
  return type metadata accessor for SDTempPairingClient(0);
}

uint64_t type metadata accessor for SDTempPairingClient(uint64_t a1)
{
  return sub_10000B93C(a1, (uint64_t *)&unk_100972768);
}

uint64_t sub_1003E4AE0()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

void sub_1003E4BD0()
{
  sub_10000B740(0, (unint64_t *)&qword_10096AC60);
  uint64_t v0 = (void *)static NSUserDefaults.airdrop.getter();
  char v1 = SFAirDropUserDefaults.a2aRangingAssumeFar.getter();

  if (v1)
  {
    if (qword_100969D98 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000B47C(v2, (uint64_t)qword_1009726C0);
    oslog = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v3, "Assuming device is not in range", v4, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v5 = UUID.uuidString.getter();
    sub_1003E3DB4(v5, v6);
    swift_bridgeObjectRelease();
  }
}

unsigned char *storeEnumTagSinglePayload for SDTempPairingDeviceRangingState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003E4EECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDTempPairingDeviceRangingState()
{
  return &type metadata for SDTempPairingDeviceRangingState;
}

uint64_t *sub_1003E4F24(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for NWEndpoint();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *uint64_t v9 = *(uint64_t *)((char *)a2 + v8);
    v9[1] = v11;
    uint64_t v12 = *(uint64_t *)((char *)a2 + v8 + 16);
    unint64_t v13 = v10[3];
    swift_bridgeObjectRetain();
    sub_10025ADCC(v12, v13);
    v9[2] = v12;
    v9[3] = v13;
    uint64_t v14 = v10[4];
    unint64_t v15 = v10[5];
    sub_10025ADCC(v14, v15);
    v9[4] = v14;
    v9[5] = v15;
  }
  return a1;
}

uint64_t sub_1003E502C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWEndpoint();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = (void *)(a1 + *(int *)(a2 + 20));
  swift_bridgeObjectRelease();
  sub_100250CC4(v5[2], v5[3]);
  uint64_t v6 = v5[4];
  unint64_t v7 = v5[5];

  return sub_100250CC4(v6, v7);
}

uint64_t sub_1003E50B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NWEndpoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  uint64_t v11 = *(void *)(a2 + v7 + 16);
  unint64_t v12 = *(void *)(a2 + v7 + 24);
  swift_bridgeObjectRetain();
  sub_10025ADCC(v11, v12);
  v8[2] = v11;
  v8[3] = v12;
  uint64_t v13 = *(void *)(v9 + 32);
  unint64_t v14 = *(void *)(v9 + 40);
  sub_10025ADCC(v13, v14);
  v8[4] = v13;
  v8[5] = v14;
  return a1;
}

uint64_t sub_1003E516C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NWEndpoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = v9[2];
  unint64_t v11 = v9[3];
  sub_10025ADCC(v10, v11);
  uint64_t v12 = v8[2];
  unint64_t v13 = v8[3];
  v8[2] = v10;
  v8[3] = v11;
  sub_100250CC4(v12, v13);
  uint64_t v14 = v9[4];
  unint64_t v15 = v9[5];
  sub_10025ADCC(v14, v15);
  uint64_t v16 = v8[4];
  unint64_t v17 = v8[5];
  v8[4] = v14;
  v8[5] = v15;
  sub_100250CC4(v16, v17);
  return a1;
}

uint64_t sub_1003E5248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NWEndpoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  return a1;
}

uint64_t sub_1003E52D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NWEndpoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(v9 + 8);
  *uint64_t v8 = *(void *)v9;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = v8[2];
  unint64_t v12 = v8[3];
  *((_OWORD *)v8 + 1) = *(_OWORD *)(v9 + 16);
  sub_100250CC4(v11, v12);
  uint64_t v13 = v8[4];
  unint64_t v14 = v8[5];
  *((_OWORD *)v8 + 2) = *(_OWORD *)(v9 + 32);
  sub_100250CC4(v13, v14);
  return a1;
}

uint64_t sub_1003E5380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003E5394);
}

uint64_t sub_1003E5394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NWEndpoint();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1003E5458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003E546C);
}

uint64_t sub_1003E546C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for NWEndpoint();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for SDTempPairingEndpoint(uint64_t a1)
{
  return sub_10000B93C(a1, qword_1009727D0);
}

uint64_t sub_1003E554C()
{
  uint64_t result = type metadata accessor for NWEndpoint();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1003E55E4()
{
  unint64_t result = qword_100972808;
  if (!qword_100972808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100972808);
  }
  return result;
}

uint64_t sub_1003E5638(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  a2 += OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_identifier;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    char v6 = static UUID.== infix(_:_:)();
    swift_release();
    if (v6) {
      return v5;
    }
    uint64_t v7 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v7 == v4) {
      return 0;
    }
  }
}

void *sub_1003E5754(uint64_t a1, uint64_t a2)
{
  uint64_t v72 = type metadata accessor for SDTempPairingEndpoint(0);
  uint64_t v4 = __chkstk_darwin(v72);
  uint64_t v64 = (uint64_t)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v73 = (uint64_t)v55 - v7;
  unint64_t result = _swiftEmptyArrayStorage;
  char v76 = _swiftEmptyArrayStorage;
  uint64_t v60 = *(void *)(a1 + 16);
  if (v60)
  {
    uint64_t v9 = 0;
    uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v65 = *(void *)(v6 + 72);
    uint64_t v56 = (v10 + 32) & ~v10;
    uint64_t v59 = a1 + v56;
    uint64_t v11 = a2 & 0xFFFFFFFFFFFFFF8;
    uint64_t v57 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0) {
      uint64_t v11 = a2;
    }
    v55[1] = v11;
    unint64_t v71 = a2 & 0xC000000000000001;
    unint64_t v12 = _swiftEmptyArrayStorage;
    unint64_t v58 = (unint64_t)a2 >> 62;
    uint64_t v69 = a2;
    while (1)
    {
      sub_1003E6BBC(v59 + v65 * v9, v73);
      if (v58)
      {
        swift_bridgeObjectRetain();
        uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v66 = v12;
        uint64_t v67 = v9;
        if (!v14)
        {
LABEL_60:
          swift_bridgeObjectRelease();
          sub_1003E6C7C(v73, v64);
          uint64_t v51 = v66;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v13 = v67;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_1002556C4(0, v51[2] + 1, 1);
          }
          unint64_t v12 = v76;
          unint64_t v54 = v76[2];
          unint64_t v53 = v76[3];
          if (v54 >= v53 >> 1)
          {
            sub_1002556C4(v53 > 1, v54 + 1, 1);
            unint64_t v12 = v76;
          }
          v12[2] = v54 + 1;
          sub_1003E6C7C(v64, (uint64_t)v12 + v56 + v54 * v65);
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v14 = *(void *)(v57 + 16);
        swift_bridgeObjectRetain();
        uint64_t v66 = v12;
        uint64_t v67 = v9;
        if (!v14) {
          goto LABEL_60;
        }
      }
      uint64_t v15 = 4;
      uint64_t v70 = v14;
      while (2)
      {
        if (v71) {
          id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v16 = *(id *)(a2 + 8 * v15);
        }
        unint64_t v17 = v16;
        uint64_t v18 = v15 - 3;
        if (__OFADD__(v15 - 4, 1))
        {
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          __break(1u);
        }
        id v19 = [v16 edPKData];
        if (!v19)
        {
          uint64_t v28 = v73 + *(int *)(v72 + 20);
          uint64_t v29 = *(void *)(v28 + 16);
          unint64_t v30 = *(void *)(v28 + 24);
          sub_10025ADCC(v29, v30);
          sub_100250CB0(0, 0xF000000000000000);
          sub_100250CB0(v29, v30);
          goto LABEL_13;
        }
        os_log_type_t v20 = v19;
        uint64_t v21 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v23 = v22;

        uint64_t v24 = v73 + *(int *)(v72 + 20);
        uint64_t v25 = *(void *)(v24 + 16);
        unint64_t v26 = *(void *)(v24 + 24);
        uint64_t v27 = 0;
        switch(v23 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v21), v21)) {
              goto LABEL_68;
            }
            uint64_t v27 = HIDWORD(v21) - (int)v21;
LABEL_26:
            sub_10025ADCC(v21, v23);
            break;
          case 2uLL:
            uint64_t v32 = *(void *)(v21 + 16);
            uint64_t v31 = *(void *)(v21 + 24);
            uint64_t v27 = v31 - v32;
            if (!__OFSUB__(v31, v32)) {
              goto LABEL_26;
            }
            goto LABEL_69;
          case 3uLL:
            break;
          default:
            uint64_t v27 = BYTE6(v23);
            break;
        }
        switch(v26 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v25), v25)) {
              goto LABEL_71;
            }
            if (v27 == HIDWORD(v25) - v25) {
              goto LABEL_35;
            }
            goto LABEL_12;
          case 2uLL:
            uint64_t v34 = *(void *)(v25 + 16);
            uint64_t v33 = *(void *)(v25 + 24);
            BOOL v35 = __OFSUB__(v33, v34);
            uint64_t v36 = v33 - v34;
            if (v35) {
              goto LABEL_70;
            }
            if (v27 != v36)
            {
LABEL_12:
              sub_100250CC4(v21, v23);
              sub_100250CC4(v21, v23);
              a2 = v69;
              uint64_t v14 = v70;
LABEL_13:

LABEL_14:
              ++v15;
              if (v18 == v14) {
                goto LABEL_60;
              }
              continue;
            }
LABEL_35:
            if (v27 < 1)
            {
LABEL_5:
              sub_100250CC4(v21, v23);
              sub_100250CC4(v21, v23);
              a2 = v69;
              swift_bridgeObjectRelease();
            }
            else
            {
              switch(v23 >> 62)
              {
                case 1uLL:
                  if (v21 >> 32 < (int)v21) {
                    goto LABEL_72;
                  }
                  uint64_t v63 = (v21 >> 32) - (int)v21;
                  sub_10025ADCC(v25, v26);
                  sub_10025ADCC(v21, v23);
                  sub_10025ADCC(v25, v26);
                  uint64_t v45 = __DataStorage._bytes.getter();
                  if (v45)
                  {
                    uint64_t v62 = v45;
                    uint64_t v46 = __DataStorage._offset.getter();
                    if (__OFSUB__((int)v21, v46)) {
                      goto LABEL_75;
                    }
                    uint64_t v47 = v62 + (int)v21 - v46;
                  }
                  else
                  {
                    uint64_t v47 = 0;
                  }
                  __DataStorage._length.getter();
                  uint64_t v50 = v68;
                  sub_10031B32C(v47, v25, v26, (char *)__s1);
                  uint64_t v68 = v50;
                  if (v50) {
                    goto LABEL_78;
                  }
                  sub_100250CC4(v25, v26);
                  sub_100250CC4(v21, v23);
                  sub_100250CC4(v25, v26);
                  sub_100250CC4(v21, v23);
                  sub_100250CC4(v21, v23);
                  char v49 = __s1[0];

LABEL_57:
                  a2 = v69;
                  uint64_t v14 = v70;
                  if ((v49 & 1) == 0) {
                    goto LABEL_14;
                  }
LABEL_58:
                  swift_bridgeObjectRelease();
                  break;
                case 2uLL:
                  uint64_t v38 = *(void *)(v21 + 16);
                  uint64_t v62 = *(void *)(v21 + 24);
                  uint64_t v63 = v38;
                  sub_10025ADCC(v25, v26);
                  sub_10025ADCC(v25, v26);
                  swift_retain();
                  swift_retain();
                  uint64_t v39 = __DataStorage._bytes.getter();
                  id v61 = v17;
                  if (v39)
                  {
                    uint64_t v40 = v39;
                    uint64_t v41 = __DataStorage._offset.getter();
                    uint64_t v42 = v63;
                    if (__OFSUB__(v63, v41)) {
                      goto LABEL_74;
                    }
                    uint64_t v43 = v40 + v63 - v41;
                  }
                  else
                  {
                    uint64_t v43 = 0;
                    uint64_t v42 = v63;
                  }
                  if (__OFSUB__(v62, v42)) {
                    goto LABEL_73;
                  }
                  __DataStorage._length.getter();
                  uint64_t v48 = v68;
                  sub_10031B32C(v43, v25, v26, (char *)__s1);
                  uint64_t v68 = v48;
                  if (v48) {
                    goto LABEL_77;
                  }
                  sub_100250CC4(v25, v26);
                  swift_release();
                  swift_release();
                  sub_100250CC4(v25, v26);
                  sub_100250CC4(v21, v23);
                  char v49 = __s1[0];
                  sub_100250CC4(v21, v23);

                  goto LABEL_57;
                case 3uLL:
                  memset(__s1, 0, 14);
                  sub_10025ADCC(v25, v26);
                  sub_10025ADCC(v25, v26);
                  uint64_t v44 = v68;
                  sub_10031B32C((uint64_t)__s1, v25, v26, &v74);
                  uint64_t v68 = v44;
                  if (v44) {
                    goto LABEL_76;
                  }
                  sub_100250CC4(v25, v26);
                  sub_100250CC4(v25, v26);
                  sub_100250CC4(v21, v23);
                  sub_100250CC4(v21, v23);

                  a2 = v69;
                  uint64_t v14 = v70;
                  if (v74 == 1) {
                    goto LABEL_58;
                  }
                  goto LABEL_14;
                default:
                  __s1[0] = v21;
                  LOWORD(__s1[1]) = v23;
                  BYTE2(__s1[1]) = BYTE2(v23);
                  BYTE3(__s1[1]) = BYTE3(v23);
                  BYTE4(__s1[1]) = BYTE4(v23);
                  BYTE5(__s1[1]) = BYTE5(v23);
                  sub_10025ADCC(v25, v26);
                  sub_10025ADCC(v25, v26);
                  uint64_t v37 = v68;
                  sub_10031B32C((uint64_t)__s1, v25, v26, &v74);
                  uint64_t v68 = v37;
                  if (v37)
                  {
LABEL_76:
                    sub_100250CC4(v25, v26);
                    __break(1u);
LABEL_77:
                    sub_100250CC4(v25, v26);
                    swift_release();
                    swift_release();
                    __break(1u);
LABEL_78:
                    sub_100250CC4(v25, v26);
                    sub_100250CC4(v21, v23);
                    __break(1u);
                    JUMPOUT(0x1003E5FDCLL);
                  }
                  sub_100250CC4(v25, v26);
                  sub_100250CC4(v25, v26);
                  sub_100250CC4(v21, v23);
                  sub_100250CC4(v21, v23);

                  a2 = v69;
                  uint64_t v14 = v70;
                  if (v74) {
                    goto LABEL_58;
                  }
                  goto LABEL_14;
              }
            }
            sub_1003E6C20(v73);
            unint64_t v12 = v66;
            uint64_t v13 = v67;
LABEL_7:
            uint64_t v9 = v13 + 1;
            if (v9 == v60) {
              return v76;
            }
            break;
          case 3uLL:
            if (v27) {
              goto LABEL_12;
            }
            goto LABEL_5;
          default:
            if (v27 == BYTE6(v26)) {
              goto LABEL_35;
            }
            goto LABEL_12;
        }
        break;
      }
    }
  }
  return result;
}

void *sub_1003E600C(uint64_t a1, uint64_t a2)
{
  uint64_t v81 = type metadata accessor for SDTempPairingEndpoint(0);
  uint64_t v4 = __chkstk_darwin(v81);
  uint64_t v71 = (uint64_t)v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v63 - v7;
  __chkstk_darwin(v6);
  uint64_t v11 = (char *)v63 - v10;
  unint64_t result = _swiftEmptyArrayStorage;
  Class v84 = _swiftEmptyArrayStorage;
  uint64_t v68 = *(void *)(a1 + 16);
  if (v68)
  {
    uint64_t v13 = 0;
    uint64_t v14 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v72 = *(void *)(v9 + 72);
    uint64_t v64 = (v14 + 32) & ~v14;
    uint64_t v67 = a1 + v64;
    uint64_t v15 = a2 & 0xFFFFFFFFFFFFFF8;
    uint64_t v65 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0) {
      uint64_t v15 = a2;
    }
    v63[1] = v15;
    unint64_t v80 = a2 & 0xC000000000000001;
    id v16 = _swiftEmptyArrayStorage;
    unint64_t v66 = (unint64_t)a2 >> 62;
    NSString v79 = (char *)v63 - v10;
    char v76 = v8;
    uint64_t v77 = a2;
    while (1)
    {
      uint64_t v74 = v13;
      sub_1003E6BBC(v67 + v72 * v13, (uint64_t)v11);
      if (!v66)
      {
        uint64_t v18 = *(void *)(v65 + 16);
        swift_bridgeObjectRetain();
        uint64_t v73 = v16;
        if (v18) {
          break;
        }
        goto LABEL_61;
      }
      swift_bridgeObjectRetain();
      uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v73 = v16;
      if (v18) {
        break;
      }
LABEL_61:
      swift_bridgeObjectRelease();
      sub_1003E6C7C((uint64_t)v11, v71);
      uint64_t v60 = v73;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1002556C4(0, v60[2] + 1, 1);
      }
      id v16 = v84;
      unint64_t v62 = v84[2];
      unint64_t v61 = v84[3];
      if (v62 >= v61 >> 1)
      {
        sub_1002556C4(v61 > 1, v62 + 1, 1);
        id v16 = v84;
      }
      void v16[2] = v62 + 1;
      sub_1003E6C7C(v71, (uint64_t)v16 + v64 + v62 * v72);
      uint64_t v11 = v79;
LABEL_6:
      uint64_t v13 = v74 + 1;
      if (v74 + 1 == v68) {
        return v84;
      }
    }
    uint64_t v19 = 4;
    uint64_t v78 = v18;
    while (1)
    {
      if (v80) {
        id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v23 = *(id *)(a2 + 8 * v19);
      }
      uint64_t v24 = v23;
      uint64_t v25 = v19 - 3;
      if (__OFADD__(v19 - 4, 1))
      {
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
      }
      id v26 = [v23 edPKData];
      if (!v26)
      {
        os_log_type_t v20 = &v11[*(int *)(v81 + 20)];
        uint64_t v21 = *((void *)v20 + 2);
        unint64_t v22 = *((void *)v20 + 3);
        sub_10025ADCC(v21, v22);
        sub_100250CB0(0, 0xF000000000000000);
        sub_100250CB0(v21, v22);
LABEL_11:
        sub_1003E6BBC((uint64_t)v11, (uint64_t)v8);
        goto LABEL_12;
      }
      uint64_t v27 = v26;
      uint64_t v28 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v30 = v29;

      uint64_t v31 = &v11[*(int *)(v81 + 20)];
      uint64_t v33 = *((void *)v31 + 2);
      unint64_t v32 = *((void *)v31 + 3);
      uint64_t v34 = 0;
      switch(v30 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v28), v28)) {
            goto LABEL_70;
          }
          uint64_t v34 = HIDWORD(v28) - (int)v28;
LABEL_23:
          sub_10025ADCC(v28, v30);
          break;
        case 2uLL:
          uint64_t v36 = *(void *)(v28 + 16);
          uint64_t v35 = *(void *)(v28 + 24);
          uint64_t v34 = v35 - v36;
          if (!__OFSUB__(v35, v36)) {
            goto LABEL_23;
          }
          goto LABEL_69;
        case 3uLL:
          break;
        default:
          uint64_t v34 = BYTE6(v30);
          break;
      }
      switch(v32 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v33), v33)) {
            goto LABEL_71;
          }
          if (v34 == HIDWORD(v33) - v33) {
            goto LABEL_34;
          }
          goto LABEL_38;
        case 2uLL:
          uint64_t v38 = *(void *)(v33 + 16);
          uint64_t v37 = *(void *)(v33 + 24);
          BOOL v39 = __OFSUB__(v37, v38);
          uint64_t v40 = v37 - v38;
          if (v39) {
            goto LABEL_72;
          }
          if (v34 != v40)
          {
LABEL_38:
            sub_100250CC4(v28, v30);
            sub_100250CC4(v28, v30);
            uint64_t v8 = v76;
            a2 = v77;
            uint64_t v18 = v78;
            uint64_t v11 = v79;
            goto LABEL_11;
          }
LABEL_34:
          if (v34 < 1)
          {
LABEL_39:
            sub_100250CC4(v28, v30);
            sub_100250CC4(v28, v30);
            uint64_t v8 = v76;
            sub_1003E6BBC((uint64_t)v79, (uint64_t)v76);
            a2 = v77;
            uint64_t v18 = v78;
          }
          else
          {
            switch(v30 >> 62)
            {
              case 1uLL:
                if (v28 >> 32 < (int)v28) {
                  goto LABEL_73;
                }
                uint64_t v70 = (v28 >> 32) - (int)v28;
                sub_10025ADCC(v33, v32);
                sub_10025ADCC(v28, v30);
                sub_10025ADCC(v33, v32);
                uint64_t v51 = __DataStorage._bytes.getter();
                if (v51)
                {
                  uint64_t v69 = v51;
                  uint64_t v52 = __DataStorage._offset.getter();
                  if (__OFSUB__((int)v28, v52)) {
                    goto LABEL_76;
                  }
                  uint64_t v53 = v69 + (int)v28 - v52;
                }
                else
                {
                  uint64_t v53 = 0;
                }
                __DataStorage._length.getter();
                uint64_t v55 = v75;
                sub_10031B32C(v53, v33, v32, (char *)__s1);
                uint64_t v75 = v55;
                if (v55) {
                  goto LABEL_79;
                }
                sub_100250CC4(v33, v32);
                sub_100250CC4(v28, v30);
                sub_100250CC4(v33, v32);
                sub_100250CC4(v28, v30);
                sub_100250CC4(v28, v30);
                unsigned __int8 v42 = __s1[0];
                break;
              case 2uLL:
                uint64_t v43 = *(void *)(v28 + 16);
                uint64_t v69 = *(void *)(v28 + 24);
                uint64_t v70 = v43;
                sub_10025ADCC(v33, v32);
                sub_10025ADCC(v33, v32);
                swift_retain();
                swift_retain();
                uint64_t v44 = __DataStorage._bytes.getter();
                if (v44)
                {
                  uint64_t v45 = v44;
                  uint64_t v46 = __DataStorage._offset.getter();
                  uint64_t v47 = v70;
                  if (__OFSUB__(v70, v46)) {
                    goto LABEL_75;
                  }
                  uint64_t v48 = v45 + v70 - v46;
                }
                else
                {
                  uint64_t v48 = 0;
                  uint64_t v47 = v70;
                }
                if (__OFSUB__(v69, v47)) {
                  goto LABEL_74;
                }
                uint64_t v70 = v48;
                __DataStorage._length.getter();
                uint64_t v54 = v75;
                sub_10031B32C(v70, v33, v32, (char *)__s1);
                uint64_t v75 = v54;
                if (v54) {
                  goto LABEL_78;
                }
                sub_100250CC4(v33, v32);
                swift_release();
                swift_release();
                sub_100250CC4(v33, v32);
                sub_100250CC4(v28, v30);
                unsigned __int8 v42 = __s1[0];
                sub_100250CC4(v28, v30);
                break;
              case 3uLL:
                memset(__s1, 0, 14);
                sub_10025ADCC(v33, v32);
                sub_10025ADCC(v33, v32);
                uint64_t v49 = v75;
                sub_10031B32C((uint64_t)__s1, v33, v32, (char *)&v82);
                uint64_t v75 = v49;
                if (v49) {
                  goto LABEL_77;
                }
                sub_100250CC4(v33, v32);
                sub_100250CC4(v33, v32);
                sub_100250CC4(v28, v30);
                sub_100250CC4(v28, v30);
                int v50 = v82;
                uint64_t v11 = v79;
                uint64_t v8 = v76;
                sub_1003E6BBC((uint64_t)v79, (uint64_t)v76);
                a2 = v77;
                uint64_t v18 = v78;
                if (v50 == 1) {
                  goto LABEL_58;
                }
                goto LABEL_12;
              default:
                __s1[0] = (id)v28;
                LOWORD(__s1[1]) = v30;
                BYTE2(__s1[1]) = BYTE2(v30);
                BYTE3(__s1[1]) = BYTE3(v30);
                BYTE4(__s1[1]) = BYTE4(v30);
                BYTE5(__s1[1]) = BYTE5(v30);
                sub_10025ADCC(v33, v32);
                sub_10025ADCC(v33, v32);
                uint64_t v41 = v75;
                sub_10031B32C((uint64_t)__s1, v33, v32, (char *)&v82);
                uint64_t v75 = v41;
                if (v41)
                {
LABEL_77:
                  sub_100250CC4(v33, v32);
                  __break(1u);
LABEL_78:
                  sub_100250CC4(v33, v32);
                  swift_release();
                  swift_release();
                  __break(1u);
LABEL_79:
                  sub_100250CC4(v33, v32);
                  sub_100250CC4(v28, v30);
                  __break(1u);
                  JUMPOUT(0x1003E6994);
                }
                sub_100250CC4(v33, v32);
                sub_100250CC4(v33, v32);
                sub_100250CC4(v28, v30);
                sub_100250CC4(v28, v30);
                unsigned __int8 v42 = v82;
                break;
            }
            uint64_t v11 = v79;
            uint64_t v8 = v76;
            sub_1003E6BBC((uint64_t)v79, (uint64_t)v76);
            a2 = v77;
            uint64_t v18 = v78;
            if ((v42 & 1) == 0) {
              goto LABEL_12;
            }
          }
LABEL_58:
          Class isa = Data._bridgeToObjectiveC()().super.isa;
          Class v57 = Data._bridgeToObjectiveC()().super.isa;
          __s1[0] = 0;
          unsigned int v58 = [v24 verifyAuthTag:isa data:v57 type:1 error:__s1];

          if (v58)
          {
            id v17 = __s1[0];
            sub_1003E6C20((uint64_t)v8);

            swift_bridgeObjectRelease();
            uint64_t v11 = v79;
            sub_1003E6C20((uint64_t)v79);
            id v16 = v73;
            goto LABEL_6;
          }
          id v59 = __s1[0];
          _convertNSErrorToError(_:)();

          swift_willThrow();
          swift_errorRelease();
          uint64_t v75 = 0;
          uint64_t v11 = v79;
LABEL_12:
          sub_1003E6C20((uint64_t)v8);

          ++v19;
          if (v25 == v18) {
            goto LABEL_61;
          }
          break;
        case 3uLL:
          if (!v34) {
            goto LABEL_39;
          }
          goto LABEL_38;
        default:
          if (v34 != BYTE6(v32)) {
            goto LABEL_38;
          }
          goto LABEL_34;
      }
    }
  }
  return result;
}

void sub_1003E69C4()
{
  id v0 = [self sharedNearbyAgent];
  id v1 = [v0 adHocPairedDeviceIdentities];

  if (!v1) {
    goto LABEL_20;
  }
  sub_10000B740(0, (unint64_t *)&unk_100972810);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3) {
      goto LABEL_4;
    }
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_18;
  }
LABEL_4:
  if (v3 >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(v2 + 8 * v4 + 32);
      }
      uint64_t v7 = v6;
      id v8 = [v6 name];
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_100253208(0, *((void *)v5 + 2) + 1, 1, v5);
        }
        unint64_t v14 = *((void *)v5 + 2);
        unint64_t v13 = *((void *)v5 + 3);
        if (v14 >= v13 >> 1) {
          uint64_t v5 = sub_100253208((char *)(v13 > 1), v14 + 1, 1, v5);
        }
        *((void *)v5 + 2) = v14 + 1;
        uint64_t v15 = &v5[16 * v14];
        *((void *)v15 + 4) = v10;
        *((void *)v15 + 5) = v12;
      }
      else
      {
      }
      ++v4;
    }
    while (v3 != v4);
    goto LABEL_18;
  }
  __break(1u);
LABEL_20:
  __break(1u);
}

uint64_t sub_1003E6BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDTempPairingEndpoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003E6C20(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDTempPairingEndpoint(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003E6C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDTempPairingEndpoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003E6CE0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003E6D18()
{
  return sub_1003E4600();
}

uint64_t sub_1003E6D20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003E6D30()
{
  return swift_release();
}

uint64_t sub_1003E6D38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003E6D84(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F4;
  return sub_1003E47BC(a1, v4, v5, v6);
}

void sub_1003E6E38(void *a1, char a2)
{
}

uint64_t sub_1003E6E40()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003E6E78(uint64_t a1)
{
  return sub_1003E2428(a1, *(void **)(v1 + 16));
}

uint64_t sub_1003E6E80(uint64_t a1)
{
  return sub_1003E2BCC(a1);
}

uint64_t sub_1003E6E88()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003E6ED0()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_10000A6F0;
  *(_OWORD *)(v2 + 16) = v3;
  return _swift_task_switch(sub_1003E2D1C, 0, 0);
}

uint64_t sub_1003E6F7C(uint64_t a1)
{
  uint64_t v2 = sub_10000A844(&qword_100972850);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1003E6FDC(uint64_t *a1, uint64_t a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = sub_1003E5638(v5, a2);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (!v2)
  {
    if (v8)
    {
      unint64_t v18 = *a1;
      if (v18 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        return *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
    }
    else
    {
      uint64_t v9 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_54;
      }
      if ((unint64_t)*a1 >> 62)
      {
LABEL_55:
        swift_bridgeObjectRetain();
        uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v9 != v20) {
          goto LABEL_6;
        }
      }
      else if (v9 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_6:
        a2 += OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_identifier;
        for (unint64_t i = v6 + 5; ; ++i)
        {
          unint64_t v11 = i - 4;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_45:
              __break(1u);
LABEL_46:
              __break(1u);
LABEL_47:
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
              goto LABEL_55;
            }
            if (v11 >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_45;
            }
            swift_retain();
          }
          uint64_t v9 = static UUID.== infix(_:_:)();
          swift_release();
          if ((v9 & 1) == 0) {
            break;
          }
LABEL_32:
          uint64_t v9 = i - 3;
          if (__OFADD__(v11, 1)) {
            goto LABEL_46;
          }
          if ((unint64_t)*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v17 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v9 == v17) {
            return v6;
          }
        }
        if (v11 == v6)
        {
LABEL_31:
          if (__OFADD__(v6++, 1)) {
            goto LABEL_47;
          }
          goto LABEL_32;
        }
        uint64_t v9 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v9 = *a1;
          if ((*a1 & 0xC000000000000001) == 0)
          {
LABEL_17:
            if ((v11 & 0x8000000000000000) != 0) {
              goto LABEL_50;
            }
            if (v11 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_51;
            }
            uint64_t v13 = *(void *)(v9 + 8 * i);
            swift_retain();
            goto LABEL_20;
          }
        }
        else
        {
          if ((v6 & 0x8000000000000000) != 0) {
            goto LABEL_48;
          }
          if (v6 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_49;
          }
          uint64_t v12 = *(void *)(v9 + 8 * v6 + 32);
          swift_retain();
          if ((v9 & 0xC000000000000001) == 0) {
            goto LABEL_17;
          }
        }
        uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v9 = *a1;
LABEL_20:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v9;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v9 < 0 || (v9 & 0x4000000000000000) != 0)
        {
          uint64_t v9 = sub_1002AD470(v9);
          *a1 = v9;
        }
        *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v13;
        swift_release();
        specialized Array._endMutation()();
        uint64_t v9 = *a1;
        int v15 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v9;
        if (!v15 || v9 < 0 || (v9 & 0x4000000000000000) != 0)
        {
          uint64_t v9 = sub_1002AD470(v9);
          *a1 = v9;
        }
        if ((v11 & 0x8000000000000000) != 0) {
          goto LABEL_52;
        }
        if (v11 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_53;
        }
        *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * i) = v12;
        swift_release();
        specialized Array._endMutation()();
        goto LABEL_31;
      }
    }
  }
  return v6;
}

uint64_t sub_1003E7318(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_100972858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003E7384()
{
  uint64_t v2 = *(void *)(v0 + 32);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *long long v3 = v1;
  v3[1] = sub_10000A6F0;
  v3[2] = v2;
  return _swift_task_switch(sub_1003E28AC, 0, 0);
}

uint64_t sub_1003E742C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003E746C(uint64_t a1)
{
  sub_1003E1E3C(a1, *(void **)(v1 + 16));
}

uint64_t sub_1003E7474()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003E74B4(void *a1)
{
  sub_1003E1850(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1003E74C4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100972890);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100972890);
  if (qword_100969CD8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946D8);
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1003E758C()
{
  uint64_t v1 = *(int *)(_s6UnpairV23InitialInitiatorContextVMa(0) + 24);
  uint64_t v2 = *(void **)(v0 + v1);
  if (v2)
  {
    id v3 = *(id *)(v0 + v1);
LABEL_5:
    id v5 = v2;
    return v3;
  }
  id result = [objc_allocWithZone((Class)SDAuthenticationPairingDisable) init];
  if (result)
  {
    *(void *)(v0 + v1) = result;
    id v3 = result;
    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003E75FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10000A844(&qword_10096BBB0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100770AD0;
  if (qword_100969DA8 != -1) {
    swift_once();
  }
  *(void *)(v4 + 56) = &type metadata for SDAuthentication.Operation.BuildPairingDisableMessage;
  *(void *)(v4 + 64) = &off_100971648;
  *(void *)(v4 + 96) = &type metadata for SDAuthentication.Operation.UnpairRemoteLTK;
  *(void *)(v4 + 104) = &off_100971628;
  *a2 = v4;
  id v5 = (int *)_s6UnpairV23InitialInitiatorContextVMa(0);
  *(uint64_t *)((char *)a2 + v5[6]) = 0;
  *((unsigned char *)a2 + v5[7]) = 8;
  if (qword_100969DA0 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_100972890);
  char v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Start Key initiated pairing disable flow", v9, 2u);
    swift_slowDealloc();
  }

  return sub_1003EFC2C(a1, (uint64_t)a2 + v5[5], (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
}

uint64_t _s6UnpairV23InitialInitiatorContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100972A28);
}

uint64_t sub_1003E77D0(uint64_t a1, uint64_t a2)
{
  return sub_1003E7B00(a1, a2, (uint64_t (*)(void))sub_1003E758C);
}

uint64_t sub_1003E77FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003EFC94(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
}

id sub_1003E7834()
{
  uint64_t v1 = *(int *)(_s6UnpairV27HandlePairingDisableContextVMa(0) + 28);
  uint64_t v2 = *(void **)(v0 + v1);
  if (v2)
  {
    id v3 = *(id *)(v0 + v1);
LABEL_5:
    id v5 = v2;
    return v3;
  }
  id result = [objc_allocWithZone((Class)SDAuthenticationConfirmation) init];
  if (result)
  {
    *(void *)(v0 + v1) = result;
    id v3 = result;
    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_1003E78A4(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_10000A844(&qword_10096BBB0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100770AD0;
  if (qword_100969DA8 != -1) {
    swift_once();
  }
  *(void *)(v6 + 56) = &type metadata for SDAuthentication.Operation.ProcessUnpairRequest;
  *(void *)(v6 + 64) = &off_100971EE8;
  *(void *)(v6 + 96) = &type metadata for SDAuthentication.Operation.SendConfirmation;
  *(void *)(v6 + 104) = &off_100971EC8;
  *a3 = v6;
  char v7 = (int *)_s6UnpairV27HandlePairingDisableContextVMa(0);
  uint64_t v8 = v7[7];
  *(uint64_t *)((char *)a3 + v8) = 0;
  *((unsigned char *)a3 + v7[8]) = 2;
  uint64_t v9 = _s6UnpairV23InitialResponderContextVMa(0);
  uint64_t v10 = (uint64_t)a3 + v7[5];
  sub_1003EFC94(a2 + *(int *)(v9 + 20), v10, (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
  if ([a1 hasPairingID]
    && (id v11 = [a1 pairingID]) != 0)
  {
    uint64_t v12 = v11;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;

    sub_1003EFCFC(a2, _s6UnpairV23InitialResponderContextVMa);
    id v16 = (uint64_t *)((char *)a3 + v7[6]);
    *id v16 = v13;
    v16[1] = v15;
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v17 = 1;
    *(void *)(v17 + 8) = 0xD000000000000011;
    *(void *)(v17 + 16) = 0x80000001007BC8F0;
    swift_willThrow();

    sub_1003EFCFC(a2, _s6UnpairV23InitialResponderContextVMa);
    swift_bridgeObjectRelease();
    sub_1003EFCFC(v10, (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
  }
}

uint64_t sub_1003E7AD4(uint64_t a1, uint64_t a2)
{
  return sub_1003E7B00(a1, a2, (uint64_t (*)(void))sub_1003E7834);
}

uint64_t sub_1003E7B00(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v3 = (void *)a3();
  id v4 = [v3 data];

  if (v4)
  {
    uint64_t v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

    return v5;
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v7 = 10;
    *(void *)(v7 + 8) = 0xD00000000000001ALL;
    *(void *)(v7 + 16) = 0x80000001007B72F0;
    return swift_willThrow();
  }
}

uint64_t sub_1003E7BC4(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32));
}

uint64_t sub_1003E7BD0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_10000A844(&qword_10096BBB0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10076E7A0;
  if (qword_100969DA8 != -1) {
    swift_once();
  }
  *(void *)(v6 + 56) = &type metadata for SDAuthentication.Operation.HandleSucceededResult;
  *(void *)(v6 + 64) = &off_100971EA8;
  *a3 = v6;
  if ([a1 hasSuccess])
  {
    uint64_t v7 = a2 + *(int *)(_s6UnpairV23InitialInitiatorContextVMa(0) + 20);
    uint64_t v8 = _s6UnpairV25HandleConfirmationContextVMa(0);
    sub_1003EFC94(v7, (uint64_t)a3 + *(int *)(v8 + 20), (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
    LOBYTE(v7) = [a1 success];

    uint64_t result = sub_1003EFCFC(a2, _s6UnpairV23InitialInitiatorContextVMa);
    *((unsigned char *)a3 + *(int *)(v8 + 24)) = v7;
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v10 = 1;
    *(void *)(v10 + 8) = 0xD000000000000016;
    *(void *)(v10 + 16) = 0x80000001007B72D0;
    swift_willThrow();

    sub_1003EFCFC(a2, _s6UnpairV23InitialInitiatorContextVMa);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1003E7D88(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 24));
}

void sub_1003E7D94(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v51 = a3;
  uint64_t v46 = _s6UnpairV25HandleConfirmationContextVMa(0);
  __chkstk_darwin(v46);
  int v50 = (uint64_t *)((char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_10000A844(&qword_100972A68);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s6UnpairV23InitialInitiatorContextVMa(0);
  uint64_t v52 = *(void *)(v8 - 8);
  uint64_t v53 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v48 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v49 = (uint64_t)&v45 - v11;
  uint64_t v47 = _s6UnpairV27HandlePairingDisableContextVMa(0);
  __chkstk_darwin(v47);
  uint64_t v13 = (uint64_t *)((char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_10000A844(&qword_100972A70);
  __chkstk_darwin(v14 - 8);
  id v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = _s6UnpairV23InitialResponderContextVMa(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  id v23 = (char *)&v45 - v22;
  sub_100278C8C(a1, (uint64_t)v56);
  sub_10000A844(&qword_100977940);
  sub_10000B740(0, &qword_100972A78);
  if (!swift_dynamicCast())
  {
    uint64_t v30 = v55;
    sub_100278C8C(a1, (uint64_t)v56);
    sub_10000B740(0, &qword_10096BDE8);
    if (!swift_dynamicCast())
    {
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v40 = 10;
      *(void *)(v40 + 8) = 0xD00000000000001FLL;
      *(void *)(v40 + 16) = 0x80000001007B6FF0;
      swift_willThrow();
      return;
    }
    id v24 = v57;
    sub_100278C8C(v30, (uint64_t)v56);
    sub_10000A844(&qword_10096BDF0);
    uint64_t v31 = v53;
    int v32 = swift_dynamicCast();
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56);
    if (v32)
    {
      v33(v7, 0, 1, v31);
      uint64_t v34 = v49;
      sub_1003EFC2C((uint64_t)v7, v49, _s6UnpairV23InitialInitiatorContextVMa);
      uint64_t v35 = v48;
      sub_1003EFC94(v34, v48, _s6UnpairV23InitialInitiatorContextVMa);
      id v24 = v24;
      uint64_t v36 = v50;
      uint64_t v37 = v54;
      sub_1003E7BD0(v24, v35, v50);
      if (!v37)
      {
        uint64_t v43 = v51;
        v51[3] = v46;
        v43[4] = (uint64_t)&off_1008D9988;
        uint64_t v44 = sub_100278AE4(v43);
        sub_1003EFC2C((uint64_t)v36, (uint64_t)v44, _s6UnpairV25HandleConfirmationContextVMa);

        sub_1003EFCFC(v34, _s6UnpairV23InitialInitiatorContextVMa);
        return;
      }
      uint64_t v28 = _s6UnpairV23InitialInitiatorContextVMa;
      uint64_t v29 = v34;
      goto LABEL_9;
    }
    v33(v7, 1, 1, v31);
    sub_10000A7E8((uint64_t)v7, &qword_100972A68);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v38 = 10;
    BOOL v39 = "Invalid previous context as InitialInitiatorContext, message may be replayed";
LABEL_13:
    *(void *)(v38 + 8) = 0xD00000000000004CLL;
    *(void *)(v38 + 16) = (unint64_t)(v39 - 32) | 0x8000000000000000;
    swift_willThrow();
    goto LABEL_14;
  }
  id v24 = v57;
  sub_100278C8C(v55, (uint64_t)v56);
  sub_10000A844(&qword_10096BDF0);
  int v25 = swift_dynamicCast();
  id v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  if (!v25)
  {
    v26(v16, 1, 1, v17);
    sub_10000A7E8((uint64_t)v16, &qword_100972A70);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v38 = 10;
    BOOL v39 = "Invalid previous context as InitialResponderContext, message may be replayed";
    goto LABEL_13;
  }
  v26(v16, 0, 1, v17);
  sub_1003EFC2C((uint64_t)v16, (uint64_t)v23, _s6UnpairV23InitialResponderContextVMa);
  sub_1003EFC94((uint64_t)v23, (uint64_t)v21, _s6UnpairV23InitialResponderContextVMa);
  id v24 = v24;
  uint64_t v27 = v54;
  sub_1003E78A4(v24, (uint64_t)v21, v13);
  if (!v27)
  {
    uint64_t v41 = v51;
    v51[3] = v47;
    v41[4] = (uint64_t)&off_1008D9970;
    unsigned __int8 v42 = sub_100278AE4(v41);
    sub_1003EFC2C((uint64_t)v13, (uint64_t)v42, _s6UnpairV27HandlePairingDisableContextVMa);

    sub_1003EFCFC((uint64_t)v23, _s6UnpairV23InitialResponderContextVMa);
    return;
  }
  uint64_t v28 = _s6UnpairV23InitialResponderContextVMa;
  uint64_t v29 = (uint64_t)v23;
LABEL_9:
  sub_1003EFCFC(v29, v28);
LABEL_14:
}

uint64_t sub_1003E848C@<X0>(uint64_t a1@<X8>)
{
  return sub_1003EFC94(v1, a1, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
}

void sub_1003E84C0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

uint64_t sub_1003E84D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003E84EC);
}

uint64_t sub_1003E84EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SDAuthenticationCommonOperationInput();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1003E85B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003E85C4);
}

uint64_t sub_1003E85C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SDAuthenticationCommonOperationInput();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t _s6UnpairV4FlowVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100972900);
}

uint64_t sub_1003E86A4()
{
  uint64_t result = type metadata accessor for SDAuthenticationCommonOperationInput();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1003E8748(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for Date();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    uint64_t v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v14 = v13[5];
    uint64_t v15 = &v7[v14];
    id v16 = &v8[v14];
    if (v11(&v8[v14], 1, v9))
    {
      uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v16, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
    }
    uint64_t v18 = v13[6];
    uint64_t v19 = &v7[v18];
    uint64_t v20 = &v8[v18];
    if (v11(&v8[v18], 1, v9))
    {
      uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v20, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
    }
    uint64_t v22 = v13[7];
    id v23 = &v7[v22];
    id v24 = &v8[v22];
    if (v11(&v8[v22], 1, v9))
    {
      uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
    }
    uint64_t v26 = v13[8];
    uint64_t v27 = &v7[v26];
    uint64_t v28 = &v8[v26];
    if (v11(&v8[v26], 1, v9))
    {
      uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v27, v28, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
    }
    uint64_t v30 = v13[9];
    uint64_t v31 = &v7[v30];
    int v32 = &v8[v30];
    if (v11(&v8[v30], 1, v9))
    {
      uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v31, v32, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
    }
    uint64_t v34 = v13[10];
    uint64_t v35 = &v7[v34];
    uint64_t v36 = &v8[v34];
    if (v11(&v8[v34], 1, v9))
    {
      uint64_t v37 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
    }
    uint64_t v38 = v13[11];
    BOOL v39 = &v7[v38];
    uint64_t v40 = &v8[v38];
    if (v11(&v8[v38], 1, v9))
    {
      uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v39, v40, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v9);
    }
    uint64_t v42 = v13[12];
    uint64_t v43 = &v7[v42];
    uint64_t v44 = &v8[v42];
    if (v11(&v8[v42], 1, v9))
    {
      uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v43, v44, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0, 1, v9);
    }
    v7[v13[13]] = v8[v13[13]];
    uint64_t v46 = v13[14];
    uint64_t v47 = &v7[v46];
    uint64_t v48 = &v8[v46];
    if (v11(&v8[v46], 1, v9))
    {
      uint64_t v49 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
    }
    uint64_t v50 = v13[15];
    uint64_t v51 = &v7[v50];
    uint64_t v52 = &v8[v50];
    if (v11(&v8[v50], 1, v9))
    {
      uint64_t v53 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v51, v52, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v51, 0, 1, v9);
    }
    uint64_t v54 = v13[16];
    uint64_t v55 = &v7[v54];
    uint64_t v56 = &v8[v54];
    if (v11(&v8[v54], 1, v9))
    {
      uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v55, v56, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v55, 0, 1, v9);
    }
    uint64_t v58 = v13[17];
    id v59 = &v7[v58];
    uint64_t v60 = &v8[v58];
    if (v11(&v8[v58], 1, v9))
    {
      uint64_t v61 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
    }
    uint64_t v62 = v13[18];
    uint64_t v63 = &v7[v62];
    uint64_t v64 = &v8[v62];
    *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
    v63[4] = v64[4];
    v7[v13[19]] = v8[v13[19]];
    uint64_t v65 = v13[20];
    unint64_t v66 = &v7[v65];
    uint64_t v67 = &v8[v65];
    uint64_t v68 = *((void *)v67 + 1);
    *(void *)unint64_t v66 = *(void *)v67;
    *((void *)v66 + 1) = v68;
    uint64_t v69 = v13[21];
    uint64_t v70 = &v7[v69];
    uint64_t v71 = &v8[v69];
    uint64_t v72 = *((void *)v71 + 1);
    *(void *)uint64_t v70 = *(void *)v71;
    *((void *)v70 + 1) = v72;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v5;
}

void *sub_1003E909C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  uint64_t v22 = &v6[v20];
  if (v9(&v6[v20], 1, v7))
  {
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
  }
  uint64_t v24 = v11[8];
  uint64_t v25 = &v5[v24];
  uint64_t v26 = &v6[v24];
  if (v9(&v6[v24], 1, v7))
  {
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v9(&v6[v28], 1, v7))
  {
    uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
  }
  uint64_t v32 = v11[10];
  uint64_t v33 = &v5[v32];
  uint64_t v34 = &v6[v32];
  if (v9(&v6[v32], 1, v7))
  {
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
  }
  uint64_t v36 = v11[11];
  uint64_t v37 = &v5[v36];
  uint64_t v38 = &v6[v36];
  if (v9(&v6[v36], 1, v7))
  {
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
  }
  uint64_t v40 = v11[12];
  uint64_t v41 = &v5[v40];
  uint64_t v42 = &v6[v40];
  if (v9(&v6[v40], 1, v7))
  {
    uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
  }
  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  uint64_t v45 = &v5[v44];
  uint64_t v46 = &v6[v44];
  if (v9(&v6[v44], 1, v7))
  {
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
  }
  uint64_t v48 = v11[15];
  uint64_t v49 = &v5[v48];
  uint64_t v50 = &v6[v48];
  if (v9(&v6[v48], 1, v7))
  {
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
  }
  uint64_t v52 = v11[16];
  uint64_t v53 = &v5[v52];
  uint64_t v54 = &v6[v52];
  if (v9(&v6[v52], 1, v7))
  {
    uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v7);
  }
  uint64_t v56 = v11[17];
  uint64_t v57 = &v5[v56];
  uint64_t v58 = &v6[v56];
  if (v9(&v6[v56], 1, v7))
  {
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0, 1, v7);
  }
  uint64_t v60 = v11[18];
  uint64_t v61 = &v5[v60];
  uint64_t v62 = &v6[v60];
  *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  v5[v11[19]] = v6[v11[19]];
  uint64_t v63 = v11[20];
  uint64_t v64 = &v5[v63];
  uint64_t v65 = &v6[v63];
  uint64_t v66 = *((void *)v65 + 1);
  *(void *)uint64_t v64 = *(void *)v65;
  *((void *)v64 + 1) = v66;
  uint64_t v67 = v11[21];
  uint64_t v68 = &v5[v67];
  uint64_t v69 = &v6[v67];
  uint64_t v70 = *((void *)v69 + 1);
  *(void *)uint64_t v68 = *(void *)v69;
  *((void *)v68 + 1) = v70;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1003E998C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v99 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  int64_t v83 = &v7[v82];
  Class v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (!v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v83, v84, v9);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
    goto LABEL_78;
  }
  if (v86)
  {
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v83, v84, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  uint64_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  int v91 = *(_DWORD *)v90;
  v89[4] = v90[4];
  *(_DWORD *)uint64_t v89 = v91;
  v7[v15[19]] = v8[v15[19]];
  uint64_t v92 = v15[20];
  uint64_t v93 = &v7[v92];
  uint64_t v94 = &v8[v92];
  *(void *)uint64_t v93 = *(void *)v94;
  *((void *)v93 + 1) = *((void *)v94 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v95 = v15[21];
  uint64_t v96 = &v7[v95];
  uint64_t v97 = &v8[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  *((void *)v96 + 1) = *((void *)v97 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v99;
}

void *sub_1003EA798(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v12 = v11[5];
  int v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  uint64_t v22 = &v6[v20];
  if (v9(&v6[v20], 1, v7))
  {
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
  }
  uint64_t v24 = v11[8];
  int v25 = &v5[v24];
  int v26 = &v6[v24];
  if (v9(&v6[v24], 1, v7))
  {
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v9(&v6[v28], 1, v7))
  {
    uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
  }
  uint64_t v32 = v11[10];
  uint64_t v33 = &v5[v32];
  uint64_t v34 = &v6[v32];
  if (v9(&v6[v32], 1, v7))
  {
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
  }
  uint64_t v36 = v11[11];
  int v37 = &v5[v36];
  int v38 = &v6[v36];
  if (v9(&v6[v36], 1, v7))
  {
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
  }
  uint64_t v40 = v11[12];
  uint64_t v41 = &v5[v40];
  uint64_t v42 = &v6[v40];
  if (v9(&v6[v40], 1, v7))
  {
    uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
  }
  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  uint64_t v45 = &v5[v44];
  uint64_t v46 = &v6[v44];
  if (v9(&v6[v44], 1, v7))
  {
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
  }
  uint64_t v48 = v11[15];
  int v49 = &v5[v48];
  int v50 = &v6[v48];
  if (v9(&v6[v48], 1, v7))
  {
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
  }
  uint64_t v52 = v11[16];
  uint64_t v53 = &v5[v52];
  uint64_t v54 = &v6[v52];
  if (v9(&v6[v52], 1, v7))
  {
    uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v7);
  }
  uint64_t v56 = v11[17];
  uint64_t v57 = &v5[v56];
  uint64_t v58 = &v6[v56];
  if (v9(&v6[v56], 1, v7))
  {
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0, 1, v7);
  }
  uint64_t v60 = v11[18];
  int v61 = &v5[v60];
  int v62 = &v6[v60];
  *(_DWORD *)int v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  v5[v11[19]] = v6[v11[19]];
  *(_OWORD *)&v5[v11[20]] = *(_OWORD *)&v6[v11[20]];
  *(_OWORD *)&v5[v11[21]] = *(_OWORD *)&v6[v11[21]];
  return a1;
}

void *sub_1003EB064(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  unint64_t v102 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  int64_t v83 = &v7[v82];
  Class v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (!v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v83, v84, v9);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
    goto LABEL_78;
  }
  if (v86)
  {
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v83, v84, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  uint64_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  *(_DWORD *)uint64_t v89 = *(_DWORD *)v90;
  v89[4] = v90[4];
  v7[v15[19]] = v8[v15[19]];
  uint64_t v91 = v15[20];
  uint64_t v92 = &v7[v91];
  uint64_t v93 = &v8[v91];
  uint64_t v95 = *(void *)v93;
  uint64_t v94 = *((void *)v93 + 1);
  *(void *)uint64_t v92 = v95;
  *((void *)v92 + 1) = v94;
  swift_bridgeObjectRelease();
  uint64_t v96 = v15[21];
  uint64_t v97 = &v7[v96];
  uint64_t v98 = &v8[v96];
  uint64_t v100 = *(void *)v98;
  uint64_t v99 = *((void *)v98 + 1);
  *(void *)uint64_t v97 = v100;
  *((void *)v97 + 1) = v99;
  swift_bridgeObjectRelease();
  return v102;
}

uint64_t sub_1003EBE48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003EBE5C);
}

uint64_t sub_1003EBE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003EBE74);
}

uint64_t _s6UnpairV23InitialResponderContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100972998);
}

uint64_t sub_1003EBE98()
{
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1003EBF34(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a3[5];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for Date();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    int v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v14 = v13[5];
    uint64_t v15 = &v7[v14];
    uint64_t v16 = &v8[v14];
    if (v11(&v8[v14], 1, v9))
    {
      uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v16, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
    }
    uint64_t v18 = v13[6];
    int v19 = &v7[v18];
    int v20 = &v8[v18];
    if (v11(&v8[v18], 1, v9))
    {
      uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v20, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
    }
    uint64_t v22 = v13[7];
    uint64_t v23 = &v7[v22];
    uint64_t v24 = &v8[v22];
    if (v11(&v8[v22], 1, v9))
    {
      uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
    }
    uint64_t v26 = v13[8];
    uint64_t v27 = &v7[v26];
    uint64_t v28 = &v8[v26];
    if (v11(&v8[v26], 1, v9))
    {
      uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v27, v28, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
    }
    uint64_t v30 = v13[9];
    int v31 = &v7[v30];
    int v32 = &v8[v30];
    if (v11(&v8[v30], 1, v9))
    {
      uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v31, v32, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
    }
    uint64_t v34 = v13[10];
    uint64_t v35 = &v7[v34];
    uint64_t v36 = &v8[v34];
    if (v11(&v8[v34], 1, v9))
    {
      uint64_t v37 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
    }
    uint64_t v38 = v13[11];
    uint64_t v39 = &v7[v38];
    uint64_t v40 = &v8[v38];
    if (v11(&v8[v38], 1, v9))
    {
      uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v39, v40, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v9);
    }
    uint64_t v42 = v13[12];
    int v43 = &v7[v42];
    int v44 = &v8[v42];
    if (v11(&v8[v42], 1, v9))
    {
      uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v43, v44, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0, 1, v9);
    }
    v7[v13[13]] = v8[v13[13]];
    uint64_t v46 = v13[14];
    uint64_t v47 = &v7[v46];
    uint64_t v48 = &v8[v46];
    if (v11(&v8[v46], 1, v9))
    {
      uint64_t v49 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
    }
    uint64_t v50 = v13[15];
    uint64_t v51 = &v7[v50];
    uint64_t v52 = &v8[v50];
    if (v11(&v8[v50], 1, v9))
    {
      uint64_t v53 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v51, v52, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v51, 0, 1, v9);
    }
    uint64_t v54 = v13[16];
    int v55 = &v7[v54];
    int v56 = &v8[v54];
    if (v11(&v8[v54], 1, v9))
    {
      uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v55, v56, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v55, 0, 1, v9);
    }
    uint64_t v58 = v13[17];
    uint64_t v59 = &v7[v58];
    uint64_t v60 = &v8[v58];
    if (v11(&v8[v58], 1, v9))
    {
      uint64_t v61 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
    }
    uint64_t v62 = v13[18];
    uint64_t v63 = &v7[v62];
    uint64_t v64 = &v8[v62];
    *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
    v63[4] = v64[4];
    v7[v13[19]] = v8[v13[19]];
    uint64_t v65 = v13[20];
    uint64_t v66 = &v7[v65];
    int v67 = &v8[v65];
    uint64_t v68 = *((void *)v67 + 1);
    *(void *)uint64_t v66 = *(void *)v67;
    *((void *)v66 + 1) = v68;
    uint64_t v69 = v13[21];
    uint64_t v70 = &v7[v69];
    uint64_t v71 = &v8[v69];
    uint64_t v72 = *((void *)v71 + 1);
    *(void *)uint64_t v70 = *(void *)v71;
    *((void *)v70 + 1) = v72;
    uint64_t v73 = a3[6];
    uint64_t v74 = a3[7];
    uint64_t v75 = *(void **)((char *)a2 + v73);
    *(void *)((char *)v5 + v73) = v75;
    *((unsigned char *)v5 + v74) = *((unsigned char *)a2 + v74);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v76 = v75;
  }
  return v5;
}

void sub_1003EC8AC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v9 = v4 + v8[5];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = v4 + v8[6];
  if (!v7(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = v4 + v8[7];
  if (!v7(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = v4 + v8[8];
  if (!v7(v12, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  }
  uint64_t v13 = v4 + v8[9];
  if (!v7(v13, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v5);
  }
  uint64_t v14 = v4 + v8[10];
  if (!v7(v14, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = v4 + v8[11];
  if (!v7(v15, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = v4 + v8[12];
  if (!v7(v16, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = v4 + v8[14];
  if (!v7(v17, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = v4 + v8[15];
  if (!v7(v18, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, v5);
  }
  uint64_t v19 = v4 + v8[16];
  if (!v7(v19, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = v4 + v8[17];
  if (!v7(v20, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v20, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void **)(a1 + *(int *)(a2 + 24));
}

void *sub_1003ECCB8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v4 = a3[5];
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  uint64_t v22 = &v6[v20];
  if (v9(&v6[v20], 1, v7))
  {
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
  }
  uint64_t v24 = v11[8];
  uint64_t v25 = &v5[v24];
  uint64_t v26 = &v6[v24];
  if (v9(&v6[v24], 1, v7))
  {
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v9(&v6[v28], 1, v7))
  {
    uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
  }
  uint64_t v32 = v11[10];
  uint64_t v33 = &v5[v32];
  uint64_t v34 = &v6[v32];
  if (v9(&v6[v32], 1, v7))
  {
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
  }
  uint64_t v36 = v11[11];
  uint64_t v37 = &v5[v36];
  uint64_t v38 = &v6[v36];
  if (v9(&v6[v36], 1, v7))
  {
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
  }
  uint64_t v40 = v11[12];
  uint64_t v41 = &v5[v40];
  uint64_t v42 = &v6[v40];
  if (v9(&v6[v40], 1, v7))
  {
    uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
  }
  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  uint64_t v45 = &v5[v44];
  uint64_t v46 = &v6[v44];
  if (v9(&v6[v44], 1, v7))
  {
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
  }
  uint64_t v48 = v11[15];
  uint64_t v49 = &v5[v48];
  uint64_t v50 = &v6[v48];
  if (v9(&v6[v48], 1, v7))
  {
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
  }
  uint64_t v52 = v11[16];
  uint64_t v53 = &v5[v52];
  uint64_t v54 = &v6[v52];
  if (v9(&v6[v52], 1, v7))
  {
    uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v7);
  }
  uint64_t v56 = v11[17];
  uint64_t v57 = &v5[v56];
  uint64_t v58 = &v6[v56];
  if (v9(&v6[v56], 1, v7))
  {
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0, 1, v7);
  }
  uint64_t v60 = v11[18];
  uint64_t v61 = &v5[v60];
  uint64_t v62 = &v6[v60];
  *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  v5[v11[19]] = v6[v11[19]];
  uint64_t v63 = v11[20];
  uint64_t v64 = &v5[v63];
  uint64_t v65 = &v6[v63];
  uint64_t v66 = *((void *)v65 + 1);
  *(void *)uint64_t v64 = *(void *)v65;
  *((void *)v64 + 1) = v66;
  uint64_t v67 = v11[21];
  uint64_t v68 = &v5[v67];
  uint64_t v69 = &v6[v67];
  uint64_t v70 = *((void *)v69 + 1);
  *(void *)uint64_t v68 = *(void *)v69;
  *((void *)v68 + 1) = v70;
  uint64_t v71 = a3[6];
  uint64_t v72 = a3[7];
  uint64_t v73 = *(void **)((char *)a2 + v71);
  *(void *)((char *)a1 + v71) = v73;
  *((unsigned char *)a1 + v72) = *((unsigned char *)a2 + v72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v74 = v73;
  return a1;
}

void *sub_1003ED5D0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v103 = a2;
  uint64_t v6 = a3[5];
  long long v104 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  int64_t v83 = &v7[v82];
  Class v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (!v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v83, v84, v9);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
    goto LABEL_78;
  }
  if (v86)
  {
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v83, v84, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  uint64_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  int v91 = *(_DWORD *)v90;
  v89[4] = v90[4];
  *(_DWORD *)uint64_t v89 = v91;
  v7[v15[19]] = v8[v15[19]];
  uint64_t v92 = v15[20];
  uint64_t v93 = &v7[v92];
  uint64_t v94 = &v8[v92];
  *(void *)uint64_t v93 = *(void *)v94;
  *((void *)v93 + 1) = *((void *)v94 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v95 = v15[21];
  uint64_t v96 = &v7[v95];
  uint64_t v97 = &v8[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  *((void *)v96 + 1) = *((void *)v97 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v98 = a3[6];
  uint64_t v99 = *(void **)((char *)v104 + v98);
  uint64_t v100 = *(void **)((char *)v103 + v98);
  *(void *)((char *)v104 + v98) = v100;
  id v101 = v100;

  *((unsigned char *)v104 + a3[7]) = *((unsigned char *)v103 + a3[7]);
  return v104;
}

void *sub_1003EE40C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v4 = a3[5];
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v12 = v11[5];
  int v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  uint64_t v22 = &v6[v20];
  if (v9(&v6[v20], 1, v7))
  {
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
  }
  uint64_t v24 = v11[8];
  int v25 = &v5[v24];
  int v26 = &v6[v24];
  if (v9(&v6[v24], 1, v7))
  {
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v9(&v6[v28], 1, v7))
  {
    uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
  }
  uint64_t v32 = v11[10];
  uint64_t v33 = &v5[v32];
  uint64_t v34 = &v6[v32];
  if (v9(&v6[v32], 1, v7))
  {
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
  }
  uint64_t v36 = v11[11];
  int v37 = &v5[v36];
  int v38 = &v6[v36];
  if (v9(&v6[v36], 1, v7))
  {
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
  }
  uint64_t v40 = v11[12];
  uint64_t v41 = &v5[v40];
  uint64_t v42 = &v6[v40];
  if (v9(&v6[v40], 1, v7))
  {
    uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
  }
  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  uint64_t v45 = &v5[v44];
  uint64_t v46 = &v6[v44];
  if (v9(&v6[v44], 1, v7))
  {
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
  }
  uint64_t v48 = v11[15];
  int v49 = &v5[v48];
  int v50 = &v6[v48];
  if (v9(&v6[v48], 1, v7))
  {
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
  }
  uint64_t v52 = v11[16];
  uint64_t v53 = &v5[v52];
  uint64_t v54 = &v6[v52];
  if (v9(&v6[v52], 1, v7))
  {
    uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v7);
  }
  uint64_t v56 = v11[17];
  uint64_t v57 = &v5[v56];
  uint64_t v58 = &v6[v56];
  if (v9(&v6[v56], 1, v7))
  {
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0, 1, v7);
  }
  uint64_t v60 = v11[18];
  int v61 = &v5[v60];
  int v62 = &v6[v60];
  *(_DWORD *)int v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  v5[v11[19]] = v6[v11[19]];
  *(_OWORD *)&v5[v11[20]] = *(_OWORD *)&v6[v11[20]];
  *(_OWORD *)&v5[v11[21]] = *(_OWORD *)&v6[v11[21]];
  uint64_t v63 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v63) = *((unsigned char *)a2 + v63);
  return a1;
}

void *sub_1003EECFC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  long long v104 = a2;
  uint64_t v6 = a3[5];
  long long v105 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  int64_t v83 = &v7[v82];
  Class v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (!v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v83, v84, v9);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
    goto LABEL_78;
  }
  if (v86)
  {
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v83, v84, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  uint64_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  *(_DWORD *)uint64_t v89 = *(_DWORD *)v90;
  v89[4] = v90[4];
  v7[v15[19]] = v8[v15[19]];
  uint64_t v91 = v15[20];
  uint64_t v92 = &v7[v91];
  uint64_t v93 = &v8[v91];
  uint64_t v95 = *(void *)v93;
  uint64_t v94 = *((void *)v93 + 1);
  *(void *)uint64_t v92 = v95;
  *((void *)v92 + 1) = v94;
  swift_bridgeObjectRelease();
  uint64_t v96 = v15[21];
  uint64_t v97 = &v7[v96];
  uint64_t v98 = &v8[v96];
  uint64_t v100 = *(void *)v98;
  uint64_t v99 = *((void *)v98 + 1);
  *(void *)uint64_t v97 = v100;
  *((void *)v97 + 1) = v99;
  swift_bridgeObjectRelease();
  uint64_t v101 = a3[6];
  unint64_t v102 = *(void **)((char *)v105 + v101);
  *(void *)((char *)v105 + v101) = *(void *)((char *)v104 + v101);

  *((unsigned char *)v105 + a3[7]) = *((unsigned char *)v104 + a3[7]);
  return v105;
}

uint64_t sub_1003EFB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003EFB20);
}

uint64_t sub_1003EFB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003EFB38);
}

uint64_t sub_1003EFB3C()
{
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s6UnpairV25HandleConfirmationContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100972B78);
}

uint64_t _s6UnpairV27HandlePairingDisableContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100972AD8);
}

uint64_t sub_1003EFC2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003EFC94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003EFCFC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_1003EFD5C(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a3[5];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for Date();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    int v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v14 = v13[5];
    uint64_t v15 = &v7[v14];
    uint64_t v16 = &v8[v14];
    if (v11(&v8[v14], 1, v9))
    {
      uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v16, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
    }
    uint64_t v18 = v13[6];
    int v19 = &v7[v18];
    int v20 = &v8[v18];
    if (v11(&v8[v18], 1, v9))
    {
      uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v20, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
    }
    uint64_t v22 = v13[7];
    uint64_t v23 = &v7[v22];
    uint64_t v24 = &v8[v22];
    if (v11(&v8[v22], 1, v9))
    {
      uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
    }
    uint64_t v26 = v13[8];
    uint64_t v27 = &v7[v26];
    uint64_t v28 = &v8[v26];
    if (v11(&v8[v26], 1, v9))
    {
      uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v27, v28, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
    }
    uint64_t v30 = v13[9];
    int v31 = &v7[v30];
    int v32 = &v8[v30];
    if (v11(&v8[v30], 1, v9))
    {
      uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v31, v32, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
    }
    uint64_t v34 = v13[10];
    uint64_t v35 = &v7[v34];
    uint64_t v36 = &v8[v34];
    if (v11(&v8[v34], 1, v9))
    {
      uint64_t v37 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
    }
    uint64_t v38 = v13[11];
    uint64_t v39 = &v7[v38];
    uint64_t v40 = &v8[v38];
    if (v11(&v8[v38], 1, v9))
    {
      uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v39, v40, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v9);
    }
    uint64_t v42 = v13[12];
    int v43 = &v7[v42];
    int v44 = &v8[v42];
    if (v11(&v8[v42], 1, v9))
    {
      uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v43, v44, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0, 1, v9);
    }
    v7[v13[13]] = v8[v13[13]];
    uint64_t v46 = v13[14];
    uint64_t v47 = &v7[v46];
    uint64_t v48 = &v8[v46];
    if (v11(&v8[v46], 1, v9))
    {
      uint64_t v49 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
    }
    uint64_t v50 = v13[15];
    uint64_t v51 = &v7[v50];
    uint64_t v52 = &v8[v50];
    if (v11(&v8[v50], 1, v9))
    {
      uint64_t v53 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v51, v52, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v51, 0, 1, v9);
    }
    uint64_t v54 = v13[16];
    int v55 = &v7[v54];
    int v56 = &v8[v54];
    if (v11(&v8[v54], 1, v9))
    {
      uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v55, v56, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v55, 0, 1, v9);
    }
    uint64_t v58 = v13[17];
    uint64_t v59 = &v7[v58];
    uint64_t v60 = &v8[v58];
    if (v11(&v8[v58], 1, v9))
    {
      uint64_t v61 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
    }
    uint64_t v62 = v13[18];
    uint64_t v63 = &v7[v62];
    uint64_t v64 = &v8[v62];
    *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
    v63[4] = v64[4];
    v7[v13[19]] = v8[v13[19]];
    uint64_t v65 = v13[20];
    uint64_t v66 = &v7[v65];
    int v67 = &v8[v65];
    uint64_t v68 = *((void *)v67 + 1);
    *(void *)uint64_t v66 = *(void *)v67;
    *((void *)v66 + 1) = v68;
    uint64_t v69 = v13[21];
    uint64_t v70 = &v7[v69];
    uint64_t v71 = &v8[v69];
    uint64_t v72 = *((void *)v71 + 1);
    *(void *)uint64_t v70 = *(void *)v71;
    *((void *)v70 + 1) = v72;
    uint64_t v73 = a3[6];
    uint64_t v74 = a3[7];
    uint64_t v75 = (void *)((char *)v5 + v73);
    uint64_t v76 = (void *)((char *)a2 + v73);
    uint64_t v77 = v76[1];
    *uint64_t v75 = *v76;
    v75[1] = v77;
    uint64_t v78 = *(void **)((char *)a2 + v74);
    *(void *)((char *)v5 + v74) = v78;
    *((unsigned char *)v5 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v79 = v78;
  }
  return v5;
}

void sub_1003F06F0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v9 = v4 + v8[5];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = v4 + v8[6];
  if (!v7(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = v4 + v8[7];
  if (!v7(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = v4 + v8[8];
  if (!v7(v12, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  }
  uint64_t v13 = v4 + v8[9];
  if (!v7(v13, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v5);
  }
  uint64_t v14 = v4 + v8[10];
  if (!v7(v14, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = v4 + v8[11];
  if (!v7(v15, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = v4 + v8[12];
  if (!v7(v16, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = v4 + v8[14];
  if (!v7(v17, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = v4 + v8[15];
  if (!v7(v18, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, v5);
  }
  uint64_t v19 = v4 + v8[16];
  if (!v7(v19, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = v4 + v8[17];
  if (!v7(v20, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v20, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void **)(a1 + *(int *)(a2 + 28));
}

void *sub_1003F0B0C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v4 = a3[5];
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  uint64_t v22 = &v6[v20];
  if (v9(&v6[v20], 1, v7))
  {
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
  }
  uint64_t v24 = v11[8];
  uint64_t v25 = &v5[v24];
  uint64_t v26 = &v6[v24];
  if (v9(&v6[v24], 1, v7))
  {
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v9(&v6[v28], 1, v7))
  {
    uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
  }
  uint64_t v32 = v11[10];
  uint64_t v33 = &v5[v32];
  uint64_t v34 = &v6[v32];
  if (v9(&v6[v32], 1, v7))
  {
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
  }
  uint64_t v36 = v11[11];
  uint64_t v37 = &v5[v36];
  uint64_t v38 = &v6[v36];
  if (v9(&v6[v36], 1, v7))
  {
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
  }
  uint64_t v40 = v11[12];
  uint64_t v41 = &v5[v40];
  uint64_t v42 = &v6[v40];
  if (v9(&v6[v40], 1, v7))
  {
    uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
  }
  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  uint64_t v45 = &v5[v44];
  uint64_t v46 = &v6[v44];
  if (v9(&v6[v44], 1, v7))
  {
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
  }
  uint64_t v48 = v11[15];
  uint64_t v49 = &v5[v48];
  uint64_t v50 = &v6[v48];
  if (v9(&v6[v48], 1, v7))
  {
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
  }
  uint64_t v52 = v11[16];
  uint64_t v53 = &v5[v52];
  uint64_t v54 = &v6[v52];
  if (v9(&v6[v52], 1, v7))
  {
    uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v7);
  }
  uint64_t v56 = v11[17];
  uint64_t v57 = &v5[v56];
  uint64_t v58 = &v6[v56];
  if (v9(&v6[v56], 1, v7))
  {
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0, 1, v7);
  }
  uint64_t v60 = v11[18];
  uint64_t v61 = &v5[v60];
  uint64_t v62 = &v6[v60];
  *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  v5[v11[19]] = v6[v11[19]];
  uint64_t v63 = v11[20];
  uint64_t v64 = &v5[v63];
  uint64_t v65 = &v6[v63];
  uint64_t v66 = *((void *)v65 + 1);
  *(void *)uint64_t v64 = *(void *)v65;
  *((void *)v64 + 1) = v66;
  uint64_t v67 = v11[21];
  uint64_t v68 = &v5[v67];
  uint64_t v69 = &v6[v67];
  uint64_t v70 = *((void *)v69 + 1);
  *(void *)uint64_t v68 = *(void *)v69;
  *((void *)v68 + 1) = v70;
  uint64_t v71 = a3[6];
  uint64_t v72 = a3[7];
  uint64_t v73 = (void *)((char *)a1 + v71);
  uint64_t v74 = (void *)((char *)a2 + v71);
  uint64_t v75 = v74[1];
  void *v73 = *v74;
  v73[1] = v75;
  uint64_t v76 = *(void **)((char *)a2 + v72);
  *(void *)((char *)a1 + v72) = v76;
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v77 = v76;
  return a1;
}

void *sub_1003F1440(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v106 = a2;
  uint64_t v6 = a3[5];
  uint64_t v107 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  id v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  int64_t v83 = &v7[v82];
  Class v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (!v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v83, v84, v9);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
    goto LABEL_78;
  }
  if (v86)
  {
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v83, v84, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  uint64_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  int v91 = *(_DWORD *)v90;
  v89[4] = v90[4];
  *(_DWORD *)uint64_t v89 = v91;
  v7[v15[19]] = v8[v15[19]];
  uint64_t v92 = v15[20];
  uint64_t v93 = &v7[v92];
  uint64_t v94 = &v8[v92];
  *(void *)uint64_t v93 = *(void *)v94;
  *((void *)v93 + 1) = *((void *)v94 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v95 = v15[21];
  uint64_t v96 = &v7[v95];
  uint64_t v97 = &v8[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  *((void *)v96 + 1) = *((void *)v97 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v98 = a3[6];
  uint64_t v99 = (void *)((char *)v107 + v98);
  uint64_t v100 = (void *)((char *)v106 + v98);
  void *v99 = *v100;
  v99[1] = v100[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v101 = a3[7];
  unint64_t v102 = *(void **)((char *)v107 + v101);
  uint64_t v103 = *(void **)((char *)v106 + v101);
  *(void *)((char *)v107 + v101) = v103;
  id v104 = v103;

  *((unsigned char *)v107 + a3[8]) = *((unsigned char *)v106 + a3[8]);
  return v107;
}

void *sub_1003F22A8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v4 = a3[5];
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v12 = v11[5];
  int v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  uint64_t v22 = &v6[v20];
  if (v9(&v6[v20], 1, v7))
  {
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
  }
  uint64_t v24 = v11[8];
  int v25 = &v5[v24];
  int v26 = &v6[v24];
  if (v9(&v6[v24], 1, v7))
  {
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v9(&v6[v28], 1, v7))
  {
    uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
  }
  uint64_t v32 = v11[10];
  uint64_t v33 = &v5[v32];
  uint64_t v34 = &v6[v32];
  if (v9(&v6[v32], 1, v7))
  {
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
  }
  uint64_t v36 = v11[11];
  int v37 = &v5[v36];
  int v38 = &v6[v36];
  if (v9(&v6[v36], 1, v7))
  {
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
  }
  uint64_t v40 = v11[12];
  uint64_t v41 = &v5[v40];
  uint64_t v42 = &v6[v40];
  if (v9(&v6[v40], 1, v7))
  {
    uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
  }
  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  uint64_t v45 = &v5[v44];
  uint64_t v46 = &v6[v44];
  if (v9(&v6[v44], 1, v7))
  {
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
  }
  uint64_t v48 = v11[15];
  int v49 = &v5[v48];
  int v50 = &v6[v48];
  if (v9(&v6[v48], 1, v7))
  {
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
  }
  uint64_t v52 = v11[16];
  uint64_t v53 = &v5[v52];
  uint64_t v54 = &v6[v52];
  if (v9(&v6[v52], 1, v7))
  {
    uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v7);
  }
  uint64_t v56 = v11[17];
  uint64_t v57 = &v5[v56];
  uint64_t v58 = &v6[v56];
  if (v9(&v6[v56], 1, v7))
  {
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0, 1, v7);
  }
  uint64_t v60 = v11[18];
  int v61 = &v5[v60];
  int v62 = &v6[v60];
  *(_DWORD *)int v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  v5[v11[19]] = v6[v11[19]];
  *(_OWORD *)&v5[v11[20]] = *(_OWORD *)&v6[v11[20]];
  *(_OWORD *)&v5[v11[21]] = *(_OWORD *)&v6[v11[21]];
  uint64_t v63 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v63) = *(void *)((char *)a2 + v63);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *sub_1003F2BA4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v109 = a2;
  uint64_t v6 = a3[5];
  NSString v110 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  id v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  int64_t v83 = &v7[v82];
  Class v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (!v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v83, v84, v9);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
    goto LABEL_78;
  }
  if (v86)
  {
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v83, v84, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  uint64_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  *(_DWORD *)uint64_t v89 = *(_DWORD *)v90;
  v89[4] = v90[4];
  v7[v15[19]] = v8[v15[19]];
  uint64_t v91 = v15[20];
  uint64_t v92 = &v7[v91];
  uint64_t v93 = &v8[v91];
  uint64_t v95 = *(void *)v93;
  uint64_t v94 = *((void *)v93 + 1);
  *(void *)uint64_t v92 = v95;
  *((void *)v92 + 1) = v94;
  swift_bridgeObjectRelease();
  uint64_t v96 = v15[21];
  uint64_t v97 = &v7[v96];
  uint64_t v98 = &v8[v96];
  uint64_t v100 = *(void *)v98;
  uint64_t v99 = *((void *)v98 + 1);
  *(void *)uint64_t v97 = v100;
  *((void *)v97 + 1) = v99;
  swift_bridgeObjectRelease();
  uint64_t v101 = a3[6];
  unint64_t v102 = (void *)((char *)v110 + v101);
  uint64_t v103 = (void *)((char *)v109 + v101);
  uint64_t v105 = *v103;
  uint64_t v104 = v103[1];
  void *v102 = v105;
  v102[1] = v104;
  swift_bridgeObjectRelease();
  uint64_t v106 = a3[7];
  uint64_t v107 = *(void **)((char *)v110 + v106);
  *(void *)((char *)v110 + v106) = *(void *)((char *)v109 + v106);

  *((unsigned char *)v110 + a3[8]) = *((unsigned char *)v109 + a3[8]);
  return v110;
}

uint64_t sub_1003F39D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003F39E4);
}

uint64_t sub_1003F39E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003F39FC);
}

uint64_t sub_1003F3A00()
{
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *_s6UnpairVMa()
{
  return &_s6UnpairVN;
}

void *sub_1003F3AC8(void *a1, void *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for Date();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    int v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v14 = v13[5];
    uint64_t v15 = &v7[v14];
    uint64_t v16 = &v8[v14];
    if (v11(&v8[v14], 1, v9))
    {
      uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v16, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
    }
    uint64_t v18 = v13[6];
    int v19 = &v7[v18];
    int v20 = &v8[v18];
    if (v11(&v8[v18], 1, v9))
    {
      uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v20, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
    }
    uint64_t v22 = v13[7];
    uint64_t v23 = &v7[v22];
    uint64_t v24 = &v8[v22];
    if (v11(&v8[v22], 1, v9))
    {
      uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
    }
    uint64_t v26 = v13[8];
    uint64_t v27 = &v7[v26];
    uint64_t v28 = &v8[v26];
    if (v11(&v8[v26], 1, v9))
    {
      uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v27, v28, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
    }
    uint64_t v30 = v13[9];
    int v31 = &v7[v30];
    int v32 = &v8[v30];
    if (v11(&v8[v30], 1, v9))
    {
      uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v31, v32, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
    }
    uint64_t v34 = v13[10];
    uint64_t v35 = &v7[v34];
    uint64_t v36 = &v8[v34];
    if (v11(&v8[v34], 1, v9))
    {
      uint64_t v37 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
    }
    uint64_t v38 = v13[11];
    uint64_t v39 = &v7[v38];
    uint64_t v40 = &v8[v38];
    if (v11(&v8[v38], 1, v9))
    {
      uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v39, v40, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v9);
    }
    uint64_t v42 = v13[12];
    int v43 = &v7[v42];
    int v44 = &v8[v42];
    if (v11(&v8[v42], 1, v9))
    {
      uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v43, v44, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0, 1, v9);
    }
    v7[v13[13]] = v8[v13[13]];
    uint64_t v46 = v13[14];
    uint64_t v47 = &v7[v46];
    uint64_t v48 = &v8[v46];
    if (v11(&v8[v46], 1, v9))
    {
      uint64_t v49 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
    }
    uint64_t v50 = v13[15];
    uint64_t v51 = &v7[v50];
    uint64_t v52 = &v8[v50];
    if (v11(&v8[v50], 1, v9))
    {
      uint64_t v53 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v51, v52, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v51, 0, 1, v9);
    }
    uint64_t v54 = v13[16];
    int v55 = &v7[v54];
    int v56 = &v8[v54];
    if (v11(&v8[v54], 1, v9))
    {
      uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v55, v56, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v55, 0, 1, v9);
    }
    uint64_t v58 = v13[17];
    uint64_t v59 = &v7[v58];
    uint64_t v60 = &v8[v58];
    if (v11(&v8[v58], 1, v9))
    {
      uint64_t v61 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
    }
    uint64_t v62 = v13[18];
    uint64_t v63 = &v7[v62];
    uint64_t v64 = &v8[v62];
    *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
    v63[4] = v64[4];
    v7[v13[19]] = v8[v13[19]];
    uint64_t v65 = v13[20];
    uint64_t v66 = &v7[v65];
    int v67 = &v8[v65];
    uint64_t v68 = *((void *)v67 + 1);
    *(void *)uint64_t v66 = *(void *)v67;
    *((void *)v66 + 1) = v68;
    uint64_t v69 = v13[21];
    uint64_t v70 = &v7[v69];
    uint64_t v71 = &v8[v69];
    uint64_t v72 = *((void *)v71 + 1);
    *(void *)uint64_t v70 = *(void *)v71;
    *((void *)v70 + 1) = v72;
    *((unsigned char *)v5 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v5;
}

uint64_t sub_1003F4434(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v9 = v4 + v8[5];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = v4 + v8[6];
  if (!v7(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = v4 + v8[7];
  if (!v7(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = v4 + v8[8];
  if (!v7(v12, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  }
  uint64_t v13 = v4 + v8[9];
  if (!v7(v13, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v5);
  }
  uint64_t v14 = v4 + v8[10];
  if (!v7(v14, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = v4 + v8[11];
  if (!v7(v15, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = v4 + v8[12];
  if (!v7(v16, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = v4 + v8[14];
  if (!v7(v17, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = v4 + v8[15];
  if (!v7(v18, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, v5);
  }
  uint64_t v19 = v4 + v8[16];
  if (!v7(v19, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = v4 + v8[17];
  if (!v7(v20, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v20, v5);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_1003F482C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  uint64_t v22 = &v6[v20];
  if (v9(&v6[v20], 1, v7))
  {
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
  }
  uint64_t v24 = v11[8];
  uint64_t v25 = &v5[v24];
  uint64_t v26 = &v6[v24];
  if (v9(&v6[v24], 1, v7))
  {
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v9(&v6[v28], 1, v7))
  {
    uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
  }
  uint64_t v32 = v11[10];
  uint64_t v33 = &v5[v32];
  uint64_t v34 = &v6[v32];
  if (v9(&v6[v32], 1, v7))
  {
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
  }
  uint64_t v36 = v11[11];
  uint64_t v37 = &v5[v36];
  uint64_t v38 = &v6[v36];
  if (v9(&v6[v36], 1, v7))
  {
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
  }
  uint64_t v40 = v11[12];
  uint64_t v41 = &v5[v40];
  uint64_t v42 = &v6[v40];
  if (v9(&v6[v40], 1, v7))
  {
    uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
  }
  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  uint64_t v45 = &v5[v44];
  uint64_t v46 = &v6[v44];
  if (v9(&v6[v44], 1, v7))
  {
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
  }
  uint64_t v48 = v11[15];
  uint64_t v49 = &v5[v48];
  uint64_t v50 = &v6[v48];
  if (v9(&v6[v48], 1, v7))
  {
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
  }
  uint64_t v52 = v11[16];
  uint64_t v53 = &v5[v52];
  uint64_t v54 = &v6[v52];
  if (v9(&v6[v52], 1, v7))
  {
    uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v7);
  }
  uint64_t v56 = v11[17];
  uint64_t v57 = &v5[v56];
  uint64_t v58 = &v6[v56];
  if (v9(&v6[v56], 1, v7))
  {
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0, 1, v7);
  }
  uint64_t v60 = v11[18];
  uint64_t v61 = &v5[v60];
  uint64_t v62 = &v6[v60];
  *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  v5[v11[19]] = v6[v11[19]];
  uint64_t v63 = v11[20];
  uint64_t v64 = &v5[v63];
  uint64_t v65 = &v6[v63];
  uint64_t v66 = *((void *)v65 + 1);
  *(void *)uint64_t v64 = *(void *)v65;
  *((void *)v64 + 1) = v66;
  uint64_t v67 = v11[21];
  uint64_t v68 = &v5[v67];
  uint64_t v69 = &v6[v67];
  uint64_t v70 = *((void *)v69 + 1);
  *(void *)uint64_t v68 = *(void *)v69;
  *((void *)v68 + 1) = v70;
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1003F5138(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v99 = a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v100 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  id v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  int64_t v83 = &v7[v82];
  Class v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (!v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v83, v84, v9);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
    goto LABEL_78;
  }
  if (v86)
  {
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v83, v84, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  uint64_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  int v91 = *(_DWORD *)v90;
  v89[4] = v90[4];
  *(_DWORD *)uint64_t v89 = v91;
  v7[v15[19]] = v8[v15[19]];
  uint64_t v92 = v15[20];
  uint64_t v93 = &v7[v92];
  uint64_t v94 = &v8[v92];
  *(void *)uint64_t v93 = *(void *)v94;
  *((void *)v93 + 1) = *((void *)v94 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v95 = v15[21];
  uint64_t v96 = &v7[v95];
  uint64_t v97 = &v8[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  *((void *)v96 + 1) = *((void *)v97 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = v100;
  *((unsigned char *)v100 + *(int *)(a3 + 24)) = *((unsigned char *)v99 + *(int *)(a3 + 24));
  return result;
}

void *sub_1003F5F58(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v12 = v11[5];
  int v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  uint64_t v22 = &v6[v20];
  if (v9(&v6[v20], 1, v7))
  {
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
  }
  uint64_t v24 = v11[8];
  int v25 = &v5[v24];
  int v26 = &v6[v24];
  if (v9(&v6[v24], 1, v7))
  {
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v9(&v6[v28], 1, v7))
  {
    uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
  }
  uint64_t v32 = v11[10];
  uint64_t v33 = &v5[v32];
  uint64_t v34 = &v6[v32];
  if (v9(&v6[v32], 1, v7))
  {
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
  }
  uint64_t v36 = v11[11];
  int v37 = &v5[v36];
  int v38 = &v6[v36];
  if (v9(&v6[v36], 1, v7))
  {
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
  }
  uint64_t v40 = v11[12];
  uint64_t v41 = &v5[v40];
  uint64_t v42 = &v6[v40];
  if (v9(&v6[v40], 1, v7))
  {
    uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
  }
  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  uint64_t v45 = &v5[v44];
  uint64_t v46 = &v6[v44];
  if (v9(&v6[v44], 1, v7))
  {
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
  }
  uint64_t v48 = v11[15];
  int v49 = &v5[v48];
  int v50 = &v6[v48];
  if (v9(&v6[v48], 1, v7))
  {
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
  }
  uint64_t v52 = v11[16];
  uint64_t v53 = &v5[v52];
  uint64_t v54 = &v6[v52];
  if (v9(&v6[v52], 1, v7))
  {
    uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v7);
  }
  uint64_t v56 = v11[17];
  uint64_t v57 = &v5[v56];
  uint64_t v58 = &v6[v56];
  if (v9(&v6[v56], 1, v7))
  {
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0, 1, v7);
  }
  uint64_t v60 = v11[18];
  int v61 = &v5[v60];
  int v62 = &v6[v60];
  *(_DWORD *)int v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  v5[v11[19]] = v6[v11[19]];
  *(_OWORD *)&v5[v11[20]] = *(_OWORD *)&v6[v11[20]];
  *(_OWORD *)&v5[v11[21]] = *(_OWORD *)&v6[v11[21]];
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_1003F6840(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  unint64_t v102 = a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v103 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  id v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  int64_t v83 = &v7[v82];
  Class v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (!v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v83, v84, v9);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
    goto LABEL_78;
  }
  if (v86)
  {
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v83, v84, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  uint64_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  *(_DWORD *)uint64_t v89 = *(_DWORD *)v90;
  v89[4] = v90[4];
  v7[v15[19]] = v8[v15[19]];
  uint64_t v91 = v15[20];
  uint64_t v92 = &v7[v91];
  uint64_t v93 = &v8[v91];
  uint64_t v95 = *(void *)v93;
  uint64_t v94 = *((void *)v93 + 1);
  *(void *)uint64_t v92 = v95;
  *((void *)v92 + 1) = v94;
  swift_bridgeObjectRelease();
  uint64_t v96 = v15[21];
  uint64_t v97 = &v7[v96];
  uint64_t v98 = &v8[v96];
  uint64_t v100 = *(void *)v98;
  uint64_t v99 = *((void *)v98 + 1);
  *(void *)uint64_t v97 = v100;
  *((void *)v97 + 1) = v99;
  swift_bridgeObjectRelease();
  uint64_t result = v103;
  *((unsigned char *)v103 + *(int *)(a3 + 24)) = *((unsigned char *)v102 + *(int *)(a3 + 24));
  return result;
}

uint64_t sub_1003F7638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003F764C);
}

uint64_t sub_1003F7650(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1003F7700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003F7714);
}

void *sub_1003F7718(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1003F77C0()
{
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1003F7868(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for URL();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v2[7] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferType();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  v2[11] = static AirDropActor.shared;
  return _swift_task_switch(sub_1003F79F0, v5, 0);
}

void sub_1003F79F0()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  SFAirDropReceive.AskRequest.type.getter();
  char v4 = SFAirDrop.TransferType.isLinks.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if ((v4 & 1) == 0)
  {
LABEL_29:
    uint64_t v31 = 0;
LABEL_30:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v32 = (void (*)(uint64_t))v0[1];
    v32(v31);
    return;
  }
  id v5 = objc_allocWithZone((Class)LSApplicationRecord);
  id v6 = sub_1006A5458(0xD000000000000011, 0x80000001007BC320, 1);
  uint64_t v7 = v0[3];
  uint64_t v8 = *(void **)(v7 + 16);
  *(void *)(v7 + 16) = v6;

  if (!*(void *)(v7 + 16))
  {
    uint64_t v27 = v0[3];
    type metadata accessor for SDAirDropContentHandlerWebLinks();
    *(void *)(v27 + 24) = swift_allocObject();
    swift_release();
    uint64_t v28 = *(void *)(v27 + 24);
    v0[12] = v28;
    if (v28)
    {
      uint64_t v35 = (void (*)(uint64_t))((char *)&dword_10096DD70 + dword_10096DD70);
      swift_retain();
      uint64_t v29 = (void *)swift_task_alloc();
      v0[13] = v29;
      void *v29 = v0;
      v29[1] = sub_1003F7E54;
      uint64_t v30 = v0[2];
      v35(v30);
      return;
    }
    goto LABEL_29;
  }
  uint64_t v9 = v0[5];
  uint64_t v10 = SFAirDropReceive.AskRequest.urlItems.getter();
  int64_t v11 = 0;
  uint64_t v33 = v10 + 56;
  uint64_t v12 = -1;
  uint64_t v13 = -1 << *(unsigned char *)(v10 + 32);
  if (-v13 < 64) {
    uint64_t v12 = ~(-1 << -(char)v13);
  }
  unint64_t v14 = v12 & *(void *)(v10 + 56);
  int64_t v34 = (unint64_t)(63 - v13) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v17 >= v34) {
      goto LABEL_34;
    }
    unint64_t v18 = *(void *)(v33 + 8 * v17);
    ++v11;
    if (!v18)
    {
      int64_t v11 = v17 + 1;
      if (v17 + 1 >= v34) {
        goto LABEL_34;
      }
      unint64_t v18 = *(void *)(v33 + 8 * v11);
      if (!v18)
      {
        int64_t v11 = v17 + 2;
        if (v17 + 2 >= v34) {
          goto LABEL_34;
        }
        unint64_t v18 = *(void *)(v33 + 8 * v11);
        if (!v18) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v14 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v11 << 6);
LABEL_22:
    uint64_t v20 = v0[7];
    uint64_t v21 = v0[4];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16))(v20, *(void *)(v10 + 48) + *(void *)(v9 + 72) * v16, v21);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v20, 0, 1, v21);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v20, 1, v21) == 1)
    {
      swift_release();
      uint64_t v31 = 1;
      goto LABEL_30;
    }
    uint64_t v22 = v0[6];
    uint64_t v23 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 32))(v22, v0[7], v23);
    URL._bridgeToObjectiveC()(v24);
    int v26 = v25;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v22, v23);
    LOBYTE(v22) = SFIsKeynoteLiveLink();

    if ((v22 & 1) == 0)
    {
      swift_release();
      goto LABEL_29;
    }
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v34)
  {
LABEL_34:
    uint64_t v31 = 1;
    (*(void (**)(void, uint64_t, uint64_t, void))(v9 + 56))(v0[7], 1, 1, v0[4]);
    swift_release();
    goto LABEL_30;
  }
  unint64_t v18 = *(void *)(v33 + 8 * v19);
  if (v18)
  {
    int64_t v11 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v11 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v11 >= v34) {
      goto LABEL_34;
    }
    unint64_t v18 = *(void *)(v33 + 8 * v11);
    ++v19;
    if (v18) {
      goto LABEL_21;
    }
  }
LABEL_36:
  __break(1u);
}

uint64_t sub_1003F7E54(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 88);
  *(unsigned char *)(*(void *)v1 + 112) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1003F7F6C, v2, 0);
}

void sub_1003F7F6C()
{
  int v1 = *(unsigned __int8 *)(v0 + 112);
  swift_release();
  if (v1 != 1)
  {
LABEL_24:
    uint64_t v20 = 0;
LABEL_27:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = *(void (**)(uint64_t))(v0 + 8);
    v21(v20);
    return;
  }
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = SFAirDropReceive.AskRequest.urlItems.getter();
  int64_t v4 = 0;
  uint64_t v22 = v3 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(v3 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(v3 + 56);
  int64_t v23 = (unint64_t)(63 - v6) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v9 = v8 | (v4 << 6);
      goto LABEL_21;
    }
    int64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v10 >= v23) {
      goto LABEL_26;
    }
    unint64_t v11 = *(void *)(v22 + 8 * v10);
    ++v4;
    if (!v11)
    {
      int64_t v4 = v10 + 1;
      if (v10 + 1 >= v23) {
        goto LABEL_26;
      }
      unint64_t v11 = *(void *)(v22 + 8 * v4);
      if (!v11)
      {
        int64_t v4 = v10 + 2;
        if (v10 + 2 >= v23) {
          goto LABEL_26;
        }
        unint64_t v11 = *(void *)(v22 + 8 * v4);
        if (!v11) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v4 << 6);
LABEL_21:
    uint64_t v13 = *(void *)(v0 + 56);
    uint64_t v14 = *(void *)(v0 + 32);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v2 + 16))(v13, *(void *)(v3 + 48) + *(void *)(v2 + 72) * v9, v14);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v13, 0, 1, v14);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v13, 1, v14) == 1)
    {
      swift_release();
      uint64_t v20 = 1;
      goto LABEL_27;
    }
    uint64_t v15 = *(void *)(v0 + 48);
    uint64_t v16 = *(void *)(v0 + 32);
    (*(void (**)(uint64_t, void, uint64_t))(v2 + 32))(v15, *(void *)(v0 + 56), v16);
    URL._bridgeToObjectiveC()(v17);
    int64_t v19 = v18;
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v15, v16);
    LOBYTE(v15) = SFIsKeynoteLiveLink();

    if ((v15 & 1) == 0)
    {
      swift_release();
      goto LABEL_24;
    }
  }
  int64_t v12 = v10 + 3;
  if (v12 >= v23)
  {
LABEL_26:
    uint64_t v20 = 1;
    (*(void (**)(void, uint64_t, uint64_t, void))(v2 + 56))(*(void *)(v0 + 56), 1, 1, *(void *)(v0 + 32));
    swift_release();
    goto LABEL_27;
  }
  unint64_t v11 = *(void *)(v22 + 8 * v12);
  if (v11)
  {
    int64_t v4 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v4 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v4 >= v23) {
      goto LABEL_26;
    }
    unint64_t v11 = *(void *)(v22 + 8 * v4);
    ++v12;
    if (v11) {
      goto LABEL_20;
    }
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_1003F827C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_10097F1D0);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v2 + 24))
  {
    swift_retain();
    sub_1002E5D8C(a1, a2);
    return swift_release();
  }
  else
  {
    unint64_t v9 = *(void **)(v2 + 16);
    type metadata accessor for SDAirDropContentHandlerUtilities();
    uint64_t v10 = type metadata accessor for SFAirDropReceive.ItemDestination();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
    id v11 = v9;
    sub_10039FAA0(a1, v9, 1, a2);

    return sub_10024DFE8((uint64_t)v7);
  }
}

uint64_t sub_1003F83D0()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDAirDropContentHandlerKeynoteLiveLinks()
{
  return self;
}

uint64_t sub_1003F8434@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerKeynoteLiveLinks();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1003F846C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_1003F7868(a1);
}

uint64_t sub_1003F8508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003F827C(a1, a2);
}

void sub_1003F852C(uint64_t a1, char a2)
{
  unint64_t v3 = *(void *)(SFAirDropReceive.AskRequest.urlItems.getter() + 16);
  swift_bridgeObjectRelease();
  sub_10000A844(&qword_10096D760);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
  *(void *)(inited + 32) = 0xD00000000000001ALL;
  *(void *)(inited + 40) = 0x80000001007BC960;
  *(void *)(inited + 48) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = 95;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6._countAndFlagsBits = 0xD00000000000001ALL;
  v6._object = (void *)0x80000001007BC960;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  if (v3 > 1)
  {
    v7._countAndFlagsBits = 0x4C4152554C505FLL;
    v7._object = (void *)0xE700000000000000;
    String.append(_:)(v7);
  }
  swift_bridgeObjectRelease();
  if (a2)
  {
    v8._countAndFlagsBits = 0x4C4154495041435FLL;
    v8._object = (void *)0xEC00000044455A49;
    String.append(_:)(v8);
  }
  v9._countAndFlagsBits = 0x545845545FLL;
  v9._object = (void *)0xE500000000000000;
  String.append(_:)(v9);
  swift_setDeallocating();
  sub_10000A844((uint64_t *)&unk_100977CB0);
  swift_arrayDestroy();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = (id)SFLocalizedStringForKey();

  if (v11)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_10076E7A0;
    *(void *)(v12 + 56) = &type metadata for Int;
    *(void *)(v12 + 64) = &protocol witness table for Int;
    *(void *)(v12 + 32) = v3;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003F8770()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100972CC0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100972CC0);
  if (qword_100969CD8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946D8);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1003F8838@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10000A844(&qword_10096BBB0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100776540;
  if (qword_100969DB8 != -1) {
    swift_once();
  }
  *(void *)(v4 + 56) = &type metadata for SDAuthentication.Operation.CheckIsBluetoothEnabled;
  *(void *)(v4 + 64) = &off_1009718E8;
  *(void *)(v4 + 96) = &type metadata for SDAuthentication.Operation.CheckRemoteDeviceOSVersionIsSupported;
  *(void *)(v4 + 104) = &off_100971888;
  *(void *)(v4 + 136) = &type metadata for SDAuthentication.Operation.RecordRemoteDevice;
  *(void *)(v4 + 144) = &off_100971868;
  *(void *)(v4 + 176) = &type metadata for SDAuthentication.Operation.CheckLocalSecurityPolicy;
  *(void *)(v4 + 184) = &off_100971848;
  *(void *)(v4 + 216) = &type metadata for SDAuthentication.Operation.IncludeLastRegistrationInMessage;
  *(void *)(v4 + 224) = &off_1009716C8;
  *(void *)(v4 + 256) = &type metadata for SDAuthentication.Operation.IncludeSessionStartDateInMessage;
  *(void *)(v4 + 264) = &off_100971768;
  *(void *)(v4 + 296) = &type metadata for SDAuthentication.Operation.IncludeFirstAKSTokenWithLTKSessionInMessage;
  *(void *)(v4 + 304) = &off_1009716A8;
  *(void *)(v4 + 336) = &type metadata for SDAuthentication.Operation.SendRequestMessage;
  *(void *)(v4 + 344) = &off_1009717C8;
  *a2 = v4;
  Swift::String v5 = (int *)_s15GuestModeUnlockV17InitialKeyContextVMa(0);
  Swift::String v6 = (char *)a2 + v5[6];
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(uint64_t *)((char *)a2 + v5[7]) = 0;
  *((unsigned char *)a2 + v5[8]) = 0;
  return sub_100403108(a1, (uint64_t)a2 + v5[5], (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
}

uint64_t _s15GuestModeUnlockV17InitialKeyContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100972E60);
}

uint64_t *sub_1003F8A08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v13 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    Swift::String v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for Date();
    uint64_t v10 = *(void *)(v9 - 8);
    id v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    uint64_t v81 = v10;
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    uint64_t v14 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v15 = v14[5];
    uint64_t v16 = &v7[v15];
    int64_t v17 = &v8[v15];
    if (v11(&v8[v15], 1, v9))
    {
      uint64_t v18 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
    }
    uint64_t v19 = v14[6];
    uint64_t v20 = &v7[v19];
    uint64_t v21 = &v8[v19];
    if (v11(&v8[v19], 1, v9))
    {
      uint64_t v22 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v20, v21, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
    }
    uint64_t v23 = v14[7];
    uint64_t v24 = &v7[v23];
    int v25 = &v8[v23];
    if (v11(&v8[v23], 1, v9))
    {
      uint64_t v26 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v24, v25, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v24, 0, 1, v9);
    }
    uint64_t v27 = v14[8];
    uint64_t v28 = &v7[v27];
    uint64_t v29 = &v8[v27];
    if (v11(&v8[v27], 1, v9))
    {
      uint64_t v30 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v28, v29, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v9);
    }
    uint64_t v31 = v14[9];
    int v32 = &v7[v31];
    uint64_t v33 = &v8[v31];
    if (v11(&v8[v31], 1, v9))
    {
      uint64_t v34 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v32, v33, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v32, 0, 1, v9);
    }
    uint64_t v35 = v14[10];
    uint64_t v36 = &v7[v35];
    int v37 = &v8[v35];
    if (v11(&v8[v35], 1, v9))
    {
      uint64_t v38 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v36, v37, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v36, 0, 1, v9);
    }
    uint64_t v39 = v14[11];
    uint64_t v40 = &v7[v39];
    uint64_t v41 = &v8[v39];
    if (v11(&v8[v39], 1, v9))
    {
      uint64_t v42 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v40, v41, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v40, 0, 1, v9);
    }
    uint64_t v43 = v14[12];
    int v44 = &v7[v43];
    uint64_t v45 = &v8[v43];
    if (v11(&v8[v43], 1, v9))
    {
      uint64_t v46 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v44, v45, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v44, 0, 1, v9);
    }
    v7[v14[13]] = v8[v14[13]];
    uint64_t v47 = v14[14];
    uint64_t v48 = &v7[v47];
    int v49 = &v8[v47];
    if (v11(&v8[v47], 1, v9))
    {
      uint64_t v50 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v48, v49, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v48, 0, 1, v9);
    }
    uint64_t v51 = v14[15];
    uint64_t v52 = &v7[v51];
    uint64_t v53 = &v8[v51];
    if (v11(&v8[v51], 1, v9))
    {
      uint64_t v54 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v52, v53, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v52, 0, 1, v9);
    }
    uint64_t v55 = v14[16];
    int v56 = &v7[v55];
    uint64_t v57 = &v8[v55];
    if (v11(&v8[v55], 1, v9))
    {
      uint64_t v58 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v56, v57, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v56, 0, 1, v9);
    }
    uint64_t v59 = v14[17];
    uint64_t v60 = &v7[v59];
    int v61 = &v8[v59];
    if (v11(&v8[v59], 1, v9))
    {
      uint64_t v62 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v60, v61, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v60, 0, 1, v9);
    }
    uint64_t v63 = v14[18];
    uint64_t v64 = &v7[v63];
    uint64_t v65 = &v8[v63];
    *(_DWORD *)uint64_t v64 = *(_DWORD *)v65;
    v64[4] = v65[4];
    v7[v14[19]] = v8[v14[19]];
    uint64_t v66 = v14[20];
    int v67 = &v7[v66];
    int v68 = &v8[v66];
    uint64_t v69 = *((void *)v68 + 1);
    *(void *)int v67 = *(void *)v68;
    *((void *)v67 + 1) = v69;
    uint64_t v70 = v14[21];
    uint64_t v71 = &v7[v70];
    uint64_t v72 = &v8[v70];
    uint64_t v73 = *((void *)v72 + 1);
    *(void *)uint64_t v71 = *(void *)v72;
    *((void *)v71 + 1) = v73;
    uint64_t v74 = *(int *)(a3 + 24);
    uint64_t v13 = a1;
    uint64_t v75 = (char *)a1 + v74;
    uint64_t v76 = (char *)a2 + v74;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11(v76, 1, v9))
    {
      uint64_t v77 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v75, v76, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v75, 0, 1, v9);
    }
  }
  return v13;
}

uint64_t sub_1003F9438(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v23 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v4, v5);
  }
  uint64_t v7 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v8 = v4 + v7[5];
  if (!v6(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v8, v5);
  }
  uint64_t v9 = v4 + v7[6];
  if (!v6(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v9, v5);
  }
  uint64_t v10 = v4 + v7[7];
  if (!v6(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v10, v5);
  }
  uint64_t v11 = v4 + v7[8];
  if (!v6(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v11, v5);
  }
  uint64_t v12 = v4 + v7[9];
  if (!v6(v12, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v12, v5);
  }
  uint64_t v13 = v4 + v7[10];
  if (!v6(v13, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v13, v5);
  }
  uint64_t v14 = v4 + v7[11];
  if (!v6(v14, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v14, v5);
  }
  uint64_t v15 = v4 + v7[12];
  if (!v6(v15, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v15, v5);
  }
  uint64_t v16 = v4 + v7[14];
  if (!v6(v16, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v16, v5);
  }
  uint64_t v17 = v4 + v7[15];
  if (!v6(v17, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v17, v5);
  }
  uint64_t v18 = v4 + v7[16];
  if (!v6(v18, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v18, v5);
  }
  uint64_t v19 = v4 + v7[17];
  if (!v6(v19, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v19, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v20, 1, v5);
  if (!result)
  {
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8);
    return v22(v20, v5);
  }
  return result;
}

void *sub_1003F9898(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  uint64_t v78 = v8;
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  uint64_t v22 = &v6[v20];
  if (v9(&v6[v20], 1, v7))
  {
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v21, 0, 1, v7);
  }
  uint64_t v24 = v11[8];
  int v25 = &v5[v24];
  uint64_t v26 = &v6[v24];
  if (v9(&v6[v24], 1, v7))
  {
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v25, 0, 1, v7);
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v9(&v6[v28], 1, v7))
  {
    uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v29, 0, 1, v7);
  }
  uint64_t v32 = v11[10];
  uint64_t v33 = &v5[v32];
  uint64_t v34 = &v6[v32];
  if (v9(&v6[v32], 1, v7))
  {
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v33, 0, 1, v7);
  }
  uint64_t v36 = v11[11];
  int v37 = &v5[v36];
  uint64_t v38 = &v6[v36];
  if (v9(&v6[v36], 1, v7))
  {
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v37, 0, 1, v7);
  }
  uint64_t v40 = v11[12];
  uint64_t v41 = &v5[v40];
  uint64_t v42 = &v6[v40];
  if (v9(&v6[v40], 1, v7))
  {
    uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v41, 0, 1, v7);
  }
  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  uint64_t v45 = &v5[v44];
  uint64_t v46 = &v6[v44];
  if (v9(&v6[v44], 1, v7))
  {
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v45, 0, 1, v7);
  }
  uint64_t v48 = v11[15];
  int v49 = &v5[v48];
  uint64_t v50 = &v6[v48];
  if (v9(&v6[v48], 1, v7))
  {
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v49, 0, 1, v7);
  }
  uint64_t v52 = v11[16];
  uint64_t v53 = &v5[v52];
  uint64_t v54 = &v6[v52];
  if (v9(&v6[v52], 1, v7))
  {
    uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v53, 0, 1, v7);
  }
  uint64_t v56 = v11[17];
  uint64_t v57 = &v5[v56];
  uint64_t v58 = &v6[v56];
  if (v9(&v6[v56], 1, v7))
  {
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v57, 0, 1, v7);
  }
  uint64_t v60 = v11[18];
  int v61 = &v5[v60];
  uint64_t v62 = &v6[v60];
  *(_DWORD *)int v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  v5[v11[19]] = v6[v11[19]];
  uint64_t v63 = v11[20];
  uint64_t v64 = &v5[v63];
  uint64_t v65 = &v6[v63];
  uint64_t v66 = *((void *)v65 + 1);
  *(void *)uint64_t v64 = *(void *)v65;
  *((void *)v64 + 1) = v66;
  uint64_t v67 = v11[21];
  int v68 = &v5[v67];
  uint64_t v69 = &v6[v67];
  uint64_t v70 = *((void *)v69 + 1);
  *(void *)int v68 = *(void *)v69;
  *((void *)v68 + 1) = v70;
  uint64_t v71 = *(int *)(a3 + 24);
  uint64_t v72 = (char *)a1 + v71;
  uint64_t v73 = (char *)a2 + v71;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9(v73, 1, v7))
  {
    uint64_t v74 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v72, v73, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v72, 0, 1, v7);
  }
  return a1;
}

char *sub_1003FA268(char *a1, void *a2, uint64_t a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v104 = a3;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v105 = *(void *)(v9 - 8);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v105 + 48);
  int v11 = v10(v7, 1, v9);
  int v12 = v10(v8, 1, v9);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v105 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v105 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v15 = v14[5];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  int v18 = v10(&v7[v15], 1, v9);
  int v19 = v10(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v16, v17, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v105 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v105 + 24))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = v14[6];
  uint64_t v22 = &v7[v21];
  uint64_t v23 = &v8[v21];
  int v24 = v10(&v7[v21], 1, v9);
  int v25 = v10(v23, 1, v9);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v22, v23, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v22, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v105 + 8))(v22, v9);
LABEL_18:
    uint64_t v26 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v105 + 24))(v22, v23, v9);
LABEL_19:
  uint64_t v27 = v14[7];
  uint64_t v28 = &v7[v27];
  uint64_t v29 = &v8[v27];
  int v30 = v10(&v7[v27], 1, v9);
  int v31 = v10(v29, 1, v9);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v28, v29, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v28, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v105 + 8))(v28, v9);
LABEL_24:
    uint64_t v32 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v105 + 24))(v28, v29, v9);
LABEL_25:
  uint64_t v33 = v14[8];
  uint64_t v34 = &v7[v33];
  uint64_t v35 = &v8[v33];
  int v36 = v10(&v7[v33], 1, v9);
  int v37 = v10(v35, 1, v9);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v34, v35, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v34, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v105 + 8))(v34, v9);
LABEL_30:
    uint64_t v38 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v105 + 24))(v34, v35, v9);
LABEL_31:
  uint64_t v39 = v14[9];
  uint64_t v40 = &v7[v39];
  uint64_t v41 = &v8[v39];
  int v42 = v10(&v7[v39], 1, v9);
  int v43 = v10(v41, 1, v9);
  if (v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v40, v41, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v40, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v105 + 8))(v40, v9);
LABEL_36:
    uint64_t v44 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v105 + 24))(v40, v41, v9);
LABEL_37:
  uint64_t v45 = v14[10];
  uint64_t v46 = &v7[v45];
  uint64_t v47 = &v8[v45];
  int v48 = v10(&v7[v45], 1, v9);
  int v49 = v10(v47, 1, v9);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v46, v47, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v46, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v105 + 8))(v46, v9);
LABEL_42:
    uint64_t v50 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v105 + 24))(v46, v47, v9);
LABEL_43:
  uint64_t v51 = v14[11];
  uint64_t v52 = &v7[v51];
  uint64_t v53 = &v8[v51];
  int v54 = v10(&v7[v51], 1, v9);
  int v55 = v10(v53, 1, v9);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v52, v53, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v52, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v55)
  {
    (*(void (**)(char *, uint64_t))(v105 + 8))(v52, v9);
LABEL_48:
    uint64_t v56 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v105 + 24))(v52, v53, v9);
LABEL_49:
  uint64_t v57 = v14[12];
  uint64_t v58 = &v7[v57];
  uint64_t v59 = &v8[v57];
  int v60 = v10(&v7[v57], 1, v9);
  int v61 = v10(v59, 1, v9);
  if (v60)
  {
    if (!v61)
    {
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v58, v59, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v58, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v61)
  {
    (*(void (**)(char *, uint64_t))(v105 + 8))(v58, v9);
LABEL_54:
    uint64_t v62 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v105 + 24))(v58, v59, v9);
LABEL_55:
  v7[v14[13]] = v8[v14[13]];
  uint64_t v63 = v14[14];
  uint64_t v64 = &v7[v63];
  uint64_t v65 = &v8[v63];
  int v66 = v10(&v7[v63], 1, v9);
  int v67 = v10(v65, 1, v9);
  if (v66)
  {
    if (!v67)
    {
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v64, v65, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v64, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v67)
  {
    (*(void (**)(char *, uint64_t))(v105 + 8))(v64, v9);
LABEL_60:
    uint64_t v68 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v64, v65, *(void *)(*(void *)(v68 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v105 + 24))(v64, v65, v9);
LABEL_61:
  uint64_t v69 = v14[15];
  uint64_t v70 = &v7[v69];
  uint64_t v71 = &v8[v69];
  int v72 = v10(&v7[v69], 1, v9);
  int v73 = v10(v71, 1, v9);
  if (v72)
  {
    if (!v73)
    {
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v70, v71, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v70, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v73)
  {
    (*(void (**)(char *, uint64_t))(v105 + 8))(v70, v9);
LABEL_66:
    uint64_t v74 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v70, v71, *(void *)(*(void *)(v74 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v105 + 24))(v70, v71, v9);
LABEL_67:
  uint64_t v75 = v14[16];
  uint64_t v76 = &v7[v75];
  uint64_t v77 = &v8[v75];
  int v78 = v10(&v7[v75], 1, v9);
  int v79 = v10(v77, 1, v9);
  if (v78)
  {
    if (!v79)
    {
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v76, v77, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v76, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v79)
  {
    (*(void (**)(char *, uint64_t))(v105 + 8))(v76, v9);
LABEL_72:
    uint64_t v80 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v76, v77, *(void *)(*(void *)(v80 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v105 + 24))(v76, v77, v9);
LABEL_73:
  uint64_t v81 = v14[17];
  uint64_t v82 = &v7[v81];
  int64_t v83 = &v8[v81];
  int v84 = v10(&v7[v81], 1, v9);
  int v85 = v10(v83, 1, v9);
  if (v84)
  {
    if (!v85)
    {
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v82, v83, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v82, 0, 1, v9);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v85)
  {
    (*(void (**)(char *, uint64_t))(v105 + 8))(v82, v9);
LABEL_78:
    uint64_t v86 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v82, v83, *(void *)(*(void *)(v86 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v105 + 24))(v82, v83, v9);
LABEL_79:
  uint64_t v87 = v14[18];
  uint64_t v88 = &v7[v87];
  uint64_t v89 = &v8[v87];
  int v90 = *(_DWORD *)v89;
  v88[4] = v89[4];
  *(_DWORD *)uint64_t v88 = v90;
  v7[v14[19]] = v8[v14[19]];
  uint64_t v91 = v14[20];
  uint64_t v92 = &v7[v91];
  uint64_t v93 = &v8[v91];
  *(void *)uint64_t v92 = *(void *)v93;
  *((void *)v92 + 1) = *((void *)v93 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v94 = v14[21];
  uint64_t v95 = &v7[v94];
  uint64_t v96 = &v8[v94];
  *(void *)uint64_t v95 = *(void *)v96;
  *((void *)v95 + 1) = *((void *)v96 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v97 = *(int *)(v104 + 24);
  uint64_t v98 = &a1[v97];
  uint64_t v99 = (char *)a2 + v97;
  int v100 = v10(&a1[v97], 1, v9);
  int v101 = v10(v99, 1, v9);
  if (!v100)
  {
    if (!v101)
    {
      (*(void (**)(char *, char *, uint64_t))(v105 + 24))(v98, v99, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v105 + 8))(v98, v9);
    goto LABEL_84;
  }
  if (v101)
  {
LABEL_84:
    uint64_t v102 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v98, v99, *(void *)(*(void *)(v102 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v98, v99, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v98, 0, 1, v9);
  return a1;
}

void *sub_1003FB1E8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  uint64_t v70 = v8;
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  int v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  int v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  uint64_t v22 = &v6[v20];
  if (v9(&v6[v20], 1, v7))
  {
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v21, 0, 1, v7);
  }
  uint64_t v24 = v11[8];
  int v25 = &v5[v24];
  uint64_t v26 = &v6[v24];
  if (v9(&v6[v24], 1, v7))
  {
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v25, 0, 1, v7);
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = &v5[v28];
  int v30 = &v6[v28];
  if (v9(&v6[v28], 1, v7))
  {
    uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v29, 0, 1, v7);
  }
  uint64_t v32 = v11[10];
  uint64_t v33 = &v5[v32];
  uint64_t v34 = &v6[v32];
  if (v9(&v6[v32], 1, v7))
  {
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v33, 0, 1, v7);
  }
  uint64_t v36 = v11[11];
  int v37 = &v5[v36];
  uint64_t v38 = &v6[v36];
  if (v9(&v6[v36], 1, v7))
  {
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v37, 0, 1, v7);
  }
  uint64_t v40 = v11[12];
  uint64_t v41 = &v5[v40];
  int v42 = &v6[v40];
  if (v9(&v6[v40], 1, v7))
  {
    uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v41, 0, 1, v7);
  }
  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  uint64_t v45 = &v5[v44];
  uint64_t v46 = &v6[v44];
  if (v9(&v6[v44], 1, v7))
  {
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v45, 0, 1, v7);
  }
  uint64_t v48 = v11[15];
  int v49 = &v5[v48];
  uint64_t v50 = &v6[v48];
  if (v9(&v6[v48], 1, v7))
  {
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v49, 0, 1, v7);
  }
  uint64_t v52 = v11[16];
  uint64_t v53 = &v5[v52];
  int v54 = &v6[v52];
  if (v9(&v6[v52], 1, v7))
  {
    uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v53, 0, 1, v7);
  }
  uint64_t v56 = v11[17];
  uint64_t v57 = &v5[v56];
  uint64_t v58 = &v6[v56];
  if (v9(&v6[v56], 1, v7))
  {
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v57, 0, 1, v7);
  }
  uint64_t v60 = v11[18];
  int v61 = &v5[v60];
  uint64_t v62 = &v6[v60];
  *(_DWORD *)int v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  v5[v11[19]] = v6[v11[19]];
  *(_OWORD *)&v5[v11[20]] = *(_OWORD *)&v6[v11[20]];
  *(_OWORD *)&v5[v11[21]] = *(_OWORD *)&v6[v11[21]];
  uint64_t v63 = *(int *)(a3 + 24);
  uint64_t v64 = (char *)a1 + v63;
  uint64_t v65 = (char *)a2 + v63;
  if (v9(v65, 1, v7))
  {
    uint64_t v66 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v64, v65, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v64, 0, 1, v7);
  }
  return a1;
}

char *sub_1003FBB94(char *a1, void *a2, uint64_t a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v107 = a3;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v108 = *(void *)(v9 - 8);
  uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v108 + 48);
  int v11 = v10(v7, 1, v9);
  int v12 = v10(v8, 1, v9);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v108 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v108 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v15 = v14[5];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  int v18 = v10(&v7[v15], 1, v9);
  int v19 = v10(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v16, v17, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v108 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v108 + 40))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = v14[6];
  uint64_t v22 = &v7[v21];
  uint64_t v23 = &v8[v21];
  int v24 = v10(&v7[v21], 1, v9);
  int v25 = v10(v23, 1, v9);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v22, v23, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v22, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v108 + 8))(v22, v9);
LABEL_18:
    uint64_t v26 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v108 + 40))(v22, v23, v9);
LABEL_19:
  uint64_t v27 = v14[7];
  uint64_t v28 = &v7[v27];
  uint64_t v29 = &v8[v27];
  int v30 = v10(&v7[v27], 1, v9);
  int v31 = v10(v29, 1, v9);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v28, v29, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v28, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v108 + 8))(v28, v9);
LABEL_24:
    uint64_t v32 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v108 + 40))(v28, v29, v9);
LABEL_25:
  uint64_t v33 = v14[8];
  uint64_t v34 = &v7[v33];
  uint64_t v35 = &v8[v33];
  int v36 = v10(&v7[v33], 1, v9);
  int v37 = v10(v35, 1, v9);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v34, v35, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v34, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v108 + 8))(v34, v9);
LABEL_30:
    uint64_t v38 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v108 + 40))(v34, v35, v9);
LABEL_31:
  uint64_t v39 = v14[9];
  uint64_t v40 = &v7[v39];
  uint64_t v41 = &v8[v39];
  int v42 = v10(&v7[v39], 1, v9);
  int v43 = v10(v41, 1, v9);
  if (v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v40, v41, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v40, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v108 + 8))(v40, v9);
LABEL_36:
    uint64_t v44 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v108 + 40))(v40, v41, v9);
LABEL_37:
  uint64_t v45 = v14[10];
  uint64_t v46 = &v7[v45];
  uint64_t v47 = &v8[v45];
  int v48 = v10(&v7[v45], 1, v9);
  int v49 = v10(v47, 1, v9);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v46, v47, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v46, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v108 + 8))(v46, v9);
LABEL_42:
    uint64_t v50 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v108 + 40))(v46, v47, v9);
LABEL_43:
  uint64_t v51 = v14[11];
  uint64_t v52 = &v7[v51];
  uint64_t v53 = &v8[v51];
  int v54 = v10(&v7[v51], 1, v9);
  int v55 = v10(v53, 1, v9);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v52, v53, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v52, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v55)
  {
    (*(void (**)(char *, uint64_t))(v108 + 8))(v52, v9);
LABEL_48:
    uint64_t v56 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v108 + 40))(v52, v53, v9);
LABEL_49:
  uint64_t v57 = v14[12];
  uint64_t v58 = &v7[v57];
  uint64_t v59 = &v8[v57];
  int v60 = v10(&v7[v57], 1, v9);
  int v61 = v10(v59, 1, v9);
  if (v60)
  {
    if (!v61)
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v58, v59, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v58, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v61)
  {
    (*(void (**)(char *, uint64_t))(v108 + 8))(v58, v9);
LABEL_54:
    uint64_t v62 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v108 + 40))(v58, v59, v9);
LABEL_55:
  v7[v14[13]] = v8[v14[13]];
  uint64_t v63 = v14[14];
  uint64_t v64 = &v7[v63];
  uint64_t v65 = &v8[v63];
  int v66 = v10(&v7[v63], 1, v9);
  int v67 = v10(v65, 1, v9);
  if (v66)
  {
    if (!v67)
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v64, v65, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v64, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v67)
  {
    (*(void (**)(char *, uint64_t))(v108 + 8))(v64, v9);
LABEL_60:
    uint64_t v68 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v64, v65, *(void *)(*(void *)(v68 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v108 + 40))(v64, v65, v9);
LABEL_61:
  uint64_t v69 = v14[15];
  uint64_t v70 = &v7[v69];
  uint64_t v71 = &v8[v69];
  int v72 = v10(&v7[v69], 1, v9);
  int v73 = v10(v71, 1, v9);
  if (v72)
  {
    if (!v73)
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v70, v71, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v70, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v73)
  {
    (*(void (**)(char *, uint64_t))(v108 + 8))(v70, v9);
LABEL_66:
    uint64_t v74 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v70, v71, *(void *)(*(void *)(v74 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v108 + 40))(v70, v71, v9);
LABEL_67:
  uint64_t v75 = v14[16];
  uint64_t v76 = &v7[v75];
  uint64_t v77 = &v8[v75];
  int v78 = v10(&v7[v75], 1, v9);
  int v79 = v10(v77, 1, v9);
  if (v78)
  {
    if (!v79)
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v76, v77, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v76, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v79)
  {
    (*(void (**)(char *, uint64_t))(v108 + 8))(v76, v9);
LABEL_72:
    uint64_t v80 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v76, v77, *(void *)(*(void *)(v80 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v108 + 40))(v76, v77, v9);
LABEL_73:
  uint64_t v81 = v14[17];
  uint64_t v82 = &v7[v81];
  int64_t v83 = &v8[v81];
  int v84 = v10(&v7[v81], 1, v9);
  int v85 = v10(v83, 1, v9);
  if (v84)
  {
    if (!v85)
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v82, v83, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v82, 0, 1, v9);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v85)
  {
    (*(void (**)(char *, uint64_t))(v108 + 8))(v82, v9);
LABEL_78:
    uint64_t v86 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v82, v83, *(void *)(*(void *)(v86 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v108 + 40))(v82, v83, v9);
LABEL_79:
  uint64_t v87 = v14[18];
  uint64_t v88 = &v7[v87];
  uint64_t v89 = &v8[v87];
  *(_DWORD *)uint64_t v88 = *(_DWORD *)v89;
  v88[4] = v89[4];
  v7[v14[19]] = v8[v14[19]];
  uint64_t v90 = v14[20];
  uint64_t v91 = &v7[v90];
  uint64_t v92 = &v8[v90];
  uint64_t v94 = *(void *)v92;
  uint64_t v93 = *((void *)v92 + 1);
  *(void *)uint64_t v91 = v94;
  *((void *)v91 + 1) = v93;
  swift_bridgeObjectRelease();
  uint64_t v95 = v14[21];
  uint64_t v96 = &v7[v95];
  uint64_t v97 = &v8[v95];
  uint64_t v99 = *(void *)v97;
  uint64_t v98 = *((void *)v97 + 1);
  *(void *)uint64_t v96 = v99;
  *((void *)v96 + 1) = v98;
  swift_bridgeObjectRelease();
  uint64_t v100 = *(int *)(v107 + 24);
  int v101 = &a1[v100];
  uint64_t v102 = (char *)a2 + v100;
  int v103 = v10(&a1[v100], 1, v9);
  int v104 = v10(v102, 1, v9);
  if (!v103)
  {
    if (!v104)
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 40))(v101, v102, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v108 + 8))(v101, v9);
    goto LABEL_84;
  }
  if (v104)
  {
LABEL_84:
    uint64_t v105 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v101, v102, *(void *)(*(void *)(v105 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v101, v102, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v101, 0, 1, v9);
  return a1;
}

uint64_t sub_1003FCAEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003FCB00);
}

uint64_t sub_1003FCB04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003FCB18);
}

uint64_t _s15GuestModeUnlockV18InitialLockContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100972D30);
}

void sub_1003FCB3C()
{
  type metadata accessor for SDAuthenticationSessionMetrics();
  if (v0 <= 0x3F)
  {
    sub_100271710();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1003FCC14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003FCC28);
}

uint64_t sub_1003FCC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SDAuthenticationCommonOperationInput();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1003FCCEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003FCD00);
}

uint64_t sub_1003FCD00(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SDAuthenticationCommonOperationInput();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t _s15GuestModeUnlockV4FlowVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100972DC8);
}

uint64_t sub_1003FCDE0()
{
  uint64_t result = type metadata accessor for SDAuthenticationCommonOperationInput();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1003FCE84(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    int v84 = a3;
    int v85 = a2;
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v16 = v15[5];
    uint64_t v17 = &v9[v16];
    int v18 = &v10[v16];
    if (v13(&v10[v16], 1, v11))
    {
      uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    uint64_t v20 = v15[6];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    if (v13(&v10[v20], 1, v11))
    {
      uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v21, v22, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v21, 0, 1, v11);
    }
    uint64_t v24 = v15[7];
    int v25 = &v9[v24];
    uint64_t v26 = &v10[v24];
    if (v13(&v10[v24], 1, v11))
    {
      uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v25, v26, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
    }
    uint64_t v28 = v15[8];
    uint64_t v29 = &v9[v28];
    int v30 = &v10[v28];
    if (v13(&v10[v28], 1, v11))
    {
      uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v29, v30, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v29, 0, 1, v11);
    }
    uint64_t v32 = v15[9];
    uint64_t v33 = &v9[v32];
    uint64_t v34 = &v10[v32];
    if (v13(&v10[v32], 1, v11))
    {
      uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v33, v34, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v33, 0, 1, v11);
    }
    uint64_t v36 = v15[10];
    int v37 = &v9[v36];
    uint64_t v38 = &v10[v36];
    if (v13(&v10[v36], 1, v11))
    {
      uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v37, v38, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v37, 0, 1, v11);
    }
    uint64_t v40 = v15[11];
    uint64_t v41 = &v9[v40];
    int v42 = &v10[v40];
    if (v13(&v10[v40], 1, v11))
    {
      uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v41, v42, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v41, 0, 1, v11);
    }
    uint64_t v44 = v15[12];
    uint64_t v45 = &v9[v44];
    uint64_t v46 = &v10[v44];
    if (v13(&v10[v44], 1, v11))
    {
      uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v45, v46, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v45, 0, 1, v11);
    }
    v9[v15[13]] = v10[v15[13]];
    uint64_t v48 = v15[14];
    int v49 = &v9[v48];
    uint64_t v50 = &v10[v48];
    if (v13(&v10[v48], 1, v11))
    {
      uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v49, v50, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v49, 0, 1, v11);
    }
    uint64_t v52 = v15[15];
    uint64_t v53 = &v9[v52];
    int v54 = &v10[v52];
    if (v13(&v10[v52], 1, v11))
    {
      uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v53, v54, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v53, 0, 1, v11);
    }
    uint64_t v56 = v15[16];
    uint64_t v57 = &v9[v56];
    uint64_t v58 = &v10[v56];
    if (v13(&v10[v56], 1, v11))
    {
      uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v57, v58, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v57, 0, 1, v11);
    }
    uint64_t v60 = v15[17];
    int v61 = &v9[v60];
    uint64_t v62 = &v10[v60];
    if (v13(&v10[v60], 1, v11))
    {
      uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v61, v62, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v61, 0, 1, v11);
    }
    uint64_t v64 = v15[18];
    uint64_t v65 = &v9[v64];
    int v66 = &v10[v64];
    *(_DWORD *)uint64_t v65 = *(_DWORD *)v66;
    v65[4] = v66[4];
    v9[v15[19]] = v10[v15[19]];
    uint64_t v67 = v15[20];
    uint64_t v68 = &v9[v67];
    uint64_t v69 = &v10[v67];
    uint64_t v70 = *((void *)v69 + 1);
    *(void *)uint64_t v68 = *(void *)v69;
    *((void *)v68 + 1) = v70;
    uint64_t v71 = v15[21];
    int v72 = &v9[v71];
    int v73 = &v10[v71];
    uint64_t v74 = *((void *)v73 + 1);
    *(void *)int v72 = *(void *)v73;
    *((void *)v72 + 1) = v74;
    uint64_t v75 = v84[6];
    uint64_t v76 = (char *)v7 + v75;
    uint64_t v77 = (char *)v85 + v75;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v77, 1, v11))
    {
      uint64_t v78 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v76, v77, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v76, 0, 1, v11);
    }
    uint64_t v79 = v84[7];
    uint64_t v80 = v84[8];
    uint64_t v81 = *(void **)((char *)v85 + v79);
    *(void *)((char *)v7 + v79) = v81;
    *((unsigned char *)v7 + v80) = *((unsigned char *)v85 + v80);
    id v82 = v81;
  }
  return v7;
}

void sub_1003FD8A0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v9 = v4 + v8[5];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = v4 + v8[6];
  if (!v7(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = v4 + v8[7];
  if (!v7(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = v4 + v8[8];
  if (!v7(v12, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  }
  uint64_t v13 = v4 + v8[9];
  if (!v7(v13, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v5);
  }
  uint64_t v14 = v4 + v8[10];
  if (!v7(v14, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = v4 + v8[11];
  if (!v7(v15, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = v4 + v8[12];
  if (!v7(v16, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = v4 + v8[14];
  if (!v7(v17, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = v4 + v8[15];
  if (!v7(v18, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, v5);
  }
  uint64_t v19 = v4 + v8[16];
  if (!v7(v19, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = v4 + v8[17];
  if (!v7(v20, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v20, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = a1 + a2[6];
  if (!v7(v21, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v5);
  }
  uint64_t v22 = *(void **)(a1 + a2[7]);
}

void *sub_1003FDCEC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  id v82 = a3;
  int64_t v83 = a2;
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v14 = v13[5];
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  if (v11(&v8[v14], 1, v9))
  {
    uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v16, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
  }
  uint64_t v18 = v13[6];
  uint64_t v19 = &v7[v18];
  uint64_t v20 = &v8[v18];
  if (v11(&v8[v18], 1, v9))
  {
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v20, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  }
  uint64_t v22 = v13[7];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  if (v11(&v8[v22], 1, v9))
  {
    uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
  }
  uint64_t v26 = v13[8];
  uint64_t v27 = &v7[v26];
  uint64_t v28 = &v8[v26];
  if (v11(&v8[v26], 1, v9))
  {
    uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v27, v28, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
  }
  uint64_t v30 = v13[9];
  uint64_t v31 = &v7[v30];
  uint64_t v32 = &v8[v30];
  if (v11(&v8[v30], 1, v9))
  {
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v31, v32, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
  }
  uint64_t v34 = v13[10];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  if (v11(&v8[v34], 1, v9))
  {
    uint64_t v37 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
  }
  uint64_t v38 = v13[11];
  uint64_t v39 = &v7[v38];
  uint64_t v40 = &v8[v38];
  if (v11(&v8[v38], 1, v9))
  {
    uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v39, v40, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v9);
  }
  uint64_t v42 = v13[12];
  uint64_t v43 = &v7[v42];
  uint64_t v44 = &v8[v42];
  if (v11(&v8[v42], 1, v9))
  {
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v43, v44, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0, 1, v9);
  }
  v7[v13[13]] = v8[v13[13]];
  uint64_t v46 = v13[14];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  if (v11(&v8[v46], 1, v9))
  {
    uint64_t v49 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
  }
  uint64_t v50 = v13[15];
  uint64_t v51 = &v7[v50];
  uint64_t v52 = &v8[v50];
  if (v11(&v8[v50], 1, v9))
  {
    uint64_t v53 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v51, v52, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v51, 0, 1, v9);
  }
  uint64_t v54 = v13[16];
  uint64_t v55 = &v7[v54];
  uint64_t v56 = &v8[v54];
  if (v11(&v8[v54], 1, v9))
  {
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v55, v56, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v55, 0, 1, v9);
  }
  uint64_t v58 = v13[17];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  if (v11(&v8[v58], 1, v9))
  {
    uint64_t v61 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
  }
  uint64_t v62 = v13[18];
  uint64_t v63 = &v7[v62];
  uint64_t v64 = &v8[v62];
  *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
  v63[4] = v64[4];
  v7[v13[19]] = v8[v13[19]];
  uint64_t v65 = v13[20];
  int v66 = &v7[v65];
  uint64_t v67 = &v8[v65];
  uint64_t v68 = *((void *)v67 + 1);
  *(void *)int v66 = *(void *)v67;
  *((void *)v66 + 1) = v68;
  uint64_t v69 = v13[21];
  uint64_t v70 = &v7[v69];
  uint64_t v71 = &v8[v69];
  uint64_t v72 = *((void *)v71 + 1);
  *(void *)uint64_t v70 = *(void *)v71;
  *((void *)v70 + 1) = v72;
  uint64_t v73 = v82[6];
  uint64_t v74 = (char *)a1 + v73;
  uint64_t v75 = (char *)v83 + v73;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v75, 1, v9))
  {
    uint64_t v76 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v74, v75, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v74, 0, 1, v9);
  }
  uint64_t v77 = v82[7];
  uint64_t v78 = v82[8];
  uint64_t v79 = *(void **)((char *)v83 + v77);
  *(void *)((char *)a1 + v77) = v79;
  *((unsigned char *)a1 + v78) = *((unsigned char *)v83 + v78);
  id v80 = v79;
  return a1;
}

char *sub_1003FE6A8(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  NSString v110 = a2;
  id v111 = a1;
  uint64_t v109 = a3;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  int v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  int64_t v83 = &v7[v82];
  int v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v83, v84, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v86)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v83, v84, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  uint64_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  int v91 = *(_DWORD *)v90;
  v89[4] = v90[4];
  *(_DWORD *)uint64_t v89 = v91;
  v7[v15[19]] = v8[v15[19]];
  uint64_t v92 = v15[20];
  uint64_t v93 = &v7[v92];
  uint64_t v94 = &v8[v92];
  *(void *)uint64_t v93 = *(void *)v94;
  *((void *)v93 + 1) = *((void *)v94 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v95 = v15[21];
  uint64_t v96 = &v7[v95];
  uint64_t v97 = &v8[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  *((void *)v96 + 1) = *((void *)v97 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v98 = v109[6];
  uint64_t v99 = &v111[v98];
  uint64_t v100 = (char *)v110 + v98;
  int v101 = v11(&v111[v98], 1, v9);
  int v102 = v11(v100, 1, v9);
  if (!v101)
  {
    if (!v102)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v99, v100, v9);
      goto LABEL_85;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v99, v9);
    goto LABEL_84;
  }
  if (v102)
  {
LABEL_84:
    uint64_t v103 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v99, v100, *(void *)(*(void *)(v103 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v99, v100, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v99, 0, 1, v9);
LABEL_85:
  uint64_t v104 = v109[7];
  uint64_t v105 = *(void **)&v111[v104];
  uint64_t v106 = *(void **)((char *)v110 + v104);
  *(void *)&v111[v104] = v106;
  id v107 = v106;

  v111[v109[8]] = *((unsigned char *)v110 + v109[8]);
  return v111;
}

void *sub_1003FF5E0(void *a1, char *a2, int *a3)
{
  *a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v71 = a3;
  uint64_t v72 = a2;
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  int v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v14 = v13[5];
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  if (v11(&v8[v14], 1, v9))
  {
    uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v16, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
  }
  uint64_t v18 = v13[6];
  int v19 = &v7[v18];
  int v20 = &v8[v18];
  if (v11(&v8[v18], 1, v9))
  {
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v20, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  }
  uint64_t v22 = v13[7];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  if (v11(&v8[v22], 1, v9))
  {
    uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
  }
  uint64_t v26 = v13[8];
  uint64_t v27 = &v7[v26];
  uint64_t v28 = &v8[v26];
  if (v11(&v8[v26], 1, v9))
  {
    uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v27, v28, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
  }
  uint64_t v30 = v13[9];
  int v31 = &v7[v30];
  int v32 = &v8[v30];
  if (v11(&v8[v30], 1, v9))
  {
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v31, v32, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
  }
  uint64_t v34 = v13[10];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  if (v11(&v8[v34], 1, v9))
  {
    uint64_t v37 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
  }
  uint64_t v38 = v13[11];
  uint64_t v39 = &v7[v38];
  uint64_t v40 = &v8[v38];
  if (v11(&v8[v38], 1, v9))
  {
    uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v39, v40, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v9);
  }
  uint64_t v42 = v13[12];
  int v43 = &v7[v42];
  int v44 = &v8[v42];
  if (v11(&v8[v42], 1, v9))
  {
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v43, v44, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0, 1, v9);
  }
  v7[v13[13]] = v8[v13[13]];
  uint64_t v46 = v13[14];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  if (v11(&v8[v46], 1, v9))
  {
    uint64_t v49 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
  }
  uint64_t v50 = v13[15];
  uint64_t v51 = &v7[v50];
  uint64_t v52 = &v8[v50];
  if (v11(&v8[v50], 1, v9))
  {
    uint64_t v53 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v51, v52, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v51, 0, 1, v9);
  }
  uint64_t v54 = v13[16];
  int v55 = &v7[v54];
  int v56 = &v8[v54];
  if (v11(&v8[v54], 1, v9))
  {
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v55, v56, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v55, 0, 1, v9);
  }
  uint64_t v58 = v13[17];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  if (v11(&v8[v58], 1, v9))
  {
    uint64_t v61 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
  }
  uint64_t v62 = v13[18];
  uint64_t v63 = &v7[v62];
  uint64_t v64 = &v8[v62];
  *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
  v63[4] = v64[4];
  v7[v13[19]] = v8[v13[19]];
  *(_OWORD *)&v7[v13[20]] = *(_OWORD *)&v8[v13[20]];
  *(_OWORD *)&v7[v13[21]] = *(_OWORD *)&v8[v13[21]];
  uint64_t v65 = v71[6];
  int v66 = (char *)a1 + v65;
  int v67 = &v72[v65];
  if (v11(&v72[v65], 1, v9))
  {
    uint64_t v68 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v66, v67, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v66, 0, 1, v9);
  }
  uint64_t v69 = v71[8];
  *(void *)((char *)a1 + v71[7]) = *(void *)&v72[v71[7]];
  *((unsigned char *)a1 + v69) = v72[v69];
  return a1;
}

char *sub_1003FFF74(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  id v111 = a2;
  unint64_t v112 = a1;
  NSString v110 = a3;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  int v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  int64_t v83 = &v7[v82];
  int v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v83, v84, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v86)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v83, v84, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  uint64_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  *(_DWORD *)uint64_t v89 = *(_DWORD *)v90;
  v89[4] = v90[4];
  v7[v15[19]] = v8[v15[19]];
  uint64_t v91 = v15[20];
  uint64_t v92 = &v7[v91];
  uint64_t v93 = &v8[v91];
  uint64_t v95 = *(void *)v93;
  uint64_t v94 = *((void *)v93 + 1);
  *(void *)uint64_t v92 = v95;
  *((void *)v92 + 1) = v94;
  swift_bridgeObjectRelease();
  uint64_t v96 = v15[21];
  uint64_t v97 = &v7[v96];
  uint64_t v98 = &v8[v96];
  uint64_t v100 = *(void *)v98;
  uint64_t v99 = *((void *)v98 + 1);
  *(void *)uint64_t v97 = v100;
  *((void *)v97 + 1) = v99;
  swift_bridgeObjectRelease();
  uint64_t v101 = v110[6];
  int v102 = &v112[v101];
  uint64_t v103 = (char *)v111 + v101;
  int v104 = v11(&v112[v101], 1, v9);
  int v105 = v11(v103, 1, v9);
  if (!v104)
  {
    if (!v105)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v102, v103, v9);
      goto LABEL_85;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v102, v9);
    goto LABEL_84;
  }
  if (v105)
  {
LABEL_84:
    uint64_t v106 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v102, v103, *(void *)(*(void *)(v106 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v102, v103, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v102, 0, 1, v9);
LABEL_85:
  uint64_t v107 = v110[7];
  uint64_t v108 = *(void **)&v112[v107];
  *(void *)&v112[v107] = *(void *)((char *)v111 + v107);

  v112[v110[8]] = *((unsigned char *)v111 + v110[8]);
  return v112;
}

uint64_t sub_100400E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100400E94);
}

uint64_t sub_100400E98(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000A844((uint64_t *)&unk_100975040);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100400FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100400FDC);
}

void *sub_100400FE0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000A844((uint64_t *)&unk_100975040);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_100401110()
{
  type metadata accessor for SDAuthenticationSessionMetrics();
  if (v0 <= 0x3F)
  {
    sub_100271710();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

id sub_1004011FC()
{
  return sub_100401D44(_s15GuestModeUnlockV17InitialKeyContextVMa, (Class *)off_1008C6918);
}

uint64_t sub_100401230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100403170(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
}

uint64_t sub_100401268(uint64_t a1, uint64_t a2)
{
  return sub_10040208C(a1, a2, _s15GuestModeUnlockV17InitialKeyContextVMa, (Class *)off_1008C6918);
}

uint64_t sub_10040129C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002BEBA4(v2 + *(int *)(a1 + 24), a2);
}

id sub_1004012AC()
{
  uint64_t v1 = *(int *)(_s15GuestModeUnlockV20HandleRequestContextVMa(0) + 36);
  uint64_t v2 = *(void **)(v0 + v1);
  if (v2)
  {
    id v3 = *(id *)(v0 + v1);
LABEL_5:
    id v5 = v2;
    return v3;
  }
  id result = [objc_allocWithZone((Class)SDAuthenticationResponse) init];
  if (result)
  {
    *(void *)(v0 + v1) = result;
    id v3 = result;
    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_10040131C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v41 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v37 - v9;
  sub_10000A844(&qword_10096BBB0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100776550;
  if (qword_100969DB8 != -1) {
    swift_once();
  }
  *(void *)(v11 + 56) = &type metadata for SDAuthentication.Operation.RecordSessionStart;
  *(void *)(v11 + 64) = &off_100971D08;
  *(void *)(v11 + 96) = &type metadata for SDAuthentication.Operation.RecordRemoteUnlockDate;
  *(void *)(v11 + 104) = &off_100971CE8;
  *(void *)(v11 + 136) = &type metadata for SDAuthentication.Operation.RecordDiscoveryEnd;
  *(void *)(v11 + 144) = &off_100971CC8;
  *(void *)(v11 + 176) = &type metadata for SDAuthentication.Operation.RecordKeyExchangeStart;
  *(void *)(v11 + 184) = &off_100971CA8;
  *(void *)(v11 + 216) = &type metadata for SDAuthentication.Operation.RecordKeyExchangeEnd;
  *(void *)(v11 + 224) = &off_100971C88;
  *(void *)(v11 + 256) = &type metadata for SDAuthentication.Operation.CheckLocalSecurityPolicy;
  *(void *)(v11 + 264) = &off_100971848;
  *(void *)(v11 + 296) = &type metadata for SDAuthentication.Operation.CheckLockRegisteredAndArmedWithAKSManager;
  *(void *)(v11 + 304) = &off_100971668;
  *(void *)(v11 + 336) = &type metadata for SDAuthentication.Operation.UseReceivedTokenForIncludingFirstAKSTokenWithLTKSessionInMessage;
  *(void *)(v11 + 344) = &off_100971C68;
  *(void *)(v11 + 376) = &type metadata for SDAuthentication.Operation.SendResponseMessage;
  *(void *)(v11 + 384) = &off_100971C48;
  *a3 = v11;
  int v12 = (int *)_s15GuestModeUnlockV20HandleRequestContextVMa(0);
  uint64_t v13 = (uint64_t)a3 + v12[7];
  uint64_t v42 = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v13, 1, 1, v5);
  uint64_t v14 = v12[9];
  *(uint64_t *)((char *)a3 + v14) = 0;
  *((unsigned char *)a3 + v12[10]) = 1;
  if ([a1 hasAksToken]
    && (id v15 = [a1 aksToken]) != 0)
  {
    uint64_t v16 = v15;
    uint64_t v40 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v18 = v17;

    uint64_t v19 = _s15GuestModeUnlockV18InitialLockContextVMa(0);
    uint64_t v20 = v43;
    sub_100403170(v43 + *(int *)(v19 + 20), (uint64_t)a3 + v12[5], (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
    sub_10033FE48(v20 + *(int *)(v19 + 24), v13);
    if ([a1 hasUnlockDate] && (objc_msgSend(a1, "unlockDate"), v21 != 0.0))
    {
      [a1 unlockDate];
      Date.init(timeIntervalSince1970:)();
    }
    else
    {
      Date.init()();
    }
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))((char *)a3 + v12[8], v10, v5);
    uint64_t v22 = (uint64_t *)((char *)a3 + v12[6]);
    uint64_t v23 = v40;
    *uint64_t v22 = v40;
    v22[1] = v18;
    sub_10025ADCC(v23, v18);
    if (qword_100969DB0 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_10000B47C(v24, (uint64_t)qword_100972CC0);
    id v25 = a1;
    int v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v45 = v39;
      *(_DWORD *)uint64_t v28 = 136315138;
      v37[1] = v28 + 4;
      [v25 unlockDate];
      uint64_t v29 = v41;
      Date.init(timeIntervalSince1970:)();
      sub_100403238();
      uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v38 = v18;
      uint64_t v31 = v30;
      unint64_t v33 = v32;
      (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v5);
      uint64_t v44 = sub_100254634(v31, v33, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "got remote unlock date: %s", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v34 = v40;
      unint64_t v35 = v38;
    }
    else
    {

      uint64_t v34 = v40;
      unint64_t v35 = v18;
    }
    sub_100250CC4(v34, v35);
    sub_1004031D8(v43, _s15GuestModeUnlockV18InitialLockContextVMa);
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v36 = 1;
    *(void *)(v36 + 8) = 0xD000000000000011;
    *(void *)(v36 + 16) = 0x80000001007BC980;
    swift_willThrow();

    sub_1004031D8(v43, _s15GuestModeUnlockV18InitialLockContextVMa);
    swift_bridgeObjectRelease();
    sub_10000A7E8(v13, (uint64_t *)&unk_100975040);
  }
}

uint64_t sub_100401904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 32);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_100401974@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002BEBA4(v2 + *(int *)(a1 + 28), a2);
}

uint64_t sub_10040198C(uint64_t a1, uint64_t a2)
{
  return sub_100401C80(a1, a2, (uint64_t (*)(void))sub_1004012AC);
}

id sub_1004019B8()
{
  uint64_t v1 = *(int *)(_s15GuestModeUnlockV21HandleResponseContextVMa(0) + 32);
  uint64_t v2 = *(void **)(v0 + v1);
  if (v2)
  {
    id v3 = *(id *)(v0 + v1);
LABEL_5:
    id v5 = v2;
    return v3;
  }
  id result = [objc_allocWithZone((Class)SDAuthenticationToken) init];
  if (result)
  {
    *(void *)(v0 + v1) = result;
    id v3 = result;
    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_100401A28(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_10000A844(&qword_10096BBB0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100770AD0;
  if (qword_100969DB8 != -1) {
    swift_once();
  }
  *(void *)(v6 + 56) = &type metadata for SDAuthentication.Operation.IncludeNextAKSTokenWithLTKSessionInMessage;
  *(void *)(v6 + 64) = &off_100971C28;
  *(void *)(v6 + 96) = &type metadata for SDAuthentication.Operation.SendTokenMessage;
  *(void *)(v6 + 104) = &off_100971C08;
  *a3 = v6;
  uint64_t v7 = (int *)_s15GuestModeUnlockV21HandleResponseContextVMa(0);
  *(_DWORD *)((char *)a3 + v7[6]) = 34;
  uint64_t v8 = v7[8];
  *(uint64_t *)((char *)a3 + v8) = 0;
  *((unsigned char *)a3 + v7[9]) = 7;
  if ([a1 hasAksToken])
  {
    uint64_t v9 = _s15GuestModeUnlockV17InitialKeyContextVMa(0);
    sub_100403170(a2 + *(int *)(v9 + 20), (uint64_t)a3 + v7[5], (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
    id v10 = [a1 aksToken];
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      sub_1004031D8(a2, _s15GuestModeUnlockV17InitialKeyContextVMa);
      id v15 = (uint64_t *)((char *)a3 + v7[7]);
      *id v15 = v12;
      v15[1] = v14;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v16 = 1;
    *(void *)(v16 + 8) = 0xD000000000000019;
    *(void *)(v16 + 16) = 0x80000001007B72B0;
    swift_willThrow();

    sub_1004031D8(a2, _s15GuestModeUnlockV17InitialKeyContextVMa);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100401C48(uint64_t a1)
{
  return *(unsigned int *)(v1 + *(int *)(a1 + 24));
}

uint64_t sub_100401C54(uint64_t a1, uint64_t a2)
{
  return sub_100401C80(a1, a2, (uint64_t (*)(void))sub_1004019B8);
}

uint64_t sub_100401C80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v3 = (void *)a3();
  id v4 = [v3 data];

  if (v4)
  {
    uint64_t v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

    return v5;
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v7 = 10;
    *(void *)(v7 + 8) = 0xD00000000000001ALL;
    *(void *)(v7 + 16) = 0x80000001007B72F0;
    return swift_willThrow();
  }
}

id sub_100401D44(uint64_t (*a1)(void), Class *a2)
{
  uint64_t v4 = *(int *)(a1(0) + 28);
  uint64_t v5 = *(void **)(v2 + v4);
  if (v5)
  {
    id v6 = *(id *)(v2 + v4);
LABEL_5:
    id v8 = v5;
    return v6;
  }
  id result = [objc_allocWithZone(*a2) init];
  if (result)
  {
    *(void *)(v2 + v4) = result;
    id v6 = result;
    uint64_t v5 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_100401DC4(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_10000A844(&qword_10096BBB0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1007709D0;
  if (qword_100969DB8 != -1) {
    swift_once();
  }
  *(void *)(v6 + 56) = &type metadata for SDAuthentication.Operation.ConsumeAKSTokenWithLTKSession;
  *(void *)(v6 + 64) = &off_100971BE8;
  *(void *)(v6 + 96) = &type metadata for SDAuthentication.Operation.SendConfirmation;
  *(void *)(v6 + 104) = &off_100971EC8;
  *(void *)(v6 + 136) = &type metadata for SDAuthentication.Operation.FinishSession;
  *(void *)(v6 + 144) = &off_100971BC8;
  *a3 = v6;
  uint64_t v7 = (int *)_s15GuestModeUnlockV18HandleTokenContextVMa(0);
  uint64_t v8 = v7[7];
  *(uint64_t *)((char *)a3 + v8) = 0;
  *((unsigned char *)a3 + v7[8]) = 2;
  if ([a1 hasAksToken])
  {
    uint64_t v9 = _s15GuestModeUnlockV20HandleRequestContextVMa(0);
    sub_100403170(a2 + *(int *)(v9 + 20), (uint64_t)a3 + v7[5], (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
    id v10 = [a1 aksToken];
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      sub_1004031D8(a2, _s15GuestModeUnlockV20HandleRequestContextVMa);
      id v15 = (uint64_t *)((char *)a3 + v7[6]);
      *id v15 = v12;
      v15[1] = v14;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v16 = 1;
    *(void *)(v16 + 8) = 0xD000000000000019;
    *(void *)(v16 + 16) = 0x80000001007B72B0;
    swift_willThrow();

    sub_1004031D8(a2, _s15GuestModeUnlockV20HandleRequestContextVMa);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100401FE8(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 24);
  uint64_t v3 = *(void *)v2;
  sub_10025ADCC(*(void *)v2, *(void *)(v2 + 8));
  return v3;
}

id sub_100402024()
{
  return sub_100401D44(_s15GuestModeUnlockV18HandleTokenContextVMa, (Class *)off_1008C68E0);
}

uint64_t sub_100402058(uint64_t a1, uint64_t a2)
{
  return sub_10040208C(a1, a2, _s15GuestModeUnlockV18HandleTokenContextVMa, (Class *)off_1008C68E0);
}

uint64_t sub_10040208C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), Class *a4)
{
  id v4 = sub_100401D44(a3, a4);
  id v5 = [v4 data];

  if (v5)
  {
    uint64_t v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

    return v6;
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v8 = 10;
    *(void *)(v8 + 8) = 0xD00000000000001ALL;
    *(void *)(v8 + 16) = 0x80000001007B72F0;
    return swift_willThrow();
  }
}

uint64_t sub_100402154@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_10000A844(&qword_10096BBB0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1007709D0;
  if (qword_100969DB8 != -1) {
    swift_once();
  }
  *(void *)(v6 + 56) = &type metadata for SDAuthentication.Operation.HandleSucceededResult;
  *(void *)(v6 + 64) = &off_100971EA8;
  *(void *)(v6 + 96) = &type metadata for SDAuthentication.Operation.ConfirmAKSSessionWithLTKSession;
  *(void *)(v6 + 104) = &off_100971BA8;
  *(void *)(v6 + 136) = &type metadata for SDAuthentication.Operation.FinishSession;
  *(void *)(v6 + 144) = &off_100971BC8;
  *a3 = v6;
  if ([a1 hasSuccess])
  {
    uint64_t v7 = a2 + *(int *)(_s15GuestModeUnlockV21HandleResponseContextVMa(0) + 20);
    uint64_t v8 = _s15GuestModeUnlockV25HandleConfirmationContextVMa(0);
    sub_100403170(v7, (uint64_t)a3 + *(int *)(v8 + 20), (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
    LOBYTE(v7) = [a1 success];

    uint64_t result = sub_1004031D8(a2, _s15GuestModeUnlockV21HandleResponseContextVMa);
    *((unsigned char *)a3 + *(int *)(v8 + 24)) = v7;
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v10 = 1;
    *(void *)(v10 + 8) = 0xD000000000000016;
    *(void *)(v10 + 16) = 0x80000001007B72D0;
    swift_willThrow();

    sub_1004031D8(a2, _s15GuestModeUnlockV21HandleResponseContextVMa);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100402334(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v101 = a2;
  uint64_t v96 = a3;
  uint64_t v80 = _s15GuestModeUnlockV25HandleConfirmationContextVMa(0);
  __chkstk_darwin(v80);
  int v84 = (uint64_t *)((char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_10000A844(&qword_100972EA8);
  __chkstk_darwin(v5 - 8);
  uint64_t v89 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = _s15GuestModeUnlockV18HandleTokenContextVMa(0);
  __chkstk_darwin(v81);
  uint64_t v88 = (uint64_t *)((char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_10000A844(&qword_100972EB0);
  __chkstk_darwin(v8 - 8);
  uint64_t v95 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = _s15GuestModeUnlockV21HandleResponseContextVMa(0);
  uint64_t v87 = *(void *)(v90 - 8);
  uint64_t v10 = __chkstk_darwin(v90);
  uint64_t v82 = (uint64_t)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v83 = (uint64_t)&v80 - v13;
  __chkstk_darwin(v12);
  uint64_t v94 = (uint64_t *)((char *)&v80 - v14);
  uint64_t v15 = sub_10000A844(&qword_100972EB8);
  __chkstk_darwin(v15 - 8);
  unint64_t v17 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = _s15GuestModeUnlockV17InitialKeyContextVMa(0);
  uint64_t v98 = *(void *)(v18 - 8);
  uint64_t v99 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v92 = (uint64_t)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v93 = (uint64_t)&v80 - v21;
  uint64_t v97 = _s15GuestModeUnlockV20HandleRequestContextVMa(0);
  uint64_t v91 = *(void *)(v97 - 8);
  uint64_t v22 = __chkstk_darwin(v97);
  uint64_t v85 = (uint64_t)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v86 = (uint64_t)&v80 - v25;
  __chkstk_darwin(v24);
  os_log_type_t v27 = (uint64_t *)((char *)&v80 - v26);
  uint64_t v28 = sub_10000A844(&qword_100972EC0);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)&v80 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = _s15GuestModeUnlockV18InitialLockContextVMa(0);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = __chkstk_darwin(v31);
  unint64_t v35 = (char *)&v80 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  int v37 = (char *)&v80 - v36;
  sub_100278C8C(a1, (uint64_t)v102);
  sub_10000A844(&qword_100977940);
  sub_10000B740(0, &qword_10096BDD0);
  if (swift_dynamicCast())
  {
    id v38 = v103;
    sub_100278C8C(v101, (uint64_t)v102);
    sub_10000A844(&qword_10096BDF0);
    int v39 = swift_dynamicCast();
    uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
    if (v39)
    {
      v40(v30, 0, 1, v31);
      sub_100403108((uint64_t)v30, (uint64_t)v37, _s15GuestModeUnlockV18InitialLockContextVMa);
      sub_100403170((uint64_t)v37, (uint64_t)v35, _s15GuestModeUnlockV18InitialLockContextVMa);
      id v38 = v38;
      uint64_t v41 = v100;
      sub_10040131C(v38, (uint64_t)v35, v27);
      if (!v41)
      {
        uint64_t v70 = v96;
        v96[3] = v97;
        v70[4] = (uint64_t)&off_1008D9E28;
        uint64_t v71 = sub_100278AE4(v70);
        sub_100403108((uint64_t)v27, (uint64_t)v71, _s15GuestModeUnlockV20HandleRequestContextVMa);

        sub_1004031D8((uint64_t)v37, _s15GuestModeUnlockV18InitialLockContextVMa);
        return;
      }
      uint64_t v42 = _s15GuestModeUnlockV18InitialLockContextVMa;
      uint64_t v43 = (uint64_t)v37;
      goto LABEL_20;
    }
    v40(v30, 1, 1, v31);
    sub_10000A7E8((uint64_t)v30, &qword_100972EC0);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v53 = 10;
    unint64_t v54 = 0xD000000000000047;
    int v55 = "Invalid previous context as InitialLockContext, message may be replayed";
LABEL_26:
    *(void *)(v53 + 8) = v54;
    *(void *)(v53 + 16) = (unint64_t)(v55 - 32) | 0x8000000000000000;
    swift_willThrow();
    goto LABEL_27;
  }
  uint64_t v44 = v101;
  sub_100278C8C(a1, (uint64_t)v102);
  sub_10000B740(0, &qword_10096BDD8);
  if (!swift_dynamicCast())
  {
    sub_100278C8C(a1, (uint64_t)v102);
    sub_10000B740(0, &qword_10096BDE0);
    if (swift_dynamicCast())
    {
      id v38 = v103;
      sub_100278C8C(v44, (uint64_t)v102);
      sub_10000A844(&qword_10096BDF0);
      uint64_t v56 = (uint64_t)v95;
      uint64_t v57 = v97;
      int v58 = swift_dynamicCast();
      uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56);
      if (!v58)
      {
        v59(v56, 1, 1, v57);
        sub_10000A7E8(v56, &qword_100972EB0);
        sub_10024D280();
        swift_allocError();
        *(_DWORD *)uint64_t v53 = 10;
        unint64_t v54 = 0xD000000000000049;
        int v55 = "Invalid previous context as HandleRequestContext, message may be replayed";
        goto LABEL_26;
      }
      v59(v56, 0, 1, v57);
      uint64_t v48 = v86;
      sub_100403108(v56, v86, _s15GuestModeUnlockV20HandleRequestContextVMa);
      uint64_t v60 = v85;
      sub_100403170(v48, v85, _s15GuestModeUnlockV20HandleRequestContextVMa);
      id v38 = v38;
      int v61 = v88;
      uint64_t v62 = v100;
      sub_100401DC4(v38, v60, v88);
      if (v62)
      {
        uint64_t v52 = _s15GuestModeUnlockV20HandleRequestContextVMa;
        goto LABEL_19;
      }
      uint64_t v76 = v96;
      v96[3] = v81;
      v76[4] = (uint64_t)&off_1008D9E58;
      uint64_t v77 = sub_100278AE4(v76);
      sub_100403108((uint64_t)v61, (uint64_t)v77, _s15GuestModeUnlockV18HandleTokenContextVMa);

      uint64_t v75 = _s15GuestModeUnlockV20HandleRequestContextVMa;
    }
    else
    {
      sub_100278C8C(a1, (uint64_t)v102);
      sub_10000B740(0, &qword_10096BDE8);
      if (!swift_dynamicCast())
      {
        sub_10024D280();
        swift_allocError();
        *(_DWORD *)uint64_t v72 = 10;
        *(void *)(v72 + 8) = 0xD00000000000001FLL;
        *(void *)(v72 + 16) = 0x80000001007B6FF0;
        swift_willThrow();
        return;
      }
      id v38 = v103;
      sub_100278C8C(v44, (uint64_t)v102);
      sub_10000A844(&qword_10096BDF0);
      uint64_t v64 = (uint64_t)v89;
      uint64_t v63 = v90;
      int v65 = swift_dynamicCast();
      int v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v87 + 56);
      if (!v65)
      {
        v66(v64, 1, 1, v63);
        sub_10000A7E8(v64, &qword_100972EA8);
        sub_10024D280();
        swift_allocError();
        *(_DWORD *)uint64_t v53 = 10;
        unint64_t v54 = 0xD00000000000004ALL;
        int v55 = "Invalid previous context as HandleResponseContext, message may be replayed";
        goto LABEL_26;
      }
      v66(v64, 0, 1, v63);
      uint64_t v48 = v83;
      sub_100403108(v64, v83, _s15GuestModeUnlockV21HandleResponseContextVMa);
      uint64_t v67 = v82;
      sub_100403170(v48, v82, _s15GuestModeUnlockV21HandleResponseContextVMa);
      id v38 = v38;
      int v68 = v84;
      uint64_t v69 = v100;
      sub_100402154(v38, v67, v84);
      if (v69)
      {
        uint64_t v52 = _s15GuestModeUnlockV21HandleResponseContextVMa;
        goto LABEL_19;
      }
      uint64_t v78 = v96;
      v96[3] = v80;
      v78[4] = (uint64_t)&off_1008D9E70;
      int v79 = sub_100278AE4(v78);
      sub_100403108((uint64_t)v68, (uint64_t)v79, _s15GuestModeUnlockV25HandleConfirmationContextVMa);

      uint64_t v75 = _s15GuestModeUnlockV21HandleResponseContextVMa;
    }
LABEL_31:
    sub_1004031D8(v48, v75);
    return;
  }
  id v38 = v103;
  sub_100278C8C(v44, (uint64_t)v102);
  sub_10000A844(&qword_10096BDF0);
  uint64_t v45 = v99;
  int v46 = swift_dynamicCast();
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v98 + 56);
  if (!v46)
  {
    v47(v17, 1, 1, v45);
    sub_10000A7E8((uint64_t)v17, &qword_100972EB8);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v53 = 10;
    unint64_t v54 = 0xD000000000000046;
    int v55 = "Invalid previous context as InitialKeyContext, message may be replayed";
    goto LABEL_26;
  }
  v47(v17, 0, 1, v45);
  uint64_t v48 = v93;
  sub_100403108((uint64_t)v17, v93, _s15GuestModeUnlockV17InitialKeyContextVMa);
  uint64_t v49 = v92;
  sub_100403170(v48, v92, _s15GuestModeUnlockV17InitialKeyContextVMa);
  id v38 = v38;
  int v50 = v94;
  uint64_t v51 = v100;
  sub_100401A28(v38, v49, v94);
  if (!v51)
  {
    int v73 = v96;
    v96[3] = v90;
    v73[4] = (uint64_t)&off_1008D9E40;
    int v74 = sub_100278AE4(v73);
    sub_100403108((uint64_t)v50, (uint64_t)v74, _s15GuestModeUnlockV21HandleResponseContextVMa);

    uint64_t v75 = _s15GuestModeUnlockV17InitialKeyContextVMa;
    goto LABEL_31;
  }
  uint64_t v52 = _s15GuestModeUnlockV17InitialKeyContextVMa;
LABEL_19:
  uint64_t v42 = v52;
  uint64_t v43 = v48;
LABEL_20:
  sub_1004031D8(v43, v42);
LABEL_27:
}

uint64_t sub_10040303C@<X0>(uint64_t a1@<X8>)
{
  return sub_100403170(v1, a1, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
}

void sub_100403070(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

uint64_t _s15GuestModeUnlockV25HandleConfirmationContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100973108);
}

uint64_t _s15GuestModeUnlockV18HandleTokenContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100972FC8);
}

uint64_t _s15GuestModeUnlockV21HandleResponseContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100973068);
}

uint64_t _s15GuestModeUnlockV20HandleRequestContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100972F20);
}

uint64_t sub_100403108(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100403170(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004031D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100403238()
{
  unint64_t result = qword_100974530;
  if (!qword_100974530)
  {
    type metadata accessor for Date();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100974530);
  }
  return result;
}

void *sub_100403290(void *a1, char *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *(void *)a2;
  *a1 = *(void *)a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v13 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = &a2[v6];
    uint64_t v9 = type metadata accessor for Date();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    uint64_t v89 = a2;
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    uint64_t v14 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v15 = v14[5];
    uint64_t v16 = &v7[v15];
    unint64_t v17 = &v8[v15];
    if (v11(&v8[v15], 1, v9))
    {
      uint64_t v18 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
    }
    uint64_t v19 = v14[6];
    uint64_t v20 = &v7[v19];
    uint64_t v21 = &v8[v19];
    if (v11(&v8[v19], 1, v9))
    {
      uint64_t v22 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v20, v21, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
    }
    uint64_t v23 = v14[7];
    uint64_t v24 = &v7[v23];
    uint64_t v25 = &v8[v23];
    if (v11(&v8[v23], 1, v9))
    {
      uint64_t v26 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v24, v25, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v24, 0, 1, v9);
    }
    uint64_t v27 = v14[8];
    uint64_t v28 = &v7[v27];
    uint64_t v29 = &v8[v27];
    if (v11(&v8[v27], 1, v9))
    {
      uint64_t v30 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v28, v29, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v9);
    }
    uint64_t v31 = v14[9];
    uint64_t v32 = &v7[v31];
    uint64_t v33 = &v8[v31];
    if (v11(&v8[v31], 1, v9))
    {
      uint64_t v34 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v32, v33, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v32, 0, 1, v9);
    }
    uint64_t v35 = v14[10];
    uint64_t v36 = &v7[v35];
    int v37 = &v8[v35];
    if (v11(&v8[v35], 1, v9))
    {
      uint64_t v38 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v36, v37, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v36, 0, 1, v9);
    }
    uint64_t v39 = v14[11];
    uint64_t v40 = &v7[v39];
    uint64_t v41 = &v8[v39];
    if (v11(&v8[v39], 1, v9))
    {
      uint64_t v42 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v40, v41, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v40, 0, 1, v9);
    }
    uint64_t v43 = v14[12];
    uint64_t v44 = &v7[v43];
    uint64_t v45 = &v8[v43];
    if (v11(&v8[v43], 1, v9))
    {
      uint64_t v46 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v44, v45, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v44, 0, 1, v9);
    }
    v7[v14[13]] = v8[v14[13]];
    uint64_t v47 = v14[14];
    uint64_t v48 = &v7[v47];
    uint64_t v49 = &v8[v47];
    if (v11(&v8[v47], 1, v9))
    {
      uint64_t v50 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v48, v49, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v48, 0, 1, v9);
    }
    uint64_t v51 = v14[15];
    uint64_t v52 = &v7[v51];
    uint64_t v53 = &v8[v51];
    if (v11(&v8[v51], 1, v9))
    {
      uint64_t v54 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v52, v53, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v52, 0, 1, v9);
    }
    uint64_t v55 = v14[16];
    uint64_t v56 = &v7[v55];
    uint64_t v57 = &v8[v55];
    if (v11(&v8[v55], 1, v9))
    {
      uint64_t v58 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v56, v57, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v56, 0, 1, v9);
    }
    uint64_t v59 = v14[17];
    uint64_t v60 = &v7[v59];
    int v61 = &v8[v59];
    if (v11(&v8[v59], 1, v9))
    {
      uint64_t v62 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v60, v61, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v60, 0, 1, v9);
    }
    uint64_t v63 = v14[18];
    uint64_t v64 = &v7[v63];
    int v65 = &v8[v63];
    *(_DWORD *)uint64_t v64 = *(_DWORD *)v65;
    v64[4] = v65[4];
    v7[v14[19]] = v8[v14[19]];
    uint64_t v66 = v14[20];
    uint64_t v67 = &v7[v66];
    int v68 = &v8[v66];
    uint64_t v69 = *((void *)v68 + 1);
    *(void *)uint64_t v67 = *(void *)v68;
    *((void *)v67 + 1) = v69;
    uint64_t v70 = v14[21];
    uint64_t v71 = &v7[v70];
    uint64_t v72 = &v8[v70];
    uint64_t v73 = *((void *)v72 + 1);
    *(void *)uint64_t v71 = *(void *)v72;
    *((void *)v71 + 1) = v73;
    uint64_t v74 = a3[6];
    uint64_t v75 = (void *)((char *)a1 + v74);
    uint64_t v76 = (uint64_t *)&v89[v74];
    uint64_t v77 = *v76;
    unint64_t v78 = v76[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10025ADCC(v77, v78);
    *uint64_t v75 = v77;
    v75[1] = v78;
    uint64_t v79 = a3[7];
    uint64_t v80 = (char *)a1 + v79;
    uint64_t v81 = &v89[v79];
    if (v11(&v89[v79], 1, v9))
    {
      uint64_t v82 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
      uint64_t v83 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    }
    else
    {
      uint64_t v83 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
      v83(v80, v81, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v80, 0, 1, v9);
    }
    uint64_t v13 = a1;
    v83((char *)a1 + a3[8], &v89[a3[8]], v9);
    uint64_t v84 = a3[9];
    uint64_t v85 = a3[10];
    uint64_t v86 = *(void **)&v89[v84];
    *(void *)((char *)a1 + v84) = v86;
    *((unsigned char *)a1 + v85) = v89[v85];
    id v87 = v86;
  }
  return v13;
}

void sub_100403D00(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v9 = v4 + v8[5];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = v4 + v8[6];
  if (!v7(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = v4 + v8[7];
  if (!v7(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = v4 + v8[8];
  if (!v7(v12, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  }
  uint64_t v13 = v4 + v8[9];
  if (!v7(v13, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v5);
  }
  uint64_t v14 = v4 + v8[10];
  if (!v7(v14, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = v4 + v8[11];
  if (!v7(v15, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = v4 + v8[12];
  if (!v7(v16, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = v4 + v8[14];
  if (!v7(v17, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = v4 + v8[15];
  if (!v7(v18, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, v5);
  }
  uint64_t v19 = v4 + v8[16];
  if (!v7(v19, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = v4 + v8[17];
  if (!v7(v20, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v20, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CC4(*(void *)(a1 + a2[6]), *(void *)(a1 + a2[6] + 8));
  uint64_t v21 = a1 + a2[7];
  unsigned int v22 = v7(v21, 1, v5);
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  if (!v22) {
    v23(v21, v5);
  }
  v23(a1 + a2[8], v5);
  uint64_t v24 = *(void **)(a1 + a2[9]);
}

char *sub_100404174(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = a3[5];
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  uint64_t v86 = a2;
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  unsigned int v22 = &v6[v20];
  if (v9(&v6[v20], 1, v7))
  {
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
  }
  uint64_t v24 = v11[8];
  uint64_t v25 = &v5[v24];
  uint64_t v26 = &v6[v24];
  if (v9(&v6[v24], 1, v7))
  {
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v9(&v6[v28], 1, v7))
  {
    uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
  }
  uint64_t v32 = v11[10];
  uint64_t v33 = &v5[v32];
  uint64_t v34 = &v6[v32];
  if (v9(&v6[v32], 1, v7))
  {
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
  }
  uint64_t v36 = v11[11];
  int v37 = &v5[v36];
  uint64_t v38 = &v6[v36];
  if (v9(&v6[v36], 1, v7))
  {
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
  }
  uint64_t v40 = v11[12];
  uint64_t v41 = &v5[v40];
  uint64_t v42 = &v6[v40];
  if (v9(&v6[v40], 1, v7))
  {
    uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
  }
  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  uint64_t v45 = &v5[v44];
  uint64_t v46 = &v6[v44];
  if (v9(&v6[v44], 1, v7))
  {
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
  }
  uint64_t v48 = v11[15];
  uint64_t v49 = &v5[v48];
  uint64_t v50 = &v6[v48];
  if (v9(&v6[v48], 1, v7))
  {
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
  }
  uint64_t v52 = v11[16];
  uint64_t v53 = &v5[v52];
  uint64_t v54 = &v6[v52];
  if (v9(&v6[v52], 1, v7))
  {
    uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v7);
  }
  uint64_t v56 = v11[17];
  uint64_t v57 = &v5[v56];
  uint64_t v58 = &v6[v56];
  if (v9(&v6[v56], 1, v7))
  {
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0, 1, v7);
  }
  uint64_t v60 = v11[18];
  int v61 = &v5[v60];
  uint64_t v62 = &v6[v60];
  *(_DWORD *)int v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  v5[v11[19]] = v6[v11[19]];
  uint64_t v63 = v11[20];
  uint64_t v64 = &v5[v63];
  int v65 = &v6[v63];
  uint64_t v66 = *((void *)v65 + 1);
  *(void *)uint64_t v64 = *(void *)v65;
  *((void *)v64 + 1) = v66;
  uint64_t v67 = v11[21];
  int v68 = &v5[v67];
  uint64_t v69 = &v6[v67];
  uint64_t v70 = *((void *)v69 + 1);
  *(void *)int v68 = *(void *)v69;
  *((void *)v68 + 1) = v70;
  uint64_t v71 = a3[6];
  uint64_t v72 = (uint64_t *)&a1[v71];
  uint64_t v73 = (uint64_t *)&v86[v71];
  uint64_t v74 = *v73;
  unint64_t v75 = v73[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10025ADCC(v74, v75);
  uint64_t *v72 = v74;
  v72[1] = v75;
  uint64_t v76 = a3[7];
  uint64_t v77 = &a1[v76];
  unint64_t v78 = &v86[v76];
  if (v9(&v86[v76], 1, v7))
  {
    uint64_t v79 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
    uint64_t v80 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  }
  else
  {
    uint64_t v80 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v80(v77, v78, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v77, 0, 1, v7);
  }
  v80(&a1[a3[8]], &v86[a3[8]], v7);
  uint64_t v81 = a3[9];
  uint64_t v82 = a3[10];
  uint64_t v83 = *(void **)&v86[v81];
  *(void *)&a1[v81] = v83;
  a1[v82] = v86[v82];
  id v84 = v83;
  return a1;
}

char *sub_100404B84(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  uint64_t v116 = a2;
  uint64_t v117 = a1;
  uint64_t v115 = a3;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  int v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v7[v76];
  unint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  uint64_t v83 = &v7[v82];
  id v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v83, v84, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v86)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v83, v84, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  uint64_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  int v91 = *(_DWORD *)v90;
  v89[4] = v90[4];
  *(_DWORD *)uint64_t v89 = v91;
  v7[v15[19]] = v8[v15[19]];
  uint64_t v92 = v15[20];
  uint64_t v93 = &v7[v92];
  uint64_t v94 = &v8[v92];
  *(void *)uint64_t v93 = *(void *)v94;
  *((void *)v93 + 1) = *((void *)v94 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v95 = v15[21];
  uint64_t v96 = &v7[v95];
  uint64_t v97 = &v8[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  *((void *)v96 + 1) = *((void *)v97 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v98 = v115[6];
  uint64_t v99 = (uint64_t *)&v117[v98];
  uint64_t v100 = (uint64_t *)&v116[v98];
  uint64_t v101 = *v100;
  unint64_t v102 = v100[1];
  sub_10025ADCC(*v100, v102);
  uint64_t v103 = *v99;
  unint64_t v104 = v99[1];
  uint64_t *v99 = v101;
  v99[1] = v102;
  sub_100250CC4(v103, v104);
  uint64_t v105 = v115[7];
  uint64_t v106 = &v117[v105];
  uint64_t v107 = &v116[v105];
  LODWORD(v99) = v11(&v117[v105], 1, v9);
  int v108 = v11(v107, 1, v9);
  if (!v99)
  {
    if (!v108)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v106, v107, v9);
      goto LABEL_85;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v106, v9);
    goto LABEL_84;
  }
  if (v108)
  {
LABEL_84:
    uint64_t v109 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v106, v107, *(void *)(*(void *)(v109 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v106, v107, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v106, 0, 1, v9);
LABEL_85:
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(&v117[v115[8]], &v116[v115[8]], v9);
  uint64_t v110 = v115[9];
  id v111 = *(void **)&v117[v110];
  unint64_t v112 = *(void **)&v116[v110];
  *(void *)&v117[v110] = v112;
  id v113 = v112;

  v117[v115[10]] = v116[v115[10]];
  return v117;
}

char *sub_100405B0C(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v72 = a3;
  int v73 = a2;
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  int v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v14 = v13[5];
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  if (v11(&v8[v14], 1, v9))
  {
    uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v16, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
  }
  uint64_t v18 = v13[6];
  int v19 = &v7[v18];
  int v20 = &v8[v18];
  if (v11(&v8[v18], 1, v9))
  {
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v20, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  }
  uint64_t v22 = v13[7];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  if (v11(&v8[v22], 1, v9))
  {
    uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
  }
  uint64_t v26 = v13[8];
  uint64_t v27 = &v7[v26];
  uint64_t v28 = &v8[v26];
  if (v11(&v8[v26], 1, v9))
  {
    uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v27, v28, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
  }
  uint64_t v30 = v13[9];
  int v31 = &v7[v30];
  int v32 = &v8[v30];
  if (v11(&v8[v30], 1, v9))
  {
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v31, v32, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
  }
  uint64_t v34 = v13[10];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  if (v11(&v8[v34], 1, v9))
  {
    uint64_t v37 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
  }
  uint64_t v38 = v13[11];
  uint64_t v39 = &v7[v38];
  uint64_t v40 = &v8[v38];
  if (v11(&v8[v38], 1, v9))
  {
    uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v39, v40, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v9);
  }
  uint64_t v42 = v13[12];
  int v43 = &v7[v42];
  int v44 = &v8[v42];
  if (v11(&v8[v42], 1, v9))
  {
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v43, v44, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0, 1, v9);
  }
  v7[v13[13]] = v8[v13[13]];
  uint64_t v46 = v13[14];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  if (v11(&v8[v46], 1, v9))
  {
    uint64_t v49 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
  }
  uint64_t v50 = v13[15];
  uint64_t v51 = &v7[v50];
  uint64_t v52 = &v8[v50];
  if (v11(&v8[v50], 1, v9))
  {
    uint64_t v53 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v51, v52, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v51, 0, 1, v9);
  }
  uint64_t v54 = v13[16];
  int v55 = &v7[v54];
  int v56 = &v8[v54];
  if (v11(&v8[v54], 1, v9))
  {
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v55, v56, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v55, 0, 1, v9);
  }
  uint64_t v58 = v13[17];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  if (v11(&v8[v58], 1, v9))
  {
    uint64_t v61 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
  }
  uint64_t v62 = v13[18];
  uint64_t v63 = &v7[v62];
  uint64_t v64 = &v8[v62];
  *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
  v63[4] = v64[4];
  v7[v13[19]] = v8[v13[19]];
  *(_OWORD *)&v7[v13[20]] = *(_OWORD *)&v8[v13[20]];
  *(_OWORD *)&v7[v13[21]] = *(_OWORD *)&v8[v13[21]];
  uint64_t v65 = v72[7];
  *(_OWORD *)&a1[v72[6]] = *(_OWORD *)&v73[v72[6]];
  uint64_t v66 = &a1[v65];
  int v67 = &v73[v65];
  if (v11(&v73[v65], 1, v9))
  {
    uint64_t v68 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&a1[v72[8]], &v73[v72[8]], v9);
  }
  else
  {
    uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v69(v66, v67, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v66, 0, 1, v9);
    v69(&a1[v72[8]], &v73[v72[8]], v9);
  }
  uint64_t v70 = v72[10];
  *(void *)&a1[v72[9]] = *(void *)&v73[v72[9]];
  a1[v70] = v73[v70];
  return a1;
}

char *sub_1004064D0(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  uint64_t v114 = a2;
  uint64_t v115 = a1;
  id v113 = a3;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v7[v76];
  unint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  uint64_t v83 = &v7[v82];
  id v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v83, v84, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v86)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v83, v84, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  uint64_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  *(_DWORD *)uint64_t v89 = *(_DWORD *)v90;
  v89[4] = v90[4];
  v7[v15[19]] = v8[v15[19]];
  uint64_t v91 = v15[20];
  uint64_t v92 = &v7[v91];
  uint64_t v93 = &v8[v91];
  uint64_t v95 = *(void *)v93;
  uint64_t v94 = *((void *)v93 + 1);
  *(void *)uint64_t v92 = v95;
  *((void *)v92 + 1) = v94;
  swift_bridgeObjectRelease();
  uint64_t v96 = v15[21];
  uint64_t v97 = &v7[v96];
  uint64_t v98 = &v8[v96];
  uint64_t v100 = *(void *)v98;
  uint64_t v99 = *((void *)v98 + 1);
  *(void *)uint64_t v97 = v100;
  *((void *)v97 + 1) = v99;
  swift_bridgeObjectRelease();
  uint64_t v101 = v113[6];
  uint64_t v102 = *(void *)&v115[v101];
  unint64_t v103 = *(void *)&v115[v101 + 8];
  *(_OWORD *)&v115[v101] = *(_OWORD *)&v114[v101];
  sub_100250CC4(v102, v103);
  uint64_t v104 = v113[7];
  uint64_t v105 = &v115[v104];
  uint64_t v106 = &v114[v104];
  int v107 = v11(&v115[v104], 1, v9);
  int v108 = v11(v106, 1, v9);
  if (!v107)
  {
    if (!v108)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v105, v106, v9);
      goto LABEL_85;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v105, v9);
    goto LABEL_84;
  }
  if (v108)
  {
LABEL_84:
    uint64_t v109 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v105, v106, *(void *)(*(void *)(v109 - 8) + 64));
    goto LABEL_85;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v105, v106, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v105, 0, 1, v9);
LABEL_85:
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(&v115[v113[8]], &v114[v113[8]], v9);
  uint64_t v110 = v113[9];
  id v111 = *(void **)&v115[v110];
  *(void *)&v115[v110] = *(void *)&v114[v110];

  v115[v113[10]] = v114[v113[10]];
  return v115;
}

uint64_t sub_10040741C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100407430);
}

uint64_t sub_100407430(char *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    return v13(&a1[v11], a2, v9);
  }
  uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_9;
  }
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = &a1[a3[8]];

  return v15(v17, a2, v16);
}

uint64_t sub_1004075AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004075C0);
}

char *sub_1004075C0(char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)unint64_t result = (a2 - 1);
    return result;
  }
  uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (char *)v13(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_7;
  }
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = &v5[a4[8]];

  return (char *)v15(v17, a2, a2, v16);
}

void sub_10040773C()
{
  type metadata accessor for SDAuthenticationSessionMetrics();
  if (v0 <= 0x3F)
  {
    sub_100271710();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Date();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void *sub_10040786C(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a3[5];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for Date();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    int v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v14 = v13[5];
    uint64_t v15 = &v7[v14];
    uint64_t v16 = &v8[v14];
    if (v11(&v8[v14], 1, v9))
    {
      uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v16, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
    }
    uint64_t v18 = v13[6];
    int v19 = &v7[v18];
    int v20 = &v8[v18];
    if (v11(&v8[v18], 1, v9))
    {
      uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v20, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
    }
    uint64_t v22 = v13[7];
    uint64_t v23 = &v7[v22];
    uint64_t v24 = &v8[v22];
    if (v11(&v8[v22], 1, v9))
    {
      uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
    }
    uint64_t v26 = v13[8];
    uint64_t v27 = &v7[v26];
    uint64_t v28 = &v8[v26];
    if (v11(&v8[v26], 1, v9))
    {
      uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v27, v28, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
    }
    uint64_t v30 = v13[9];
    int v31 = &v7[v30];
    int v32 = &v8[v30];
    if (v11(&v8[v30], 1, v9))
    {
      uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v31, v32, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
    }
    uint64_t v34 = v13[10];
    uint64_t v35 = &v7[v34];
    uint64_t v36 = &v8[v34];
    if (v11(&v8[v34], 1, v9))
    {
      uint64_t v37 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
    }
    uint64_t v38 = v13[11];
    uint64_t v39 = &v7[v38];
    uint64_t v40 = &v8[v38];
    if (v11(&v8[v38], 1, v9))
    {
      uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v39, v40, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v9);
    }
    uint64_t v42 = v13[12];
    int v43 = &v7[v42];
    int v44 = &v8[v42];
    if (v11(&v8[v42], 1, v9))
    {
      uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v43, v44, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0, 1, v9);
    }
    v7[v13[13]] = v8[v13[13]];
    uint64_t v46 = v13[14];
    uint64_t v47 = &v7[v46];
    uint64_t v48 = &v8[v46];
    if (v11(&v8[v46], 1, v9))
    {
      uint64_t v49 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
    }
    uint64_t v50 = v13[15];
    uint64_t v51 = &v7[v50];
    uint64_t v52 = &v8[v50];
    if (v11(&v8[v50], 1, v9))
    {
      uint64_t v53 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v51, v52, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v51, 0, 1, v9);
    }
    uint64_t v54 = v13[16];
    int v55 = &v7[v54];
    int v56 = &v8[v54];
    if (v11(&v8[v54], 1, v9))
    {
      uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v55, v56, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v55, 0, 1, v9);
    }
    uint64_t v58 = v13[17];
    uint64_t v59 = &v7[v58];
    uint64_t v60 = &v8[v58];
    if (v11(&v8[v58], 1, v9))
    {
      uint64_t v61 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
    }
    uint64_t v62 = v13[18];
    uint64_t v63 = &v7[v62];
    uint64_t v64 = &v8[v62];
    *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
    v63[4] = v64[4];
    v7[v13[19]] = v8[v13[19]];
    uint64_t v65 = v13[20];
    uint64_t v66 = &v7[v65];
    int v67 = &v8[v65];
    uint64_t v68 = *((void *)v67 + 1);
    *(void *)uint64_t v66 = *(void *)v67;
    *((void *)v66 + 1) = v68;
    uint64_t v69 = v13[21];
    uint64_t v70 = &v7[v69];
    uint64_t v71 = &v8[v69];
    uint64_t v72 = *((void *)v71 + 1);
    *(void *)uint64_t v70 = *(void *)v71;
    *((void *)v70 + 1) = v72;
    uint64_t v73 = a3[6];
    int v74 = (void *)((char *)v5 + v73);
    uint64_t v75 = (void *)((char *)a2 + v73);
    uint64_t v76 = *v75;
    unint64_t v77 = v75[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10025ADCC(v76, v77);
    *int v74 = v76;
    v74[1] = v77;
    uint64_t v78 = a3[7];
    uint64_t v79 = a3[8];
    int v80 = *(void **)((char *)a2 + v78);
    *(void *)((char *)v5 + v78) = v80;
    *((unsigned char *)v5 + v79) = *((unsigned char *)a2 + v79);
    id v81 = v80;
  }
  return v5;
}

void sub_100408204(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v9 = v4 + v8[5];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = v4 + v8[6];
  if (!v7(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = v4 + v8[7];
  if (!v7(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = v4 + v8[8];
  if (!v7(v12, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  }
  uint64_t v13 = v4 + v8[9];
  if (!v7(v13, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v5);
  }
  uint64_t v14 = v4 + v8[10];
  if (!v7(v14, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = v4 + v8[11];
  if (!v7(v15, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = v4 + v8[12];
  if (!v7(v16, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = v4 + v8[14];
  if (!v7(v17, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = v4 + v8[15];
  if (!v7(v18, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, v5);
  }
  uint64_t v19 = v4 + v8[16];
  if (!v7(v19, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = v4 + v8[17];
  if (!v7(v20, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v20, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CC4(*(void *)(a1 + a2[6]), *(void *)(a1 + a2[6] + 8));
  uint64_t v21 = *(void **)(a1 + a2[7]);
}

void *sub_100408620(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v4 = a3[5];
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  uint64_t v22 = &v6[v20];
  if (v9(&v6[v20], 1, v7))
  {
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
  }
  uint64_t v24 = v11[8];
  uint64_t v25 = &v5[v24];
  uint64_t v26 = &v6[v24];
  if (v9(&v6[v24], 1, v7))
  {
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v9(&v6[v28], 1, v7))
  {
    uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
  }
  uint64_t v32 = v11[10];
  uint64_t v33 = &v5[v32];
  uint64_t v34 = &v6[v32];
  if (v9(&v6[v32], 1, v7))
  {
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
  }
  uint64_t v36 = v11[11];
  uint64_t v37 = &v5[v36];
  uint64_t v38 = &v6[v36];
  if (v9(&v6[v36], 1, v7))
  {
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
  }
  uint64_t v40 = v11[12];
  uint64_t v41 = &v5[v40];
  uint64_t v42 = &v6[v40];
  if (v9(&v6[v40], 1, v7))
  {
    uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
  }
  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  uint64_t v45 = &v5[v44];
  uint64_t v46 = &v6[v44];
  if (v9(&v6[v44], 1, v7))
  {
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
  }
  uint64_t v48 = v11[15];
  uint64_t v49 = &v5[v48];
  uint64_t v50 = &v6[v48];
  if (v9(&v6[v48], 1, v7))
  {
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
  }
  uint64_t v52 = v11[16];
  uint64_t v53 = &v5[v52];
  uint64_t v54 = &v6[v52];
  if (v9(&v6[v52], 1, v7))
  {
    uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v7);
  }
  uint64_t v56 = v11[17];
  uint64_t v57 = &v5[v56];
  uint64_t v58 = &v6[v56];
  if (v9(&v6[v56], 1, v7))
  {
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0, 1, v7);
  }
  uint64_t v60 = v11[18];
  uint64_t v61 = &v5[v60];
  uint64_t v62 = &v6[v60];
  *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  v5[v11[19]] = v6[v11[19]];
  uint64_t v63 = v11[20];
  uint64_t v64 = &v5[v63];
  uint64_t v65 = &v6[v63];
  uint64_t v66 = *((void *)v65 + 1);
  *(void *)uint64_t v64 = *(void *)v65;
  *((void *)v64 + 1) = v66;
  uint64_t v67 = v11[21];
  uint64_t v68 = &v5[v67];
  uint64_t v69 = &v6[v67];
  uint64_t v70 = *((void *)v69 + 1);
  *(void *)uint64_t v68 = *(void *)v69;
  *((void *)v68 + 1) = v70;
  uint64_t v71 = a3[6];
  uint64_t v72 = (void *)((char *)a1 + v71);
  uint64_t v73 = (void *)((char *)a2 + v71);
  uint64_t v74 = *v73;
  unint64_t v75 = v73[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10025ADCC(v74, v75);
  uint64_t *v72 = v74;
  v72[1] = v75;
  uint64_t v76 = a3[7];
  uint64_t v77 = a3[8];
  uint64_t v78 = *(void **)((char *)a2 + v76);
  *(void *)((char *)a1 + v76) = v78;
  *((unsigned char *)a1 + v77) = *((unsigned char *)a2 + v77);
  id v79 = v78;
  return a1;
}

void *sub_100408F58(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v110 = a2;
  uint64_t v6 = a3[5];
  id v111 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  uint64_t v83 = &v7[v82];
  id v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (!v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v83, v84, v9);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
    goto LABEL_78;
  }
  if (v86)
  {
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v83, v84, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  uint64_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  int v91 = *(_DWORD *)v90;
  v89[4] = v90[4];
  *(_DWORD *)uint64_t v89 = v91;
  v7[v15[19]] = v8[v15[19]];
  uint64_t v92 = v15[20];
  uint64_t v93 = &v7[v92];
  uint64_t v94 = &v8[v92];
  *(void *)uint64_t v93 = *(void *)v94;
  *((void *)v93 + 1) = *((void *)v94 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v95 = v15[21];
  uint64_t v96 = &v7[v95];
  uint64_t v97 = &v8[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  *((void *)v96 + 1) = *((void *)v97 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v98 = a3[6];
  uint64_t v99 = (void *)((char *)v111 + v98);
  uint64_t v100 = (void *)((char *)v110 + v98);
  uint64_t v101 = *v100;
  unint64_t v102 = v100[1];
  sub_10025ADCC(*v100, v102);
  uint64_t v103 = *v99;
  unint64_t v104 = v99[1];
  uint64_t *v99 = v101;
  v99[1] = v102;
  sub_100250CC4(v103, v104);
  uint64_t v105 = a3[7];
  uint64_t v106 = *(void **)((char *)v111 + v105);
  int v107 = *(void **)((char *)v110 + v105);
  *(void *)((char *)v111 + v105) = v107;
  id v108 = v107;

  *((unsigned char *)v111 + a3[8]) = *((unsigned char *)v110 + a3[8]);
  return v111;
}

void *sub_100409DBC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  int v107 = a2;
  uint64_t v6 = a3[5];
  id v108 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  uint64_t v83 = &v7[v82];
  id v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (!v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v83, v84, v9);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
    goto LABEL_78;
  }
  if (v86)
  {
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v83, v84, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  uint64_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  *(_DWORD *)uint64_t v89 = *(_DWORD *)v90;
  v89[4] = v90[4];
  v7[v15[19]] = v8[v15[19]];
  uint64_t v91 = v15[20];
  uint64_t v92 = &v7[v91];
  uint64_t v93 = &v8[v91];
  uint64_t v95 = *(void *)v93;
  uint64_t v94 = *((void *)v93 + 1);
  *(void *)uint64_t v92 = v95;
  *((void *)v92 + 1) = v94;
  swift_bridgeObjectRelease();
  uint64_t v96 = v15[21];
  uint64_t v97 = &v7[v96];
  uint64_t v98 = &v8[v96];
  uint64_t v100 = *(void *)v98;
  uint64_t v99 = *((void *)v98 + 1);
  *(void *)uint64_t v97 = v100;
  *((void *)v97 + 1) = v99;
  swift_bridgeObjectRelease();
  uint64_t v101 = a3[6];
  uint64_t v102 = *(void *)((char *)v108 + v101);
  unint64_t v103 = *(void *)((char *)v108 + v101 + 8);
  *(_OWORD *)((char *)v108 + v101) = *(_OWORD *)((char *)v107 + v101);
  sub_100250CC4(v102, v103);
  uint64_t v104 = a3[7];
  uint64_t v105 = *(void **)((char *)v108 + v104);
  *(void *)((char *)v108 + v104) = *(void *)((char *)v107 + v104);

  *((unsigned char *)v108 + a3[8]) = *((unsigned char *)v107 + a3[8]);
  return v108;
}

uint64_t sub_10040ABE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10040ABF8);
}

uint64_t sub_10040ABFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10040AC10);
}

uint64_t sub_10040AC14()
{
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *_s15GuestModeUnlockVMa()
{
  return &_s15GuestModeUnlockVN;
}

void *sub_10040ACDC(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a3[5];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for Date();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    int v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v14 = v13[5];
    uint64_t v15 = &v7[v14];
    uint64_t v16 = &v8[v14];
    if (v11(&v8[v14], 1, v9))
    {
      uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v16, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
    }
    uint64_t v18 = v13[6];
    int v19 = &v7[v18];
    int v20 = &v8[v18];
    if (v11(&v8[v18], 1, v9))
    {
      uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v20, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
    }
    uint64_t v22 = v13[7];
    uint64_t v23 = &v7[v22];
    uint64_t v24 = &v8[v22];
    if (v11(&v8[v22], 1, v9))
    {
      uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
    }
    uint64_t v26 = v13[8];
    uint64_t v27 = &v7[v26];
    uint64_t v28 = &v8[v26];
    if (v11(&v8[v26], 1, v9))
    {
      uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v27, v28, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
    }
    uint64_t v30 = v13[9];
    int v31 = &v7[v30];
    int v32 = &v8[v30];
    if (v11(&v8[v30], 1, v9))
    {
      uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v31, v32, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
    }
    uint64_t v34 = v13[10];
    uint64_t v35 = &v7[v34];
    uint64_t v36 = &v8[v34];
    if (v11(&v8[v34], 1, v9))
    {
      uint64_t v37 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
    }
    uint64_t v38 = v13[11];
    uint64_t v39 = &v7[v38];
    uint64_t v40 = &v8[v38];
    if (v11(&v8[v38], 1, v9))
    {
      uint64_t v41 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v39, v40, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v39, 0, 1, v9);
    }
    uint64_t v42 = v13[12];
    int v43 = &v7[v42];
    int v44 = &v8[v42];
    if (v11(&v8[v42], 1, v9))
    {
      uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v43, v44, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0, 1, v9);
    }
    v7[v13[13]] = v8[v13[13]];
    uint64_t v46 = v13[14];
    uint64_t v47 = &v7[v46];
    uint64_t v48 = &v8[v46];
    if (v11(&v8[v46], 1, v9))
    {
      uint64_t v49 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
    }
    uint64_t v50 = v13[15];
    uint64_t v51 = &v7[v50];
    uint64_t v52 = &v8[v50];
    if (v11(&v8[v50], 1, v9))
    {
      uint64_t v53 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v51, v52, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v51, 0, 1, v9);
    }
    uint64_t v54 = v13[16];
    int v55 = &v7[v54];
    int v56 = &v8[v54];
    if (v11(&v8[v54], 1, v9))
    {
      uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v55, v56, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v55, 0, 1, v9);
    }
    uint64_t v58 = v13[17];
    uint64_t v59 = &v7[v58];
    uint64_t v60 = &v8[v58];
    if (v11(&v8[v58], 1, v9))
    {
      uint64_t v61 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
    }
    uint64_t v62 = v13[18];
    uint64_t v63 = &v7[v62];
    uint64_t v64 = &v8[v62];
    *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
    v63[4] = v64[4];
    v7[v13[19]] = v8[v13[19]];
    uint64_t v65 = v13[20];
    uint64_t v66 = &v7[v65];
    int v67 = &v8[v65];
    uint64_t v68 = *((void *)v67 + 1);
    *(void *)uint64_t v66 = *(void *)v67;
    *((void *)v66 + 1) = v68;
    uint64_t v69 = v13[21];
    uint64_t v70 = &v7[v69];
    uint64_t v71 = &v8[v69];
    uint64_t v72 = *((void *)v71 + 1);
    *(void *)uint64_t v70 = *(void *)v71;
    *((void *)v70 + 1) = v72;
    uint64_t v73 = a3[7];
    *(_DWORD *)((char *)v5 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
    int v74 = (void *)((char *)v5 + v73);
    uint64_t v75 = *(void *)((char *)a2 + v73);
    unint64_t v76 = *(void *)((char *)a2 + v73 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10025ADCC(v75, v76);
    *int v74 = v75;
    v74[1] = v76;
    uint64_t v77 = a3[8];
    uint64_t v78 = a3[9];
    int v79 = *(void **)((char *)a2 + v77);
    *(void *)((char *)v5 + v77) = v79;
    *((unsigned char *)v5 + v78) = *((unsigned char *)a2 + v78);
    id v80 = v79;
  }
  return v5;
}

void sub_10040B67C(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v9 = v4 + v8[5];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = v4 + v8[6];
  if (!v7(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = v4 + v8[7];
  if (!v7(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = v4 + v8[8];
  if (!v7(v12, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  }
  uint64_t v13 = v4 + v8[9];
  if (!v7(v13, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v5);
  }
  uint64_t v14 = v4 + v8[10];
  if (!v7(v14, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = v4 + v8[11];
  if (!v7(v15, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = v4 + v8[12];
  if (!v7(v16, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = v4 + v8[14];
  if (!v7(v17, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = v4 + v8[15];
  if (!v7(v18, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, v5);
  }
  uint64_t v19 = v4 + v8[16];
  if (!v7(v19, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = v4 + v8[17];
  if (!v7(v20, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v20, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CC4(*(void *)(a1 + a2[7]), *(void *)(a1 + a2[7] + 8));
  uint64_t v21 = *(void **)(a1 + a2[8]);
}

void *sub_10040BA98(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v4 = a3[5];
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  uint64_t v22 = &v6[v20];
  if (v9(&v6[v20], 1, v7))
  {
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
  }
  uint64_t v24 = v11[8];
  uint64_t v25 = &v5[v24];
  uint64_t v26 = &v6[v24];
  if (v9(&v6[v24], 1, v7))
  {
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v9(&v6[v28], 1, v7))
  {
    uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
  }
  uint64_t v32 = v11[10];
  uint64_t v33 = &v5[v32];
  uint64_t v34 = &v6[v32];
  if (v9(&v6[v32], 1, v7))
  {
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
  }
  uint64_t v36 = v11[11];
  uint64_t v37 = &v5[v36];
  uint64_t v38 = &v6[v36];
  if (v9(&v6[v36], 1, v7))
  {
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
  }
  uint64_t v40 = v11[12];
  uint64_t v41 = &v5[v40];
  uint64_t v42 = &v6[v40];
  if (v9(&v6[v40], 1, v7))
  {
    uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
  }
  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  uint64_t v45 = &v5[v44];
  uint64_t v46 = &v6[v44];
  if (v9(&v6[v44], 1, v7))
  {
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
  }
  uint64_t v48 = v11[15];
  uint64_t v49 = &v5[v48];
  uint64_t v50 = &v6[v48];
  if (v9(&v6[v48], 1, v7))
  {
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
  }
  uint64_t v52 = v11[16];
  uint64_t v53 = &v5[v52];
  uint64_t v54 = &v6[v52];
  if (v9(&v6[v52], 1, v7))
  {
    uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v7);
  }
  uint64_t v56 = v11[17];
  uint64_t v57 = &v5[v56];
  uint64_t v58 = &v6[v56];
  if (v9(&v6[v56], 1, v7))
  {
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0, 1, v7);
  }
  uint64_t v60 = v11[18];
  uint64_t v61 = &v5[v60];
  uint64_t v62 = &v6[v60];
  *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  v5[v11[19]] = v6[v11[19]];
  uint64_t v63 = v11[20];
  uint64_t v64 = &v5[v63];
  uint64_t v65 = &v6[v63];
  uint64_t v66 = *((void *)v65 + 1);
  *(void *)uint64_t v64 = *(void *)v65;
  *((void *)v64 + 1) = v66;
  uint64_t v67 = v11[21];
  uint64_t v68 = &v5[v67];
  uint64_t v69 = &v6[v67];
  uint64_t v70 = *((void *)v69 + 1);
  *(void *)uint64_t v68 = *(void *)v69;
  *((void *)v68 + 1) = v70;
  uint64_t v71 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  uint64_t v72 = (void *)((char *)a1 + v71);
  uint64_t v73 = *(void *)((char *)a2 + v71);
  unint64_t v74 = *(void *)((char *)a2 + v71 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10025ADCC(v73, v74);
  uint64_t *v72 = v73;
  v72[1] = v74;
  uint64_t v75 = a3[8];
  uint64_t v76 = a3[9];
  uint64_t v77 = *(void **)((char *)a2 + v75);
  *(void *)((char *)a1 + v75) = v77;
  *((unsigned char *)a1 + v76) = *((unsigned char *)a2 + v76);
  id v78 = v77;
  return a1;
}

void *sub_10040C3D8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v110 = a2;
  uint64_t v6 = a3[5];
  id v111 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v7[v76];
  id v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  uint64_t v83 = &v7[v82];
  id v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (!v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v83, v84, v9);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
    goto LABEL_78;
  }
  if (v86)
  {
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v83, v84, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  uint64_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  int v91 = *(_DWORD *)v90;
  v89[4] = v90[4];
  *(_DWORD *)uint64_t v89 = v91;
  v7[v15[19]] = v8[v15[19]];
  uint64_t v92 = v15[20];
  uint64_t v93 = &v7[v92];
  uint64_t v94 = &v8[v92];
  *(void *)uint64_t v93 = *(void *)v94;
  *((void *)v93 + 1) = *((void *)v94 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v95 = v15[21];
  uint64_t v96 = &v7[v95];
  uint64_t v97 = &v8[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  *((void *)v96 + 1) = *((void *)v97 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)((char *)v111 + a3[6]) = *(_DWORD *)((char *)v110 + a3[6]);
  uint64_t v98 = a3[7];
  uint64_t v99 = (void *)((char *)v111 + v98);
  uint64_t v100 = (void *)((char *)v110 + v98);
  uint64_t v101 = *v100;
  unint64_t v102 = v100[1];
  sub_10025ADCC(*v100, v102);
  uint64_t v103 = *v99;
  unint64_t v104 = v99[1];
  uint64_t *v99 = v101;
  v99[1] = v102;
  sub_100250CC4(v103, v104);
  uint64_t v105 = a3[8];
  uint64_t v106 = *(void **)((char *)v111 + v105);
  int v107 = *(void **)((char *)v110 + v105);
  *(void *)((char *)v111 + v105) = v107;
  id v108 = v107;

  *((unsigned char *)v111 + a3[9]) = *((unsigned char *)v110 + a3[9]);
  return v111;
}

void *sub_10040D248(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v4 = a3[5];
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v12 = v11[5];
  int v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  uint64_t v22 = &v6[v20];
  if (v9(&v6[v20], 1, v7))
  {
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
  }
  uint64_t v24 = v11[8];
  int v25 = &v5[v24];
  int v26 = &v6[v24];
  if (v9(&v6[v24], 1, v7))
  {
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v9(&v6[v28], 1, v7))
  {
    uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
  }
  uint64_t v32 = v11[10];
  uint64_t v33 = &v5[v32];
  uint64_t v34 = &v6[v32];
  if (v9(&v6[v32], 1, v7))
  {
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
  }
  uint64_t v36 = v11[11];
  int v37 = &v5[v36];
  int v38 = &v6[v36];
  if (v9(&v6[v36], 1, v7))
  {
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
  }
  uint64_t v40 = v11[12];
  uint64_t v41 = &v5[v40];
  uint64_t v42 = &v6[v40];
  if (v9(&v6[v40], 1, v7))
  {
    uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
  }
  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  uint64_t v45 = &v5[v44];
  uint64_t v46 = &v6[v44];
  if (v9(&v6[v44], 1, v7))
  {
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
  }
  uint64_t v48 = v11[15];
  int v49 = &v5[v48];
  int v50 = &v6[v48];
  if (v9(&v6[v48], 1, v7))
  {
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
  }
  uint64_t v52 = v11[16];
  uint64_t v53 = &v5[v52];
  uint64_t v54 = &v6[v52];
  if (v9(&v6[v52], 1, v7))
  {
    uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v7);
  }
  uint64_t v56 = v11[17];
  uint64_t v57 = &v5[v56];
  uint64_t v58 = &v6[v56];
  if (v9(&v6[v56], 1, v7))
  {
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0, 1, v7);
  }
  uint64_t v60 = v11[18];
  int v61 = &v5[v60];
  int v62 = &v6[v60];
  *(_DWORD *)int v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  v5[v11[19]] = v6[v11[19]];
  *(_OWORD *)&v5[v11[20]] = *(_OWORD *)&v6[v11[20]];
  *(_OWORD *)&v5[v11[21]] = *(_OWORD *)&v6[v11[21]];
  uint64_t v63 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v63) = *(_OWORD *)((char *)a2 + v63);
  uint64_t v64 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *((unsigned char *)a1 + v64) = *((unsigned char *)a2 + v64);
  return a1;
}

void *sub_10040DB4C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  int v107 = a2;
  uint64_t v6 = a3[5];
  id v108 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v7[v76];
  id v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  uint64_t v83 = &v7[v82];
  id v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (!v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v83, v84, v9);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
    goto LABEL_78;
  }
  if (v86)
  {
LABEL_78:
    uint64_t v87 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v83, v84, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
LABEL_79:
  uint64_t v88 = v15[18];
  uint64_t v89 = &v7[v88];
  uint64_t v90 = &v8[v88];
  *(_DWORD *)uint64_t v89 = *(_DWORD *)v90;
  v89[4] = v90[4];
  v7[v15[19]] = v8[v15[19]];
  uint64_t v91 = v15[20];
  uint64_t v92 = &v7[v91];
  uint64_t v93 = &v8[v91];
  uint64_t v95 = *(void *)v93;
  uint64_t v94 = *((void *)v93 + 1);
  *(void *)uint64_t v92 = v95;
  *((void *)v92 + 1) = v94;
  swift_bridgeObjectRelease();
  uint64_t v96 = v15[21];
  uint64_t v97 = &v7[v96];
  uint64_t v98 = &v8[v96];
  uint64_t v100 = *(void *)v98;
  uint64_t v99 = *((void *)v98 + 1);
  *(void *)uint64_t v97 = v100;
  *((void *)v97 + 1) = v99;
  swift_bridgeObjectRelease();
  uint64_t v101 = a3[7];
  *(_DWORD *)((char *)v108 + a3[6]) = *(_DWORD *)((char *)v107 + a3[6]);
  uint64_t v102 = *(void *)((char *)v108 + v101);
  unint64_t v103 = *(void *)((char *)v108 + v101 + 8);
  *(_OWORD *)((char *)v108 + v101) = *(_OWORD *)((char *)v107 + v101);
  sub_100250CC4(v102, v103);
  uint64_t v104 = a3[8];
  uint64_t v105 = *(void **)((char *)v108 + v104);
  *(void *)((char *)v108 + v104) = *(void *)((char *)v107 + v104);

  *((unsigned char *)v108 + a3[9]) = *((unsigned char *)v107 + a3[9]);
  return v108;
}

uint64_t sub_10040E97C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10040E990);
}

uint64_t sub_10040E994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10040E9A8);
}

uint64_t sub_10040E9AC()
{
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10040EA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10040EA88);
}

uint64_t sub_10040EA8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10040EAA0);
}

uint64_t sub_10040EAA4()
{
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10040EB50()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100973148);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100973148);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10040EC18()
{
  uint64_t v1 = type metadata accessor for SFPlatform();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (SFFilesAppAvailable()
    && (static SFPlatform.visionOS.getter(),
        char v5 = static SFPlatform.isPlatform(_:)(),
        uint64_t v6 = *(void (**)(char *, uint64_t))(v2 + 8),
        v6(v4, v1),
        (v5 & 1) == 0))
  {
    static SFPlatform.macOS.getter();
    char v9 = static SFPlatform.isPlatform(_:)();
    v6(v4, v1);
    if (v9) {
      char v7 = 1;
    }
    else {
      char v7 = *(unsigned char *)(v0 + 24) ^ 1;
    }
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_10040ED40()
{
  uint64_t v1 = type metadata accessor for SFPlatform();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static SFPlatform.visionOS.getter();
  char v5 = static SFPlatform.isPlatform(_:)();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v2 + 8);
  v6(v4, v1);
  if (v5) {
    return 1;
  }
  static SFPlatform.macOS.getter();
  char v8 = static SFPlatform.isPlatform(_:)();
  v6(v4, v1);
  if (v8) {
    return 0;
  }
  else {
    return *(unsigned __int8 *)(v0 + 24);
  }
}

uint64_t sub_10040EE58(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for SFAirDropReceive.AskRequest();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  return _swift_task_switch(sub_10040EF50, v4, 0);
}

uint64_t sub_10040EF50()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[2];
  uint64_t v5 = *(void *)(SFAirDropReceive.AskRequest.files.getter() + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v7 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v8 = v0[4];
  if (!v5)
  {
    (*(void (**)(void, void))(v7 + 8))(v0[6], v0[4]);
    uint64_t v10 = 0;
    goto LABEL_26;
  }
  uint64_t v9 = *(void *)(SFAirDropReceive.AskRequest.urlItems.getter() + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  if (!v9)
  {
    uint64_t v11 = v0[3];
    *(void *)(v11 + 16) = sub_1003ABE64();
    swift_bridgeObjectRelease();
    unint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFF8;
      if (v12 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v26 == 1)
        {
          uint64_t v13 = v12 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
          uint64_t result = swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_8;
          }
        }
      }
      else
      {
        uint64_t v14 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain();
        if (v14 == 1)
        {
LABEL_8:
          if ((v12 & 0xC000000000000001) != 0)
          {
            id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (!*(void *)(v13 + 16))
            {
              __break(1u);
              return result;
            }
            id v16 = *(id *)(v12 + 32);
          }
          uint64_t v17 = v16;
          swift_bridgeObjectRelease();
          id v18 = [v17 bundleIdentifier];

          if (v18)
          {
            uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v21 = v20;

            v22._countAndFlagsBits = 0x6C7070612E6D6F63;
            v22._object = (void *)0xEA00000000002E65;
            Swift::Bool v23 = String.hasPrefix(_:)(v22);
            if (v19 == 0xD000000000000014 && v21 == 0x80000001007BCAD0)
            {
              swift_bridgeObjectRelease();
              char v24 = 0;
            }
            else
            {
              char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              char v24 = v23 & (v25 ^ 1);
            }
            *(unsigned char *)(v0[3] + 24) = v24 & 1;
          }
          goto LABEL_20;
        }
      }
      swift_bridgeObjectRelease();
    }
LABEL_20:
    uint64_t v10 = SFFilesAppAvailable();
    unint64_t v28 = *(void *)(v11 + 16);
    if (v28)
    {
      if (v28 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (v29) {
        uint64_t v10 = 1;
      }
      else {
        uint64_t v10 = v10;
      }
    }
    goto LABEL_26;
  }
  uint64_t v10 = 0;
LABEL_26:
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(uint64_t))v0[1];
  return v30(v10);
}

uint64_t sub_10040F258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for SFPlatform();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (SFFilesAppAvailable()
    && (static SFPlatform.visionOS.getter(),
        char v11 = static SFPlatform.isPlatform(_:)(),
        unint64_t v12 = *(void (**)(char *, uint64_t))(v8 + 8),
        v12(v10, v7),
        (v11 & 1) == 0))
  {
    static SFPlatform.macOS.getter();
    char v15 = static SFPlatform.isPlatform(_:)();
    v12(v10, v7);
    if (v15) {
      char v13 = 1;
    }
    else {
      char v13 = *(unsigned char *)(v3 + 24) ^ 1;
    }
  }
  else
  {
    char v13 = 0;
  }
  type metadata accessor for SDAirDropContentHandlerUtilities();
  return sub_1003A07DC(a1, a2, v13 & 1, a3);
}

void sub_10040F3B8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v42 = a1;
  uint64_t v44 = a3;
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_10097F1D0);
  __chkstk_darwin(v4 - 8);
  int v43 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for SFPlatform();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = *(void *)(v3 + 16);
  if (v14)
  {
    uint64_t v15 = v14 & 0xFFFFFFFFFFFFFF8;
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = (uint64_t *)_CocoaArrayWrapper.endIndex.getter();
      if (v16) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v16 = *(uint64_t **)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v16)
      {
LABEL_4:
        if ((v14 & 0xC000000000000001) != 0)
        {
          uint64_t v17 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_35;
          }
          uint64_t v17 = (uint64_t *)*(id *)(v14 + 32);
        }
        uint64_t v16 = v17;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v16 = 0;
LABEL_10:
  static SFPlatform.visionOS.getter();
  char v18 = static SFPlatform.isPlatform(_:)();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v13, v10);
  uint64_t v45 = v16;
  if (v18)
  {
    int v20 = 1;
  }
  else
  {
    static SFPlatform.macOS.getter();
    char v21 = static SFPlatform.isPlatform(_:)();
    v19(v13, v10);
    if (v21) {
      int v20 = 0;
    }
    else {
      int v20 = *(unsigned __int8 *)(v3 + 24);
    }
  }
  uint64_t v22 = v46;
  uint64_t v16 = *(uint64_t **)(v7 + 16);
  ((void (*)(uint64_t *, uint64_t, uint64_t))v16)(v9, v46, v6);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v7 + 88))(v9, v6) == enum case for SFAirDropReceive.ItemDestination.customApp(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v7 + 96))(v9, v6);
    uint64_t v24 = *v9;
    uint64_t v23 = v9[1];
    if (*v9 == 0xD000000000000034 && v23 == 0x80000001007B7D20)
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = v42;
      goto LABEL_29;
    }
    char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v15 = v42;
    if ((v25 & 1) != 0 || !*(void *)(v3 + 16))
    {
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
    swift_bridgeObjectRetain();
    unint64_t v26 = swift_bridgeObjectRetain();
    uint64_t v9 = (uint64_t *)sub_100411728(v26, v24, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (!v9)
    {
LABEL_29:
      uint64_t v22 = v46;
      goto LABEL_30;
    }
    if (qword_100969DC0 == -1)
    {
LABEL_24:
      uint64_t v27 = type metadata accessor for Logger();
      sub_10000B47C(v27, (uint64_t)qword_100973148);
      unint64_t v28 = v9;
      uint64_t v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v29, v30))
      {
        os_log_t v41 = v29;
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        uint64_t v39 = (void *)swift_slowAlloc();
        uint64_t v40 = v31;
        *(_DWORD *)uint64_t v31 = 138412290;
        uint64_t v47 = v28;
        int v38 = v9;
        int v32 = v28;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v9 = v38;
        *uint64_t v39 = v38;

        os_log_t v33 = v41;
        _os_log_impl((void *)&_mh_execute_header, v41, v30, "Opening with chosen app %@", v40, 0xCu);
        sub_10000A844(&qword_10096B850);
        int v20 = 1;
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        int v20 = 1;
      }
      uint64_t v45 = v9;
      goto LABEL_29;
    }
LABEL_35:
    swift_once();
    goto LABEL_24;
  }
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v15 = v42;
LABEL_30:
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v34 = (uint64_t)v43;
  ((void (*)(char *, uint64_t, uint64_t))v16)(v43, v22, v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v34, 0, 1, v6);
  uint64_t v35 = v45;
  uint64_t v36 = v45;
  sub_10039FAA0(v15, v35, v20, v44);

  sub_10024DFE8(v34);
}

uint64_t sub_10040F98C()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDAirDropContentHandlerGenericFiles()
{
  return self;
}

BOOL sub_10040F9E8()
{
  uint64_t v0 = type metadata accessor for SFPlatform();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static SFPlatform.macOS.getter();
  char v4 = static SFPlatform.isPlatform(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (v4 & 1) == 0;
}

uint64_t sub_10040FABC()
{
  return sub_10040ED40() & 1;
}

uint64_t sub_10040FAE4()
{
  return sub_10040EC18() & 1;
}

uint64_t sub_10040FB0C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerGenericFiles();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_10040FB48(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_10040EE58(a1);
}

uint64_t sub_10040FBE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_10040F258(a1, a2, a3);
}

void sub_10040FC04(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

BOOL sub_10040FC28(uint64_t a1)
{
  return *(void *)(a1 + 16) > 1uLL;
}

uint64_t sub_10040FC38(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v2 = static AirDropActor.shared;
  *(void *)(v1 + 24) = static AirDropActor.shared;
  return _swift_task_switch(sub_10040FCD8, v2, 0);
}

uint64_t sub_10040FCD8()
{
  v0[4] = [objc_allocWithZone((Class)type metadata accessor for SDAirDropMoveToAppShareSheet()) init];
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_10097E7E8 + dword_10097E7E8);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  void *v1 = v0;
  v1[1] = sub_10040FD9C;
  uint64_t v2 = v0[2];
  return v4(v2);
}

uint64_t sub_10040FD9C(char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(void *)(v4 + 24);
    return _swift_task_switch(sub_10040FEF4, v6, 0);
  }
  else
  {

    uint64_t v7 = *(uint64_t (**)(void))(v5 + 8);
    return v7(a1 & 1);
  }
}

uint64_t sub_10040FEF4()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_10040FF5C@<X0>(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD00000000000006ALL;
  uint64_t v4 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_10000A844(&qword_10096B790);
  uint64_t v101 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v104 = (uint64_t **)((char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for Date();
  __chkstk_darwin(v8 - 8);
  unint64_t v103 = (char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  __chkstk_darwin(v10 - 8);
  uint64_t v100 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_10000A844(&qword_10096B2C0);
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  char v13 = (void (**)(char *, char *, uint64_t))((char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v109 = type metadata accessor for SFAirDrop.DeclineAction();
  id v108 = *(void (***)(char *, uint64_t))(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v15 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v17 = *(char **)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v129 = (uint64_t *)((char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v130 = type metadata accessor for SFAirDrop.ButtonConfiguration();
  uint64_t v110 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  v146 = (uint64_t *)((char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v144 = sub_10000A844(&qword_10096B2F8);
  uint64_t v131 = *(void *)(v144 - 8);
  uint64_t v20 = __chkstk_darwin(v144);
  uint64_t v143 = (char *)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  unint64_t v148 = (unint64_t)&v100 - v22;
  uint64_t v23 = sub_10000A844(&qword_100973298);
  uint64_t v136 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v132 = v25;
  uint64_t v133 = (char *)&v100 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  id v113 = "openDestinationRequest";
  uint64_t v135 = (char *)&v100 - v26;
  uint64_t v145 = v16;
  SFProgressContinuation.init(_:initialProgress:file:line:)();
  unint64_t v27 = *(void *)(v1 + 16);
  id v111 = v15;
  uint64_t v134 = v23;
  uint64_t v107 = a1;
  if (!v27)
  {
    os_log_type_t v30 = _swiftEmptyArrayStorage;
    goto LABEL_21;
  }
  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    if (v28) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v28)
    {
LABEL_4:
      uint64_t v128 = v28;
      if (v28 < 1)
      {
        __break(1u);
LABEL_37:
        swift_once();
        goto LABEL_35;
      }
      uint64_t v29 = 0;
      unint64_t v137 = v27 & 0xC000000000000001;
      int v124 = enum case for SFAirDrop.ButtonConfiguration.text(_:);
      uint64_t v123 = (void (**)(void))(v110 + 104);
      unsigned int v122 = enum case for SFAirDropReceive.ItemDestination.customApp(_:);
      uint64_t v121 = (void (**)(uint64_t *, void, uint64_t))(v17 + 104);
      uint64_t v120 = v136 + 16;
      uint64_t v119 = v136 + 32;
      uint64_t v118 = (void (**)(unint64_t, void, uint64_t))(v131 + 104);
      uint64_t v117 = (void (**)(char *, unint64_t, uint64_t))(v131 + 16);
      uint64_t v116 = v131 + 32;
      uint64_t v115 = v131 + 8;
      os_log_type_t v30 = _swiftEmptyArrayStorage;
      unsigned int v114 = enum case for SFAirDrop.AcceptAction.single<A>(_:);
      uint64_t v31 = v128;
      uint64_t v126 = v6;
      uint64_t v127 = (char *)v13;
      unint64_t v125 = v27;
      do
      {
        uint64_t v153 = v29;
        if (v137) {
          id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v32 = *(id *)(v27 + 8 * v29 + 32);
        }
        os_log_t v33 = v32;
        id v34 = [v32 bundleIdentifier];
        if (v34)
        {
          uint64_t v35 = v34;
          uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v38 = v37;

          id v142 = v33;
          id v39 = [v33 localizedName];
          uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v138 = v40;
          unint64_t v42 = v41;

          uint64_t v43 = sub_10000A844(&qword_100970B50);
          uint64_t v141 = (char *)(v148 + *(int *)(v43 + 48));
          uint64_t v44 = v146;
          uint64_t *v146 = v40;
          v44[1] = v42;
          unint64_t v139 = v42;
          (*v123)();
          uint64_t v45 = v129;
          *uint64_t v129 = v36;
          v45[1] = v38;
          uint64_t v140 = (void (*)(char *, char *, uint64_t))v36;
          uint64_t v46 = v38;
          (*v121)(v45, v122, v145);
          v147 = v30;
          uint64_t v47 = v136;
          uint64_t v48 = v133;
          (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v133, v135, v23);
          unint64_t v49 = (*(unsigned __int8 *)(v47 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
          int v50 = (char *)swift_allocObject();
          *((void *)v50 + 2) = v138;
          *((void *)v50 + 3) = v42;
          *((void *)v50 + 4) = v36;
          *((void *)v50 + 5) = v46;
          uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
          os_log_type_t v30 = v147;
          v51(&v50[v49], v48, v23);
          sub_100411CC8(&qword_1009732A0, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
          sub_100411CC8(&qword_1009732A8, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
          sub_100411CC8(&qword_10096CCB0, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          unint64_t v52 = v148;
          SFAirDrop.AcceptAction.Single.init(id:buttonConfiguration:prominent:hidden:defaultAnswer:operation:)();
          UUID.init()();
          uint64_t v53 = v144;
          (*v118)(v52, v114, v144);
          (*v117)(v143, v52, v53);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            os_log_type_t v30 = (void *)sub_1002539A0(0, v30[2] + 1, 1, (unint64_t)v30);
          }
          unint64_t v55 = v30[2];
          unint64_t v54 = v30[3];
          uint64_t v6 = v126;
          char v13 = (void (**)(char *, char *, uint64_t))v127;
          uint64_t v23 = v134;
          if (v55 >= v54 >> 1) {
            os_log_type_t v30 = (void *)sub_1002539A0(v54 > 1, v55 + 1, 1, (unint64_t)v30);
          }
          v30[2] = v55 + 1;
          uint64_t v56 = v131;
          uint64_t v57 = v144;
          (*(void (**)(unint64_t, char *, uint64_t))(v131 + 32))((unint64_t)v30+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v55, v143, v144);

          (*(void (**)(unint64_t, uint64_t))(v56 + 8))(v148, v57);
          unint64_t v27 = v125;
          uint64_t v31 = v128;
        }
        else
        {
        }
        uint64_t v29 = v153 + 1;
      }
      while (v31 != v153 + 1);
      goto LABEL_20;
    }
  }
  os_log_type_t v30 = _swiftEmptyArrayStorage;
LABEL_20:
  swift_bridgeObjectRelease();
LABEL_21:
  v147 = v30;
  NSString v58 = String._bridgeToObjectiveC()();
  id v59 = (id)SFLocalizedStringForKey();

  if (v59)
  {
    uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v62 = v61;
  }
  else
  {
    uint64_t v60 = 0;
    uint64_t v62 = 0;
  }
  uint64_t v149 = v60;
  uint64_t v150 = v62;
  sub_10000A844(&qword_10096B540);
  uint64_t v63 = v112;
  Optional.tryUnwrap(_:file:line:)();
  if (v63)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v136 + 8))(v135, v134);
  }
  uint64_t v153 = 0;
  swift_bridgeObjectRelease();
  uint64_t v65 = v152;
  uint64_t v66 = v146;
  uint64_t *v146 = (uint64_t)v151;
  v66[1] = v65;
  (*(void (**)(uint64_t *, void, uint64_t))(v110 + 104))(v66, enum case for SFAirDrop.ButtonConfiguration.text(_:), v130);
  uint64_t v67 = v136;
  uint64_t v69 = v133;
  uint64_t v68 = v134;
  uint64_t v140 = *(void (**)(char *, char *, uint64_t))(v136 + 16);
  uint64_t v141 = (char *)(v136 + 16);
  v140(v133, v135, v134);
  unint64_t v70 = *(unsigned __int8 *)(v67 + 80);
  uint64_t v71 = (v70 + 16) & ~v70;
  unint64_t v148 = v70;
  uint64_t v143 = (char *)(v70 | 7);
  uint64_t v72 = swift_allocObject();
  int v73 = *(void **)(v67 + 32);
  uint64_t v144 = v67 + 32;
  id v142 = v73;
  ((void (*)(uint64_t, char *, uint64_t))v73)(v72 + v71, v69, v68);
  SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)();
  NSString v74 = String._bridgeToObjectiveC()();
  id v75 = (id)SFLocalizedStringForKey();

  if (v75)
  {
    uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v78 = v77;
  }
  else
  {
    uint64_t v76 = 0;
    uint64_t v78 = 0;
  }
  uint64_t v79 = v109;
  uint64_t v80 = v153;
  uint64_t v149 = v76;
  uint64_t v150 = v78;
  Optional.tryUnwrap(_:file:line:)();
  uint64_t v81 = v135;
  if (v80)
  {
    swift_bridgeObjectRelease();
    v108[1](v111, v79);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v136 + 8))(v81, v134);
  }
  uint64_t v127 = (char *)v13;
  uint64_t v126 = v6;
  swift_bridgeObjectRelease();
  uint64_t v82 = (uint64_t *)v152;
  v146 = v151;
  NSString v83 = String._bridgeToObjectiveC()();
  id v84 = (id)SFLocalizedStringForKey();

  if (v84)
  {
    uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v87 = v86;
  }
  else
  {
    uint64_t v85 = 0;
    uint64_t v87 = 0;
  }
  uint64_t v149 = v85;
  uint64_t v150 = v87;
  Optional.tryUnwrap(_:file:line:)();
  char v13 = (void (**)(char *, char *, uint64_t))v108;
  uint64_t v153 = 0;
  unint64_t v139 = ~v148;
  swift_bridgeObjectRelease();
  uint64_t v88 = v151;
  uint64_t v89 = (uint64_t *)v152;
  UUID.init()();
  static Date.now.getter();
  uint64_t v90 = sub_10000A844(&qword_10096B798);
  uint64_t v91 = v104;
  uint64_t v92 = (char *)v104 + *(int *)(v90 + 80);
  *uint64_t v104 = v146;
  v91[1] = v82;
  v91[2] = v88;
  v91[3] = v89;
  v91[4] = v147;
  v13[2](v92, v111, v109);
  (*(void (**)(uint64_t **, void, uint64_t))(v101 + 104))(v91, enum case for SFAirDrop.PermissionRequest.Style.alert<A>(_:), v102);
  sub_100411CC8(&qword_1009732A0, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
  sub_100411CC8(&qword_1009732A8, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
  sub_100411CC8(&qword_10096CCB0, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
  SFAirDrop.PermissionRequest.init(id:requestDate:style:isAnswered:)();
  uint64_t v93 = type metadata accessor for TaskPriority();
  uint64_t v6 = v126;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v126, 1, 1, v93);
  uint64_t v17 = v133;
  unint64_t v3 = v134;
  uint64_t v15 = v135;
  v140(v133, v135, v134);
  if (qword_100969B90 != -1) {
    goto LABEL_37;
  }
LABEL_35:
  uint64_t v94 = static AirDropActor.shared;
  uint64_t v95 = sub_100411CC8((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v96 = (v148 + 32) & v139;
  uint64_t v97 = swift_allocObject();
  *(void *)(v97 + 16) = v94;
  *(void *)(v97 + 24) = v95;
  ((void (*)(uint64_t, char *, unint64_t))v142)(v97 + v96, v17, v3);
  swift_retain();
  uint64_t v98 = sub_10028CAD4((uint64_t)v6, (uint64_t)&unk_1009732B8, v97);
  ((void (*)(char *, uint64_t))v13[1])(v111, v109);
  (*(void (**)(char *, unint64_t))(v136 + 8))(v15, v3);
  uint64_t v99 = v107;
  (*(void (**)(uint64_t, char *, uint64_t))(v105 + 32))(v107, v127, v106);
  uint64_t result = sub_10000A844(&qword_10096CC70);
  *(void *)(v99 + *(int *)(result + 52)) = v98;
  return result;
}

uint64_t sub_100411158(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  if (qword_100969DC0 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000B47C(v9, (uint64_t)qword_100973148);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    swift_bridgeObjectRetain();
    sub_100254634(a2, a3, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_100254634(a4, a5, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "View destination chosen was %s [bundleID = %s]", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_10000A844(&qword_100973298);
  return SFProgressContinuation.finish(with:)();
}

uint64_t sub_1004113A0()
{
  if (qword_100969DC0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_100973148);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "View destination chosen was 'Cancel', cancelling AirDrop", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t v4 = type metadata accessor for SFAirDropReceive.Failure();
  sub_100411CC8(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 104))(v5, enum case for SFAirDropReceive.Failure.declined(_:), v4);
  sub_10000A844(&qword_100973298);
  SFProgressContinuation.fail(with:)();

  return swift_errorRelease();
}

uint64_t sub_100411540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  uint64_t v5 = sub_10000A844(&qword_1009732C0);
  v4[4] = v5;
  v4[5] = *(void *)(v5 - 8);
  v4[6] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v4[7] = static AirDropActor.shared;
  return _swift_task_switch(sub_100411640, v6, 0);
}

uint64_t sub_100411640()
{
  sub_10000A844(&qword_100973298);
  SFProgressContinuation.task.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  void *v1 = v0;
  v1[1] = sub_1003918D8;
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  return SFProgressTask.finalValue.getter(v3, v2);
}

uint64_t sub_1004116FC(uint64_t a1, uint64_t a2)
{
  return sub_100411D10(a2);
}

uint64_t sub_100411704@<X0>(uint64_t a1@<X8>)
{
  return sub_10040FF5C(a1);
}

void *sub_100411728(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v6);
      uint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      id v10 = [v7 bundleIdentifier];
      if (v10)
      {
        os_log_type_t v11 = v10;
        uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v14 = v13;

        if (v12 == a2 && v14 == a3)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v8;
        }
        char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_18;
        }
      }

      ++v6;
      if (v9 == v5) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_21:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1004118BC()
{
  uint64_t v1 = sub_10000A844(&qword_100973298);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100411950()
{
  sub_10000A844(&qword_100973298);

  return sub_1004113A0();
}

uint64_t sub_1004119B4()
{
  uint64_t v1 = sub_10000A844(&qword_100973298);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100411A84(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10000A844(&qword_100973298) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10000A6F4;
  return sub_100411540(a1, v5, v6, v7);
}

uint64_t sub_100411B74()
{
  uint64_t v1 = sub_10000A844(&qword_100973298);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100411C4C(uint64_t a1)
{
  sub_10000A844(&qword_100973298);
  uint64_t v3 = v1[2];
  unint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  unint64_t v6 = v1[5];

  return sub_100411158(a1, v3, v4, v5, v6);
}

uint64_t sub_100411CC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100411D10(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v17 - v7;
  char v9 = SFFilesAppAvailable();
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v10(v8, a1, v2);
  if (v9)
  {
LABEL_7:
    char v14 = 0;
    goto LABEL_8;
  }
  v10(v6, (uint64_t)v8, v2);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v11 != enum case for SFAirDropReceive.ItemDestination.customApp(_:))
  {
    if (v11 != enum case for SFAirDropReceive.ItemDestination.noItem(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      char v14 = 1;
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t))(v3 + 96))(v6, v2);
  uint64_t v12 = *(void *)v6;
  uint64_t v13 = *((void *)v6 + 1);
  if (v12 == 0xD000000000000034 && v13 == 0x80000001007B7D20)
  {
    swift_bridgeObjectRelease();
    char v14 = 0;
  }
  else
  {
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v14 = v16 ^ 1;
  }
LABEL_8:
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return v14 & 1;
}

uint64_t sub_100411F38()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_1009732C8);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_1009732C8);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100412000(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SFAirDropReceive.AskRequest();
  v2[12] = v5;
  v2[13] = *(void *)(v5 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  return _swift_task_switch(sub_1004121C0, v6, 0);
}

uint64_t sub_1004121C0()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[13];
  uint64_t v5 = *(void *)(SFAirDropReceive.AskRequest.files.getter() + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[12];
  uint64_t v8 = v0[13];
  if (v5)
  {
    uint64_t v9 = *(void *)(SFAirDropReceive.AskRequest.urlItems.getter() + 16);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    if (v9)
    {
      BOOL v10 = 0;
    }
    else
    {
      uint64_t v11 = SFAirDropReceive.AskRequest.files.getter();
      uint64_t v12 = *(void *)(v11 + 16);
      if (v12)
      {
        uint64_t v13 = v0[10];
        uint64_t v15 = *(void (**)(void, unint64_t, void))(v13 + 16);
        uint64_t v14 = v13 + 16;
        unint64_t v16 = v11 + ((*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64));
        uint64_t v28 = *(void *)(v14 + 56);
        os_log_type_t type = v15;
        while (1)
        {
          type(v0[11], v16, v0[9]);
          SFAirDropReceive.AskRequest.ItemInfo.fileName.getter();
          NSString v17 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          NSString v18 = [v17 pathExtension];

          if (!v18)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();
            NSString v18 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
          }
          uint64_t v19 = v0[11];
          uint64_t v20 = v0[9];
          char v21 = SFIsNote();

          (*(void (**)(uint64_t, uint64_t))(v14 - 8))(v19, v20);
          if ((v21 & 1) == 0) {
            break;
          }
          v16 += v28;
          if (!--v12) {
            goto LABEL_11;
          }
        }
        swift_bridgeObjectRelease();
        BOOL v10 = 0;
      }
      else
      {
LABEL_11:
        swift_bridgeObjectRelease();
        id v22 = objc_allocWithZone((Class)LSApplicationRecord);
        id v23 = sub_1006A5458(0xD000000000000015, 0x80000001007BCB30, 1);
        uint64_t v24 = v0[5];
        uint64_t v25 = *(void **)(v24 + 16);
        *(void *)(v24 + 16) = v23;

        BOOL v10 = *(void *)(v0[5] + 16) != 0;
      }
    }
  }
  else
  {
    (*(void (**)(void, void))(v8 + 8))(v0[15], v0[12]);
    BOOL v10 = 0;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(BOOL))v0[1];
  return v26(v10);
}

uint64_t sub_100412740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_10000A844((uint64_t *)&unk_10097F1D0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v10 = *(void **)(v3 + 16);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v11 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v9, a2, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  id v13 = v10;
  sub_10039FAA0(a1, v10, 1, a3);

  return sub_10024DFE8((uint64_t)v9);
}

uint64_t type metadata accessor for SDAirDropContentHandlerNotes()
{
  return self;
}

uint64_t sub_1004128A8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerNotes();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1004128E0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_100412000(a1);
}

uint64_t sub_10041297C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100412740(a1, a2, a3);
}

void sub_1004129A0(uint64_t a1, char a2)
{
  unint64_t v3 = *(void *)(SFAirDropReceive.AskRequest.files.getter() + 16);
  swift_bridgeObjectRelease();
  sub_10000A844(&qword_10096D760);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
  *(void *)(inited + 32) = 1163153230;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(void *)(inited + 48) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = 95;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6._countAndFlagsBits = 1163153230;
  v6._object = (void *)0xE400000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  if (v3 > 1)
  {
    v7._countAndFlagsBits = 0x4C4152554C505FLL;
    v7._object = (void *)0xE700000000000000;
    String.append(_:)(v7);
  }
  swift_bridgeObjectRelease();
  if (a2)
  {
    v8._countAndFlagsBits = 0x4C4154495041435FLL;
    v8._object = (void *)0xEC00000044455A49;
    String.append(_:)(v8);
  }
  v9._countAndFlagsBits = 0x545845545FLL;
  v9._object = (void *)0xE500000000000000;
  String.append(_:)(v9);
  swift_setDeallocating();
  sub_10000A844((uint64_t *)&unk_100977CB0);
  swift_arrayDestroy();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = (id)SFLocalizedStringForKey();

  if (v11)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_10076E7A0;
    *(void *)(v12 + 56) = &type metadata for Int;
    *(void *)(v12 + 64) = &protocol witness table for Int;
    *(void *)(v12 + 32) = v3;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100412BD8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100412C74()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_1009733D0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_1009733D0);
  if (qword_100969CD8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946D8);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_100412D3C(int a1, uint64_t a2, uint64_t a3, dispatch_group_t group)
{
  if (a2)
  {
    swift_errorRetain();
    if (qword_100969DD0 != -1) {
      swift_once();
    }
    Swift::String v7 = (void *)(a3 + 16);
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000B47C(v8, (uint64_t)qword_1009733D0);
    swift_errorRetain();
    swift_errorRetain();
    Swift::String v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      *(_DWORD *)id v11 = 138412290;
      swift_errorRetain();
      uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v12 = v13;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "MAEIssueDCRT failed with %@", v11, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_beginAccess();
    *Swift::String v7 = a2;
    swift_errorRelease();
  }
  dispatch_group_leave(group);
}

uint64_t sub_100412F30()
{
  uint64_t v0 = (void *)_convertErrorToNSError(_:)();
  char HasDomainAndErrorCode = mobileactivationErrorHasDomainAndErrorCode();

  if (HasDomainAndErrorCode) {
    return 1;
  }
  uint64_t v2 = (void *)_convertErrorToNSError(_:)();
  char v3 = mobileactivationErrorHasDomainAndErrorCode();

  if (v3) {
    return 1;
  }
  uint64_t v4 = (void *)_convertErrorToNSError(_:)();
  char v5 = mobileactivationErrorHasDomainAndErrorCode();

  if (v5) {
    return 1;
  }
  id v6 = (void *)_convertErrorToNSError(_:)();
  char v7 = mobileactivationErrorHasDomainAndErrorCode();

  if (v7) {
    return 1;
  }
  os_log_type_t v10 = (void *)_convertErrorToNSError(_:)();
  uint64_t v8 = mobileactivationErrorHasDomainAndErrorCode();

  return v8;
}

char *sub_10041303C()
{
  uint64_t v0 = type metadata accessor for DispatchTime();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  id v6 = (char *)&v35 - v5;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  uint64_t v8 = (void *)(v7 + 16);
  Swift::String v9 = dispatch_group_create();
  dispatch_group_enter(v9);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v7;
  *(void *)(v10 + 24) = v9;
  aBlock[4] = sub_100413938;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100412BD8;
  aBlock[3] = &unk_1008DA080;
  id v11 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v12 = v9;
  swift_retain();
  MAEIssueDCRTWithCompletion();
  _Block_release(v11);
  swift_release();
  swift_release();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v1 + 8);
  v13(v4, v0);
  OS_dispatch_group.wait(timeout:)();
  v13(v6, v0);
  if ((static DispatchTimeoutResult.== infix(_:_:)() & 1) == 0)
  {
    swift_beginAccess();
    if (*v8) {
      goto LABEL_19;
    }
    uint64_t v40 = 0;
    id v18 = (id)MAECopyDCRTWithOptions();
    if (v18)
    {
      uint64_t v19 = v18;
      id v6 = (char *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v21 = v20;

      uint64_t v15 = v40;
      if (!v40) {
        goto LABEL_17;
      }
    }
    else
    {
      id v6 = 0;
      unint64_t v21 = 0xF000000000000000;
      uint64_t v15 = v40;
      if (!v40) {
        goto LABEL_17;
      }
    }
    uint64_t v22 = qword_100969DD0;
    id v23 = v15;
    if (v22 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_10000B47C(v24, (uint64_t)qword_1009733D0);
    uint64_t v25 = v23;
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    int v28 = v27;
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v29 = swift_slowAlloc();
      int v37 = v28;
      uint64_t v30 = (uint8_t *)v29;
      uint64_t v36 = (void *)swift_slowAlloc();
      uint64_t v38 = v26;
      id v39 = v30;
      *(_DWORD *)uint64_t v30 = 138412290;
      uint64_t v40 = v25;
      uint64_t v35 = &v41;
      uint64_t v25 = v25;
      uint64_t v31 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v36 = v15;

      _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v37, "Failed to MAECopyDCRT after MAEIssueDCRT, error: %@", v39, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v31 = v25;
    }

LABEL_17:
    if (v21 >> 60 != 15)
    {
      swift_release();

      return v6;
    }
    goto LABEL_18;
  }
  if (qword_100969DD0 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_10000B47C(v14, (uint64_t)qword_1009733D0);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v15, v16))
  {
    NSString v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Timing out for _MAEIssueDCRT", v17, 2u);
    swift_slowDealloc();
  }
LABEL_18:

LABEL_19:
  swift_beginAccess();
  if (!*v8)
  {
LABEL_23:
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v33 = 10;
    *(void *)(v33 + 8) = 0xD00000000000001CLL;
    *(void *)(v33 + 16) = 0x80000001007BCB50;
    swift_willThrow();
    goto LABEL_24;
  }
  swift_errorRetain();
  if ((sub_100412F30() & 1) == 0)
  {
    swift_errorRelease();
    goto LABEL_23;
  }
  sub_10024D280();
  swift_allocError();
  *(_DWORD *)uint64_t v32 = 39;
  *(void *)(v32 + 8) = 0xD000000000000027;
  *(void *)(v32 + 16) = 0x80000001007BCB70;
  swift_willThrow();
  swift_errorRelease();
LABEL_24:
  swift_release();

  return v6;
}

uint64_t sub_100413648()
{
  id v0 = (id)MAECopyDCRTWithOptions();
  if (v0)
  {
    uint64_t v1 = v0;
    uint64_t v2 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v4 = v3;
  }
  else
  {
    uint64_t v2 = 0;
    unint64_t v4 = 0xF000000000000000;
  }
  if (v4 >> 60 == 15) {
    uint64_t v2 = (uint64_t)sub_10041303C();
  }

  return v2;
}

uint64_t sub_1004138C0()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004138F8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100413938(int a1, uint64_t a2)
{
  sub_100412D3C(a1, a2, *(void *)(v2 + 16), *(dispatch_group_t *)(v2 + 24));
}

uint64_t sub_100413940(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100413950()
{
  return swift_release();
}

uint64_t sub_100413958(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v12++, 1)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_27;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    if (!v16)
    {
      int64_t v17 = v12 + 1;
      if (v12 + 1 >= v10) {
        goto LABEL_27;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v12 + 2;
        if (v12 + 2 >= v10) {
          goto LABEL_27;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v17);
        if (!v16)
        {
          int64_t v17 = v12 + 3;
          if (v12 + 3 >= v10) {
            goto LABEL_27;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v17);
          if (!v16)
          {
            int64_t v17 = v12 + 4;
            if (v12 + 4 >= v10)
            {
LABEL_27:
              swift_release();
              char v18 = 0;
              return v18 & 1;
            }
            unint64_t v16 = *(void *)(v6 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                int64_t v12 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_30;
                }
                if (v12 >= v10) {
                  goto LABEL_27;
                }
                unint64_t v16 = *(void *)(v6 + 8 * v12);
                ++v17;
                if (v16) {
                  goto LABEL_18;
                }
              }
            }
          }
        }
      }
      int64_t v12 = v17;
    }
LABEL_18:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_19:
    char v19 = *(unsigned char *)(*(void *)(a3 + 56) + v14);
    uint64_t result = a1(&v19);
    if (v3)
    {
      swift_release();
      return v18 & 1;
    }
    if (result)
    {
      swift_release();
      char v18 = 1;
      return v18 & 1;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void sub_100413B00(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for SDAirDropSendConnection(0);
    sub_100415CA0(&qword_100970DA0, (void (*)(uint64_t))type metadata accessor for SDAirDropSendConnection);
    Set.Iterator.init(_cocoa:)();
    uint64_t v5 = v24;
    uint64_t v23 = v25;
    uint64_t v7 = v26;
    int64_t v8 = v27;
    unint64_t v9 = v28;
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v23 = a3 + 56;
    uint64_t v11 = ~v10;
    uint64_t v12 = -v10;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v9 = v13 & *(void *)(a3 + 56);
    swift_bridgeObjectRetain();
    uint64_t v7 = v11;
    int64_t v8 = 0;
  }
  int64_t v22 = (unint64_t)(v7 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (__CocoaSet.Iterator.next()())
  {
    type metadata accessor for SDAirDropSendConnection(0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = v29;
    swift_unknownObjectRelease();
    int64_t v15 = v8;
    uint64_t v16 = v9;
    while (v14)
    {
      id v29 = v14;
      char v20 = a1(&v29);

      if (v4 || (v20 & 1) != 0) {
        break;
      }
      int64_t v8 = v15;
      unint64_t v9 = v16;
      if (v5 < 0) {
        goto LABEL_8;
      }
LABEL_11:
      if (v9)
      {
        uint64_t v16 = (v9 - 1) & v9;
        unint64_t v17 = __clz(__rbit64(v9)) | (v8 << 6);
        int64_t v15 = v8;
      }
      else
      {
        int64_t v15 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          return;
        }
        if (v15 >= v22) {
          break;
        }
        unint64_t v18 = *(void *)(v23 + 8 * v15);
        if (!v18)
        {
          int64_t v19 = v8 + 2;
          if (v8 + 2 >= v22) {
            break;
          }
          unint64_t v18 = *(void *)(v23 + 8 * v19);
          if (v18) {
            goto LABEL_22;
          }
          int64_t v19 = v8 + 3;
          if (v8 + 3 >= v22) {
            break;
          }
          unint64_t v18 = *(void *)(v23 + 8 * v19);
          if (v18) {
            goto LABEL_22;
          }
          int64_t v19 = v8 + 4;
          if (v8 + 4 >= v22) {
            break;
          }
          unint64_t v18 = *(void *)(v23 + 8 * v19);
          if (v18)
          {
LABEL_22:
            int64_t v15 = v19;
          }
          else
          {
            int64_t v15 = v8 + 5;
            if (v8 + 5 >= v22) {
              break;
            }
            unint64_t v18 = *(void *)(v23 + 8 * v15);
            if (!v18)
            {
              int64_t v21 = v8 + 6;
              while (v22 != v21)
              {
                unint64_t v18 = *(void *)(v23 + 8 * v21++);
                if (v18)
                {
                  int64_t v15 = v21 - 1;
                  goto LABEL_23;
                }
              }
              break;
            }
          }
        }
LABEL_23:
        uint64_t v16 = (v18 - 1) & v18;
        unint64_t v17 = __clz(__rbit64(v18)) + (v15 << 6);
      }
      id v14 = *(id *)(*(void *)(v5 + 48) + 8 * v17);
    }
  }
  sub_10024D330();
}

uint64_t sub_100413E30()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_1009733E8);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_1009733E8);
  if (qword_100969C48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994528);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100413EF8()
{
  uint64_t v36 = sub_10000A844(&qword_1009735F0);
  __chkstk_darwin(v36);
  uint64_t v33 = (char *)&v22 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = sub_10000A844(&qword_1009735F8);
  uint64_t v34 = *(void *)(v1 - 8);
  uint64_t v35 = v1;
  __chkstk_darwin(v1);
  uint64_t v32 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for SFTempPairingSenderStateUpdate();
  __chkstk_darwin(v31);
  uint64_t v30 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10000A844(&qword_100973600);
  __chkstk_darwin(v29);
  uint64_t v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000A844(&qword_100973608);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  __chkstk_darwin(v5);
  uint64_t v24 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for SFTempPairingStateUpdate();
  __chkstk_darwin(v23);
  int64_t v22 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v12);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v13 - 8);
  sub_1002B62F0();
  static DispatchQoS.userInitiated.getter();
  int v37 = _swiftEmptyArrayStorage;
  sub_100415CA0((unint64_t *)&unk_100974840, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000A844((uint64_t *)&unk_10096A1B0);
  sub_1002AE308((unint64_t *)&qword_100974850, (uint64_t *)&unk_10096A1B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v8);
  uint64_t v14 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v15 = v28;
  *(void *)(v28 + 16) = v14;
  *(void *)(v15 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server) = 0;
  *(void *)(v15 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_client) = 0;
  SFTempPairingStateUpdate.init()();
  sub_10000A844(&qword_100973610);
  swift_allocObject();
  uint64_t v16 = CurrentValueSubject.init(_:)();
  *(void *)(v15 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_receiverStateUpdateSequence) = v16;
  int v37 = (void *)v16;
  sub_1002AE308(&qword_100973618, &qword_100973610);
  Publisher<>.values.getter();
  sub_1002AE308(&qword_100973620, &qword_100973600);
  unint64_t v17 = v24;
  SFNoThrowAsyncSequence.init<A>(_:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v15 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_receiverStateUpdates, v17, v27);
  SFTempPairingSenderStateUpdate.init()();
  sub_10000A844(&qword_100973628);
  swift_allocObject();
  uint64_t v18 = CurrentValueSubject.init(_:)();
  *(void *)(v15 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_senderStateUpdateSequence) = v18;
  int v37 = (void *)v18;
  sub_1002AE308(&qword_100973630, &qword_100973628);
  Publisher<>.values.getter();
  sub_1002AE308(&qword_100973638, &qword_1009735F0);
  int64_t v19 = v32;
  SFNoThrowAsyncSequence.init<A>(_:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v15 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_senderStateUpdates, v19, v35);
  id v20 = [self defaultCenter];
  [v20 addObserver:v15 selector:"handleRapportIdentitiesChanged" name:off_100969790 object:0];

  return v15;
}

void sub_1004145B4()
{
  uint64_t v1 = v0;
  type metadata accessor for SFAirDropUserDefaults();
  uint64_t v2 = (void *)static SFAirDropUserDefaults.shared.getter();
  char v3 = SFAirDropUserDefaults.askToAirDropEnabled.getter();

  if (v3)
  {
    uint64_t v4 = OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_client;
    if (*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_client))
    {
      if (qword_100969DD8 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      sub_10000B47C(v5, (uint64_t)qword_1009733E8);
      oslog = Logger.logObject.getter();
      os_log_type_t v6 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(oslog, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v7 = 0;
        uint64_t v8 = "Attempted to start browsing but already browsing";
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, oslog, v6, v8, v7, 2u);
        swift_slowDealloc();
      }
    }
    else
    {
      uint64_t v10 = *(void **)(v1 + 16);
      id v11 = objc_allocWithZone((Class)type metadata accessor for SDTempPairingClient(0));
      id v12 = sub_1003DF930(v10);
      uint64_t v13 = *(void **)(v1 + v4);
      *(void *)(v1 + v4) = v12;
      oslog = v12;

      uint64_t v14 = swift_allocObject();
      swift_weakInit();
      uint64_t v15 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = v14;
      *(void *)(v16 + 24) = v15;
      unint64_t v17 = (void (**)())((char *)oslog + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
      uint64_t v18 = *(uint64_t *)((char *)&oslog->isa + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
      char *v17 = sub_100415C90;
      v17[1] = (void (*)())v16;
      sub_1002CA430(v18);
      sub_1003DFCC0();
      sub_100415284((uint64_t)oslog);
    }
  }
  else
  {
    if (qword_100969DD8 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000B47C(v9, (uint64_t)qword_1009733E8);
    oslog = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      uint64_t v8 = "Ask to AirDrop not enabled";
      goto LABEL_11;
    }
  }
}

void sub_100414848()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v1 = (void *)Strong;
      sub_100415284(Strong);
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
}

void sub_1004148DC()
{
  uint64_t v1 = v0;
  type metadata accessor for SFAirDropUserDefaults();
  uint64_t v2 = (void *)static SFAirDropUserDefaults.shared.getter();
  char v3 = SFAirDropUserDefaults.askToAirDropEnabled.getter();

  if ((v3 & 1) == 0)
  {
    if (qword_100969DD8 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000B47C(v9, (uint64_t)qword_1009733E8);
    oslog = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(oslog, v6)) {
      goto LABEL_12;
    }
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    uint64_t v8 = "Ask to AirDrop not enabled";
    goto LABEL_11;
  }
  uint64_t v4 = OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server;
  if (*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server))
  {
    if (qword_100969DD8 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000B47C(v5, (uint64_t)qword_1009733E8);
    oslog = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(oslog, v6)) {
      goto LABEL_12;
    }
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    uint64_t v8 = "Attempted to start advertising but already advertising";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, oslog, v6, v8, v7, 2u);
    swift_slowDealloc();
LABEL_12:

    return;
  }
  id v10 = sub_1004159FC();
  id v12 = v11;
  uint64_t v13 = *(void **)(v1 + 16);
  type metadata accessor for SDTempPairingServer();
  swift_allocObject();
  *(void *)(v1 + v4) = sub_1005BB9E4(v10, v12, v13);
  swift_release();
  uint64_t v14 = *(void *)(v1 + v4);
  if (v14)
  {
    uint64_t v15 = swift_allocObject();
    swift_weakInit();
    uint64_t v16 = *(void *)(v14 + 24);
    *(void *)(v14 + 24) = sub_100415C98;
    *(void *)(v14 + 32) = v15;
    sub_1002CA430(v16);
    if (*(void *)(v1 + v4))
    {
      swift_retain();
      sub_1005BB490();
      swift_release();
    }
  }
}

uint64_t sub_100414D44()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100414FDC();
    return swift_release();
  }
  return result;
}

void sub_100414D9C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_client);
  if (v1)
  {
    id v2 = v1;
    id v3 = sub_1004159FC();
    sub_1003E132C((uint64_t)v3, v4);

    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_100969DD8 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000B47C(v5, (uint64_t)qword_1009733E8);
    oslog = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Attempting to connect while not browsing.", v7, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_100414ED0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_client);
  if (v1)
  {
    oslog = v1;
    sub_1003E1C2C();
  }
  else
  {
    if (qword_100969DD8 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000B47C(v2, (uint64_t)qword_1009733E8);
    oslog = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v3, "Attempting to disconnect while not browsing.", v4, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_100414FDC()
{
  uint64_t v9 = sub_10000A844(&qword_1009735F0);
  __chkstk_darwin(v9);
  uint64_t v10 = sub_10000A844(&qword_1009735F8);
  uint64_t v1 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  os_log_type_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SFTempPairingSenderStateUpdate();
  __chkstk_darwin(v4);
  uint64_t v5 = OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_senderStateUpdateSequence;
  LOBYTE(v11) = 1;
  swift_retain();
  CurrentValueSubject.send(completion:)();
  swift_release();
  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server) = 0;
  swift_release();
  SFTempPairingSenderStateUpdate.init()();
  sub_10000A844(&qword_100973628);
  swift_allocObject();
  *(void *)(v0 + v5) = CurrentValueSubject.init(_:)();
  swift_release();
  uint64_t v11 = *(void *)(v0 + v5);
  sub_1002AE308(&qword_100973630, &qword_100973628);
  Publisher<>.values.getter();
  sub_1002AE308(&qword_100973638, &qword_1009735F0);
  SFNoThrowAsyncSequence.init<A>(_:)();
  uint64_t v6 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_senderStateUpdates;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 40))(v6, v3, v10);
  return swift_endAccess();
}

uint64_t sub_100415284(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SFTempPairingStateUpdate();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v29 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v29 - v12;
  SFTempPairingStateUpdate.init()();
  sub_1003DF3B4();
  SFTempPairingStateUpdate.nearbyDeviceNames.setter();
  sub_1003E69C4();
  SFTempPairingStateUpdate.connectedDeviceNames.setter();
  SFTempPairingStateUpdate.connectionState.setter();
  uint64_t v14 = (uint64_t *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier);
  swift_beginAccess();
  uint64_t v15 = *v14;
  LOBYTE(v36[0]) = 1;
  uint64_t v34 = v36;
  swift_bridgeObjectRetain();
  sub_100413958((uint64_t (*)(char *))sub_1004159E0, (uint64_t)v33, v15);
  swift_bridgeObjectRelease();
  SFTempPairingStateUpdate.isNearbyDeviceClose.setter();
  sub_1004159FC();
  SFTempPairingStateUpdate.sharingName.setter();
  if (qword_100969DD8 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_10000B47C(v16, (uint64_t)qword_1009733E8);
  unint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v32 = v2;
    uint64_t v19 = v4;
    id v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v36[0] = v31;
    *(_DWORD *)id v20 = 136315138;
    uint64_t v29 = v20 + 4;
    uint64_t v30 = v20;
    swift_beginAccess();
    int64_t v21 = v8;
    uint64_t v22 = v5;
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v23(v11, v13, v4);
    v23(v21, v11, v4);
    uint64_t v24 = String.init<A>(describing:)();
    unint64_t v26 = v25;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v19);
    uint64_t v27 = v24;
    uint64_t v5 = v22;
    uint64_t v35 = sub_100254634(v27, v26, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v4 = v19;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Updating pairing state: %s", v30, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_beginAccess();
  CurrentValueSubject.send(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v13, v4);
}

uint64_t sub_1004156CC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_receiverStateUpdates;
  uint64_t v2 = sub_10000A844(&qword_100973608);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_senderStateUpdates;
  uint64_t v4 = sub_10000A844(&qword_1009735F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_100415800()
{
  return type metadata accessor for SDTempPairingService();
}

uint64_t type metadata accessor for SDTempPairingService()
{
  uint64_t result = qword_100973458;
  if (!qword_100973458) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100415854()
{
  sub_10041598C(319, &qword_100973468, (void (*)(uint64_t))&type metadata accessor for SFTempPairingStateUpdate);
  if (v0 <= 0x3F)
  {
    sub_10041598C(319, (unint64_t *)&unk_100973470, (void (*)(uint64_t))&type metadata accessor for SFTempPairingSenderStateUpdate);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10041598C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for SFNoThrowAsyncSequence();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

BOOL sub_1004159E0(unsigned __int8 *a1)
{
  return ((*a1 ^ **(unsigned __int8 **)(v1 + 16)) & 1) == 0;
}

id sub_1004159FC()
{
  unint64_t v0 = self;
  id result = [v0 sharedMonitor];
  if (result)
  {
    uint64_t v2 = result;
    id v3 = [result meCard];

    if (v3)
    {
      id v4 = [self stringFromContact:v3 style:0];
      if (v4)
      {
        uint64_t v5 = v4;
        uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();

        return (id)v6;
      }
    }
    id result = [v0 sharedMonitor];
    if (result)
    {
      uint64_t v7 = result;
      id v8 = [result computerName];

      if (v8)
      {
        uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else
      {
        if (qword_100969DD8 != -1) {
          swift_once();
        }
        uint64_t v9 = type metadata accessor for Logger();
        sub_10000B47C(v9, (uint64_t)qword_1009733E8);
        uint64_t v10 = Logger.logObject.getter();
        os_log_type_t v11 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v10, v11))
        {
          uint64_t v12 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v12 = 0;
          _os_log_impl((void *)&_mh_execute_header, v10, v11, "Could not find local sharing name.", v12, 2u);
          swift_slowDealloc();
        }

        return 0;
      }
      return (id)v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100415BE0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100415C18()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100415C50()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100415C90()
{
}

uint64_t sub_100415C98()
{
  return sub_100414D44();
}

uint64_t sub_100415CA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SDAirDropPlatformHapticsManagerUnsupported()
{
  return self;
}

uint64_t type metadata accessor for SDAirDropPlatformHapticsManagerFactory()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for SDAirDropHapticState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100415DFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropHapticState()
{
  return &type metadata for SDAirDropHapticState;
}

unint64_t sub_100415E38()
{
  unint64_t result = qword_100973788;
  if (!qword_100973788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100973788);
  }
  return result;
}

void _sSo11SFUserAlertC16DaemoniOSLibraryE015credentialShareB09isPasskeyABSb_tFZ_0(char a1)
{
  id v2 = [objc_allocWithZone((Class)SFUserAlert) init];
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = (id)SFLocalizedStringForKey();

  if (v4)
  {
    [v2 setTitle:v4];

    if (a1)
    {
      NSString v5 = String._bridgeToObjectiveC()();
      NSString v6 = String._bridgeToObjectiveC()();
      NSString v7 = (id)SFLocalizedStringForKeyInStringsFileNamed();

      if (!v7) {
        goto LABEL_7;
      }
    }
    else
    {
      NSString v8 = String._bridgeToObjectiveC()();
      NSString v7 = (id)SFLocalizedStringForKey();

      if (!v7)
      {
LABEL_7:
        [v2 setMessage:v7];

        [v2 setHasDefaultButton:1];
        return;
      }
    }
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  __break(1u);
}

void _sSo11SFUserAlertC16DaemoniOSLibraryE07carPlayB0AByFZ_0()
{
  id v0 = [objc_allocWithZone((Class)SFUserAlert) init];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = (id)SFLocalizedStringForKey();

  if (v2)
  {
    [v0 setTitle:v2];

    NSString v3 = String._bridgeToObjectiveC()();
    id v4 = (id)SFLocalizedStringForKey();

    [v0 setMessage:v4];
    [v0 setHasDefaultButton:1];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10041611C()
{
  uint64_t v1 = type metadata accessor for KeyDataFormatStyle();
  uint64_t v27 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  NSString v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for IDSIdentifierFormatStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  NSString v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = 0;
  unint64_t v38 = 0xE000000000000000;
  _StringGuts.grow(_:)(126);
  uint64_t v29 = v37;
  unint64_t v30 = v38;
  v8._countAndFlagsBits = 0xD000000000000016;
  v8._object = (void *)0x80000001007BCE00;
  String.append(_:)(v8);
  sub_10024D388((uint64_t)(v0 + 2), (uint64_t)&v37, &qword_10096B540);
  sub_10024D388((uint64_t)&v37, (uint64_t)v36, &qword_10096B540);
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  v9._countAndFlagsBits = 0x20644D202C22;
  v9._object = (void *)0xE600000000000000;
  String.append(_:)(v9);
  sub_10024D388((uint64_t)(v0 + 6), (uint64_t)v36, &qword_10096B540);
  sub_10024D388((uint64_t)v36, (uint64_t)&v34, &qword_10096B540);
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  v10._countAndFlagsBits = 0x2720534449202CLL;
  v10._object = (void *)0xE700000000000000;
  String.append(_:)(v10);
  uint64_t v12 = v0[12];
  unint64_t v11 = v0[13];
  if (v11)
  {
    uint64_t v32 = v0[12];
    unint64_t v33 = v11;
    swift_bridgeObjectRetain();
    static FormatStyle<>.idsID.getter();
    sub_1004169C8(&qword_100973798, (void (*)(uint64_t))&type metadata accessor for IDSIdentifierFormatStyle);
    Sequence.formatted<A>(_:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease();
    uint64_t v12 = v34;
    uint64_t v13 = v35;
  }
  else
  {
    uint64_t v13 = 0;
  }
  uint64_t v34 = v12;
  uint64_t v35 = v13;
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0x204B5249202C27;
  v14._object = (void *)0xE700000000000000;
  String.append(_:)(v14);
  unint64_t v15 = v0[9];
  if (v15 >> 60 == 15)
  {
    uint64_t v16 = 0;
    uint64_t v17 = 0;
  }
  else
  {
    uint64_t v32 = v0[8];
    unint64_t v33 = v15;
    sub_10025ADCC(v32, v15);
    static FormatStyle<>.irk.getter();
    sub_1003CEFBC();
    sub_1004169C8(&qword_100973790, (void (*)(uint64_t))&type metadata accessor for KeyDataFormatStyle);
    Sequence.formatted<A>(_:)();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v3, v1);
    sub_100250CC4(v32, v33);
    uint64_t v16 = v34;
    uint64_t v17 = v35;
  }
  uint64_t v34 = v16;
  uint64_t v35 = v17;
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  swift_bridgeObjectRelease();
  v18._countAndFlagsBits = 0x204B50202CLL;
  v18._object = (void *)0xE500000000000000;
  String.append(_:)(v18);
  unint64_t v19 = v0[11];
  if (v19 >> 60 == 15)
  {
    uint64_t v20 = 0;
    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v32 = v0[10];
    unint64_t v33 = v19;
    sub_10025ADCC(v32, v19);
    static FormatStyle<>.publicKey.getter();
    sub_1003CEFBC();
    sub_1004169C8(&qword_100973790, (void (*)(uint64_t))&type metadata accessor for KeyDataFormatStyle);
    Sequence.formatted<A>(_:)();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v3, v1);
    sub_100250CC4(v32, v33);
    uint64_t v20 = v34;
    uint64_t v21 = v35;
  }
  uint64_t v34 = v20;
  uint64_t v35 = v21;
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  swift_bridgeObjectRelease();
  v22._object = (void *)0x80000001007BCE20;
  v22._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v22);
  sub_10024D388((uint64_t)v0, (uint64_t)&v34, &qword_10096B260);
  sub_10024D388((uint64_t)&v34, (uint64_t)&v32, &qword_10096B260);
  sub_1002CE57C();
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  v23._countAndFlagsBits = 0xD000000000000017;
  v23._object = (void *)0x80000001007BCE40;
  String.append(_:)(v23);
  sub_10024D388((uint64_t)(v0 + 4), (uint64_t)&v32, &qword_10096B260);
  sub_10024D388((uint64_t)&v32, (uint64_t)v31, &qword_10096B260);
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  v24._object = (void *)0x80000001007BCE60;
  v24._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v24);
  sub_10024D388((uint64_t)(v0 + 16), (uint64_t)v31, &qword_10096B540);
  sub_10024D388((uint64_t)v31, (uint64_t)v28, &qword_10096B540);
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  return v29;
}

Swift::Int sub_100416700()
{
  return Hasher._finalize()();
}

uint64_t sub_100416758()
{
  return String.hash(into:)();
}

Swift::Int sub_100416774()
{
  return Hasher._finalize()();
}

uint64_t sub_1004167C8@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008D2F50, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3 != 0;
  return result;
}

void sub_10041681C(void *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x80000001007B5B90;
}

unint64_t sub_10041683C()
{
  return 0xD000000000000010;
}

uint64_t sub_100416858@<X0>(Swift::String string@<0:X0, 8:X1>, BOOL *a2@<X8>)
{
  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008D2F88, v3);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

void sub_1004168B0(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1004168BC(uint64_t a1)
{
  unint64_t v2 = sub_100417D84();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004168F8(uint64_t a1)
{
  unint64_t v2 = sub_100417D84();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100416934()
{
  _StringGuts.grow(_:)(39);
  v0._object = (void *)0x80000001007BCDD0;
  v0._countAndFlagsBits = 0xD000000000000025;
  String.append(_:)(v0);
  sub_1002CE57C();
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  return 0;
}

uint64_t sub_1004169C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s14descr1008C8FE1V16DiscoverResponseVwxx(uint64_t *a1)
{
  unint64_t v2 = a1[1];
  if (v2 >> 60 != 15) {
    sub_100250CC4(*a1, v2);
  }
  swift_bridgeObjectRelease();
  unint64_t v3 = a1[5];
  if (v3 >> 60 != 15) {
    sub_100250CC4(a1[4], v3);
  }
  swift_bridgeObjectRelease();
  unint64_t v4 = a1[9];
  if (v4 >> 60 != 15) {
    sub_100250CC4(a1[8], v4);
  }
  unint64_t v5 = a1[11];
  if (v5 >> 60 != 15) {
    sub_100250CC4(a1[10], v5);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s14descr1008C8FE1V16DiscoverResponseVwcp(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v5 = *a2;
    sub_10025ADCC(*a2, a2[1]);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v4;
  }
  uint64_t v6 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v6;
  NSString v7 = a2 + 4;
  unint64_t v8 = a2[5];
  swift_bridgeObjectRetain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *v7;
  }
  else
  {
    uint64_t v9 = *(void *)v7;
    sub_10025ADCC(v9, v8);
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v8;
  }
  uint64_t v10 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v10;
  unint64_t v11 = a2 + 8;
  unint64_t v12 = a2[9];
  swift_bridgeObjectRetain();
  if (v12 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 64) = *v11;
  }
  else
  {
    uint64_t v13 = *(void *)v11;
    sub_10025ADCC(v13, v12);
    *(void *)(a1 + 64) = v13;
    *(void *)(a1 + 72) = v12;
  }
  Swift::String v14 = a2 + 10;
  unint64_t v15 = a2[11];
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v14;
  }
  else
  {
    uint64_t v16 = *v14;
    sub_10025ADCC(*v14, a2[11]);
    *(void *)(a1 + 80) = v16;
    *(void *)(a1 + 88) = v15;
  }
  uint64_t v17 = a2[13];
  *(void *)(a1 + 96) = a2[12];
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = a2[14];
  *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
  uint64_t v18 = a2[16];
  uint64_t v19 = a2[17];
  *(void *)(a1 + 128) = v18;
  *(void *)(a1 + 136) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14descr1008C8FE1V16DiscoverResponseVwca(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) >> 60 == 15)
  {
    if (v4 >> 60 != 15)
    {
      uint64_t v5 = *(void *)a2;
      sub_10025ADCC(*(void *)a2, *(void *)(a2 + 8));
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = v4;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
    sub_10026F904(a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  uint64_t v6 = *(void *)a2;
  sub_10025ADCC(*(void *)a2, *(void *)(a2 + 8));
  uint64_t v7 = *(void *)a1;
  unint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v4;
  sub_100250CC4(v7, v8);
LABEL_8:
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = (uint64_t *)(a2 + 32);
  unint64_t v10 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40) >> 60 == 15)
  {
    if (v10 >> 60 != 15)
    {
      uint64_t v11 = *v9;
      sub_10025ADCC(*v9, *(void *)(a2 + 40));
      *(void *)(a1 + 32) = v11;
      *(void *)(a1 + 40) = v10;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v10 >> 60 == 15)
  {
    sub_10026F904(a1 + 32);
LABEL_13:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v9;
    goto LABEL_15;
  }
  uint64_t v12 = *v9;
  sub_10025ADCC(*v9, *(void *)(a2 + 40));
  uint64_t v13 = *(void *)(a1 + 32);
  unint64_t v14 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v12;
  *(void *)(a1 + 40) = v10;
  sub_100250CC4(v13, v14);
LABEL_15:
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v15 = (uint64_t *)(a2 + 64);
  unint64_t v16 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72) >> 60 == 15)
  {
    if (v16 >> 60 != 15)
    {
      uint64_t v17 = *v15;
      sub_10025ADCC(*v15, *(void *)(a2 + 72));
      *(void *)(a1 + 64) = v17;
      *(void *)(a1 + 72) = v16;
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  if (v16 >> 60 == 15)
  {
    sub_10026F904(a1 + 64);
LABEL_20:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)v15;
    goto LABEL_22;
  }
  uint64_t v18 = *v15;
  sub_10025ADCC(*v15, *(void *)(a2 + 72));
  uint64_t v19 = *(void *)(a1 + 64);
  unint64_t v20 = *(void *)(a1 + 72);
  *(void *)(a1 + 64) = v18;
  *(void *)(a1 + 72) = v16;
  sub_100250CC4(v19, v20);
LABEL_22:
  uint64_t v21 = (uint64_t *)(a2 + 80);
  unint64_t v22 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88) >> 60 != 15)
  {
    if (v22 >> 60 != 15)
    {
      uint64_t v24 = *v21;
      sub_10025ADCC(*v21, *(void *)(a2 + 88));
      uint64_t v25 = *(void *)(a1 + 80);
      unint64_t v26 = *(void *)(a1 + 88);
      *(void *)(a1 + 80) = v24;
      *(void *)(a1 + 88) = v22;
      sub_100250CC4(v25, v26);
      goto LABEL_29;
    }
    sub_10026F904(a1 + 80);
    goto LABEL_27;
  }
  if (v22 >> 60 == 15)
  {
LABEL_27:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v21;
    goto LABEL_29;
  }
  uint64_t v23 = *v21;
  sub_10025ADCC(*v21, *(void *)(a2 + 88));
  *(void *)(a1 + 80) = v23;
  *(void *)(a1 + 88) = v22;
LABEL_29:
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v27;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s14descr1008C8FE1V16DiscoverResponseVwtk(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t _s14descr1008C8FE1V16DiscoverResponseVwta(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  if (v4 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v5 = *(void *)(a2 + 8);
  if (v5 >> 60 == 15)
  {
    sub_10026F904(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  sub_100250CC4(v6, v4);
LABEL_6:
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  unint64_t v8 = (_OWORD *)(a2 + 32);
  unint64_t v9 = *(void *)(a1 + 40);
  if (v9 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)(a1 + 32) = *v8;
    goto LABEL_11;
  }
  unint64_t v10 = *(void *)(a2 + 40);
  if (v10 >> 60 == 15)
  {
    sub_10026F904(a1 + 32);
    goto LABEL_9;
  }
  uint64_t v11 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)v8;
  *(void *)(a1 + 40) = v10;
  sub_100250CC4(v11, v9);
LABEL_11:
  uint64_t v12 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = (_OWORD *)(a2 + 64);
  unint64_t v14 = *(void *)(a1 + 72);
  if (v14 >> 60 == 15)
  {
LABEL_14:
    *(_OWORD *)(a1 + 64) = *v13;
    goto LABEL_16;
  }
  unint64_t v15 = *(void *)(a2 + 72);
  if (v15 >> 60 == 15)
  {
    sub_10026F904(a1 + 64);
    goto LABEL_14;
  }
  uint64_t v16 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)v13;
  *(void *)(a1 + 72) = v15;
  sub_100250CC4(v16, v14);
LABEL_16:
  uint64_t v17 = (void *)(a2 + 80);
  unint64_t v18 = *(void *)(a1 + 88);
  if (v18 >> 60 != 15)
  {
    unint64_t v19 = *(void *)(a2 + 88);
    if (v19 >> 60 != 15)
    {
      uint64_t v20 = *(void *)(a1 + 80);
      *(void *)(a1 + 80) = *v17;
      *(void *)(a1 + 88) = v19;
      sub_100250CC4(v20, v18);
      goto LABEL_21;
    }
    sub_10026F904(a1 + 80);
  }
  *(_OWORD *)(a1 + 80) = *(_OWORD *)v17;
LABEL_21:
  uint64_t v21 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v21;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v22 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr1008C8FE1V16DiscoverResponseVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 144)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s14descr1008C8FE1V16DiscoverResponseVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 144) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *_s14descr1008C8FE1V16DiscoverResponseVMa()
{
  return &_s14descr1008C8FE1V16DiscoverResponseVN;
}

uint64_t sub_100417174(uint64_t a1, uint64_t *a2)
{
  unint64_t v3 = a2[1];
  if (v3 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v4 = *a2;
    sub_10025ADCC(*a2, a2[1]);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v3;
  }
  return a1;
}

uint64_t *_s14descr1008C8FE1V15DiscoverRequestVwca(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if ((unint64_t)a1[1] >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      uint64_t v6 = *(void *)a2;
      sub_10025ADCC(*(void *)a2, *(void *)(a2 + 8));
      uint64_t v7 = *a1;
      unint64_t v8 = a1[1];
      *a1 = v6;
      a1[1] = v4;
      sub_100250CC4(v7, v8);
      return a1;
    }
    sub_10026F904((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  uint64_t v5 = *(void *)a2;
  sub_10025ADCC(*(void *)a2, *(void *)(a2 + 8));
  *a1 = v5;
  a1[1] = v4;
  return a1;
}

uint64_t *_s14descr1008C8FE1V15DiscoverRequestVwta(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  if (v4 >> 60 != 15)
  {
    unint64_t v5 = a2[1];
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_100250CC4(v6, v4);
      return a1;
    }
    sub_10026F904((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t _s14descr1008C8FE1V15DiscoverRequestVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 12);
  }
  uint64_t v3 = *(void *)(a1 + 8) >> 60;
  if (((4 * v3) & 0xC) != 0) {
    int v4 = 14 - ((4 * v3) & 0xC | (v3 >> 2));
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s14descr1008C8FE1V15DiscoverRequestVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(void *)__n128 result = a2 - 12;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

ValueMetadata *_s14descr1008C8FE1V15DiscoverRequestVMa()
{
  return &_s14descr1008C8FE1V15DiscoverRequestVN;
}

uint64_t sub_100417398(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000A844(&qword_1009737B0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  sub_100417D84();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v11[0] = a2;
  v11[1] = a3;
  sub_1002CC290();
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void *sub_1004174E8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __n128 result = sub_100417DD8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_100417514(void *a1)
{
  return sub_100417398(a1, *v1, v1[1]);
}

uint64_t sub_100417530()
{
  return sub_100416934();
}

unint64_t sub_100417538(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100417630(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100417728(char *a1, char *a2)
{
  return sub_1005E8380(*a1, *a2);
}

Swift::Int sub_100417734()
{
  return Hasher._finalize()();
}

uint64_t sub_10041777C()
{
  return sub_1005E95A8();
}

Swift::Int sub_100417784()
{
  return Hasher._finalize()();
}

unint64_t sub_1004177C8@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100417F48(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1004177F8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100417538(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_100417824()
{
  return sub_100417630(*v0);
}

unint64_t sub_10041782C@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100417F48(a1);
  *a2 = result;
  return result;
}

void sub_100417854(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_100417860(uint64_t a1)
{
  unint64_t v2 = sub_100417D30();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10041789C(uint64_t a1)
{
  unint64_t v2 = sub_100417D30();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004178D8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000A844(&qword_1009737A0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  sub_100417D30();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v12[0] = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v2)
  {
    sub_10024D388(v3, (uint64_t)v16, &qword_10096B260);
    sub_10024D388((uint64_t)v16, (uint64_t)v12, &qword_10096B260);
    char v11 = 1;
    sub_1002CC290();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_10024D388(v3 + 32, (uint64_t)v15, &qword_10096B260);
    sub_10024D388((uint64_t)v15, (uint64_t)v12, &qword_10096B260);
    char v11 = 2;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    v12[0] = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    sub_10024D388(v3 + 64, (uint64_t)v14, &qword_10096B260);
    sub_10024D388((uint64_t)v14, (uint64_t)v12, &qword_10096B260);
    char v11 = 4;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_10024D388(v3 + 80, (uint64_t)v13, &qword_10096B260);
    sub_10024D388((uint64_t)v13, (uint64_t)v12, &qword_10096B260);
    char v11 = 5;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    v12[0] = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v12[0] = 7;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v12[0] = 8;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

__n128 sub_100417C2C@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100417F94(a1, v8);
  if (!v2)
  {
    long long v5 = v8[7];
    *(_OWORD *)(a2 + 96) = v8[6];
    *(_OWORD *)(a2 + 112) = v5;
    *(_OWORD *)(a2 + 128) = v8[8];
    long long v6 = v8[3];
    *(_OWORD *)(a2 + 32) = v8[2];
    *(_OWORD *)(a2 + 48) = v6;
    long long v7 = v8[5];
    *(_OWORD *)(a2 + 64) = v8[4];
    *(_OWORD *)(a2 + 80) = v7;
    __n128 result = (__n128)v8[1];
    *(_OWORD *)a2 = v8[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_100417C88(void *a1)
{
  return sub_1004178D8(a1);
}

uint64_t sub_100417CDC()
{
  return sub_10041611C();
}

unint64_t sub_100417D30()
{
  unint64_t result = qword_1009737A8;
  if (!qword_1009737A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009737A8);
  }
  return result;
}

unint64_t sub_100417D84()
{
  unint64_t result = qword_1009737B8;
  if (!qword_1009737B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009737B8);
  }
  return result;
}

void *sub_100417DD8(void *a1)
{
  uint64_t v3 = sub_10000A844(&qword_1009737C0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  long long v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = sub_10026BB6C(a1, a1[3]);
  sub_100417D84();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_10024D338((uint64_t)a1);
  }
  else
  {
    sub_1002CC1F4();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    long long v7 = v9;
    sub_10024D338((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_100417F48(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008D2FC0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 9) {
    return 9;
  }
  else {
    return v3;
  }
}

uint64_t *sub_100417F94@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v62 = sub_10000A844(&qword_1009737C8);
  uint64_t v4 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  long long v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v101 = 1;
  sub_10026BB6C(a1, a1[3]);
  sub_100417D30();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  uint64_t v66 = a1;
  if (v2)
  {
    uint64_t v63 = v2;
    uint64_t v67 = 0;
    uint64_t v64 = 0;
    uint64_t v69 = 0;
    uint64_t v70 = 0;
    uint64_t v102 = 0;
    unint64_t v68 = 0xF000000000000000;
    unint64_t v65 = 0xF000000000000000;
    sub_10024D338((uint64_t)v66);
    uint64_t v81 = 0;
    unint64_t v82 = 0xF000000000000000;
    uint64_t v83 = 0;
    uint64_t v84 = v102;
    uint64_t v85 = v70;
    unint64_t v86 = v65;
    uint64_t v87 = 0;
    uint64_t v88 = v69;
    uint64_t v89 = 0;
    unint64_t v90 = 0xF000000000000000;
    uint64_t v91 = v64;
    unint64_t v92 = v68;
    uint64_t v93 = 0;
    uint64_t v94 = v67;
    uint64_t v95 = 0;
    char v96 = v101;
    *(_DWORD *)&v97[3] = *(_DWORD *)&v100[3];
    *(_DWORD *)uint64_t v97 = *(_DWORD *)v100;
    uint64_t v98 = 0;
    uint64_t v99 = 0;
    return sub_10039C76C(&v81);
  }
  else
  {
    uint64_t v60 = v4;
    LOBYTE(v81) = 0;
    uint64_t v7 = v62;
    uint64_t v8 = v6;
    uint64_t v9 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v12 = v11;
    uint64_t v59 = v9;
    LOBYTE(v71) = 1;
    sub_1002CC1F4();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v102 = v12;
    uint64_t v13 = v81;
    LOBYTE(v71) = 2;
    unint64_t v14 = v82;
    sub_100278C78(v81, v82);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    unint64_t v57 = v14;
    uint64_t v58 = v13;
    uint64_t v16 = v81;
    unint64_t v15 = v82;
    LOBYTE(v81) = 3;
    sub_100278C78(v16, v82);
    uint64_t v17 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v70 = v16;
    unint64_t v65 = v15;
    uint64_t v56 = v17;
    LOBYTE(v71) = 4;
    uint64_t v19 = v18;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v69 = v19;
    uint64_t v21 = v81;
    unint64_t v20 = v82;
    LOBYTE(v71) = 5;
    sub_100278C78(v81, v82);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    unint64_t v55 = v20;
    uint64_t v22 = v21;
    uint64_t v23 = v81;
    unint64_t v24 = v82;
    LOBYTE(v81) = 6;
    sub_100278C78(v23, v82);
    uint64_t v25 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    unint64_t v68 = v24;
    uint64_t v64 = v23;
    uint64_t v54 = v25;
    uint64_t v26 = v23;
    LOBYTE(v81) = 7;
    uint64_t v28 = v27;
    swift_bridgeObjectRetain();
    uint64_t v29 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    unint64_t v30 = v55;
    uint64_t v67 = v28;
    uint64_t v53 = v29;
    int v51 = v31 & 1;
    char v101 = v31 & 1;
    char v80 = 8;
    uint64_t v52 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v63 = 0;
    uint64_t v33 = v32;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v8, v7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v34 = v30;
    *(void *)&long long v71 = v58;
    *((void *)&v71 + 1) = v57;
    uint64_t v35 = v102;
    *(void *)&long long v72 = v59;
    *((void *)&v72 + 1) = v102;
    uint64_t v36 = v69;
    *(void *)&long long v73 = v70;
    *((void *)&v73 + 1) = v15;
    *(void *)&long long v74 = v56;
    *((void *)&v74 + 1) = v69;
    *(void *)&long long v75 = v22;
    *((void *)&v75 + 1) = v34;
    uint64_t v37 = v22;
    unint64_t v38 = v68;
    *(void *)&long long v76 = v26;
    *((void *)&v76 + 1) = v68;
    *(void *)&long long v77 = v54;
    *((void *)&v77 + 1) = v67;
    *(void *)&long long v78 = v53;
    BYTE8(v78) = v51;
    *(void *)&long long v79 = v52;
    *((void *)&v79 + 1) = v33;
    uint64_t v50 = v33;
    sub_10039C6B0((uint64_t *)&v71);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100250CB0(v26, v38);
    unint64_t v39 = v55;
    sub_100250CB0(v37, v55);
    swift_bridgeObjectRelease();
    uint64_t v40 = v70;
    unint64_t v41 = v65;
    sub_100250CB0(v70, v65);
    swift_bridgeObjectRelease();
    unint64_t v43 = v57;
    uint64_t v42 = v58;
    sub_100250CB0(v58, v57);
    sub_10024D338((uint64_t)v66);
    uint64_t v81 = v42;
    unint64_t v82 = v43;
    uint64_t v83 = v59;
    uint64_t v84 = v35;
    uint64_t v85 = v40;
    unint64_t v86 = v41;
    uint64_t v87 = v56;
    uint64_t v88 = v36;
    uint64_t v89 = v37;
    unint64_t v90 = v39;
    uint64_t v91 = v64;
    unint64_t v92 = v68;
    uint64_t v93 = v54;
    uint64_t v94 = v67;
    uint64_t v95 = v53;
    char v96 = v101;
    *(_DWORD *)&v97[3] = *(_DWORD *)&v100[3];
    *(_DWORD *)uint64_t v97 = *(_DWORD *)v100;
    uint64_t v98 = v52;
    uint64_t v99 = v50;
    unint64_t result = sub_10039C76C(&v81);
    long long v44 = v78;
    uint64_t v45 = v61;
    v61[6] = v77;
    v45[7] = v44;
    v45[8] = v79;
    long long v46 = v74;
    void v45[2] = v73;
    v45[3] = v46;
    long long v47 = v76;
    v45[4] = v75;
    v45[5] = v47;
    long long v48 = v72;
    *uint64_t v45 = v71;
    v45[1] = v48;
  }
  return result;
}

unsigned char *_s14descr1008C8FE1V15DiscoverRequestV10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100418974);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s14descr1008C8FE1V15DiscoverRequestV10CodingKeysOMa()
{
  return &_s14descr1008C8FE1V15DiscoverRequestV10CodingKeysON;
}

uint64_t _s14descr1008C8FE1V16DiscoverResponseV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14descr1008C8FE1V16DiscoverResponseV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100418B08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr1008C8FE1V16DiscoverResponseV10CodingKeysOMa()
{
  return &_s14descr1008C8FE1V16DiscoverResponseV10CodingKeysON;
}

unint64_t sub_100418B44()
{
  unint64_t result = qword_1009737D0;
  if (!qword_1009737D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009737D0);
  }
  return result;
}

unint64_t sub_100418B9C()
{
  unint64_t result = qword_1009737D8;
  if (!qword_1009737D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009737D8);
  }
  return result;
}

unint64_t sub_100418BF4()
{
  unint64_t result = qword_1009737E0;
  if (!qword_1009737E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009737E0);
  }
  return result;
}

unint64_t sub_100418C4C()
{
  unint64_t result = qword_1009737E8;
  if (!qword_1009737E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009737E8);
  }
  return result;
}

unint64_t sub_100418CA4()
{
  unint64_t result = qword_1009737F0;
  if (!qword_1009737F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009737F0);
  }
  return result;
}

unint64_t sub_100418CFC()
{
  unint64_t result = qword_1009737F8;
  if (!qword_1009737F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009737F8);
  }
  return result;
}

uint64_t sub_100418D50()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100973800);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100973800);
  if (qword_100969CC0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994690);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t *sub_100418E18@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

uint64_t sub_100418E30()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100418E90()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_100418EE0(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6574617473;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100418F6C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000A844(&qword_100973878);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10026BB6C(a1, a1[3]);
  sub_10041AEDC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v11[0] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    v11[0] = *(unsigned char *)(v3 + 16);
    char v12 = 1;
    sub_10041AF30();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_10024D388(v3 + 24, (uint64_t)v13, &qword_10096B260);
    sub_10024D388((uint64_t)v13, (uint64_t)v11, &qword_10096B260);
    char v12 = 2;
    sub_1002CC290();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    v11[0] = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_10041916C()
{
  return sub_100418EE0(*v0);
}

uint64_t sub_100419174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10041AF84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10041919C(uint64_t a1)
{
  unint64_t v2 = sub_10041AEDC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004191D8(uint64_t a1)
{
  unint64_t v2 = sub_10041AEDC();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100419214@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10041B124(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_100419258(void *a1)
{
  return sub_100418F6C(a1);
}

uint64_t sub_100419294(uint64_t *a1, void (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(v3 + *a1);
  if (v5)
  {
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v8 = v3;
    a2();
    swift_allocObject();
    uint64_t v6 = a3();
    *(void *)(v8 + v4) = v6;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v6;
}

void sub_1004193E0(uint64_t a1, void *a2, void *aBlock)
{
  uint64_t v4 = *(void (**)(void))(a1 + 32);
  uint64_t v5 = _Block_copy(aBlock);
  *(void *)(swift_allocObject() + 16) = v5;
  swift_retain();
  id v6 = a2;
  v4();
  swift_release();
  swift_release();
}

void sub_100419498(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a2 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
  }
  Class v5 = isa;
  (*(void (**)(uint64_t))(a3 + 16))(a3);
}

uint64_t sub_10041958C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v9[4] = a2;
  v9[5] = a3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100419650;
  v9[3] = &unk_1008DA480;
  id v6 = _Block_copy(v9);
  long long v7 = *(void (**)(uint64_t, uint64_t, void *))(a4 + 16);
  swift_retain();
  v7(a4, a1, v6);
  _Block_release(v6);
  return swift_release();
}

uint64_t sub_100419650(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void (**)(void *, unint64_t))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v4 = v2;
    uint64_t v2 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v6 = v5;
  }
  else
  {
    swift_retain();
    unint64_t v6 = 0xF000000000000000;
  }
  v3(v2, v6);
  sub_100250CB0((uint64_t)v2, v6);

  return swift_release();
}

id sub_1004196E8()
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary32HeadphoneDigitalEngravingManager____lazy_storage___decoder] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary32HeadphoneDigitalEngravingManager____lazy_storage___encoder] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC16DaemoniOSLibrary32HeadphoneDigitalEngravingManager_fetchEngravingDataHandler];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  id v3 = objc_allocWithZone((Class)NSUserDefaults);
  id v4 = v0;
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 initWithSuiteName:v5];

  if (!v6) {
    id v6 = [self standardUserDefaults];
  }
  *(void *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary32HeadphoneDigitalEngravingManager_localStorage] = v6;

  v8.receiver = v4;
  v8.super_class = ObjectType;
  return [super init];
}

void sub_100419810(void *a1)
{
  id v3 = [objc_allocWithZone((Class)SFHeadphoneProduct) initWithProductID:[a1 productIdentifier]];
  if (v3)
  {
    id v4 = v3;
    unsigned int v5 = [v3 supportsDigitalEngraving];

    if (v5)
    {
      id v6 = [a1 addressString];
      if (v6)
      {
        long long v7 = v6;
        uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v10 = v9;

        sub_1004199FC(v8, v10, (uint64_t)v14);
        sub_10041A8D0((uint64_t)v14);
        sub_10024D388((uint64_t)v14, (uint64_t)v15, &qword_100973860);
        if (v16) {
          goto LABEL_5;
        }
        v17[0] = v8;
        v17[1] = v10;
        char v18 = 0;
        long long v19 = xmmword_100770AE0;
        uint64_t v20 = 0;
        swift_bridgeObjectRetain();
        sub_100419E80((uint64_t)v17);
        swift_bridgeObjectRelease();
        sub_100250CB0(0, 0xF000000000000000);
        uint64_t v11 = *(void (**)(void *, void (*)(uint64_t, unint64_t), void *))(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary32HeadphoneDigitalEngravingManager_fetchEngravingDataHandler);
        if (!v11)
        {
LABEL_5:
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v12 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v13 = (void *)swift_allocObject();
          v13[2] = v8;
          v13[3] = v10;
          v13[4] = v12;
          sub_1002CA420((uint64_t)v11);
          swift_retain();
          v11(a1, sub_10041A9CC, v13);
          sub_1002CA430((uint64_t)v11);
          swift_release();
          swift_release();
        }
      }
    }
  }
}

void sub_1004199FC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v7 = *(id *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary32HeadphoneDigitalEngravingManager_localStorage);
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 dictionaryForKey:v8];

  long long v10 = 0uLL;
  if (!v9)
  {
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    goto LABEL_13;
  }
  uint64_t v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v11 + 16))
  {
    long long v20 = 0u;
    *(_OWORD *)uint64_t v21 = 0u;
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1005838BC(a1, a2);
  if ((v13 & 1) == 0)
  {
    long long v20 = 0u;
    *(_OWORD *)uint64_t v21 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_10024D2D4(*(void *)(v11 + 56) + 32 * v12, (uint64_t)&v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)&v21[8])
  {
LABEL_11:
    sub_10041AAB4((uint64_t)&v20);
    goto LABEL_12;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    long long v10 = 0uLL;
    goto LABEL_13;
  }
  uint64_t v15 = v23;
  unint64_t v14 = v24;
  sub_100419294(&OBJC_IVAR____TtC16DaemoniOSLibrary32HeadphoneDigitalEngravingManager____lazy_storage___decoder, (void (*)(void))&type metadata accessor for JSONDecoder, (uint64_t (*)(void))&JSONDecoder.init());
  sub_10041AB14();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  sub_100250CC4(v15, v14);
  swift_release();
  uint64_t v17 = *((void *)&v20 + 1);
  uint64_t v16 = v20;
  uint64_t v18 = v21[0];
  long long v10 = *(_OWORD *)&v21[8];
  uint64_t v19 = v22;
LABEL_13:
  *(void *)a3 = v16;
  *(void *)(a3 + 8) = v17;
  *(void *)(a3 + 16) = v18;
  *(_OWORD *)(a3 + 24) = v10;
  *(void *)(a3 + 40) = v19;
}

void sub_100419E80(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_100419294(&OBJC_IVAR____TtC16DaemoniOSLibrary32HeadphoneDigitalEngravingManager____lazy_storage___encoder, (void (*)(void))&type metadata accessor for JSONEncoder, (uint64_t (*)(void))&JSONEncoder.init());
  long long v4 = *(_OWORD *)(a1 + 16);
  long long v27 = *(_OWORD *)a1;
  long long v28 = v4;
  long long v29 = *(_OWORD *)(a1 + 32);
  sub_10041A9D8();
  uint64_t v5 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v7 = v6;
  swift_release();
  uint64_t v8 = OBJC_IVAR____TtC16DaemoniOSLibrary32HeadphoneDigitalEngravingManager_localStorage;
  id v9 = *(id *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary32HeadphoneDigitalEngravingManager_localStorage);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 dictionaryForKey:v10];

  if (v11)
  {
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  uint64_t v13 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  *((void *)&v28 + 1) = &type metadata for Data;
  *(void *)&long long v27 = v5;
  *((void *)&v27 + 1) = v7;
  sub_100249444(&v27, v26);
  swift_bridgeObjectRetain();
  sub_10025ADCC(v5, v7);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100591338(v26, v13, v12, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v15 = *(id *)(v2 + v8);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v17 = String._bridgeToObjectiveC()();
  [v15 setObject:isa forKey:v17];

  if (qword_100969DE0 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_10000B47C(v18, (uint64_t)qword_100973800);
  sub_10025ADCC(v5, v7);
  sub_10041AA2C(a1);
  sub_10025ADCC(v5, v7);
  sub_10041AA2C(a1);
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    *(void *)&v26[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136315394;
    *(void *)&long long v27 = v5;
    *((void *)&v27 + 1) = v7;
    sub_10025ADCC(v5, v7);
    uint64_t v22 = String.init<A>(describing:)();
    *(void *)&long long v27 = sub_100254634(v22, v23, (uint64_t *)v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100250CC4(v5, v7);
    sub_100250CC4(v5, v7);
    *(_WORD *)(v21 + 12) = 2080;
    *(void *)&long long v27 = v13;
    *((void *)&v27 + 1) = v12;
    swift_bridgeObjectRetain();
    uint64_t v24 = String.init<A>(describing:)();
    *(void *)&long long v27 = sub_100254634(v24, v25, (uint64_t *)v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10041AA70(a1);
    sub_10041AA70(a1);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Storing engraving data received from AACP %s for:%s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_100250CC4(v5, v7);
  }
  else
  {
    sub_100250CC4(v5, v7);
    sub_100250CC4(v5, v7);
    sub_100250CC4(v5, v7);
    sub_10041AA70(a1);
    sub_10041AA70(a1);
  }
}

void sub_10041A52C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 >> 60 != 15)
  {
    uint64_t v25 = v4;
    uint64_t v26 = v5;
    sub_10025ADCC(a1, a2);
    if (qword_100969DE0 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000B47C(v10, (uint64_t)qword_100973800);
    sub_10025ADCC(a1, a2);
    sub_10025ADCC(a1, a2);
    id v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      v18[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v19 = a1;
      unint64_t v20 = a2;
      sub_10025ADCC(a1, a2);
      uint64_t v14 = String.init<A>(describing:)();
      uint64_t v19 = sub_100254634(v14, v15, v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100250CB0(a1, a2);
      sub_100250CB0(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Engraving data received from AACP %s", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100250CB0(a1, a2);
      sub_100250CB0(a1, a2);
    }

    uint64_t v19 = a3;
    unint64_t v20 = a4;
    char v21 = 1;
    uint64_t v22 = a1;
    unint64_t v23 = a2;
    uint64_t v24 = 0;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      NSString v17 = (void *)Strong;
      sub_100278C78(a1, a2);
      swift_bridgeObjectRetain();
      sub_100419E80((uint64_t)&v19);
      sub_100250CB0(a1, a2);
      swift_bridgeObjectRelease();
      sub_100250CB0(a1, a2);
    }
    else
    {
      sub_100250CB0(a1, a2);
    }
  }
}

uint64_t type metadata accessor for HeadphoneDigitalEngravingManager()
{
  return self;
}

uint64_t sub_10041A8D0(uint64_t a1)
{
  return a1;
}

void sub_10041A908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_100250CB0(a4, a5);
  }
}

uint64_t sub_10041A954()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10041A98C()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10041A9CC(uint64_t a1, unint64_t a2)
{
  sub_10041A52C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

unint64_t sub_10041A9D8()
{
  unint64_t result = qword_100973868;
  if (!qword_100973868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100973868);
  }
  return result;
}

uint64_t sub_10041AA2C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_100278C78(v2, v3);
  return a1;
}

uint64_t sub_10041AA70(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  swift_bridgeObjectRelease();
  sub_100250CB0(v2, v3);
  return a1;
}

uint64_t sub_10041AAB4(uint64_t a1)
{
  uint64_t v2 = sub_10000A844((uint64_t *)&unk_10096AC20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10041AB14()
{
  unint64_t result = qword_100973870;
  if (!qword_100973870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100973870);
  }
  return result;
}

uint64_t sub_10041AB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10041958C(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_10041AB70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10041AB80()
{
  return swift_release();
}

uint64_t sub_10041AB88()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10041ABC0(uint64_t a1, unint64_t a2)
{
  sub_100419498(a1, a2, *(void *)(v2 + 16));
}

uint64_t destroy for HeadphoneDigitalEngravingManager.Record(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 24);
    return sub_100250CC4(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for HeadphoneDigitalEngravingManager.Record(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = (_OWORD *)(a2 + 24);
  unint64_t v6 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *v5;
  }
  else
  {
    uint64_t v7 = *(void *)v5;
    sub_10025ADCC(v7, v6);
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v6;
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for HeadphoneDigitalEngravingManager.Record(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = (uint64_t *)(a2 + 24);
  unint64_t v5 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_10025ADCC(*v4, *(void *)(a2 + 32));
      uint64_t v8 = *(void *)(a1 + 24);
      unint64_t v9 = *(void *)(a1 + 32);
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = v5;
      sub_100250CC4(v8, v9);
      goto LABEL_8;
    }
    sub_10026F904(a1 + 24);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  uint64_t v6 = *v4;
  sub_10025ADCC(*v4, *(void *)(a2 + 32));
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v5;
LABEL_8:
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

__n128 initializeWithTake for SDTempPairingTXTRecord(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HeadphoneDigitalEngravingManager.Record(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  unint64_t v5 = (void *)(a2 + 24);
  unint64_t v6 = *(void *)(a1 + 32);
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = *(void *)(a2 + 32);
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *(void *)(a1 + 24);
      *(void *)(a1 + 24) = *v5;
      *(void *)(a1 + 32) = v7;
      sub_100250CC4(v8, v6);
      goto LABEL_6;
    }
    sub_10026F904(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v5;
LABEL_6:
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDTempPairingTXTRecord(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDTempPairingTXTRecord(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneDigitalEngravingManager.Record()
{
  return &type metadata for HeadphoneDigitalEngravingManager.Record;
}

unint64_t sub_10041AEDC()
{
  unint64_t result = qword_100973880;
  if (!qword_100973880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100973880);
  }
  return result;
}

unint64_t sub_10041AF30()
{
  unint64_t result = qword_100973888;
  if (!qword_100973888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100973888);
  }
  return result;
}

uint64_t sub_10041AF84(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001007BCFB0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001007BCFD0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001007BCFF0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_10041B124@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A844(&qword_100973890);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  sub_10041AEDC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_10024D338((uint64_t)a1);
  }
  LOBYTE(v19) = 0;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  char v22 = 1;
  sub_10041B438();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  int v21 = v19;
  char v22 = 2;
  sub_1002CC1F4();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v12 = v19;
  LOBYTE(v19) = 3;
  unint64_t v17 = v20;
  uint64_t v18 = v12;
  sub_100278C78(v12, v20);
  uint64_t v13 = KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  unint64_t v15 = v17;
  uint64_t v14 = v18;
  sub_100278C78(v18, v17);
  sub_100250CB0(v14, v15);
  swift_bridgeObjectRelease();
  sub_10024D338((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = sub_100250CB0(v14, v15);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v13;
  return result;
}

unint64_t sub_10041B438()
{
  unint64_t result = qword_100973898;
  if (!qword_100973898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100973898);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HeadphoneDigitalEngravingManager.Record.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10041B558);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneDigitalEngravingManager.Record.CodingKeys()
{
  return &type metadata for HeadphoneDigitalEngravingManager.Record.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for HeadphoneDigitalEngravingManager.Record.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10041B65CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneDigitalEngravingManager.Record.State()
{
  return &type metadata for HeadphoneDigitalEngravingManager.Record.State;
}

unint64_t sub_10041B698()
{
  unint64_t result = qword_1009738A0;
  if (!qword_1009738A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009738A0);
  }
  return result;
}

unint64_t sub_10041B6F0()
{
  unint64_t result = qword_1009738A8;
  if (!qword_1009738A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009738A8);
  }
  return result;
}

unint64_t sub_10041B748()
{
  unint64_t result = qword_1009738B0;
  if (!qword_1009738B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009738B0);
  }
  return result;
}

unint64_t sub_10041B7A0()
{
  unint64_t result = qword_1009738B8;
  if (!qword_1009738B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009738B8);
  }
  return result;
}

unint64_t sub_10041B7F4()
{
  unint64_t result = qword_1009738C0;
  if (!qword_1009738C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009738C0);
  }
  return result;
}

uint64_t sub_10041B854()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_1009738D0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_1009738D0);
  if (qword_100969CE0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946F0);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10041B9D4(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_100969DE8 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = sub_10000B47C(v9, (uint64_t)qword_1009738D0);
  uint64_t v11 = v2;
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    unint64_t v36 = a2;
    uint64_t v15 = v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v35 = a1;
    v39[0] = v16;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v33 = v5;
    uint64_t v34 = v10;
    uint64_t v18 = *(void *)&v11[OBJC_IVAR___SDDeferrableOperation_identifier];
    unint64_t v17 = *(void *)&v11[OBJC_IVAR___SDDeferrableOperation_identifier + 8];
    swift_bridgeObjectRetain();
    v37[0] = sub_100254634(v18, v17, v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2048;
    uint64_t v19 = &v11[OBJC_IVAR___SDDeferrableOperation_reasons];
    swift_beginAccess();
    v37[0] = *(void *)(*(void *)v19 + 16);
    uint64_t v5 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s addReason start: %ld", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    a1 = v35;
    swift_slowDealloc();
    a2 = v36;
    swift_slowDealloc();
  }
  else
  {
  }
  unint64_t v20 = *(void **)&v11[OBJC_IVAR___SDDeferrableOperation_queue];
  *uint64_t v8 = v20;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  id v21 = v20;
  LOBYTE(v20) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if (v20)
  {
    sub_10041FD68();
    char v22 = (uint64_t *)&v11[OBJC_IVAR___SDDeferrableOperation_reasons];
    swift_beginAccess();
    uint64_t v23 = *v22;
    swift_bridgeObjectRetain();
    char v24 = sub_10057BE20(a1, a2, v23);
    swift_bridgeObjectRelease();
    if (v24)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v25, v26))
      {
        long long v27 = (uint8_t *)swift_slowAlloc();
        v37[0] = swift_slowAlloc();
        *(_DWORD *)long long v27 = 136315138;
        swift_bridgeObjectRetain();
        Swift::Int v38 = sub_100254634(a1, a2, v37);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "Exiting addReason, %s is already in set", v27, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_100596448(&v38, a1, a2);
      swift_endAccess();
      swift_bridgeObjectRelease();
      long long v28 = v11;
      long long v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v29, v30))
      {
        char v31 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)char v31 = 134217984;
        v37[0] = *(void *)(*v22 + 16);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        _os_log_impl((void *)&_mh_execute_header, v29, v30, "addReason end: %ld", v31, 0xCu);
        swift_slowDealloc();
      }
      else
      {
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10041BF58(uint64_t a1, uint64_t a2)
{
  uint64_t v72 = sub_10000A844(&qword_100973980);
  __chkstk_darwin(v72);
  uint64_t v77 = (uint64_t)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v70 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v65 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v71 = (uint64_t)&v65 - v13;
  __chkstk_darwin(v12);
  long long v79 = (char *)&v65 - v14;
  uint64_t v80 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v80 - 8);
  uint64_t v16 = __chkstk_darwin(v80);
  uint64_t v69 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  long long v75 = (char *)&v65 - v18;
  uint64_t v81 = type metadata accessor for DispatchPredicate();
  uint64_t v19 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  id v21 = (uint64_t *)((char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_100969DE8 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  uint64_t v23 = sub_10000B47C(v22, (uint64_t)qword_1009738D0);
  char v24 = v2;
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  BOOL v27 = os_log_type_enabled(v25, v26);
  long long v73 = v11;
  uint64_t v78 = a1;
  if (v27)
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v74 = v23;
    uint64_t v29 = v28;
    uint64_t v30 = swift_slowAlloc();
    unint64_t v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))a2;
    v84[0] = v30;
    *(_DWORD *)uint64_t v29 = 136315394;
    uint64_t v76 = v15;
    uint64_t v31 = *(void *)&v24[OBJC_IVAR___SDDeferrableOperation_identifier];
    unint64_t v32 = *(void *)&v24[OBJC_IVAR___SDDeferrableOperation_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v82 = sub_100254634(v31, v32, v84);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2048;
    uint64_t v33 = &v24[OBJC_IVAR___SDDeferrableOperation_reasons];
    swift_beginAccess();
    uint64_t v34 = *(void *)v33;
    uint64_t v15 = v76;
    uint64_t v82 = *(void *)(v34 + 16);
    a1 = v78;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s removeReason start: %ld", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    a2 = (uint64_t)v68;
    swift_slowDealloc();
    uint64_t v23 = v74;
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v35 = *(void **)&v24[OBJC_IVAR___SDDeferrableOperation_queue];
  *id v21 = v35;
  uint64_t v36 = v81;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v81);
  id v37 = v35;
  LOBYTE(v35) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v19 + 8))(v21, v36);
  if ((v35 & 1) == 0)
  {
    __break(1u);
    return;
  }
  Swift::Int v38 = &v24[OBJC_IVAR___SDDeferrableOperation_reasons];
  swift_beginAccess();
  uint64_t v81 = (uint64_t)v38;
  sub_1005A1914(a1, a2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  unint64_t v39 = &v24[OBJC_IVAR___SDDeferrableOperation_timedReasons];
  swift_beginAccess();
  uint64_t v40 = *(void *)v39;
  if (*(void *)(*(void *)v39 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_1005838BC(a1, a2);
    uint64_t v42 = v80;
    if (v43)
    {
      uint64_t v44 = (uint64_t)v79;
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v79, *(void *)(v40 + 56) + *(void *)(v15 + 72) * v41, v80);
      uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
      v45(v44, 0, 1, v42);
    }
    else
    {
      uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
      uint64_t v44 = (uint64_t)v79;
      v45((uint64_t)v79, 1, 1, v80);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
    if (v46(v44, 1, v42) == 1) {
      goto LABEL_13;
    }
    uint64_t v74 = v23;
    long long v47 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 32);
    uint64_t v67 = v15 + 32;
    uint64_t v66 = v47;
    v47(v75, v44, v42);
    unint64_t v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v46;
    sub_10041FD68();
    swift_beginAccess();
    uint64_t v48 = v71;
    sub_1002A9874(v78, a2, v71);
    sub_10000A7E8(v48, (uint64_t *)&unk_100975040);
    swift_endAccess();
    uint64_t v76 = v15;
    uint64_t v49 = (uint64_t)v73;
    (*(void (**)(void))(v15 + 16))();
    v45(v49, 0, 1, v42);
    long long v79 = v24;
    uint64_t v50 = (uint64_t)&v24[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
    swift_beginAccess();
    uint64_t v51 = v77;
    uint64_t v52 = v77 + *(int *)(v72 + 48);
    sub_10024A330(v49, v77, (uint64_t *)&unk_100975040);
    uint64_t v53 = v68;
    sub_10024A330(v50, v52, (uint64_t *)&unk_100975040);
    if (v53(v51, 1, v42) == 1)
    {
      sub_10000A7E8(v49, (uint64_t *)&unk_100975040);
      int v54 = v53(v52, 1, v42);
      uint64_t v55 = v76;
      if (v54 == 1)
      {
        sub_10000A7E8(v77, (uint64_t *)&unk_100975040);
        char v24 = v79;
LABEL_21:
        sub_10041E098();
        sub_10041E888();
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v56 = v70;
      sub_10024A330(v77, v70, (uint64_t *)&unk_100975040);
      if (v53(v52, 1, v42) != 1)
      {
        unint64_t v57 = v69;
        v66(v69, v52, v42);
        sub_100421B54(&qword_100973988);
        char v58 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v55 = v76;
        uint64_t v59 = *(void (**)(char *, uint64_t))(v76 + 8);
        v59(v57, v42);
        sub_10000A7E8(v49, (uint64_t *)&unk_100975040);
        v59((char *)v56, v42);
        sub_10000A7E8(v77, (uint64_t *)&unk_100975040);
        char v24 = v79;
        if (v58) {
          goto LABEL_21;
        }
LABEL_22:
        (*(void (**)(char *, uint64_t))(v55 + 8))(v75, v42);
        goto LABEL_23;
      }
      sub_10000A7E8(v49, (uint64_t *)&unk_100975040);
      uint64_t v55 = v76;
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v56, v42);
    }
    sub_10000A7E8(v77, &qword_100973980);
    char v24 = v79;
    goto LABEL_22;
  }
  uint64_t v44 = (uint64_t)v79;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v79, 1, 1, v80);
LABEL_13:
  sub_10000A7E8(v44, (uint64_t *)&unk_100975040);
  sub_10041FD68();
LABEL_23:
  uint64_t v60 = v24;
  uint64_t v61 = Logger.logObject.getter();
  os_log_type_t v62 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v61, v62))
  {
    uint64_t v63 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v63 = 134217984;
    uint64_t v64 = v81;
    uint64_t v83 = *(void *)(*(void *)v81 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v61, v62, "removeReason end: %ld", v63, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    uint64_t v61 = v60;
    uint64_t v64 = v81;
  }

  if (!*(void *)(*(void *)v64 + 16)
    && *((unsigned char *)&v60->isa + OBJC_IVAR___SDDeferrableOperation_pendingOperation) == 1)
  {
    sub_10041F968(1);
  }
}

uint64_t sub_10041C9AC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  id v9 = a1;
  a4(v6, v8);

  return swift_bridgeObjectRelease();
}

void sub_10041CA18(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v114 = a1;
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v102 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v99 = (uint64_t)&v95 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v95 - v12;
  __chkstk_darwin(v11);
  uint64_t v106 = (char *)&v95 - v14;
  uint64_t v15 = type metadata accessor for DispatchPredicate();
  uint64_t v109 = *(void *)(v15 - 8);
  uint64_t v110 = (void (*)(void, void, void, void))v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)((char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  char v101 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v98 = (char *)&v95 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v97 = (char *)&v95 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v100 = (char *)&v95 - v27;
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v95 - v28;
  if (qword_100969DE8 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  uint64_t v31 = sub_10000B47C(v30, (uint64_t)qword_1009738D0);
  unint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v108 = a3;
  id v111 = v32;
  uint64_t v112 = v19 + 16;
  v32(v29, a3, v18);
  id v33 = v3;
  swift_bridgeObjectRetain_n();
  uint64_t v34 = (char *)v33;
  uint64_t v113 = v31;
  uint64_t v35 = Logger.logObject.getter();
  unint64_t v36 = a2;
  os_log_type_t v37 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v37))
  {
    uint64_t v38 = swift_slowAlloc();
    unint64_t v103 = v13;
    uint64_t v39 = v38;
    uint64_t v96 = swift_slowAlloc();
    uint64_t v118 = v96;
    *(_DWORD *)uint64_t v39 = 136315650;
    uint64_t v104 = v19;
    uint64_t v107 = v18;
    uint64_t v40 = *(void *)&v34[OBJC_IVAR___SDDeferrableOperation_identifier];
    unint64_t v41 = *(void *)&v34[OBJC_IVAR___SDDeferrableOperation_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v117 = sub_100254634(v40, v41, &v118);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v117 = sub_100254634(v114, v36, &v118);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v39 + 22) = 2080;
    sub_100421B54(&qword_100974530);
    uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v117 = sub_100254634(v42, v43, &v118);
    uint64_t v19 = v104;
    uint64_t v18 = v107;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v105 = *(void (**)(char *, uint64_t))(v19 + 8);
    v105(v29, v18);
    _os_log_impl((void *)&_mh_execute_header, v35, v37, "%s pushPreventionDateForReason, reason: %s, date: %s", (uint8_t *)v39, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v13 = v103;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v105 = *(void (**)(char *, uint64_t))(v19 + 8);
    v105(v29, v18);
  }

  uint64_t v44 = *(void **)&v34[OBJC_IVAR___SDDeferrableOperation_queue];
  void *v17 = v44;
  uint64_t v46 = v109;
  uint64_t v45 = v110;
  (*(void (**)(void *, void, void (*)(void, void, void, void)))(v109 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v110);
  id v47 = v44;
  LOBYTE(v44) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, void (*)(void, void, void, void)))(v46 + 8))(v17, v45);
  if ((v44 & 1) == 0)
  {
    __break(1u);
    return;
  }
  sub_10041FD68();
  uint64_t v48 = (uint64_t *)&v34[OBJC_IVAR___SDDeferrableOperation_reasons];
  swift_beginAccess();
  uint64_t v49 = *v48;
  swift_bridgeObjectRetain();
  uint64_t v50 = v114;
  char v51 = sub_10057BE20(v114, v36, v49);
  swift_bridgeObjectRelease();
  if ((v51 & 1) == 0)
  {
    uint64_t v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v63 = 0;
      uint64_t v64 = "Cannot bump date for reason that is not in set";
LABEL_28:
      _os_log_impl((void *)&_mh_execute_header, v61, v62, v64, v63, 2u);
      swift_slowDealloc();
    }
LABEL_29:

    return;
  }
  uint64_t v52 = &v34[OBJC_IVAR___SDDeferrableOperation_timedReasons];
  swift_beginAccess();
  uint64_t v53 = *(void *)v52;
  if (!*(void *)(*(void *)v52 + 16))
  {
    uint64_t v56 = (uint64_t)v106;
    uint64_t v110 = *(void (**)(void, void, void, void))(v19 + 56);
    v110(v106, 1, 1, v18);
    uint64_t v55 = v108;
LABEL_16:
    sub_10000A7E8(v56, (uint64_t *)&unk_100975040);
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v54 = sub_1005838BC(v50, v36);
  uint64_t v55 = v108;
  uint64_t v56 = (uint64_t)v106;
  if (v57)
  {
    v111(v106, *(void *)(v53 + 56) + *(void *)(v19 + 72) * v54, v18);
    char v58 = *(void (**)(void, void, void, void))(v19 + 56);
    uint64_t v59 = (char *)v56;
    uint64_t v60 = 0;
  }
  else
  {
    char v58 = *(void (**)(void, void, void, void))(v19 + 56);
    uint64_t v59 = v106;
    uint64_t v60 = 1;
  }
  uint64_t v110 = v58;
  v58(v59, v60, 1, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v56, 1, v18) == 1) {
    goto LABEL_16;
  }
  uint64_t v78 = v100;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v100, v56, v18);
  if ((static Date.> infix(_:_:)() & 1) == 0)
  {
    uint64_t v87 = v97;
    v111(v97, v55, v18);
    uint64_t v88 = Logger.logObject.getter();
    os_log_type_t v89 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v88, v89))
    {
      unint64_t v90 = (uint8_t *)swift_slowAlloc();
      v116[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v90 = 136315138;
      sub_100421B54(&qword_100974530);
      uint64_t v91 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v115 = sub_100254634(v91, v92, v116);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v93 = v105;
      v105(v87, v18);
      _os_log_impl((void *)&_mh_execute_header, v88, v89, "This function is for moving the date further into the future: %s", v90, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v93(v100, v18);
    }
    else
    {

      uint64_t v94 = v105;
      v105(v87, v18);
      v94(v100, v18);
    }
    return;
  }
  v105(v78, v18);
LABEL_17:
  v111(v13, v55, v18);
  v110(v13, 0, 1, v18);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1004674E4((uint64_t)v13, v50, v36);
  swift_endAccess();
  uint64_t v65 = v34;
  uint64_t v66 = Logger.logObject.getter();
  os_log_type_t v67 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v114 = v19 + 56;
    unint64_t v103 = v13;
    uint64_t v68 = v19;
    uint64_t v69 = swift_slowAlloc();
    v116[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v69 = 136315394;
    uint64_t v70 = &v65[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
    swift_beginAccess();
    uint64_t v71 = (uint64_t)v70;
    uint64_t v72 = v99;
    sub_10024A330(v71, v99, (uint64_t *)&unk_100975040);
    int v73 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v72, 1, v18);
    uint64_t v104 = v68;
    if (v73)
    {
      uint64_t v74 = v18;
      sub_10000A7E8(v72, (uint64_t *)&unk_100975040);
      unint64_t v75 = 0x80000001007BD080;
      unint64_t v76 = 0xD00000000000001ALL;
    }
    else
    {
      long long v79 = v98;
      v111(v98, v72, v18);
      sub_10000A7E8(v72, (uint64_t *)&unk_100975040);
      unint64_t v76 = Date.description.getter();
      unint64_t v75 = v80;
      uint64_t v74 = v18;
      v105(v79, v18);
    }
    uint64_t v115 = sub_100254634(v76, v75, v116);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 12) = 1024;
    uint64_t v81 = *(void *)&v65[OBJC_IVAR___SDDeferrableOperation_mainTimer];

    LODWORD(v115) = v81 != 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v66, v67, "preventUntilDate: %s, activeTimer: %{BOOL}d", (uint8_t *)v69, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v18 = v74;
    uint64_t v19 = v104;
    uint64_t v13 = v103;
    uint64_t v55 = v108;
    uint64_t v77 = (uint64_t)v102;
  }
  else
  {

    uint64_t v77 = (uint64_t)v102;
  }
  uint64_t v82 = (uint64_t)&v65[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
  swift_beginAccess();
  sub_10024A330(v82, v77, (uint64_t *)&unk_100975040);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v77, 1, v18) == 1)
  {
    sub_10000A7E8(v77, (uint64_t *)&unk_100975040);
    v111(v13, v55, v18);
    v110(v13, 0, 1, v18);
    swift_beginAccess();
    sub_100340238((uint64_t)v13, v82);
    swift_endAccess();
    uint64_t v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v63 = 0;
      uint64_t v64 = "First time setting date";
      goto LABEL_28;
    }
    goto LABEL_29;
  }
  uint64_t v83 = v101;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v101, v77, v18);
  if (static Date.> infix(_:_:)())
  {
    uint64_t v84 = Logger.logObject.getter();
    os_log_type_t v85 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v84, v85))
    {
      unint64_t v86 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v86 = 0;
      _os_log_impl((void *)&_mh_execute_header, v84, v85, "preventUntilDate updated", v86, 2u);
      uint64_t v83 = v101;
      swift_slowDealloc();
    }

    v111(v13, v108, v18);
    v110(v13, 0, 1, v18);
    swift_beginAccess();
    sub_100340238((uint64_t)v13, v82);
    swift_endAccess();
  }
  v105(v83, v18);
}

uint64_t sub_10041DAD0()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v45 = (char *)&v39 - v6;
  uint64_t v7 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v44 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v39 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v39 - v13;
  if (qword_100969DE8 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_10000B47C(v15, (uint64_t)qword_1009738D0);
  uint64_t v16 = v0;
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  uint64_t v19 = (void *)&unk_100973000;
  if (os_log_type_enabled(v17, v18))
  {
    unint64_t v43 = v5;
    uint64_t v20 = swift_slowAlloc();
    v47[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136315394;
    uint64_t v21 = (uint64_t)&v16[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
    swift_beginAccess();
    sub_10024A330(v21, (uint64_t)v14, (uint64_t *)&unk_100975040);
    int v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v14, 1, v1);
    uint64_t v41 = v1;
    uint64_t v42 = v2;
    if (v22)
    {
      sub_10000A7E8((uint64_t)v14, (uint64_t *)&unk_100975040);
      unint64_t v23 = 0x80000001007BD080;
      unint64_t v24 = 0xD00000000000001ALL;
    }
    else
    {
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
      uint64_t v40 = v12;
      uint64_t v26 = v1;
      uint64_t v27 = v45;
      v25(v45, v14, v26);
      sub_10000A7E8((uint64_t)v14, (uint64_t *)&unk_100975040);
      unint64_t v24 = Date.description.getter();
      unint64_t v23 = v28;
      uint64_t v29 = v26;
      uint64_t v12 = v40;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v27, v29);
    }
    uint64_t v46 = sub_100254634(v24, v23, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 1024;
    uint64_t v30 = *(void *)&v16[OBJC_IVAR___SDDeferrableOperation_mainTimer];

    LODWORD(v46) = v30 != 0;
    uint64_t v19 = &unk_100973000;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v17, v18, "scheduleOperation:%s, %{BOOL}d", (uint8_t *)v20, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v2 = v42;
    uint64_t v5 = v43;
    uint64_t v1 = v41;
  }
  else
  {
  }
  if (!*(void *)&v16[v19[292]])
  {
    uint64_t v31 = (uint64_t)&v16[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
    swift_beginAccess();
    sub_10024A330(v31, (uint64_t)v12, (uint64_t *)&unk_100975040);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v12, 1, v1) == 1)
    {
      sub_10000A7E8((uint64_t)v12, (uint64_t *)&unk_100975040);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v12, v1);
      uint64_t v32 = v1;
      id v33 = v45;
      Date.init()();
      char v34 = static Date.< infix(_:_:)();
      uint64_t v35 = v2;
      unint64_t v36 = *(void (**)(char *, uint64_t))(v2 + 8);
      v36(v33, v32);
      if (v34)
      {
        uint64_t v37 = (uint64_t)v44;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v44, 1, 1, v32);
        swift_beginAccess();
        sub_100340238(v37, v31);
        swift_endAccess();
        sub_10041FD68();
      }
      else
      {
        sub_10041E888();
      }
      v36(v5, v32);
    }
  }
  return sub_10041F968(0);
}

void sub_10041E098()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_100973970);
  __chkstk_darwin(v6 - 8);
  uint64_t v63 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v59 = (uint64_t)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v57 - v11;
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint8_t **)((char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *(void **)&v1[OBJC_IVAR___SDDeferrableOperation_queue];
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  id v18 = v17;
  char v19 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if (v19)
  {
    uint64_t v61 = v12;
    uint64_t v62 = v3;
    if (qword_100969DE8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v20 = type metadata accessor for Logger();
  uint64_t v21 = sub_10000B47C(v20, (uint64_t)qword_1009738D0);
  int v22 = v1;
  unint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v26 = &unk_100973000;
  char v58 = v5;
  uint64_t v60 = v21;
  if (v25)
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    v66[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136315138;
    char v57 = v27 + 4;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v28 = v2;
    uint64_t v29 = Dictionary.description.getter();
    unint64_t v31 = v30;
    uint64_t v26 = (void *)&unk_100973000;
    swift_bridgeObjectRelease();
    uint64_t v32 = v29;
    uint64_t v2 = v28;
    v65[0] = (void *)sub_100254634(v32, v31, v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "recalculateDate timedReasons:%s", v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v33 = (uint64_t *)&v22[v26[289]];
  swift_beginAccess();
  uint64_t v34 = *v33;
  swift_bridgeObjectRetain_n();
  uint64_t v35 = sub_100254F40(v34);
  swift_bridgeObjectRelease();
  v65[0] = v35;
  sub_1004208E4(v65);
  uint64_t v37 = (uint64_t)v61;
  uint64_t v36 = v62;
  swift_bridgeObjectRelease();
  uint64_t v38 = v65[0];
  uint64_t v39 = v65[0][2];
  uint64_t v40 = sub_10000A844(&qword_10096B510);
  uint64_t v41 = *(void *)(v40 - 8);
  if (v39)
  {
    uint64_t v42 = v63;
    sub_10024A330((uint64_t)v38+ ((*(unsigned __int8 *)(*(void *)(v40 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v40 - 8) + 80)), v63, &qword_10096B510);
    uint64_t v43 = 0;
  }
  else
  {
    uint64_t v43 = 1;
    uint64_t v42 = v63;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(v42, v43, 1, v40);
  swift_release();
  uint64_t v44 = sub_10000A844(&qword_10096B510);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v42, 1, v44) == 1)
  {
    sub_10000A7E8(v42, (uint64_t *)&unk_100973970);
    uint64_t v45 = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v37, v42 + *(int *)(v44 + 48), v2);
    uint64_t v45 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v37, v45, 1, v2);
  uint64_t v46 = (uint64_t)&v22[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
  swift_beginAccess();
  sub_100340238(v37, v46);
  swift_endAccess();
  id v47 = v22;
  uint64_t v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = v2;
    char v51 = (uint8_t *)swift_slowAlloc();
    v65[0] = (void *)swift_slowAlloc();
    *(_DWORD *)char v51 = 136315138;
    uint64_t v52 = v59;
    sub_10024A330(v46, v59, (uint64_t *)&unk_100975040);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v52, 1, v50))
    {
      sub_10000A7E8(v52, (uint64_t *)&unk_100975040);
      unint64_t v53 = 0x80000001007BD080;
      unint64_t v54 = 0xD00000000000001ALL;
    }
    else
    {
      uint64_t v55 = v58;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v58, v52, v50);
      sub_10000A7E8(v52, (uint64_t *)&unk_100975040);
      unint64_t v54 = Date.description.getter();
      unint64_t v53 = v56;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v55, v50);
    }
    uint64_t v64 = sub_100254634(v54, v53, (uint64_t *)v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "recalculateDate, preventUntilDate changed to %s", v51, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_10041E888()
{
  uint64_t v100 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v97 = (char *)&v89 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for DispatchQoS();
  uint64_t v96 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v95 = (char *)&v89 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for DispatchTimeInterval();
  uint64_t v103 = *(void *)(v104 - 8);
  uint64_t v3 = __chkstk_darwin(v104);
  uint64_t v102 = (uint64_t *)((char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  uint64_t v101 = (uint64_t)&v89 - v5;
  uint64_t v6 = type metadata accessor for OS_dispatch_source.TimerFlags();
  uint64_t v109 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v108 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for DispatchTime();
  uint64_t v114 = *(void *)(v111 - 8);
  uint64_t v8 = __chkstk_darwin(v111);
  uint64_t v107 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v113 = (char *)&v89 - v10;
  uint64_t v11 = type metadata accessor for DispatchPredicate();
  uint64_t v117 = *(uint64_t (***)(void *, uint64_t))(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (uint64_t *)((char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v116 = (char *)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v105 = (char *)&v89 - v18;
  uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v106 = (char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v94 = (uint64_t)&v89 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v115 = (uint64_t)&v89 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v89 - v26;
  if (qword_100969DE8 != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  uint64_t v29 = sub_10000B47C(v28, (uint64_t)qword_1009738D0);
  unint64_t v30 = v0;
  uint64_t v110 = v29;
  unint64_t v31 = Logger.logObject.getter();
  int v32 = static os_log_type_t.default.getter();
  BOOL v33 = os_log_type_enabled(v31, (os_log_type_t)v32);
  uint64_t v118 = v15;
  if (v33)
  {
    int v92 = v32;
    uint64_t v90 = v6;
    uint64_t v93 = v11;
    uint64_t v34 = v14;
    uint64_t v35 = swift_slowAlloc();
    uint64_t v91 = swift_slowAlloc();
    aBlock[0] = v91;
    *(_DWORD *)uint64_t v35 = 136315394;
    uint64_t v37 = *(void *)&v30[OBJC_IVAR___SDDeferrableOperation_identifier];
    unint64_t v36 = *(void *)&v30[OBJC_IVAR___SDDeferrableOperation_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v120 = sub_100254634(v37, v36, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v38 = v118;
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2080;
    uint64_t v39 = (uint64_t)&v30[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
    swift_beginAccess();
    sub_10024A330(v39, (uint64_t)v27, (uint64_t *)&unk_100975040);
    int v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48))(v27, 1, v34);
    uint64_t v112 = v34;
    if (v40)
    {
      unint64_t v41 = 0xD00000000000001ALL;
      sub_10000A7E8((uint64_t)v27, (uint64_t *)&unk_100975040);
      unint64_t v42 = 0x80000001007BD080;
      uint64_t v6 = v90;
    }
    else
    {
      uint64_t v43 = v105;
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v105, v27, v34);
      sub_10000A7E8((uint64_t)v27, (uint64_t *)&unk_100975040);
      unint64_t v41 = Date.description.getter();
      unint64_t v42 = v44;
      uint64_t v45 = v43;
      uint64_t v6 = v90;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v45, v34);
    }
    uint64_t v120 = sub_100254634(v41, v42, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v92, "%s handleTimer %s", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v14 = v112;
    uint64_t v15 = v118;
    uint64_t v11 = v93;
  }
  else
  {
  }
  uint64_t v46 = *(void **)&v30[OBJC_IVAR___SDDeferrableOperation_queue];
  *uint64_t v13 = v46;
  id v47 = v117;
  ((void (*)(void *, void, uint64_t))v117[13])(v13, enum case for DispatchPredicate.onQueue(_:), v11);
  id v48 = v46;
  char v49 = _dispatchPreconditionTest(_:)();
  uint64_t result = v47[1](v13, v11);
  if (v49)
  {
    uint64_t v51 = (uint64_t)&v30[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
    swift_beginAccess();
    uint64_t v52 = v115;
    sub_10024A330(v51, v115, (uint64_t *)&unk_100975040);
    unint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
    if (v53(v52, 1, v14) == 1)
    {
      uint64_t result = sub_10000A7E8(v52, (uint64_t *)&unk_100975040);
      uint64_t v54 = OBJC_IVAR___SDDeferrableOperation_mainTimer;
      if (*(void *)&v30[OBJC_IVAR___SDDeferrableOperation_mainTimer])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        OS_dispatch_source.cancel()();
        *(void *)&v30[v54] = 0;
        swift_unknownObjectRelease();
        return swift_unknownObjectRelease();
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v116, v52, v14);
      sub_10041FD68();
      Date.timeIntervalSinceNow.getter();
      if (v55 <= 0.0)
      {
        uint64_t v74 = (uint64_t)v106;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v106, 1, 1, v14);
        swift_beginAccess();
        sub_100340238(v74, v51);
        swift_endAccess();
        *(void *)&v30[OBJC_IVAR___SDDeferrableOperation_mainTimer] = 0;
        swift_unknownObjectRelease();
        unint64_t v75 = Logger.logObject.getter();
        os_log_type_t v76 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v75, v76))
        {
          uint64_t v77 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v77 = 0;
          _os_log_impl((void *)&_mh_execute_header, v75, v76, "handleTimer calling try operation", v77, 2u);
          uint64_t v15 = v118;
          swift_slowDealloc();
        }

        sub_10041F968(1);
        return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v116, v14);
      }
      else
      {
        uint64_t v112 = v14;
        unint64_t v56 = v107;
        static DispatchTime.now()();
        + infix(_:_:)();
        char v57 = *(uint64_t (***)(void *, uint64_t))(v114 + 8);
        v114 += 8;
        uint64_t v117 = v57;
        ((void (*)(char *, uint64_t))v57)(v56, v111);
        uint64_t v58 = OBJC_IVAR___SDDeferrableOperation_mainTimer;
        if (*(void *)&v30[OBJC_IVAR___SDDeferrableOperation_mainTimer])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          OS_dispatch_source.cancel()();
          *(void *)&v30[v58] = 0;
          swift_unknownObjectRelease();
          uint64_t v15 = v118;
          swift_unknownObjectRelease();
        }
        sub_10042084C();
        uint64_t v59 = v108;
        static OS_dispatch_source.TimerFlags.strict.getter();
        uint64_t v60 = static OS_dispatch_source.makeTimerSource(flags:queue:)();
        (*(void (**)(char *, uint64_t))(v109 + 8))(v59, v6);
        *(void *)&v30[v58] = v60;
        swift_unknownObjectRelease();
        if (*(void *)&v30[v58])
        {
          swift_getObjectType();
          uint64_t v61 = v101;
          sub_1002C1F64(v101);
          uint64_t v62 = v102;
          sub_1002C1FD8(v102);
          swift_unknownObjectRetain();
          OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
          swift_unknownObjectRelease();
          uint64_t v63 = *(void (**)(void *, uint64_t))(v103 + 8);
          uint64_t v64 = v104;
          v63(v62, v104);
          v63((void *)v61, v64);
          if (*(void *)&v30[v58])
          {
            swift_getObjectType();
            uint64_t v65 = swift_allocObject();
            *(void *)(v65 + 16) = v30;
            aBlock[4] = (uint64_t)sub_1004208C4;
            aBlock[5] = v65;
            aBlock[0] = (uint64_t)_NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = (uint64_t)sub_100296520;
            aBlock[3] = (uint64_t)&unk_1008DA6C8;
            uint64_t v66 = _Block_copy(aBlock);
            os_log_type_t v67 = v30;
            swift_unknownObjectRetain();
            uint64_t v68 = v95;
            j___s8Dispatch0A3QoSV11unspecifiedACvgZ();
            uint64_t v69 = v97;
            sub_1005BD8F8();
            OS_dispatch_source.setEventHandler(qos:flags:handler:)();
            uint64_t v70 = v66;
            uint64_t v15 = v118;
            _Block_release(v70);
            swift_unknownObjectRelease();
            (*(void (**)(char *, uint64_t))(v99 + 8))(v69, v100);
            (*(void (**)(char *, uint64_t))(v96 + 8))(v68, v98);
            swift_release();
            if (*(void *)&v30[v58])
            {
              swift_getObjectType();
              swift_unknownObjectRetain();
              OS_dispatch_source.resume()();
              swift_unknownObjectRelease();
            }
          }
          uint64_t v71 = Logger.logObject.getter();
          os_log_type_t v72 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v71, v72))
          {
            int v73 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)int v73 = 0;
            _os_log_impl((void *)&_mh_execute_header, v71, v72, "handleTimer timer activated", v73, 2u);
            uint64_t v15 = v118;
            swift_slowDealloc();
          }

          ((void (*)(char *, uint64_t))v117)(v113, v111);
          return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v116, v112);
        }
        else
        {
          uint64_t v78 = v30;
          long long v79 = Logger.logObject.getter();
          os_log_type_t v80 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v79, v80))
          {
            uint64_t v81 = (uint8_t *)swift_slowAlloc();
            aBlock[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v81 = 136315138;
            uint64_t v82 = v94;
            sub_10024A330(v51, v94, (uint64_t *)&unk_100975040);
            uint64_t v83 = v112;
            if (v53(v82, 1, v112))
            {
              unint64_t v84 = 0xD00000000000001ALL;
              sub_10000A7E8(v82, (uint64_t *)&unk_100975040);
              unint64_t v85 = 0x80000001007BD080;
              uint64_t v86 = v118;
            }
            else
            {
              uint64_t v86 = v118;
              uint64_t v87 = v105;
              (*(void (**)(char *, uint64_t, uint64_t))(v118 + 16))(v105, v82, v83);
              sub_10000A7E8(v82, (uint64_t *)&unk_100975040);
              unint64_t v84 = Date.description.getter();
              unint64_t v85 = v88;
              (*(void (**)(char *, uint64_t))(v86 + 8))(v87, v83);
            }
            void aBlock[6] = sub_100254634(v84, v85, aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v79, v80, "Error making timer %s", v81, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            ((void (*)(char *, uint64_t))v117)(v113, v111);
            return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v116, v83);
          }
          else
          {

            ((void (*)(char *, uint64_t))v117)(v113, v111);
            return (*(uint64_t (**)(char *, uint64_t))(v118 + 8))(v116, v112);
          }
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10041F904(uint64_t a1)
{
  if (*(void *)(a1 + OBJC_IVAR___SDDeferrableOperation_mainTimer))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    OS_dispatch_source.cancel()();
    a1 = swift_unknownObjectRelease();
  }
  return sub_10041E888(a1);
}

uint64_t sub_10041F968(int a1)
{
  int v22 = a1;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_100969DE8 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_1009738D0);
  uint64_t v7 = v1;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    v25[0] = v20;
    *(_DWORD *)uint64_t v10 = 136315650;
    uint64_t v12 = *(void *)&v7[OBJC_IVAR___SDDeferrableOperation_identifier];
    unint64_t v11 = *(void *)&v7[OBJC_IVAR___SDDeferrableOperation_identifier + 8];
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_100254634(v12, v11, v25);
    uint64_t v21 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 1024;
    LODWORD(v24) = v22 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 18) = 2080;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v13 = Set.description.getter();
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_100254634(v13, v15, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v2 = v21;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s _scheduleOperation delayed:%{BOOL}d, reason: %s", (uint8_t *)v10, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v16 = *(void **)&v7[OBJC_IVAR___SDDeferrableOperation_queue];
  *uint64_t v5 = v16;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v17 = v16;
  LOBYTE(v16) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v16)
  {
    uint64_t v19 = &v7[OBJC_IVAR___SDDeferrableOperation_reasons];
    uint64_t result = swift_beginAccess();
    if (*(void *)(*(void *)v19 + 16))
    {
      if ((v22 & 1) == 0) {
        v7[OBJC_IVAR___SDDeferrableOperation_pendingOperation] = 1;
      }
    }
    else if (v7[OBJC_IVAR___SDDeferrableOperation_pendingOperation] == 1)
    {
      if (v22)
      {
        v7[OBJC_IVAR___SDDeferrableOperation_pendingOperation] = 0;
        return (*(uint64_t (**)(uint64_t))&v7[OBJC_IVAR___SDDeferrableOperation_operation])(1);
      }
    }
    else if ((v22 & 1) == 0)
    {
      return (*(uint64_t (**)(void))&v7[OBJC_IVAR___SDDeferrableOperation_operation])(0);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10041FD68()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int v73 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A844((uint64_t *)&unk_100973970);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  uint64_t v69 = (uint64_t *)((char *)&v56 - v11);
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v15 = (uint64_t *)((char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void **)(v0 + OBJC_IVAR___SDDeferrableOperation_queue);
  *unint64_t v15 = v16;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  id v17 = v16;
  LOBYTE(v16) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if (v16)
  {
    uint64_t v61 = v3;
    uint64_t v19 = (uint64_t *)(v0 + OBJC_IVAR___SDDeferrableOperation_timedReasons);
    swift_beginAccess();
    uint64_t v20 = *v19;
    uint64_t v21 = *(void *)(*v19 + 64);
    uint64_t v58 = *v19 + 64;
    uint64_t v22 = 1 << *(unsigned char *)(v20 + 32);
    uint64_t v23 = -1;
    if (v22 < 64) {
      uint64_t v23 = ~(-1 << v22);
    }
    unint64_t v24 = v23 & v21;
    uint64_t v64 = v0 + OBJC_IVAR___SDDeferrableOperation_reasons;
    uint64_t v65 = v5 + 16;
    uint64_t v70 = v5;
    uint64_t v71 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v63 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    uint64_t v25 = (void (**)(char *, uint64_t))(v5 + 8);
    int64_t v59 = (unint64_t)(v22 + 63) >> 6;
    int64_t v57 = v59 - 1;
    uint64_t v67 = v20;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v72 = 0;
    uint64_t v26 = &qword_10096B510;
    uint64_t v66 = v19;
    uint64_t v68 = v10;
    uint64_t v62 = v25;
    uint64_t v60 = v4;
    while (1)
    {
      uint64_t v29 = v69;
      if (v24) {
        break;
      }
      int64_t v38 = v72 + 1;
      if (__OFADD__(v72, 1))
      {
        __break(1u);
        goto LABEL_37;
      }
      if (v38 < v59)
      {
        unint64_t v39 = *(void *)(v58 + 8 * v38);
        if (v39) {
          goto LABEL_14;
        }
        int64_t v40 = v72 + 2;
        ++v72;
        if (v38 + 1 < v59)
        {
          unint64_t v39 = *(void *)(v58 + 8 * v40);
          if (v39) {
            goto LABEL_17;
          }
          int64_t v72 = v38 + 1;
          if (v38 + 2 < v59)
          {
            unint64_t v39 = *(void *)(v58 + 8 * (v38 + 2));
            if (v39)
            {
              v38 += 2;
              goto LABEL_14;
            }
            int64_t v40 = v38 + 3;
            int64_t v72 = v38 + 2;
            if (v38 + 3 < v59)
            {
              unint64_t v39 = *(void *)(v58 + 8 * v40);
              if (!v39)
              {
                while (1)
                {
                  int64_t v38 = v40 + 1;
                  if (__OFADD__(v40, 1)) {
                    goto LABEL_38;
                  }
                  if (v38 >= v59)
                  {
                    int64_t v72 = v57;
                    goto LABEL_28;
                  }
                  unint64_t v39 = *(void *)(v58 + 8 * v38);
                  ++v40;
                  if (v39) {
                    goto LABEL_14;
                  }
                }
              }
LABEL_17:
              int64_t v38 = v40;
LABEL_14:
              unint64_t v24 = (v39 - 1) & v39;
              unint64_t v31 = __clz(__rbit64(v39)) + (v38 << 6);
              int64_t v72 = v38;
LABEL_10:
              uint64_t v32 = *(void *)(v67 + 56);
              BOOL v33 = (void *)(*(void *)(v67 + 48) + 16 * v31);
              uint64_t v34 = v33[1];
              *uint64_t v10 = *v33;
              v10[1] = v34;
              uint64_t v35 = v70;
              uint64_t v36 = v32 + *(void *)(v70 + 72) * v31;
              uint64_t v37 = sub_10000A844(v26);
              (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))((char *)v10 + *(int *)(v37 + 48), v36, v4);
              (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v10, 0, 1, v37);
              swift_bridgeObjectRetain();
              uint64_t v19 = v66;
              goto LABEL_29;
            }
          }
        }
      }
LABEL_28:
      uint64_t v41 = sub_10000A844(v26);
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v10, 1, 1, v41);
      unint64_t v24 = 0;
LABEL_29:
      sub_10024D388((uint64_t)v10, (uint64_t)v29, (uint64_t *)&unk_100973970);
      unint64_t v42 = v26;
      uint64_t v43 = sub_10000A844(v26);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v29, 1, v43) == 1) {
        return swift_release();
      }
      uint64_t v44 = *v29;
      uint64_t v45 = v29[1];
      uint64_t v46 = (char *)v29 + *(int *)(v43 + 48);
      id v47 = *v71;
      (*v71)(v73, v46, v4);
      Date.timeIntervalSinceNow.getter();
      if (v48 <= 0.0)
      {
        uint64_t v49 = (uint64_t)v61;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        unint64_t v50 = sub_1005838BC(v44, v45);
        char v52 = v51;
        swift_bridgeObjectRelease();
        if (v52)
        {
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v54 = *v19;
          uint64_t v74 = *v19;
          *uint64_t v19 = 0x8000000000000000;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_10058E92C();
            uint64_t v54 = v74;
          }
          swift_bridgeObjectRelease();
          uint64_t v28 = v49;
          uint64_t v55 = v49;
          uint64_t v4 = v60;
          v47((char *)v55, (char *)(*(void *)(v54 + 56) + *(void *)(v70 + 72) * v50), v60);
          sub_1002AC13C(v50, v54);
          *uint64_t v19 = v54;
          swift_bridgeObjectRelease();
          uint64_t v27 = 0;
        }
        else
        {
          uint64_t v27 = 1;
          uint64_t v28 = v49;
          uint64_t v4 = v60;
        }
        (*v63)(v28, v27, 1, v4);
        sub_10000A7E8(v28, (uint64_t *)&unk_100975040);
        swift_endAccess();
        swift_beginAccess();
        sub_1005A1914(v44, v45);
        swift_endAccess();
        swift_bridgeObjectRelease();
        uint64_t v25 = v62;
      }
      (*v25)(v73, v4);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = v68;
      uint64_t v26 = v42;
    }
    unint64_t v30 = __clz(__rbit64(v24));
    v24 &= v24 - 1;
    unint64_t v31 = v30 | (v72 << 6);
    goto LABEL_10;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

id sub_100420638()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDDeferrableOperation();
  return [super dealloc];
}

uint64_t sub_10042071C()
{
  return type metadata accessor for SDDeferrableOperation();
}

uint64_t type metadata accessor for SDDeferrableOperation()
{
  uint64_t result = qword_100973950;
  if (!qword_100973950) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100420770()
{
  sub_100271710();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unint64_t sub_10042084C()
{
  unint64_t result = qword_10096D4F0;
  if (!qword_10096D4F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10096D4F0);
  }
  return result;
}

uint64_t sub_10042088C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004208C4()
{
  return sub_10041F904(*(void *)(v0 + 16));
}

uint64_t sub_1004208CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1004208DC()
{
  return swift_release();
}

Swift::Int sub_1004208E4(void **a1)
{
  uint64_t v2 = *(void *)(sub_10000A844(&qword_10096B510) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_100482D78(v3);
  }
  uint64_t v4 = (char *)v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_100420990(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_100420990(char **a1)
{
  uint64_t v2 = v1;
  uint64_t v129 = sub_10000A844(&qword_10096B510);
  uint64_t v4 = *(void *)(v129 - 8);
  uint64_t v5 = __chkstk_darwin(v129);
  uint64_t v120 = (uint64_t)&v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v130 = (uint64_t)&v116 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v127 = (uint64_t)&v116 - v10;
  __chkstk_darwin(v9);
  uint64_t v126 = (uint64_t)&v116 - v11;
  Swift::Int v12 = (Swift::Int)a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v12);
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_141;
    }
    if (v12) {
      return sub_1004213E4(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_149;
  }
  uint64_t v124 = v4;
  uint64_t v128 = a1;
  Swift::Int v117 = result;
  if (v12 < 2)
  {
    uint64_t v18 = (char *)_swiftEmptyArrayStorage;
    unint64_t v123 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v116 = _swiftEmptyArrayStorage;
    if (v12 != 1)
    {
      unint64_t v20 = _swiftEmptyArrayStorage[2];
LABEL_107:
      uint64_t v109 = v18;
      if (v20 >= 2)
      {
        uint64_t v110 = *v128;
        do
        {
          unint64_t v111 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_136;
          }
          if (!v110) {
            goto LABEL_148;
          }
          uint64_t v112 = *(void *)&v109[16 * v111 + 32];
          uint64_t v113 = *(void *)&v109[16 * v20 + 24];
          sub_100421670((unint64_t)&v110[*(void *)(v124 + 72) * v112], (unint64_t)&v110[*(void *)(v124 + 72) * *(void *)&v109[16 * v20 + 16]], (unint64_t)&v110[*(void *)(v124 + 72) * v113], v123);
          if (v2) {
            break;
          }
          if (v113 < v112) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v109 = sub_100482474((uint64_t)v109);
          }
          if (v111 >= *((void *)v109 + 2)) {
            goto LABEL_138;
          }
          uint64_t v114 = &v109[16 * v111 + 32];
          *(void *)uint64_t v114 = v112;
          *((void *)v114 + 1) = v113;
          unint64_t v115 = *((void *)v109 + 2);
          if (v20 > v115) {
            goto LABEL_139;
          }
          memmove(&v109[16 * v20 + 16], &v109[16 * v20 + 32], 16 * (v115 - v20));
          *((void *)v109 + 2) = v115 - 1;
          unint64_t v20 = v115 - 1;
        }
        while (v115 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      v116[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v116 = (void *)v16;
    unint64_t v123 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  uint64_t v18 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v21 = v19;
    uint64_t v22 = v19 + 1;
    uint64_t v122 = v19;
    if (v19 + 1 >= v12)
    {
      Swift::Int v28 = v19 + 1;
      break;
    }
    uint64_t v118 = v2;
    uint64_t v23 = *v128;
    Swift::Int v24 = *(void *)(v124 + 72);
    uint64_t v25 = v126;
    sub_10024A330((uint64_t)&(*v128)[v24 * v22], v126, &qword_10096B510);
    uint64_t v125 = v12;
    uint64_t v26 = v127;
    sub_10024A330((uint64_t)&v23[v24 * v21], v127, &qword_10096B510);
    LODWORD(v121) = static Date.> infix(_:_:)();
    uint64_t v27 = v26;
    Swift::Int v12 = v125;
    sub_10000A7E8(v27, &qword_10096B510);
    sub_10000A7E8(v25, &qword_10096B510);
    Swift::Int v28 = v21 + 2;
    uint64_t v119 = v23;
    Swift::Int v131 = v24;
    if (v21 + 2 >= v12)
    {
      uint64_t v2 = v118;
      if ((v121 & 1) == 0) {
        break;
      }
    }
    else
    {
      uint64_t v29 = v24 * v22;
      unint64_t v30 = v23;
      Swift::Int v31 = v24 * v28;
      do
      {
        Swift::Int v32 = v28;
        uint64_t v33 = v126;
        sub_10024A330((uint64_t)&v30[v31], v126, &qword_10096B510);
        uint64_t v34 = v127;
        sub_10024A330((uint64_t)&v30[v29], v127, &qword_10096B510);
        int v35 = static Date.> infix(_:_:)();
        sub_10000A7E8(v34, &qword_10096B510);
        sub_10000A7E8(v33, &qword_10096B510);
        if ((v121 ^ v35))
        {
          Swift::Int v28 = v32;
          uint64_t v2 = v118;
          uint64_t v21 = v122;
          Swift::Int v12 = v125;
          if ((v121 & 1) == 0) {
            goto LABEL_23;
          }
          goto LABEL_43;
        }
        Swift::Int v28 = v32 + 1;
        v30 += v131;
      }
      while (v125 != v32 + 1);
      Swift::Int v12 = v125;
      Swift::Int v28 = v125;
      uint64_t v2 = v118;
      uint64_t v21 = v122;
      if ((v121 & 1) == 0) {
        break;
      }
    }
LABEL_43:
    Swift::Int v47 = v131;
    if (v28 < v21) {
      goto LABEL_142;
    }
    if (v21 >= v28) {
      break;
    }
    uint64_t v118 = v2;
    uint64_t v48 = 0;
    uint64_t v49 = v131 * (v28 - 1);
    Swift::Int v50 = v28 * v131;
    uint64_t v51 = v28;
    uint64_t v52 = v21;
    uint64_t v53 = v21 * v131;
    uint64_t v36 = v128;
    uint64_t v132 = v51;
    do
    {
      if (v52 != v51 + v48 - 1)
      {
        uint64_t v54 = v119;
        if (!v119) {
          goto LABEL_147;
        }
        uint64_t v55 = &v119[v53];
        uint64_t v56 = (uint64_t)&v119[v49];
        sub_10024D388((uint64_t)&v119[v53], v120, &qword_10096B510);
        if (v53 < v49 || v55 >= &v54[v50])
        {
          swift_arrayInitWithTakeFrontToBack();
          Swift::Int v47 = v131;
        }
        else
        {
          Swift::Int v47 = v131;
          if (v53 != v49) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        sub_10024D388(v120, v56, &qword_10096B510);
        uint64_t v36 = v128;
      }
      ++v52;
      --v48;
      uint64_t v51 = v132;
      v49 -= v47;
      v50 -= v47;
      v53 += v47;
    }
    while (v52 < v132 + v48);
    uint64_t v2 = v118;
    Swift::Int v28 = v132;
    uint64_t v21 = v122;
    Swift::Int v12 = v125;
    if (v132 < v125) {
      goto LABEL_24;
    }
LABEL_58:
    if (v28 < v21) {
      goto LABEL_135;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v18 = sub_100481FEC(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v58 = *((void *)v18 + 2);
    unint64_t v57 = *((void *)v18 + 3);
    unint64_t v20 = v58 + 1;
    uint64_t v132 = v28;
    if (v58 >= v57 >> 1) {
      uint64_t v18 = sub_100481FEC((char *)(v57 > 1), v58 + 1, 1, v18);
    }
    uint64_t v59 = v2;
    *((void *)v18 + 2) = v20;
    uint64_t v60 = v18 + 32;
    uint64_t v61 = &v18[16 * v58 + 32];
    uint64_t v62 = v132;
    *(void *)uint64_t v61 = v21;
    *((void *)v61 + 1) = v62;
    if (v58)
    {
      while (1)
      {
        unint64_t v63 = v20 - 1;
        if (v20 >= 4)
        {
          uint64_t v68 = &v60[16 * v20];
          uint64_t v69 = *((void *)v68 - 8);
          uint64_t v70 = *((void *)v68 - 7);
          BOOL v74 = __OFSUB__(v70, v69);
          uint64_t v71 = v70 - v69;
          if (v74) {
            goto LABEL_124;
          }
          uint64_t v73 = *((void *)v68 - 6);
          uint64_t v72 = *((void *)v68 - 5);
          BOOL v74 = __OFSUB__(v72, v73);
          uint64_t v66 = v72 - v73;
          char v67 = v74;
          if (v74) {
            goto LABEL_125;
          }
          unint64_t v75 = v20 - 2;
          os_log_type_t v76 = &v60[16 * v20 - 32];
          uint64_t v78 = *(void *)v76;
          uint64_t v77 = *((void *)v76 + 1);
          BOOL v74 = __OFSUB__(v77, v78);
          uint64_t v79 = v77 - v78;
          if (v74) {
            goto LABEL_127;
          }
          BOOL v74 = __OFADD__(v66, v79);
          uint64_t v80 = v66 + v79;
          if (v74) {
            goto LABEL_130;
          }
          if (v80 >= v71)
          {
            uint64_t v98 = &v60[16 * v63];
            uint64_t v100 = *(void *)v98;
            uint64_t v99 = *((void *)v98 + 1);
            BOOL v74 = __OFSUB__(v99, v100);
            uint64_t v101 = v99 - v100;
            if (v74) {
              goto LABEL_134;
            }
            BOOL v91 = v66 < v101;
            goto LABEL_95;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v92 = *((void *)v18 + 4);
            uint64_t v93 = *((void *)v18 + 5);
            BOOL v74 = __OFSUB__(v93, v92);
            uint64_t v85 = v93 - v92;
            char v86 = v74;
            goto LABEL_89;
          }
          uint64_t v65 = *((void *)v18 + 4);
          uint64_t v64 = *((void *)v18 + 5);
          BOOL v74 = __OFSUB__(v64, v65);
          uint64_t v66 = v64 - v65;
          char v67 = v74;
        }
        if (v67) {
          goto LABEL_126;
        }
        unint64_t v75 = v20 - 2;
        uint64_t v81 = &v60[16 * v20 - 32];
        uint64_t v83 = *(void *)v81;
        uint64_t v82 = *((void *)v81 + 1);
        BOOL v84 = __OFSUB__(v82, v83);
        uint64_t v85 = v82 - v83;
        char v86 = v84;
        if (v84) {
          goto LABEL_129;
        }
        uint64_t v87 = &v60[16 * v63];
        uint64_t v89 = *(void *)v87;
        uint64_t v88 = *((void *)v87 + 1);
        BOOL v74 = __OFSUB__(v88, v89);
        uint64_t v90 = v88 - v89;
        if (v74) {
          goto LABEL_132;
        }
        if (__OFADD__(v85, v90)) {
          goto LABEL_133;
        }
        if (v85 + v90 >= v66)
        {
          BOOL v91 = v66 < v90;
LABEL_95:
          if (v91) {
            unint64_t v63 = v75;
          }
          goto LABEL_97;
        }
LABEL_89:
        if (v86) {
          goto LABEL_128;
        }
        uint64_t v94 = &v60[16 * v63];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v74 = __OFSUB__(v95, v96);
        uint64_t v97 = v95 - v96;
        if (v74) {
          goto LABEL_131;
        }
        if (v97 < v85) {
          goto LABEL_14;
        }
LABEL_97:
        unint64_t v102 = v63 - 1;
        if (v63 - 1 >= v20)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!*v128) {
          goto LABEL_146;
        }
        uint64_t v103 = v18;
        uint64_t v104 = &v60[16 * v102];
        uint64_t v105 = *(void *)v104;
        uint64_t v106 = &v60[16 * v63];
        uint64_t v107 = *((void *)v106 + 1);
        sub_100421670((unint64_t)&(*v128)[*(void *)(v124 + 72) * *(void *)v104], (unint64_t)&(*v128)[*(void *)(v124 + 72) * *(void *)v106], (unint64_t)&(*v128)[*(void *)(v124 + 72) * v107], v123);
        if (v59) {
          goto LABEL_118;
        }
        if (v107 < v105) {
          goto LABEL_121;
        }
        if (v63 > *((void *)v103 + 2)) {
          goto LABEL_122;
        }
        *(void *)uint64_t v104 = v105;
        *(void *)&v60[16 * v102 + 8] = v107;
        unint64_t v108 = *((void *)v103 + 2);
        if (v63 >= v108) {
          goto LABEL_123;
        }
        uint64_t v18 = v103;
        unint64_t v20 = v108 - 1;
        memmove(&v60[16 * v63], v106 + 16, 16 * (v108 - 1 - v63));
        *((void *)v103 + 2) = v108 - 1;
        if (v108 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_14:
    Swift::Int v12 = (Swift::Int)v128[1];
    uint64_t v19 = v132;
    uint64_t v2 = v59;
    if (v132 >= v12) {
      goto LABEL_107;
    }
  }
LABEL_23:
  uint64_t v36 = v128;
  if (v28 >= v12) {
    goto LABEL_58;
  }
LABEL_24:
  if (__OFSUB__(v28, v21)) {
    goto LABEL_140;
  }
  if (v28 - v21 >= v117) {
    goto LABEL_58;
  }
  if (__OFADD__(v21, v117)) {
    goto LABEL_143;
  }
  if (v21 + v117 >= v12) {
    Swift::Int v37 = v12;
  }
  else {
    Swift::Int v37 = v21 + v117;
  }
  if (v37 >= v21)
  {
    if (v28 != v37)
    {
      uint64_t v118 = v2;
      uint64_t v119 = v18;
      uint64_t v38 = *(void *)(v124 + 72);
      uint64_t v132 = v38 * (v28 - 1);
      uint64_t v125 = v38;
      Swift::Int v131 = v28 * v38;
      Swift::Int v121 = v37;
      do
      {
        uint64_t v39 = 0;
        uint64_t v40 = v21;
        while (1)
        {
          Swift::Int v41 = v28;
          unint64_t v42 = *v36;
          uint64_t v43 = v126;
          sub_10024A330((uint64_t)&(*v36)[v131 + v39], v126, &qword_10096B510);
          uint64_t v44 = v127;
          sub_10024A330((uint64_t)&v42[v132 + v39], v127, &qword_10096B510);
          LOBYTE(v42) = static Date.> infix(_:_:)();
          sub_10000A7E8(v44, &qword_10096B510);
          sub_10000A7E8(v43, &qword_10096B510);
          if ((v42 & 1) == 0) {
            break;
          }
          uint64_t v45 = *v36;
          if (!*v36) {
            goto LABEL_145;
          }
          uint64_t v46 = (uint64_t)&v45[v132 + v39];
          sub_10024D388((uint64_t)&v45[v131 + v39], v130, &qword_10096B510);
          Swift::Int v28 = v41;
          swift_arrayInitWithTakeFrontToBack();
          sub_10024D388(v130, v46, &qword_10096B510);
          v39 -= v125;
          ++v40;
          uint64_t v36 = v128;
          if (v41 == v40) {
            goto LABEL_34;
          }
        }
        Swift::Int v28 = v41;
LABEL_34:
        ++v28;
        v132 += v125;
        v131 += v125;
        uint64_t v21 = v122;
      }
      while (v28 != v121);
      Swift::Int v28 = v121;
      uint64_t v2 = v118;
      uint64_t v18 = v119;
    }
    goto LABEL_58;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004213E4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v25 = a1;
  uint64_t v29 = sub_10000A844(&qword_10096B510);
  uint64_t v7 = __chkstk_darwin(v29);
  uint64_t v30 = (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v26 = (uint64_t)&v23 - v10;
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v28 = a3;
  uint64_t v24 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v32 = v15 * (v28 - 1);
    uint64_t v27 = v15;
    uint64_t v31 = v15 * v28;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v25;
    while (1)
    {
      uint64_t v18 = *a4;
      sub_10024A330(v31 + v16 + *a4, (uint64_t)v14, &qword_10096B510);
      uint64_t v19 = v26;
      sub_10024A330(v32 + v16 + v18, v26, &qword_10096B510);
      LOBYTE(v18) = static Date.> infix(_:_:)();
      sub_10000A7E8(v19, &qword_10096B510);
      uint64_t result = sub_10000A7E8((uint64_t)v14, &qword_10096B510);
      if ((v18 & 1) == 0)
      {
LABEL_4:
        v32 += v27;
        v31 += v27;
        if (++v28 == v24) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v20 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v21 = a4;
      uint64_t v22 = v20 + v32 + v16;
      sub_10024D388(v20 + v31 + v16, v30, &qword_10096B510);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_10024D388(v30, v22, &qword_10096B510);
      v16 -= v27;
      ++v17;
      a4 = v21;
      if (v28 == v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100421670(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v44 = sub_10000A844(&qword_10096B510);
  uint64_t v8 = __chkstk_darwin(v44);
  uint64_t v43 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v40 - v10;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_62;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_63;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v47 = a1;
  unint64_t v46 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v25 = a4 + v18;
      unint64_t v45 = a4 + v18;
      unint64_t v47 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v27 = -v13;
        unint64_t v41 = a4;
        unint64_t v42 = a1;
        do
        {
          unint64_t v28 = a3 + v27;
          sub_10024A330(v25 + v27, (uint64_t)v11, &qword_10096B510);
          unint64_t v29 = a2 + v27;
          unint64_t v30 = a3;
          uint64_t v31 = (uint64_t)v11;
          uint64_t v32 = v43;
          sub_10024A330(a2 + v27, v43, &qword_10096B510);
          char v33 = static Date.> infix(_:_:)();
          uint64_t v34 = v32;
          uint64_t v11 = (char *)v31;
          sub_10000A7E8(v34, &qword_10096B510);
          sub_10000A7E8(v31, &qword_10096B510);
          if (v33)
          {
            if (v30 < a2 || v28 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v37 = v41;
              unint64_t v36 = v42;
            }
            else
            {
              BOOL v35 = v30 == a2;
              unint64_t v37 = v41;
              unint64_t v36 = v42;
              if (!v35) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v47 += v27;
          }
          else
          {
            unint64_t v38 = v45;
            v45 += v27;
            if (v30 < v38 || v28 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v29 = a2;
              unint64_t v37 = v41;
              unint64_t v36 = v42;
            }
            else
            {
              BOOL v35 = v30 == v38;
              unint64_t v37 = v41;
              unint64_t v36 = v42;
              if (!v35) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v29 = a2;
            }
          }
          unint64_t v25 = v45;
          if (v45 <= v37) {
            break;
          }
          a2 = v29;
          a3 = v28;
        }
        while (v29 > v36);
      }
      goto LABEL_60;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v42 = a4 + v17;
    unint64_t v45 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      uint64_t v20 = v43;
      do
      {
        sub_10024A330(a2, (uint64_t)v11, &qword_10096B510);
        sub_10024A330(a4, v20, &qword_10096B510);
        char v21 = static Date.> infix(_:_:)();
        sub_10000A7E8(v20, &qword_10096B510);
        sub_10000A7E8((uint64_t)v11, &qword_10096B510);
        unint64_t v22 = v47;
        if (v21)
        {
          unint64_t v23 = a2 + v13;
          if (v47 < a2 || v47 >= v23)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 == a2)
          {
            unint64_t v22 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v24 = v46 + v13;
          if (v47 < v46 || v47 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 != v46)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v46 = v24;
          unint64_t v23 = a2;
        }
        unint64_t v47 = v22 + v13;
        a4 = v46;
        if (v46 >= v42) {
          break;
        }
        a2 = v23;
      }
      while (v23 < a3);
    }
LABEL_60:
    sub_100482274(&v47, &v46, (uint64_t *)&v45);
    return 1;
  }
LABEL_64:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100421B54(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Date();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100421B98()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100421BD0(char a1)
{
  return sub_1004B1FDC(a1, *(void *)(v1 + 16));
}

id sub_100421BD8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  uint64_t v9 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t)&v5[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
  uint64_t v13 = type metadata accessor for Date();
  int64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  uint64_t v15 = OBJC_IVAR___SDDeferrableOperation_mainTimer;
  *(void *)&v5[OBJC_IVAR___SDDeferrableOperation_mainTimer] = 0;
  *(void *)&v5[OBJC_IVAR___SDDeferrableOperation_queue] = a3;
  uint64_t v16 = &v5[OBJC_IVAR___SDDeferrableOperation_identifier];
  *(void *)uint64_t v16 = a1;
  *((void *)v16 + 1) = a2;
  *(void *)&v5[OBJC_IVAR___SDDeferrableOperation_timedReasons] = &_swiftEmptyDictionarySingleton;
  *(void *)&v5[OBJC_IVAR___SDDeferrableOperation_reasons] = &_swiftEmptySetSingleton;
  v14((uint64_t)v11, 1, 1, v13);
  swift_beginAccess();
  uint64_t v17 = v5;
  id v18 = a3;
  sub_100340238((uint64_t)v11, v12);
  swift_endAccess();
  uint64_t v19 = &v17[OBJC_IVAR___SDDeferrableOperation_operation];
  uint64_t v20 = v25;
  *(void *)uint64_t v19 = v24;
  *((void *)v19 + 1) = v20;
  v17[OBJC_IVAR___SDDeferrableOperation_pendingOperation] = 0;
  *(void *)&v5[v15] = 0;
  swift_retain();

  swift_unknownObjectRelease();
  char v21 = (objc_class *)type metadata accessor for SDDeferrableOperation();
  v26.receiver = v17;
  v26.super_class = v21;
  return [super init];
}

uint64_t sub_100421DB8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100973990);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100973990);
  if (qword_100969CD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946C0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100421E80()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingOperationFinished;
  uint64_t v2 = sub_10000A844(&qword_10096BB88);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingStartedContinuation, 1, 1, v2);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingSucceeded) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest) = 0;
  uint64_t v4 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  uint64_t v7 = (int *)type metadata accessor for RangingMetrics(0);
  v6(v4 + v7[5], 1, 1, v5);
  v6(v4 + v7[6], 1, 1, v5);
  *(unsigned char *)(v4 + v7[7]) = 0;
  v6(v4 + v7[8], 1, 1, v5);
  v6(v4 + v7[9], 1, 1, v5);
  uint64_t v8 = OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_lock;
  sub_10000A844((uint64_t *)&unk_10096D4C0);
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 16) = 0;
  *(void *)(v0 + v8) = v9;
  *(void *)(v0 + 16) = sub_100427F48();
  *(void *)(v0 + 24) = v10;
  type metadata accessor for ResponseTimer();
  uint64_t v11 = (void *)swift_allocObject();
  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_responseTimer) = v11;
  void v11[2] = v0;
  v11[3] = &off_1008DA738;
  v11[4] = 0;
  swift_retain();
  sub_1000D2CF0(1);
  return v0;
}

uint64_t sub_100422094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[47] = a3;
  v4[48] = v3;
  v4[45] = a1;
  v4[46] = a2;
  v4[49] = *v3;
  sub_10000A844(&qword_10096C920);
  v4[50] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_100975040);
  v4[51] = swift_task_alloc();
  return _swift_task_switch(sub_100422184, 0, 0);
}

uint64_t sub_100422184()
{
  uint64_t v54 = v0;
  *(void *)(v0 + 352) = *(void *)(v0 + 360);
  strcpy((char *)(v0 + 328), "AWDL_INFO_SELF");
  *(unsigned char *)(v0 + 343) = -18;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v2 = sub_1000D2064(isa);

  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 360);
    uint64_t v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    *(void *)(v0 + 152) = sub_10000A844((uint64_t *)&unk_10096B2A0);
    *(void *)(v0 + 128) = v4;
    sub_100249444((_OWORD *)(v0 + 128), (_OWORD *)(v0 + 192));
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v53 = v3;
    sub_1005911E0((_OWORD *)(v0 + 192), v0 + 56, isUniquelyReferenced_nonNull_native);
    *(void *)(v0 + 352) = v3;
    swift_bridgeObjectRelease();
    sub_10025B0A8(v0 + 56);
  }
  else
  {
    sub_1002A81B4(v0 + 56, (_OWORD *)(v0 + 96));
    sub_10025B0A8(v0 + 56);
    sub_10000A7E8(v0 + 96, (uint64_t *)&unk_10096AC20);
  }
  uint64_t v6 = v0 + 16;
  if (qword_100969DF0 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000B47C(v7, (uint64_t)qword_100973990);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v11 = Dictionary.description.getter();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 344) = sub_100254634(v11, v13, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v6 = v0 + 16;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "combinedAWDLInfo = %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v14 = *(void *)(v0 + 360);
  *(void *)(v0 + 296) = 0xD000000000000013;
  *(void *)(v0 + 304) = 0x80000001007BD230;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v14 + 16) && (unint64_t v15 = sub_100583878(v6), (v16 & 1) != 0))
  {
    sub_10024D2D4(*(void *)(*(void *)(v0 + 360) + 56) + 32 * v15, v0 + 160);
  }
  else
  {
    *(_OWORD *)(v0 + 160) = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
  }
  sub_10025B0A8(v6);
  if (!*(void *)(v0 + 184))
  {
    sub_10000A7E8(v0 + 160, (uint64_t *)&unk_10096AC20);
    goto LABEL_17;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    id v19 = 0;
    goto LABEL_18;
  }
  uint64_t v17 = *(void *)(v0 + 312);
  unint64_t v18 = *(void *)(v0 + 320);
  id v19 = [objc_allocWithZone((Class)SDAutoUnlockRangingPeer) init];
  if (v19)
  {
    uint64_t v21 = *(void *)(v0 + 368);
    unint64_t v20 = *(void *)(v0 + 376);
    id v22 = objc_allocWithZone((Class)_NIRangingPeer);
    id v23 = v19;
    sub_10025ADCC(v17, v18);
    sub_10025ADCC(v21, v20);
    Class v24 = Data._bridgeToObjectiveC()().super.isa;
    Class v25 = Data._bridgeToObjectiveC()().super.isa;
    sub_100250CC4(v21, v20);
    id v26 = [v22 initWithMacAddressAsData:v24 secureRangingKeyID:v25];
    sub_100250CC4(v17, v18);

    [v23 setNiRangingPeer:v26];
    id v27 = v23;
    Class v28 = Data._bridgeToObjectiveC()().super.isa;
    [v27 setMacAddressData:v28];
    sub_100250CC4(v17, v18);
  }
  else
  {
    sub_100250CC4(v17, v18);
  }
LABEL_18:
  *(void *)(v0 + 416) = v19;
  uint64_t v50 = *(void *)(v0 + 408);
  uint64_t v52 = *(void *)(v0 + 400);
  unint64_t v29 = v19;
  uint64_t v31 = *(void *)(v0 + 384);
  uint64_t v30 = *(void *)(v0 + 392);
  uint64_t v51 = v30;
  uint64_t v32 = swift_allocObject();
  *(void *)(v0 + 424) = v32;
  swift_weakInit();
  uint64_t v33 = swift_allocObject();
  *(void *)(v0 + 432) = v33;
  swift_weakInit();
  uint64_t v34 = swift_allocObject();
  swift_weakInit();
  uint64_t v35 = swift_allocObject();
  *(void *)(v0 + 440) = v35;
  *(void *)(v35 + 16) = v34;
  *(void *)(v35 + 24) = v30;
  uint64_t v36 = swift_allocObject();
  *(void *)(v0 + 448) = v36;
  swift_weakInit();
  swift_beginAccess();
  objc_allocWithZone((Class)SDAutoUnlockWiFiRequest);
  id v37 = v29;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v38 = swift_bridgeObjectRetain();
  id v39 = sub_1004279EC(v38, 1, v29, (uint64_t)sub_100422D4C, 0, sub_10042841C, v32, sub_100428424, v33, sub_100428464, v35, sub_10042846C, v36, sub_100423B70, 0);
  *(void *)(v0 + 456) = v39;
  [v39 setRangingTimeout:5];
  Date.init()();
  uint64_t v40 = type metadata accessor for Date();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v50, 0, 1, v40);
  uint64_t v41 = v31 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
  swift_beginAccess();
  sub_10026B410(v50, v41, (uint64_t *)&unk_100975040);
  swift_endAccess();
  unint64_t v42 = *(void **)(v31 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest);
  *(void *)(v31 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest) = v39;
  id v43 = v39;

  id v44 = [self sharedManager];
  [v44 scheduleWiFiRequest:v43];

  uint64_t v45 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v52, 1, 1, v45);
  unint64_t v46 = (void *)swift_allocObject();
  v46[2] = 0;
  v46[3] = 0;
  v46[4] = v31;
  v46[5] = v51;
  swift_retain();
  sub_10028CFA8(v52, (uint64_t)&unk_100973C28, (uint64_t)v46);
  swift_release();
  unint64_t v47 = (void *)swift_task_alloc();
  *(void *)(v0 + 464) = v47;
  void *v47 = v0;
  v47[1] = sub_100422AAC;
  uint64_t v48 = *(void *)(v0 + 384);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 480, 0, 0, 0xD00000000000002ELL, 0x80000001007BD290, sub_100428520, v48, &type metadata for Bool);
}

uint64_t sub_100422AAC()
{
  *(void *)(*(void *)v1 + 472) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_100422C88;
  }
  else {
    id v2 = sub_100422BC0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100422BC0()
{
  uint64_t v1 = *(void **)(v0 + 456);
  id v2 = *(void **)(v0 + 416);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v3 = *(unsigned __int8 *)(v0 + 480);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v3);
}

uint64_t sub_100422C88()
{
  uint64_t v1 = (void *)v0[57];
  id v2 = (void *)v0[52];
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3(0);
}

uint64_t sub_100422D4C(uint64_t (*a1)(uint64_t))
{
  if (qword_100969DF0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_100973990);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Starting wifi request", v5, 2u);
    swift_slowDealloc();
  }

  return a1(1);
}

uint64_t sub_100422E44(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10000A844(&qword_100973C10);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v33 - v7;
  uint64_t v9 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v13 = result;
    if (qword_100969DF0 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10000B47C(v14, (uint64_t)qword_100973990);
    unint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "AWDL started", v17, 2u);
      swift_slowDealloc();
    }

    if (a2)
    {
      unint64_t v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v18, v19))
      {
        unint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unint64_t v20 = 134217984;
        uint64_t v34 = a2;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "AWDL failed to start: %ld", v20, 0xCu);
        swift_slowDealloc();
      }

      swift_retain();
      sub_1005F4464();
      uint64_t v21 = swift_release();
      id v22 = *(os_unfair_lock_s **)(v13 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_lock);
      __chkstk_darwin(v21);
      v33[-2] = sub_10042820C;
      v33[-1] = v13;
      swift_retain();
      os_unfair_lock_lock(v22 + 4);
      sub_10030F73C(v23);
      os_unfair_lock_unlock(v22 + 4);
      swift_release();
      sub_100428228((uint64_t)v8, (uint64_t)v6);
      uint64_t v24 = sub_10000A844(&qword_10096BB88);
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v25 + 48))(v6, 1, v24) == 1)
      {
        sub_10000A7E8((uint64_t)v8, &qword_100973C10);
        swift_release();
        return sub_10000A7E8((uint64_t)v6, &qword_100973C10);
      }
      else
      {
        sub_10024D280();
        uint64_t v31 = swift_allocError();
        *(_DWORD *)uint64_t v32 = 10;
        *(void *)(v32 + 8) = 0xD000000000000014;
        *(void *)(v32 + 16) = 0x80000001007BD2C0;
        uint64_t v34 = v31;
        CheckedContinuation.resume(throwing:)();
        swift_release();
        sub_10000A7E8((uint64_t)v8, &qword_100973C10);
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v25 + 8))(v6, v24);
      }
    }
    else
    {
      swift_beginAccess();
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        uint64_t v27 = Strong;
        Date.init()();
        swift_release();
        uint64_t v28 = type metadata accessor for Date();
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v11, 0, 1, v28);
        uint64_t v29 = v27 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
        swift_beginAccess();
        uint64_t v30 = type metadata accessor for RangingMetrics(0);
        sub_10026B410((uint64_t)v11, v29 + *(int *)(v30 + 20), (uint64_t *)&unk_100975040);
        swift_endAccess();
      }
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10042333C(char a1)
{
  uint64_t v2 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100969DF0 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000B47C(v5, (uint64_t)qword_100973990);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "peer found", v8, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = Strong;
    Date.init()();
    uint64_t v11 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 0, 1, v11);
    uint64_t v12 = v10 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
    swift_beginAccess();
    uint64_t v13 = type metadata accessor for RangingMetrics(0);
    sub_10026B410((uint64_t)v4, v12 + *(int *)(v13 + 24), (uint64_t *)&unk_100975040);
    swift_endAccess();
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v15 = result + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
    swift_beginAccess();
    *(unsigned char *)(v15 + *(int *)(type metadata accessor for RangingMetrics(0) + 28)) = a1 & 1;
    return swift_release();
  }
  return result;
}

uint64_t sub_100423590(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = result;
    Date.init()();
    uint64_t v11 = type metadata accessor for Date();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 0, 1, v11);
    uint64_t v12 = v10 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
    swift_beginAccess();
    uint64_t v13 = type metadata accessor for RangingMetrics(0);
    sub_10026B410((uint64_t)v8, v12 + *(int *)(v13 + 32), (uint64_t *)&unk_100975040);
    swift_endAccess();
    uint64_t v14 = type metadata accessor for TaskPriority();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v5, 1, 1, v14);
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = 0;
    v15[3] = 0;
    v15[4] = v10;
    v15[5] = a2;
    swift_retain();
    sub_10028CFA8((uint64_t)v5, (uint64_t)&unk_100973C38, (uint64_t)v15);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1004237A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_1004237C8, 0, 0);
}

uint64_t sub_1004237C8()
{
  if (qword_100969DF0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_100973990);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Ranging started", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[2];

  v0[3] = *(void *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_responseTimer);
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[4] = v6;
  void *v6 = v0;
  v6[1] = sub_1004286B4;
  return sub_1005F469C(10);
}

uint64_t sub_100423934(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_100969DF0 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000B47C(v7, (uint64_t)qword_100973990);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Ranging completed", v10, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = Strong;
    Date.init()();
    uint64_t v13 = type metadata accessor for Date();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 0, 1, v13);
    uint64_t v14 = v12 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
    swift_beginAccess();
    uint64_t v15 = type metadata accessor for RangingMetrics(0);
    sub_10026B410((uint64_t)v6, v14 + *(int *)(v15 + 36), (uint64_t *)&unk_100975040);
    swift_endAccess();
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100425268(a1, a2);
    return swift_release();
  }
  return result;
}

void sub_100423B70()
{
}

uint64_t sub_100423B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_100423B9C, 0, 0);
}

uint64_t sub_100423B9C()
{
  v0[3] = *(void *)(v0[2] + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_responseTimer);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_100423C4C;
  return sub_1005F469C(10);
}

uint64_t sub_100423C4C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_100423D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_lock)
                          + 16);
  os_unfair_lock_lock(v2);
  sub_1002CEA38(v3);
  os_unfair_lock_unlock(v2);
}

uint64_t sub_100423DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_100973C10);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  os_log_type_t v9 = (char *)&v14 - v8;
  uint64_t v10 = sub_10000A844(&qword_10096BB88);
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a2, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  sub_100428324((uint64_t)v9, (uint64_t)v7);
  uint64_t v12 = a1 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingOperationFinished;
  swift_beginAccess();
  sub_10026B410((uint64_t)v7, v12, &qword_100973C10);
  return swift_endAccess();
}

uint64_t sub_100423F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[24] = a3;
  v4[25] = v3;
  v4[22] = a1;
  v4[23] = a2;
  return _swift_task_switch(sub_100423F6C, 0, 0);
}

uint64_t sub_100423F6C()
{
  if (qword_100969DF0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_100973990);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Scheduling ranging request as responder", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 176);

  strcpy((char *)(v0 + 152), "AWDL_INFO_SELF");
  *(unsigned char *)(v0 + 167) = -18;
  *(void *)(v0 + 168) = v5;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v7 = sub_1000D2064(isa);

  if (v7)
  {
    uint64_t v8 = *(void *)(v0 + 176);
    uint64_t v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    *(void *)(v0 + 80) = sub_10000A844((uint64_t *)&unk_10096B2A0);
    *(void *)(v0 + 56) = v9;
    sub_100249444((_OWORD *)(v0 + 56), (_OWORD *)(v0 + 88));
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1005911E0((_OWORD *)(v0 + 88), v0 + 16, isUniquelyReferenced_nonNull_native);
    uint64_t v11 = v8;
    *(void *)(v0 + 168) = v8;
    swift_bridgeObjectRelease();
    sub_10025B0A8(v0 + 16);
  }
  else
  {
    sub_1002A81B4(v0 + 16, (_OWORD *)(v0 + 120));
    sub_10025B0A8(v0 + 16);
    sub_10000A7E8(v0 + 120, (uint64_t *)&unk_10096AC20);
    uint64_t v11 = *(void *)(v0 + 168);
  }
  unint64_t v13 = *(void *)(v0 + 192);
  uint64_t v12 = *(void *)(v0 + 200);
  uint64_t v15 = *(void *)(v0 + 176);
  uint64_t v14 = *(void *)(v0 + 184);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  uint64_t v17 = (void *)swift_allocObject();
  *(void *)(v0 + 208) = v17;
  void v17[2] = v16;
  uint64_t v17[3] = v15;
  v17[4] = v14;
  v17[5] = v13;
  objc_allocWithZone((Class)SDAutoUnlockWiFiRequest);
  swift_bridgeObjectRetain();
  sub_10025ADCC(v14, v13);
  swift_retain();
  id v18 = sub_1004279EC(v11, 0, 0, (uint64_t)sub_100428310, (uint64_t)v17, sub_100424E88, 0, 0, 0, 0, 0, 0, 0, sub_100424FC0, 0);
  *(void *)(v0 + 216) = v18;
  [v18 setRangingTimeout:5];
  os_log_type_t v19 = *(void **)(v12 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest);
  *(void *)(v12 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest) = v18;
  id v20 = v18;

  uint64_t v21 = swift_task_alloc();
  *(void *)(v0 + 224) = v21;
  *(void *)(v21 + 16) = v12;
  *(void *)(v21 + 24) = v20;
  id v22 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v22;
  *id v22 = v0;
  v22[1] = sub_10042438C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 248, 0, 0, 0xD00000000000003FLL, 0x80000001007BD1A0, sub_10042831C, v21, &type metadata for Bool);
}

uint64_t sub_10042438C()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100424514;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1004244A8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1004244A8()
{
  uint64_t v1 = *(void **)(v0 + 216);
  swift_release();

  uint64_t v2 = *(unsigned __int8 *)(v0 + 248);
  os_log_type_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_100424514()
{
  uint64_t v1 = *(void **)(v0 + 216);
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

void sub_10042458C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint8_t *a5, unint64_t a6)
{
  uint64_t v71 = a5;
  uint64_t v72 = a6;
  uint64_t v75 = a4;
  uint64_t v8 = sub_10000A844(&qword_100973C10);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v67 - v12;
  uint64_t v14 = sub_10000A844(&qword_10096BB88);
  uint64_t v73 = *(void *)(v14 - 8);
  uint64_t v74 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v70 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v18 = (char *)&v67 - v17;
  if (qword_100969DF0 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_10000B47C(v19, (uint64_t)qword_100973990);
  id v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    id v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Starting wifi request", v22, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_18;
  }
  uint64_t v24 = (char *)Strong;
  uint64_t v25 = *(void **)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest);
  if (!v25)
  {
    swift_release();
LABEL_18:
    a1(0);
    return;
  }
  uint64_t v69 = a1;
  unint64_t v76 = 0xD000000000000013;
  unint64_t v77 = 0x80000001007BD230;
  id v26 = v25;
  AnyHashable.init<A>(_:)();
  uint64_t v27 = v75;
  if (*(void *)(v75 + 16) && (unint64_t v28 = sub_100583878((uint64_t)v78), (v29 & 1) != 0))
  {
    sub_10024D2D4(*(void *)(v27 + 56) + 32 * v28, (uint64_t)&v79);
  }
  else
  {
    long long v79 = 0u;
    long long v80 = 0u;
  }
  sub_10025B0A8((uint64_t)v78);
  if (*((void *)&v80 + 1))
  {
    if (swift_dynamicCast())
    {
      uint64_t v75 = a2;
      uint64_t v68 = v26;
      uint64_t v70 = v24;
      uint64_t v30 = v76;
      unint64_t v31 = v77;
      id v67 = [objc_allocWithZone((Class)SDAutoUnlockRangingPeer) init];
      id v32 = objc_allocWithZone((Class)_NIRangingPeer);
      sub_10025ADCC(v30, v31);
      uint64_t v33 = v71;
      unint64_t v34 = v72;
      sub_10025ADCC((uint64_t)v71, v72);
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      Class v36 = Data._bridgeToObjectiveC()().super.isa;
      uint64_t v37 = (uint64_t)v33;
      uint64_t v38 = v68;
      unint64_t v39 = v34;
      uint64_t v40 = v67;
      sub_100250CC4(v37, v39);
      id v41 = [v32 initWithMacAddressAsData:isa secureRangingKeyID:v36];
      uint64_t v72 = v31;
      sub_100250CC4(v30, v31);

      [v40 setNiRangingPeer:v41];
      id v42 = [self sharedManager];
      [v42 updateWiFiRequest:v38 setRangingPeer:v40];

      uint64_t v43 = (uint64_t)&v70[OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingStartedContinuation];
      swift_beginAccess();
      sub_100428228(v43, (uint64_t)v13);
      uint64_t v45 = v73;
      uint64_t v44 = v74;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v13, 1, v74) == 1)
      {
        sub_10000A7E8((uint64_t)v13, &qword_100973C10);
        unint64_t v46 = Logger.logObject.getter();
        os_log_type_t v47 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v46, v47))
        {
          uint64_t v48 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v48 = 0;
          _os_log_impl((void *)&_mh_execute_header, v46, v47, "No continuation. ScheduleRangingRequestAsResponder is stuck. Attempting to clear current request", v48, 2u);
          swift_slowDealloc();
        }

        v69(0);
        sub_100250CC4(v30, v72);
        swift_release();
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v18, v13, v44);
        LOBYTE(v79) = 1;
        CheckedContinuation.resume(returning:)();
        v69(1);
        swift_release();

        sub_100250CC4(v30, v72);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v18, v44);
      }
      return;
    }
  }
  else
  {
    sub_10000A7E8((uint64_t)&v79, (uint64_t *)&unk_10096AC20);
  }
  swift_bridgeObjectRetain_n();
  uint64_t v49 = Logger.logObject.getter();
  os_log_type_t v50 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = (uint8_t *)swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    v78[0] = v72;
    uint64_t v71 = v51;
    *(_DWORD *)uint64_t v51 = 136315138;
    id v67 = v51 + 4;
    swift_bridgeObjectRetain();
    uint64_t v68 = (char *)&type metadata for Any + 8;
    uint64_t v52 = v26;
    uint64_t v53 = v24;
    uint64_t v54 = Dictionary.description.getter();
    unint64_t v56 = v55;
    swift_bridgeObjectRelease();
    uint64_t v57 = v54;
    uint64_t v24 = v53;
    id v26 = v52;
    *(void *)&long long v79 = sub_100254634(v57, v56, v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "Could not find peer mac address in remote AWDL info: %s", v71, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v59 = v73;
  uint64_t v58 = v74;
  uint64_t v60 = (uint64_t)&v24[OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingStartedContinuation];
  swift_beginAccess();
  sub_100428228(v60, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v11, 1, v58))
  {
    sub_10000A7E8((uint64_t)v11, &qword_100973C10);
  }
  else
  {
    uint64_t v61 = v70;
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v70, v11, v58);
    sub_10000A7E8((uint64_t)v11, &qword_100973C10);
    *(void *)&long long v79 = 0;
    *((void *)&v79 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(55);
    v62._countAndFlagsBits = 0xD000000000000035;
    v62._object = (void *)0x80000001007BD250;
    String.append(_:)(v62);
    v63._countAndFlagsBits = Dictionary.description.getter();
    String.append(_:)(v63);
    swift_bridgeObjectRelease();
    long long v64 = v79;
    sub_10024D280();
    uint64_t v65 = swift_allocError();
    *(_DWORD *)uint64_t v66 = 1;
    *(_OWORD *)(v66 + 8) = v64;
    *(void *)&long long v79 = v65;
    CheckedContinuation.resume(throwing:)();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v61, v58);
  }
  v69(0);
  swift_release();
}

void sub_100424E88()
{
  if (qword_100969DF0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_100973990);
  oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "AWDL started (error = %ld)", v2, 0xCu);
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_100424FC0()
{
}

void sub_100424FCC(const char *a1)
{
  if (qword_100969DF0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_100973990);
  oslog = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v3, a1, v4, 2u);
    swift_slowDealloc();
  }
}

void sub_1004250BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000A844(&qword_100973C10);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t v12 = sub_10000A844(&qword_10096BB88);
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a1, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  sub_100428324((uint64_t)v11, (uint64_t)v9);
  uint64_t v14 = a2 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingStartedContinuation;
  swift_beginAccess();
  sub_10026B410((uint64_t)v9, v14, &qword_100973C10);
  swift_endAccess();
  id v15 = [self sharedManager];
  [v15 scheduleWiFiRequest:a3];
}

uint64_t sub_100425268(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10000A844(&qword_100973C10);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = &v42[-v11];
  __chkstk_darwin(v10);
  uint64_t v14 = &v42[-v13];
  swift_retain();
  sub_1005F4464();
  uint64_t v15 = swift_release();
  uint64_t v16 = OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest;
  uint64_t v17 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest);
  if (v17)
  {
    id v18 = self;
    id v19 = v17;
    id v20 = [v18 sharedManager];
    [v20 cancelWiFiRequest:v19];

    os_log_type_t v21 = *(void **)(v3 + v16);
    *(void *)(v3 + v16) = 0;
  }
  __chkstk_darwin(v15);
  *(void *)&v42[-16] = sub_10042820C;
  *(void *)&v42[-8] = v3;
  uint64_t v23 = v22 + 4;
  os_unfair_lock_lock(v22 + 4);
  sub_10030F73C(v24);
  os_unfair_lock_unlock(v23);
  if (!a2 && a1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_25;
      }
      id v25 = *(id *)(a1 + 32);
    }
    id v26 = v25;
    unsigned int v27 = [v25 shouldUnlock];

    if (v27)
    {
      if (qword_100969DF0 == -1)
      {
LABEL_10:
        uint64_t v28 = type metadata accessor for Logger();
        sub_10000B47C(v28, (uint64_t)qword_100973990);
        char v29 = Logger.logObject.getter();
        os_log_type_t v30 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v29, v30))
        {
          unint64_t v31 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v31 = 0;
          _os_log_impl((void *)&_mh_execute_header, v29, v30, "Peer in range", v31, 2u);
          swift_slowDealloc();
        }

        sub_100428228((uint64_t)v14, (uint64_t)v12);
        uint64_t v32 = sub_10000A844(&qword_10096BB88);
        uint64_t v33 = *(void *)(v32 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v33 + 48))(v12, 1, v32) == 1)
        {
          sub_10000A7E8((uint64_t)v14, &qword_100973C10);
          uint64_t v34 = (uint64_t)v12;
          return sub_10000A7E8(v34, &qword_100973C10);
        }
        v42[6] = 1;
        CheckedContinuation.resume(returning:)();
        sub_10000A7E8((uint64_t)v14, &qword_100973C10);
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v33 + 8))(v12, v32);
      }
LABEL_25:
      swift_once();
      goto LABEL_10;
    }
  }
  if (qword_100969DF0 != -1) {
    swift_once();
  }
  uint64_t v35 = type metadata accessor for Logger();
  sub_10000B47C(v35, (uint64_t)qword_100973990);
  Class v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v38 = 0;
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Peer out of range", v38, 2u);
    swift_slowDealloc();
  }

  sub_100428228((uint64_t)v14, (uint64_t)v9);
  uint64_t v39 = sub_10000A844(&qword_10096BB88);
  uint64_t v40 = *(void *)(v39 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v40 + 48))(v9, 1, v39) == 1)
  {
    sub_10000A7E8((uint64_t)v14, &qword_100973C10);
    uint64_t v34 = (uint64_t)v9;
    return sub_10000A7E8(v34, &qword_100973C10);
  }
  v42[7] = 0;
  CheckedContinuation.resume(returning:)();
  sub_10000A7E8((uint64_t)v14, &qword_100973C10);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v40 + 8))(v9, v39);
}

uint64_t sub_10042578C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000A844(&qword_100973C10);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingOperationFinished;
  swift_beginAccess();
  sub_100428228(v7, a2);
  uint64_t v8 = sub_10000A844(&qword_10096BB88);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
  swift_beginAccess();
  sub_10026B410((uint64_t)v6, v7, &qword_100973C10);
  return swift_endAccess();
}

uint64_t sub_1004258B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844(&qword_100973C10);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v21 - v6;
  if (qword_100969DF0 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000B47C(v8, (uint64_t)qword_100973990);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Ranging timer fired", v11, 2u);
    swift_slowDealloc();
  }

  __chkstk_darwin(v12);
  v21[-2] = sub_10042820C;
  v21[-1] = v1;
  uint64_t v14 = v13 + 4;
  os_unfair_lock_lock(v13 + 4);
  sub_1002CEA38(v15);
  os_unfair_lock_unlock(v14);
  sub_100428228((uint64_t)v7, (uint64_t)v5);
  uint64_t v16 = sub_10000A844(&qword_10096BB88);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v5, 1, v16) == 1)
  {
    sub_10000A7E8((uint64_t)v5, &qword_100973C10);
  }
  else
  {
    sub_10024D280();
    uint64_t v18 = swift_allocError();
    *(_DWORD *)uint64_t v19 = 24;
    *(void *)(v19 + 8) = 0x20676E69676E6152;
    *(void *)(v19 + 16) = 0xEF74756F656D6974;
    v21[0] = v18;
    CheckedContinuation.resume(throwing:)();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v16);
  }
  sub_100425B8C();
  return sub_10000A7E8((uint64_t)v7, &qword_100973C10);
}

void sub_100425B8C()
{
  uint64_t v1 = v0;
  if (qword_100969DF0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_100973990);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "invalidating wifi request", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest);
  if (v6)
  {
    uint64_t v7 = self;
    id v9 = v6;
    id v8 = [v7 sharedManager];
    [v8 cancelWiFiRequest:v9];

    sub_1000D2CF0(0);
  }
}

uint64_t sub_100425CF8()
{
  sub_100250CC4(*(void *)(v0 + 16), *(void *)(v0 + 24));
  sub_10000A7E8(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingOperationFinished, &qword_100973C10);
  sub_10000A7E8(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingStartedContinuation, &qword_100973C10);

  swift_release();
  sub_100428630(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_100425DCC()
{
  return type metadata accessor for SDAuthenticationRangingSession(0);
}

uint64_t type metadata accessor for SDAuthenticationRangingSession(uint64_t a1)
{
  return sub_10000B93C(a1, (uint64_t *)&unk_1009739D8);
}

void sub_100425DF4()
{
  sub_100425EEC();
  if (v0 <= 0x3F)
  {
    type metadata accessor for RangingMetrics(319);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100425EEC()
{
  if (!qword_1009739F8)
  {
    sub_100247840(&qword_10096BB88);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1009739F8);
    }
  }
}

uint64_t type metadata accessor for RangingMetrics(uint64_t a1)
{
  return sub_10000B93C(a1, qword_100973BC8);
}

uint64_t *sub_100425F68(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void *)(v7 - 8);
    id v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = a3[5];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v9((uint64_t *)((char *)a2 + v16), 1, v7))
    {
      uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
    }
    uint64_t v20 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    os_log_type_t v21 = (char *)a1 + v20;
    id v22 = (char *)a2 + v20;
    if (v9((uint64_t *)((char *)a2 + v20), 1, v7))
    {
      uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
    }
    uint64_t v24 = a3[9];
    id v25 = (char *)a1 + v24;
    id v26 = (char *)a2 + v24;
    if (v9((uint64_t *)v26, 1, v7))
    {
      uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v25, v26, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_10042635C(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (!v5(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + a2[5];
  if (!v5(v6, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v6, v4);
  }
  uint64_t v7 = a1 + a2[6];
  if (!v5(v7, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v7, v4);
  }
  uint64_t v8 = a1 + a2[8];
  if (!v5(v8, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v8, v4);
  }
  uint64_t v9 = a1 + a2[9];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v9, 1, v4);
  if (!result)
  {
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
    return v11(v9, v4);
  }
  return result;
}

char *sub_100426548(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  uint64_t v18 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  if (v8(&a2[v18], 1, v6))
  {
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  }
  uint64_t v22 = a3[9];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  if (v8(v24, 1, v6))
  {
    uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v23, v24, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v23, 0, 1, v6);
  }
  return a1;
}

char *sub_1004268EC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v19, v20, v6);
LABEL_19:
  a1[a3[7]] = a2[a3[7]];
  uint64_t v24 = a3[8];
  uint64_t v25 = &a1[v24];
  id v26 = &a2[v24];
  int v27 = v8(&a1[v24], 1, v6);
  int v28 = v8(v26, 1, v6);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
LABEL_24:
    uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v25, v26, v6);
LABEL_25:
  uint64_t v30 = a3[9];
  unint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  int v33 = v8(&a1[v30], 1, v6);
  int v34 = v8(v32, 1, v6);
  if (!v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v31, v32, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
    goto LABEL_30;
  }
  if (v34)
  {
LABEL_30:
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v31, v32, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v31, 0, 1, v6);
  return a1;
}

char *sub_100426E70(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  int v15 = &a1[v14];
  int v16 = &a2[v14];
  if (v8(&a2[v14], 1, v6))
  {
    uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  uint64_t v18 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  if (v8(&a2[v18], 1, v6))
  {
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  }
  uint64_t v22 = a3[9];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  if (v8(v24, 1, v6))
  {
    uint64_t v25 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v23, v24, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v23, 0, 1, v6);
  }
  return a1;
}

char *sub_100427214(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v19, v20, v6);
LABEL_19:
  uint64_t v24 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v25 = &a1[v24];
  id v26 = &a2[v24];
  int v27 = v8(&a1[v24], 1, v6);
  int v28 = v8(v26, 1, v6);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
LABEL_24:
    uint64_t v29 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v25, v26, v6);
LABEL_25:
  uint64_t v30 = a3[9];
  unint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  int v33 = v8(&a1[v30], 1, v6);
  int v34 = v8(v32, 1, v6);
  if (!v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v31, v32, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
    goto LABEL_30;
  }
  if (v34)
  {
LABEL_30:
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v31, v32, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v31, 0, 1, v6);
  return a1;
}

uint64_t sub_100427794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004277A8);
}

uint64_t sub_1004277A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10042787C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100427890);
}

uint64_t sub_100427890(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  }
  return result;
}

void sub_100427950()
{
  sub_100271710();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

id sub_1004279EC(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, void *a8, uint64_t a9, void *a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15)
{
  v23.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  aBlock[4] = a4;
  aBlock[5] = a5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100427D34;
  aBlock[3] = &unk_1008DA798;
  uint64_t v24 = _Block_copy(aBlock);
  if (a6)
  {
    uint64_t v35 = a6;
    uint64_t v36 = a7;
    unint64_t v31 = _NSConcreteStackBlock;
    uint64_t v32 = 1107296256;
    int v33 = sub_100427DC8;
    int v34 = &unk_1008DA860;
    uint64_t v25 = _Block_copy(&v31);
    swift_release();
    id v26 = a10;
    if (!a8) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v25 = 0;
  id v26 = a10;
  if (a8)
  {
LABEL_3:
    uint64_t v35 = a8;
    uint64_t v36 = a9;
    unint64_t v31 = _NSConcreteStackBlock;
    uint64_t v32 = 1107296256;
    int v33 = sub_100427E60;
    int v34 = &unk_1008DA838;
    a8 = _Block_copy(&v31);
    swift_release();
  }
LABEL_4:
  int v27 = a12;
  if (v26)
  {
    uint64_t v35 = v26;
    uint64_t v36 = a11;
    unint64_t v31 = _NSConcreteStackBlock;
    uint64_t v32 = 1107296256;
    int v33 = sub_100296520;
    int v34 = &unk_1008DA810;
    id v26 = _Block_copy(&v31);
    swift_release();
  }
  int v28 = a14;
  if (a12)
  {
    uint64_t v35 = a12;
    uint64_t v36 = a13;
    unint64_t v31 = _NSConcreteStackBlock;
    uint64_t v32 = 1107296256;
    int v33 = sub_100427EB4;
    int v34 = &unk_1008DA7E8;
    int v27 = _Block_copy(&v31);
    swift_release();
  }
  if (a14)
  {
    uint64_t v35 = a14;
    uint64_t v36 = a15;
    unint64_t v31 = _NSConcreteStackBlock;
    uint64_t v32 = 1107296256;
    int v33 = sub_100296520;
    int v34 = &unk_1008DA7C0;
    int v28 = _Block_copy(&v31);
    swift_release();
  }
  id v29 = [v15 initWithAwdlInfo:v23.super.isa isRangingInitiator:a2 & 1 rangingPeer:a3 queueAvailableHandler:v24 awdlStartedHandler:v25 peerFoundHandler:a8 rangingStartedHandler:v26 rangingCompletedHandler:v27 invalidationHandler:v28];

  _Block_release(v28);
  _Block_release(v27);
  _Block_release(v26);
  _Block_release(a8);
  _Block_release(v25);
  _Block_release(v24);
  swift_release();
  return v29;
}

uint64_t sub_100427D34(uint64_t a1, void *aBlock)
{
  uint64_t v2 = *(void (**)(uint64_t (*)(char), uint64_t))(a1 + 32);
  uint64_t v3 = _Block_copy(aBlock);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  swift_retain();
  v2(sub_100421BD0, v4);
  swift_release();

  return swift_release();
}

uint64_t sub_100427DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  if (a2) {
    uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100427E60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_100427EB4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1004283A4();
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_100427F48()
{
  id result = [self sharedMonitor];
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v1 = result;
  id v2 = [result awdlInfo];

  if (v2)
  {
    uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v3 = 0;
  }
  if (qword_100969DF0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_100973990);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    if (v3)
    {
      unint64_t v8 = Dictionary.description.getter();
      unint64_t v10 = v9;
    }
    else
    {
      unint64_t v10 = 0x80000001007BD180;
      unint64_t v8 = 0xD000000000000012;
    }
    sub_100254634(v8, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "AWDLInfo = %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (!v3) {
      goto LABEL_14;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (!v3)
    {
LABEL_14:
      v11.super.Class isa = 0;
      goto LABEL_15;
    }
  }
  v11.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
LABEL_15:
  id v12 = sub_1000D1EEC(v11.super.isa);

  if (!v12) {
    return 0;
  }
  uint64_t v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

  return (id)v13;
}

uint64_t sub_10042820C@<X0>(uint64_t a1@<X8>)
{
  return sub_10042578C(v1, a1);
}

uint64_t sub_100428228(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_100973C10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100428290()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004282C8()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_100250CC4(*(void *)(v0 + 32), *(void *)(v0 + 40));

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100428310(void (*a1)(uint64_t), uint64_t a2)
{
  sub_10042458C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(uint8_t **)(v2 + 32), *(void *)(v2 + 40));
}

void sub_10042831C(uint64_t a1)
{
  sub_1004250BC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100428324(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_100973C10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10042838C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10042839C()
{
  return swift_release();
}

unint64_t sub_1004283A4()
{
  unint64_t result = qword_100973C18;
  if (!qword_100973C18)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_100973C18);
  }
  return result;
}

uint64_t sub_1004283E4()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10042841C(uint64_t a1, uint64_t a2)
{
  return sub_100422E44(a1, a2);
}

uint64_t sub_100428424(char a1)
{
  return sub_10042333C(a1);
}

uint64_t sub_10042842C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100428464()
{
  return sub_100423590(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10042846C(uint64_t a1, uint64_t a2)
{
  return sub_100423934(a1, a2);
}

uint64_t sub_100428478()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000A6F4;
  v3[2] = v2;
  return _swift_task_switch(sub_100423B9C, 0, 0);
}

void sub_100428520(uint64_t a1)
{
  sub_100423D5C(a1, v1);
}

uint64_t sub_100428528()
{
  return sub_100423DD0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100428548()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100428588()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000A6F0;
  v3[2] = v2;
  return _swift_task_switch(sub_1004237C8, 0, 0);
}

uint64_t sub_100428630(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RangingMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004286B8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100973C40);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100973C40);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100428780(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverClientsBundleIDs);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t SDAirDropService.transferObserverClientsBundleIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100428838()
{
  sub_10000A844((uint64_t *)&unk_100974250);
  uint64_t v0 = type metadata accessor for SFAirDropClient.Identifier();
  uint64_t v1 = *(void *)(v0 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10076E7A0;
  uint64_t result = (*(uint64_t (**)(unint64_t, void, uint64_t))(v1 + 104))(v3 + v2, enum case for SFAirDropClient.Identifier.shareSheet(_:), v0);
  qword_100994810 = v3;
  return result;
}

void sub_100428914()
{
  uint64_t v1 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v1 - 8);
  uint64_t v97 = (char *)&v93 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for SFAirDrop.Transfers();
  uint64_t v113 = *(void *)(v3 - 8);
  uint64_t v114 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v94 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v112 = (char *)&v93 - v6;
  uint64_t v101 = sub_10000A844(&qword_100974108);
  uint64_t v100 = *(void *)(v101 - 8);
  uint64_t v7 = __chkstk_darwin(v101);
  uint64_t v96 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = v8;
  __chkstk_darwin(v7);
  unint64_t v115 = (char *)&v93 - v9;
  uint64_t v111 = sub_10000A844(&qword_10096E2B0);
  uint64_t v99 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v110 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_10000A844(&qword_100970968);
  uint64_t v98 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  unint64_t v108 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v105 = *(void (***)(void, void, void))(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v104 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v13);
  uint64_t v103 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_deviceStatus;
  uint64_t v17 = self;
  uint64_t v18 = v0;
  id v19 = [v17 sharedMonitor];
  uint64_t v107 = (uint64_t)v0;
  *(void *)&v0[v16] = v19;
  uint64_t v20 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearbyAgent;
  id v21 = [self sharedNearbyAgent];
  uint64_t v102 = v20;
  *(void *)&v18[v20] = v21;
  uint64_t v22 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_bleController;
  if (qword_10096A050 != -1) {
    swift_once();
  }
  NSDictionary v23 = (void *)qword_100994918;
  uint64_t v93 = v22;
  *(void *)&v18[v22] = qword_100994918;
  *(void *)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nwAgent] = 0;
  *(void *)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverTask] = 0;
  *(void *)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverClientsBundleIDs] = &_swiftEmptySetSingleton;
  *(void *)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferPresenters] = _swiftEmptyArrayStorage;
  uint64_t v24 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_queue;
  sub_10000B740(0, (unint64_t *)&qword_10096A1A0);
  id v25 = v23;
  static DispatchQoS.default.getter();
  *(void *)&long long v118 = _swiftEmptyArrayStorage;
  sub_100436C74((unint64_t *)&unk_100974840, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000A844((uint64_t *)&unk_10096A1B0);
  sub_1002AE308((unint64_t *)&qword_100974850, (uint64_t *)&unk_10096A1B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  ((void (**)(char *, void, uint64_t))v105)[13](v104, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v106);
  uint64_t v26 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v106 = v24;
  *(void *)&v18[v24] = v26;
  uint64_t v27 = v107;
  int v28 = *(void **)(v107 + v16);
  if (!v28)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v29 = v16;
  type metadata accessor for SDAirDropLegacySessionLogger(0);
  swift_allocObject();
  uint64_t v30 = sub_10056D8A0((uint64_t)v28);
  uint64_t v31 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_sessionLogger;
  *(void *)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_sessionLogger] = v30;
  id v32 = objc_allocWithZone((Class)IDSService);
  id v33 = v28;
  NSString v34 = String._bridgeToObjectiveC()();
  id v35 = [v32 initWithService:v34];

  if (!v35)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  type metadata accessor for SDPseudonymNetworkPathMonitor();
  swift_allocObject();
  uint64_t v36 = sub_10053C428();
  os_log_type_t v37 = sub_1004350C4((uint64_t)v35, v36, v33);
  *(void *)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pseudonymService] = v37;
  uint64_t v38 = (objc_class *)type metadata accessor for SDAirDropUISessionManager();
  id v39 = [objc_allocWithZone(v38) init];
  uint64_t v40 = &v18[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_airDropUISessionManager];
  *((void *)v40 + 3) = v38;
  *((void *)v40 + 4) = &off_1008DAA90;
  *(void *)uint64_t v40 = v39;
  id v41 = *(void **)(v27 + v29);
  if (!v41)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v42 = *(void **)&v18[v102];
  if (!v42)
  {
LABEL_13:
    __break(1u);
    return;
  }
  uint64_t v43 = *(void **)&v18[v93];
  uint64_t v44 = *(void *)&v18[v31];
  id v45 = objc_allocWithZone((Class)type metadata accessor for SDAirDropEndpointService());
  id v46 = v41;
  id v47 = v42;
  id v48 = v43;
  uint64_t v105 = (void (**)(void, void, void))v48;
  swift_retain();
  id v49 = sub_10046CF84(v46, v47, v48, v44);
  *(void *)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_endpointService] = v49;
  sub_100278C8C((uint64_t)v40, (uint64_t)&v118);
  type metadata accessor for SDAirDropSendService();
  swift_allocObject();
  id v50 = v46;
  id v51 = v47;
  swift_retain();
  id v52 = v49;
  swift_retain();
  uint64_t v53 = sub_100305030(v50, v51, v44, v52, (uint64_t)v37, &v118);
  swift_release();
  uint64_t v107 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_sendService;
  *(void *)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_sendService] = v53;
  sub_100278C8C((uint64_t)v40, (uint64_t)&v118);
  type metadata accessor for SDAirDropReceiveService();
  swift_allocObject();
  id v54 = v50;
  id v55 = v51;
  unint64_t v56 = v105;
  swift_retain();
  id v57 = v52;
  swift_retain();
  uint64_t v58 = sub_1003690F0(v54, v55, v56, v44, v57, (uint64_t)v37, (uint64_t)&v118);
  uint64_t v59 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_receiveService;
  *(void *)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_receiveService] = v58;
  uint64_t v60 = v106;
  uint64_t v61 = *(void **)&v18[v106];
  sub_100278C8C((uint64_t)v40, (uint64_t)v117);
  sub_100278C8C((uint64_t)v117, (uint64_t)&v118);
  Swift::String v62 = (objc_class *)type metadata accessor for SDAirDropNearFieldService(0);
  id v63 = objc_allocWithZone(v62);
  id v64 = v54;
  id v65 = v61;
  id v66 = sub_1002AD770(v65, (uint64_t)&v118, v64);

  uint64_t v119 = v62;
  uint64_t v120 = &off_1008D4B50;
  *(void *)&long long v118 = v66;
  sub_10024D338((uint64_t)v117);
  sub_1002AF688(&v118, (uint64_t)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService]);
  type metadata accessor for SDTempPairingService();
  swift_allocObject();
  *(void *)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService] = sub_100413EF8();
  sub_10000A844(&qword_100974110);
  AirDropMachServiceName.getter();
  id v67 = *(id *)&v18[v60];
  *(void *)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_xpcListener] = SFXPCListener.__allocating_init(machServiceName:queue:)();
  *(void *)&long long v118 = *(void *)(*(void *)&v18[v59] + 48);
  sub_10000A844(&qword_100970978);
  sub_1002AE308(&qword_100970980, &qword_100970978);
  Publisher<>.values.getter();
  *(void *)&long long v118 = *(void *)(*(void *)&v18[v107] + 16);
  sub_10000A844(&qword_10096E2C0);
  sub_1002AE308(&qword_10096E2C8, &qword_10096E2C0);
  Publisher<>.values.getter();
  sub_1002AE308(&qword_100974118, &qword_100970968);
  sub_1002AE308(&qword_100974120, &qword_10096E2B0);
  static SFAirDrop.Transfers.stream<A, B>(receiveTransferSeq:sendTransfersSeq:)();
  sub_10024698C((uint64_t)_swiftEmptyArrayStorage);
  sub_100245E64((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v68 = v112;
  SFAirDrop.Transfers.init(receiveTransfers:sendTransfers:)();
  (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v94, v68, v114);
  sub_10000A844(&qword_100974128);
  swift_allocObject();
  *(void *)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transfersSubject] = CurrentValueSubject.init(_:)();

  uint64_t v69 = (objc_class *)type metadata accessor for SDAirDropService();
  v116.receiver = v18;
  v116.super_class = v69;
  uint64_t v70 = (char *)[v116 init];
  *(void *)(*(void *)&v70[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_endpointService]
            + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegate
            + 8) = &off_1008DA928;
  swift_unknownObjectWeakAssign();
  *(void *)(*(void *)&v70[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_sendService] + 48) = &off_1008DA968;
  swift_unknownObjectWeakAssign();
  uint64_t v71 = *(void *)&v70[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_receiveService];
  *(void *)(v71 + 64) = &off_1008DA940;
  swift_unknownObjectWeakAssign();
  uint64_t v72 = *(void *)(v71 + 32);
  swift_unknownObjectWeakLoadStrong();
  *(void *)(v72 + 40) = *(void *)(v71 + 64);
  swift_unknownObjectWeakAssign();
  uint64_t v73 = v70;
  swift_unknownObjectRelease();
  uint64_t v74 = (uint64_t)&v73[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService];
  swift_beginAccess();
  uint64_t v75 = *(void *)(v74 + 24);
  uint64_t v76 = *(void *)(v74 + 32);
  sub_1002AF758(v74, v75);
  unint64_t v77 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v76 + 16);
  uint64_t v78 = v73;
  v77(v70, &off_1008DA980, v75, v76);
  swift_endAccess();
  uint64_t v79 = type metadata accessor for TaskPriority();
  uint64_t v80 = (uint64_t)v97;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v97, 1, 1, v79);
  uint64_t v81 = v100;
  uint64_t v82 = v96;
  uint64_t v83 = v101;
  (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v96, v115, v101);
  uint64_t v84 = qword_100969B90;
  uint64_t v85 = v78;
  if (v84 != -1) {
    swift_once();
  }
  uint64_t v86 = static AirDropActor.shared;
  uint64_t v87 = sub_100436C74((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  unint64_t v88 = (*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
  unint64_t v89 = (v95 + v88 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v90 = swift_allocObject();
  *(void *)(v90 + 16) = v86;
  *(void *)(v90 + 24) = v87;
  (*(void (**)(unint64_t, char *, uint64_t))(v81 + 32))(v90 + v88, v82, v83);
  *(void *)(v90 + v89) = v85;
  swift_retain();
  *(void *)&v85[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverTask] = sub_10028CFA8(v80, (uint64_t)&unk_100974138, v90);
  swift_release();
  BOOL v91 = *(void **)&v85[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_xpcListener];
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v92 = v91;
  swift_retain();
  SFXPCListener.didAddConnectionHandler.setter();

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  SFXPCListener.didRemoveConnectionHandler.setter();

  (*(void (**)(char *, uint64_t))(v113 + 8))(v112, v114);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v115, v83);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v110, v111);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v108, v109);
  swift_release();
}

uint64_t sub_1004298A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  uint64_t v6 = type metadata accessor for SFAirDrop.Transfers();
  v5[5] = v6;
  v5[6] = *(void *)(v6 - 8);
  v5[7] = swift_task_alloc();
  sub_10000A844(&qword_100974140);
  v5[8] = swift_task_alloc();
  uint64_t v7 = sub_10000A844(&qword_100974148);
  v5[9] = v7;
  v5[10] = *(void *)(v7 - 8);
  v5[11] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v8 = static AirDropActor.shared;
  v5[12] = static AirDropActor.shared;
  return _swift_task_switch(sub_100429A2C, v8, 0);
}

uint64_t sub_100429A2C()
{
  sub_10000A844(&qword_100974108);
  SFNoThrowAsyncSequence.makeAsyncIterator()();
  uint64_t v1 = static AirDropActor.shared;
  v0[13] = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transfersSubject;
  v0[14] = v1;
  v0[15] = sub_100436C74((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v2 = sub_1002AE308(&qword_100974150, &qword_100974148);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100429B64;
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[9];
  return dispatch thunk of AsyncIteratorProtocol.next()(v4, v5, v2);
}

uint64_t sub_100429B64()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    if (*(void *)(v2 + 112))
    {
      swift_getObjectType();
      uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v5 = v4;
    }
    else
    {
      uint64_t v3 = 0;
      uint64_t v5 = 0;
    }
    uint64_t v7 = sub_100429EB4;
    uint64_t v6 = v3;
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 96);
    uint64_t v7 = sub_100429CBC;
    uint64_t v5 = 0;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100429CBC()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[7], v1, v2);
    CurrentValueSubject.value.setter();
    v0[14] = static AirDropActor.shared;
    v0[15] = sub_100436C74((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v6 = sub_1002AE308(&qword_100974150, &qword_100974148);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[16] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100429B64;
    uint64_t v8 = v0[8];
    uint64_t v9 = v0[9];
    return dispatch thunk of AsyncIteratorProtocol.next()(v8, v9, v6);
  }
}

uint64_t sub_100429EB4()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 136);
  sub_10000A844(&qword_10096BAF0);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

void sub_100429F38(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_1004369A4(a1);
  }
}

void sub_100429F94(unsigned int (*a1)(uint64_t, uint64_t, uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_10042A540(a1);
  }
}

uint64_t sub_10042A014()
{
  uint64_t v1 = v0;
  if (qword_100969DF8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_100973C40);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Starting AirDrop Service", v5, 2u);
    swift_slowDealloc();
  }

  *(void *)(swift_allocObject() + 16) = v1;
  uint64_t v6 = v1;
  SFXPCListener.contextProvider.setter();
  SFXPCListener.resume()();
  id v7 = [objc_allocWithZone((Class)SDAirDropAgent) initWithEndpointService:*(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_endpointService]];
  uint64_t v8 = *(void **)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nwAgent];
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nwAgent] = v7;

  sub_100300998();
  sub_1003695CC();
  uint64_t v9 = (uint64_t)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService];
  swift_beginAccess();
  sub_100278C8C(v9, (uint64_t)v13);
  uint64_t v10 = v14;
  uint64_t v11 = v15;
  sub_10026BB6C(v13, v14);
  (*(void (**)(uint64_t, uint64_t))(v11 + 40))(v10, v11);
  return sub_10024D338((uint64_t)v13);
}

uint64_t sub_10042A208()
{
  uint64_t v1 = v0;
  if (qword_100969DF8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_100973C40);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Stopping AirDrop Service", v5, 2u);
    swift_slowDealloc();
  }

  SFXPCListener.invalidate()();
  SFXPCListener.contextProvider.setter();
  if (qword_100969D08 != -1) {
    swift_once();
  }
  sub_10000B47C(v2, (uint64_t)qword_100970808);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "SDAirDropReceiveService stop", v8, 2u);
    swift_slowDealloc();
  }

  sub_10036FF70();
  if (qword_100969B80 != -1) {
    swift_once();
  }
  sub_10000B47C(v2, (uint64_t)qword_10096E1A0);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "SDAirDropSendService stop", v11, 2u);
    swift_slowDealloc();
  }

  uint64_t v12 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess();
  sub_100278C8C(v12, (uint64_t)v17);
  uint64_t v13 = v18;
  uint64_t v14 = v19;
  sub_10026BB6C(v17, v18);
  (*(void (**)(uint64_t, uint64_t))(v14 + 48))(v13, v14);
  sub_10024D338((uint64_t)v17);
  uint64_t v15 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverTask;
  if (*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverTask))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  *(void *)(v1 + v15) = 0;
  return swift_release();
}

uint64_t sub_10042A540(unsigned int (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = type metadata accessor for SDAirDropService.TransferPresenterClient();
  uint64_t v72 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v59 = (uint64_t)v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_10000A844(&qword_10096C4F0);
  __chkstk_darwin(v76);
  uint64_t v77 = (uint64_t)v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000A844(&qword_100974EA0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v70 = (uint64_t)v58 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v69 = (uint64_t)v58 - v12;
  __chkstk_darwin(v11);
  uint64_t v73 = (void (**)(uint64_t, char *, uint64_t))((char *)v58 - v13);
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v62 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  id v63 = (char *)v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v66 = (char *)v58 - v17;
  uint64_t v18 = type metadata accessor for SFClientIdentity();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v21 = (char *)v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100969DF8 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_10000B47C(v22, (uint64_t)qword_100973C40);
  NSDictionary v23 = *(void (**)(char *, unsigned int (*)(uint64_t, uint64_t, uint64_t), uint64_t))(v19 + 16);
  uint64_t v74 = a1;
  v23(v21, a1, v18);
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  BOOL v26 = os_log_type_enabled(v24, v25);
  id v67 = v8;
  if (v26)
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    v79[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136315138;
    uint64_t v71 = v27 + 4;
    sub_100436C74(&qword_10096C510, (void (*)(uint64_t))&type metadata accessor for SFClientIdentity);
    uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v78 = sub_100254634(v28, v29, v79);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Removing AirDrop Client %s", v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }

  uint64_t v30 = v75;
  uint64_t v31 = v75 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess();
  sub_100278C8C(v31, (uint64_t)v79);
  uint64_t v32 = v80;
  uint64_t v33 = v81;
  sub_10026BB6C(v79, v80);
  (*(void (**)(unsigned int (*)(uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(v33 + 136))(v74, v32, v33);
  sub_10024D338((uint64_t)v79);
  uint64_t v34 = SFClientIdentity.bundleIdentifier.getter();
  uint64_t v36 = v66;
  uint64_t v37 = v70;
  if (v35)
  {
    uint64_t v38 = v34;
    uint64_t v39 = v35;
    swift_beginAccess();
    sub_1005A1914(v38, v39);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v40 = (uint64_t)v73;
  SFClientIdentity.connectionID.getter();
  uint64_t v41 = v62;
  id v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
  uint64_t v68 = v62 + 48;
  if (v42(v40, 1, v14) == 1) {
    return sub_10000A7E8(v40, &qword_100974EA0);
  }
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 32);
  uint64_t v61 = v41 + 32;
  uint64_t v60 = v44;
  v44(v36, v40, v14);
  id v45 = (uint64_t *)(v30 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferPresenters);
  swift_beginAccess();
  uint64_t v46 = *v45;
  uint64_t v75 = *(void *)(*v45 + 16);
  if (!v75) {
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v36, v14);
  }
  uint64_t v74 = v42;
  v58[1] = v45;
  uint64_t v47 = v46 + ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80));
  id v48 = *(uint8_t **)(v72 + 72);
  uint64_t v73 = (void (**)(uint64_t, char *, uint64_t))(v41 + 16);
  uint64_t v71 = v48;
  uint64_t v72 = v41 + 56;
  id v65 = (void (**)(uint64_t, uint64_t))(v41 + 8);
  v58[2] = v46;
  swift_bridgeObjectRetain();
  unint64_t v49 = 0;
  uint64_t v50 = v69;
  while (1)
  {
    SFClientIdentity.connectionID.getter();
    (*v73)(v37, v36, v14);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))v72)(v37, 0, 1, v14);
    uint64_t v51 = v77;
    uint64_t v52 = v77 + *(int *)(v76 + 48);
    sub_10043661C(v50, v77);
    sub_10043661C(v37, v52);
    uint64_t v53 = v74;
    if (v74(v51, 1, v14) == 1) {
      break;
    }
    uint64_t v54 = (uint64_t)v67;
    sub_10043661C(v77, (uint64_t)v67);
    if (v53(v52, 1, v14) == 1)
    {
      uint64_t v37 = v70;
      sub_10000A7E8(v70, &qword_100974EA0);
      uint64_t v50 = v69;
      sub_10000A7E8(v69, &qword_100974EA0);
      (*v65)(v54, v14);
      goto LABEL_13;
    }
    id v55 = v63;
    v60(v63, v52, v14);
    sub_100436C74((unint64_t *)&unk_10096D460, (void (*)(uint64_t))&type metadata accessor for UUID);
    int v64 = dispatch thunk of static Equatable.== infix(_:_:)();
    unint64_t v56 = *v65;
    (*v65)((uint64_t)v55, v14);
    uint64_t v37 = v70;
    sub_10000A7E8(v70, &qword_100974EA0);
    uint64_t v50 = v69;
    sub_10000A7E8(v69, &qword_100974EA0);
    v56(v54, v14);
    uint64_t v36 = v66;
    sub_10000A7E8(v77, &qword_100974EA0);
    if (v64) {
      goto LABEL_23;
    }
LABEL_14:
    ++v49;
    v47 += (uint64_t)v71;
    if (v75 == v49)
    {
      swift_bridgeObjectRelease();
      uint64_t v41 = v62;
      return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v36, v14);
    }
  }
  sub_10000A7E8(v37, &qword_100974EA0);
  sub_10000A7E8(v50, &qword_100974EA0);
  if (v53(v52, 1, v14) != 1)
  {
LABEL_13:
    sub_10000A7E8(v77, &qword_10096C4F0);
    goto LABEL_14;
  }
  sub_10000A7E8(v77, &qword_100974EA0);
LABEL_23:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v57 = v59;
  sub_1002A6DF4(v49, v59);
  sub_100436684(v57);
  swift_endAccess();
  return ((uint64_t (*)(char *, uint64_t))*v65)(v36, v14);
}

void sub_10042AF3C(uint64_t a1, uint8_t *a2, double a3, double a4, double a5, double a6)
{
  v151 = a2;
  uint64_t v134 = a1;
  uint64_t v128 = type metadata accessor for SFClientIdentity();
  uint64_t v10 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  uint64_t v145 = (char *)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = type metadata accessor for SDAirDropService.TransferPresenterClient();
  uint64_t v127 = *(void *)(v126 - 8);
  uint64_t v12 = __chkstk_darwin(v126);
  uint64_t v122 = (uint64_t)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v123 = (char *)&v115 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  Swift::Int v121 = (char *)&v115 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v119 = (uint64_t)&v115 - v19;
  __chkstk_darwin(v18);
  uint64_t v120 = (char *)&v115 - v20;
  uint64_t v146 = sub_10000A844(&qword_10096C4F0);
  __chkstk_darwin(v146);
  uint64_t v22 = (char *)&v115 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10000A844(&qword_100974EA0);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v138 = (uint64_t)&v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v115 - v27;
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v31 = (char *)&v115 - v30;
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v115 - v32;
  uint64_t v148 = type metadata accessor for UUID();
  uint64_t v132 = *(void *)(v148 - 8);
  uint64_t v34 = __chkstk_darwin(v148);
  Swift::Int v131 = (char *)&v115 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v141 = (char *)&v115 - v37;
  __chkstk_darwin(v36);
  uint64_t v39 = ((char *)&v115 - v38);
  if (qword_100969E00 != -1) {
    swift_once();
  }
  uint64_t v40 = qword_100994810;
  uint64_t v41 = *(void *)(qword_100994810 + 16);
  uint64_t v129 = v10;
  if (v41)
  {
    os_log_t v147 = v39;
    uint64_t v42 = *(void *)(type metadata accessor for SFAirDropClient.Identifier() - 8);
    unint64_t v43 = v40 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
    uint64_t v44 = *(void *)(v42 + 72);
    swift_bridgeObjectRetain();
    while ((static SFAirDropClient.Identifier.== infix(_:_:)() & 1) == 0)
    {
      v43 += v44;
      if (!--v41)
      {
        swift_bridgeObjectRelease();
        uint64_t v10 = v129;
        uint64_t v39 = v147;
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    if (qword_100969DF8 != -1) {
      swift_once();
    }
    uint64_t v69 = type metadata accessor for Logger();
    sub_10000B47C(v69, (uint64_t)qword_100973C40);
    uint64_t v50 = Logger.logObject.getter();
    os_log_type_t v70 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v50, v70))
    {
      uint64_t v71 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v71 = 0;
      _os_log_impl((void *)&_mh_execute_header, v50, v70, "Unsupported client for presenter", v71, 2u);
      swift_slowDealloc();
    }
LABEL_21:

    return;
  }
LABEL_8:
  SFClientIdentity.connectionID.getter();
  uint64_t v45 = v132;
  uint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v132 + 48);
  uint64_t v137 = v132 + 48;
  if (v46(v33, 1, v148) == 1)
  {
    sub_10000A7E8((uint64_t)v33, &qword_100974EA0);
    if (qword_100969DF8 != -1) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    sub_10000B47C(v47, (uint64_t)qword_100973C40);
    id v48 = v145;
    uint64_t v49 = v128;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v145, v134, v128);
    uint64_t v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      uint64_t v150 = swift_slowAlloc();
      *(_DWORD *)uint64_t v52 = 136315138;
      v151 = v52 + 4;
      sub_100436C74(&qword_10096C510, (void (*)(uint64_t))&type metadata accessor for SFClientIdentity);
      uint64_t v53 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v149 = sub_100254634(v53, v54, &v150);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v48, v49);
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "No connectionID present - %s", v52, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v48, v49);
    }
    goto LABEL_21;
  }
  uint64_t v145 = (char *)v46;
  id v55 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 32);
  uint64_t v125 = v45 + 32;
  uint64_t v124 = v55;
  v55((char *)v39, (uint64_t)v33, v148);
  if (qword_100969DF8 != -1) {
    swift_once();
  }
  uint64_t v56 = type metadata accessor for Logger();
  uint64_t v57 = sub_10000B47C(v56, (uint64_t)qword_100973C40);
  uint64_t v58 = v141;
  uint64_t v143 = *(void (**)(char *, NSObject *, uint64_t))(v45 + 16);
  uint64_t v144 = v45 + 16;
  v143(v141, v39, v148);
  uint64_t v117 = v57;
  uint64_t v59 = Logger.logObject.getter();
  os_log_type_t v60 = static os_log_type_t.default.getter();
  int v61 = v60;
  if (os_log_type_enabled(v59, v60))
  {
    os_log_t v147 = v59;
    uint64_t v62 = swift_slowAlloc();
    LODWORD(v139) = v61;
    id v63 = (uint8_t *)v62;
    uint64_t v140 = swift_slowAlloc();
    uint64_t v150 = v140;
    uint64_t v135 = v63;
    *(_DWORD *)id v63 = 136315138;
    uint64_t v136 = (void (*)(char *, uint64_t))(v63 + 4);
    sub_100436C74((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v64 = v148;
    uint64_t v65 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v149 = sub_100254634(v65, v66, &v150);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v67 = v64;
    uint64_t v10 = v129;
    uint64_t v136 = *(void (**)(char *, uint64_t))(v45 + 8);
    v136(v58, v67);
    os_log_t v68 = v147;
    _os_log_impl((void *)&_mh_execute_header, v147, (os_log_type_t)v139, "Becoming presenter for connectionID %s", v135, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v45 = v132;
  }
  else
  {
    uint64_t v136 = *(void (**)(char *, uint64_t))(v45 + 8);
    v136(v58, v148);
  }
  uint64_t v72 = (unint64_t *)(v142 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferPresenters);
  swift_beginAccess();
  long long v118 = v72;
  uint64_t v73 = *v72;
  uint64_t v142 = *(void *)(*v72 + 16);
  if (!v142)
  {
LABEL_35:
    uint64_t v87 = (uint64_t)v123;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v123, v134, v128);
    uint64_t v88 = v126;
    uint64_t v89 = v87 + *(int *)(v126 + 20);
    uint64_t v90 = type metadata accessor for SFAirDropClient.Identifier();
    (*(void (**)(uint64_t, uint8_t *, uint64_t))(*(void *)(v90 - 8) + 16))(v89, v151, v90);
    BOOL v91 = (double *)(v87 + *(int *)(v88 + 24));
    *BOOL v91 = a3;
    v91[1] = a4;
    v91[2] = a5;
    v91[3] = a6;
    uint64_t v92 = v122;
    sub_100436CBC(v87, v122);
    uint64_t v93 = v118;
    swift_beginAccess();
    unint64_t v94 = *v93;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v93 = v94;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v94 = sub_100254228(0, *(void *)(v94 + 16) + 1, 1, v94);
      *uint64_t v93 = v94;
    }
    unint64_t v97 = *(void *)(v94 + 16);
    unint64_t v96 = *(void *)(v94 + 24);
    if (v97 >= v96 >> 1)
    {
      unint64_t v94 = sub_100254228(v96 > 1, v97 + 1, 1, v94);
      *uint64_t v93 = v94;
    }
    *(void *)(v94 + 16) = v97 + 1;
    sub_100436D20(v92, v94+ ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80))+ *(void *)(v127 + 72) * v97);
    swift_endAccess();
    sub_100436684(v87);
    v136((char *)v39, v148);
    return;
  }
  os_log_t v147 = v39;
  unint64_t v74 = (*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80);
  uint64_t v139 = *(void *)(v127 + 72);
  uint64_t v141 = (char *)(v45 + 56);
  uint64_t v135 = (uint8_t *)(v45 + 8);
  swift_bridgeObjectRetain();
  unint64_t v75 = 0;
  unint64_t v116 = v74;
  uint64_t v140 = v73;
  uint64_t v133 = v22;
  while (1)
  {
    SFClientIdentity.connectionID.getter();
    uint64_t v78 = v148;
    v143(v28, v147, v148);
    (*(void (**)(char *, void, uint64_t, uint64_t))v141)(v28, 0, 1, v78);
    uint64_t v79 = (uint64_t)&v22[*(int *)(v146 + 48)];
    sub_10043661C((uint64_t)v31, (uint64_t)v22);
    sub_10043661C((uint64_t)v28, v79);
    uint64_t v80 = v145;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v145)(v22, 1, v78) == 1) {
      break;
    }
    uint64_t v81 = (uint64_t)v22;
    uint64_t v82 = v148;
    uint64_t v83 = v138;
    sub_10043661C(v81, v138);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v80)(v79, 1, v82) == 1)
    {
      sub_10000A7E8((uint64_t)v28, &qword_100974EA0);
      sub_10000A7E8((uint64_t)v31, &qword_100974EA0);
      v136((char *)v83, v82);
      uint64_t v22 = v133;
      goto LABEL_27;
    }
    uint64_t v84 = v131;
    v124(v131, v79, v82);
    sub_100436C74((unint64_t *)&unk_10096D460, (void (*)(uint64_t))&type metadata accessor for UUID);
    int v130 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v85 = v84;
    uint64_t v86 = (void (*)(uint64_t, uint64_t))v136;
    v136(v85, v82);
    sub_10000A7E8((uint64_t)v28, &qword_100974EA0);
    sub_10000A7E8((uint64_t)v31, &qword_100974EA0);
    v86(v83, v82);
    uint64_t v22 = v133;
    sub_10000A7E8((uint64_t)v133, &qword_100974EA0);
    uint64_t v77 = v140;
    if (v130) {
      goto LABEL_41;
    }
LABEL_28:
    ++v75;
    v74 += v139;
    if (v142 == v75)
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = v129;
      uint64_t v39 = v147;
      goto LABEL_35;
    }
  }
  sub_10000A7E8((uint64_t)v28, &qword_100974EA0);
  sub_10000A7E8((uint64_t)v31, &qword_100974EA0);
  unsigned int v76 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v80)(v79, 1, v148);
  uint64_t v77 = v140;
  if (v76 != 1)
  {
LABEL_27:
    sub_10000A7E8((uint64_t)v22, &qword_10096C4F0);
    goto LABEL_28;
  }
  sub_10000A7E8((uint64_t)v22, &qword_100974EA0);
LABEL_41:
  swift_bridgeObjectRelease();
  uint64_t v98 = Logger.logObject.getter();
  os_log_type_t v99 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v98, v99))
  {
    uint64_t v100 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v100 = 0;
    _os_log_impl((void *)&_mh_execute_header, v98, v99, "Presenter already exists, becoming first presenter", v100, 2u);
    swift_slowDealloc();
  }

  uint64_t v101 = (NSObject **)v118;
  if (v75 >= *(void *)(*v118 + 16))
  {
    __break(1u);
  }
  else
  {
    unint64_t v102 = *v118 + v74;
    uint64_t v77 = (uint64_t)v120;
    (*(void (**)(char *, unint64_t, uint64_t))(v129 + 16))(v120, v102, v128);
    uint64_t v103 = v126;
    uint64_t v104 = *(int *)(v126 + 20);
    uint64_t v105 = v102 + v104;
    uint64_t v106 = v77 + v104;
    uint64_t v107 = type metadata accessor for SFAirDropClient.Identifier();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 16))(v106, v105, v107);
    unint64_t v108 = (double *)(v77 + *(int *)(v103 + 24));
    *unint64_t v108 = a3;
    v108[1] = a4;
    v108[2] = a5;
    v108[3] = a6;
    swift_beginAccess();
    uint64_t v109 = v119;
    sub_1002A6DF4(v75, v119);
    sub_100436684(v109);
    uint64_t v31 = v121;
    sub_100436CBC(v77, (uint64_t)v121);
    uint64_t v98 = *v101;
    char v110 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v101 = v98;
    if (v110) {
      goto LABEL_45;
    }
  }
  uint64_t v98 = sub_100254228(0, (int64_t)v98[2].isa + 1, 1, (unint64_t)v98);
  *long long v118 = (unint64_t)v98;
LABEL_45:
  os_log_t v111 = v147;
  unint64_t v112 = v116;
  unint64_t isa = (unint64_t)v98[2].isa;
  unint64_t v113 = (unint64_t)v98[3].isa;
  if (isa >= v113 >> 1)
  {
    uint64_t v98 = sub_100254228(v113 > 1, isa + 1, 1, (unint64_t)v98);
    *long long v118 = (unint64_t)v98;
  }
  v98[2].unint64_t isa = (Class)(isa + 1);
  sub_100436D20((uint64_t)v31, (uint64_t)v98 + v112 + isa * v139);
  swift_endAccess();
  sub_100436684(v77);
  v136((char *)v111, v148);
}

void sub_10042C0C0(uint64_t a1)
{
  uint64_t v86 = type metadata accessor for SFClientIdentity();
  uint64_t v84 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v83 = (char *)v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for SDAirDropService.TransferPresenterClient();
  uint64_t v81 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  uint64_t v68 = (uint64_t)v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_10000A844(&qword_10096C4F0);
  __chkstk_darwin(v85);
  uint64_t v6 = (char *)v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A844(&qword_100974EA0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v79 = (uint64_t)v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v67 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v87 = (uint8_t *)v67 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v67 - v15;
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  os_log_type_t v70 = (char *)v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v73 = (char *)v67 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)v67 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)v67 - v26;
  SFClientIdentity.connectionID.getter();
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  uint64_t v75 = v18 + 48;
  if (v28(v16, 1, v17) == 1)
  {
    sub_10000A7E8((uint64_t)v16, &qword_100974EA0);
    if (qword_100969DF8 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_10000B47C(v29, (uint64_t)qword_100973C40);
    uint64_t v30 = v83;
    uint64_t v31 = v84;
    uint64_t v32 = v86;
    (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v83, a1, v86);
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      v89[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315138;
      uint64_t v87 = v35 + 4;
      sub_100436C74(&qword_10096C510, (void (*)(uint64_t))&type metadata accessor for SFClientIdentity);
      uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
      v88[0] = sub_100254634(v36, v37, v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v32);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "No connectionID present - %s", v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v32);
    }

    return;
  }
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 32);
  uint64_t v72 = v18 + 32;
  uint64_t v71 = v38;
  v38(v27, (uint64_t)v16, v17);
  if (qword_100969DF8 != -1) {
    swift_once();
  }
  uint64_t v39 = type metadata accessor for Logger();
  uint64_t v40 = sub_10000B47C(v39, (uint64_t)qword_100973C40);
  uint64_t v41 = *(char **)(v18 + 16);
  uint64_t v86 = (uint64_t)v27;
  uint64_t v83 = v41;
  uint64_t v84 = v18 + 16;
  ((void (*)(char *, char *, uint64_t))v41)(v25, v27, v17);
  uint64_t v69 = v40;
  uint64_t v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v42, v43))
  {
    os_log_t v80 = v42;
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    uint64_t v78 = (void (*)(char *, uint64_t))swift_slowAlloc();
    v89[0] = (uint64_t)v78;
    uint64_t v77 = v44;
    *(_DWORD *)uint64_t v44 = 136315138;
    unint64_t v74 = v44 + 4;
    sub_100436C74((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter();
    v88[0] = sub_100254634(v45, v46, v89);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v47 = *(void (**)(char *, uint64_t))(v18 + 8);
    v47(v25, v17);
    uint64_t v42 = v80;
    _os_log_impl((void *)&_mh_execute_header, v80, v43, "Resigning presenter for connectionID %s", v77, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v47 = *(void (**)(char *, uint64_t))(v18 + 8);
    v47(v25, v17);
  }

  id v48 = (uint64_t *)(v82 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferPresenters);
  swift_beginAccess();
  uint64_t v49 = *v48;
  uint64_t v82 = *(void *)(*v48 + 16);
  v67[3] = v18;
  if (!v82)
  {
LABEL_24:
    uint64_t v59 = v70;
    uint64_t v60 = v86;
    ((void (*)(char *, uint64_t, uint64_t))v83)(v70, v86, v17);
    int v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v61, v62))
    {
      id v63 = (uint8_t *)swift_slowAlloc();
      v88[0] = swift_slowAlloc();
      uint64_t v78 = v47;
      *(_DWORD *)id v63 = 136315138;
      sub_100436C74((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v64 = dispatch thunk of CustomStringConvertible.description.getter();
      v89[5] = sub_100254634(v64, v65, v88);
      uint64_t v60 = v86;
      uint64_t v47 = v78;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v47(v59, v17);
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "No existing transfer presenter for connectionID %s", v63, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v47(v59, v17);
    }

    v47((char *)v60, v17);
    return;
  }
  v67[1] = v48;
  uint64_t v50 = v49 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
  os_log_t v80 = *(os_log_t *)(v81 + 72);
  uint64_t v81 = v18 + 56;
  uint64_t v77 = (uint8_t *)(v18 + 8);
  uint64_t v78 = v47;
  v67[2] = v49;
  swift_bridgeObjectRetain();
  unint64_t v51 = 0;
  unsigned int v76 = v28;
  while (1)
  {
    uint64_t v52 = (uint64_t)v87;
    SFClientIdentity.connectionID.getter();
    ((void (*)(char *, uint64_t, uint64_t))v83)(v12, v86, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))v81)(v12, 0, 1, v17);
    uint64_t v53 = (uint64_t)&v6[*(int *)(v85 + 48)];
    sub_10043661C(v52, (uint64_t)v6);
    sub_10043661C((uint64_t)v12, v53);
    if (v28(v6, 1, v17) == 1) {
      break;
    }
    uint64_t v54 = v79;
    sub_10043661C((uint64_t)v6, v79);
    if (v28((char *)v53, 1, v17) == 1)
    {
      sub_10000A7E8((uint64_t)v12, &qword_100974EA0);
      sub_10000A7E8((uint64_t)v87, &qword_100974EA0);
      v78((char *)v54, v17);
      uint64_t v28 = v76;
      goto LABEL_16;
    }
    id v55 = v73;
    v71(v73, v53, v17);
    sub_100436C74((unint64_t *)&unk_10096D460, (void (*)(uint64_t))&type metadata accessor for UUID);
    LODWORD(v74) = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v56 = v17;
    uint64_t v57 = v17;
    uint64_t v58 = (void (*)(uint64_t, uint64_t))v78;
    v78(v55, v56);
    sub_10000A7E8((uint64_t)v12, &qword_100974EA0);
    sub_10000A7E8((uint64_t)v87, &qword_100974EA0);
    v58(v54, v57);
    uint64_t v17 = v57;
    sub_10000A7E8((uint64_t)v6, &qword_100974EA0);
    uint64_t v28 = v76;
    if (v74) {
      goto LABEL_29;
    }
LABEL_17:
    ++v51;
    v50 += (uint64_t)v80;
    if (v82 == v51)
    {
      swift_bridgeObjectRelease();
      uint64_t v47 = v78;
      goto LABEL_24;
    }
  }
  sub_10000A7E8((uint64_t)v12, &qword_100974EA0);
  sub_10000A7E8((uint64_t)v87, &qword_100974EA0);
  if (v28((char *)v53, 1, v17) != 1)
  {
LABEL_16:
    sub_10000A7E8((uint64_t)v6, &qword_10096C4F0);
    goto LABEL_17;
  }
  sub_10000A7E8((uint64_t)v6, &qword_100974EA0);
LABEL_29:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v66 = v68;
  sub_1002A6DF4(v51, v68);
  sub_100436684(v66);
  swift_endAccess();
  v78((char *)v86, v17);
}

uint64_t sub_10042CDA8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844(&qword_100974228);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = SFClientIdentity.bundleIdentifier.getter();
  if (v7)
  {
    Swift::Int v8 = v6;
    Swift::Int v9 = v7;
    swift_beginAccess();
    sub_100596448(&v12, v8, v9);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  v11[1] = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transfersSubject);
  sub_10000A844(&qword_100974128);
  sub_1002AE308(&qword_100974230, &qword_100974128);
  Publisher<>.values.getter();
  sub_1002AE308(&qword_100974238, &qword_100974228);
  sub_100436C74(&qword_100974240, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.Transfers);
  sub_100436C74(&qword_100974248, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.Transfers);
  AsyncSequence<>.xpc.getter();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t SDAirDropService.description.getter()
{
  type metadata accessor for SFAirDropUserDefaults();
  uint64_t v0 = (void *)static SFAirDropUserDefaults.shared.getter();
  uint64_t v1 = SFAirDropUserDefaults.description.getter();

  return v1;
}

id SDAirDropService.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDAirDropService();
  return [super dealloc];
}

uint64_t type metadata accessor for SDAirDropService()
{
  return self;
}

uint64_t sub_10042D258@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SFPlatform();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Int v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferPresenters);
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v10 = v9 - 1;
    uint64_t v11 = type metadata accessor for SDAirDropService.TransferPresenterClient();
    unint64_t v12 = v8
        + ((*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80))
        + *(void *)(*(void *)(v11 - 8) + 72) * v10
        + *(int *)(v11 + 20);
    uint64_t v13 = type metadata accessor for SFAirDropClient.Identifier();
    return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a1, v12, v13);
  }
  else
  {
    static SFPlatform.iOS.getter();
    char v15 = static SFPlatform.isPlatform(_:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v16 = type metadata accessor for SFAirDropClient.Identifier();
    if (v15) {
      uint64_t v17 = (unsigned int *)&enum case for SFAirDropClient.Identifier.airdropUI(_:);
    }
    else {
      uint64_t v17 = (unsigned int *)&enum case for SFAirDropClient.Identifier.daemon(_:);
    }
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v16 - 8) + 104))(a1, *v17, v16);
  }
}

uint64_t SFAirDropInvocations.Send.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_10096C7C0);
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  return _swift_task_switch(sub_10042D524, 0, 0);
}

uint64_t sub_10042D524()
{
  SFClientIdentity.bundleIdentifier.getter();
  v0[9] = v1;
  objc_super v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  *objc_super v2 = v0;
  v2[1] = sub_10042D5F0;
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[3];
  return sub_100300C1C(v3, v4);
}

uint64_t sub_10042D5F0()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    objc_super v2 = sub_10042D820;
  }
  else
  {
    swift_bridgeObjectRelease();
    objc_super v2 = sub_10042D70C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10042D70C()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  sub_100436C74(&qword_100973C70, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Transfer);
  sub_100436C74(&qword_100973C78, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Transfer);
  SFProgressTask<>.xpc.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10042D820()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10042D88C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_100974220, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.Send);
  *char v15 = v14;
  v15[1] = sub_100436D84;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10042D9C0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_10096C7C0);
  v4[5] = v6;
  v4[6] = *(void *)(v6 - 8);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = *a3;
  v4[7] = v7;
  v4[8] = v8;
  return _swift_task_switch(sub_10042DA90, 0, 0);
}

uint64_t sub_10042DA90()
{
  SFClientIdentity.bundleIdentifier.getter();
  v0[9] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10042DB60;
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[3];
  return sub_100300C1C(v3, v4);
}

uint64_t sub_10042DB60()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10042DD90;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_10042DC7C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10042DC7C()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  sub_100436C74(&qword_100973C70, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Transfer);
  sub_100436C74(&qword_100973C78, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Transfer);
  SFProgressTask<>.xpc.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10042DD90()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t SFAirDropInvocations.Cancel.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  return _swift_task_switch(sub_10042DE24, 0, 0);
}

uint64_t sub_10042DE24()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  void *v1 = v0;
  v1[1] = sub_10042DEC8;
  uint64_t v2 = *(void *)(v0 + 40);
  return sub_100303E9C(v2);
}

uint64_t sub_10042DEC8()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10042E154;
  }
  else {
    uint64_t v2 = sub_10042DFDC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10042DFDC()
{
  VoidResponse.init()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10042E040()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10042E3A8;
  }
  else {
    uint64_t v2 = sub_100436D8C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10042E154()
{
  if (qword_100969DF8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[11] = sub_10000B47C(v1, (uint64_t)qword_100973C40);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Send cancel failed %@, attempting receive cancel with same transferID", v4, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = (void *)swift_task_alloc();
  v0[9] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_10042E040;
  uint64_t v8 = v0[5];
  return sub_1003698E0(v8);
}

uint64_t sub_10042E3A8()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Receive cancel failed %@", v3, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v6 = type metadata accessor for SFAirDropReceive.Failure();
  sub_100436C74(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v6 - 8) + 104))(v7, enum case for SFAirDropReceive.Failure.badRequest(_:), v6);
  swift_willThrow();
  swift_errorRelease();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_10042E5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_100974218, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.Cancel);
  *char v15 = v14;
  v15[1] = sub_100436D84;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10042E72C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[5] = a2;
  v7[6] = v6;
  v7[4] = a1;
  return _swift_task_switch(sub_10042DE24, 0, 0);
}

uint64_t SFAirDropInvocations.FetchUserDefaults.invoke(with:context:client:)()
{
  type metadata accessor for SFAirDropUserDefaults();
  uint64_t v0 = (void *)static SFAirDropUserDefaults.shared.getter();
  uint64_t v1 = SFAirDropUserDefaults.userDefaultDescriptions.getter();

  return v1;
}

uint64_t sub_10042E844()
{
  return _AnySFXPCSyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlockContainer:responseAsyncSequenceContainer:responseXPCBlockContainer:)();
}

void sub_10042E90C(uint64_t *a1@<X8>)
{
  type metadata accessor for SFAirDropUserDefaults();
  uint64_t v3 = (void *)static SFAirDropUserDefaults.shared.getter();
  uint64_t v4 = SFAirDropUserDefaults.userDefaultDescriptions.getter();

  if (!v1) {
    *a1 = v4;
  }
}

uint64_t SFAirDropInvocations.FetchEndpointMetadata.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_10042E994, 0, 0);
}

uint64_t sub_10042E994()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  void *v1 = v0;
  v1[1] = sub_10042EA38;
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  return sub_10046C5C4(v2, v3);
}

uint64_t sub_10042EA38()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10042EB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_100974208, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.FetchEndpointMetadata);
  *char v15 = v14;
  v15[1] = sub_100436D84;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10042EC64(uint64_t a1, uint64_t a2, void *a3)
{
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *a3;
  return _swift_task_switch(sub_10042E994, 0, 0);
}

uint64_t SFAirDropInvocations.BecomeTransferPresenter.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = type metadata accessor for SFAirDropClient.Identifier();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  return _swift_task_switch(sub_10042ED50, 0, 0);
}

uint64_t sub_10042ED50()
{
  SFAirDropInvocations.BecomeTransferPresenter.Parameters.clientIdentifier.getter();
  SFAirDropInvocations.BecomeTransferPresenter.Parameters.animationRect.getter();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  v0[9] = v8;
  v0[10] = v6;
  v0[11] = v4;
  v0[12] = v2;
  uint64_t v9 = static AirDropActor.shared;
  return _swift_task_switch(sub_10042EE20, v9, 0);
}

uint64_t sub_10042EE20()
{
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v1 = *(uint8_t **)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 48);
  sub_10042AF3C(*(void *)(v0 + 40), v1, *(double *)(v0 + 96), *(double *)(v0 + 88), *(double *)(v0 + 80), *(double *)(v0 + 72));
  (*(void (**)(uint8_t *, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_10042EEC4, 0, 0);
}

uint64_t sub_10042EEC4()
{
  VoidResponse.init()();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10042EF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_100974200, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BecomeTransferPresenter);
  *char v15 = v14;
  v15[1] = sub_100436D84;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10042F068(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  uint64_t v6 = type metadata accessor for SFAirDropClient.Identifier();
  v4[5] = v6;
  v4[6] = *(void *)(v6 - 8);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = *a3;
  v4[7] = v7;
  v4[8] = v8;
  return _swift_task_switch(sub_10042F134, 0, 0);
}

uint64_t sub_10042F134()
{
  SFAirDropInvocations.BecomeTransferPresenter.Parameters.clientIdentifier.getter();
  SFAirDropInvocations.BecomeTransferPresenter.Parameters.animationRect.getter();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  v0[9] = v8;
  v0[10] = v6;
  v0[11] = v4;
  v0[12] = v2;
  uint64_t v9 = static AirDropActor.shared;
  return _swift_task_switch(sub_10042F204, v9, 0);
}

uint64_t sub_10042F204()
{
  uint64_t v1 = *(uint8_t **)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  sub_10042AF3C(*(void *)(v0 + 32), v1, *(double *)(v0 + 96), *(double *)(v0 + 88), *(double *)(v0 + 80), *(double *)(v0 + 72));
  (*(void (**)(uint8_t *, uint64_t))(v3 + 8))(v1, v2);
  return _swift_task_switch(sub_10042F2A8, 0, 0);
}

uint64_t sub_10042F2A8()
{
  VoidResponse.init()();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t SFAirDropInvocations.ResignTransferPresenter.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a1;
  return _swift_task_switch(sub_10042F33C, 0, 0);
}

uint64_t sub_10042F33C()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v0 = static AirDropActor.shared;
  return _swift_task_switch(sub_10042F3D4, v0, 0);
}

uint64_t sub_10042F3D4()
{
  sub_10042C0C0(*(void *)(v0 + 32));
  return _swift_task_switch(sub_10042F444, 0, 0);
}

uint64_t sub_10042F444()
{
  VoidResponse.init()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10042F4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_1009741F8, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.ResignTransferPresenter);
  *char v15 = v14;
  v15[1] = sub_100436D84;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10042F5DC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  v4[4] = *a3;
  return _swift_task_switch(sub_10042F604, 0, 0);
}

uint64_t sub_10042F604()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v0 = static AirDropActor.shared;
  return _swift_task_switch(sub_10042F69C, v0, 0);
}

uint64_t sub_10042F69C()
{
  sub_10042C0C0(*(void *)(v0 + 24));
  return _swift_task_switch(sub_100436D90, 0, 0);
}

uint64_t SFAirDropInvocations.TransfersMonitor.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a1;
  return _swift_task_switch(sub_10042F730, 0, 0);
}

uint64_t sub_10042F730()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v0 = static AirDropActor.shared;
  return _swift_task_switch(sub_10042F7C8, v0, 0);
}

uint64_t sub_10042F7C8()
{
  sub_10042CDA8();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10042F830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_1009741F0, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TransfersMonitor);
  *char v15 = v14;
  v15[1] = sub_100436D84;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10042F964(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  v4[4] = *a3;
  return _swift_task_switch(sub_10042F98C, 0, 0);
}

uint64_t sub_10042F98C()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v0 = static AirDropActor.shared;
  return _swift_task_switch(sub_10042FA24, v0, 0);
}

uint64_t sub_10042FA24()
{
  sub_10042CDA8();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t SFAirDropInvocations.StartNearbySharingDiscovery.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  return _swift_task_switch(sub_10042FAB0, 0, 0);
}

uint64_t sub_10042FAB0()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v0 = static AirDropActor.shared;
  return _swift_task_switch(sub_10042FB48, v0, 0);
}

uint64_t sub_10042FB48()
{
  uint64_t v1 = *(void *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess();
  sub_100278C8C(v1, v0 + 16);
  return _swift_task_switch(sub_10042FBDC, 0, 0);
}

uint64_t sub_10042FBDC()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  v0[14] = v1;
  v0[15] = v2;
  v0[16] = sub_10026BB6C(v0 + 2, v1);
  v0[17] = *(void *)(v2 + 120);
  v0[18] = (v2 + 120) & 0xFFFFFFFFFFFFLL | 0xE398000000000000;
  uint64_t v3 = static AirDropActor.shared;
  return _swift_task_switch(sub_10042FC64, v3, 0);
}

uint64_t sub_10042FC64()
{
  (*(void (**)(void, void, void, void))(v0 + 136))(*(void *)(v0 + 88), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120));
  return _swift_task_switch(sub_100436D88, 0, 0);
}

uint64_t sub_10042FCD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_1009741E8, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StartNearbySharingDiscovery);
  *char v15 = v14;
  v15[1] = sub_100436D84;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10042FE0C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8 = *a3;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_10000A6F0;
  v9[12] = v8;
  v9[13] = a4;
  v9[10] = a1;
  v9[11] = a2;
  return _swift_task_switch(sub_10042FAB0, 0, 0);
}

uint64_t SFAirDropInvocations.StopNearbySharingDiscovery.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  return _swift_task_switch(sub_10042FEF4, 0, 0);
}

uint64_t sub_10042FEF4()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v0 = static AirDropActor.shared;
  return _swift_task_switch(sub_10042FF8C, v0, 0);
}

uint64_t sub_10042FF8C()
{
  uint64_t v1 = *(void *)(v0 + 104) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess();
  sub_100278C8C(v1, v0 + 16);
  return _swift_task_switch(sub_100430020, 0, 0);
}

uint64_t sub_100430020()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  v0[14] = v1;
  v0[15] = v2;
  v0[16] = sub_10026BB6C(v0 + 2, v1);
  v0[17] = *(void *)(v2 + 144);
  v0[18] = (v2 + 144) & 0xFFFFFFFFFFFFLL | 0xDF4C000000000000;
  uint64_t v3 = static AirDropActor.shared;
  return _swift_task_switch(sub_1004300A8, v3, 0);
}

uint64_t sub_1004300A8()
{
  (*(void (**)(void, void, void, void))(v0 + 136))(*(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 112), *(void *)(v0 + 120));
  return _swift_task_switch(sub_10043011C, 0, 0);
}

uint64_t sub_10043011C()
{
  sub_10024D338(v0 + 16);
  VoidResponse.init()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10043018C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_1009741E0, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StopNearbySharingDiscovery);
  *char v15 = v14;
  v15[1] = sub_1004302C0;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_1004302C0(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *v3;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v2)
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2;
  }
  return v8(v6, v7);
}

uint64_t sub_1004303D0(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *a3;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_10000A6F4;
  v8[12] = v6;
  v8[13] = v7;
  v8[10] = a1;
  v8[11] = v5;
  return _swift_task_switch(sub_10042FEF4, 0, 0);
}

uint64_t SFAirDropInvocations.TakeNearbySharingAssertion.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  return _swift_task_switch(sub_1004304B4, 0, 0);
}

uint64_t sub_1004304B4()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v0 = static AirDropActor.shared;
  return _swift_task_switch(sub_10043054C, v0, 0);
}

uint64_t sub_10043054C()
{
  uint64_t v1 = *(void *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess();
  sub_100278C8C(v1, v0 + 16);
  return _swift_task_switch(sub_1004305E0, 0, 0);
}

uint64_t sub_1004305E0()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  v0[14] = v1;
  v0[15] = v2;
  v0[16] = sub_10026BB6C(v0 + 2, v1);
  v0[17] = *(void *)(v2 + 152);
  v0[18] = (v2 + 152) & 0xFFFFFFFFFFFFLL | 0xC728000000000000;
  uint64_t v3 = static AirDropActor.shared;
  return _swift_task_switch(sub_100430668, v3, 0);
}

uint64_t sub_100430668()
{
  (*(void (**)(void, void, void, void))(v0 + 136))(*(void *)(v0 + 88), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120));
  return _swift_task_switch(sub_1004306DC, 0, 0);
}

uint64_t sub_1004306DC()
{
  sub_10024D338(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100430740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_1009741D8, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TakeNearbySharingAssertion);
  *char v15 = v14;
  v15[1] = sub_100436D84;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_100430874(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8 = *a3;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_10000A6F0;
  v9[12] = v8;
  v9[13] = a4;
  v9[10] = a1;
  v9[11] = a2;
  return _swift_task_switch(sub_1004304B4, 0, 0);
}

uint64_t SFAirDropInvocations.ReleaseNearbySharingAssertion.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return _swift_task_switch(sub_10043095C, 0, 0);
}

uint64_t sub_10043095C()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v0 = static AirDropActor.shared;
  return _swift_task_switch(sub_1004309F4, v0, 0);
}

uint64_t sub_1004309F4()
{
  uint64_t v1 = *(void *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess();
  sub_100278C8C(v1, v0 + 16);
  return _swift_task_switch(sub_100430A88, 0, 0);
}

uint64_t sub_100430A88()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  v0[13] = v1;
  v0[14] = v2;
  v0[15] = sub_10026BB6C(v0 + 2, v1);
  v0[16] = *(void *)(v2 + 160);
  v0[17] = (v2 + 160) & 0xFFFFFFFFFFFFLL | 0x733A000000000000;
  uint64_t v3 = static AirDropActor.shared;
  return _swift_task_switch(sub_100430B10, v3, 0);
}

uint64_t sub_100430B10()
{
  (*(void (**)(void, void, void))(v0 + 128))(*(void *)(v0 + 88), *(void *)(v0 + 104), *(void *)(v0 + 112));
  return _swift_task_switch(sub_10043011C, 0, 0);
}

uint64_t sub_100430B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_1009741D0, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.ReleaseNearbySharingAssertion);
  *char v15 = v14;
  v15[1] = sub_100436D84;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_100430CB8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[11] = a2;
  v7[12] = v6;
  v7[10] = a1;
  return _swift_task_switch(sub_10043095C, 0, 0);
}

uint64_t SFAirDropInvocations.NearbySharingInteractions.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a1;
  v3[11] = a3;
  uint64_t v4 = sub_10000A844(&qword_100973CE8);
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  return _swift_task_switch(sub_100430E3C, 0, 0);
}

uint64_t sub_100430E3C()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v0 = static AirDropActor.shared;
  return _swift_task_switch(sub_100430ED4, v0, 0);
}

uint64_t sub_100430ED4()
{
  uint64_t v1 = *(void *)(v0 + 88) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess();
  sub_100278C8C(v1, v0 + 16);
  return _swift_task_switch(sub_100430F68, 0, 0);
}

uint64_t sub_100430F68()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  v0[15] = v1;
  v0[16] = v2;
  v0[17] = sub_10026BB6C(v0 + 2, v1);
  v0[18] = *(void *)(v2 + 96);
  v0[19] = (v2 + 96) & 0xFFFFFFFFFFFFLL | 0x63B4000000000000;
  uint64_t v3 = static AirDropActor.shared;
  return _swift_task_switch(sub_100430FF0, v3, 0);
}

uint64_t sub_100430FF0()
{
  (*(void (**)(void, void))(v0 + 144))(*(void *)(v0 + 120), *(void *)(v0 + 128));
  return _swift_task_switch(sub_100431060, 0, 0);
}

uint64_t sub_100431060()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[12];
  sub_1002AE308(&qword_100973CF0, &qword_100973CE8);
  sub_100435030(&qword_100973CF8, &qword_100973D00);
  sub_100435030(&qword_100973D08, &qword_100973D10);
  AsyncSequence<>.xpc.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_10024D338((uint64_t)(v0 + 2));
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1004311CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_1009741C8, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.NearbySharingInteractions);
  *char v15 = v14;
  v15[1] = sub_100436D84;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_100431300(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = *a3;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  return SFAirDropInvocations.NearbySharingInteractions.invoke(with:context:client:)(a1, v6, v5);
}

uint64_t SFAirDropInvocations.SimulateNearbySharingInteractions.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return _swift_task_switch(sub_1004313C4, 0, 0);
}

uint64_t sub_1004313C4()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v0 = static AirDropActor.shared;
  return _swift_task_switch(sub_10043145C, v0, 0);
}

uint64_t sub_10043145C()
{
  uint64_t v1 = *(void *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess();
  sub_100278C8C(v1, v0 + 16);
  return _swift_task_switch(sub_1004314F0, 0, 0);
}

uint64_t sub_1004314F0()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  v0[13] = v1;
  v0[14] = v2;
  v0[15] = sub_10026BB6C(v0 + 2, v1);
  v0[16] = *(void *)(v2 + 56);
  v0[17] = (v2 + 56) & 0xFFFFFFFFFFFFLL | 0xB8A1000000000000;
  uint64_t v3 = static AirDropActor.shared;
  return _swift_task_switch(sub_100431578, v3, 0);
}

uint64_t sub_100431578()
{
  (*(void (**)(void, void, void))(v0 + 128))(*(void *)(v0 + 88), *(void *)(v0 + 104), *(void *)(v0 + 112));
  return _swift_task_switch(sub_100436D88, 0, 0);
}

uint64_t sub_1004315EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_1009741C0, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.SimulateNearbySharingInteractions);
  *char v15 = v14;
  v15[1] = sub_100436D84;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_100431720(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[11] = a2;
  v7[12] = v6;
  v7[10] = a1;
  return _swift_task_switch(sub_1004313C4, 0, 0);
}

uint64_t SFAirDropInvocations.BoopAtADistanceBegin.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return _swift_task_switch(sub_100431804, 0, 0);
}

uint64_t sub_100431804()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v0 = static AirDropActor.shared;
  return _swift_task_switch(sub_10043189C, v0, 0);
}

uint64_t sub_10043189C()
{
  uint64_t v1 = *(void *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess();
  sub_100278C8C(v1, v0 + 16);
  return _swift_task_switch(sub_100431930, 0, 0);
}

uint64_t sub_100431930()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_10026BB6C(v0 + 2, v1);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 64) + **(int **)(v2 + 64));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100431A38;
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[11];
  return v7(v4, v5, v1, v2);
}

uint64_t sub_100431A38()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100431B4C;
  }
  else {
    uint64_t v2 = sub_1004306DC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100431B4C()
{
  sub_10024D338(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100431BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_1009741B8, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BoopAtADistanceBegin);
  *char v15 = v14;
  v15[1] = sub_100436D84;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_100431CE4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[11] = a2;
  v7[12] = v6;
  v7[10] = a1;
  return _swift_task_switch(sub_100431804, 0, 0);
}

uint64_t SFAirDropInvocations.BoopAtADistanceUpdate.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  uint64_t v4 = type metadata accessor for SFAirDropClient.BoopAtADistance.TapEvent();
  v3[13] = v4;
  v3[14] = *(void *)(v4 - 8);
  v3[15] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction();
  v3[16] = v5;
  v3[17] = *(void *)(v5 - 8);
  v3[18] = swift_task_alloc();
  return _swift_task_switch(sub_100431EC4, 0, 0);
}

uint64_t sub_100431EC4()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v0 = static AirDropActor.shared;
  return _swift_task_switch(sub_100431F5C, v0, 0);
}

uint64_t sub_100431F5C()
{
  uint64_t v1 = *(void *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess();
  sub_100278C8C(v1, v0 + 16);
  return _swift_task_switch(sub_100431FF0, 0, 0);
}

uint64_t sub_100431FF0()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_10026BB6C(v0 + 2, v1);
  SFAirDropInvocations.BoopAtADistanceUpdate.Parameters.transaction.getter();
  SFAirDropInvocations.BoopAtADistanceUpdate.Parameters.tap.getter();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 72) + **(int **)(v2 + 72));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[19] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10043212C;
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[15];
  return v7(v4, v5, v1, v2);
}

uint64_t sub_10043212C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 144);
  uint64_t v3 = *(void *)(*(void *)v1 + 136);
  uint64_t v4 = *(void *)(*(void *)v1 + 128);
  uint64_t v5 = *(void *)(*(void *)v1 + 120);
  uint64_t v6 = *(void *)(*(void *)v1 + 112);
  uint64_t v7 = *(void *)(*(void *)v1 + 104);
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v8 = sub_100432390;
  }
  else {
    uint64_t v8 = sub_100432300;
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t sub_100432300()
{
  sub_10024D338(v0 + 16);
  VoidResponse.init()();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100432390()
{
  sub_10024D338(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10043240C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_1009741B0, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BoopAtADistanceUpdate);
  *char v15 = v14;
  v15[1] = sub_100436D84;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_100432540(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  return SFAirDropInvocations.BoopAtADistanceUpdate.invoke(with:context:client:)(a1, a2, v6);
}

uint64_t SFAirDropInvocations.BoopAtADistanceEnd.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return _swift_task_switch(sub_100432614, 0, 0);
}

uint64_t sub_100432614()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v0 = static AirDropActor.shared;
  return _swift_task_switch(sub_1004326AC, v0, 0);
}

uint64_t sub_1004326AC()
{
  uint64_t v1 = *(void *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess();
  sub_100278C8C(v1, v0 + 16);
  return _swift_task_switch(sub_100432740, 0, 0);
}

uint64_t sub_100432740()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  v0[13] = v1;
  v0[14] = v2;
  v0[15] = sub_10026BB6C(v0 + 2, v1);
  v0[16] = *(void *)(v2 + 80);
  v0[17] = (v2 + 80) & 0xFFFFFFFFFFFFLL | 0xE0BE000000000000;
  uint64_t v3 = static AirDropActor.shared;
  return _swift_task_switch(sub_1004327C8, v3, 0);
}

uint64_t sub_1004327C8()
{
  (*(void (**)(void, void, void))(v0 + 128))(*(void *)(v0 + 88), *(void *)(v0 + 104), *(void *)(v0 + 112));
  *(void *)(v0 + 144) = 0;
  return _swift_task_switch(sub_100436D88, 0, 0);
}

uint64_t sub_100432860()
{
  sub_10024D338(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1004328C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_1009741A8, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BoopAtADistanceEnd);
  *char v15 = v14;
  v15[1] = sub_100436D84;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_1004329F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  v7[11] = a2;
  v7[12] = v6;
  v7[10] = a1;
  return _swift_task_switch(sub_100432614, 0, 0);
}

uint64_t SFAirDropInvocations.EndNearbySharingInteraction.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  sub_10000A844(&qword_100974EA0);
  v3[13] = swift_task_alloc();
  return _swift_task_switch(sub_100432B50, 0, 0);
}

uint64_t sub_100432B50()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v0 = static AirDropActor.shared;
  return _swift_task_switch(sub_100432BE8, v0, 0);
}

uint64_t sub_100432BE8()
{
  uint64_t v1 = *(void *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess();
  sub_100278C8C(v1, v0 + 16);
  return _swift_task_switch(sub_100432C7C, 0, 0);
}

uint64_t sub_100432C7C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  v0[14] = v3;
  v0[15] = v4;
  v0[16] = sub_10026BB6C(v0 + 2, v3);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v1, v2, v5);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v1, 0, 1, v5);
  v0[17] = *(void *)(v4 + 88);
  v0[18] = (v4 + 88) & 0xFFFFFFFFFFFFLL | 0x898B000000000000;
  uint64_t v7 = static AirDropActor.shared;
  return _swift_task_switch(sub_100432D94, v7, 0);
}

uint64_t sub_100432D94()
{
  uint64_t v1 = *(void *)(v0 + 104);
  (*(void (**)(uint64_t, void, void))(v0 + 136))(v1, *(void *)(v0 + 112), *(void *)(v0 + 120));
  sub_10000A7E8(v1, &qword_100974EA0);
  return _swift_task_switch(sub_100432E18, 0, 0);
}

uint64_t sub_100432E18()
{
  sub_10024D338(v0 + 16);
  VoidResponse.init()();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100432E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_1009741A0, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.EndNearbySharingInteraction);
  *char v15 = v14;
  v15[1] = sub_100436D84;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_100432FC8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  return SFAirDropInvocations.EndNearbySharingInteraction.invoke(with:context:client:)(a1, a2, v6);
}

uint64_t SFAirDropInvocations.StartTempPairing.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = a1;
  v3[6] = a3;
  uint64_t v4 = sub_10000A844(&qword_1009735F8);
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  return _swift_task_switch(sub_10043313C, 0, 0);
}

uint64_t sub_10043313C()
{
  *(void *)(v0 + 80) = *(void *)(*(void *)(v0 + 48)
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService);
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v1 = static AirDropActor.shared;
  return _swift_task_switch(sub_1004331E8, v1, 0);
}

uint64_t sub_1004331E8()
{
  sub_1004148DC();
  return _swift_task_switch(sub_100433250, 0, 0);
}

uint64_t sub_100433250()
{
  return _swift_task_switch(sub_100433274, static AirDropActor.shared, 0);
}

uint64_t sub_100433274()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[10] + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_senderStateUpdates;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  sub_1002AE308(&qword_100973D50, &qword_1009735F8);
  sub_100436C74(&qword_100973D58, (void (*)(uint64_t))&type metadata accessor for SFTempPairingSenderStateUpdate);
  sub_100436C74(&qword_100973D60, (void (*)(uint64_t))&type metadata accessor for SFTempPairingSenderStateUpdate);
  AsyncSequence<>.xpc.getter();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1004333F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_100974198, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StartTempPairing);
  *char v15 = v14;
  v15[1] = sub_100436D84;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_10043352C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = *a3;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000A6F0;
  return SFAirDropInvocations.StartTempPairing.invoke(with:context:client:)(a1, v6, v5);
}

uint64_t SFAirDropInvocations.StopTempPairing.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a3;
  return _swift_task_switch(sub_1004335EC, 0, 0);
}

uint64_t sub_1004335EC()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 24)
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService);
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v1 = static AirDropActor.shared;
  return _swift_task_switch(sub_100433698, v1, 0);
}

uint64_t sub_100433698()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server;
  if (*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server))
  {
    swift_retain();
    sub_1005BB630();
    swift_release();
  }
  *(void *)(v1 + v2) = 0;
  swift_release();
  return _swift_task_switch(sub_10042F444, 0, 0);
}

uint64_t sub_10043373C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_100974190, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StopTempPairing);
  *char v15 = v14;
  v15[1] = sub_100436D84;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_100433870(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = *a3;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  _OWORD v6[2] = a1;
  v6[3] = v5;
  v6[1] = sub_10000A6F0;
  return _swift_task_switch(sub_1004335EC, 0, 0);
}

uint64_t SFAirDropInvocations.TempPairingMonitor.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a3;
  return _swift_task_switch(sub_100433940, 0, 0);
}

uint64_t sub_100433940()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 24)
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService);
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v1 = static AirDropActor.shared;
  return _swift_task_switch(sub_1004339EC, v1, 0);
}

uint64_t sub_1004339EC()
{
  sub_1004145B4();
  return _swift_task_switch(sub_100433A54, 0, 0);
}

uint64_t sub_100433A54()
{
  return _swift_task_switch(sub_100433A78, static AirDropActor.shared, 0);
}

uint64_t sub_100433A78()
{
  sub_10000A844(&qword_100973608);
  sub_1002AE308(&qword_100973D78, &qword_100973608);
  sub_100436C74(&qword_100973D80, (void (*)(uint64_t))&type metadata accessor for SFTempPairingStateUpdate);
  sub_100436C74(&qword_100973D88, (void (*)(uint64_t))&type metadata accessor for SFTempPairingStateUpdate);
  AsyncSequence<>.xpc.getter();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100433BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_100974188, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TempPairingMonitor);
  *char v15 = v14;
  v15[1] = sub_100436D84;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_100433CE0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v4;
  return _swift_task_switch(sub_100433940, 0, 0);
}

id SFAirDropInvocations.SharingName.invoke(with:context:client:)()
{
  return sub_1004159FC();
}

uint64_t sub_100433D2C()
{
  return _AnySFXPCSyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlockContainer:responseAsyncSequenceContainer:responseXPCBlockContainer:)();
}

id sub_100433DF4@<X0>(void *a1@<X8>)
{
  id result = sub_1004159FC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t SFAirDropInvocations.TempPairingConnect.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a3;
  return _swift_task_switch(sub_100433E44, 0, 0);
}

uint64_t sub_100433E44()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 24)
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService);
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v1 = static AirDropActor.shared;
  return _swift_task_switch(sub_100433EF0, v1, 0);
}

uint64_t sub_100433EF0()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 32) + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_client);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = sub_1004159FC();
    sub_1003E132C((uint64_t)v3, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_100969DD8 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000B47C(v5, (uint64_t)qword_1009733E8);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v2, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v6, "Attempting to connect while not browsing.", v7, 2u);
      swift_slowDealloc();
    }
  }

  return _swift_task_switch(sub_100436D90, 0, 0);
}

uint64_t sub_100434040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_100974178, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TempPairingConnect);
  *char v15 = v14;
  v15[1] = sub_100436D84;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_100434174(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v4;
  return _swift_task_switch(sub_100434198, 0, 0);
}

uint64_t sub_100434198()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 24)
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService);
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v1 = static AirDropActor.shared;
  return _swift_task_switch(sub_100434244, v1, 0);
}

uint64_t sub_100434244()
{
  sub_100414D9C();
  return _swift_task_switch(sub_10042F444, 0, 0);
}

uint64_t SFAirDropInvocations.TempPairingDisconnect.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a3;
  return _swift_task_switch(sub_1004342CC, 0, 0);
}

uint64_t sub_1004342CC()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 24)
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService);
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v1 = static AirDropActor.shared;
  return _swift_task_switch(sub_100434378, v1, 0);
}

uint64_t sub_100434378()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 32) + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_client);
  if (v1)
  {
    uint64_t v2 = v1;
    sub_1003E1C2C();
  }
  else
  {
    if (qword_100969DD8 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000B47C(v3, (uint64_t)qword_1009733E8);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v2, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v4, "Attempting to disconnect while not browsing.", v5, 2u);
      swift_slowDealloc();
    }
  }

  return _swift_task_switch(sub_100436D90, 0, 0);
}

uint64_t sub_1004344B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_100974170, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TempPairingDisconnect);
  *char v15 = v14;
  v15[1] = sub_100436D84;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_1004345EC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v4;
  return _swift_task_switch(sub_100434610, 0, 0);
}

uint64_t sub_100434610()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 24)
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService);
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v1 = static AirDropActor.shared;
  return _swift_task_switch(sub_1004346BC, v1, 0);
}

uint64_t sub_1004346BC()
{
  sub_100414ED0();
  return _swift_task_switch(sub_100436D90, 0, 0);
}

uint64_t SFAirDropInvocations.UserSafetyIntervention.invoke(with:context:client:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_100434744, 0, 0);
}

uint64_t sub_100434744()
{
  v0[4] = [objc_allocWithZone((Class)type metadata accessor for SDAirDropUserSafetyInterventionAlert()) init];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  void *v1 = v0;
  v1[1] = sub_1004347F8;
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  return sub_1004B19FC(v2, v3);
}

uint64_t sub_1004347F8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100434934, 0, 0);
  }
  else
  {

    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100434934()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100434998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_100974168, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.UserSafetyIntervention);
  *char v15 = v14;
  v15[1] = sub_100436D84;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t SFAirDropInvocations.ItemDestinationAlert.invoke(with:context:client:)(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_10096B788 + dword_10096B788);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100434B74;
  return v5(a1);
}

uint64_t sub_100434B74(uint64_t a1, unint64_t a2)
{
  uint64_t v6 = *v3;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = *(uint64_t (**)(void))(v6 + 8);
    return v7();
  }
  else
  {
    if (a2) {
      uint64_t v9 = a1;
    }
    else {
      uint64_t v9 = 0;
    }
    if (a2) {
      unint64_t v10 = a2;
    }
    else {
      unint64_t v10 = 0xE000000000000000;
    }
    uint64_t v11 = *(uint64_t (**)(uint64_t, unint64_t))(v6 + 8);
    return v11(v9, v10);
  }
}

uint64_t sub_100434CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  char v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 16) = v15;
  uint64_t v16 = sub_100436C74(&qword_100974160, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.ItemDestinationAlert);
  *char v15 = v14;
  v15[1] = sub_100436D84;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)(a1, a2, a3, a4, a5, a6, a7, a8, v16);
}

uint64_t sub_100434DF4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)&dword_10096B788 + dword_10096B788);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100434EA0;
  return v6(a2);
}

uint64_t sub_100434EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 32) = a2;
    *(void *)(v6 + 40) = a1;
    return _swift_task_switch(sub_100434FFC, 0, 0);
  }
}

uint64_t sub_100434FFC()
{
  unint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v3 = *(void **)(v0 + 16);
  if (!v2)
  {
    uint64_t v1 = 0;
    unint64_t v2 = 0xE000000000000000;
  }
  *uint64_t v3 = v1;
  v3[1] = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100435030(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100247840(&qword_10096C538);
    sub_100436C74(a2, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.NearbySharingInteraction);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1004350C4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v24 = &type metadata for SDPseudonymPropertiesProvider;
  uint64_t v25 = &off_1008DCDE8;
  uint64_t v21 = &type metadata for SDPseudonymStorage;
  uint64_t v22 = &off_1008D55F8;
  uint64_t v6 = type metadata accessor for SDPseudonymNetworkPathMonitor();
  v19[3] = v6;
  v19[4] = &off_1008DEA78;
  v19[0] = a2;
  type metadata accessor for SDAirDropPseudonymService();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v8 = sub_1002AF758((uint64_t)v23, (uint64_t)&type metadata for SDPseudonymPropertiesProvider);
  __chkstk_darwin(v8);
  (*(void (**)(void))(v9 + 16))();
  uint64_t v10 = sub_1002AF758((uint64_t)v20, (uint64_t)&type metadata for SDPseudonymStorage);
  __chkstk_darwin(v10);
  (*(void (**)(void))(v11 + 16))();
  uint64_t v12 = sub_1002AF758((uint64_t)v19, v6);
  __chkstk_darwin(v12);
  uint64_t v14 = (void *)((char *)&v19[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v15 + 16))(v14);
  uint64_t v16 = sub_100435348(a1, *v14, a3, v7);
  sub_10024D338((uint64_t)v19);
  sub_10024D338((uint64_t)v20);
  sub_10024D338((uint64_t)v23);
  return v16;
}

void *sub_100435348(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  v27[3] = sub_10000B740(0, &qword_100974158);
  v27[4] = &off_1008E02A8;
  v27[0] = a1;
  uint64_t v25 = &type metadata for SDPseudonymPropertiesProvider;
  uint64_t v26 = &off_1008DCDE8;
  uint64_t v22 = &type metadata for SDPseudonymStorage;
  uint64_t v23 = &off_1008D55F8;
  v20[3] = type metadata accessor for SDPseudonymNetworkPathMonitor();
  v20[4] = &off_1008DEA78;
  v20[0] = a2;
  a4[22] = 0;
  a4[23] = 0;
  uint64_t v8 = (char *)a4 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropPseudonymService_lastProvisionAttempt;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(void *)((char *)a4 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropPseudonymService_processStartupDelaySeconds) = 0x4014000000000000;
  *(void *)((char *)a4 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropPseudonymService_provisionThrottleSeconds) = 0x402E000000000000;
  sub_100278C8C((uint64_t)v27, (uint64_t)(a4 + 2));
  sub_100278C8C((uint64_t)v24, (uint64_t)(a4 + 7));
  sub_100278C8C((uint64_t)v21, (uint64_t)(a4 + 12));
  sub_100278C8C((uint64_t)v20, (uint64_t)(a4 + 17));
  *(void *)((char *)a4 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropPseudonymService_deviceStatus) = a3;
  id v10 = a3;
  if (sub_1004EE5A0())
  {
    uint64_t v11 = swift_allocObject();
    swift_weakInit();
    swift_beginAccess();
    uint64_t v12 = a4[20];
    uint64_t v13 = a4[21];
    sub_1002AF758((uint64_t)(a4 + 17), v12);
    uint64_t v14 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v13 + 16);
    swift_retain();
    v14(sub_100436C6C, v11, v12, v13);
    swift_endAccess();
    swift_release();
    sub_100616078();
  }
  else
  {
    if (qword_10096A0A8 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10000B47C(v15, (uint64_t)qword_10097C630);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Pseudonym service is disabled", v18, 2u);
      swift_slowDealloc();
    }
  }
  sub_10024D338((uint64_t)v20);
  sub_10024D338((uint64_t)v21);
  sub_10024D338((uint64_t)v24);
  sub_10024D338((uint64_t)v27);
  return a4;
}

uint64_t sub_100435644()
{
  return sub_100436C74(qword_100973DB8, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.Send);
}

uint64_t sub_10043568C()
{
  return sub_100436C74((unint64_t *)&unk_100973DD0, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.Cancel);
}

uint64_t sub_1004356D4()
{
  return sub_100436C74((unint64_t *)&unk_100973DE0, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.FetchUserDefaults);
}

uint64_t sub_10043571C()
{
  return sub_100436C74(qword_100973DF0, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.FetchEndpointMetadata);
}

uint64_t sub_100435764()
{
  return sub_100436C74(qword_100973E08, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BecomeTransferPresenter);
}

uint64_t sub_1004357AC()
{
  return sub_100436C74(qword_100973E20, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.ResignTransferPresenter);
}

uint64_t sub_1004357F4()
{
  return sub_100436C74(qword_100973E38, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TransfersMonitor);
}

uint64_t sub_10043583C()
{
  return sub_100436C74(qword_100973E50, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StartNearbySharingDiscovery);
}

uint64_t sub_100435884()
{
  return sub_100436C74(qword_100973E68, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StopNearbySharingDiscovery);
}

uint64_t sub_1004358CC()
{
  return sub_100436C74(qword_100973E80, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TakeNearbySharingAssertion);
}

uint64_t sub_100435914()
{
  return sub_100436C74(qword_100973E98, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.ReleaseNearbySharingAssertion);
}

uint64_t sub_10043595C()
{
  return sub_100436C74(qword_100973EB0, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.NearbySharingInteractions);
}

uint64_t sub_1004359A4()
{
  return sub_100436C74(qword_100973EC8, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.SimulateNearbySharingInteractions);
}

uint64_t sub_1004359EC()
{
  return sub_100436C74(qword_100973EE0, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BoopAtADistanceBegin);
}

uint64_t sub_100435A34()
{
  return sub_100436C74(qword_100973EF8, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BoopAtADistanceUpdate);
}

uint64_t sub_100435A7C()
{
  return sub_100436C74(qword_100973F10, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BoopAtADistanceEnd);
}

uint64_t sub_100435AC4()
{
  return sub_100436C74(qword_100973F28, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.EndNearbySharingInteraction);
}

uint64_t sub_100435B0C()
{
  return sub_100436C74(qword_100973F40, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StartTempPairing);
}

uint64_t sub_100435B54()
{
  return sub_100436C74(qword_100973F58, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StopTempPairing);
}

uint64_t sub_100435B9C()
{
  return sub_100436C74((unint64_t *)&unk_100973F70, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TempPairingMonitor);
}

uint64_t sub_100435BE4()
{
  return sub_100436C74((unint64_t *)&unk_100973F80, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.SharingName);
}

uint64_t sub_100435C2C()
{
  return sub_100436C74(qword_100973F90, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TempPairingConnect);
}

uint64_t sub_100435C74()
{
  return sub_100436C74(qword_100973FA8, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TempPairingDisconnect);
}

uint64_t sub_100435CBC()
{
  return sub_100436C74(qword_100973FC0, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.UserSafetyIntervention);
}

uint64_t sub_100435D04()
{
  return sub_100436C74((unint64_t *)&unk_100973FD8, (void (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.ItemDestinationAlert);
}

uint64_t sub_100435D4C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverClientsBundleIDs);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t *sub_100435DA8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for SFClientIdentity();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for SFAirDropClient.Identifier();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (_OWORD *)((char *)a1 + v12);
    uint64_t v14 = (_OWORD *)((char *)a2 + v12);
    long long v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
  }
  return a1;
}

uint64_t sub_100435ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SFClientIdentity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for SFAirDropClient.Identifier();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_100435F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFClientIdentity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for SFAirDropClient.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  return a1;
}

uint64_t sub_100436048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFClientIdentity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for SFAirDropClient.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  v12[2] = v13[2];
  v12[3] = v13[3];
  return a1;
}

uint64_t sub_100436134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFClientIdentity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for SFAirDropClient.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  return a1;
}

uint64_t sub_100436208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFClientIdentity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for SFAirDropClient.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  return a1;
}

uint64_t sub_1004362DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004362F0);
}

uint64_t sub_1004362F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFClientIdentity();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for SFAirDropClient.Identifier();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1004363E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004363FC);
}

uint64_t sub_1004363FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SFClientIdentity();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for SFAirDropClient.Identifier();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for SDAirDropService.TransferPresenterClient()
{
  uint64_t result = qword_1009740C8;
  if (!qword_1009740C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10043654C()
{
  uint64_t result = type metadata accessor for SFClientIdentity();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SFAirDropClient.Identifier();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10043661C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_100974EA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100436684(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDAirDropService.TransferPresenterClient();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004366E0()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_100436718@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return v2;
}

uint64_t sub_100436748()
{
  uint64_t v1 = sub_10000A844(&qword_100974108);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100436834(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10000A844(&qword_100974108) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10000A6F4;
  return sub_1004298A0(a1, v6, v7, v8, v9);
}

uint64_t sub_10043695C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100436994(uint64_t a1)
{
}

void sub_10043699C(unsigned int (*a1)(uint64_t, uint64_t, uint64_t))
{
}

void sub_1004369A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SFClientIdentity();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100969DF8 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_100973C40);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    sub_100436C74(&qword_10096C510, (void (*)(uint64_t))&type metadata accessor for SFClientIdentity);
    uint64_t v10 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v12 = sub_100254634(v10, v11, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "New AirDrop Client %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_100436C34()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100436C6C()
{
  return sub_100615F64();
}

uint64_t sub_100436C74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100436CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropService.TransferPresenterClient();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100436D20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropService.TransferPresenterClient();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100436D94()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100974260);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100974260);
  if (qword_100969C98 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994618);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_100436E5C()
{
  uint64_t v1 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v17 = *(void *)(v1 - 8);
  uint64_t v18 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_transferObserver;
  id v7 = objc_allocWithZone((Class)SFAirDropTransferObserver);
  os_log_type_t v8 = v0;
  *(void *)&v0[v6] = [v7 init];
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById] = &_swiftEmptyDictionarySingleton;
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_progressObserversById] = &_swiftEmptyDictionarySingleton;
  uint64_t v9 = OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUISession;
  *(void *)&v8[v9] = [objc_allocWithZone((Class)type metadata accessor for AirDropUISessionClient()) init];
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v10 = &v8[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUIBundleIdentifier];
  *(void *)uint64_t v10 = 0xD00000000000001BLL;
  *((void *)v10 + 1) = 0x80000001007BD770;
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_assertionDurationInSeconds] = 2;
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUIAssertion] = 0;
  unint64_t v11 = &v8[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_ongoingWalletTransferStartDate];
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_queue;
  sub_10000B740(0, (unint64_t *)&qword_10096A1A0);
  static DispatchQoS.unspecified.getter();
  uint64_t v20 = _swiftEmptyArrayStorage;
  sub_100442F60((unint64_t *)&unk_100974840, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000A844((uint64_t *)&unk_10096A1B0);
  sub_100442CA0((unint64_t *)&qword_100974850, (uint64_t *)&unk_10096A1B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v18);
  *(void *)&v8[v13] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();

  uint64_t v14 = (objc_class *)type metadata accessor for SDAirDropUISessionManager();
  v19.receiver = v8;
  v19.super_class = v14;
  return [super init];
}

uint64_t sub_100437214()
{
  uint64_t v1 = v0;
  if (qword_100969E08 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_100974260);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Activate AirDrop UI session manager.", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_transferObserver);
  [v6 setDelegate:v1];
  [v6 activate];
  *(void *)(*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUISession)
            + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_delegate
            + 8) = &off_1008DAA58;

  return swift_unknownObjectWeakAssign();
}

void sub_1004373A0(void *a1)
{
  uint64_t v2 = v1;
  NSString v4 = [a1 identifier];
  if (!v4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v7 = v6;
  uint64_t v8 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById;
  swift_beginAccess();
  if (*(void *)(*(void *)v8 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1005838BC(v5, v7);
    char v10 = v9;
    swift_bridgeObjectRelease();
    if (v10)
    {

      swift_bridgeObjectRelease();
      return;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  id v11 = a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v54[0] = *(void *)v8;
  *(void *)uint64_t v8 = 0x8000000000000000;
  uint64_t v50 = v5;
  sub_100593D08((uint64_t)v11, v5, v7, isUniquelyReferenced_nonNull_native);
  *(void *)uint64_t v8 = *(void *)&v54[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (qword_100969E08 != -1) {
    swift_once();
  }
  uint64_t v52 = v4;
  uint64_t v13 = type metadata accessor for Logger();
  sub_10000B47C(v13, (uint64_t)qword_100974260);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(void *)&v55[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)&v54[0] = sub_100254634(v50, v7, (uint64_t *)v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Tracking new transfer session with AirDropUI over XPC: %s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  unint64_t v17 = OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUISession;
  uint64_t v18 = *(char **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUISession);
  objc_super v19 = *(void **)&v18[OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer];
  if (v19
    || (uint64_t v20 = v18,
        sub_10043F670(),
        v20,
        (objc_super v19 = *(void **)(*(void *)(v2 + v17)
                        + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer)) != 0))
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    id v49 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInteger:[v11 transferState]];
    id v21 = [v11 metaData];
    id v22 = [v21 senderIsMe];

    id v51 = [objc_allocWithZone((Class)NSNumber) initWithBool:v22];
    id v48 = [objc_allocWithZone((Class)NSNumber) initWithInteger:[v11 itemCount]];
    id v23 = [v11 metaData];
    id v24 = [v23 senderCompositeName];

    NSString v25 = [v11 contentsDescription];
    if (!v25)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v25 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    id v26 = [v11 metaData];
    id v27 = [v26 smallPreviewImage];

    if (v27)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_100249444(v54, v55);
      sub_10024D2D4((uint64_t)v55, (uint64_t)v54);
      type metadata accessor for CGImage(0);
      swift_dynamicCast();
      uint64_t v28 = sub_1000D8E98((uint64_t)v53, 0);
      if (!v28)
      {

        __break(1u);
LABEL_32:
        sub_100250CB0(v2, v17);

        __break(1u);
        return;
      }
      uint64_t v29 = v28;
      uint64_t v2 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v17 = v30;

      sub_10024D338((uint64_t)v55);
    }
    else
    {
      uint64_t v2 = 0;
      unint64_t v17 = 0xF000000000000000;
    }
    id v27 = v25;
    id v31 = [v11 metaData];
    id v32 = [v31 previewImage];

    uint64_t v33 = v19;
    if (!v32)
    {
      unint64_t v39 = v17;
      uint64_t v36 = v24;
      if (v17 >> 60 == 15)
      {
        uint64_t v41 = v48;
        uint64_t v40 = v49;
        Class v42 = 0;
        uint64_t v47 = v2;
LABEL_26:
        sub_10000B740(0, (unint64_t *)&qword_1009745A0);
        Class isa = NSNumber.init(BOOLeanLiteral:)(0).super.super.isa;
        [v33 transferStartedForIdentifier:v52 isFromMe:v51 withTransferState:v40 itemCount:v41 senderName:v36 localizedTransferDescription:v27 previewImageData:v42 previewImageIsSensitive:isa];
        sub_100250CB0(v47, v39);

        swift_unknownObjectRelease();
        return;
      }
      uint64_t v40 = v49;
      uint64_t v37 = v2;
LABEL_25:
      uint64_t v41 = v48;
      uint64_t v47 = v37;
      sub_10025ADCC(v37, v39);
      Class v42 = Data._bridgeToObjectiveC()().super.isa;
      sub_100250CB0(v37, v39);
      goto LABEL_26;
    }
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_100249444(v54, v55);
    sub_10024D2D4((uint64_t)v55, (uint64_t)v54);
    type metadata accessor for CGImage(0);
    swift_dynamicCast();
    os_log_type_t v34 = sub_1000D8E98((uint64_t)v53, 0);
    if (v34)
    {
      uint64_t v35 = v34;
      uint64_t v36 = v24;
      uint64_t v37 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v39 = v38;

      sub_100250CB0(v2, v17);
      sub_10024D338((uint64_t)v55);
      uint64_t v40 = v49;
      goto LABEL_25;
    }
    goto LABEL_32;
  }

  swift_bridgeObjectRetain();
  uint64_t v44 = Logger.logObject.getter();
  uint64_t v45 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v44, (os_log_type_t)v45))
  {
    unint64_t v46 = (uint8_t *)swift_slowAlloc();
    *(void *)&v55[0] = swift_slowAlloc();
    *(_DWORD *)unint64_t v46 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)&v54[0] = sub_100254634(v50, v7, (uint64_t *)v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v44, (os_log_type_t)v45, "AirDropUI server was not found, cannot track transfer: %s", v46, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
}

void sub_100437BC8(void *a1)
{
  uint64_t v2 = v1;
  NSString v4 = [a1 identifier];
  if (!v4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v7 = v6;
  uint64_t v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById);
  swift_beginAccess();
  if (*(void *)(*v8 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1005838BC(v5, v7);
    char v10 = v9;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v10)
    {
      swift_beginAccess();
      swift_bridgeObjectRetain();
      id v11 = a1;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v66 = *v8;
      *uint64_t v8 = 0x8000000000000000;
      sub_100593D08((uint64_t)v11, v5, v7, isUniquelyReferenced_nonNull_native);
      *uint64_t v8 = v66;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_100438B0C(v11);
      if (qword_100969E08 != -1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      sub_10000B47C(v13, (uint64_t)qword_100974260);
      swift_bridgeObjectRetain();
      uint64_t v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        v67[0] = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v16 = 136315138;
        swift_bridgeObjectRetain();
        sub_100254634(v5, v7, (uint64_t *)v67);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "Updating transfer session with AirDropUI over XPC: %s", v16, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      uint64_t v21 = OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUISession;
      id v22 = *(char **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUISession);
      id v65 = *(id *)&v22[OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer];
      if (!v65)
      {
        id v23 = v22;
        sub_10043F670();

        id v65 = *(id *)(*(void *)(v2 + v21) + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer);
        if (!v65)
        {

          return;
        }
      }
      swift_unknownObjectRetain();
      id v63 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInteger:[v11 transferState]];
      if ([v11 userResponse] == (id)1)
      {
        uint64_t v24 = 1;
      }
      else
      {
        id v25 = [v11 metaData];
        uint64_t v24 = (uint64_t)[v25 didAutoAccept];
      }
      id v62 = [objc_allocWithZone((Class)NSNumber) initWithBool:v24];
      id v26 = [v11 transferProgress];
      if (v26)
      {
        id v27 = v26;
        id v61 = [objc_allocWithZone((Class)NSNumber) initWithLongLong:[v26 completedUnitCount]];
        id v60 = [objc_allocWithZone((Class)NSNumber) initWithLongLong:[v27 totalUnitCount]];
      }
      else
      {
        id v61 = [objc_allocWithZone((Class)NSNumber) initWithInteger:0];
        id v60 = [objc_allocWithZone((Class)NSNumber) initWithInteger:0];
      }
      id v28 = [v11 possibleActions];
      sub_10000B740(0, &qword_1009700A8);
      unint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v29 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      id v31 = &selRef__systemCanTrigger;
      if (v30)
      {
        Class isa = (Class)[v11 possibleActions];
        if (!isa)
        {
          static Array._unconditionallyBridgeFromObjectiveC(_:)();
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
        }
        uint64_t v33 = self;
        v67[0] = 0;
        id v34 = [v33 archivedDataWithRootObject:isa requiringSecureCoding:1 error:v67];

        id v35 = v67[0];
        if (v34)
        {
          uint64_t v30 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v37 = v36;

          goto LABEL_37;
        }
        unint64_t v38 = v35;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        swift_errorRetain();
        swift_errorRetain();
        unint64_t v39 = Logger.logObject.getter();
        os_log_type_t v40 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v39, v40))
        {
          uint64_t v41 = (uint8_t *)swift_slowAlloc();
          v67[0] = (id)swift_slowAlloc();
          *(_DWORD *)uint64_t v41 = 136315138;
          swift_errorRetain();
          sub_10000A844(&qword_10096BAF0);
          uint64_t v42 = String.init<A>(describing:)();
          sub_100254634(v42, v43, (uint64_t *)v67);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v39, v40, "Could not archive actions array into Data for XPC: %s", v41, 0xCu);
          swift_arrayDestroy();
          id v31 = &selRef__systemCanTrigger;
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_errorRelease();
        }
        uint64_t v30 = 0;
      }
      unint64_t v37 = 0xF000000000000000;
LABEL_37:
      id v44 = [v11 completedURLs];
      if (v44)
      {
        uint64_t v45 = v44;
        unint64_t v46 = self;
        v67[0] = 0;
        id v47 = [v46 v31[410]:v45:1:v67];

        id v48 = v67[0];
        if (v47)
        {
          uint64_t v64 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v50 = v49;

LABEL_44:
          NSString v57 = [v11 contentsDescription];
          if (!v57)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();
            NSString v57 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
          }
          if (v37 >> 60 == 15)
          {
            Class v58 = 0;
          }
          else
          {
            sub_10025ADCC(v30, v37);
            Class v58 = Data._bridgeToObjectiveC()().super.isa;
            sub_100250CB0(v30, v37);
          }
          if (v50 >> 60 == 15)
          {
            Class v59 = 0;
          }
          else
          {
            sub_10025ADCC(v64, v50);
            Class v59 = Data._bridgeToObjectiveC()().super.isa;
            sub_100250CB0(v64, v50);
          }
          [v65 transferUpdatedForIdentifier:v4 withTransferState:v63 transferAccepted:v62 completedUnitCount:v61 totalUnitCount:v60 localizedTransferDescription:v57 actionsData:v58 completedURLsData:v59];
          sub_100250CB0(v30, v37);

          sub_100250CB0(v64, v50);
          swift_unknownObjectRelease();
          return;
        }
        id v51 = v48;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v52 = Logger.logObject.getter();
        uint64_t v53 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v52, (os_log_type_t)v53))
        {
          uint64_t v54 = (uint8_t *)swift_slowAlloc();
          v67[0] = (id)swift_slowAlloc();
          *(_DWORD *)uint64_t v54 = 136315138;
          swift_errorRetain();
          sub_10000A844(&qword_10096BAF0);
          uint64_t v55 = String.init<A>(describing:)();
          sub_100254634(v55, v56, (uint64_t *)v67);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v52, (os_log_type_t)v53, "Could not archive completedURLs array into Data for XPC: %s", v54, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_errorRelease();
        }
      }
      uint64_t v64 = 0;
      unint64_t v50 = 0xF000000000000000;
      goto LABEL_44;
    }
  }

  if (qword_100969E08 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_10000B47C(v17, (uint64_t)qword_100974260);
  swift_bridgeObjectRetain();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    v67[0] = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136315138;
    swift_bridgeObjectRetain();
    sub_100254634(v5, v7, (uint64_t *)v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Transfer not tracked. Skipping update. %s", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
}

void sub_1004387C8(void *a1)
{
  uint64_t v2 = v1;
  NSString v4 = [a1 identifier];
  if (!v4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v7 = v6;
  uint64_t v8 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById;
  swift_beginAccess();
  if (*(void *)(*(void *)v8 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1005838BC(v5, v7);
    char v10 = v9;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v10)
    {
      if (qword_100969E08 != -1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      sub_10000B47C(v11, (uint64_t)qword_100974260);
      swift_bridgeObjectRetain_n();
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        v20[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v14 = 136315138;
        swift_bridgeObjectRetain();
        sub_100254634(v5, v7, v20);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Transfer %s no longer being tracked. Ending session for it over XPC.", v14, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      swift_beginAccess();
      os_log_type_t v15 = (void *)sub_1002A9D88(v5, v7);
      swift_endAccess();
      swift_bridgeObjectRelease();

      sub_100439140(a1);
      uint64_t v16 = OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUISession;
      uint64_t v17 = *(char **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUISession);
      if (*(void *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer]
        || (uint64_t v18 = v17,
            sub_10043F670(),
            v18,
            *(void *)(*(void *)(v2 + v16)
                      + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer)))
      {
        [(id)swift_unknownObjectRetain() transferEndedForIdentifier:v4];
        swift_unknownObjectRelease();
      }

      if (!*(void *)(*(void *)v8 + 16))
      {
        id v19 = *(id *)(v2 + v16);
        sub_1004404A8();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {

    swift_bridgeObjectRelease();
  }
}

void sub_100438B0C(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [a1 transferProgress];
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = [a1 identifier];
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v9 = v8;

    char v10 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_progressObserversById);
    swift_beginAccess();
    if (*(void *)(*v10 + 16)
      && (swift_bridgeObjectRetain(),
          swift_bridgeObjectRetain(),
          sub_1005838BC(v7, v9),
          char v12 = v11,
          swift_bridgeObjectRelease(),
          swift_bridgeObjectRelease(),
          (v12 & 1) != 0))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_100969E08 != -1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      sub_10000B47C(v13, (uint64_t)qword_100974260);
      swift_bridgeObjectRetain_n();
      uint64_t v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        uint64_t v23 = swift_slowAlloc();
        *(_DWORD *)uint64_t v16 = 136315138;
        swift_bridgeObjectRetain();
        sub_100254634(v7, v9, &v23);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "Starting to observe transfer progress for %s", v16, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      uint64_t v23 = (uint64_t)v5;
      swift_getKeyPath();
      uint64_t v17 = swift_allocObject();
      swift_unknownObjectUnownedInit();
      uint64_t v18 = (void *)swift_allocObject();
      v18[2] = v7;
      uint64_t v18[3] = v9;
      v18[4] = v17;
      swift_bridgeObjectRetain();
      id v19 = (void *)_KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
      swift_release();
      swift_release();
      swift_beginAccess();
      id v20 = v19;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v22 = *v10;
      *char v10 = 0x8000000000000000;
      sub_100593D14((uint64_t)v20, v7, v9, isUniquelyReferenced_nonNull_native);
      *char v10 = v22;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
    }
  }
}

void sub_100438E94(void **a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  id v6 = *a1;
  if (qword_100969E08 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000B47C(v7, (uint64_t)qword_100974260);
  swift_bridgeObjectRetain_n();
  id v8 = v6;
  unint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    v20[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_100254634(a3, a4, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2048;
    [v8 fractionCompleted:v19, v20[0]];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "KVO: Transfer %s updated progress: %f", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  uint64_t Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v13 = &Strong[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById];
  swift_beginAccess();
  uint64_t v14 = *(void *)v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  if (*(void *)(v14 + 16) && (uint64_t v15 = sub_1005838BC(a3, a4), (v16 & 1) != 0))
  {
    id v17 = *(id *)(*(void *)(v14 + 56) + 8 * v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = (void *)swift_unknownObjectUnownedLoadStrong();
    sub_100437BC8(v17);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_100439140(void *a1)
{
  id v2 = [a1 identifier];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v5 = v4;

  id v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_progressObserversById);
  swift_beginAccess();
  uint64_t v7 = *v6;
  if (*(void *)(*v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1005838BC(v3, v5);
    if (v9)
    {
      os_log_type_t v10 = *(id *)(*(void *)(v7 + 56) + 8 * v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_100969E08 != -1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      sub_10000B47C(v11, (uint64_t)qword_100974260);
      swift_bridgeObjectRetain_n();
      char v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        v19[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v14 = 136315138;
        swift_bridgeObjectRetain();
        sub_100254634(v3, v5, v19);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Stopping observing transfer progress for %s", v14, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      swift_beginAccess();
      uint64_t v18 = (void *)sub_1002A9DA0(v3, v5);
      swift_endAccess();
      swift_bridgeObjectRelease();

      dispatch thunk of NSKeyValueObservation.invalidate()();
      goto LABEL_15;
    }
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  if (qword_100969E08 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_10000B47C(v15, (uint64_t)qword_100974260);
  os_log_type_t v10 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v16))
  {
    id v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v16, "Didn't find progress observer to stop observing. Returning", v17, 2u);
    swift_slowDealloc();
  }
LABEL_15:
}

uint64_t sub_100439494()
{
  *(void *)(v1 + 128) = v0;
  return _swift_task_switch(sub_1004394B4, 0, 0);
}

uint64_t sub_1004394B4()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = swift_task_alloc();
  v0[17] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[18] = v3;
  uint64_t v4 = sub_10000A844(&qword_100974528);
  *uint64_t v3 = v0;
  v3[1] = sub_1004395B8;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 15, 0, 0, 0xD000000000000011, 0x80000001007BD730, sub_100442DF4, v2, v4);
}

uint64_t sub_1004395B8()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100439940;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1004396D4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1004396D4()
{
  uint64_t v1 = (void *)v0[15];
  v0[20] = v1;
  v0[2] = v0;
  v0[3] = sub_1004397CC;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10036188C;
  v0[13] = &unk_1008DADE0;
  v0[14] = v2;
  [v1 registerForPermissionRequests:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1004397CC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 168) = v1;
  if (v1) {
    uint64_t v2 = sub_1004399A4;
  }
  else {
    uint64_t v2 = sub_1004398DC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1004398DC()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100439940()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1004399A4()
{
  swift_willThrow();
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100439A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v21 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v19 = *(void *)(v7 - 8);
  uint64_t v20 = v7;
  __chkstk_darwin(v7);
  char v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000A844((uint64_t *)&unk_100974580);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  v18[1] = *(void *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_queue);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_100442ECC;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008DAE20;
  os_log_type_t v16 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v22 = _swiftEmptyArrayStorage;
  sub_100442F60((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_100442CA0((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v20);
  swift_release();
  return swift_release();
}

void sub_100439DC4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUISession;
    uint64_t v3 = *(char **)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUISession);
    if (*(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer]
      || (uint64_t v4 = v3,
          sub_10043F670(),
          v4,
          *(void *)(*(void *)&v1[v2] + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer)))
    {
      swift_unknownObjectRetain();
      sub_10000A844((uint64_t *)&unk_100974580);
      CheckedContinuation.resume(returning:)();
    }
    else
    {
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v7 = 10;
      *(void *)(v7 + 8) = 0xD000000000000010;
      *(void *)(v7 + 16) = 0x80000001007BD750;
      swift_willThrow();
      sub_10000A844((uint64_t *)&unk_100974580);
      CheckedContinuation.resume(throwing:)();
    }
  }
  else
  {
    uint64_t v5 = type metadata accessor for SFAirDropSend.Failure();
    sub_100442F60(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, enum case for SFAirDropSend.Failure.cancelled(_:), v5);
    sub_10000A844((uint64_t *)&unk_100974580);
    CheckedContinuation.resume(throwing:)();
  }
}

uint64_t sub_100439FAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SFAirDropSend.Transfer.State();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SFAirDrop.DisplayPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for SFAirDrop.DisplayPriority.high(_:), v6);
  char v10 = static SFAirDrop.DisplayPriority.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    int v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
    if (v11 == enum case for SFAirDropSend.Transfer.State.transferring(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
      swift_bridgeObjectRelease();
      uint64_t v12 = sub_10000A844((uint64_t *)&unk_10097C3A0);
      uint64_t v13 = &v5[*(int *)(v12 + 48)];
      swift_bridgeObjectRelease();
      unint64_t v14 = &v5[*(int *)(v12 + 80)];
      uint64_t v15 = type metadata accessor for SFAirDrop.DeclineAction();
      (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
      uint64_t v16 = type metadata accessor for SFAirDrop.Progress();
      (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v13, v16);
    }
    else
    {
      if (v11 == enum case for SFAirDropSend.Transfer.State.transferFailed(_:))
      {
        (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
        id v17 = &v5[*(int *)(sub_10000A844(&qword_10096EFF8) + 48)];
        uint64_t v18 = type metadata accessor for SFAirDropSend.Failure();
        (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
      }
      else
      {
        if (v11 != enum case for SFAirDropSend.Transfer.State.completedSuccessfully(_:)) {
          return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        }
        (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
        sub_10000A844((uint64_t *)&unk_100974570);
        swift_bridgeObjectRelease();
      }
      uint64_t v19 = type metadata accessor for SFAirDropSend.Transfer.Metrics();
      (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v5, v19);
    }
  }
  uint64_t v20 = SFAirDropSend.Transfer.State.description.getter();
  sub_10043A8CC(v20, v21);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10043A374(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SFAirDropReceive.Transfer.State();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SFAirDrop.DisplayPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for SFAirDrop.DisplayPriority.high(_:), v6);
  char v10 = static SFAirDrop.DisplayPriority.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v10) {
    goto LABEL_12;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v11 != enum case for SFAirDropReceive.Transfer.State.waitingForAskResponse(_:))
  {
    if (v11 == enum case for SFAirDropReceive.Transfer.State.waitingForShareContactPermissionResponse(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
      uint64_t v13 = &qword_100972418;
    }
    else
    {
      if (v11 == enum case for SFAirDropReceive.Transfer.State.waitingForOpenResponse(_:)
        || v11 == enum case for SFAirDropReceive.Transfer.State.waitingForOpenDestinationResponse(_:))
      {
        (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
        uint64_t v17 = sub_10000A844((uint64_t *)&unk_100972400);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v18 = &v5[*(int *)(v17 + 80)];
        uint64_t v19 = sub_10000A844(&qword_10096B2C0);
        (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
        uint64_t v12 = type metadata accessor for SFAirDropReceive.ItemDestination();
        goto LABEL_11;
      }
      if (v11 == enum case for SFAirDropReceive.Transfer.State.waitingForShouldImportContactResponse(_:))
      {
        (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
        unint64_t v14 = &v5[*(int *)(sub_10000A844((uint64_t *)&unk_100974560) + 48)];
        uint64_t v15 = &qword_10096B2C0;
        goto LABEL_7;
      }
      if (v11 != enum case for SFAirDropReceive.Transfer.State.waitingForContactShareBackResponse(_:))
      {
        if (v11 == enum case for SFAirDropReceive.Transfer.State.completedSuccessfully(_:))
        {
          (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
          uint64_t v23 = &v5[*(int *)(sub_10000A844((uint64_t *)&unk_100974550) + 48)];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v24 = type metadata accessor for SFAirDropReceive.ItemDestination();
          (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
        }
        else
        {
          if (v11 != enum case for SFAirDropReceive.Transfer.State.transferFailed(_:)) {
            return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
          }
          (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
          id v25 = &v5[*(int *)(sub_10000A844(&qword_100970340) + 48)];
          uint64_t v26 = type metadata accessor for SFAirDropReceive.Failure();
          (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
        }
        uint64_t v12 = type metadata accessor for SFAirDropReceive.Transfer.Metrics();
        goto LABEL_11;
      }
      (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
      uint64_t v13 = &qword_1009723E8;
    }
    unint64_t v14 = &v5[*(int *)(sub_10000A844(v13) + 48)];
    uint64_t v15 = (uint64_t *)&unk_1009723F0;
LABEL_7:
    uint64_t v16 = sub_10000A844(v15);
    (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v14, v16);
    uint64_t v12 = type metadata accessor for SFAirDrop.ContactInfo();
    goto LABEL_11;
  }
  (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
  uint64_t v12 = sub_10000A844(&qword_10096B2C0);
LABEL_11:
  (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v5, v12);
LABEL_12:
  uint64_t v20 = SFAirDropReceive.Transfer.State.description.getter();
  sub_10043A8CC(v20, v21);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10043A8CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_queue);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v14 = (void *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_100442DE8;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008DADB8;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  uint64_t v19 = _swiftEmptyArrayStorage;
  sub_100442F60((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_100442CA0((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v18);
  swift_release();
  return swift_release();
}

void sub_10043ABC0(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    sub_10043AC30(a2, a3);
  }
}

void sub_10043AC30(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v98 = a1;
  id v99 = a2;
  uint64_t v4 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v96 = *(void *)(v7 - 8);
  uint64_t v97 = v7;
  __chkstk_darwin(v7);
  unint64_t v94 = (char *)v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for DispatchQoS();
  uint64_t v93 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v92 = (char *)v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchTimeInterval();
  uint64_t v88 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (void *)((char *)v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for DispatchTime();
  uint64_t v90 = *(void *)(v13 - 8);
  uint64_t v91 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v81 - v17;
  uint64_t v19 = type metadata accessor for DispatchPredicate();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (void *)((char *)v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_queue);
  *uint64_t v22 = v23;
  (*(void (**)(void *, void, uint64_t))(v20 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v19);
  id v89 = v23;
  LOBYTE(v23) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v20 + 8))(v22, v19);
  if ((v23 & 1) == 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v24 = OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUIAssertion;
  if (*(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUIAssertion))
  {
    if (qword_100969E08 == -1)
    {
LABEL_4:
      uint64_t v25 = type metadata accessor for Logger();
      sub_10000B47C(v25, (uint64_t)qword_100974260);
      uint64_t v26 = Logger.logObject.getter();
      os_log_type_t v27 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v26, v27))
      {
        id v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v28 = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "Not taking assertion to ensure AirDropUI is active because assertion was already taken", v28, 2u);
        swift_slowDealloc();
      }

      return;
    }
LABEL_29:
    swift_once();
    goto LABEL_4;
  }
  if (*(void *)(*(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUISession)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer))
  {
    swift_bridgeObjectRetain();
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v30 = [self predicateMatchingBundleIdentifier:v29];

    id v31 = self;
    aBlock[0] = 0;
    id v32 = v30;
    id v33 = [v31 handleForPredicate:v32 error:aBlock];
    if (v33)
    {
      id v34 = v33;
      uint64_t v83 = v18;
      id v35 = aBlock[0];
      id v87 = v32;

      id v36 = [v34 identity];
      id v37 = [self targetWithProcessIdentity:v36];
      id v86 = v34;
      id v38 = v37;

      NSString v39 = String._bridgeToObjectiveC()();
      NSString v40 = String._bridgeToObjectiveC()();
      id v41 = [self attributeWithDomain:v39 name:v40];

      sub_10000A844(&qword_10096B3E0);
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_100773BD0;
      *(void *)(v42 + 32) = v41;
      aBlock[0] = (id)v42;
      specialized Array._endMutation()();
      id v43 = objc_allocWithZone((Class)RBSAssertion);
      id v44 = v38;
      id v84 = v41;
      NSString v45 = String._bridgeToObjectiveC()();
      sub_10000B740(0, (unint64_t *)&unk_100974518);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v47 = [v43 initWithExplanation:v45 target:v44 attributes:isa];
      id v85 = v44;

      aBlock[0] = 0;
      if ([v47 acquireWithError:aBlock])
      {
        uint64_t v48 = qword_100969E08;
        id v49 = aBlock[0];
        if (v48 != -1) {
          swift_once();
        }
        uint64_t v50 = type metadata accessor for Logger();
        sub_10000B47C(v50, (uint64_t)qword_100974260);
        id v51 = v99;
        swift_bridgeObjectRetain_n();
        uint64_t v52 = Logger.logObject.getter();
        os_log_type_t v53 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v52, v53))
        {
          uint64_t v54 = (uint8_t *)swift_slowAlloc();
          uint64_t v55 = (void *)swift_slowAlloc();
          id v82 = v47;
          aBlock[0] = v55;
          *(_DWORD *)uint64_t v54 = 136315138;
          v81[1] = v54 + 4;
          swift_bridgeObjectRetain();
          uint64_t v100 = (void *)sub_100254634(v98, (unint64_t)v99, (uint64_t *)aBlock);
          id v51 = v99;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v52, v53, "Successfully acquired assertion for state %s", v54, 0xCu);
          swift_arrayDestroy();
          id v47 = v82;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        uint64_t v70 = v88;
        uint64_t v71 = *(void **)(v3 + v24);
        *(void *)(v3 + v24) = v47;
        id v99 = v47;

        static DispatchTime.now()();
        *uint64_t v12 = 2;
        (*(void (**)(void *, void, uint64_t))(v70 + 104))(v12, enum case for DispatchTimeInterval.seconds(_:), v10);
        uint64_t v72 = v83;
        DispatchTime.advanced(by:)();
        (*(void (**)(void *, uint64_t))(v70 + 8))(v12, v10);
        uint64_t v73 = v91;
        uint64_t v90 = *(void *)(v90 + 8);
        ((void (*)(char *, uint64_t))v90)(v16, v91);
        uint64_t v74 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v75 = (void *)swift_allocObject();
        uint64_t v76 = v98;
        v75[2] = v74;
        v75[3] = v76;
        v75[4] = v51;
        aBlock[4] = sub_100442D98;
        aBlock[5] = v75;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = (id)1107296256;
        aBlock[2] = sub_100296520;
        aBlock[3] = &unk_1008DAD68;
        uint64_t v77 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v78 = v92;
        static DispatchQoS.unspecified.getter();
        uint64_t v100 = _swiftEmptyArrayStorage;
        sub_100442F60((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10000A844((uint64_t *)&unk_10096C490);
        sub_100442CA0((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
        uint64_t v79 = v94;
        uint64_t v80 = v97;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v77);

        (*(void (**)(char *, uint64_t))(v96 + 8))(v79, v80);
        (*(void (**)(char *, uint64_t))(v93 + 8))(v78, v95);
        ((void (*)(char *, uint64_t))v90)(v72, v73);
        swift_release();
        swift_release();
        return;
      }
      id v63 = aBlock[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      id v32 = v87;
      id v62 = v85;
    }
    else
    {
      id v61 = aBlock[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      id v62 = v32;
    }

    if (qword_100969E08 != -1) {
      swift_once();
    }
    uint64_t v64 = type metadata accessor for Logger();
    sub_10000B47C(v64, (uint64_t)qword_100974260);
    swift_errorRetain();
    swift_errorRetain();
    id v65 = Logger.logObject.getter();
    os_log_type_t v66 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      uint64_t v68 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v67 = 138412290;
      swift_errorRetain();
      uint64_t v69 = (void *)_swift_stdlib_bridgeErrorToNSError();
      aBlock[0] = v69;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v68 = v69;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "Failed to take assertion on AirDropUI ensuring it is active: %@", v67, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    if (qword_100969E08 != -1) {
      swift_once();
    }
    uint64_t v56 = type metadata accessor for Logger();
    sub_10000B47C(v56, (uint64_t)qword_100974260);
    NSString v57 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v57, v58))
    {
      Class v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Class v59 = 0;
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "AirDropUI process is suspended and we need it to be active. Launching AirDropUI", v59, 2u);
      swift_slowDealloc();
    }

    uint64_t v60 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v6, 1, 1, v60);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    static Task<>.noThrow(priority:operation:)();
    swift_release();
    swift_release();
    sub_10000A7E8((uint64_t)v6, &qword_10096C920);
  }
}

uint64_t sub_10043BAD8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a2;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v3 = static AirDropActor.shared;
  *(void *)(v2 + 56) = static AirDropActor.shared;
  return _swift_task_switch(sub_10043BB78, v3, 0);
}

uint64_t sub_10043BB78()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[8] = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[9] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_10043BC80;
    v3[16] = v2;
    return _swift_task_switch(sub_1004394B4, 0, 0);
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_10043BC80()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v4 = sub_10043BE0C;
  }
  else {
    uint64_t v4 = sub_10043BDAC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10043BDAC()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10043BE0C()
{
  if (qword_100969E08 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_100974260);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v9 = *(void **)(v0 + 64);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 40) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to launch AirDropUI: %@", v4, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

void sub_10043C024(uint64_t a1, uint64_t a2, unint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (char *)Strong;
    uint64_t v7 = OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUIAssertion;
    [*(id *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUIAssertion) invalidate];
    uint64_t v8 = *(void **)&v6[v7];
    *(void *)&v6[v7] = 0;

    if (qword_100969E08 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000B47C(v9, (uint64_t)qword_100974260);
    swift_bridgeObjectRetain_n();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      swift_bridgeObjectRetain();
      sub_100254634(a2, a3, &v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Invalidated assertion for state %s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_10043C228()
{
  uint64_t v51 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v1 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  os_log_type_t v3 = (char *)v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v46 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  NSString v45 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v43 = *(void *)(v9 - 8);
  uint64_t v44 = v9;
  __chkstk_darwin(v9);
  uint64_t v42 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v38 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v39 = v13;
  uint64_t v40 = (uint64_t)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v41 = (char *)v36 - v14;
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_10043EC60(v15);
  int64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    v36[1] = v0;
    uint64_t v37 = v7;
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1002555F0(0, v17, 0);
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    uint64_t v18 = v1 + 16;
    id v49 = v19;
    unint64_t v20 = (*(unsigned __int8 *)(v18 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 64);
    v36[0] = v16;
    unint64_t v21 = v16 + v20;
    uint64_t v22 = *(void *)(v18 + 56);
    uint64_t v47 = v4 + 32;
    uint64_t v48 = v22;
    do
    {
      uint64_t v23 = v51;
      v49(v3, v21, v51);
      SFAirDropReceive.Transfer.startDate.getter();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v3, v23);
      uint64_t v24 = (void *)aBlock[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1002555F0(0, v24[2] + 1, 1);
        uint64_t v24 = (void *)aBlock[0];
      }
      unint64_t v26 = v24[2];
      unint64_t v25 = v24[3];
      if (v26 >= v25 >> 1)
      {
        sub_1002555F0(v25 > 1, v26 + 1, 1);
        uint64_t v24 = (void *)aBlock[0];
      }
      v24[2] = v26 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))((unint64_t)v24+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v26, v6, v50);
      aBlock[0] = v24;
      v21 += v48;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    uint64_t v7 = v37;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = _swiftEmptyArrayStorage;
  }
  os_log_type_t v27 = v41;
  sub_10043F15C((uint64_t)v24, v41);
  swift_bridgeObjectRelease();
  uint64_t v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v29 = v40;
  sub_10024A330((uint64_t)v27, v40, (uint64_t *)&unk_100975040);
  unint64_t v30 = (*(unsigned __int8 *)(v38 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v28;
  sub_10024D388(v29, v31 + v30, (uint64_t *)&unk_100975040);
  aBlock[4] = sub_1004418B8;
  aBlock[5] = v31;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008DABB0;
  id v32 = _Block_copy(aBlock);
  swift_retain();
  id v33 = v42;
  static DispatchQoS.unspecified.getter();
  uint64_t v52 = _swiftEmptyArrayStorage;
  sub_100442F60((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_100442CA0((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  id v34 = v45;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v32);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v34, v7);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v33, v44);
  sub_10000A7E8((uint64_t)v27, (uint64_t *)&unk_100975040);
  swift_release();
  return swift_release();
}

id sub_10043C8C0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDAirDropUISessionManager();
  return [super dealloc];
}

uint64_t sub_10043C9C0()
{
  return type metadata accessor for SDAirDropUISessionManager();
}

uint64_t type metadata accessor for SDAirDropUISessionManager()
{
  uint64_t result = qword_1009742F0;
  if (!qword_1009742F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10043CA14()
{
  sub_100271710();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10043CAF0(void *a1, uint64_t a2)
{
  *(void *)(*v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();
}

uint64_t sub_10043CB44()
{
  return sub_100437214();
}

uint64_t sub_10043CB68()
{
  uint64_t v2 = *v0;
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_10000A6F4;
  v3[16] = v2;
  return _swift_task_switch(sub_1004394B4, 0, 0);
}

uint64_t sub_10043CC14(uint64_t a1)
{
  return sub_100439FAC(a1);
}

uint64_t sub_10043CC38(uint64_t a1)
{
  return sub_10043A374(a1);
}

uint64_t sub_10043CC5C(uint64_t a1, uint64_t a2)
{
  return sub_10043A8CC(a1, a2);
}

uint64_t sub_10043CC80()
{
  return sub_10043C228();
}

uint64_t sub_10043CCA4(uint64_t a1)
{
  return sub_10043CCC8(a1);
}

uint64_t sub_10043CCC8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v20 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  v17[1] = *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_queue];
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v13 + v12, (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_10044136C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008DAB10;
  uint64_t v14 = _Block_copy(aBlock);
  uint64_t v15 = v1;
  static DispatchQoS.unspecified.getter();
  unint64_t v21 = _swiftEmptyArrayStorage;
  sub_100442F60((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_100442CA0((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v19);
  return swift_release();
}

void sub_10043D03C(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [a1 identifier];
  uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v6 = v5;

  id v7 = [a1 transferState];
  id v8 = (id)SFAirDropTransferStateToString();
  if (v8)
  {
    uint64_t v9 = v8;
    unint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v10;
  }
  else
  {
    unint64_t v36 = 0;
    unint64_t v11 = 0;
  }
  [a1 userResponse];
  id v12 = (id)SFAirDropTransferUserResponseToString();
  uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v14 = v13;

  id v15 = [a1 transferProgress];
  id v16 = [a1 completedURLs];
  if (v16)
  {
    int64_t v17 = v16;
    type metadata accessor for URL();
    uint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v35 = *(void *)(v18 + 16);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v35 = 0;
  }
  if (qword_100969E08 != -1) {
    swift_once();
  }
  unint64_t v38 = (unint64_t)v7 - 10;
  uint64_t v19 = type metadata accessor for Logger();
  sub_10000B47C(v19, (uint64_t)qword_100974260);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  id v33 = v15;
  id v20 = v15;
  unint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    id v32 = (void *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136316162;
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_100254634(v37, v6, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 12) = 2080;
    unint64_t v24 = v11;
    if (!v11)
    {
      uint64_t v40 = 0;
      unint64_t v41 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v24 = 0x80000001007B7770;
      unint64_t v36 = 0xD000000000000015;
    }
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_100254634(v36, v24, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_100254634(v34, v14, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 32) = 2112;
    if (v20)
    {
      uint64_t v40 = (uint64_t)v20;
      id v25 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      id v26 = v33;
    }
    else
    {
      uint64_t v40 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      id v26 = 0;
    }
    *id v32 = v26;

    *(_WORD *)(v23 + 42) = 2048;
    uint64_t v40 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Transfer %s changed to state: %s. Response: %s. Progress: %@. Completed URLs: %ld", (uint8_t *)v23, 0x34u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  if (v38 > 0xFFFFFFFFFFFFFFFDLL)
  {
    uint64_t v27 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById;
    swift_beginAccess();
    if (*(void *)(*(void *)v27 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1005838BC(v37, v6);
      if ((v28 & 1) == 0)
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        return;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 136315138;
        swift_bridgeObjectRetain();
        sub_100254634(v37, v6, &v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "Transfer %s no longer needs to be tracked. It is either terminated or failed.", v31, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_1004387C8(a1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1004373A0(a1);
    sub_100437BC8(a1);
  }
}

void sub_10043D778(void *a1)
{
  if (qword_100969E08 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_100974260);
  id v3 = a1;
  id v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)unint64_t v6 = 136315138;
    id v7 = [v3 identifier];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    sub_100254634(v8, v10, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Transfer %s was removed by transfer manager. Ending session.", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_1004387C8(v3);
}

uint64_t sub_10043D9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  uint64_t v6 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100969E08 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000B47C(v9, (uint64_t)qword_100974260);
  unint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    id v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Starting Wallet UI service for peerPayment type boop", v12, 2u);
    swift_slowDealloc();
  }

  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 1, 1, v13);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v3);
  unint64_t v15 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v14;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v16 + v15, (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  static Task<>.noThrow(priority:operation:)();
  swift_release();
  swift_release();
  return sub_10000A7E8((uint64_t)v8, &qword_10096C920);
}

uint64_t sub_10043DC98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 48) = a2;
  *(void *)(v3 + 56) = a3;
  return _swift_task_switch(sub_10043DCB8, 0, 0);
}

uint64_t sub_10043DCB8()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  v0[8] = Strong;
  if (Strong)
  {
    uint64_t v7 = (uint64_t (*)(uint64_t, id))((char *)&dword_10097DE98 + dword_10097DE98);
    id v2 = Strong;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[9] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_10043DDD4;
    uint64_t v4 = v0[7];
    return v7(v4, v2);
  }
  else
  {
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_10043DDD4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10043DEF0;
  }
  else
  {

    uint64_t v3 = sub_10043BDAC;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10043DEF0()
{
  if (qword_100969E08 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_100974260);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(NSObject **)(v0 + 64);
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 40) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v7 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Wallet UI service show failed with error %@", v6, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    uint64_t v5 = v2;
  }
  swift_errorRelease();

  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_10043E214()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  BOOL v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[1] = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_queue);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_100442CF0;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008DAD18;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v13 = _swiftEmptyArrayStorage;
  sub_100442F60((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_100442CA0((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  swift_release();
  return swift_release();
}

uint64_t sub_10043E54C()
{
  uint64_t v0 = type metadata accessor for Calendar.Component();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  Class v59 = &v43[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v60 = type metadata accessor for Calendar();
  uint64_t v58 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  BOOL v4 = &v43[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v56 = &v43[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v9 = &v43[-v8];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void **)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  NSString v57 = &v43[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v55 = &v43[-v15];
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = &v43[-v17];
  __chkstk_darwin(v16);
  id v20 = &v43[-v19];
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    os_log_type_t v22 = (void *)result;
    uint64_t v53 = v1;
    uint64_t v54 = v0;
    id v61 = v11;
    uint64_t v23 = result + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_ongoingWalletTransferStartDate;
    swift_beginAccess();
    uint64_t v24 = v23;
    id v25 = v61;
    sub_10024A330(v24, (uint64_t)v9, (uint64_t *)&unk_100975040);
    id v26 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v25[6];
    if (v26((uint64_t)v9, 1, v10) == 1)
    {

      return sub_10000A7E8((uint64_t)v9, (uint64_t *)&unk_100975040);
    }
    else
    {
      uint64_t v51 = (void (*)(unsigned char *, unsigned char *, uint64_t))v25[4];
      uint64_t v52 = v25 + 4;
      v51(v20, v9, v10);
      if (qword_100969E08 != -1) {
        swift_once();
      }
      uint64_t v50 = v26;
      uint64_t v27 = type metadata accessor for Logger();
      sub_10000B47C(v27, (uint64_t)qword_100974260);
      char v28 = (void (*)(unsigned char *, unsigned char *, uint64_t))v25[2];
      id v49 = v25 + 2;
      uint64_t v48 = v28;
      v28(v18, v20, v10);
      uint64_t v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.default.getter();
      int v31 = v30;
      if (os_log_type_enabled(v29, v30))
      {
        os_log_t v46 = v29;
        id v32 = (uint8_t *)swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        uint64_t v63 = v45;
        int v44 = v31;
        *(_DWORD *)id v32 = 136315138;
        uint64_t v47 = (void (*)(uint64_t, uint64_t))(v32 + 4);
        sub_100442F60(&qword_100974530, (void (*)(uint64_t))&type metadata accessor for Date);
        uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v62 = sub_100254634(v33, v34, &v63);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v47 = (void (*)(uint64_t, uint64_t))v25[1];
        v47((uint64_t)v18, v10);
        uint64_t v29 = v46;
        _os_log_impl((void *)&_mh_execute_header, v46, (os_log_type_t)v44, "Relaunching Wallet UI for transfer with start date %s", v32, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v47 = (void (*)(uint64_t, uint64_t))v25[1];
        v47((uint64_t)v18, v10);
      }

      static Calendar.current.getter();
      uint64_t v36 = v53;
      uint64_t v35 = v54;
      uint64_t v37 = v59;
      (*(void (**)(unsigned char *, void, uint64_t))(v53 + 104))(v59, enum case for Calendar.Component.second(_:), v54);
      uint64_t v38 = (uint64_t)v56;
      Calendar.date(byAdding:value:to:wrappingComponents:)();
      (*(void (**)(unsigned char *, uint64_t))(v36 + 8))(v37, v35);
      (*(void (**)(unsigned char *, uint64_t))(v58 + 8))(v4, v60);
      uint64_t v39 = v57;
      v48(v57, v20, v10);
      if (v50(v38, 1, v10) == 1)
      {
        uint64_t v40 = (uint64_t)v55;
        v51(v55, v39, v10);
        sub_10000A7E8(v38, (uint64_t *)&unk_100975040);
        unint64_t v41 = v47;
      }
      else
      {
        uint64_t v42 = v39;
        unint64_t v41 = v47;
        v47((uint64_t)v42, v10);
        uint64_t v40 = (uint64_t)v55;
        v51(v55, (unsigned char *)v38, v10);
      }
      sub_10043CCC8(v40);

      v41(v40, v10);
      return ((uint64_t (*)(unsigned char *, uint64_t))v41)(v20, v10);
    }
  }
  return result;
}

uint64_t sub_10043EC60(uint64_t a1)
{
  uint64_t v55 = type metadata accessor for SFAirDropClient.Identifier();
  uint64_t v2 = *(void *)(v55 - 8);
  uint64_t v3 = __chkstk_darwin(v55);
  uint64_t v54 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v53 = (char *)&v41 - v5;
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v45 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v52 = (char *)&v41 - v10;
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v50 = (char *)&v41 - v13;
  int64_t v14 = 0;
  id v61 = (char *)_swiftEmptyArrayStorage;
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v43 = a1 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  int64_t v44 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v51 = v12 + 16;
  unsigned int v49 = enum case for SFAirDropClient.Identifier.wallet(_:);
  uint64_t v47 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v48 = (void (**)(char *, void, uint64_t))(v2 + 104);
  uint64_t v58 = v12;
  uint64_t v42 = (uint64_t (**)(char *, uint64_t))(v12 + 8);
  uint64_t v46 = a1;
  while (1)
  {
    if (v18)
    {
      uint64_t v59 = (v18 - 1) & v18;
      int64_t v60 = v14;
      unint64_t v19 = __clz(__rbit64(v18)) | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v20 >= v44) {
      goto LABEL_30;
    }
    unint64_t v21 = *(void *)(v43 + 8 * v20);
    int64_t v22 = v14 + 1;
    if (!v21)
    {
      int64_t v22 = v14 + 2;
      if (v14 + 2 >= v44) {
        goto LABEL_30;
      }
      unint64_t v21 = *(void *)(v43 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = v14 + 3;
        if (v14 + 3 >= v44) {
          goto LABEL_30;
        }
        unint64_t v21 = *(void *)(v43 + 8 * v22);
        if (!v21)
        {
          int64_t v22 = v14 + 4;
          if (v14 + 4 >= v44) {
            goto LABEL_30;
          }
          unint64_t v21 = *(void *)(v43 + 8 * v22);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_23:
    uint64_t v59 = (v21 - 1) & v21;
    int64_t v60 = v22;
    unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
LABEL_24:
    uint64_t v24 = *(void *)(a1 + 56);
    uint64_t v25 = v58;
    uint64_t v56 = *(void *)(v58 + 72);
    id v26 = v52;
    (*(void (**)(char *, unint64_t, uint64_t))(v58 + 16))(v52, v24 + v56 * v19, v6);
    uint64_t v27 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 32);
    char v28 = v50;
    NSString v57 = v27;
    v27(v50, v26, v6);
    uint64_t v29 = v6;
    os_log_type_t v30 = v53;
    SFAirDropReceive.Transfer.presenter.getter();
    int v31 = v28;
    id v32 = v54;
    uint64_t v33 = v55;
    (*v48)(v54, v49, v55);
    LOBYTE(v28) = static SFAirDropClient.Identifier.== infix(_:_:)();
    unint64_t v34 = *v47;
    (*v47)(v32, v33);
    v34(v30, v33);
    if (v28)
    {
      uint64_t v35 = v31;
      uint64_t v36 = v56;
      uint64_t v37 = v57;
      v57(v45, v35, v29);
      uint64_t v38 = v61;
      uint64_t v6 = v29;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10025562C(0, *((void *)v38 + 2) + 1, 1);
        uint64_t v38 = v61;
      }
      unint64_t v40 = *((void *)v38 + 2);
      unint64_t v39 = *((void *)v38 + 3);
      if (v40 >= v39 >> 1)
      {
        sub_10025562C(v39 > 1, v40 + 1, 1);
        uint64_t v38 = v61;
      }
      *((void *)v38 + 2) = v40 + 1;
      uint64_t result = v37(&v38[((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ v40 * v36], v45, v29);
      id v61 = v38;
    }
    else
    {
      uint64_t result = (*v42)(v31, v29);
      uint64_t v6 = v29;
    }
    a1 = v46;
    unint64_t v18 = v59;
    int64_t v14 = v60;
  }
  uint64_t v23 = v14 + 5;
  if (v14 + 5 >= v44)
  {
LABEL_30:
    swift_release();
    return (uint64_t)v61;
  }
  unint64_t v21 = *(void *)(v43 + 8 * v23);
  if (v21)
  {
    int64_t v22 = v14 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v22 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v22 >= v44) {
      goto LABEL_30;
    }
    unint64_t v21 = *(void *)(v43 + 8 * v22);
    ++v23;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_10043F15C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  int64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17)
  {
    unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v19(v9, 1, 1, v10);
    goto LABEL_5;
  }
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  uint64_t v37 = v11 + 16;
  v36(v9, a1 + v18, v10);
  uint64_t v31 = a1;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v38(v9, 0, 1, v10);
  unint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v35 = v11 + 48;
  if (v34(v9, 1, v10) == 1)
  {
    unint64_t v19 = v38;
LABEL_5:
    sub_10000A7E8((uint64_t)v9, (uint64_t *)&unk_100975040);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v19)(a2, 1, 1, v10);
  }
  os_log_type_t v30 = a2;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v33(v16, v9, v10);
  swift_bridgeObjectRetain();
  uint64_t v21 = v17 - 1;
  if (v21)
  {
    uint64_t v23 = *(void *)(v11 + 72);
    uint64_t v24 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v32 = v23;
    unint64_t v25 = v31 + v23 + v18;
    id v26 = v33;
    while (1)
    {
      v36(v7, v25, v10);
      v38(v7, 0, 1, v10);
      if (v34(v7, 1, v10) == 1) {
        break;
      }
      v26(v14, v7, v10);
      sub_100442F60((unint64_t *)&unk_100974490, (void (*)(uint64_t))&type metadata accessor for Date);
      char v27 = dispatch thunk of static Comparable.< infix(_:_:)();
      char v28 = *v24;
      if (v27)
      {
        v28(v16, v10);
        v26(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v25 += v32;
      if (!--v21) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    v38(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_10000A7E8((uint64_t)v7, (uint64_t *)&unk_100975040);
  int64_t v22 = v30;
  v33(v30, v16, v10);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v38)(v22, 0, 1, v10);
}

void sub_10043F580(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    sub_10024A330(a2, (uint64_t)v5, (uint64_t *)&unk_100975040);
    uint64_t v8 = (uint64_t)v7 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_ongoingWalletTransferStartDate;
    swift_beginAccess();
    sub_100340238((uint64_t)v5, v8);
    swift_endAccess();
  }
}

void sub_10043F670()
{
  uint64_t v1 = v0;
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t v55 = [self interfaceWithIdentifier:v2];

  uint64_t v3 = self;
  id v4 = [v3 protocolForProtocol:&OBJC_PROTOCOL___SFAirDropUIServer];
  [v55 setServer:v4];

  id v5 = [v3 protocolForProtocol:&OBJC_PROTOCOL___SFAirDropUIClient];
  [v55 setClient:v5];

  [v55 setClientMessagingExpectation:0];
  NSString v6 = String._bridgeToObjectiveC()();
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [self endpointForMachName:v6 service:v7 instance:0];

  uint64_t v9 = qword_100969E08;
  if (v8)
  {
    id v10 = v8;
    if (v9 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000B47C(v11, (uint64_t)qword_100974260);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v12, v13))
    {
      int64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "SDAirDropUISessionManager: endpoint created!", v14, 2u);
      swift_slowDealloc();
    }

    id v15 = [self connectionWithEndpoint:v10];
    if (v15)
    {
      uint64_t v16 = v15;
      void aBlock[6] = &OBJC_PROTOCOL___BSServiceConnectionClient;
      uint64_t v17 = swift_dynamicCastObjCProtocolConditional();
      if (v17)
      {
        unint64_t v18 = (void *)v17;
        id v19 = v16;
        int64_t v20 = Logger.logObject.getter();
        os_log_type_t v21 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v20, v21))
        {
          int64_t v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)int64_t v22 = 0;
          _os_log_impl((void *)&_mh_execute_header, v20, v21, "SDAirDropUISessionManager: connection created", v22, 2u);
          swift_slowDealloc();
        }

        uint64_t v23 = swift_allocObject();
        *(void *)(v23 + 16) = v55;
        *(void *)(v23 + 24) = v1;
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = sub_100442C58;
        *(void *)(v24 + 24) = v23;
        aBlock[4] = sub_100442C70;
        aBlock[5] = v24;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100440454;
        aBlock[3] = &unk_1008DAC78;
        unint64_t v25 = _Block_copy(aBlock);
        id v26 = v19;
        char v27 = v55;
        char v28 = v1;
        swift_retain();
        swift_release();
        [v18 configureConnection:v25];

        _Block_release(v25);
        LOBYTE(v25) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if (v25)
        {
          __break(1u);
        }
        else
        {
          uint64_t v56 = v27;
          uint64_t v29 = OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_connection;
          if (*(void *)&v28[OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_connection])
          {
            os_log_type_t v30 = Logger.logObject.getter();
            os_log_type_t v31 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v30, v31))
            {
              uint64_t v32 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v32 = 0;
              _os_log_impl((void *)&_mh_execute_header, v30, v31, "SDAirDropUISessionManager: Previous connection present while trying to activate. Ending previous then activating new connection", v32, 2u);
              swift_slowDealloc();
            }

            sub_1004404A8();
            uint64_t v33 = *(void **)&v28[v29];
          }
          else
          {
            uint64_t v33 = 0;
          }
          *(void *)&v28[v29] = v18;
          id v41 = v26;

          uint64_t v42 = Logger.logObject.getter();
          os_log_type_t v43 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v42, v43))
          {
            int64_t v44 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)int64_t v44 = 0;
            _os_log_impl((void *)&_mh_execute_header, v42, v43, "SDAirDropUISessionManager: Activating Session", v44, 2u);
            swift_slowDealloc();
          }

          [v18 activate];
          NSString v45 = String._bridgeToObjectiveC()();
          NSString v46 = String._bridgeToObjectiveC()();
          id v47 = [self attributeWithDomain:v45 name:v46];

          sub_10000A844(&qword_10096B3E0);
          uint64_t v48 = swift_allocObject();
          *(_OWORD *)(v48 + 16) = xmmword_100773BD0;
          *(void *)(v48 + 32) = v47;
          aBlock[0] = v48;
          specialized Array._endMutation()();
          sub_10000B740(0, (unint64_t *)&unk_100974518);
          id v49 = v47;
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          id v51 = [v18 remoteTargetWithLaunchingAssertionAttributes:isa];

          if (v51)
          {
            _bridgeAnyObjectToAny(_:)();
            swift_unknownObjectRelease();
          }
          else
          {
            long long v58 = 0u;
            long long v59 = 0u;
          }
          sub_10024D388((uint64_t)&v58, (uint64_t)aBlock, (uint64_t *)&unk_10096AC20);
          sub_10024A330((uint64_t)aBlock, (uint64_t)&v58, (uint64_t *)&unk_10096AC20);
          if (*((void *)&v59 + 1))
          {
            sub_10000A844(&qword_100974528);
            int v52 = swift_dynamicCast();
            uint64_t v53 = v57;
            if (!v52) {
              uint64_t v53 = 0;
            }
          }
          else
          {
            sub_10000A7E8((uint64_t)&v58, (uint64_t *)&unk_10096AC20);
            uint64_t v53 = 0;
          }
          *(void *)&v28[OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer] = v53;

          swift_unknownObjectRelease();
          sub_10000A7E8((uint64_t)aBlock, (uint64_t *)&unk_10096AC20);
          swift_release();
        }
        return;
      }
    }
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      unint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Could not create a connection with the AirDropUI endpoint", v40, 2u);
      swift_slowDealloc();
    }
    else
    {
    }
    return;
  }
  if (qword_100969E08 != -1) {
    swift_once();
  }
  uint64_t v34 = type metadata accessor for Logger();
  sub_10000B47C(v34, (uint64_t)qword_100974260);
  oslog = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v35, "Could not find endpoint for AirDropUI launch angel. It may not be loaded.", v36, 2u);
    swift_slowDealloc();

    uint64_t v37 = v55;
  }
  else
  {

    uint64_t v37 = oslog;
  }
}

id sub_10043FF90(void *a1, uint64_t a2, uint64_t a3)
{
  if (qword_100969E08 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_100974260);
  NSString v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "SDAirDropUISessionManager: configuring session...", v9, 2u);
    swift_slowDealloc();
  }

  NSString v10 = String._bridgeToObjectiveC()();
  [a1 setName:v10];

  id v11 = [self userInitiated];
  [a1 setServiceQuality:v11];

  [a1 setInterface:a2];
  [a1 setInterfaceTarget:a3];
  int64_t v20 = sub_100440260;
  uint64_t v21 = 0;
  uint64_t v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  unint64_t v18 = sub_1002670F0;
  id v19 = &unk_1008DACA0;
  uint64_t v12 = _Block_copy(&v16);
  [a1 setActivationHandler:v12];
  _Block_release(v12);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  int64_t v20 = sub_100442C98;
  uint64_t v21 = v13;
  uint64_t v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  unint64_t v18 = sub_1002670F0;
  id v19 = &unk_1008DACF0;
  int64_t v14 = _Block_copy(&v16);
  swift_release();
  [a1 setInvalidationHandler:v14];
  _Block_release(v14);
  return [a1 setTargetQueue:*(void *)(a3 + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_queue)];
}

void sub_100440260()
{
  if (qword_100969E08 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_100974260);
  oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    NSString v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "SDAirDropUISessionManager connection activated!", v2, 2u);
    swift_slowDealloc();
  }
}

void sub_100440348()
{
  if (qword_100969E08 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_100974260);
  os_log_type_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "SDAirDropUISessionManager connection invalidated with endpoint!", v3, 2u);
    swift_slowDealloc();
  }

  id Strong = (id)swift_unknownObjectUnownedLoadStrong();
  sub_1004404A8();
}

uint64_t sub_100440454(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);

  return swift_unknownObjectRelease();
}

void sub_1004404A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_connection;
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_connection);
  if (!v6)
  {
    if (qword_100969E08 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_10000B47C(v27, (uint64_t)qword_100974260);
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v32, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v28, "XPC Connection not available, skipping end.", v29, 2u);
      swift_slowDealloc();
    }
    goto LABEL_17;
  }
  uint64_t v7 = qword_100969E08;
  uint64_t v32 = v6;
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000B47C(v8, (uint64_t)qword_100974260);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "SDAirDropUISessionManager: Invalidating connection", v11, 2u);
    swift_slowDealloc();
  }

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = (char *)Strong;
    uint64_t v14 = OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUIAssertion;
    [*(id *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_airDropUIAssertion) invalidate];
    id v15 = *(void **)&v13[v14];
    *(void *)&v13[v14] = 0;
  }
  [v32 invalidate];
  *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer) = 0;
  swift_unknownObjectRelease();
  uint64_t v16 = *(void **)(v1 + v5);
  *(void *)(v1 + v5) = 0;

  uint64_t v17 = swift_unknownObjectWeakLoadStrong();
  if (!v17)
  {
LABEL_17:
    os_log_type_t v30 = v32;
    goto LABEL_18;
  }
  os_log_type_t v31 = v17;
  uint64_t v18 = swift_unknownObjectWeakLoadStrong();
  if (v18)
  {
    id v19 = (void *)v18;
    uint64_t v20 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v4, 1, 1, v20);
    uint64_t v21 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v22 = qword_100969B90;
    swift_retain();
    uint64_t v23 = v31;
    if (v22 != -1) {
      swift_once();
    }
    uint64_t v24 = static AirDropActor.shared;
    uint64_t v25 = sub_100442F60((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    id v26 = (void *)swift_allocObject();
    _OWORD v26[2] = v24;
    v26[3] = v25;
    v26[4] = v21;
    v26[5] = v23;
    swift_retain();
    swift_release();
    sub_10028CFA8((uint64_t)v4, (uint64_t)&unk_1009744A8, (uint64_t)v26);
    swift_release();

    return;
  }

  os_log_type_t v30 = v31;
LABEL_18:
}

id sub_1004408D4()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_connection];
  if (v1) {
    [v1 invalidate];
  }
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for AirDropUISessionClient();
  return [super dealloc];
}

id sub_1004409FC()
{
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  objc_super v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  uint64_t v10 = OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_queue;
  v9[1] = sub_10000B740(0, (unint64_t *)&qword_10096A1A0);
  uint64_t v6 = v0;
  static DispatchQoS.userInitiated.getter();
  uint64_t v13 = _swiftEmptyArrayStorage;
  sub_100442F60((unint64_t *)&unk_100974840, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000A844((uint64_t *)&unk_10096A1B0);
  sub_100442CA0((unint64_t *)&qword_100974850, (uint64_t *)&unk_10096A1B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v11);
  *(void *)(v9[2] + v10) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_connection] = 0;
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_airDropUIServer] = 0;
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary22AirDropUISessionClient_delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  uint64_t v7 = (objc_class *)type metadata accessor for AirDropUISessionClient();
  v12.receiver = v6;
  v12.super_class = v7;
  return [super init];
}

uint64_t type metadata accessor for AirDropUISessionClient()
{
  return self;
}

uint64_t sub_100440D3C(void *a1, uint64_t a2, uint64_t a3, const char *a4, void (*a5)(uint64_t, unint64_t))
{
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v10 = v9;
  id v11 = a1;
  sub_100441090(v8, v10, a4, a5);

  return swift_bridgeObjectRelease();
}

void sub_100440DB8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (qword_100969E08 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000B47C(v7, (uint64_t)qword_100974260);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    swift_bridgeObjectRetain();
    sub_100254634(a1, a2, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v10 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_100254634(a3, a4, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "SDAirDropUISessionManager: Received remote request for run action for transfer identifier: %s and action identifier: %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    objc_super v12 = (void *)Strong;
    sub_100442610(a1, a2, a3, a4);
  }
}

void sub_100441090(uint64_t a1, unint64_t a2, const char *a3, void (*a4)(uint64_t, unint64_t))
{
  if (qword_100969E08 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000B47C(v7, (uint64_t)qword_100974260);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_bridgeObjectRetain();
    sub_100254634(a1, a2, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, a3, v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    objc_super v12 = (void *)Strong;
    a4(a1, a2);
  }
}

uint64_t sub_1004412A0()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10044136C()
{
  uint64_t v1 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_10043D9CC(v2, v3);
}

uint64_t sub_1004413D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1004413E0()
{
  return swift_release();
}

uint64_t sub_1004413E8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100441420()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1004414EC()
{
  uint64_t v2 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_10000A6F0;
  v5[6] = v3;
  v5[7] = v4;
  return _swift_task_switch(sub_10043DCB8, 0, 0);
}

void *sub_1004415D4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_23;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      unint64_t v6 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v8 = v7;
        unint64_t v9 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_22;
        }
        id v10 = [v7 actionIdentifier];
        if (v10)
        {
          id v11 = v10;
          uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v14 = v13;

          if (v12 == a2 && v14 == a3)
          {
            swift_bridgeObjectRelease();
LABEL_18:
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            goto LABEL_5;
          }
          char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v16) {
            goto LABEL_18;
          }
        }

LABEL_5:
        ++v6;
        if (v9 == v5) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v6 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      if (!v5) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v7 = *(id *)(a1 + 8 * v6 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100441790()
{
  uint64_t v1 = *(void *)(sub_10000A844((uint64_t *)&unk_100975040) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1004418B8()
{
  return sub_100442EEC((uint64_t *)&unk_100975040, (uint64_t (*)(uint64_t, uint64_t))sub_10043F580);
}

void sub_1004418D8(uint64_t a1)
{
  if (qword_100969E08 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_100974260);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    if (a1)
    {
      swift_errorRetain();
      uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
    }
    else
    {
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v7 = 0;
    }
    void *v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Wallet UI service invalidated with error: %@", v5, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a1) {
      goto LABEL_10;
    }
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    if (a1) {
LABEL_10:
    }
      sub_10043E214();
  }
}

void sub_100441AE8(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById);
  swift_beginAccess();
  uint64_t v6 = *v5;
  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1005838BC(a1, a2);
    if (v8)
    {
      id v9 = *(id *)(*(void *)(v6 + 56) + 8 * v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v10 = [v9 cancelAction];
      [v10 triggerAction];

      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_100969E08 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10000B47C(v11, (uint64_t)qword_100974260);
  swift_bridgeObjectRetain_n();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315138;
    swift_bridgeObjectRetain();
    sub_100254634(a1, a2, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "AirDrop transfer %s not found in actively tracked transfers. Ignoring cancel request.", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_100441D40(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById);
  swift_beginAccess();
  uint64_t v6 = *v5;
  if (!*(void *)(*v5 + 16)) {
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1005838BC(a1, a2);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_12:
    if (qword_100969E08 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10000B47C(v14, (uint64_t)qword_100974260);
    swift_bridgeObjectRetain_n();
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      swift_bridgeObjectRetain();
      sub_100254634(a1, a2, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "AirDrop transfer %s not found in actively tracked transfers. Ignoring accept request.", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return;
  }
  id v9 = *(id *)(*(void *)(v6 + 56) + 8 * v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ([v9 transferState] == (id)1)
  {
    [v9 setUserResponse:1];
    id v10 = [v9 possibleActions];
    sub_10000B740(0, &qword_1009700A8);
    unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = (void *)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v12) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v12 = *(void **)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v12)
      {
LABEL_10:
        swift_bridgeObjectRelease();
        [v12 triggerAction];

        return;
      }
    }
    if ((v11 & 0xC000000000000001) != 0)
    {
      id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_9;
    }
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v13 = *(id *)(v11 + 32);
LABEL_9:
      uint64_t v12 = v13;
      goto LABEL_10;
    }
    __break(1u);
  }
  else
  {
    if (qword_100969E08 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_10000B47C(v18, (uint64_t)qword_100974260);
    swift_bridgeObjectRetain_n();
    id v19 = v9;
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315394;
      swift_bridgeObjectRetain();
      sub_100254634(a1, a2, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2048;
      [v19 transferState];

      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "AirDrop transfer %s is not in Created state%lu. Ignoring accepted request.", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_100442240(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById);
  swift_beginAccess();
  uint64_t v6 = *v5;
  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1005838BC(a1, a2);
    if (v8)
    {
      id v9 = *(id *)(*(void *)(v6 + 56) + 8 * v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ([v9 transferState] == (id)7)
      {
        [v9 setUserResponse:3];
      }
      else
      {
        if (qword_100969E08 != -1) {
          swift_once();
        }
        uint64_t v14 = type metadata accessor for Logger();
        sub_10000B47C(v14, (uint64_t)qword_100974260);
        swift_bridgeObjectRetain_n();
        uint64_t v15 = Logger.logObject.getter();
        os_log_type_t v16 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v15, v16))
        {
          uint64_t v17 = (uint8_t *)swift_slowAlloc();
          uint64_t v18 = swift_slowAlloc();
          *(_DWORD *)uint64_t v17 = 136315138;
          swift_bridgeObjectRetain();
          sub_100254634(a1, a2, &v18);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v15, v16, "AirDrop transfer %s is not in ReadyForOpen state. Ignoring close request.", v17, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
      }
      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_100969E08 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000B47C(v10, (uint64_t)qword_100974260);
  swift_bridgeObjectRetain_n();
  unint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)id v13 = 136315138;
    swift_bridgeObjectRetain();
    sub_100254634(a1, a2, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "AirDrop transfer %s not found in actively tracked transfers. Ignoring close request.", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_100442610(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  id v9 = (uint64_t *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropUISessionManager_activeTransfersById);
  swift_beginAccess();
  uint64_t v10 = *v9;
  if (*(void *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1005838BC(a1, a2);
    if (v12)
    {
      id v13 = *(id *)(*(void *)(v10 + 56) + 8 * v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v14 = [v13 possibleActions];
      sub_10000B740(0, &qword_1009700A8);
      unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      swift_bridgeObjectRetain();
      unint64_t v16 = (unint64_t)sub_1004415D4(v15, a3, a4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v16 >> 62)
      {
        if (_CocoaArrayWrapper.endIndex.getter()) {
          goto LABEL_5;
        }
      }
      else if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_5:
        if ((v16 & 0xC000000000000001) != 0)
        {
          id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_8;
        }
        if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v17 = *(id *)(v16 + 32);
LABEL_8:
          uint64_t v18 = v17;
          swift_bridgeObjectRelease();
          [v18 triggerAction];

          return;
        }
        __break(1u);
LABEL_22:
        swift_once();
LABEL_17:
        uint64_t v23 = type metadata accessor for Logger();
        sub_10000B47C(v23, (uint64_t)qword_100974260);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v24 = Logger.logObject.getter();
        os_log_type_t v25 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v24, v25))
        {
          uint64_t v26 = swift_slowAlloc();
          uint64_t v27 = swift_slowAlloc();
          *(_DWORD *)uint64_t v26 = 136315394;
          swift_bridgeObjectRetain();
          sub_100254634(a1, a2, &v27);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v26 + 12) = 2080;
          swift_bridgeObjectRetain();
          sub_100254634(a3, a4, &v27);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v24, v25, "AirDrop transfer %s does not have an action with identifier %s. Ignoring runAction request.", (uint8_t *)v26, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        return;
      }
      swift_bridgeObjectRelease();
      if (qword_100969E08 == -1) {
        goto LABEL_17;
      }
      goto LABEL_22;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_100969E08 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_10000B47C(v19, (uint64_t)qword_100974260);
  swift_bridgeObjectRetain_n();
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315138;
    swift_bridgeObjectRetain();
    sub_100254634(a1, a2, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "AirDrop transfer %s not found in actively tracked transfers. Ignoring runAction request.", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_100442B10()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100442B58(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  char v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *char v8 = v2;
  v8[1] = sub_10000A6F4;
  return sub_1002A0B34(a1, v4, v5, v7, v6);
}

uint64_t sub_100442C18()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_100442C58(void *a1)
{
  return sub_10043FF90(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100442C60()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100442C70()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_100442C98()
{
}

uint64_t sub_100442CA0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100247840(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100442CF0()
{
  return sub_10043E54C();
}

uint64_t sub_100442CF8(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10000A6F0;
  return sub_10043BAD8(a1, v1);
}

void sub_100442D98()
{
  sub_10043C024(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100442DA8()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100442DE8()
{
  sub_10043ABC0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100442DF4(uint64_t a1)
{
  return sub_100439A18(a1, *(void *)(v1 + 16));
}

uint64_t sub_100442DFC()
{
  uint64_t v1 = sub_10000A844((uint64_t *)&unk_100974580);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100442ECC()
{
  return sub_100442EEC((uint64_t *)&unk_100974580, (uint64_t (*)(uint64_t, uint64_t))sub_100439DC4);
}

uint64_t sub_100442EEC(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(sub_10000A844(a1) - 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a2(v4, v5);
}

uint64_t sub_100442F60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

const char *sub_100442FA8()
{
  return "fractionCompleted";
}

id sub_100442FB4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 fractionCompleted];
  *a2 = v4;
  return result;
}

uint64_t sub_100442FE8()
{
  swift_unknownObjectUnownedDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100443020()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100443060(void **a1, uint64_t a2)
{
  sub_100438E94(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1004430B4(uint64_t a1, char a2)
{
  **(unsigned char **)(*(void *)(*(void *)(a1 + 32) + 64) + 40) = a2;
  return swift_continuation_resume();
}

uint64_t sub_1004430D8(uint64_t a1, void *a2)
{
  uint64_t v2 = (uint64_t)a2;
  uint64_t v3 = *(void *)(a1 + 32);
  if (a2)
  {
    id v4 = a2;
    uint64_t v2 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v6 = v5;
  }
  else
  {
    unint64_t v6 = 0xF000000000000000;
  }
  v8[0] = v2;
  v8[1] = v6;
  sub_100325E88((uint64_t)v8, *(void *)(*(void *)(v3 + 64) + 40));
  return swift_continuation_resume();
}

uint64_t sub_100443160(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v2 = static AirDropActor.shared;
  return _swift_task_switch(sub_1004431FC, v2, 0);
}

uint64_t sub_1004431FC()
{
  **(unsigned char **)(v0 + 16) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for SDAirDropContentHandlerPeerPayment()
{
  return self;
}

uint64_t sub_100443244@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerPeerPayment();
  uint64_t result = swift_allocObject();
  *a1 = result;
  return result;
}

uint64_t sub_100443278(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = type metadata accessor for SFAirDrop.TransferType();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v3 = static AirDropActor.shared;
  return _swift_task_switch(sub_100443370, v3, 0);
}

uint64_t sub_100443370()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  SFAirDropReceive.AskRequest.type.getter();
  char v4 = SFAirDrop.TransferType.isPeerPayment.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5(v4 & 1);
}

uint64_t sub_100443410()
{
  return 0x6D79615072656550;
}

uint64_t sub_100443430()
{
  return SFProgressTask.init(_:initialProgress:operation:file:line:)();
}

uint64_t sub_1004434C4(uint64_t a1)
{
  *(void *)(v1 + 136) = a1;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v2 = static AirDropActor.shared;
  *(void *)(v1 + 144) = static AirDropActor.shared;
  return _swift_task_switch(sub_100443564, v2, 0);
}

uint64_t sub_100443564()
{
  uint64_t v1 = SFAirDropReceive.AskRequest.customPayload.getter();
  unint64_t v3 = v2;
  v0[15] = v1;
  v0[16] = v2;
  sub_10000A844(&qword_10096B260);
  Optional.tryUnwrap(_:file:line:)();
  sub_100250CB0(v1, v3);
  uint64_t v4 = v0[10];
  unint64_t v5 = v0[11];
  v0[19] = v4;
  v0[20] = v5;
  id v6 = objc_allocWithZone((Class)SDNearbyPeerPaymentReceiverCoordinator);
  sub_10025ADCC(v4, v5);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v8 = [v6 initWithSenderMetadata:isa];
  v0[21] = v8;
  sub_100250CC4(v4, v5);

  SFAirDropReceive.AskRequest.contactIdentifier.getter();
  if (v9)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  v0[22] = v10;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1004437D0;
  uint64_t v11 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1004430B4;
  v0[13] = &unk_1008DAF30;
  v0[14] = v11;
  [v8 nearbyReceiverRequiresConfirmationWithContactID:v10 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1004437D0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144);
  return _swift_task_switch(sub_1004438C4, v1, 0);
}

uint64_t sub_1004438C4()
{
  uint64_t v1 = *(void **)(v0 + 168);
  unint64_t v2 = *(void **)(v0 + 176);
  sub_100250CC4(*(void *)(v0 + 152), *(void *)(v0 + 160));

  char v3 = *(unsigned char *)(v0 + 120);
  uint64_t v4 = *(uint64_t (**)(BOOL))(v0 + 8);
  return v4((v3 & 1) == 0);
}

uint64_t sub_100443940(uint64_t a1)
{
  *(void *)(v1 + 136) = a1;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v2 = static AirDropActor.shared;
  *(void *)(v1 + 144) = static AirDropActor.shared;
  return _swift_task_switch(sub_1004439E0, v2, 0);
}

uint64_t sub_1004439E0()
{
  uint64_t v1 = SFAirDropReceive.AskRequest.customPayload.getter();
  unint64_t v3 = v2;
  v0[15] = v1;
  v0[16] = v2;
  sub_10000A844(&qword_10096B260);
  Optional.tryUnwrap(_:file:line:)();
  sub_100250CB0(v1, v3);
  uint64_t v4 = v0[10];
  unint64_t v5 = v0[11];
  v0[19] = v4;
  v0[20] = v5;
  id v6 = objc_allocWithZone((Class)SDNearbyPeerPaymentReceiverCoordinator);
  sub_10025ADCC(v4, v5);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v8 = [v6 initWithSenderMetadata:isa];
  v0[21] = v8;
  sub_100250CC4(v4, v5);

  SFAirDropReceive.AskRequest.contactIdentifier.getter();
  if (v9)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  v0[22] = v10;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_100443C48;
  uint64_t v11 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1004430D8;
  v0[13] = &unk_1008DAF48;
  v0[14] = v11;
  [v8 recipientMetadataWithContactID:v10 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100443C48()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144);
  return _swift_task_switch(sub_100443D3C, v1, 0);
}

uint64_t sub_100443D3C()
{
  unint64_t v1 = v0[16];
  unint64_t v2 = (void *)v0[21];
  uint64_t v3 = (void *)v0[22];
  uint64_t v4 = v0[19];
  unint64_t v5 = v0[20];
  if (v1 >> 60 == 15)
  {

    uint64_t v6 = type metadata accessor for SFError();
    sub_100443EE4();
    swift_allocError();
    *uint64_t v7 = 0xD000000000000023;
    v7[1] = 0x80000001007BD870;
    v7[2] = 0xD000000000000069;
    v7[3] = 0x80000001007BD800;
    v7[4] = 52;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v6 - 8) + 104))(v7, enum case for SFError.unexpected(_:), v6);
    swift_willThrow();

    sub_100250CC4(v4, v5);
    id v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    uint64_t v10 = v0[15];
    sub_100250CC4(v0[19], v0[20]);

    uint64_t v11 = (uint64_t (*)(uint64_t, unint64_t))v0[1];
    return v11(v10, v1);
  }
}

unint64_t sub_100443EE4()
{
  unint64_t result = qword_10096C568;
  if (!qword_10096C568)
  {
    type metadata accessor for SFError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10096C568);
  }
  return result;
}

id sub_100443F3C()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for HUDManager()) init];
  qword_100994818 = (uint64_t)result;
  return result;
}

uint64_t sub_100443FC8()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR___SDHUDManager_activeConnection);
  if (v1)
  {
    uint64_t v11 = sub_10044411C;
    uint64_t v12 = 0;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v10 = sub_100444120;
    *((void *)&v10 + 1) = &unk_1008DB0C8;
    unint64_t v2 = _Block_copy(&aBlock);
    id v3 = v1;
    id v4 = [v3 synchronousRemoteObjectProxyWithErrorHandler:v2];
    _Block_release(v2);

    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long aBlock = 0u;
    long long v10 = 0u;
  }
  sub_10024A250((uint64_t)&aBlock, (uint64_t)v7);
  if (v8)
  {
    sub_10000A844(&qword_100974838);
    if (swift_dynamicCast()) {
      return v6;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_10000A7E8((uint64_t)v7, (uint64_t *)&unk_10096AC20);
    return 0;
  }
}

void sub_100444120(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

char *sub_100444188()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v13 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  *(void *)&v0[OBJC_IVAR___SDHUDManager_serviceConnection] = 0;
  *(void *)&v0[OBJC_IVAR___SDHUDManager_activeConnection] = 0;
  *(void *)&v0[OBJC_IVAR___SDHUDManager_requests] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR___SDHUDManager_bannerDismissalRequested] = 0;
  sub_1002B62F0();
  uint64_t v6 = v0;
  static DispatchQoS.unspecified.getter();
  unint64_t v16 = _swiftEmptyArrayStorage;
  sub_100448DAC((unint64_t *)&unk_100974840, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000A844((uint64_t *)&unk_10096A1B0);
  sub_100442CA0((unint64_t *)&qword_100974850, (uint64_t *)&unk_10096A1B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v13);
  *(void *)&v6[OBJC_IVAR___SDHUDManager_dispatchQueue] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  id v7 = objc_allocWithZone((Class)NSXPCListener);
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 initWithMachServiceName:v8];

  *(void *)&v6[OBJC_IVAR___SDHUDManager_xpcListener] = v9;
  v15.receiver = v6;
  v15.super_class = ObjectType;
  long long v10 = (char *)[super init];
  [*(id *)&v10[OBJC_IVAR___SDHUDManager_xpcListener] setDelegate:v10];
  return v10;
}

id sub_1004444D0(uint64_t a1)
{
  if (qword_100969CC8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_1009946A8);
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Starting HUD manager", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(a1 + OBJC_IVAR___SDHUDManager_xpcListener);

  return [v6 resume];
}

uint64_t sub_100444640(uint64_t a1, uint64_t a2, char a3, int a4)
{
  int v22 = a4;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  id v14 = &v21[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  objc_super v15 = *(void **)&v4[OBJC_IVAR___SDHUDManager_dispatchQueue];
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  *(unsigned char *)(v16 + 32) = a3;
  *(unsigned char *)(v16 + 33) = v22;
  *(void *)(v16 + 40) = v4;
  aBlock[4] = sub_100448D90;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008DB410;
  id v17 = _Block_copy(aBlock);
  id v18 = v15;
  swift_bridgeObjectRetain();
  uint64_t v19 = v4;
  static DispatchQoS.unspecified.getter();
  uint64_t v24 = _swiftEmptyArrayStorage;
  sub_100448DAC((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_100442CA0((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v23);
  return swift_release();
}

void sub_10044491C(uint64_t a1, unint64_t a2, char a3, char a4, uint64_t a5)
{
  if (qword_100969CC8 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000B47C(v10, (uint64_t)qword_1009946A8);
  swift_bridgeObjectRetain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    char v20 = a3;
    char v13 = a4;
    id v14 = (uint8_t *)swift_slowAlloc();
    v21[0] = swift_slowAlloc();
    *(_DWORD *)id v14 = 136315138;
    swift_bridgeObjectRetain();
    sub_100254634(a1, a2, v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Paired Unlock: Posting pill as Unlocking for %s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a4 = v13;
    a3 = v20;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  objc_super v15 = self;
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v15 pairedUnlockModelWithWatchName:v16 needsLockButton:a3 & 1 needsUpdate:a4 & 1];

  id v18 = (void *)(a5 + OBJC_IVAR___SDHUDManager_requests);
  swift_beginAccess();
  id v19 = v17;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  sub_100444BB0();
}

void sub_100444BB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR___SDHUDManager_dispatchQueue);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  uint64_t v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v15 >= 2) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
  uint64_t v8 = OBJC_IVAR___SDHUDManager_bannerDismissalRequested;
  if (*(unsigned char *)(v1 + OBJC_IVAR___SDHUDManager_bannerDismissalRequested) != 1) {
    goto LABEL_12;
  }
  uint64_t v9 = (unint64_t *)(v1 + OBJC_IVAR___SDHUDManager_requests);
  swift_beginAccess();
  unint64_t v10 = *v9;
  if (v10 >> 62) {
    goto LABEL_11;
  }
  if (*(uint64_t *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2)
  {
LABEL_5:
    if (qword_100969CC8 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000B47C(v11, (uint64_t)qword_1009946A8);
    os_log_type_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Requesting new banner while previous banner dismissal was requested but not completed. Cleaning up previous banner", v14, 2u);
      swift_slowDealloc();
    }

    sub_1004465A8();
    return;
  }
LABEL_12:
  *(unsigned char *)(v1 + v8) = 0;
  uint64_t v16 = OBJC_IVAR___SDHUDManager_serviceConnection;
  if (*(void *)(v1 + OBJC_IVAR___SDHUDManager_serviceConnection))
  {
    if (!*(void *)(v1 + OBJC_IVAR___SDHUDManager_activeConnection))
    {
      if (qword_100969CC8 == -1)
      {
LABEL_28:
        uint64_t v39 = type metadata accessor for Logger();
        sub_10000B47C(v39, (uint64_t)qword_1009946A8);
        unint64_t v40 = Logger.logObject.getter();
        os_log_type_t v41 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v40, v41))
        {
          uint64_t v42 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v42 = 0;
          _os_log_impl((void *)&_mh_execute_header, v40, v41, "Active HUD service exists but no active connection. Cannot display banner", v42, 2u);
          swift_slowDealloc();
        }

        os_log_type_t v43 = [self defaultCenter];
        [v43 postNotificationName:@"SDUnlockBannerCouldNotBeDisplayed" object:0];
        goto LABEL_31;
      }
LABEL_50:
      swift_once();
      goto LABEL_28;
    }
    id v17 = (unint64_t *)(v1 + OBJC_IVAR___SDHUDManager_requests);
    swift_beginAccess();
    unint64_t v18 = *v17;
    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter()) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v19)
      {
LABEL_16:
        if ((v18 & 0xC000000000000001) != 0)
        {
          id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_19;
        }
        if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v20 = *(id *)(v18 + 32);
LABEL_19:
          os_log_type_t v21 = v20;
          swift_bridgeObjectRelease();
          if ([v21 type] == (id)2)
          {
LABEL_20:

            return;
          }
          uint64_t v44 = sub_100443FC8();
          if (v44)
          {
            NSString v45 = (void *)v44;
            if (qword_100969CC8 != -1) {
              swift_once();
            }
            uint64_t v46 = type metadata accessor for Logger();
            sub_10000B47C(v46, (uint64_t)qword_1009946A8);
            id v47 = v21;
            uint64_t v48 = Logger.logObject.getter();
            os_log_type_t v49 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v48, v49))
            {
              uint64_t v50 = (uint8_t *)swift_slowAlloc();
              v59[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v50 = 136315138;
              v58[1] = v50 + 4;
              id v51 = [self descriptionForType:[v47 type]];
              uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v54 = v53;

              uint64_t v66 = sub_100254634(v52, v54, v59);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v48, v49, "Requesting banner of type %s", v50, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
            }
            [v45 showBanner:v47];

            swift_unknownObjectRelease();
            return;
          }
          if (qword_100969CC8 != -1) {
            swift_once();
          }
          uint64_t v55 = type metadata accessor for Logger();
          sub_10000B47C(v55, (uint64_t)qword_1009946A8);
          os_log_type_t v43 = Logger.logObject.getter();
          os_log_type_t v56 = static os_log_type_t.default.getter();
          if (!os_log_type_enabled(v43, v56))
          {

            goto LABEL_20;
          }
          uint64_t v57 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v57 = 0;
          _os_log_impl((void *)&_mh_execute_header, v43, v56, "No remote object found", v57, 2u);
          swift_slowDealloc();

LABEL_31:
          return;
        }
        __break(1u);
        goto LABEL_50;
      }
    }
    swift_bridgeObjectRelease();
    return;
  }
  id v22 = objc_allocWithZone((Class)NSXPCConnection);
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = [v22 initWithServiceName:v23];

  id v25 = [self interfaceWithProtocol:&OBJC_PROTOCOL___SSUSB332UIProtocol];
  [v24 setRemoteObjectInterface:v25];

  uint64_t v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v64 = sub_1004481C4;
  uint64_t v65 = v26;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v61 = 1107296256;
  uint64_t v62 = sub_100296520;
  uint64_t v63 = &unk_1008DAFD8;
  uint64_t v27 = _Block_copy(&aBlock);
  swift_release();
  [v24 setInvalidationHandler:v27];
  _Block_release(v27);
  uint64_t v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v64 = sub_1004481E8;
  uint64_t v65 = v28;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v61 = 1107296256;
  uint64_t v62 = sub_100296520;
  uint64_t v63 = &unk_1008DB000;
  uint64_t v29 = _Block_copy(&aBlock);
  swift_release();
  [v24 setInterruptionHandler:v29];
  _Block_release(v29);
  [v24 resume];
  os_log_type_t v30 = *(void **)(v1 + v16);
  *(void *)(v1 + v16) = v24;
  id v31 = v24;

  uint64_t v64 = (void (*)())sub_10044411C;
  uint64_t v65 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v61 = 1107296256;
  uint64_t v62 = sub_100444120;
  uint64_t v63 = &unk_1008DB028;
  uint64_t v32 = _Block_copy(&aBlock);
  id v33 = [v31 synchronousRemoteObjectProxyWithErrorHandler:v32];
  _Block_release(v32);
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10024D2D4((uint64_t)v59, (uint64_t)&aBlock);
  sub_10000A844((uint64_t *)&unk_1009747C0);
  if (swift_dynamicCast())
  {
    uint64_t v34 = (void *)v66;
    if (qword_100969CC8 != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    sub_10000B47C(v35, (uint64_t)qword_1009946A8);
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Displaying HUD", v38, 2u);
      swift_slowDealloc();
    }

    [v34 start];
    swift_unknownObjectRelease();
  }
  else
  {
  }
  sub_10024D338((uint64_t)v59);
}

uint64_t sub_1004456DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  os_log_type_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v13 = *(void **)&v3[OBJC_IVAR___SDHUDManager_dispatchQueue];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v3;
  aBlock[4] = a2;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = a3;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v13;
  id v17 = v3;
  static DispatchQoS.unspecified.getter();
  v19[1] = _swiftEmptyArrayStorage;
  sub_100448DAC((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_100442CA0((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, void))(v10 + 8))(v12, v19[0]);
  return swift_release();
}

void sub_100445980(uint64_t a1)
{
  if (qword_100969CC8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_1009946A8);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Paired Unlock: Updating pill to Unlocked", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = (uint64_t *)(a1 + OBJC_IVAR___SDHUDManager_requests);
  swift_beginAccess();
  uint64_t v7 = *v6;
  if (!((unint64_t)*v6 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_7;
    }
LABEL_25:
    swift_bridgeObjectRelease();
LABEL_26:
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v23))
    {
      id v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v23, "Not currently showing paired unlock banner which needs update", v24, 2u);
      swift_slowDealloc();
    }
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_25;
  }
LABEL_7:
  if ((v7 & 0xC000000000000001) != 0)
  {
    uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_31;
    }
    uint64_t v9 = *(id *)(v7 + 32);
  }
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  if ([v10 type]
    || ![v10 needsUpdate]
    || (id v11 = [v10 watchName]) == 0)
  {

    goto LABEL_26;
  }
  os_log_type_t v12 = v11;
  uint64_t v13 = sub_100443FC8();
  if (!v13)
  {

    id v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "No remote object found", v22, 2u);
      swift_slowDealloc();
    }

    goto LABEL_28;
  }
  uint64_t v14 = (void *)v13;
  id v15 = [self pairedUnlockModelWithWatchName:v12 needsLockButton:-[NSObject needsLockButton](v10, "needsLockButton") needsUpdate:0];

  swift_beginAccess();
  uint64_t v16 = *v6;
  id v17 = v15;
  char isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v6 = v16;
  if ((isUniquelyReferenced_nonNull_bridgeObject & 1) == 0 || v16 < 0 || (v16 & 0x4000000000000000) != 0)
  {
    uint64_t v16 = sub_1002AD470(v16);
    uint64_t *v6 = v16;
  }
  if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v19 = *(void **)((v16 & 0xFFFFFFFFFFFFFF8) + 0x20);
    *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x20) = v17;

    specialized Array._endMutation()();
    swift_endAccess();
    [v14 updatePairedUnlockBannerToUnlocked];

    swift_unknownObjectRelease();
    uint64_t v10 = v17;
LABEL_28:

    return;
  }
LABEL_31:
  __break(1u);
}

void sub_100445DB4(uint64_t a1)
{
  if (qword_100969CC8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_1009946A8);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Asked to dismiss paired unlock banner", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = (unint64_t *)(a1 + OBJC_IVAR___SDHUDManager_requests);
  swift_beginAccess();
  unint64_t v7 = *v6;
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_7;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_18;
  }
LABEL_7:
  if ((v7 & 0xC000000000000001) != 0)
  {
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v9 = *(id *)(v7 + 32);
  }
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  if ([v10 type])
  {

LABEL_19:
    id v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      id v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Not currently showing paired unlock banner", v17, 2u);
      swift_slowDealloc();
    }

    return;
  }
  *(unsigned char *)(a1 + OBJC_IVAR___SDHUDManager_bannerDismissalRequested) = 1;
  id v11 = (void *)sub_100443FC8();
  if (v11)
  {
    [v11 dismissBanner];

    swift_unknownObjectRelease();
  }
  else
  {
    os_log_type_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "No remote object found, marking banner for dismissal", v14, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1004460FC()
{
  return sub_1004456DC((uint64_t)&unk_1008DAF70, (uint64_t)sub_100448148, (uint64_t)&unk_1008DAF88);
}

uint64_t sub_100446124()
{
  return sub_1004456DC((uint64_t)&unk_1008DB100, (uint64_t)sub_10044828C, (uint64_t)&unk_1008DB118);
}

void sub_10044614C(uint64_t a1, const char *a2, SEL *a3)
{
  if (qword_100969CC8 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_1009946A8);
  unint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, a2, v9, 2u);
    swift_slowDealloc();
  }

  id v10 = [self *a3];
  id v11 = (void *)(a1 + OBJC_IVAR___SDHUDManager_requests);
  swift_beginAccess();
  id v12 = v10;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  sub_100444BB0();
}

uint64_t sub_1004462D8()
{
  return sub_1004456DC((uint64_t)&unk_1008DB150, (uint64_t)sub_1004482B8, (uint64_t)&unk_1008DB168);
}

void sub_100446300(uint64_t a1)
{
  if (qword_100969CC8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_1009946A8);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Asked to dismiss pencil pairing HUD", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = (uint64_t *)(a1 + OBJC_IVAR___SDHUDManager_requests);
  swift_beginAccess();
  uint64_t v7 = *v6;
  if ((unint64_t)*v6 >> 62)
  {
    swift_bridgeObjectRetain();
    os_log_type_t v8 = _CocoaArrayWrapper.endIndex.getter();
    if (v8) {
      goto LABEL_7;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  os_log_type_t v8 = *(NSObject **)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v8) {
    goto LABEL_18;
  }
LABEL_7:
  if ((v7 & 0xC000000000000001) != 0)
  {
    id v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_24;
    }
    id v9 = *(id *)(v7 + 32);
  }
  os_log_type_t v8 = v9;
  swift_bridgeObjectRelease();
  if ([v8 type] == (id)2)
  {
    sub_1004465A8();
    if (!((unint64_t)*v6 >> 62))
    {
      if (*(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_21;
      }
      goto LABEL_13;
    }
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_21;
    }
LABEL_13:
    uint64_t v10 = OBJC_IVAR___SDHUDManager_serviceConnection;
    id v11 = *(void **)(a1 + OBJC_IVAR___SDHUDManager_serviceConnection);
    if (v11)
    {
      id v12 = v11;
      [v12 invalidate];
    }
    os_log_type_t v8 = *(NSObject **)(a1 + v10);
    *(void *)(a1 + v10) = 0;
    goto LABEL_21;
  }

LABEL_19:
  os_log_type_t v8 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v13, "Not currently showing pencil pairing UI", v14, 2u);
    swift_slowDealloc();
  }
LABEL_21:
}

uint64_t sub_1004465A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = (unint64_t *)type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(v2 - 1);
  __chkstk_darwin(v2);
  uint64_t v5 = (id *)((char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR___SDHUDManager_dispatchQueue);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, unint64_t *))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, unint64_t *))(v3 + 8))(v5, v2);
  if (v6)
  {
    uint64_t v2 = (unint64_t *)(v1 + OBJC_IVAR___SDHUDManager_requests);
    uint64_t result = swift_beginAccess();
    if (!(*v2 >> 62))
    {
      if (!*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        return result;
      }
      goto LABEL_4;
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v12) {
    return result;
  }
LABEL_4:
  swift_beginAccess();
  unint64_t v9 = *v2;
  if (!(*v2 >> 62))
  {
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_6;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v13) {
    goto LABEL_20;
  }
LABEL_6:
  unint64_t v9 = *v2;
  if (!(*v2 >> 62))
  {
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_8;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_21:
  swift_bridgeObjectRetain();
  uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v14) {
    goto LABEL_22;
  }
LABEL_8:
  if ((v9 & 0xC000000000000001) != 0)
  {
LABEL_23:
    uint64_t v10 = (id *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_11;
  }
  if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v10 = (id *)*(id *)(v9 + 32);
LABEL_11:
  unint64_t v9 = (unint64_t)v10;
  if (!(*v2 >> 62))
  {
    if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_13;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
LABEL_25:
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v15) {
    goto LABEL_26;
  }
LABEL_13:
  sub_1005A5A48(0, 1);
  swift_endAccess();

  *(unsigned char *)(v1 + OBJC_IVAR___SDHUDManager_bannerDismissalRequested) = 0;
  unint64_t v11 = *v2;
  if (!(v11 >> 62))
  {
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      return sub_100444BB0();
    }
    goto LABEL_28;
  }
LABEL_27:
  swift_bridgeObjectRetain();
  uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v16) {
    return sub_100444BB0();
  }
LABEL_28:
  id v17 = *(void **)(v1 + OBJC_IVAR___SDHUDManager_serviceConnection);
  if (v17)
  {
    uint64_t v26 = sub_10044411C;
    uint64_t v27 = 0;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v25 = sub_100444120;
    *((void *)&v25 + 1) = &unk_1008DB050;
    unint64_t v18 = _Block_copy(&aBlock);
    id v19 = v17;
    id v20 = [v19 synchronousRemoteObjectProxyWithErrorHandler:v18];
    _Block_release(v18);

    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long aBlock = 0u;
    long long v25 = 0u;
  }
  sub_10044820C((uint64_t)&aBlock, (uint64_t)v22);
  if (v23)
  {
    sub_10000A844(&qword_100974830);
    if (swift_dynamicCast())
    {
      [v21[1] releaseHUDTransaction];
      swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_10000A7E8((uint64_t)v22, (uint64_t *)&unk_10096AC20);
  }
  return sub_10000A7E8((uint64_t)&aBlock, (uint64_t *)&unk_10096AC20);
}

void sub_100446A04(uint64_t a1, const char *a2)
{
  if (qword_100969CC8 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000B47C(v3, (uint64_t)qword_1009946A8);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, a2, v6, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    os_log_type_t v8 = (void *)Strong;
    sub_1004456DC((uint64_t)&unk_1008DB088, (uint64_t)sub_100448274, (uint64_t)&unk_1008DB0A0);
  }
}

void sub_100446B40()
{
  if (qword_100969CC8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_1009946A8);
  oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "Could not create HUD service", v2, 2u);
    swift_slowDealloc();
  }
}

uint64_t type metadata accessor for HUDManager()
{
  return self;
}

void sub_100446CC8(void *a1)
{
  if (qword_100969CC8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_1009946A8);
  id v3 = a1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    id v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    id v8 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v7 = v3;

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Connection invalidated from %@", v6, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    sub_1004456DC((uint64_t)&unk_1008DB308, (uint64_t)sub_100448D28, (uint64_t)&unk_1008DB320);
  }
}

void sub_100446EBC(void *a1)
{
  if (qword_100969CC8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_1009946A8);
  id v8 = a1;
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v5 = 138412290;
    id v7 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v6 = v8;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Connection interrupted from %@", v5, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_1004470E8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v18[0] - 8);
  __chkstk_darwin(v18[0]);
  unint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)&v2[OBJC_IVAR___SDHUDManager_dispatchQueue];
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v2;
  void v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = sub_100448CCC;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008DB230;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = v12;
  uint64_t v16 = v2;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v18[1] = _swiftEmptyArrayStorage;
  sub_100448DAC((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_100442CA0((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, void))(v9 + 8))(v11, v18[0]);
  return swift_release();
}

void sub_1004473B0(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = a1;
  uint64_t v5 = (void *)(a1 + OBJC_IVAR___SDHUDManager_requests);
  swift_beginAccess();
  uint64_t v6 = *v5;
  if (*v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  p_inst_meths = &OBJC_PROTOCOL___NSNetServiceBrowserDelegate.inst_meths;
  if (v7)
  {
    if ((v6 & 0xC000000000000001) != 0)
    {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_45;
      }
      id v9 = *(id *)(v6 + 32);
    }
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    if ([v10 type])
    {
      if (qword_100969CC8 != -1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      sub_10000B47C(v11, (uint64_t)qword_1009946A8);
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v2 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v2 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "No paired unlock watch name", v2, 2u);
        swift_slowDealloc();
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = *v5;
  if (*v5 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter())
    {
LABEL_17:
      if ((v14 & 0xC000000000000001) == 0)
      {
        if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_47;
        }
        id v16 = *(id *)(v14 + 32);
LABEL_20:
        id v17 = v16;
        swift_bridgeObjectRelease();
        uint64_t v2 = (uint8_t *)[v17 type];

        if (qword_100969CC8 == -1)
        {
LABEL_21:
          uint64_t v18 = type metadata accessor for Logger();
          sub_10000B47C(v18, (uint64_t)qword_1009946A8);
          id v19 = Logger.logObject.getter();
          os_log_type_t v20 = static os_log_type_t.default.getter();
          if (!os_log_type_enabled(v19, v20)) {
            goto LABEL_30;
          }
          os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          *(_DWORD *)os_log_type_t v21 = 136315138;
          id v22 = [self descriptionForType:v2];
          uint64_t v23 = v5;
          id v24 = a2;
          uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v26 = v4;
          unint64_t v28 = v27;

          uint64_t v29 = v25;
          a2 = v24;
          uint64_t v5 = v23;
          sub_100254634(v29, v28, &v40);
          p_inst_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___NSNetServiceBrowserDelegate + 24);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          uint64_t v4 = v26;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v19, v20, "Requesting banner of type %s", v21, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          goto LABEL_29;
        }
LABEL_47:
        swift_once();
        goto LABEL_21;
      }
LABEL_45:
      id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15) {
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRelease();
  if (qword_100969CC8 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  sub_10000B47C(v30, (uint64_t)qword_1009946A8);
  id v19 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v31, "No current banner to request", v32, 2u);
LABEL_29:
    swift_slowDealloc();
  }
LABEL_30:

  if (*(unsigned char *)(v4 + OBJC_IVAR___SDHUDManager_bannerDismissalRequested) != 1)
  {
    uint64_t v37 = *v5;
    if (*v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v38 = (void *)_CocoaArrayWrapper.endIndex.getter();
      if (!v38) {
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v38 = *(void **)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v38) {
        goto LABEL_42;
      }
    }
    if ((v37 & 0xC000000000000001) != 0)
    {
      id v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      id v39 = *(id *)(v37 + 32);
    }
    uint64_t v38 = v39;
LABEL_42:
    swift_bridgeObjectRelease();
    a2(v38);

    return;
  }
  if (p_inst_meths[409] != (__objc2_meth_list *)-1) {
    swift_once();
  }
  uint64_t v33 = type metadata accessor for Logger();
  sub_10000B47C(v33, (uint64_t)qword_1009946A8);
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Not displaying banner because dismissal requested before presentation", v36, 2u);
    swift_slowDealloc();
  }

  a2(0);
  sub_1004465A8();
}

uint64_t sub_100447A50(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v16[0] - 8);
  __chkstk_darwin(v16[0]);
  id v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)&v1[OBJC_IVAR___SDHUDManager_dispatchQueue];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v1;
  aBlock[4] = sub_100448C38;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008DB1B8;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = v10;
  uint64_t v14 = v1;
  static DispatchQoS.unspecified.getter();
  v16[1] = _swiftEmptyArrayStorage;
  sub_100448DAC((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_100442CA0((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, void))(v7 + 8))(v9, v16[0]);
  return swift_release();
}

uint64_t sub_100447D08(uint64_t a1, uint64_t a2)
{
  if (a1) {
    goto LABEL_18;
  }
  if (qword_100969CC8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_1009946A8);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Clearing paired unlock watch name", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t v8 = (uint64_t *)(a2 + OBJC_IVAR___SDHUDManager_requests);
  swift_beginAccess();
  uint64_t v9 = *v8;
  if ((unint64_t)*v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    if (result) {
      goto LABEL_8;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v10) {
    goto LABEL_17;
  }
LABEL_8:
  if ((v9 & 0xC000000000000001) != 0)
  {
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    id v12 = *(id *)(v9 + 32);
  }
  id v13 = v12;
  swift_bridgeObjectRelease();
  if ([v13 type]
    || ![v13 needsUpdate]
    || (*(unsigned char *)(a2 + OBJC_IVAR___SDHUDManager_bannerDismissalRequested) & 1) != 0)
  {
  }
  else
  {
    id v14 = [self defaultCenter];
    [v14 postNotificationName:@"SDUnlockBannerDismissed" object:0];
  }
LABEL_18:
  if (qword_100969CC8 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_10000B47C(v15, (uint64_t)qword_1009946A8);
  id v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315138;
    id v19 = [self descriptionForType:a1];
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v22 = v21;

    sub_100254634(v20, v22, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Banner of type %s did dismiss", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return sub_1004465A8();
}

uint64_t sub_100448110()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100448148()
{
  sub_10044614C(*(void *)(v0 + 16), "Asked to display Oneness unlocked banner", (SEL *)&selRef_onenessUnlockedModel);
}

uint64_t sub_100448174(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100448184()
{
  return swift_release();
}

uint64_t sub_10044818C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1004481C4()
{
  sub_100446A04(v0, "Connection invalidated for HUD service");
}

void sub_1004481E8()
{
  sub_100446A04(v0, "Connection interrupted for HUD service");
}

uint64_t sub_10044820C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_10096AC20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100448274()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR___SDHUDManager_serviceConnection);
  *(void *)(v1 + OBJC_IVAR___SDHUDManager_serviceConnection) = 0;
}

void sub_10044828C()
{
  sub_10044614C(*(void *)(v0 + 16), "Asked to display pencil pairing HUD", (SEL *)&selRef_pencilModel);
}

void sub_1004482B8()
{
  sub_100446300(*(void *)(v0 + 16));
}

uint64_t sub_1004482C0(void *a1)
{
  uint64_t v2 = v1;
  if (qword_100969CC8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_1009946A8);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Received new connection", v7, 2u);
    swift_slowDealloc();
  }

  [a1 setExportedObject:v2];
  uint64_t v8 = self;
  id v9 = [v8 interfaceWithProtocol:&OBJC_PROTOCOL___SUIHUDHostProtocol];
  [a1 setExportedInterface:v9];

  id v10 = [v8 interfaceWithProtocol:&OBJC_PROTOCOL___SUIHUDClientProtocol];
  [a1 setRemoteObjectInterface:v10];

  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  id v24 = sub_100448D18;
  uint64_t v25 = v12;
  uint64_t v20 = _NSConcreteStackBlock;
  uint64_t v21 = 1107296256;
  unint64_t v22 = sub_100296520;
  uint64_t v23 = &unk_1008DB280;
  id v13 = _Block_copy(&v20);
  id v14 = a1;
  swift_release();
  [v14 setInvalidationHandler:v13];
  _Block_release(v13);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  id v24 = sub_100448D20;
  uint64_t v25 = v15;
  uint64_t v20 = _NSConcreteStackBlock;
  uint64_t v21 = 1107296256;
  unint64_t v22 = sub_100296520;
  uint64_t v23 = &unk_1008DB2D0;
  id v16 = _Block_copy(&v20);
  id v17 = v14;
  swift_release();
  [v17 setInterruptionHandler:v16];
  _Block_release(v16);
  uint64_t v18 = *(void **)(v2 + OBJC_IVAR___SDHUDManager_activeConnection);
  *(void *)(v2 + OBJC_IVAR___SDHUDManager_activeConnection) = v17;

  [v17 resume];
  return 1;
}

void sub_1004485E4(uint64_t a1)
{
  uint64_t v2 = sub_10000A844((uint64_t *)&unk_10096AC10);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v38 - v10;
  if (a1 == 1)
  {
    if (qword_100969CC8 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_10000B47C(v17, (uint64_t)qword_1009946A8);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Oneness unlocked banner Settings button tapped", v20, 2u);
      swift_slowDealloc();
    }

    URL.init(string:)();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_10000A7E8((uint64_t)v4, (uint64_t *)&unk_10096AC10);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
      sub_10000A844((uint64_t *)&unk_10097D2B0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100770AD0;
      *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(inited + 40) = v22;
      *(void *)(inited + 72) = &type metadata for Bool;
      *(unsigned char *)(inited + 48) = 1;
      *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(inited + 88) = v23;
      *(void *)(inited + 120) = &type metadata for Bool;
      *(unsigned char *)(inited + 96) = 1;
      sub_100245A7C(inited);
      id v24 = [self defaultWorkspace];
      if (v24)
      {
        uint64_t v26 = v24;
        URL._bridgeToObjectiveC()(v25);
        unint64_t v28 = v27;
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        unsigned __int8 v30 = [v26 openSensitiveURL:v28 withOptions:isa];

        if (v30)
        {
          (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
          os_log_type_t v31 = Logger.logObject.getter();
          os_log_type_t v32 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v31, v32))
          {
            uint64_t v33 = (uint8_t *)swift_slowAlloc();
            uint64_t v39 = swift_slowAlloc();
            *(_DWORD *)uint64_t v33 = 136315138;
            v38[0] = v33 + 4;
            uint64_t v34 = URL.absoluteString.getter();
            v38[1] = (id)sub_100254634(v34, v35, &v39);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            uint64_t v36 = *(void (**)(char *, uint64_t))(v6 + 8);
            v36(v9, v5);
            _os_log_impl((void *)&_mh_execute_header, v31, v32, "Failed to open URL: %s", v33, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            v36(v11, v5);
          }
          else
          {

            uint64_t v37 = *(void (**)(char *, uint64_t))(v6 + 8);
            v37(v9, v5);
            v37(v11, v5);
          }
        }
      }
      else
      {
        __break(1u);
      }
    }
  }
  else if (!a1)
  {
    if (qword_100969CC8 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000B47C(v12, (uint64_t)qword_1009946A8);
    id v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Paired unlock banner tapped", v15, 2u);
      swift_slowDealloc();
    }

    v38[0] = [self defaultCenter];
    [v38[0] postNotificationName:@"SDUnlockBannerButtonTapped" object:0];
    id v16 = v38[0];
  }
}

uint64_t sub_100448C00()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100448C38()
{
  return sub_100447D08(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100448C40()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100448C78()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_100448C8C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100448CCC()
{
  sub_1004473B0(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_100448CD8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100448D18()
{
  sub_100446CC8(*(void **)(v0 + 16));
}

void sub_100448D20()
{
  sub_100446EBC(*(void **)(v0 + 16));
}

void sub_100448D28()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR___SDHUDManager_activeConnection);
  *(void *)(v1 + OBJC_IVAR___SDHUDManager_activeConnection) = 0;
}

void sub_100448D40()
{
  sub_100445DB4(*(void *)(v0 + 16));
}

void sub_100448D48()
{
  sub_100445980(*(void *)(v0 + 16));
}

uint64_t sub_100448D50()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100448D90()
{
  sub_10044491C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(unsigned char *)(v0 + 33), *(void *)(v0 + 40));
}

id sub_100448DA4()
{
  return sub_1004444D0(*(void *)(v0 + 16));
}

uint64_t sub_100448DAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100448E9C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100974860);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100974860);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100448F64(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SFAirDropReceive.AskRequest();
  v2[12] = v5;
  v2[13] = *(void *)(v5 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  return _swift_task_switch(sub_100449124, v6, 0);
}

uint64_t sub_100449124()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[13];
  uint64_t v5 = *(void *)(SFAirDropReceive.AskRequest.files.getter() + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[12];
  uint64_t v8 = v0[13];
  if (v5)
  {
    uint64_t v9 = *(void *)(SFAirDropReceive.AskRequest.urlItems.getter() + 16);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    if (v9 || !SFPlaygroundsAppAvailable())
    {
      BOOL v20 = 0;
    }
    else
    {
      uint64_t v10 = SFAirDropReceive.AskRequest.files.getter();
      uint64_t v11 = *(void *)(v10 + 16);
      if (v11)
      {
        uint64_t v12 = v0[10];
        unint64_t v28 = *(void (**)(void, unint64_t, void))(v12 + 16);
        unint64_t v13 = v10 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
        os_log_type_t v14 = (void (**)(uint64_t, uint64_t))(v12 + 8);
        uint64_t v27 = *(void *)(v12 + 72);
        while (1)
        {
          v28(v0[11], v13, v0[9]);
          SFAirDropReceive.AskRequest.ItemInfo.fileName.getter();
          NSString v15 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          NSString v16 = [v15 pathExtension];

          if (!v16)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();
            NSString v16 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
          }
          uint64_t v17 = v0[11];
          uint64_t v18 = v0[9];
          char v19 = SFIsPlaygroundItem();

          (*v14)(v17, v18);
          if ((v19 & 1) == 0) {
            break;
          }
          v13 += v27;
          if (!--v11) {
            goto LABEL_16;
          }
        }
        swift_bridgeObjectRelease();
        BOOL v20 = 0;
      }
      else
      {
LABEL_16:
        swift_bridgeObjectRelease();
        id v23 = objc_allocWithZone((Class)LSApplicationRecord);
        id v24 = sub_1006A5458(0xD000000000000015, 0x80000001007BDA90, 1);
        uint64_t v25 = v0[5];
        uint64_t v26 = *(void **)(v25 + 16);
        *(void *)(v25 + 16) = v24;

        BOOL v20 = *(void *)(v0[5] + 16) != 0;
      }
    }
  }
  else
  {
    (*(void (**)(void, void))(v8 + 8))(v0[15], v0[12]);
    BOOL v20 = 0;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(BOOL))v0[1];
  return v21(v20);
}

uint64_t sub_1004496A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_10000A844((uint64_t *)&unk_10097F1D0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v3 + 16);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v11 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v9, a2, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  id v13 = v10;
  sub_10039FAA0(a1, v10, 1, a3);

  return sub_10024DFE8((uint64_t)v9);
}

uint64_t type metadata accessor for SDAirDropContentHandlerPlaygroundItems()
{
  return self;
}

uint64_t sub_100449810@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerPlaygroundItems();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_100449848(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_100448F64(a1);
}

uint64_t sub_1004498E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1004496A8(a1, a2, a3);
}

void sub_100449908(uint64_t a1, char a2)
{
  unint64_t v3 = *(void *)(SFAirDropReceive.AskRequest.files.getter() + 16);
  swift_bridgeObjectRelease();
  sub_10000A844(&qword_10096D760);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
  *(void *)(inited + 32) = 0x554F524759414C50;
  *(void *)(inited + 40) = 0xEA0000000000444ELL;
  *(void *)(inited + 48) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = 95;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6._countAndFlagsBits = 0x554F524759414C50;
  v6._object = (void *)0xEA0000000000444ELL;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  if (v3 > 1)
  {
    v7._countAndFlagsBits = 0x4C4152554C505FLL;
    v7._object = (void *)0xE700000000000000;
    String.append(_:)(v7);
  }
  swift_bridgeObjectRelease();
  if (a2)
  {
    v8._countAndFlagsBits = 0x4C4154495041435FLL;
    v8._object = (void *)0xEC00000044455A49;
    String.append(_:)(v8);
  }
  v9._countAndFlagsBits = 0x545845545FLL;
  v9._object = (void *)0xE500000000000000;
  String.append(_:)(v9);
  swift_setDeallocating();
  sub_10000A844((uint64_t *)&unk_100977CB0);
  swift_arrayDestroy();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = (id)SFLocalizedStringForKey();

  if (v11)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_10076E7A0;
    *(void *)(v12 + 56) = &type metadata for Int;
    *(void *)(v12 + 64) = &protocol witness table for Int;
    *(void *)(v12 + 32) = v3;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100449C3C()
{
  if (*v0) {
    return 0x6E496E6F73726570;
  }
  else {
    return 0x746E756F636361;
  }
}

uint64_t sub_100449C7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10044AA78(a1, a2);
  *a3 = result;
  return result;
}

void sub_100449CA4(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_100449CB0(uint64_t a1)
{
  unint64_t v2 = sub_10044A818();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100449CEC(uint64_t a1)
{
  unint64_t v2 = sub_10044A818();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100449D28(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000A844(&qword_1009749F0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  sub_10044A818();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  Swift::String v9 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDAppleIDAccountInfo_account);
  if (v9)
  {
    NSString v10 = self;
    id v30 = 0;
    id v11 = v9;
    id v12 = [v10 archivedDataWithRootObject:v11 requiringSecureCoding:1 error:&v30];
    id v13 = v30;
    if (!v12)
    {
      char v19 = v13;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    os_log_type_t v14 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v16 = v15;

    id v30 = v14;
    unint64_t v31 = v16;
    HIBYTE(v29) = 0;
    sub_1002CC290();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

      uint64_t v17 = (uint64_t)v14;
      unint64_t v18 = v16;
      return sub_100250CC4(v17, v18);
    }

    sub_100250CC4((uint64_t)v14, v16);
  }
  BOOL v20 = self;
  sub_10000B740(0, &qword_1009749D8);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  id v30 = 0;
  id v22 = [v20 archivedDataWithRootObject:isa requiringSecureCoding:1 error:&v30];

  id v23 = v30;
  if (v22)
  {
    id v24 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v26 = v25;

    id v30 = v24;
    unint64_t v31 = v26;
    HIBYTE(v29) = 1;
    sub_1002CC290();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v17 = (uint64_t)v24;
    unint64_t v18 = v26;
    return sub_100250CC4(v17, v18);
  }
  unint64_t v28 = v23;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id sub_10044A094(void *a1)
{
  uint64_t v3 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_10000A844(&qword_1009749C8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a1;
  uint64_t v34 = OBJC_IVAR____TtC16DaemoniOSLibrary20SDAppleIDAccountInfo_account;
  *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAppleIDAccountInfo_account] = 0;
  sub_10026BB6C(a1, a1[3]);
  sub_10044A818();
  unint64_t v31 = v3;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    goto LABEL_3;
  }
  uint64_t v9 = v6;
  LOBYTE(v39) = 0;
  sub_1002CC1F4();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v11 = v36;
  unint64_t v10 = v37;
  sub_10000B740(0, &qword_10096D3C0);
  sub_10000B740(0, &qword_1009749E8);
  uint64_t v12 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
  uint64_t v19 = v12;
  if (!v12)
  {
    uint64_t v25 = type metadata accessor for SFError();
    sub_100443EE4();
    swift_allocError();
    *unint64_t v26 = 0xD00000000000001ELL;
    v26[1] = 0x80000001007BDC20;
    _OWORD v26[2] = 0xD000000000000059;
    v26[3] = 0x80000001007BDBC0;
    v26[4] = 44;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, enum case for SFError.unexpected(_:), v25);
    swift_willThrow();
    sub_100250CC4(v11, v10);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
LABEL_3:
    unint64_t v16 = v31;
    goto LABEL_4;
  }
  sub_100250CC4(v11, v10);
  BOOL v20 = *(void **)&v3[v34];
  *(void *)&v3[v34] = v19;

  LOBYTE(v39) = 1;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v14 = v36;
  unint64_t v13 = v37;
  sub_10000B740(0, &qword_10096D3C0);
  sub_10000A844(&qword_10096CE08);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1007709D0;
  *(void *)(v15 + 32) = sub_10000B740(0, (unint64_t *)&unk_10096BA70);
  *(void *)(v15 + 40) = sub_10000B740(0, (unint64_t *)&unk_10096B270);
  *(void *)(v15 + 48) = sub_10000B740(0, &qword_1009749D8);
  static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)();
  swift_bridgeObjectRelease();
  uint64_t v30 = v14;
  if (v38)
  {
    sub_10000A844(&qword_1009749E0);
    char v21 = swift_dynamicCast();
    unint64_t v16 = v31;
    id v22 = (objc_class *)ObjectType;
    uint64_t v23 = v9;
    if (v21)
    {
      sub_100250CC4(v30, v13);
      uint64_t v24 = v39;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v5);
      *(void *)&v16[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAppleIDAccountInfo_personInfo] = v24;

      v35.receiver = v16;
      v35.super_class = v22;
      id v17 = [super init];
      sub_10024D338((uint64_t)v33);
      return v17;
    }
  }
  else
  {
    sub_10041AAB4((uint64_t)&v36);
    unint64_t v16 = v31;
    uint64_t v23 = v9;
  }
  uint64_t v27 = type metadata accessor for SFError();
  sub_100443EE4();
  swift_allocError();
  *unint64_t v28 = 0xD000000000000021;
  v28[1] = 0x80000001007BDB90;
  v28[2] = 0xD000000000000059;
  void v28[3] = 0x80000001007BDBC0;
  v28[4] = 51;
  (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v28, enum case for SFError.unexpected(_:), v27);
  swift_willThrow();
  sub_100250CC4(v30, v13);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v5);
LABEL_4:
  sub_10024D338((uint64_t)v33);
  id v17 = *(id *)&v3[v34];

  swift_deallocPartialClassInstance();
  return v17;
}

uint64_t type metadata accessor for SDAppleIDAccountInfo()
{
  return self;
}

id sub_10044A704@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v6 = objc_allocWithZone(v2);
  id result = sub_10044A094(a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10044A754(void *a1)
{
  return sub_100449D28(a1);
}

id sub_10044A7C0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDAppleIDAccountInfoStoreFactory();
  return [super dealloc];
}

uint64_t type metadata accessor for SDAppleIDAccountInfoStoreFactory()
{
  return self;
}

unint64_t sub_10044A818()
{
  unint64_t result = qword_1009749D0;
  if (!qword_1009749D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009749D0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SDAppleIDAccountInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10044A938);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDAppleIDAccountInfo.CodingKeys()
{
  return &type metadata for SDAppleIDAccountInfo.CodingKeys;
}

unint64_t sub_10044A974()
{
  unint64_t result = qword_1009749F8;
  if (!qword_1009749F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1009749F8);
  }
  return result;
}

unint64_t sub_10044A9CC()
{
  unint64_t result = qword_100974A00;
  if (!qword_100974A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100974A00);
  }
  return result;
}

unint64_t sub_10044AA24()
{
  unint64_t result = qword_100974A08;
  if (!qword_100974A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100974A08);
  }
  return result;
}

uint64_t sub_10044AA78(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E756F636361 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E496E6F73726570 && a2 == 0xEA00000000006F66)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10044AB78()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_100974A10);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_100974A10);
  if (qword_100969CD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946C0);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10044AC40()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v2 - 8);
  unint64_t v37 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AuthenticationSecurityRequest(0);
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v34 + 64);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v35 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  Swift::String v8 = (uint64_t *)((char *)&v34 - v7);
  uint64_t v36 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v16 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v15 = v16;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  id v17 = v16;
  LOBYTE(v16) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if (v16)
  {
    uint64_t v18 = *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
    switch(v18)
    {
      case 0:
        break;
      case 1:
      case 2:
      case 3:
      case 7:
      case 8:
      case 10:
      case 13:
      case 14:
        if (qword_100969E20 == -1) {
          goto LABEL_4;
        }
        goto LABEL_16;
      case 4:
        uint64_t v18 = 3584;
        break;
      case 5:
        uint64_t v18 = 34816;
        break;
      case 6:
        uint64_t v18 = 2;
        break;
      case 9:
      case 11:
        uint64_t v18 = 34818;
        break;
      default:
        if (qword_100969BE8 != -1) {
          swift_once();
        }
        uint64_t v18 = qword_100994470;
        break;
    }
    Date.init()();
    unint64_t v26 = (char *)v8 + *(int *)(v4 + 20);
    uint64_t v27 = v36;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v26, v11, v36);
    *Swift::String v8 = v18;
    uint64_t v28 = type metadata accessor for TaskPriority();
    uint64_t v29 = (uint64_t)v37;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v37, 1, 1, v28);
    uint64_t v30 = v35;
    sub_100340128((uint64_t)v8, v35);
    unint64_t v31 = (*(unsigned __int8 *)(v34 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    os_log_type_t v32 = (void *)swift_allocObject();
    void v32[2] = 0;
    v32[3] = 0;
    v32[4] = v1;
    sub_10045AA40(v30, (uint64_t)v32 + v31);
    uint64_t v33 = v1;
    sub_10028CFA8(v29, (uint64_t)&unk_100974AA0, (uint64_t)v32);
    swift_release();
    sub_10034018C((uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v27);
  }
  else
  {
    __break(1u);
LABEL_16:
    swift_once();
LABEL_4:
    uint64_t v19 = type metadata accessor for Logger();
    sub_10000B47C(v19, (uint64_t)qword_100974A10);
    BOOL v20 = v1;
    char v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v24 = sub_10050938C();
      uint64_t v38 = sub_100254634(v24, v25, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Authentication type %s does not support this method", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

uint64_t sub_10044B20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[32] = a4;
  v5[33] = a5;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  v5[34] = v6;
  v5[35] = *(void *)(v6 - 8);
  v5[36] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DispatchQoS();
  v5[37] = v7;
  v5[38] = *(void *)(v7 - 8);
  v5[39] = swift_task_alloc();
  return _swift_task_switch(sub_10044B328, 0, 0);
}

uint64_t sub_10044B328()
{
  uint64_t v1 = v0[32] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
  swift_beginAccess();
  sub_10024A330(v1, (uint64_t)(v0 + 19), &qword_100978040);
  if (v0[22])
  {
    uint64_t v2 = v0[33];
    sub_100278C8C((uint64_t)(v0 + 19), (uint64_t)(v0 + 14));
    sub_10000A7E8((uint64_t)(v0 + 19), &qword_100978040);
    uint64_t v3 = (void *)(*sub_10026BB6C(v0 + 14, v0[17])
                  + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager);
    swift_beginAccess();
    uint64_t v4 = *sub_10026BB6C(v3, v3[3]);
    uint64_t v5 = swift_task_alloc();
    v0[40] = v5;
    *(void *)(v5 + 16) = v4;
    *(void *)(v5 + 24) = v2;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[41] = v6;
    void *v6 = v0;
    v6[1] = sub_10044B6CC;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6, 0, 0, 0x6F6974616C6F6976, 0xEF293A726F66286ELL, sub_10045AFD8, v5, (char *)&type metadata for () + 8);
  }
  else
  {
    sub_10000A7E8((uint64_t)(v0 + 19), &qword_100978040);
    uint64_t v8 = v0[38];
    uint64_t v7 = v0[39];
    uint64_t v9 = v0[36];
    uint64_t v18 = v0[37];
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[35];
    uint64_t v12 = (void *)v0[32];
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    v0[12] = sub_10045AF00;
    v0[13] = v13;
    v0[8] = _NSConcreteStackBlock;
    v0[9] = 1107296256;
    v0[10] = sub_100296520;
    v0[11] = &unk_1008DB830;
    uint64_t v14 = _Block_copy(v0 + 8);
    id v15 = v12;
    static DispatchQoS.unspecified.getter();
    v0[30] = _swiftEmptyArrayStorage;
    sub_10045A8BC((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002B4B9C();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v14);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v18);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
}

uint64_t sub_10044B6CC()
{
  *(void *)(*(void *)v1 + 336) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10044B9FC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10044B7E8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10044B7E8()
{
  sub_10024D338((uint64_t)(v0 + 14));
  uint64_t v2 = v0[38];
  uint64_t v1 = v0[39];
  uint64_t v3 = v0[36];
  uint64_t v12 = v0[37];
  uint64_t v4 = v0[34];
  uint64_t v5 = v0[35];
  uint64_t v6 = (void *)v0[32];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  v0[12] = sub_10045AF00;
  v0[13] = v7;
  v0[8] = _NSConcreteStackBlock;
  v0[9] = 1107296256;
  v0[10] = sub_100296520;
  v0[11] = &unk_1008DB830;
  uint64_t v8 = _Block_copy(v0 + 8);
  id v9 = v6;
  static DispatchQoS.unspecified.getter();
  v0[30] = _swiftEmptyArrayStorage;
  sub_10045A8BC((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002B4B9C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v12);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_10044B9FC()
{
  uint64_t v1 = v0[42];
  uint64_t v2 = v0[39];
  uint64_t v22 = v0[38];
  uint64_t v3 = v0[36];
  uint64_t v23 = v0[37];
  uint64_t v4 = v0[34];
  uint64_t v5 = v0[35];
  uint64_t v6 = (void *)v0[32];
  swift_task_dealloc();
  sub_10024D338((uint64_t)(v0 + 14));
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  *(void *)(v7 + 24) = v6;
  v0[6] = sub_10045AF4C;
  v0[7] = v7;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100296520;
  v0[5] = &unk_1008DB880;
  uint64_t v8 = _Block_copy(v0 + 2);
  swift_errorRetain();
  id v9 = v6;
  static DispatchQoS.unspecified.getter();
  v0[31] = _swiftEmptyArrayStorage;
  sub_10045A8BC((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002B4B9C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v8);
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v2, v23);
  swift_release();
  uint64_t v11 = v0[38];
  uint64_t v10 = v0[39];
  uint64_t v12 = v0[36];
  uint64_t v13 = v0[37];
  uint64_t v14 = v0[34];
  uint64_t v15 = v0[35];
  unint64_t v16 = (void *)v0[32];
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  v0[12] = sub_10045AF00;
  v0[13] = v17;
  v0[8] = _NSConcreteStackBlock;
  v0[9] = 1107296256;
  v0[10] = sub_100296520;
  v0[11] = &unk_1008DB830;
  uint64_t v18 = _Block_copy(v0 + 8);
  id v19 = v16;
  static DispatchQoS.unspecified.getter();
  v0[30] = _swiftEmptyArrayStorage;
  sub_10000A844((uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v13);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_10044BD74(char *a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v79 = *(void **)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (uint8_t *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v78 = *(uint8_t **)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)type metadata accessor for UUID();
  uint64_t v9 = *(v8 - 1);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
  swift_beginAccess();
  sub_10024A330(v12, (uint64_t)&v82, &qword_10097BB50);
  sub_10024A330((uint64_t)&v82, (uint64_t)&v80, &qword_10097BB50);
  if (!v81)
  {
    sub_10000A7E8((uint64_t)&v80, &qword_10097BB50);
    sub_10024D280();
    uint64_t v33 = swift_allocError();
    *(_DWORD *)uint64_t v34 = 10;
    strcpy((char *)(v34 + 8), "No peer device");
    *(unsigned char *)(v34 + 23) = -18;
    swift_willThrow();
    sub_10000A7E8((uint64_t)&v82, &qword_10097BB50);
    goto LABEL_16;
  }
  uint64_t v76 = (void *)v2;
  sub_1002AF688(&v80, (uint64_t)&v84);
  sub_10000A7E8((uint64_t)&v82, &qword_10097BB50);
  sub_100278C8C((uint64_t)&v84, (uint64_t)&v82);
  (*(void (**)(char *, char *, void *))(v9 + 16))(v11, &a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_sessionID], v8);
  uint64_t v77 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  uint64_t v13 = *(void *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
  type metadata accessor for SDAuthenticationAKSAuthSession();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession) = 0;
  id v15 = [self sharedManager];
  if (!v15)
  {
    __break(1u);
LABEL_41:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  *(void *)(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager) = v15;
  *(unsigned char *)(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role) = 1;
  sub_1002AF688(&v82, v14 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice);
  unint64_t v16 = *(void (**)(uint64_t, char *, void *))(v9 + 32);
  v9 += 32;
  v16(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_sessionID, v11, v8);
  *(void *)(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_type) = v13;
  uint64_t v8 = *(void **)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_aksAuthSession];
  *(void *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_aksAuthSession] = v14;
  swift_retain();
  swift_release();
  uint64_t v17 = [objc_allocWithZone((Class)SDAuthenticationRequest) init];
  if (!v17)
  {
    sub_10024D280();
    uint64_t v33 = swift_allocError();
    *(_DWORD *)uint64_t v35 = 10;
    *(void *)(v35 + 8) = 0xD000000000000030;
    *(void *)(v35 + 16) = 0x80000001007BDE90;
    swift_willThrow();
    swift_release();
LABEL_15:
    sub_10024D338((uint64_t)&v84);
    uint64_t v2 = (uint64_t)v76;
    goto LABEL_16;
  }
  uint64_t v8 = v17;
  uint64_t v18 = v77;
  if ((unint64_t)(*(void *)&a1[v77] - 1) >= 4) {
    goto LABEL_7;
  }
  uint64_t v19 = *(void *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_rangingSession];
  if (!v19)
  {
    sub_10024D280();
    uint64_t v33 = swift_allocError();
    *(_DWORD *)uint64_t v36 = 10;
    *(void *)(v36 + 8) = 0xD00000000000001ELL;
    *(void *)(v36 + 16) = 0x80000001007BDED0;
    swift_willThrow();
    swift_release();

    goto LABEL_15;
  }
  uint64_t v21 = *(void *)(v19 + 16);
  unint64_t v20 = *(void *)(v19 + 24);
  swift_retain();
  sub_10025ADCC(v21, v20);
  v22.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
  uint64_t v75 = v4;
  uint64_t v23 = v8;
  Class isa = v22.super.isa;
  sub_100250CC4(v21, v20);
  [v23 setAwdlInfo:isa];
  swift_release();

  uint64_t v8 = v23;
  uint64_t v4 = v75;
  uint64_t v18 = v77;
LABEL_7:
  [v8 setVersion:1];
  UUID.uuidString.getter();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v8 setSessionID:v25];

  unint64_t v26 = &a1[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_lastUnlockDate];
  swift_beginAccess();
  uint64_t v27 = v78;
  double v28 = 0.0;
  if (!(*((unsigned int (**)(char *, uint64_t, uint64_t))v78 + 6))(v26, 1, v5))
  {
    (*((void (**)(char *, char *, uint64_t))v27 + 2))(v7, v26, v5);
    Date.timeIntervalSince1970.getter();
    double v28 = v29;
    (*((void (**)(char *, uint64_t))v27 + 1))(v7, v5);
  }
  [v8 setUnlockDate:v28];
  Date.init()();
  Date.timeIntervalSince1970.getter();
  double v31 = v30;
  os_log_type_t v32 = (void (*)(char *, uint64_t))*((void *)v27 + 1);
  uint64_t v9 = (uint64_t)(v27 + 8);
  v32(v7, v5);
  [v8 setSessionStartDate:v31];
  uint64_t v2 = (uint64_t)v76;
  if (HIDWORD(*(void *)&a1[v18])) {
    goto LABEL_41;
  }
  [v8 setType:];
  if ((unint64_t)(*(void *)&a1[v18] - 3) <= 0xB)
  {
    sub_10069FF44(0, 0xF000000000000000);
    sub_10069FBEC(0, 0xF000000000000000);
    uint64_t v55 = v54;
    uint64_t v56 = Data.init(referencing:)();
    uint64_t v9 = v57;
    long long v58 = v4;
    long long v59 = v8;
    Class v60 = Data._bridgeToObjectiveC()().super.isa;
    sub_100250CC4(v56, v9);
    [v59 setAksToken:v60];

    uint64_t v8 = v59;
    uint64_t v4 = v58;
  }
  id v61 = [v8 data];
  if (v61)
  {
    uint64_t v62 = v61;
    uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v4 = v63;

    if (qword_100969E20 == -1)
    {
LABEL_29:
      uint64_t v64 = type metadata accessor for Logger();
      sub_10000B47C(v64, (uint64_t)qword_100974A10);
      uint64_t v65 = a1;
      uint64_t v66 = Logger.logObject.getter();
      os_log_type_t v67 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v66, v67))
      {
        uint64_t v68 = (uint8_t *)swift_slowAlloc();
        uint64_t v76 = (void *)swift_slowAlloc();
        uint64_t v78 = v68;
        *(_DWORD *)uint64_t v68 = 138412290;
        uint64_t v75 = v68 + 4;
        uint64_t v79 = v8;
        uint64_t v69 = *(Class *)((char *)&v65->isa + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
        *(void *)&long long v82 = v69;
        id v70 = v69;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v76 = v69;
        uint64_t v8 = v79;

        _os_log_impl((void *)&_mh_execute_header, v66, v67, "Sending authentication request on queue %@", v78, 0xCu);
        sub_10000A844(&qword_10096B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v66 = v65;
      }
      uint64_t v72 = v77;

      uint64_t v73 = (uint64_t)v65 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
      swift_beginAccess();
      sub_10024A330(v73, (uint64_t)&v82, &qword_100978040);
      if (v83)
      {
        sub_100278C8C((uint64_t)&v82, (uint64_t)&v80);
        sub_10000A7E8((uint64_t)&v82, &qword_100978040);
        sub_10026BB6C(&v80, v81);
        sub_1006DF18C(v9, (uint64_t)v4, (uint64_t)&v84, 0, *(void *)&a1[v72]);
        sub_10024D338((uint64_t)&v80);
      }
      else
      {
        sub_10000A7E8((uint64_t)&v82, &qword_100978040);
      }
      sub_100507F28(0, 1);
      sub_100250CC4(v9, (unint64_t)v4);
      swift_release();

      return sub_10024D338((uint64_t)&v84);
    }
LABEL_39:
    swift_once();
    goto LABEL_29;
  }
  sub_10024D280();
  uint64_t v33 = swift_allocError();
  *(_DWORD *)uint64_t v71 = 10;
  *(void *)(v71 + 8) = 0xD000000000000020;
  *(void *)(v71 + 16) = 0x80000001007BA860;
  swift_willThrow();
  swift_release();

  sub_10024D338((uint64_t)&v84);
LABEL_16:
  *(void *)&long long v82 = v33;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    unsigned int v37 = v84;
    uint64_t v39 = v85;
    uint64_t v38 = v86;
    uint64_t v40 = *(void **)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
    *(void *)uint64_t v4 = v40;
    os_log_type_t v41 = v79;
    ((void (*)(uint8_t *, void, uint64_t))v79[13])(v4, enum case for DispatchPredicate.onQueue(_:), v2);
    id v42 = v40;
    uint64_t v9 = _dispatchPreconditionTest(_:)();
    os_log_type_t v43 = (void (*)(uint8_t *, uint64_t))v41[1];
    uint64_t v8 = v41 + 1;
    v43(v4, v2);
    if (v9)
    {
      uint64_t v44 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
      swift_beginAccess();
      sub_10024A330(v44, (uint64_t)&v84, &qword_100978040);
      if (v87)
      {
        sub_100278C8C((uint64_t)&v84, (uint64_t)&v82);
        sub_10000A7E8((uint64_t)&v84, &qword_100978040);
        uint64_t v45 = *sub_10026BB6C(&v82, v83);
        uint64_t v46 = a1;
        sub_1004543D8(v46, v37, v39, v38, v45);

        sub_10024D338((uint64_t)&v82);
      }
      else
      {
        sub_10000A7E8((uint64_t)&v84, &qword_100978040);
      }
      swift_errorRelease();
      return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  id v47 = *(void **)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *(void *)uint64_t v4 = v47;
  uint64_t v48 = v79;
  ((void (*)(uint8_t *, void, uint64_t))v79[13])(v4, enum case for DispatchPredicate.onQueue(_:), v2);
  id v49 = v47;
  LOBYTE(v47) = _dispatchPreconditionTest(_:)();
  ((void (*)(uint8_t *, uint64_t))v48[1])(v4, v2);
  if ((v47 & 1) == 0) {
    goto LABEL_38;
  }
  uint64_t v50 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess();
  sub_10024A330(v50, (uint64_t)&v84, &qword_100978040);
  if (v87)
  {
    sub_100278C8C((uint64_t)&v84, (uint64_t)&v82);
    sub_10000A7E8((uint64_t)&v84, &qword_100978040);
    uint64_t v51 = *sub_10026BB6C(&v82, v83);
    uint64_t v52 = a1;
    sub_1004543D8(v52, 0xAu, 0, 0xE000000000000000, v51);

    sub_10024D338((uint64_t)&v82);
  }
  else
  {
    sub_10000A7E8((uint64_t)&v84, &qword_100978040);
  }
  return swift_errorRelease();
}

void sub_10044CAEC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AuthenticationSecurityRequest(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v113 = v7;
  uint64_t v114 = v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = v10;
  __chkstk_darwin(v9);
  unint64_t v116 = (char *)&v104 - v12;
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  long long v118 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchPredicate();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (uint64_t *)((char *)&v104 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v20 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v19 = v20;
  (*(void (**)(void *, void, uint64_t))(v17 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v16);
  id v21 = v20;
  LOBYTE(v20) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v17 + 8))(v19, v16);
  if (v20)
  {
    if (qword_100969E20 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v22 = type metadata accessor for Logger();
  uint64_t v23 = sub_10000B47C(v22, (uint64_t)qword_100974A10);
  uint64_t v24 = a1;
  NSString v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  BOOL v27 = os_log_type_enabled(v25, v26);
  uint64_t v117 = v13;
  os_log_t v111 = v11;
  uint64_t v112 = v14;
  if (v27)
  {
    double v28 = (uint8_t *)swift_slowAlloc();
    double v29 = (void *)swift_slowAlloc();
    uint64_t v119 = v23;
    *(_DWORD *)double v28 = 138412290;
    Swift::Int v121 = v24;
    double v30 = v24;
    uint64_t v110 = (uint64_t)v6;
    double v31 = v2;
    os_log_type_t v32 = v30;
    uint64_t v23 = v119;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v29 = v24;

    uint64_t v2 = v31;
    uint64_t v6 = (char *)v110;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Received authentication request: %@", v28, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    NSString v25 = v24;
  }

  uint64_t v33 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_AWDLInfo];
  unint64_t v34 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_AWDLInfo + 8];
  switch(v34 >> 62)
  {
    case 1uLL:
      BOOL v35 = __OFSUB__(HIDWORD(v33), v33);
      LODWORD(v33) = HIDWORD(v33) - v33;
      if (!v35)
      {
        uint64_t v33 = (int)v33;
        goto LABEL_11;
      }
      __break(1u);
      goto LABEL_58;
    case 2uLL:
      uint64_t v38 = v33 + 16;
      uint64_t v36 = *(void *)(v33 + 16);
      uint64_t v37 = *(void *)(v38 + 8);
      BOOL v35 = __OFSUB__(v37, v36);
      uint64_t v33 = v37 - v36;
      if (!v35) {
        goto LABEL_11;
      }
LABEL_58:
      __break(1u);
      goto LABEL_59;
    case 3uLL:
      goto LABEL_29;
    default:
      uint64_t v33 = BYTE6(v34);
LABEL_11:
      if (v33 < 1)
      {
LABEL_29:
        uint64_t v64 = Logger.logObject.getter();
        os_log_type_t v65 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v64, v65))
        {
LABEL_32:

          LOBYTE(v121) = 0;
          uint64_t v68 = 10;
LABEL_36:
          sub_10044D890(v68);
          return;
        }
        uint64_t v66 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v66 = 0;
        os_log_type_t v67 = "Missing local AWDL info";
LABEL_31:
        _os_log_impl((void *)&_mh_execute_header, v64, v65, v67, v66, 2u);
        swift_slowDealloc();
        goto LABEL_32;
      }
      if (![v24 hasType]
        || (unint64_t v39 = sub_10050A7B4([v24 type]), (v40 & 1) != 0))
      {
        uint64_t v69 = Logger.logObject.getter();
        os_log_type_t v70 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v69, v70))
        {
          uint64_t v71 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v71 = 0;
          _os_log_impl((void *)&_mh_execute_header, v69, v70, "Message does not have an authentication type", v71, 2u);
          swift_slowDealloc();
        }

        LOBYTE(v121) = 0;
        uint64_t v68 = 1;
        goto LABEL_36;
      }
      unint64_t v41 = v39;
      uint64_t v110 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
      *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type] = v39;
      id v42 = Logger.logObject.getter();
      os_log_type_t v43 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v44 = swift_slowAlloc();
        uint64_t v109 = v24;
        uint64_t v119 = v23;
        uint64_t v45 = (uint8_t *)v44;
        Swift::Int v121 = swift_slowAlloc();
        *(_DWORD *)uint64_t v45 = 136315138;
        uint64_t v46 = sub_10050938C();
        uint64_t v120 = sub_100254634(v46, v47, (uint64_t *)&v121);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "Authentication Session type: %s", v45, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v24 = v109;
        swift_slowDealloc();
      }

      if (v41 > 0xE) {
        goto LABEL_42;
      }
      if (((1 << v41) & 0x6580) == 0)
      {
        if (((1 << v41) & 0xE) == 0)
        {
LABEL_42:
          uint64_t v75 = v2;
          uint64_t v76 = Logger.logObject.getter();
          os_log_type_t v77 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v76, v77))
          {
            uint64_t v78 = (uint8_t *)swift_slowAlloc();
            Swift::Int v121 = swift_slowAlloc();
            *(_DWORD *)uint64_t v78 = 136315138;
            uint64_t v79 = sub_10050938C();
            uint64_t v120 = sub_100254634(v79, v80, (uint64_t *)&v121);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v76, v77, "Authentication type %s does not support handling this message", v78, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          return;
        }
        type metadata accessor for SDAuthenticationRangingSession(0);
        swift_allocObject();
        *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_rangingSession] = sub_100421E80();
        swift_release();
      }
      uint64_t v48 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_rangingSession];
      if (!v48)
      {
        uint64_t v64 = Logger.logObject.getter();
        os_log_type_t v65 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v64, v65)) {
          goto LABEL_32;
        }
        uint64_t v66 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v66 = 0;
        os_log_type_t v67 = "Missing ranging session";
        goto LABEL_31;
      }
      swift_retain();
      id v49 = [v24 rangingToken];
      if (!v49)
      {
        uint64_t v72 = Logger.logObject.getter();
        os_log_type_t v73 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v72, v73))
        {
          uint64_t v74 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v74 = 0;
          _os_log_impl((void *)&_mh_execute_header, v72, v73, "Message does not have a ranging token", v74, 2u);
          swift_slowDealloc();
        }

        LOBYTE(v121) = 0;
        sub_10044D890(1);
        goto LABEL_48;
      }
      uint64_t v50 = v49;
      uint64_t v109 = v41;
      uint64_t v51 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v53 = v52;

      id v54 = [v24 awdlInfo];
      if (!v54)
      {
LABEL_45:
        uint64_t v81 = Logger.logObject.getter();
        os_log_type_t v82 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v81, v82))
        {
          uint64_t v83 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v83 = 0;
          _os_log_impl((void *)&_mh_execute_header, v81, v82, "Message does not have AWDL info", v83, 2u);
          swift_slowDealloc();
        }

        LOBYTE(v121) = 0;
        sub_10044D890(1);
        sub_100250CC4(v51, v53);
LABEL_48:
        swift_release();
        return;
      }
      uint64_t v55 = v54;
      uint64_t v110 = v51;
      uint64_t v119 = v48;
      uint64_t v56 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v58 = v57;

      Class isa = Data._bridgeToObjectiveC()().super.isa;
      id v60 = sub_1000D2064(isa);

      if (!v60)
      {
        sub_100250CC4(v56, v58);
        uint64_t v51 = v110;
        goto LABEL_45;
      }
      uint64_t v107 = v56;
      unint64_t v108 = v58;
      uint64_t v61 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      if ([v24 hasUnlockDate])
      {
        [v24 unlockDate];
        Date.init(timeIntervalSince1970:)();
        uint64_t v62 = (char *)&v109[-1].isa + 7;
        uint64_t v105 = v61;
        unint64_t v106 = v53;
        if (unint64_t)&v109[-1].isa + 7 < 0xE && ((0x27FFu >> (char)v62))
        {
          uint64_t v63 = (uint64_t *)((char *)&unk_1007782A0 + 8 * (void)v62);
        }
        else
        {
          if (qword_100969BE8 != -1) {
LABEL_59:
          }
            swift_once();
          uint64_t v63 = &qword_100994470;
        }
        uint64_t v91 = *v63;
        uint64_t v92 = v112;
        uint64_t v93 = (uint64_t *)v116;
        (*(void (**)(char *, char *, uint64_t))(v112 + 16))(&v116[*(int *)(v113 + 20)], v118, v117);
        *uint64_t v93 = v91;
        uint64_t v94 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v6, 1, 1, v94);
        uint64_t v95 = (uint64_t)v111;
        sub_100340128((uint64_t)v93, (uint64_t)v111);
        unint64_t v96 = (*(unsigned __int8 *)(v114 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
        unint64_t v97 = (v115 + v96 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v98 = (v97 + 15) & 0xFFFFFFFFFFFFFFF8;
        id v99 = (void *)swift_allocObject();
        v99[2] = 0;
        v99[3] = 0;
        v99[4] = v2;
        sub_10045AA40(v95, (uint64_t)v99 + v96);
        *(void *)((char *)v99 + v97) = v119;
        unint64_t v100 = v106;
        *(void *)((char *)v99 + v98) = v105;
        uint64_t v101 = (void *)((char *)v99 + ((v98 + 15) & 0xFFFFFFFFFFFFFFF8));
        uint64_t v102 = v110;
        *uint64_t v101 = v110;
        v101[1] = v100;
        uint64_t v103 = v2;
        swift_retain();
        sub_10025ADCC(v102, v100);
        sub_10028CFA8((uint64_t)v6, (uint64_t)&unk_100974A90, (uint64_t)v99);
        sub_100250CC4(v107, v108);
        swift_release();
        sub_100250CC4(v102, v100);
        swift_release();
        sub_10034018C((uint64_t)v93);
        (*(void (**)(char *, uint64_t))(v92 + 8))(v118, v117);
      }
      else
      {
        swift_bridgeObjectRelease();
        unsigned int v84 = Logger.logObject.getter();
        os_log_type_t v85 = static os_log_type_t.error.getter();
        BOOL v86 = os_log_type_enabled(v84, v85);
        uint64_t v88 = v107;
        unint64_t v87 = v108;
        uint64_t v89 = v110;
        if (v86)
        {
          uint64_t v90 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v90 = 0;
          _os_log_impl((void *)&_mh_execute_header, v84, v85, "Message does not have last unlock date", v90, 2u);
          swift_slowDealloc();
        }

        LOBYTE(v121) = 0;
        sub_10044D890(11);
        sub_100250CC4(v88, v87);
        sub_100250CC4(v89, v53);
        swift_release();
      }
      return;
  }
}

uint64_t sub_10044D890(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (void **)((char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_33:
    swift_once();
    goto LABEL_13;
  }
  uint64_t v10 = [objc_allocWithZone((Class)SDAuthenticationResponse) init];
  uint64_t v7 = v10;
  if (v10)
  {
    uint64_t v11 = v10;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v11 setAwdlInfo:isa];

    [v11 setVersion:1];
    uint64_t v13 = v11;
    UUID.uuidString.getter();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v13 setSessionID:v14];
  }
  if ((a1 & 0x100000000) == 0) {
    [v7 setErrorCode:a1];
  }
  if (v7)
  {
    id v15 = [v7 data];
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v19 = v18;

      if (qword_100969E20 != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      sub_10000B47C(v20, (uint64_t)qword_100974A10);
      id v21 = v7;
      uint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v22, v23))
      {
        unint64_t v44 = v19;
        uint64_t v24 = swift_slowAlloc();
        uint64_t v43 = v17;
        NSString v25 = (uint8_t *)v24;
        unint64_t v41 = (void *)swift_slowAlloc();
        id v42 = v25;
        *(_DWORD *)NSString v25 = 138412290;
        v47[0] = v21;
        os_log_type_t v26 = v21;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *unint64_t v41 = v7;

        unint64_t v19 = v44;
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "Sending authentication response: %@", v42, 0xCu);
        sub_10000A844(&qword_10096B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v17 = v43;
        swift_slowDealloc();
      }
      else
      {

        uint64_t v22 = v21;
      }

      uint64_t v34 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
      swift_beginAccess();
      sub_10024A330(v34, (uint64_t)v47, &qword_100978040);
      if (v48)
      {
        sub_100278C8C((uint64_t)v47, (uint64_t)v45);
        sub_10000A7E8((uint64_t)v47, &qword_100978040);
        sub_10026BB6C(v45, v46);
        sub_1006FA798(v17, v19, 1, *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type]);
        sub_10024D338((uint64_t)v45);
        if ((a1 & 0x100000000) == 0)
        {
LABEL_20:
          sub_10024A330(v34, (uint64_t)v47, &qword_100978040);
          if (v48)
          {
            sub_100278C8C((uint64_t)v47, (uint64_t)v45);
            sub_10000A7E8((uint64_t)v47, &qword_100978040);
            uint64_t v35 = *sub_10026BB6C(v45, v46);
            uint64_t v36 = v2;
            sub_1004543D8(v36, a1, 0, 0xE000000000000000, v35);

            sub_100250CC4(v17, v19);
            return sub_10024D338((uint64_t)v45);
          }

          sub_100250CC4(v17, v19);
          return sub_10000A7E8((uint64_t)v47, &qword_100978040);
        }
      }
      else
      {
        sub_10000A7E8((uint64_t)v47, &qword_100978040);
        if ((a1 & 0x100000000) == 0) {
          goto LABEL_20;
        }
      }
      sub_100507F28(0, 1);

      return sub_100250CC4(v17, v19);
    }
  }
  if (qword_100969E20 != -1) {
    goto LABEL_33;
  }
LABEL_13:
  uint64_t v27 = type metadata accessor for Logger();
  sub_10000B47C(v27, (uint64_t)qword_100974A10);
  double v28 = v7;
  double v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v29, v30))
  {
    double v31 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v32 = (void *)swift_slowAlloc();
    *(_DWORD *)double v31 = 138412290;
    if (v7)
    {
      v47[0] = v28;
      uint64_t v33 = v28;
    }
    else
    {
      v47[0] = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v32 = v7;

    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Could not convert response to data: %@", v31, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    double v29 = v28;
  }

  uint64_t v38 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess();
  sub_10024A330(v38, (uint64_t)v47, &qword_100978040);
  if (v48)
  {
    sub_100278C8C((uint64_t)v47, (uint64_t)v45);
    sub_10000A7E8((uint64_t)v47, &qword_100978040);
    uint64_t v39 = *sub_10026BB6C(v45, v46);
    char v40 = v2;
    sub_1004543D8(v40, 0xAu, 0, 0xE000000000000000, v39);

    return sub_10024D338((uint64_t)v45);
  }

  return sub_10000A7E8((uint64_t)v47, &qword_100978040);
}

uint64_t sub_10044DFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[47] = a8;
  v8[48] = v13;
  v8[45] = a6;
  v8[46] = a7;
  v8[43] = a4;
  v8[44] = a5;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  v8[49] = v9;
  v8[50] = *(void *)(v9 - 8);
  v8[51] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for DispatchQoS();
  v8[52] = v10;
  v8[53] = *(void *)(v10 - 8);
  v8[54] = swift_task_alloc();
  return _swift_task_switch(sub_10044E128, 0, 0);
}

uint64_t sub_10044E128()
{
  uint64_t v1 = v0[43] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
  swift_beginAccess();
  sub_10024A330(v1, (uint64_t)(v0 + 20), &qword_100978040);
  if (v0[23])
  {
    uint64_t v2 = v0[44];
    sub_100278C8C((uint64_t)(v0 + 20), (uint64_t)(v0 + 25));
    sub_10000A7E8((uint64_t)(v0 + 20), &qword_100978040);
    uint64_t v3 = (void *)(*sub_10026BB6C(v0 + 25, v0[28])
                  + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager);
    swift_beginAccess();
    uint64_t v4 = *sub_10026BB6C(v3, v3[3]);
    uint64_t v5 = swift_task_alloc();
    v0[55] = v5;
    *(void *)(v5 + 16) = v4;
    *(void *)(v5 + 24) = v2;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[56] = v6;
    void *v6 = v0;
    v6[1] = sub_10044E40C;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6, 0, 0, 0x6F6974616C6F6976, 0xEF293A726F66286ELL, sub_1003CEA74, v5, (char *)&type metadata for () + 8);
  }
  else
  {
    sub_10000A7E8((uint64_t)(v0 + 20), &qword_100978040);
    if (qword_100969E20 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    v0[58] = sub_10000B47C(v7, (uint64_t)qword_100974A10);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Starting ranging", v10, 2u);
      swift_slowDealloc();
    }

    uint64_t v11 = (void *)swift_task_alloc();
    v0[59] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_10044EA34;
    uint64_t v12 = v0[47];
    uint64_t v13 = v0[48];
    uint64_t v14 = v0[46];
    return sub_100423F48(v14, v12, v13);
  }
}

uint64_t sub_10044E40C()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10044E688;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10044E528;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10044E528()
{
  sub_10024D338((uint64_t)(v0 + 25));
  if (qword_100969E20 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[58] = sub_10000B47C(v1, (uint64_t)qword_100974A10);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Starting ranging", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = (void *)swift_task_alloc();
  v0[59] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10044EA34;
  uint64_t v6 = v0[47];
  uint64_t v7 = v0[48];
  uint64_t v8 = v0[46];
  return sub_100423F48(v8, v6, v7);
}

uint64_t sub_10044E688()
{
  swift_task_dealloc();
  sub_10024D338((uint64_t)(v0 + 25));
  v0[42] = v0[57];
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  char v1 = swift_dynamicCast();
  uint64_t v2 = v0[54];
  uint64_t v3 = v0[51];
  uint64_t v17 = v0[52];
  uint64_t v18 = v0[53];
  uint64_t v5 = v0[49];
  uint64_t v4 = v0[50];
  uint64_t v6 = (void *)v0[43];
  if (v1)
  {
    int v7 = *((_DWORD *)v0 + 66);
    uint64_t v9 = v0[34];
    uint64_t v8 = v0[35];
    uint64_t v10 = swift_allocObject();
    v0[7] = v10;
    *(void *)(v10 + 16) = v6;
    *(_DWORD *)(v10 + 24) = v7;
    *(void *)(v10 + 32) = v9;
    *(void *)(v10 + 40) = v8;
    v0[6] = sub_10045AC8C;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_100296520;
    v0[5] = &unk_1008DB768;
    uint64_t v11 = _Block_copy(v0 + 2);
    id v12 = v6;
    static DispatchQoS.unspecified.getter();
    v0[39] = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v13 = swift_allocObject();
    v0[19] = v13;
    *(void *)(v13 + 16) = v6;
    v0[18] = sub_10045AC44;
    v0[14] = _NSConcreteStackBlock;
    v0[15] = 1107296256;
    v0[16] = sub_100296520;
    v0[17] = &unk_1008DB718;
    uint64_t v11 = _Block_copy(v0 + 14);
    id v14 = v6;
    static DispatchQoS.unspecified.getter();
    v0[40] = _swiftEmptyArrayStorage;
  }
  sub_10045A8BC((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002B4B9C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v2, v17);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  id v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_10044EA34()
{
  *(void *)(*(void *)v1 + 480) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10044EDC4;
  }
  else {
    uint64_t v2 = sub_10044EB48;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10044EB48()
{
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Ranging started", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[54];
  uint64_t v5 = v0[51];
  uint64_t v14 = v0[53];
  uint64_t v15 = v0[52];
  uint64_t v7 = v0[49];
  uint64_t v6 = v0[50];
  uint64_t v8 = (void *)v0[43];

  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  v0[12] = sub_10045ACCC;
  v0[13] = v9;
  v0[8] = _NSConcreteStackBlock;
  v0[9] = 1107296256;
  v0[10] = sub_100296520;
  v0[11] = &unk_1008DB7B8;
  uint64_t v10 = _Block_copy(v0 + 8);
  id v11 = v8;
  static DispatchQoS.unspecified.getter();
  v0[41] = _swiftEmptyArrayStorage;
  sub_10045A8BC((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002B4B9C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v4, v15);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  id v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_10044EDC4()
{
  v0[42] = v0[60];
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  char v1 = swift_dynamicCast();
  uint64_t v2 = v0[54];
  uint64_t v3 = v0[51];
  uint64_t v17 = v0[52];
  uint64_t v18 = v0[53];
  uint64_t v5 = v0[49];
  uint64_t v4 = v0[50];
  uint64_t v6 = (void *)v0[43];
  if (v1)
  {
    int v7 = *((_DWORD *)v0 + 66);
    uint64_t v9 = v0[34];
    uint64_t v8 = v0[35];
    uint64_t v10 = swift_allocObject();
    v0[7] = v10;
    *(void *)(v10 + 16) = v6;
    *(_DWORD *)(v10 + 24) = v7;
    *(void *)(v10 + 32) = v9;
    *(void *)(v10 + 40) = v8;
    v0[6] = sub_10045AC8C;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_100296520;
    v0[5] = &unk_1008DB768;
    id v11 = _Block_copy(v0 + 2);
    id v12 = v6;
    static DispatchQoS.unspecified.getter();
    v0[39] = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v13 = swift_allocObject();
    v0[19] = v13;
    *(void *)(v13 + 16) = v6;
    v0[18] = sub_10045AC44;
    v0[14] = _NSConcreteStackBlock;
    v0[15] = 1107296256;
    v0[16] = sub_100296520;
    v0[17] = &unk_1008DB718;
    id v11 = _Block_copy(v0 + 14);
    id v14 = v6;
    static DispatchQoS.unspecified.getter();
    v0[40] = _swiftEmptyArrayStorage;
  }
  sub_10045A8BC((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002B4B9C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v2, v17);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_10044F164(char *a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)&v13[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    uint64_t v9 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    swift_beginAccess();
    sub_10024A330(v9, (uint64_t)v14, &qword_100978040);
    if (v15)
    {
      sub_100278C8C((uint64_t)v14, (uint64_t)v13);
      sub_10000A7E8((uint64_t)v14, &qword_100978040);
      uint64_t v10 = *sub_10026BB6C(v13, v13[3]);
      id v11 = a1;
      sub_1004543D8(v11, 0xAu, 0, 0xE000000000000000, v10);

      return sub_10024D338((uint64_t)v13);
    }
    else
    {
      return sub_10000A7E8((uint64_t)v14, &qword_100978040);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10044F328(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = ((char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v11 = *(objc_class **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  v10->Class isa = v11;
  id v12 = *(void (**))(v8 + 104);
  LODWORD(v92) = enum case for DispatchPredicate.onQueue(_:);
  v12(v10);
  uint64_t v91 = v11;
  char v13 = _dispatchPreconditionTest(_:)();
  id v14 = *(void (**)(NSObject *, uint64_t))(v8 + 8);
  v14(v10, v7);
  if (v13)
  {
    unint64_t v87 = v6;
    if (qword_100969E20 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v16 = sub_10000B47C(v15, (uint64_t)qword_100974A10);
  uint64_t v17 = a1;
  uint64_t v93 = v16;
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v89 = v8 + 104;
  uint64_t v90 = v14;
  uint64_t v88 = (void (*)(NSObject *, void, uint64_t))v12;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    BOOL v86 = v10;
    uint64_t v22 = (uint8_t *)v21;
    unsigned int v84 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 138412290;
    v96[0] = (uint64_t)v17;
    os_log_type_t v23 = v17;
    os_log_type_t v85 = v2;
    uint64_t v24 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unsigned int v84 = v17;

    uint64_t v2 = v85;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Received authentication response: %@", v22, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v10 = v86;
    swift_slowDealloc();
  }
  else
  {

    uint64_t v18 = v17;
  }

  uint64_t v25 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  unint64_t v26 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
  BOOL v27 = v26 > 0xE;
  uint64_t v28 = (1 << v26) & 0x658E;
  if (!v27 && v28 != 0)
  {
    os_log_type_t v30 = v2;
    double v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      v96[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 136315138;
      uint64_t v34 = sub_10050938C();
      v94[0] = sub_100254634(v34, v35, v96);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Authentication type %s does not support handling this message", v33, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }

    goto LABEL_13;
  }
  sub_100508854();
  if ([v17 hasErrorCode])
  {
    unsigned int v36 = [v17 errorCode];
    sub_10024D280();
    uint64_t v38 = swift_allocError();
    *(_DWORD *)uint64_t v37 = v36;
    unint64_t v39 = 0xD00000000000001CLL;
    char v40 = "Remote device threw an error";
LABEL_20:
    *(void *)(v37 + 8) = v39;
    *(void *)(v37 + 16) = (unint64_t)(v40 - 32) | 0x8000000000000000;
    swift_willThrow();
    goto LABEL_22;
  }
  uint64_t v41 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_aksAuthSession];
  if (!v41)
  {
    sub_10024D280();
    uint64_t v38 = swift_allocError();
    *(_DWORD *)uint64_t v37 = 10;
    unint64_t v39 = 0xD000000000000013;
    char v40 = "Missing aks session";
    goto LABEL_20;
  }
  swift_retain();
  id v42 = [v17 aksToken];
  if (v42)
  {
    uint64_t v43 = v42;
    BOOL v86 = v17;
    uint64_t v44 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v46 = v45;

    sub_10025ADCC(v44, v46);
    unint64_t v47 = v46;
    sub_10069FBEC(v44, v46);
    uint64_t v62 = v41;
    uint64_t v92 = v44;
    uint64_t v64 = v63;
    sub_100250CC4(v44, v46);
    os_log_type_t v30 = v64;
    uint64_t v65 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v67 = v66;

    uint64_t v68 = (uint64_t *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken];
    uint64_t v69 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken];
    unint64_t v70 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken + 8];
    *uint64_t v68 = v65;
    v68[1] = v67;
    sub_100250CB0(v69, v70);
    id v71 = [self standardUserDefaults];
    NSString v72 = String._bridgeToObjectiveC()();
    unsigned __int8 v73 = [v71 BOOLForKey:v72];

    if ((v73 & 1) == 0 && (unint64_t)(*(void *)&v2[v25] - 1) < 4)
    {
      uint64_t v74 = type metadata accessor for TaskPriority();
      uint64_t v75 = (uint64_t)v87;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v87, 1, 1, v74);
      uint64_t v76 = (void *)swift_allocObject();
      v76[2] = 0;
      v76[3] = 0;
      os_log_type_t v77 = v86;
      v76[4] = v86;
      v76[5] = v62;
      v76[6] = v2;
      uint64_t v78 = v77;
      uint64_t v79 = v2;
      swift_retain();
      sub_10028CFA8(v75, (uint64_t)&unk_100974A80, (uint64_t)v76);
      sub_100250CC4(v92, v47);
      swift_release();
      swift_release();
LABEL_13:

      return;
    }
    unint64_t v80 = Logger.logObject.getter();
    os_log_type_t v81 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v80, v81))
    {
      os_log_type_t v82 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v82 = 0;
      _os_log_impl((void *)&_mh_execute_header, v80, v81, "Skipping ranging", v82, 2u);
      swift_slowDealloc();
    }

    LOBYTE(v96[0]) = 1;
    sub_10044FDD0(0x100000000);

    sub_100250CC4(v92, v47);
    swift_release();
    return;
  }
  sub_10024D280();
  uint64_t v38 = swift_allocError();
  *(_DWORD *)uint64_t v48 = 10;
  *(void *)(v48 + 8) = 0xD00000000000001FLL;
  *(void *)(v48 + 16) = 0x80000001007BDDE0;
  swift_willThrow();
  swift_release();
LABEL_22:
  v94[0] = v38;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    unsigned int v49 = v96[0];
    uint64_t v51 = v96[1];
    uint64_t v50 = v96[2];
    unint64_t v52 = v91;
    v10->Class isa = v91;
    v88(v10, v92, v7);
    unint64_t v53 = v52;
    LOBYTE(v52) = _dispatchPreconditionTest(_:)();
    v90(v10, v7);
    if (v52)
    {
      uint64_t v54 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
      swift_beginAccess();
      sub_10024A330(v54, (uint64_t)v96, &qword_100978040);
      if (v97)
      {
        sub_100278C8C((uint64_t)v96, (uint64_t)v94);
        sub_10000A7E8((uint64_t)v96, &qword_100978040);
        uint64_t v55 = *sub_10026BB6C(v94, v95);
        uint64_t v56 = v2;
        sub_1004543D8(v56, v49, v51, v50, v55);

        sub_10024D338((uint64_t)v94);
      }
      else
      {
        sub_10000A7E8((uint64_t)v96, &qword_100978040);
      }
      swift_errorRelease();
      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
LABEL_42:
    __break(1u);
    return;
  }
  unint64_t v57 = v91;
  v10->Class isa = v91;
  v88(v10, v92, v7);
  unint64_t v58 = v57;
  LOBYTE(v57) = _dispatchPreconditionTest(_:)();
  v90(v10, v7);
  if ((v57 & 1) == 0) {
    goto LABEL_42;
  }
  uint64_t v59 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess();
  sub_10024A330(v59, (uint64_t)v96, &qword_100978040);
  if (v97)
  {
    sub_100278C8C((uint64_t)v96, (uint64_t)v94);
    sub_10000A7E8((uint64_t)v96, &qword_100978040);
    uint64_t v60 = *sub_10026BB6C(v94, v95);
    uint64_t v61 = v2;
    sub_1004543D8(v61, 0xAu, 0, 0xE000000000000000, v60);

    sub_10024D338((uint64_t)v94);
  }
  else
  {
    sub_10000A7E8((uint64_t)v96, &qword_100978040);
  }
  swift_errorRelease();
}

uint64_t sub_10044FDD0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v26 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [objc_allocWithZone((Class)SDAuthenticationToken) init];
  id v11 = v10;
  if (v10)
  {
    [v10 setVersion:1];
    id v12 = v11;
    UUID.uuidString.getter();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v12 setSessionID:v13];

    unint64_t v14 = *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken + 8];
    if (v14 >> 60 == 15)
    {
      id v15 = v12;
      Class isa = 0;
    }
    else
    {
      uint64_t v17 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken];
      id v18 = v12;
      sub_100278C78(v17, v14);
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_100250CB0(v17, v14);
    }
    [v12 setAksToken:isa];
  }
  if ((a1 & 0x100000000) == 0) {
    [v11 setErrorCode:a1];
  }
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v11;
  *(void *)(v19 + 24) = v2;
  *(_DWORD *)(v19 + 32) = a1;
  *(unsigned char *)(v19 + 36) = BYTE4(a1) & 1;
  aBlock[4] = sub_100456650;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008DB6A0;
  BOOL v20 = _Block_copy(aBlock);
  id v21 = v11;
  uint64_t v22 = v2;
  static DispatchQoS.unspecified.getter();
  BOOL v27 = _swiftEmptyArrayStorage;
  sub_10045A8BC((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002B4B9C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v25);
  return swift_release();
}

uint64_t sub_100450198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a5;
  v6[11] = a6;
  v6[9] = a4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  v6[12] = v7;
  v6[13] = *(void *)(v7 - 8);
  v6[14] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for DispatchQoS();
  v6[15] = v8;
  v6[16] = *(void *)(v8 - 8);
  v6[17] = swift_task_alloc();
  return _swift_task_switch(sub_1004502B8, 0, 0);
}

uint64_t sub_1004502B8()
{
  id v1 = [(id)v0[9] awdlInfo];
  if (!v1) {
    goto LABEL_5;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v5 = v4;

  v0[18] = v3;
  v0[19] = v5;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v7 = sub_1000D2064(isa);

  if (!v7)
  {
    sub_100250CC4(v3, v5);
LABEL_5:
    sub_10024D280();
    uint64_t v11 = swift_allocError();
    *(_DWORD *)uint64_t v12 = 1;
    *(void *)(v12 + 8) = 0xD00000000000001FLL;
    *(void *)(v12 + 16) = 0x80000001007BDE20;
    swift_willThrow();
    goto LABEL_6;
  }
  uint64_t v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  v0[20] = v8;

  id v9 = sub_10069FE04();
  v0[21] = v9;
  v0[22] = v10;
  uint64_t v23 = (uint64_t)v9;
  unint64_t v24 = v10;
  uint64_t v25 = v0[11];
  sub_10044FDD0(0x100000000);
  uint64_t v26 = *(void *)(v25 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_rangingSession);
  v0[23] = v26;
  if (v26)
  {
    swift_retain();
    BOOL v27 = (void *)swift_task_alloc();
    v0[24] = v27;
    void *v27 = v0;
    v27[1] = sub_10045072C;
    return sub_100423F48(v8, v23, v24);
  }
  sub_10024D280();
  uint64_t v11 = swift_allocError();
  *(_DWORD *)uint64_t v28 = 10;
  *(void *)(v28 + 8) = 0xD000000000000012;
  *(void *)(v28 + 16) = 0x80000001007BDE40;
  swift_willThrow();
  sub_100250CC4(v3, v5);
  swift_bridgeObjectRelease();
  sub_100250CC4(v23, v24);
LABEL_6:
  uint64_t v13 = v0[17];
  uint64_t v14 = v0[14];
  uint64_t v29 = v0[16];
  uint64_t v30 = v0[15];
  uint64_t v16 = v0[12];
  uint64_t v15 = v0[13];
  uint64_t v17 = (void *)v0[11];
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v11;
  *(void *)(v18 + 24) = v17;
  v0[6] = sub_10045AF84;
  v0[7] = v18;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100296520;
  v0[5] = &unk_1008DB650;
  uint64_t v19 = _Block_copy(v0 + 2);
  swift_errorRetain();
  id v20 = v17;
  static DispatchQoS.unspecified.getter();
  v0[8] = _swiftEmptyArrayStorage;
  sub_10045A8BC((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002B4B9C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v13, v30);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  id v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_10045072C()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_1004508FC;
  }
  else {
    uint64_t v2 = sub_100450860;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100450860()
{
  unint64_t v1 = v0[22];
  uint64_t v2 = v0[21];
  uint64_t v4 = v0[18];
  unint64_t v3 = v0[19];
  swift_release();
  sub_100250CC4(v2, v1);
  sub_100250CC4(v4, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1004508FC()
{
  unint64_t v1 = v0[22];
  uint64_t v2 = v0[21];
  uint64_t v4 = v0[18];
  unint64_t v3 = v0[19];
  swift_release();
  sub_100250CC4(v2, v1);
  sub_100250CC4(v4, v3);
  uint64_t v5 = v0[25];
  uint64_t v6 = v0[17];
  uint64_t v7 = v0[14];
  uint64_t v16 = v0[16];
  uint64_t v17 = v0[15];
  uint64_t v8 = v0[12];
  uint64_t v9 = v0[13];
  unint64_t v10 = (void *)v0[11];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v5;
  *(void *)(v11 + 24) = v10;
  v0[6] = sub_10045AF84;
  v0[7] = v11;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100296520;
  v0[5] = &unk_1008DB650;
  uint64_t v12 = _Block_copy(v0 + 2);
  swift_errorRetain();
  id v13 = v10;
  static DispatchQoS.unspecified.getter();
  v0[8] = _swiftEmptyArrayStorage;
  sub_10045A8BC((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002B4B9C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v6, v17);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_100450B48(uint64_t a1, char *a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (void *)((char *)&v23[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23[0] = a1;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v17 = *(void **)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
    *uint64_t v7 = v17;
    (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
    id v18 = v17;
    LOBYTE(v17) = _dispatchPreconditionTest(_:)();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v7, v4);
    if (v17)
    {
      uint64_t v19 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
      swift_beginAccess();
      sub_10024A330(v19, (uint64_t)&v25, &qword_100978040);
      if (!v28) {
        return sub_10000A7E8((uint64_t)&v25, &qword_100978040);
      }
      sub_100278C8C((uint64_t)&v25, (uint64_t)v23);
      sub_10000A7E8((uint64_t)&v25, &qword_100978040);
      uint64_t v20 = *sub_10026BB6C(v23, v24);
      id v21 = a2;
      sub_1004543D8(v21, 0xAu, 0, 0xE000000000000000, v20);

      return sub_10024D338((uint64_t)v23);
    }
LABEL_13:
    __break(1u);
    return result;
  }
  unsigned int v8 = v25;
  uint64_t v10 = v26;
  uint64_t v9 = v27;
  uint64_t v11 = *(void **)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v7 = v11;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v12 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v14 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess();
  sub_10024A330(v14, (uint64_t)&v25, &qword_100978040);
  if (v28)
  {
    sub_100278C8C((uint64_t)&v25, (uint64_t)v23);
    sub_10000A7E8((uint64_t)&v25, &qword_100978040);
    uint64_t v15 = *sub_10026BB6C(v23, v24);
    uint64_t v16 = a2;
    sub_1004543D8(v16, v8, v10, v9, v15);

    sub_10024D338((uint64_t)v23);
  }
  else
  {
    sub_10000A7E8((uint64_t)&v25, &qword_100978040);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100450E78(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (void *)((char *)&v25[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned int v8 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    if (qword_100969E20 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000B47C(v10, (uint64_t)qword_100974A10);
  uint64_t v11 = a1;
  id v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 138412290;
    v27[0] = v11;
    uint64_t v16 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v15 = v11;

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Received confirmation: %@", v14, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    id v12 = v11;
  }

  sub_100508854();
  if ([v11 success])
  {
    uint64_t v17 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    swift_beginAccess();
    sub_10024A330(v17, (uint64_t)v27, &qword_100978040);
    if (v28)
    {
      sub_100278C8C((uint64_t)v27, (uint64_t)v25);
      sub_10000A7E8((uint64_t)v27, &qword_100978040);
      id v18 = (char *)*sub_10026BB6C(v25, v26);
      uint64_t v19 = v2;
      sub_1004E5C4C(v19, v18);
LABEL_14:

      return sub_10024D338((uint64_t)v25);
    }
  }
  else
  {
    if ([v11 hasErrorCode]) {
      unsigned int v20 = [v11 errorCode];
    }
    else {
      unsigned int v20 = 10;
    }
    uint64_t v21 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    swift_beginAccess();
    sub_10024A330(v21, (uint64_t)v27, &qword_100978040);
    if (v28)
    {
      sub_100278C8C((uint64_t)v27, (uint64_t)v25);
      sub_10000A7E8((uint64_t)v27, &qword_100978040);
      uint64_t v22 = *sub_10026BB6C(v25, v26);
      uint64_t v19 = v2;
      sub_1004543D8(v19, v20, 0xD00000000000001CLL, 0x80000001007BDEF0, v22);
      goto LABEL_14;
    }
  }
  return sub_10000A7E8((uint64_t)v27, &qword_100978040);
}

uint64_t sub_100451284()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (void *)((char *)&v20[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    if (qword_100969E20 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000B47C(v7, (uint64_t)qword_100974A10);
  unsigned int v8 = v0;
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    v21[0] = v12;
    type metadata accessor for UUID();
    sub_10045A8BC((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    v20[0] = sub_100254634(v13, v14, v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Response timer fired for %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v15 = (uint64_t)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess();
  sub_10024A330(v15, (uint64_t)v21, &qword_100978040);
  if (!v21[3]) {
    return sub_10000A7E8((uint64_t)v21, &qword_100978040);
  }
  sub_100278C8C((uint64_t)v21, (uint64_t)v20);
  sub_10000A7E8((uint64_t)v21, &qword_100978040);
  uint64_t v16 = *sub_10026BB6C(v20, v20[3]);
  uint64_t v17 = v8;
  sub_1004543D8(v17, 0xCu, 0, 0xE000000000000000, v16);

  return sub_10024D338((uint64_t)v20);
}

uint64_t sub_10045160C(void *a1, char *a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  os_log_type_t v10 = (uint64_t *)((char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 && (id v11 = [a1 data]) != 0)
  {
    uint64_t v12 = v11;
    uint64_t v46 = v8;
    uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v48 = v13;

    if (qword_100969E20 == -1) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v22 = *(void **)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
    *os_log_type_t v10 = v22;
    (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
    id v23 = v22;
    char v24 = _dispatchPreconditionTest(_:)();
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
    if (v24)
    {
      uint64_t v25 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
      swift_beginAccess();
      sub_10024A330(v25, (uint64_t)v52, &qword_100978040);
      if (!v53) {
        return sub_10000A7E8((uint64_t)v52, &qword_100978040);
      }
      sub_100278C8C((uint64_t)v52, (uint64_t)&v50);
      sub_10000A7E8((uint64_t)v52, &qword_100978040);
      uint64_t v26 = *sub_10026BB6C(&v50, v51);
      uint64_t v27 = a2;
      sub_1004543D8(v27, 0xAu, 0xD000000000000025, 0x80000001007BDE60, v26);

      return sub_10024D338((uint64_t)&v50);
    }
    __break(1u);
  }
  swift_once();
LABEL_4:
  uint64_t v14 = type metadata accessor for Logger();
  sub_10000B47C(v14, (uint64_t)qword_100974A10);
  id v15 = a1;
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v47 = v7;
  if (v18)
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    unint64_t v45 = a2;
    uint64_t v43 = (void *)v20;
    uint64_t v44 = v3;
    *(_DWORD *)uint64_t v19 = 138412290;
    v52[0] = v15;
    id v21 = v15;
    uint64_t v3 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v43 = a1;

    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Sending token: %@", v19, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    a2 = v45;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v29 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
  swift_beginAccess();
  sub_10024A330(v29, (uint64_t)&v50, &qword_10097BB50);
  unint64_t v30 = v48;
  if (!v51)
  {
    sub_10000A7E8((uint64_t)&v50, &qword_10097BB50);
    uint64_t v33 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    swift_beginAccess();
    sub_10024A330(v33, (uint64_t)v52, &qword_100978040);
    if (v53)
    {
      sub_100278C8C((uint64_t)v52, (uint64_t)&v50);
      sub_10000A7E8((uint64_t)v52, &qword_100978040);
      sub_10026BB6C(&v50, v51);
      sub_1006FA798(v3, v30, 7, *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type]);
      os_log_type_t v32 = &v50;
      goto LABEL_16;
    }
    uint64_t v34 = (long long *)v52;
LABEL_19:
    sub_10000A7E8((uint64_t)v34, &qword_100978040);
    goto LABEL_20;
  }
  sub_1002AF688(&v50, (uint64_t)v52);
  uint64_t v31 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess();
  sub_10024A330(v31, (uint64_t)&v50, &qword_100978040);
  if (!v51)
  {
    sub_10024D338((uint64_t)v52);
    uint64_t v34 = &v50;
    goto LABEL_19;
  }
  sub_100278C8C((uint64_t)&v50, (uint64_t)v49);
  sub_10000A7E8((uint64_t)&v50, &qword_100978040);
  sub_10026BB6C(v49, v49[3]);
  sub_1006DF18C(v3, v30, (uint64_t)v52, 7, *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type]);
  sub_10024D338((uint64_t)v52);
  os_log_type_t v32 = (long long *)v49;
LABEL_16:
  sub_10024D338((uint64_t)v32);
LABEL_20:
  a2[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_isConfirmationSent] = 1;
  if ((a3 & 0x100000000) != 0)
  {
LABEL_25:
    sub_100507F28(0, 1);
    return sub_100250CC4(v3, v30);
  }
  unint64_t v35 = *(void **)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *os_log_type_t v10 = v35;
  uint64_t v36 = v46;
  uint64_t v37 = v47;
  (*(void (**)(void *, void, uint64_t))(v46 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v47);
  id v38 = v35;
  LOBYTE(v35) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v36 + 8))(v10, v37);
  if (v35)
  {
    uint64_t v39 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    swift_beginAccess();
    sub_10024A330(v39, (uint64_t)v52, &qword_100978040);
    if (v53)
    {
      sub_100278C8C((uint64_t)v52, (uint64_t)&v50);
      sub_10000A7E8((uint64_t)v52, &qword_100978040);
      uint64_t v40 = *sub_10026BB6C(&v50, v51);
      uint64_t v41 = a2;
      sub_1004543D8(v41, a3, 0, 0xE000000000000000, v40);

      sub_10024D338((uint64_t)&v50);
    }
    else
    {
      sub_10000A7E8((uint64_t)v52, &qword_100978040);
    }
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

uint64_t sub_100451CD4()
{
  sub_10000A7E8(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_lastUnlockDate, (uint64_t *)&unk_100975040);
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken);
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken + 8);

  return sub_100250CB0(v1, v2);
}

uint64_t sub_100451D98()
{
  return type metadata accessor for SDAuthenticationKeySession();
}

uint64_t type metadata accessor for SDAuthenticationKeySession()
{
  uint64_t result = qword_100974A68;
  if (!qword_100974A68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100451DEC()
{
  sub_100271710();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100451E98(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_lastUnlockDate;
  swift_beginAccess();
  sub_10026B410(a1, v3, (uint64_t *)&unk_100975040);
  return swift_endAccess();
}

void sub_100451F00()
{
}

void sub_100451F24(void *a1)
{
}

void sub_100451F48(void *a1)
{
}

uint64_t sub_100451F6C(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  return sub_100451FEC(a1, a2, (uint64_t (*)(uint64_t))sub_1002AD488, (uint64_t (*)(void, void))sub_1002AF688);
}

uint64_t sub_100451FAC(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  return sub_100451FEC(a1, a2, (uint64_t (*)(uint64_t))sub_1002AD49C, (uint64_t (*)(void, void))sub_1002AF688);
}

uint64_t sub_100451FEC(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void, void))
{
  id v6 = v4;
  uint64_t v7 = *v4;
  uint64_t v8 = *(void *)(*v4 + 16);
  if (!v8) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v11 = 0;
  for (uint64_t i = 72; ; i += 40)
  {
    char v13 = a1(v7 + i - 40);
    if (v5)
    {
      swift_bridgeObjectRelease();
      return v11;
    }
    if (v13) {
      break;
    }
    if (v8 == ++v11)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v11, 1))
  {
    unint64_t v15 = *(void *)(v7 + 16);
    if (v11 + 1 == v15) {
      return v11;
    }
    unint64_t v16 = v11 + 1;
    unint64_t v30 = v4;
    while (v16 < v15)
    {
      sub_100278C8C(v7 + i, (uint64_t)v29);
      char v17 = a1((uint64_t)v29);
      uint64_t result = sub_10024D338((uint64_t)v29);
      if ((v17 & 1) == 0)
      {
        if (v16 != v11)
        {
          if ((v11 & 0x8000000000000000) != 0) {
            goto LABEL_31;
          }
          BOOL v18 = v6;
          uint64_t v19 = a4;
          uint64_t v20 = *v18;
          unint64_t v21 = *(void *)(*v18 + 16);
          if (v11 >= v21) {
            goto LABEL_32;
          }
          uint64_t result = sub_100278C8C(v20 + 40 * v11 + 32, (uint64_t)v29);
          if (v16 >= v21) {
            goto LABEL_33;
          }
          sub_100278C8C(v20 + i, (uint64_t)v28);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *unint64_t v30 = v20;
          if ((result & 1) == 0)
          {
            uint64_t result = a3(v20);
            uint64_t v20 = result;
            *unint64_t v30 = result;
          }
          a4 = v19;
          if (v11 >= *(void *)(v20 + 16)) {
            goto LABEL_34;
          }
          uint64_t v22 = v20 + 40 * v11 + 32;
          sub_10024D338(v22);
          uint64_t result = v19(v28, v22);
          id v6 = v30;
          uint64_t v23 = *v30;
          if (v16 >= *(void *)(*v30 + 16)) {
            goto LABEL_35;
          }
          uint64_t v24 = v23 + i;
          sub_10024D338(v23 + i);
          uint64_t result = a4(v29, v24);
        }
        if (__OFADD__(v11++, 1)) {
          goto LABEL_30;
        }
      }
      unint64_t v26 = v16 + 1;
      if (__OFADD__(v16, 1)) {
        goto LABEL_29;
      }
      uint64_t v7 = *v6;
      unint64_t v15 = *(void *)(*v6 + 16);
      ++v16;
      i += 40;
      if (v26 == v15) {
        return v11;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100452254(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  return sub_100451FEC(a1, a2, (uint64_t (*)(uint64_t))sub_1002AD4B0, (uint64_t (*)(void, void))sub_1002AF688);
}

uint64_t sub_100452294(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  return sub_100451FEC(a1, a2, (uint64_t (*)(uint64_t))sub_1002AD4C4, (uint64_t (*)(void, void))sub_1002AF688);
}

uint64_t sub_1004522D4(void *a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v240 = (id)a4;
  uint64_t v9 = sub_10000A844(&qword_100974EA0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  v231 = (char *)v227 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v232 = (char *)v227 - v12;
  uint64_t v13 = sub_10000A844((uint64_t *)&unk_100974F20);
  __chkstk_darwin(v13 - 8);
  uint64_t v229 = (uint64_t)v227 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v235 = (os_log_t)type metadata accessor for Date();
  Class isa = v235[-1].isa;
  __chkstk_darwin(v235);
  v233 = (char *)v227 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v243 = type metadata accessor for UUID();
  uint64_t v242 = *(void *)(v243 - 8);
  uint64_t v16 = __chkstk_darwin(v243);
  v230 = (char *)v227 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  v236 = (char *)v227 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)v227 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)v227 - v23;
  uint64_t v25 = (void *)type metadata accessor for DispatchPredicate();
  uint64_t v26 = *(v25 - 1);
  __chkstk_darwin(v25);
  uint64_t v28 = (void *)((char *)v227 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v252 = type metadata accessor for SDAuthenticationPairingLockSession();
  v253 = &off_1008DE398;
  v251 = a1;
  uint64_t v29 = *(void **)(a5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v28 = v29;
  (*(void (**)(void *, void, void *))(v26 + 104))(v28, enum case for DispatchPredicate.onQueue(_:), v25);
  id v30 = a1;
  id v31 = v29;
  LOBYTE(v29) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, void *))(v26 + 8))(v28, v25);
  if (v29)
  {
    uint64_t v25 = sub_10070E650(a2, a3, (uint64_t)v240);
    LODWORD(v28) = a2;
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v32 = type metadata accessor for Logger();
  uint64_t v33 = sub_10000B47C(v32, (uint64_t)qword_10097F520);
  sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
  uint64_t v34 = v25;
  uint64_t v237 = v33;
  unint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.error.getter();
  BOOL v37 = os_log_type_enabled(v35, v36);
  uint64_t v241 = a5;
  LODWORD(v238) = v28;
  if (v37)
  {
    uint64_t v38 = swift_slowAlloc();
    v228 = (void *)swift_slowAlloc();
    id v239 = (id)swift_slowAlloc();
    uint64_t v245 = (uint64_t)v239;
    *(_DWORD *)uint64_t v38 = 136315394;
    v227[1] = v38 + 4;
    uint64_t v39 = v249;
    uint64_t v40 = v250;
    sub_10026BB6C(&v248, v249);
    (*(void (**)(uint64_t, uint64_t))(v40 + 32))(v39, v40);
    sub_10045A8BC((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v41 = v243;
    uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v44 = v43;
    (*(void (**)(char *, uint64_t))(v242 + 8))(v24, v41);
    v244[0] = sub_100254634(v42, v44, &v245);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)&v248);
    *(_WORD *)(v38 + 12) = 2112;
    v244[0] = v34;
    unint64_t v45 = v34;
    a5 = v241;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v228 = v34;

    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Session %s failed with error: %@", (uint8_t *)v38, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10024D338((uint64_t)&v248);
  }
  uint64_t v46 = v252;
  uint64_t v47 = v253;
  sub_10026BB6C(&v251, v252);
  id v239 = (id)((uint64_t (*)(uint64_t, _UNKNOWN **))v47[5])(v46, v47);
  unint64_t v48 = (uint64_t *)(a5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions);
  uint64_t v49 = swift_beginAccess();
  uint64_t v50 = *v48;
  uint64_t v51 = *(void *)(*v48 + 16);
  id v240 = v34;
  if (v51)
  {
    unint64_t v52 = (void *)(v50 + 32);
    uint64_t v53 = (void (**)(char *, uint64_t))(v242 + 8);
    swift_bridgeObjectRetain();
    uint64_t v54 = v51 - 1;
    do
    {
      uint64_t v55 = v54;
      uint64_t v57 = v52[3];
      uint64_t v56 = v52[4];
      sub_10026BB6C(v52, v57);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v56 + 8) + 8) + 32))(v57);
      uint64_t v58 = v252;
      uint64_t v59 = v253;
      sub_10026BB6C(&v251, v252);
      ((void (*)(uint64_t, _UNKNOWN **))v59[4])(v58, v59);
      char v60 = static UUID.== infix(_:_:)();
      uint64_t v61 = *v53;
      uint64_t v62 = v243;
      (*v53)(v22, v243);
      v61(v24, v62);
      if (v60) {
        break;
      }
      uint64_t v54 = v55 - 1;
      v52 += 5;
    }
    while (v55);
    uint64_t v49 = swift_bridgeObjectRelease();
  }
  else
  {
    char v60 = 0;
  }
  __chkstk_darwin(v49);
  v227[-2] = &v251;
  swift_beginAccess();
  uint64_t result = sub_100451FEC((uint64_t (*)(uint64_t))sub_10045AF68, (uint64_t)&v227[-4], (uint64_t (*)(uint64_t))sub_1002AD4C4, (uint64_t (*)(void, void))sub_1002AF688);
  uint64_t v64 = *(void *)(*v48 + 16);
  uint64_t v65 = v243;
  if (v64 < result)
  {
    __break(1u);
    goto LABEL_95;
  }
  sub_1005A5820(result, v64);
  uint64_t v66 = swift_endAccess();
  __chkstk_darwin(v66);
  v227[-2] = &v251;
  uint64_t v67 = v241;
  uint64_t v68 = v241 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions;
  swift_beginAccess();
  uint64_t result = sub_100451FEC((uint64_t (*)(uint64_t))sub_10045AF68, (uint64_t)&v227[-4], (uint64_t (*)(uint64_t))sub_1002AD4B0, (uint64_t (*)(void, void))sub_1002AF688);
  uint64_t v69 = *(void *)(*(void *)v68 + 16);
  uint64_t v70 = v242;
  if (v69 < result)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  sub_1005A5840(result, v69);
  uint64_t v71 = swift_endAccess();
  __chkstk_darwin(v71);
  v227[-2] = &v251;
  uint64_t v72 = v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions;
  swift_beginAccess();
  uint64_t result = sub_100451FEC((uint64_t (*)(uint64_t))sub_10045AF68, (uint64_t)&v227[-4], (uint64_t (*)(uint64_t))sub_1002AD49C, (uint64_t (*)(void, void))sub_1002AF688);
  uint64_t v73 = *(void *)(*(void *)v72 + 16);
  if (v73 < result)
  {
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  sub_1005A5860(result, v73);
  uint64_t v74 = swift_endAccess();
  __chkstk_darwin(v74);
  v227[-2] = &v251;
  uint64_t v75 = v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions;
  swift_beginAccess();
  uint64_t result = sub_100451FEC((uint64_t (*)(uint64_t))sub_10045AF68, (uint64_t)&v227[-4], (uint64_t (*)(uint64_t))sub_1002AD488, (uint64_t (*)(void, void))sub_1002AF688);
  uint64_t v76 = *(void *)(*(void *)v75 + 16);
  if (v76 >= result)
  {
    sub_1005A5880(result, v76);
    swift_endAccess();
    uint64_t v77 = v252;
    uint64_t v78 = v253;
    sub_10026BB6C(&v251, v252);
    ((void (*)(uint64_t, _UNKNOWN **))v78[11])(v77, v78);
    int v79 = (int)v238;
    if (v238 != 33) {
      goto LABEL_24;
    }
    uint64_t v80 = v252;
    os_log_type_t v81 = v253;
    sub_10026BB6C(&v251, v252);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v81[8])(&v248, v80, v81);
    uint64_t v82 = v249;
    if (v249)
    {
      uint64_t v83 = v250;
      sub_10026BB6C(&v248, v249);
      uint64_t v84 = (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 8))(v82, v83);
      BOOL v86 = v85;
      sub_10024D338((uint64_t)&v248);
      if (v86)
      {
        uint64_t v87 = sub_100508E74((uint64_t)v239);
        UUID.init()();
        sub_1006DDD14(v87, v84, v86, (uint64_t)v24);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v65);
        goto LABEL_24;
      }
    }
    else
    {
      sub_10000A7E8((uint64_t)&v248, &qword_10097BB50);
    }
    uint64_t v88 = Logger.logObject.getter();
    os_log_type_t v89 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v88, v89))
    {
      uint64_t v90 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v90 = 0;
      _os_log_impl((void *)&_mh_execute_header, v88, v89, "Got notEnabled error but coudln't determine who to disable pairing with", v90, 2u);
      swift_slowDealloc();
    }

LABEL_24:
    if (v239 != (id)8)
    {
      if (v239 != (id)5)
      {
        if (v239 != (id)4) {
          goto LABEL_74;
        }
        if (v79 == 22)
        {
          sub_1006E7B5C();
          uint64_t v91 = v252;
          uint64_t v92 = v253;
          sub_10026BB6C(&v251, v252);
          ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v92[8])(&v248, v91, v92);
          uint64_t v93 = v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_previousUnlockClassCLockDevice;
          swift_beginAccess();
          sub_10026B410((uint64_t)&v248, v93, &qword_10097BB50);
          swift_endAccess();
        }
        uint64_t v94 = v252;
        uint64_t v95 = v253;
        sub_10026BB6C(&v251, v252);
        ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v95[8])(&v248, v94, v95);
        uint64_t v96 = v249;
        if (v249)
        {
          uint64_t v97 = v250;
          sub_10026BB6C(&v248, v249);
          Swift::Int v98 = (*(uint64_t (**)(uint64_t, uint64_t))(v97 + 8))(v96, v97);
          Swift::Int v100 = v99;
          sub_10024D338((uint64_t)&v248);
          if (v100)
          {
            if (v79 == 9 || v79 == 24)
            {
              if (*(void *)(*(void *)(v67
                                         + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator)
                             + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner))
              {
                v228 = 0;
                swift_beginAccess();
                swift_retain();
                swift_retain();
                swift_bridgeObjectRetain();
                sub_100596448(&v245, v98, v100);
                swift_endAccess();
LABEL_71:
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
              }
            }
            else if (*(void *)(*(void *)(v67 {
                                            + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator)
            }
                                + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner))
            {
              v228 = 0;
              swift_beginAccess();
              swift_retain();
              swift_retain();
              sub_1005A1914(v98, v100);
              swift_endAccess();
              goto LABEL_71;
            }
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          sub_10000A7E8((uint64_t)&v248, &qword_10097BB50);
        }
        uint64_t v176 = (uint64_t)v233;
        static Date.distantPast.getter();
        sub_1006D5DAC(v176);
        (*((void (**)(uint64_t, os_log_t))isa + 1))(v176, v235);
        goto LABEL_74;
      }
      if (v79 != 10) {
        goto LABEL_74;
      }
      uint64_t v121 = v252;
      uint64_t v122 = v253;
      sub_10026BB6C(&v251, v252);
      ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v122[8])(&v248, v121, v122);
      uint64_t v123 = v249;
      if (v249)
      {
        uint64_t v124 = v250;
        sub_10026BB6C(&v248, v249);
        uint64_t v125 = (*(uint64_t (**)(uint64_t, uint64_t))(v124 + 8))(v123, v124);
        uint64_t v127 = v126;
        sub_10024D338((uint64_t)&v248);
        if (v127)
        {
          swift_beginAccess();
          uint64_t v128 = v229;
          sub_1002A965C(v125, v127, v229);
          swift_endAccess();
          sub_10000A7E8(v128, (uint64_t *)&unk_100974F20);
          swift_bridgeObjectRelease();
          goto LABEL_74;
        }
      }
      else
      {
        sub_10000A7E8((uint64_t)&v248, &qword_10097BB50);
      }
      v228 = 0;
      sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
      v159 = Logger.logObject.getter();
      os_log_type_t v160 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v159, v160))
      {
        uint64_t v161 = (uint8_t *)swift_slowAlloc();
        id v239 = (id)swift_slowAlloc();
        uint64_t v245 = (uint64_t)v239;
        *(_DWORD *)uint64_t v161 = 136315138;
        v238 = v161 + 4;
        uint64_t v162 = v249;
        uint64_t v163 = v250;
        sub_10026BB6C(&v248, v249);
        Swift::String v164 = *(void (**)(uint64_t, uint64_t))(v163 + 32);
        uint64_t v165 = v163;
        uint64_t v70 = v242;
        v164(v162, v165);
        sub_10045A8BC((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v166 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v168 = v167;
        (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v65);
        v244[0] = sub_100254634(v166, v168, &v245);
        uint64_t v67 = v241;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10024D338((uint64_t)&v248);
        _os_log_impl((void *)&_mh_execute_header, v159, v160, "Could not find peer device for %s", v161, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10024D338((uint64_t)&v248);
      }

LABEL_74:
      sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
      sub_10000A844((uint64_t *)&unk_10096B440);
      sub_10000A844((uint64_t *)&unk_100972440);
      if (swift_dynamicCast())
      {
        sub_10024D338((uint64_t)&v245);
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (!Strong) {
          goto LABEL_81;
        }
        v178 = (void *)Strong;
        uint64_t v179 = v252;
        uint64_t v180 = v253;
        sub_10026BB6C(&v251, v252);
        ((void (*)(uint64_t, _UNKNOWN **))v180[4])(v179, v180);
        v181.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v65);
        [v178 manager:v67 didFailAuthenticationFor:v181.super.isa error:v240];
      }
      else
      {
        sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
        sub_10000A844(&qword_10096B430);
        if ((swift_dynamicCast() & 1) == 0
          || (sub_10024D338((uint64_t)&v245), (uint64_t v182 = swift_unknownObjectWeakLoadStrong()) == 0))
        {
LABEL_81:
          sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
          if (v60)
          {
            uint64_t v186 = v249;
            uint64_t v187 = v250;
            sub_10026BB6C(&v248, v249);
            unint64_t v188 = (*(uint64_t (**)(uint64_t, uint64_t))(v187 + 40))(v186, v187);
            uint64_t v189 = v240;
            if (v188 > 0xE || ((1 << v188) & 0x658E) == 0)
            {
              sub_10024D338((uint64_t)&v248);
              sub_100278C8C((uint64_t)&v251, (uint64_t)&v245);

              sub_10024D338((uint64_t)&v245);
              return sub_10024D338((uint64_t)&v251);
            }
            sub_10024D338((uint64_t)&v248);
            uint64_t v190 = *(void *)(v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
            uint64_t v191 = v252;
            v192 = v253;
            sub_10026BB6C(&v251, v252);
            unint64_t v193 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v192[5])(v191, v192);
            LOBYTE(v191) = sub_100508B74(v193);
            uint64_t v194 = v252;
            uint64_t v195 = v253;
            sub_10026BB6C(&v251, v252);
            ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v195[8])(&v245, v194, v195);
            uint64_t v196 = sub_1005EA4B4(v191, (uint64_t)&v245);
            uint64_t v198 = v197;
            uint64_t ObjectType = swift_getObjectType();
            uint64_t v200 = (*(uint64_t (**)(uint64_t, uint64_t))(v198 + 56))(ObjectType, v198);
            uint64_t v201 = __chkstk_darwin(v200);
            v227[-4] = v196;
            v227[-3] = v198;
            v227[-2] = &v245;
            v227[-1] = v190;
            __chkstk_darwin(v201);
            v227[-2] = sub_10045AFA8;
            v227[-1] = v202;
            v204 = v203 + 4;
            os_unfair_lock_lock(v203 + 4);
            sub_10030F73C(v205);
            os_unfair_lock_unlock(v204);

            swift_unknownObjectRelease();
            v206 = (id *)&v245;
          }
          else
          {
            sub_10024D338((uint64_t)&v248);
            sub_100278C8C((uint64_t)&v251, (uint64_t)&v245);
            uint64_t v207 = v246;
            uint64_t v208 = v247;
            sub_10026BB6C(&v245, v246);
            unint64_t v209 = (*(uint64_t (**)(uint64_t, uint64_t))(v208 + 40))(v207, v208);
            v210 = v240;
            if (v209 <= 0xE && ((1 << v209) & 0x658E) != 0)
            {
              sub_10024D338((uint64_t)&v245);

              return sub_10024D338((uint64_t)&v251);
            }
            sub_10024D338((uint64_t)&v245);
            uint64_t v211 = *(void *)(v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
            uint64_t v212 = v252;
            v213 = v253;
            sub_10026BB6C(&v251, v252);
            unint64_t v214 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v213[5])(v212, v213);
            LOBYTE(v212) = sub_100508B74(v214);
            uint64_t v215 = v252;
            v216 = v253;
            sub_10026BB6C(&v251, v252);
            ((void (*)(void *__return_ptr, uint64_t, _UNKNOWN **))v216[8])(v244, v215, v216);
            uint64_t v217 = sub_1005EA4B4(v212, (uint64_t)v244);
            uint64_t v219 = v218;
            uint64_t v220 = swift_getObjectType();
            uint64_t v221 = (*(uint64_t (**)(uint64_t, uint64_t))(v219 + 56))(v220, v219);
            uint64_t v222 = __chkstk_darwin(v221);
            v227[-4] = v217;
            v227[-3] = v219;
            v227[-2] = v244;
            v227[-1] = v211;
            __chkstk_darwin(v222);
            v227[-2] = sub_10045AFA8;
            v227[-1] = v223;
            v225 = v224 + 4;
            os_unfair_lock_lock(v224 + 4);
            sub_10030F73C(v226);
            os_unfair_lock_unlock(v225);

            swift_unknownObjectRelease();
            v206 = (id *)v244;
          }
          sub_10000A7E8((uint64_t)v206, &qword_10097BB50);
          return sub_10024D338((uint64_t)&v251);
        }
        uint64_t v183 = (void *)v182;
        uint64_t v184 = v252;
        uint64_t v185 = v253;
        sub_10026BB6C(&v251, v252);
        ((void (*)(uint64_t, _UNKNOWN **))v185[4])(v184, v185);
        v181.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v65);
        [v183 manager:v67 didFailToEnableDeviceFor:v181.super.isa error:v240];
      }

      swift_unknownObjectRelease();
      goto LABEL_81;
    }
    uint64_t v101 = v252;
    uint64_t v102 = v253;
    sub_10026BB6C(&v251, v252);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v102[8])(&v248, v101, v102);
    uint64_t v103 = v249;
    v228 = 0;
    if (v249)
    {
      uint64_t v104 = v250;
      sub_10026BB6C(&v248, v249);
      uint64_t v105 = (*(uint64_t (**)(uint64_t, uint64_t))(v104 + 8))(v103, v104);
      uint64_t v107 = v106;
      sub_10024D338((uint64_t)&v248);
      if (v107)
      {
        unint64_t v108 = Logger.logObject.getter();
        os_log_type_t v109 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v108, v109))
        {
          uint64_t v110 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v110 = 0;
          _os_log_impl((void *)&_mh_execute_header, v108, v109, "Registration failed, clearing registration date", v110, 2u);
          swift_slowDealloc();
        }

        swift_beginAccess();
        swift_bridgeObjectRetain();
        os_log_t v111 = sub_1005803EC(&v248, v105, v107);
        uint64_t v113 = v112;
        uint64_t v114 = type metadata accessor for RegistrationState(0);
        uint64_t v115 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 48);
        unint64_t v116 = *v115;
        if (!(*v115)(v113, 1, v114)) {
          *(unsigned char *)(v113 + *(int *)(v114 + 20)) = 0;
        }
        ((void (*)(uint64_t *, void))v111)(&v248, 0);
        swift_endAccess();
        uint64_t v70 = v242;
        swift_bridgeObjectRelease();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        uint64_t v117 = sub_1005803EC(&v248, v105, v107);
        uint64_t v119 = v118;
        unsigned int v120 = v116(v118, 1, v114);
        uint64_t v65 = v243;
        if (!v120)
        {
          sub_10000A7E8(v119, (uint64_t *)&unk_100975040);
          (*((void (**)(uint64_t, uint64_t, uint64_t, os_log_t))isa + 7))(v119, 1, 1, v235);
        }
        ((void (*)(uint64_t *, void))v117)(&v248, 0);
        swift_endAccess();
        swift_bridgeObjectRelease_n();
        uint64_t v67 = v241;
        goto LABEL_54;
      }
    }
    else
    {
      sub_10000A7E8((uint64_t)&v248, &qword_10097BB50);
    }
    sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
    uint64_t v129 = Logger.logObject.getter();
    os_log_type_t v130 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v129, v130))
    {
      uint64_t v131 = swift_slowAlloc();
      id v239 = (id)swift_slowAlloc();
      uint64_t v245 = (uint64_t)v239;
      *(_DWORD *)uint64_t v131 = 136315138;
      os_log_t v235 = (os_log_t)(v131 + 4);
      uint64_t v132 = v249;
      uint64_t v133 = v250;
      sub_10026BB6C(&v248, v249);
      uint64_t v134 = *(void (**)(uint64_t, uint64_t))(v133 + 32);
      uint64_t v135 = v133;
      uint64_t v70 = v242;
      v134(v132, v135);
      sub_10045A8BC((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v136 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v138 = v137;
      (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v65);
      v244[0] = sub_100254634(v136, v138, &v245);
      uint64_t v67 = v241;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10024D338((uint64_t)&v248);
      _os_log_impl((void *)&_mh_execute_header, v129, v130, "Could not find peer device for %s", (uint8_t *)v131, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10024D338((uint64_t)&v248);
    }

LABEL_54:
    uint64_t v139 = v236;
    uint64_t v140 = (uint64_t)v232;
    uint64_t v141 = v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI;
    swift_beginAccess();
    sub_10024A330(v141, v140, &qword_100974EA0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v140, 1, v65) == 1)
    {
      sub_10000A7E8(v140, &qword_100974EA0);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v70 + 32))(v139, v140, v65);
      uint64_t v142 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v142)
      {
        uint64_t v143 = v70;
        id v239 = v142;
        uint64_t v144 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
        uint64_t v145 = v230;
        v144(v230, v139, v65);
        uint64_t v146 = Logger.logObject.getter();
        os_log_type_t v147 = static os_log_type_t.default.getter();
        int v148 = v147;
        if (os_log_type_enabled(v146, v147))
        {
          uint64_t v149 = swift_slowAlloc();
          uint64_t v150 = (char *)swift_slowAlloc();
          v233 = v150;
          uint64_t v237 = swift_slowAlloc();
          uint64_t v248 = v237;
          *(_DWORD *)uint64_t v149 = 138412546;
          os_log_t v235 = v146;
          type metadata accessor for SFAuthenticationError(0);
          LODWORD(isa) = v148;
          sub_10045A8BC(&qword_100977FB0, type metadata accessor for SFAuthenticationError);
          swift_allocError();
          _DWORD *v151 = v238;
          uint64_t v152 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v245 = v152;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(void *)uint64_t v150 = v152;
          *(_WORD *)(v149 + 12) = 2080;
          sub_10045A8BC((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v153 = v243;
          uint64_t v154 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v245 = sub_100254634(v154, v155, &v248);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v156 = *(void (**)(char *, uint64_t))(v143 + 8);
          v156(v145, v153);
          os_log_t v157 = v235;
          _os_log_impl((void *)&_mh_execute_header, v235, (os_log_type_t)isa, "Calling back to delegate with registration error %@ for sessionID %s", (uint8_t *)v149, 0x16u);
          sub_10000A844(&qword_10096B850);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          unsigned int v158 = v238;
          swift_slowDealloc();
          uint64_t v67 = v241;
          swift_slowDealloc();
        }
        else
        {
          v156 = *(void (**)(char *, uint64_t))(v143 + 8);
          v156(v145, v243);

          unsigned int v158 = v238;
        }
        uint64_t v172 = v236;
        Class v173 = UUID._bridgeToObjectiveC()().super.isa;
        id v174 = sub_10070E650(v158, 0, 0xE000000000000000);
        [v239 manager:v67 didFailAuthenticationFor:v173 error:v174];
        swift_unknownObjectRelease();

        uint64_t v65 = v243;
        v156(v172, v243);
        uint64_t v70 = v242;
        uint64_t v175 = (uint64_t)v231;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v242 + 56))(v231, 1, 1, v65);
        swift_beginAccess();
        sub_10026B410(v175, v141, &qword_100974EA0);
        swift_endAccess();
      }
      else
      {
        v169 = Logger.logObject.getter();
        os_log_type_t v170 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v169, v170))
        {
          uint64_t v171 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v171 = 0;
          _os_log_impl((void *)&_mh_execute_header, v169, v170, "Have session that is waiting but no delegate to report it to. This is bad.", v171, 2u);
          swift_slowDealloc();
        }

        uint64_t v70 = v242;
        (*(void (**)(char *, uint64_t))(v242 + 8))(v139, v65);
      }
    }
    goto LABEL_74;
  }
LABEL_97:
  __break(1u);
  return result;
}

uint64_t sub_1004543D8(void *a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v240 = (id)a4;
  uint64_t v9 = sub_10000A844(&qword_100974EA0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  v231 = (char *)v227 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v232 = (char *)v227 - v12;
  uint64_t v13 = sub_10000A844((uint64_t *)&unk_100974F20);
  __chkstk_darwin(v13 - 8);
  uint64_t v229 = (uint64_t)v227 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v235 = (os_log_t)type metadata accessor for Date();
  Class isa = v235[-1].isa;
  __chkstk_darwin(v235);
  v233 = (char *)v227 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v243 = type metadata accessor for UUID();
  uint64_t v242 = *(void *)(v243 - 8);
  uint64_t v16 = __chkstk_darwin(v243);
  v230 = (char *)v227 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  v236 = (char *)v227 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)v227 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)v227 - v23;
  uint64_t v25 = (void *)type metadata accessor for DispatchPredicate();
  uint64_t v26 = *(v25 - 1);
  __chkstk_darwin(v25);
  uint64_t v28 = (void *)((char *)v227 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v252 = type metadata accessor for SDAuthenticationKeySession();
  v253 = &off_1008DE398;
  v251 = a1;
  uint64_t v29 = *(void **)(a5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v28 = v29;
  (*(void (**)(void *, void, void *))(v26 + 104))(v28, enum case for DispatchPredicate.onQueue(_:), v25);
  id v30 = a1;
  id v31 = v29;
  LOBYTE(v29) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, void *))(v26 + 8))(v28, v25);
  if (v29)
  {
    uint64_t v25 = sub_10070E650(a2, a3, (uint64_t)v240);
    LODWORD(v28) = a2;
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v32 = type metadata accessor for Logger();
  uint64_t v33 = sub_10000B47C(v32, (uint64_t)qword_10097F520);
  sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
  uint64_t v34 = v25;
  uint64_t v237 = v33;
  unint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.error.getter();
  BOOL v37 = os_log_type_enabled(v35, v36);
  uint64_t v241 = a5;
  LODWORD(v238) = v28;
  if (v37)
  {
    uint64_t v38 = swift_slowAlloc();
    v228 = (void *)swift_slowAlloc();
    id v239 = (id)swift_slowAlloc();
    uint64_t v245 = (uint64_t)v239;
    *(_DWORD *)uint64_t v38 = 136315394;
    v227[1] = v38 + 4;
    uint64_t v39 = v249;
    uint64_t v40 = v250;
    sub_10026BB6C(&v248, v249);
    (*(void (**)(uint64_t, uint64_t))(v40 + 32))(v39, v40);
    sub_10045A8BC((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v41 = v243;
    uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v44 = v43;
    (*(void (**)(char *, uint64_t))(v242 + 8))(v24, v41);
    v244[0] = sub_100254634(v42, v44, &v245);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)&v248);
    *(_WORD *)(v38 + 12) = 2112;
    v244[0] = v34;
    unint64_t v45 = v34;
    a5 = v241;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v228 = v34;

    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Session %s failed with error: %@", (uint8_t *)v38, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10024D338((uint64_t)&v248);
  }
  uint64_t v46 = v252;
  uint64_t v47 = v253;
  sub_10026BB6C(&v251, v252);
  id v239 = (id)((uint64_t (*)(uint64_t, _UNKNOWN **))v47[5])(v46, v47);
  unint64_t v48 = (uint64_t *)(a5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions);
  uint64_t v49 = swift_beginAccess();
  uint64_t v50 = *v48;
  uint64_t v51 = *(void *)(*v48 + 16);
  id v240 = v34;
  if (v51)
  {
    unint64_t v52 = (void *)(v50 + 32);
    uint64_t v53 = (void (**)(char *, uint64_t))(v242 + 8);
    swift_bridgeObjectRetain();
    uint64_t v54 = v51 - 1;
    do
    {
      uint64_t v55 = v54;
      uint64_t v57 = v52[3];
      uint64_t v56 = v52[4];
      sub_10026BB6C(v52, v57);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v56 + 8) + 8) + 32))(v57);
      uint64_t v58 = v252;
      uint64_t v59 = v253;
      sub_10026BB6C(&v251, v252);
      ((void (*)(uint64_t, _UNKNOWN **))v59[4])(v58, v59);
      char v60 = static UUID.== infix(_:_:)();
      uint64_t v61 = *v53;
      uint64_t v62 = v243;
      (*v53)(v22, v243);
      v61(v24, v62);
      if (v60) {
        break;
      }
      uint64_t v54 = v55 - 1;
      v52 += 5;
    }
    while (v55);
    uint64_t v49 = swift_bridgeObjectRelease();
  }
  else
  {
    char v60 = 0;
  }
  __chkstk_darwin(v49);
  v227[-2] = &v251;
  swift_beginAccess();
  uint64_t result = sub_100451FEC((uint64_t (*)(uint64_t))sub_10045A87C, (uint64_t)&v227[-4], (uint64_t (*)(uint64_t))sub_1002AD4C4, (uint64_t (*)(void, void))sub_1002AF688);
  uint64_t v64 = *(void *)(*v48 + 16);
  uint64_t v65 = v243;
  if (v64 < result)
  {
    __break(1u);
    goto LABEL_95;
  }
  sub_1005A5820(result, v64);
  uint64_t v66 = swift_endAccess();
  __chkstk_darwin(v66);
  v227[-2] = &v251;
  uint64_t v67 = v241;
  uint64_t v68 = v241 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions;
  swift_beginAccess();
  uint64_t result = sub_100451FEC((uint64_t (*)(uint64_t))sub_10045A87C, (uint64_t)&v227[-4], (uint64_t (*)(uint64_t))sub_1002AD4B0, (uint64_t (*)(void, void))sub_1002AF688);
  uint64_t v69 = *(void *)(*(void *)v68 + 16);
  uint64_t v70 = v242;
  if (v69 < result)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  sub_1005A5840(result, v69);
  uint64_t v71 = swift_endAccess();
  __chkstk_darwin(v71);
  v227[-2] = &v251;
  uint64_t v72 = v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions;
  swift_beginAccess();
  uint64_t result = sub_100451FEC((uint64_t (*)(uint64_t))sub_10045A87C, (uint64_t)&v227[-4], (uint64_t (*)(uint64_t))sub_1002AD49C, (uint64_t (*)(void, void))sub_1002AF688);
  uint64_t v73 = *(void *)(*(void *)v72 + 16);
  if (v73 < result)
  {
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  sub_1005A5860(result, v73);
  uint64_t v74 = swift_endAccess();
  __chkstk_darwin(v74);
  v227[-2] = &v251;
  uint64_t v75 = v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions;
  swift_beginAccess();
  uint64_t result = sub_100451FEC((uint64_t (*)(uint64_t))sub_10045A87C, (uint64_t)&v227[-4], (uint64_t (*)(uint64_t))sub_1002AD488, (uint64_t (*)(void, void))sub_1002AF688);
  uint64_t v76 = *(void *)(*(void *)v75 + 16);
  if (v76 >= result)
  {
    sub_1005A5880(result, v76);
    swift_endAccess();
    uint64_t v77 = v252;
    uint64_t v78 = v253;
    sub_10026BB6C(&v251, v252);
    ((void (*)(uint64_t, _UNKNOWN **))v78[11])(v77, v78);
    int v79 = (int)v238;
    if (v238 != 33) {
      goto LABEL_24;
    }
    uint64_t v80 = v252;
    os_log_type_t v81 = v253;
    sub_10026BB6C(&v251, v252);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v81[8])(&v248, v80, v81);
    uint64_t v82 = v249;
    if (v249)
    {
      uint64_t v83 = v250;
      sub_10026BB6C(&v248, v249);
      uint64_t v84 = (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 8))(v82, v83);
      BOOL v86 = v85;
      sub_10024D338((uint64_t)&v248);
      if (v86)
      {
        uint64_t v87 = sub_100508E74((uint64_t)v239);
        UUID.init()();
        sub_1006DDD14(v87, v84, v86, (uint64_t)v24);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v65);
        goto LABEL_24;
      }
    }
    else
    {
      sub_10000A7E8((uint64_t)&v248, &qword_10097BB50);
    }
    uint64_t v88 = Logger.logObject.getter();
    os_log_type_t v89 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v88, v89))
    {
      uint64_t v90 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v90 = 0;
      _os_log_impl((void *)&_mh_execute_header, v88, v89, "Got notEnabled error but coudln't determine who to disable pairing with", v90, 2u);
      swift_slowDealloc();
    }

LABEL_24:
    if (v239 != (id)8)
    {
      if (v239 != (id)5)
      {
        if (v239 != (id)4) {
          goto LABEL_74;
        }
        if (v79 == 22)
        {
          sub_1006E7B5C();
          uint64_t v91 = v252;
          uint64_t v92 = v253;
          sub_10026BB6C(&v251, v252);
          ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v92[8])(&v248, v91, v92);
          uint64_t v93 = v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_previousUnlockClassCLockDevice;
          swift_beginAccess();
          sub_10026B410((uint64_t)&v248, v93, &qword_10097BB50);
          swift_endAccess();
        }
        uint64_t v94 = v252;
        uint64_t v95 = v253;
        sub_10026BB6C(&v251, v252);
        ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v95[8])(&v248, v94, v95);
        uint64_t v96 = v249;
        if (v249)
        {
          uint64_t v97 = v250;
          sub_10026BB6C(&v248, v249);
          Swift::Int v98 = (*(uint64_t (**)(uint64_t, uint64_t))(v97 + 8))(v96, v97);
          Swift::Int v100 = v99;
          sub_10024D338((uint64_t)&v248);
          if (v100)
          {
            if (v79 == 9 || v79 == 24)
            {
              if (*(void *)(*(void *)(v67
                                         + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator)
                             + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner))
              {
                v228 = 0;
                swift_beginAccess();
                swift_retain();
                swift_retain();
                swift_bridgeObjectRetain();
                sub_100596448(&v245, v98, v100);
                swift_endAccess();
LABEL_71:
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
              }
            }
            else if (*(void *)(*(void *)(v67 {
                                            + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator)
            }
                                + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner))
            {
              v228 = 0;
              swift_beginAccess();
              swift_retain();
              swift_retain();
              sub_1005A1914(v98, v100);
              swift_endAccess();
              goto LABEL_71;
            }
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          sub_10000A7E8((uint64_t)&v248, &qword_10097BB50);
        }
        uint64_t v176 = (uint64_t)v233;
        static Date.distantPast.getter();
        sub_1006D5DAC(v176);
        (*((void (**)(uint64_t, os_log_t))isa + 1))(v176, v235);
        goto LABEL_74;
      }
      if (v79 != 10) {
        goto LABEL_74;
      }
      uint64_t v121 = v252;
      uint64_t v122 = v253;
      sub_10026BB6C(&v251, v252);
      ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v122[8])(&v248, v121, v122);
      uint64_t v123 = v249;
      if (v249)
      {
        uint64_t v124 = v250;
        sub_10026BB6C(&v248, v249);
        uint64_t v125 = (*(uint64_t (**)(uint64_t, uint64_t))(v124 + 8))(v123, v124);
        uint64_t v127 = v126;
        sub_10024D338((uint64_t)&v248);
        if (v127)
        {
          swift_beginAccess();
          uint64_t v128 = v229;
          sub_1002A965C(v125, v127, v229);
          swift_endAccess();
          sub_10000A7E8(v128, (uint64_t *)&unk_100974F20);
          swift_bridgeObjectRelease();
          goto LABEL_74;
        }
      }
      else
      {
        sub_10000A7E8((uint64_t)&v248, &qword_10097BB50);
      }
      v228 = 0;
      sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
      v159 = Logger.logObject.getter();
      os_log_type_t v160 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v159, v160))
      {
        uint64_t v161 = (uint8_t *)swift_slowAlloc();
        id v239 = (id)swift_slowAlloc();
        uint64_t v245 = (uint64_t)v239;
        *(_DWORD *)uint64_t v161 = 136315138;
        v238 = v161 + 4;
        uint64_t v162 = v249;
        uint64_t v163 = v250;
        sub_10026BB6C(&v248, v249);
        Swift::String v164 = *(void (**)(uint64_t, uint64_t))(v163 + 32);
        uint64_t v165 = v163;
        uint64_t v70 = v242;
        v164(v162, v165);
        sub_10045A8BC((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v166 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v168 = v167;
        (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v65);
        v244[0] = sub_100254634(v166, v168, &v245);
        uint64_t v67 = v241;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10024D338((uint64_t)&v248);
        _os_log_impl((void *)&_mh_execute_header, v159, v160, "Could not find peer device for %s", v161, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10024D338((uint64_t)&v248);
      }

LABEL_74:
      sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
      sub_10000A844((uint64_t *)&unk_10096B440);
      sub_10000A844((uint64_t *)&unk_100972440);
      if (swift_dynamicCast())
      {
        sub_10024D338((uint64_t)&v245);
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (!Strong) {
          goto LABEL_81;
        }
        v178 = (void *)Strong;
        uint64_t v179 = v252;
        uint64_t v180 = v253;
        sub_10026BB6C(&v251, v252);
        ((void (*)(uint64_t, _UNKNOWN **))v180[4])(v179, v180);
        v181.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v65);
        [v178 manager:v67 didFailAuthenticationFor:v181.super.isa error:v240];
      }
      else
      {
        sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
        sub_10000A844(&qword_10096B430);
        if ((swift_dynamicCast() & 1) == 0
          || (sub_10024D338((uint64_t)&v245), (uint64_t v182 = swift_unknownObjectWeakLoadStrong()) == 0))
        {
LABEL_81:
          sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
          if (v60)
          {
            uint64_t v186 = v249;
            uint64_t v187 = v250;
            sub_10026BB6C(&v248, v249);
            unint64_t v188 = (*(uint64_t (**)(uint64_t, uint64_t))(v187 + 40))(v186, v187);
            uint64_t v189 = v240;
            if (v188 > 0xE || ((1 << v188) & 0x658E) == 0)
            {
              sub_10024D338((uint64_t)&v248);
              sub_100278C8C((uint64_t)&v251, (uint64_t)&v245);

              sub_10024D338((uint64_t)&v245);
              return sub_10024D338((uint64_t)&v251);
            }
            sub_10024D338((uint64_t)&v248);
            uint64_t v190 = *(void *)(v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
            uint64_t v191 = v252;
            v192 = v253;
            sub_10026BB6C(&v251, v252);
            unint64_t v193 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v192[5])(v191, v192);
            LOBYTE(v191) = sub_100508B74(v193);
            uint64_t v194 = v252;
            uint64_t v195 = v253;
            sub_10026BB6C(&v251, v252);
            ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v195[8])(&v245, v194, v195);
            uint64_t v196 = sub_1005EA4B4(v191, (uint64_t)&v245);
            uint64_t v198 = v197;
            uint64_t ObjectType = swift_getObjectType();
            uint64_t v200 = (*(uint64_t (**)(uint64_t, uint64_t))(v198 + 56))(ObjectType, v198);
            uint64_t v201 = __chkstk_darwin(v200);
            v227[-4] = v196;
            v227[-3] = v198;
            v227[-2] = &v245;
            v227[-1] = v190;
            __chkstk_darwin(v201);
            v227[-2] = sub_10045AFA8;
            v227[-1] = v202;
            v204 = v203 + 4;
            os_unfair_lock_lock(v203 + 4);
            sub_10030F73C(v205);
            os_unfair_lock_unlock(v204);

            swift_unknownObjectRelease();
            v206 = (id *)&v245;
          }
          else
          {
            sub_10024D338((uint64_t)&v248);
            sub_100278C8C((uint64_t)&v251, (uint64_t)&v245);
            uint64_t v207 = v246;
            uint64_t v208 = v247;
            sub_10026BB6C(&v245, v246);
            unint64_t v209 = (*(uint64_t (**)(uint64_t, uint64_t))(v208 + 40))(v207, v208);
            v210 = v240;
            if (v209 <= 0xE && ((1 << v209) & 0x658E) != 0)
            {
              sub_10024D338((uint64_t)&v245);

              return sub_10024D338((uint64_t)&v251);
            }
            sub_10024D338((uint64_t)&v245);
            uint64_t v211 = *(void *)(v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
            uint64_t v212 = v252;
            v213 = v253;
            sub_10026BB6C(&v251, v252);
            unint64_t v214 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v213[5])(v212, v213);
            LOBYTE(v212) = sub_100508B74(v214);
            uint64_t v215 = v252;
            v216 = v253;
            sub_10026BB6C(&v251, v252);
            ((void (*)(void *__return_ptr, uint64_t, _UNKNOWN **))v216[8])(v244, v215, v216);
            uint64_t v217 = sub_1005EA4B4(v212, (uint64_t)v244);
            uint64_t v219 = v218;
            uint64_t v220 = swift_getObjectType();
            uint64_t v221 = (*(uint64_t (**)(uint64_t, uint64_t))(v219 + 56))(v220, v219);
            uint64_t v222 = __chkstk_darwin(v221);
            v227[-4] = v217;
            v227[-3] = v219;
            v227[-2] = v244;
            v227[-1] = v211;
            __chkstk_darwin(v222);
            v227[-2] = sub_10045A89C;
            v227[-1] = v223;
            v225 = v224 + 4;
            os_unfair_lock_lock(v224 + 4);
            sub_1002CEA38(v226);
            os_unfair_lock_unlock(v225);

            swift_unknownObjectRelease();
            v206 = (id *)v244;
          }
          sub_10000A7E8((uint64_t)v206, &qword_10097BB50);
          return sub_10024D338((uint64_t)&v251);
        }
        uint64_t v183 = (void *)v182;
        uint64_t v184 = v252;
        uint64_t v185 = v253;
        sub_10026BB6C(&v251, v252);
        ((void (*)(uint64_t, _UNKNOWN **))v185[4])(v184, v185);
        v181.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v65);
        [v183 manager:v67 didFailToEnableDeviceFor:v181.super.isa error:v240];
      }

      swift_unknownObjectRelease();
      goto LABEL_81;
    }
    uint64_t v101 = v252;
    uint64_t v102 = v253;
    sub_10026BB6C(&v251, v252);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v102[8])(&v248, v101, v102);
    uint64_t v103 = v249;
    v228 = 0;
    if (v249)
    {
      uint64_t v104 = v250;
      sub_10026BB6C(&v248, v249);
      uint64_t v105 = (*(uint64_t (**)(uint64_t, uint64_t))(v104 + 8))(v103, v104);
      uint64_t v107 = v106;
      sub_10024D338((uint64_t)&v248);
      if (v107)
      {
        unint64_t v108 = Logger.logObject.getter();
        os_log_type_t v109 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v108, v109))
        {
          uint64_t v110 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v110 = 0;
          _os_log_impl((void *)&_mh_execute_header, v108, v109, "Registration failed, clearing registration date", v110, 2u);
          swift_slowDealloc();
        }

        swift_beginAccess();
        swift_bridgeObjectRetain();
        os_log_t v111 = sub_1005803EC(&v248, v105, v107);
        uint64_t v113 = v112;
        uint64_t v114 = type metadata accessor for RegistrationState(0);
        uint64_t v115 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 48);
        unint64_t v116 = *v115;
        if (!(*v115)(v113, 1, v114)) {
          *(unsigned char *)(v113 + *(int *)(v114 + 20)) = 0;
        }
        ((void (*)(uint64_t *, void))v111)(&v248, 0);
        swift_endAccess();
        uint64_t v70 = v242;
        swift_bridgeObjectRelease();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        uint64_t v117 = sub_1005803EC(&v248, v105, v107);
        uint64_t v119 = v118;
        unsigned int v120 = v116(v118, 1, v114);
        uint64_t v65 = v243;
        if (!v120)
        {
          sub_10000A7E8(v119, (uint64_t *)&unk_100975040);
          (*((void (**)(uint64_t, uint64_t, uint64_t, os_log_t))isa + 7))(v119, 1, 1, v235);
        }
        ((void (*)(uint64_t *, void))v117)(&v248, 0);
        swift_endAccess();
        swift_bridgeObjectRelease_n();
        uint64_t v67 = v241;
        goto LABEL_54;
      }
    }
    else
    {
      sub_10000A7E8((uint64_t)&v248, &qword_10097BB50);
    }
    sub_100278C8C((uint64_t)&v251, (uint64_t)&v248);
    uint64_t v129 = Logger.logObject.getter();
    os_log_type_t v130 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v129, v130))
    {
      uint64_t v131 = swift_slowAlloc();
      id v239 = (id)swift_slowAlloc();
      uint64_t v245 = (uint64_t)v239;
      *(_DWORD *)uint64_t v131 = 136315138;
      os_log_t v235 = (os_log_t)(v131 + 4);
      uint64_t v132 = v249;
      uint64_t v133 = v250;
      sub_10026BB6C(&v248, v249);
      uint64_t v134 = *(void (**)(uint64_t, uint64_t))(v133 + 32);
      uint64_t v135 = v133;
      uint64_t v70 = v242;
      v134(v132, v135);
      sub_10045A8BC((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v136 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v138 = v137;
      (*(void (**)(char *, uint64_t))(v70 + 8))(v24, v65);
      v244[0] = sub_100254634(v136, v138, &v245);
      uint64_t v67 = v241;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10024D338((uint64_t)&v248);
      _os_log_impl((void *)&_mh_execute_header, v129, v130, "Could not find peer device for %s", (uint8_t *)v131, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10024D338((uint64_t)&v248);
    }

LABEL_54:
    uint64_t v139 = v236;
    uint64_t v140 = (uint64_t)v232;
    uint64_t v141 = v67 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI;
    swift_beginAccess();
    sub_10024A330(v141, v140, &qword_100974EA0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v140, 1, v65) == 1)
    {
      sub_10000A7E8(v140, &qword_100974EA0);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v70 + 32))(v139, v140, v65);
      uint64_t v142 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v142)
      {
        uint64_t v143 = v70;
        id v239 = v142;
        uint64_t v144 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
        uint64_t v145 = v230;
        v144(v230, v139, v65);
        uint64_t v146 = Logger.logObject.getter();
        os_log_type_t v147 = static os_log_type_t.default.getter();
        int v148 = v147;
        if (os_log_type_enabled(v146, v147))
        {
          uint64_t v149 = swift_slowAlloc();
          uint64_t v150 = (char *)swift_slowAlloc();
          v233 = v150;
          uint64_t v237 = swift_slowAlloc();
          uint64_t v248 = v237;
          *(_DWORD *)uint64_t v149 = 138412546;
          os_log_t v235 = v146;
          type metadata accessor for SFAuthenticationError(0);
          LODWORD(isa) = v148;
          sub_10045A8BC(&qword_100977FB0, type metadata accessor for SFAuthenticationError);
          swift_allocError();
          _DWORD *v151 = v238;
          uint64_t v152 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v245 = v152;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(void *)uint64_t v150 = v152;
          *(_WORD *)(v149 + 12) = 2080;
          sub_10045A8BC((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v153 = v243;
          uint64_t v154 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v245 = sub_100254634(v154, v155, &v248);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v156 = *(void (**)(char *, uint64_t))(v143 + 8);
          v156(v145, v153);
          os_log_t v157 = v235;
          _os_log_impl((void *)&_mh_execute_header, v235, (os_log_type_t)isa, "Calling back to delegate with registration error %@ for sessionID %s", (uint8_t *)v149, 0x16u);
          sub_10000A844(&qword_10096B850);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          unsigned int v158 = v238;
          swift_slowDealloc();
          uint64_t v67 = v241;
          swift_slowDealloc();
        }
        else
        {
          v156 = *(void (**)(char *, uint64_t))(v143 + 8);
          v156(v145, v243);

          unsigned int v158 = v238;
        }
        uint64_t v172 = v236;
        Class v173 = UUID._bridgeToObjectiveC()().super.isa;
        id v174 = sub_10070E650(v158, 0, 0xE000000000000000);
        [v239 manager:v67 didFailAuthenticationFor:v173 error:v174];
        swift_unknownObjectRelease();

        uint64_t v65 = v243;
        v156(v172, v243);
        uint64_t v70 = v242;
        uint64_t v175 = (uint64_t)v231;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v242 + 56))(v231, 1, 1, v65);
        swift_beginAccess();
        sub_10026B410(v175, v141, &qword_100974EA0);
        swift_endAccess();
      }
      else
      {
        v169 = Logger.logObject.getter();
        os_log_type_t v170 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v169, v170))
        {
          uint64_t v171 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v171 = 0;
          _os_log_impl((void *)&_mh_execute_header, v169, v170, "Have session that is waiting but no delegate to report it to. This is bad.", v171, 2u);
          swift_slowDealloc();
        }

        uint64_t v70 = v242;
        (*(void (**)(char *, uint64_t))(v242 + 8))(v139, v65);
      }
    }
    goto LABEL_74;
  }
LABEL_97:
  __break(1u);
  return result;
}