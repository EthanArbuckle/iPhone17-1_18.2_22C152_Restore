uint64_t sub_10059F6C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;

  v1 = v0;
  v2 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  sub_10000A844(&qword_10096D4B0);
  v7 = static _SetStorage.resize(original:capacity:move:)();
  v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(unsigned char *)(v6 + 32);
  v10 = *(void *)(v6 + 56);
  v30 = v0;
  v31 = v6 + 56;
  if (v9 < 64) {
    v11 = ~(-1 << v9);
  }
  else {
    v11 = -1;
  }
  v12 = v11 & v10;
  v32 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v32) {
      goto LABEL_33;
    }
    v20 = *(void *)(v31 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v32) {
        goto LABEL_33;
      }
      v20 = *(void *)(v31 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v32) {
          goto LABEL_33;
        }
        v20 = *(void *)(v31 + 8 * v15);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(void *)(v3 + 72);
    sub_1005A80F0(*(void *)(v6 + 48) + v22 * v18, (uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
    Hasher.init(_seed:)();
    sub_1003156D8();
    result = Hasher._finalize()();
    v23 = -1 << *(unsigned char *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27) {
          v25 = 0;
        }
        v26 |= v28;
        v29 = *(void *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = sub_1005A8158((uint64_t)v5, *(void *)(v8 + 48) + v16 * v22, type metadata accessor for SDAirDropDiscoveredEndpoint);
    ++*(void *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v30;
    goto LABEL_35;
  }
  v20 = *(void *)(v31 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v32) {
      goto LABEL_33;
    }
    v20 = *(void *)(v31 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10059FA24()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_10000A844(&qword_100979ED0);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = static Hasher._hash(seed:_:)();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10059FC88()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_10000A844(&qword_100979F78);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10059FF38()
{
  v1 = v0;
  uint64_t v2 = type metadata accessor for CodableError();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10000A844(&qword_100979E70);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1005A81E8(&qword_100979E60, (void (*)(uint64_t))&type metadata accessor for CodableError);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A02E8()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_10000A844(&qword_100979F68);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    unint64_t v21 = v19[1];
    Hasher.init(_seed:)();
    sub_10025ADCC(v20, v21);
    Data.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A059C()
{
  v1 = v0;
  uint64_t v2 = *v0;
  sub_10000A844(&qword_100979EA8);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    Swift::UInt v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v18);
    uint64_t result = Hasher._finalize()();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A0818()
{
  uint64_t v1 = *v0;
  sub_10000A844(&qword_100979FA8);
  uint64_t v2 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v0 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v5 = v1 + 56;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v1 + 56);
  int64_t v25 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = v2 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v25) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v25) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v5 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v25) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v5 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(*(void *)(v1 + 48) + 8 * v13);
    Hasher.init(_seed:)();
    swift_retain();
    Task.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v18 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v21 = 0;
      unint64_t v22 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v22 && (v21 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v23 = v20 == v22;
        if (v20 == v22) {
          unint64_t v20 = 0;
        }
        v21 |= v23;
        uint64_t v24 = *(void *)(v8 + 8 * v20);
      }
      while (v24 == -1);
      unint64_t v11 = __clz(__rbit64(~v24)) + (v20 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v3 + 48) + 8 * v11) = v17;
    ++*(void *)(v3 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v25)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A0AE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10000A844(&qword_100979E80);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_25:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  int64_t v25 = v0;
  uint64_t v26 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v13 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v14 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v16 << 6);
      goto LABEL_7;
    }
    int64_t v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v13) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v21);
    ++v16;
    if (!v22)
    {
      int64_t v16 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v26 + 8 * v16);
      if (!v22)
      {
        int64_t v16 = v21 + 2;
        if (v21 + 2 >= v13) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v26 + 8 * v16);
        if (!v22) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_7:
    uint64_t v19 = *(void *)(v3 + 72);
    sub_1005A80F0(*(void *)(v6 + 48) + v19 * v18, (uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    Hasher.init(_seed:)();
    sub_1003152B0();
    Hasher._finalize()();
    unint64_t v20 = _HashTable.nextHole(atOrAfter:)();
    *(void *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    uint64_t result = sub_1005A8158((uint64_t)v5, *(void *)(v8 + 48) + v20 * v19, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    ++*(void *)(v8 + 16);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v13)
  {
LABEL_23:
    uint64_t result = swift_release_n();
    uint64_t v1 = v25;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v26 + 8 * v23);
  if (v22)
  {
    int64_t v16 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v16 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v16);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1005A0DBC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10000A844(&qword_100979E78);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_25:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  int64_t v25 = v0;
  uint64_t v26 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v13 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v14 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v16 << 6);
      goto LABEL_7;
    }
    int64_t v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v13) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v21);
    ++v16;
    if (!v22)
    {
      int64_t v16 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v26 + 8 * v16);
      if (!v22)
      {
        int64_t v16 = v21 + 2;
        if (v21 + 2 >= v13) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v26 + 8 * v16);
        if (!v22) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_7:
    uint64_t v19 = *(void *)(v3 + 72);
    sub_1005A80F0(*(void *)(v6 + 48) + v19 * v18, (uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    Hasher.init(_seed:)();
    sub_100314FE0();
    Hasher._finalize()();
    unint64_t v20 = _HashTable.nextHole(atOrAfter:)();
    *(void *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    uint64_t result = sub_1005A8158((uint64_t)v5, *(void *)(v8 + 48) + v20 * v19, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    ++*(void *)(v8 + 16);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v13)
  {
LABEL_23:
    uint64_t result = swift_release_n();
    uint64_t v1 = v25;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v26 + 8 * v23);
  if (v22)
  {
    int64_t v16 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v16 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v16);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1005A1098()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10000A844(&qword_100979F00);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v30 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v31 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v31) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v30 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v30 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    unint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v14);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    uint64_t v21 = v18[2];
    uint64_t v22 = v18[3];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (void *)(*(void *)(v4 + 48) + 32 * v11);
    *unint64_t v12 = v19;
    v12[1] = v20;
    v12[2] = v21;
    v12[3] = v22;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v30 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v31) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A13A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_10000A844(a2);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  uint64_t v30 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    Swift::Int v21 = *(void *)(v6 + 40);
    id v22 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = NSObject._rawHashValue(seed:)(v21);
    uint64_t v23 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v22;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v30;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A1618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1005A81E8(&qword_10096C4C8, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    char v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    unint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    int64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_1005A81E8((unint64_t *)&unk_10096D460, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    Swift::Int v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    *Swift::Int v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10059DE28((uint64_t (*)(void))&type metadata accessor for UUID, (uint64_t *)&unk_10096D450);
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_1005A30E0(v12);
    *Swift::Int v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_1005A1914(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      unint64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10059DC74();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_1005A33FC(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1005A1AA4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  unint64_t v86 = a2;
  Data.hash(into:)();
  Swift::Int v7 = Hasher._finalize()();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  uint64_t v10 = v6 + 56;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_116:
    uint64_t result = swift_bridgeObjectRelease();
    *a3 = xmmword_100770AE0;
    return result;
  }
  uint64_t v11 = ~v8;
  unint64_t v12 = a2 >> 62;
  BOOL v13 = __OFSUB__(HIDWORD(a1), a1);
  BOOL v84 = v13;
  uint64_t v83 = v6 + 56;
  uint64_t v80 = (a1 >> 32) - (int)a1;
  uint64_t v81 = a1 >> 32;
  uint64_t v79 = v6;
  uint64_t v85 = ~v8;
  while (2)
  {
    uint64_t v14 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v9);
    uint64_t v15 = *v14;
    unint64_t v16 = v14[1];
    BOOL v17 = (void *)(v16 >> 62);
    uint64_t v18 = 0;
    switch(v16 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v15), v15))
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          sub_10059E0D8();
          uint64_t v76 = *(void *)__s1;
          goto LABEL_119;
        }
        uint64_t v18 = HIDWORD(v15) - (int)v15;
LABEL_14:
        sub_10025ADCC(v15, v16);
        break;
      case 2uLL:
        uint64_t v20 = *(void *)(v15 + 16);
        uint64_t v19 = *(void *)(v15 + 24);
        uint64_t v18 = v19 - v20;
        if (!__OFSUB__(v19, v20)) {
          goto LABEL_14;
        }
        goto LABEL_121;
      case 3uLL:
        break;
      default:
        uint64_t v18 = BYTE6(v16);
        break;
    }
    uint64_t v21 = BYTE6(v86);
    switch((int)v12)
    {
      case 1:
        uint64_t v21 = HIDWORD(a1) - (int)a1;
        if (v84) {
          goto LABEL_122;
        }
        goto LABEL_19;
      case 2:
        uint64_t v23 = *(void *)(a1 + 16);
        uint64_t v22 = *(void *)(a1 + 24);
        BOOL v24 = __OFSUB__(v22, v23);
        uint64_t v21 = v22 - v23;
        if (!v24) {
          goto LABEL_19;
        }
        goto LABEL_123;
      case 3:
        if (v18) {
          goto LABEL_7;
        }
        goto LABEL_117;
      default:
LABEL_19:
        if (v18 != v21)
        {
LABEL_7:
          sub_100250CC4(v15, v16);
          goto LABEL_8;
        }
        if (v18 >= 1)
        {
          switch((int)v17)
          {
            case 1:
              if ((int)v15 > v15 >> 32) {
                goto LABEL_124;
              }
              BOOL v17 = (void *)__DataStorage._bytes.getter();
              if (!v17) {
                goto LABEL_33;
              }
              uint64_t v29 = __DataStorage._offset.getter();
              if (__OFSUB__((int)v15, v29)) {
                goto LABEL_126;
              }
              BOOL v17 = (void *)((char *)v17 + (int)v15 - v29);
LABEL_33:
              __DataStorage._length.getter();
              uint64_t v11 = v85;
              if (!v12)
              {
                *(void *)__s1 = a1;
                *(_DWORD *)&__s1[8] = v86;
                *(_WORD *)&__s1[12] = WORD2(v86);
                if (!v17) {
                  goto LABEL_155;
                }
                v49 = (uint64_t *)__s1;
                v48 = v17;
                goto LABEL_101;
              }
              if (v12 == 1)
              {
                if (v81 < (int)a1) {
                  goto LABEL_136;
                }
                swift_retain();
                uint64_t v30 = (char *)__DataStorage._bytes.getter();
                if (v30)
                {
                  uint64_t v31 = __DataStorage._offset.getter();
                  if (__OFSUB__((int)a1, v31)) {
                    goto LABEL_143;
                  }
                  v30 += (int)a1 - v31;
                }
                uint64_t v32 = __DataStorage._length.getter();
                size_t v33 = (a1 >> 32) - (int)a1;
                if (v32 < v80) {
                  size_t v33 = v32;
                }
                if (!v17) {
                  goto LABEL_145;
                }
                if (!v30) {
                  goto LABEL_146;
                }
                int v34 = memcmp(v17, v30, v33);
                sub_100250CC4(a1, v86);
              }
              else
              {
                uint64_t v68 = *(void *)(a1 + 16);
                uint64_t v67 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                v69 = (char *)__DataStorage._bytes.getter();
                if (v69)
                {
                  uint64_t v70 = __DataStorage._offset.getter();
                  if (__OFSUB__(v68, v70)) {
                    goto LABEL_142;
                  }
                  v69 += v68 - v70;
                }
                BOOL v24 = __OFSUB__(v67, v68);
                int64_t v71 = v67 - v68;
                if (v24) {
                  goto LABEL_137;
                }
                uint64_t v72 = __DataStorage._length.getter();
                if (v72 >= v71) {
                  size_t v73 = v71;
                }
                else {
                  size_t v73 = v72;
                }
                if (!v17) {
                  goto LABEL_156;
                }
                uint64_t v6 = v79;
                uint64_t v10 = v83;
                if (!v69) {
                  goto LABEL_157;
                }
                int v34 = memcmp(v17, v69, v73);
                swift_release();
                swift_release();
              }
              sub_100250CC4(v15, v16);
              goto LABEL_114;
            case 2:
              BOOL v17 = (void *)(v16 & 0x3FFFFFFFFFFFFFFFLL);
              uint64_t v35 = *(void *)(v15 + 16);
              swift_retain();
              swift_retain();
              int64_t v36 = (char *)__DataStorage._bytes.getter();
              if (!v36) {
                goto LABEL_47;
              }
              uint64_t v37 = __DataStorage._offset.getter();
              if (__OFSUB__(v35, v37)) {
                goto LABEL_125;
              }
              v36 += v35 - v37;
LABEL_47:
              __DataStorage._length.getter();
              uint64_t v10 = v83;
              if (v12)
              {
                if (v12 == 1)
                {
                  if (v81 < (int)a1) {
                    goto LABEL_130;
                  }
                  swift_retain();
                  uint64_t v38 = (char *)__DataStorage._bytes.getter();
                  if (v38)
                  {
                    uint64_t v39 = __DataStorage._offset.getter();
                    if (__OFSUB__((int)a1, v39)) {
                      goto LABEL_141;
                    }
                    v38 += (int)a1 - v39;
                  }
                  uint64_t v40 = __DataStorage._length.getter();
                  size_t v41 = (a1 >> 32) - (int)a1;
                  if (v40 < v80) {
                    size_t v41 = v40;
                  }
                  if (!v36) {
                    goto LABEL_147;
                  }
                  if (!v38) {
                    goto LABEL_148;
                  }
                  int v42 = memcmp(v36, v38, v41);
                  sub_100250CC4(a1, v86);
                  swift_release();
                }
                else
                {
                  uint64_t v60 = *(void *)(a1 + 16);
                  uint64_t v77 = *(void *)(a1 + 24);
                  swift_retain();
                  swift_retain();
                  v61 = (char *)__DataStorage._bytes.getter();
                  if (v61)
                  {
                    uint64_t v62 = __DataStorage._offset.getter();
                    if (__OFSUB__(v60, v62)) {
                      goto LABEL_140;
                    }
                    v61 += v60 - v62;
                  }
                  BOOL v24 = __OFSUB__(v77, v60);
                  int64_t v63 = v77 - v60;
                  if (v24) {
                    goto LABEL_135;
                  }
                  uint64_t v64 = __DataStorage._length.getter();
                  if (v64 >= v63) {
                    size_t v65 = v63;
                  }
                  else {
                    size_t v65 = v64;
                  }
                  if (!v36) {
                    goto LABEL_153;
                  }
                  uint64_t v6 = v79;
                  if (!v61) {
                    goto LABEL_154;
                  }
                  int v42 = memcmp(v36, v61, v65);
                  swift_release();
                  swift_release();
                  swift_release();
                }
                swift_release();
                sub_100250CC4(v15, v16);
                uint64_t v10 = v83;
              }
              else
              {
                *(void *)__s1 = a1;
                *(_DWORD *)&__s1[8] = v86;
                *(_WORD *)&__s1[12] = WORD2(v86);
                if (!v36) {
                  goto LABEL_152;
                }
                int v42 = memcmp(v36, __s1, BYTE6(v86));
                swift_release();
                swift_release();
                sub_100250CC4(v15, v16);
              }
              uint64_t v11 = v85;
              if (!v42) {
                goto LABEL_118;
              }
              break;
            case 3:
              *(void *)&__s1[6] = 0;
              *(void *)__s1 = 0;
              if (!v12) {
                goto LABEL_68;
              }
              if (v12 == 1)
              {
                if (v81 < (int)a1) {
                  goto LABEL_129;
                }
                sub_10025ADCC(a1, v86);
                uint64_t v43 = __DataStorage._bytes.getter();
                if (!v43) {
                  goto LABEL_149;
                }
                uint64_t v26 = v43;
                uint64_t v44 = __DataStorage._offset.getter();
                uint64_t v28 = (int)a1 - v44;
                if (__OFSUB__((int)a1, v44)) {
                  goto LABEL_134;
                }
                goto LABEL_63;
              }
              uint64_t v56 = *(void *)(a1 + 16);
              uint64_t v57 = *(void *)(a1 + 24);
              swift_retain();
              swift_retain();
              v52 = (char *)__DataStorage._bytes.getter();
              if (v52)
              {
                uint64_t v58 = __DataStorage._offset.getter();
                if (__OFSUB__(v56, v58)) {
                  goto LABEL_139;
                }
                v52 += v56 - v58;
              }
              BOOL v24 = __OFSUB__(v57, v56);
              int64_t v54 = v57 - v56;
              if (v24) {
                goto LABEL_132;
              }
              uint64_t v55 = __DataStorage._length.getter();
              if (!v52) {
                goto LABEL_151;
              }
              goto LABEL_80;
            default:
              *(void *)__s1 = v15;
              *(_WORD *)&__s1[8] = v16;
              __s1[10] = BYTE2(v16);
              __s1[11] = BYTE3(v16);
              __s1[12] = BYTE4(v16);
              __s1[13] = BYTE5(v16);
              if (v12)
              {
                if (v12 == 1)
                {
                  if (v81 < (int)a1)
                  {
                    __break(1u);
LABEL_129:
                    __break(1u);
LABEL_130:
                    __break(1u);
LABEL_131:
                    __break(1u);
LABEL_132:
                    __break(1u);
LABEL_133:
                    __break(1u);
LABEL_134:
                    __break(1u);
LABEL_135:
                    __break(1u);
LABEL_136:
                    __break(1u);
LABEL_137:
                    __break(1u);
LABEL_138:
                    __break(1u);
LABEL_139:
                    __break(1u);
LABEL_140:
                    __break(1u);
LABEL_141:
                    __break(1u);
LABEL_142:
                    __break(1u);
LABEL_143:
                    __break(1u);
                  }
                  sub_10025ADCC(a1, v86);
                  uint64_t v25 = __DataStorage._bytes.getter();
                  if (!v25)
                  {
                    __DataStorage._length.getter();
                    __break(1u);
LABEL_145:
                    __break(1u);
LABEL_146:
                    __break(1u);
LABEL_147:
                    __break(1u);
LABEL_148:
                    __break(1u);
LABEL_149:
                    __DataStorage._length.getter();
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
                    JUMPOUT(0x1005A24C8);
                  }
                  uint64_t v26 = v25;
                  uint64_t v27 = __DataStorage._offset.getter();
                  uint64_t v28 = (int)a1 - v27;
                  if (__OFSUB__((int)a1, v27)) {
                    goto LABEL_133;
                  }
LABEL_63:
                  uint64_t v45 = __DataStorage._length.getter();
                  if (v45 >= v80) {
                    size_t v46 = (a1 >> 32) - (int)a1;
                  }
                  else {
                    size_t v46 = v45;
                  }
                  int v47 = memcmp(__s1, (const void *)(v26 + v28), v46);
                  sub_100250CC4(a1, v86);
                  sub_100250CC4(v15, v16);
                  uint64_t v6 = v79;
                  if (!v47) {
                    goto LABEL_118;
                  }
                }
                else
                {
                  uint64_t v50 = *(void *)(a1 + 16);
                  uint64_t v51 = *(void *)(a1 + 24);
                  swift_retain();
                  swift_retain();
                  v52 = (char *)__DataStorage._bytes.getter();
                  if (v52)
                  {
                    uint64_t v53 = __DataStorage._offset.getter();
                    if (__OFSUB__(v50, v53)) {
                      goto LABEL_138;
                    }
                    v52 += v50 - v53;
                  }
                  BOOL v24 = __OFSUB__(v51, v50);
                  int64_t v54 = v51 - v50;
                  if (v24) {
                    goto LABEL_131;
                  }
                  uint64_t v55 = __DataStorage._length.getter();
                  if (!v52) {
                    goto LABEL_150;
                  }
LABEL_80:
                  if (v55 >= v54) {
                    size_t v59 = v54;
                  }
                  else {
                    size_t v59 = v55;
                  }
                  int v34 = memcmp(__s1, v52, v59);
                  swift_release();
                  swift_release();
                  sub_100250CC4(v15, v16);
                  uint64_t v10 = v83;
LABEL_114:
                  uint64_t v11 = v85;
                  if (!v34) {
                    goto LABEL_118;
                  }
                }
              }
              else
              {
LABEL_68:
                uint64_t v87 = a1;
                int v88 = v86;
                __int16 v89 = WORD2(v86);
                v48 = __s1;
                v49 = &v87;
LABEL_101:
                int v66 = memcmp(v48, v49, BYTE6(v86));
                sub_100250CC4(v15, v16);
                if (!v66) {
                  goto LABEL_118;
                }
              }
              break;
          }
LABEL_8:
          unint64_t v9 = (v9 + 1) & v11;
          if (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
            goto LABEL_116;
          }
          continue;
        }
LABEL_117:
        sub_100250CC4(v15, v16);
LABEL_118:
        swift_bridgeObjectRelease();
        BOOL v17 = v78;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v76 = *v78;
        *(void *)__s1 = *v78;
        void *v78 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          goto LABEL_127;
        }
LABEL_119:
        *a3 = *(_OWORD *)(*(void *)(v76 + 48) + 16 * v9);
        sub_1005A35C4(v9);
        *BOOL v17 = *(void *)__s1;
        return swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1005A24F8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v5 = a1;
    char v6 = __CocoaSet.contains(_:)();

    if (v6)
    {
      uint64_t v7 = sub_1005A2F54();
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v8 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v9 = NSObject._rawHashValue(seed:)(v8);
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_12;
  }
  type metadata accessor for SDAirDropSendConnection(0);
  id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
  char v13 = static NSObject.== infix(_:_:)();

  if ((v13 & 1) == 0)
  {
    uint64_t v14 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v14;
      if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_12;
      }
      id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      char v16 = static NSObject.== infix(_:_:)();
    }
    while ((v16 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v2;
  uint64_t v20 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10059EA0C(&qword_10096D4D0);
    uint64_t v18 = v20;
  }
  uint64_t v7 = *(void *)(*(void *)(v18 + 48) + 8 * v11);
  sub_1005A379C(v11);
  *uint64_t v2 = v20;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1005A26C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::Int v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v2;
  uint64_t v9 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  sub_100314FE0();
  Swift::Int v10 = Hasher._finalize()();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v21 = v5;
    uint64_t v22 = a2;
    uint64_t v13 = ~v11;
    uint64_t v14 = *(void *)(v6 + 72);
    while (1)
    {
      sub_1005A80F0(*(void *)(v9 + 48) + v14 * v12, (uint64_t)v8, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      char v15 = sub_10031C718((uint64_t)v8, a1);
      sub_10031C1C0((uint64_t)v8, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      if (v15) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v13;
      if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = 1;
        uint64_t v5 = v21;
        a2 = v22;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    BOOL v17 = v23;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v17;
    uint64_t v24 = *v17;
    *BOOL v17 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10059E5D0(type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint, &qword_100979E78, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      uint64_t v19 = v24;
    }
    a2 = v22;
    sub_1005A8158(*(void *)(v19 + 48) + v14 * v12, v22, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1005A3F58(v12, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint, (void (*)(char *))sub_100314FE0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    *BOOL v17 = v24;
    swift_bridgeObjectRelease();
    uint64_t v16 = 0;
    uint64_t v5 = v21;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
}

uint64_t sub_1005A29BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::Int v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v2;
  uint64_t v9 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  sub_1003156D8();
  Swift::Int v10 = Hasher._finalize()();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v21 = v5;
    uint64_t v22 = a2;
    uint64_t v13 = ~v11;
    uint64_t v14 = *(void *)(v6 + 72);
    while (1)
    {
      sub_1005A80F0(*(void *)(v9 + 48) + v14 * v12, (uint64_t)v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
      char v15 = sub_10031EEC0((uint64_t)v8, a1);
      sub_10031C1C0((uint64_t)v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
      if (v15) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v13;
      if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = 1;
        uint64_t v5 = v21;
        a2 = v22;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    BOOL v17 = v23;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v17;
    uint64_t v24 = *v17;
    *BOOL v17 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10059E5D0(type metadata accessor for SDAirDropDiscoveredEndpoint, &qword_10096D4B0, type metadata accessor for SDAirDropDiscoveredEndpoint, type metadata accessor for SDAirDropDiscoveredEndpoint);
      uint64_t v19 = v24;
    }
    a2 = v22;
    sub_1005A8158(*(void *)(v19 + 48) + v14 * v12, v22, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1005A3940(v12);
    *BOOL v17 = v24;
    swift_bridgeObjectRelease();
    uint64_t v16 = 0;
    uint64_t v5 = v21;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
}

uint64_t sub_1005A2C60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::Int v8 = (uint64_t *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = v2;
  uint64_t v9 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  sub_1003152B0();
  Swift::Int v10 = Hasher._finalize()();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v21 = v5;
    uint64_t v22 = a2;
    uint64_t v13 = ~v11;
    uint64_t v14 = *(void *)(v6 + 72);
    while (1)
    {
      sub_1005A80F0(*(void *)(v9 + 48) + v14 * v12, (uint64_t)v8, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      char v15 = sub_10031D658(v8, a1);
      sub_10031C1C0((uint64_t)v8, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      if (v15) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v13;
      if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = 1;
        uint64_t v5 = v21;
        a2 = v22;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    BOOL v17 = v23;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v17;
    uint64_t v24 = *v17;
    *BOOL v17 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10059E5D0(type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint, &qword_100979E80, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
      uint64_t v19 = v24;
    }
    a2 = v22;
    sub_1005A8158(*(void *)(v19 + 48) + v14 * v12, v22, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1005A3F58(v12, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint, (void (*)(char *))sub_1003152B0, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    *BOOL v17 = v24;
    swift_bridgeObjectRelease();
    uint64_t v16 = 0;
    uint64_t v5 = v21;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
}

uint64_t sub_1005A2F54()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = __CocoaSet.count.getter();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = sub_10059855C(v3, v2);
  Swift::Int v16 = v4;
  Swift::Int v5 = *(void *)(v4 + 40);
  swift_retain();
  Swift::Int v6 = NSObject._rawHashValue(seed:)(v5);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    type metadata accessor for SDAirDropSendConnection(0);
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
    char v10 = static NSObject.== infix(_:_:)();

    if (v10)
    {
LABEL_6:
      swift_release();
      uint64_t v14 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
      sub_1005A379C(v8);
      if (static NSObject.== infix(_:_:)())
      {
        Swift::Int *v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v11;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
        char v13 = static NSObject.== infix(_:_:)();

        if (v13) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1005A30E0(int64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::Int v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v35 = result;
    swift_retain();
    uint64_t v12 = _HashTable.previousHole(before:)();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (v12 + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v13 = v4 + 16;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      Swift::Int v16 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v35;
      do
      {
        uint64_t v18 = v8;
        uint64_t v19 = v15;
        int64_t v20 = v15 * v10;
        v32(v6, *(void *)(v17 + 48) + v15 * v10, v3);
        sub_1005A81E8(&qword_10096C4C8, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v21 = dispatch thunk of Hashable._rawHashValue(seed:)();
        (*v16)(v6, v3);
        unint64_t v22 = v21 & v11;
        if (a1 >= (uint64_t)v33)
        {
          if (v22 < v33 || a1 < (uint64_t)v22)
          {
LABEL_4:
            uint64_t v8 = v18;
            uint64_t v15 = v19;
            uint64_t v17 = v35;
            goto LABEL_5;
          }
        }
        else if (v22 < v33 && a1 < (uint64_t)v22)
        {
          goto LABEL_4;
        }
        uint64_t v17 = v35;
        int64_t v25 = v19 * a1;
        uint64_t v8 = v18;
        if (v19 * a1 < v20
          || (uint64_t v15 = v19, *(void *)(v35 + 48) + v19 * a1 >= (unint64_t)(*(void *)(v35 + 48) + v20 + v19)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v10;
        if (v25 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v17 = v35;
          uint64_t v15 = v19;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

unint64_t sub_1005A33FC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v10 = Hasher._finalize()();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1005A35C4(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v6);
        uint64_t v11 = *v10;
        unint64_t v12 = v10[1];
        Hasher.init(_seed:)();
        sub_10025ADCC(v11, v12);
        Data.hash(into:)();
        Swift::Int v13 = Hasher._finalize()();
        sub_100250CC4(v11, v12);
        unint64_t v14 = v13 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v14 < v9) {
            goto LABEL_5;
          }
        }
        else if (v14 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v14)
        {
LABEL_11:
          uint64_t v15 = *(void *)(v3 + 48);
          BOOL v16 = (_OWORD *)(v15 + 16 * v2);
          uint64_t v17 = (_OWORD *)(v15 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v16 >= v17 + 1))
          {
            *BOOL v16 = *v17;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1005A379C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(v3 + 40);
        id v11 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v10);

        Swift::Int v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(v3 + 48);
            uint64_t v17 = (void *)(v16 + 8 * v2);
            uint64_t v18 = (void *)(v16 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v17 >= v18 + 1))
            {
              *uint64_t v17 = *v18;
              int64_t v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1005A3940(unint64_t a1)
{
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0);
  __chkstk_darwin(v3);
  uint64_t v43 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v45 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v44 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  uint64_t v9 = __chkstk_darwin(v50);
  id v11 = (void **)((char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  unint64_t v14 = (char *)&v41 - v13;
  int v42 = v1;
  uint64_t result = *v1;
  uint64_t v16 = *v1 + 56;
  uint64_t v17 = -1 << *(unsigned char *)(result + 32);
  unint64_t v18 = (a1 + 1) & ~v17;
  if (((1 << v18) & *(void *)(v16 + 8 * (v18 >> 6))) != 0)
  {
    uint64_t v41 = v12;
    uint64_t v19 = ~v17;
    uint64_t v48 = result;
    swift_retain();
    int64_t v20 = a1;
    uint64_t v21 = _HashTable.previousHole(before:)();
    if ((*(void *)(v16 + 8 * (v18 >> 6)) & (1 << v18)) != 0)
    {
      unint64_t v46 = (v21 + 1) & v19;
      uint64_t v47 = v16;
      uint64_t v22 = *(void *)(v41 + 72);
      uint64_t v23 = (uint64_t)v43;
      uint64_t v24 = v48;
      uint64_t v49 = v19;
      while (1)
      {
        uint64_t v26 = v22;
        int64_t v27 = v22 * v18;
        sub_1005A80F0(*(void *)(v24 + 48) + v22 * v18, (uint64_t)v14, type metadata accessor for SDAirDropDiscoveredEndpoint);
        Hasher.init(_seed:)();
        sub_1005A80F0((uint64_t)v14, (uint64_t)v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v28 = v45;
            sub_1005A8158((uint64_t)v11, v45, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
            Hasher._combine(_:)(1uLL);
            sub_1003152B0();
            uint64_t v29 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint;
            goto LABEL_10;
          case 2u:
            sub_1005A8158((uint64_t)v11, v23, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
            Hasher._combine(_:)(2uLL);
            Data.hash(into:)();
            type metadata accessor for UUID();
            sub_1005A81E8(&qword_10096C4C8, (void (*)(uint64_t))&type metadata accessor for UUID);
            dispatch thunk of Hashable.hash(into:)();
            if (*(void *)(v23 + *(int *)(v3 + 28) + 8))
            {
              Hasher._combine(_:)(1u);
              swift_bridgeObjectRetain();
              uint64_t v23 = (uint64_t)v43;
              String.hash(into:)();
              swift_bridgeObjectRelease();
            }
            else
            {
              Hasher._combine(_:)(0);
            }
            Hasher._combine(_:)(*(unsigned char *)(v23 + *(int *)(v3 + 32)));
            uint64_t v30 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint;
            uint64_t v31 = v23;
            goto LABEL_16;
          case 3u:
            uint64_t v32 = *v11;
            Hasher._combine(_:)(3uLL);
            id v33 = v32;
            NSObject.hash(into:)();

            goto LABEL_17;
          default:
            uint64_t v28 = v44;
            sub_1005A8158((uint64_t)v11, v44, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
            Hasher._combine(_:)(0);
            sub_100314FE0();
            uint64_t v29 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint;
LABEL_10:
            uint64_t v30 = v29;
            uint64_t v31 = v28;
LABEL_16:
            sub_10031C1C0(v31, v30);
LABEL_17:
            uint64_t v24 = v48;
            Swift::Int v34 = Hasher._finalize()();
            sub_10031C1C0((uint64_t)v14, type metadata accessor for SDAirDropDiscoveredEndpoint);
            uint64_t v25 = v49;
            unint64_t v35 = v34 & v49;
            if (v20 >= (uint64_t)v46)
            {
              uint64_t v16 = v47;
              uint64_t v22 = v26;
              if (v35 < v46) {
                goto LABEL_6;
              }
LABEL_21:
              if (v20 < (uint64_t)v35) {
                goto LABEL_6;
              }
              goto LABEL_22;
            }
            uint64_t v16 = v47;
            uint64_t v22 = v26;
            if (v35 < v46) {
              goto LABEL_21;
            }
LABEL_22:
            int64_t v36 = v22 * v20;
            if (v22 * v20 < v27
              || *(void *)(v24 + 48) + v22 * v20 >= (unint64_t)(*(void *)(v24 + 48) + v27 + v22))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_5:
              uint64_t v22 = v26;
              uint64_t v25 = v49;
              int64_t v20 = v18;
              goto LABEL_6;
            }
            int64_t v20 = v18;
            if (v36 != v27)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_5;
            }
LABEL_6:
            unint64_t v18 = (v18 + 1) & v25;
            if (((*(void *)(v16 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
              goto LABEL_27;
            }
            break;
        }
      }
    }
LABEL_27:
    *(void *)(v16 + (((unint64_t)v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v20) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v16 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v37 = *v42;
  uint64_t v38 = *(void *)(*v42 + 16);
  BOOL v39 = __OFSUB__(v38, 1);
  uint64_t v40 = v38 - 1;
  if (v39)
  {
    __break(1u);
    JUMPOUT(0x1005A3F48);
  }
  *(void *)(v37 + 16) = v40;
  ++*(_DWORD *)(v37 + 36);
  return result;
}

uint64_t sub_1005A3F58(unint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), void (*a4)(char *), uint64_t (*a5)(void))
{
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  uint64_t v29 = a3;
  uint64_t v28 = a2(0);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t result = __chkstk_darwin(v28);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = *v5;
  uint64_t v12 = *v5 + 56;
  uint64_t v13 = -1 << *(unsigned char *)(*v5 + 32);
  unint64_t v14 = (a1 + 1) & ~v13;
  if (((1 << v14) & *(void *)(v12 + 8 * (v14 >> 6))) != 0)
  {
    int64_t v27 = v5;
    uint64_t v15 = ~v13;
    swift_retain();
    uint64_t v16 = _HashTable.previousHole(before:)();
    if ((*(void *)(v12 + 8 * (v14 >> 6)) & (1 << v14)) != 0)
    {
      unint64_t v17 = (v16 + 1) & v15;
      uint64_t v18 = *(void *)(v7 + 72);
      while (1)
      {
        int64_t v19 = v18 * v14;
        sub_1005A80F0(*(void *)(v11 + 48) + v18 * v14, (uint64_t)v10, v29);
        Hasher.init(_seed:)();
        v30(v32);
        Swift::Int v20 = Hasher._finalize()();
        sub_10031C1C0((uint64_t)v10, v31);
        unint64_t v21 = v20 & v15;
        if ((uint64_t)a1 >= (uint64_t)v17) {
          break;
        }
        if (v21 < v17) {
          goto LABEL_11;
        }
LABEL_12:
        unint64_t v22 = v18 * a1;
        if ((uint64_t)(v18 * a1) < v19 || *(void *)(v11 + 48) + v18 * a1 >= *(void *)(v11 + 48) + v19 + v18)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v14;
          if (v22 == v19) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v14;
LABEL_6:
        unint64_t v14 = (v14 + 1) & v15;
        if (((*(void *)(v12 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          goto LABEL_16;
        }
      }
      if (v21 < v17) {
        goto LABEL_6;
      }
LABEL_11:
      if ((uint64_t)a1 < (uint64_t)v21) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_16:
    *(void *)(v12 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v5 = v27;
  }
  else
  {
    *(void *)(v12 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v23 = *v5;
  uint64_t v24 = *(void *)(*v5 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v23 + 16) = v26;
    ++*(_DWORD *)(v23 + 36);
  }
  return result;
}

uint64_t sub_1005A41E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v22 < v5) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v8 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = v23 + v7;
    if (!__OFADD__(v23, v7)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v4 >> 62) {
    goto LABEL_32;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 + v7;
  if (__OFADD__(v9, v7)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v11;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v11 & 0x8000000000000000) != 0
    || (v11 & 0x4000000000000000) != 0
    || (uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8, v10 > *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v11 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v4 = v11;
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  unint64_t v14 = (void *)(v13 + 32 + 8 * v6);
  sub_10000B740(0, &qword_1009700A8);
  swift_arrayDestroy();
  if (v7)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v16 = v24 - v5;
      if (!__OFSUB__(v24, v5))
      {
LABEL_17:
        if (v16 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        unint64_t v17 = (char *)(v14 + 1);
        uint64_t v18 = (char *)(v13 + 32 + 8 * v5);
        if (v14 + 1 != (void *)v18 || v17 >= &v18[8 * v16]) {
          memmove(v17, v18, 8 * v16);
        }
        if (!(v11 >> 62))
        {
          uint64_t v19 = *(void *)(v13 + 16);
          uint64_t v20 = v19 + v7;
          if (!__OFADD__(v19, v7))
          {
LABEL_23:
            *(void *)(v13 + 16) = v20;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v20 = v25 + v7;
        if (!__OFADD__(v25, v7)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v15 = *(void *)(v13 + 16);
      uint64_t v16 = v15 - v5;
      if (!__OFSUB__(v15, v5)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  *unint64_t v14 = v3;

  return specialized Array._endMutation()();
}

char *sub_1005A44E0(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    uint64_t v5 = sub_10025334C(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  unint64_t v14 = &v5[a1 + 4];
  sub_10000A844((uint64_t *)&unk_10096B2A0);
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v16 = v5[2];
  BOOL v17 = __OFSUB__(v16, a2);
  uint64_t v18 = v16 - a2;
  if (v17) {
    goto LABEL_26;
  }
  if ((v18 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v14 + 1);
    uint64_t v19 = &v5[a2 + 4];
    if (v14 + 1 != v19 || result >= (char *)&v19[v18]) {
      uint64_t result = (char *)memmove(result, v19, 8 * v18);
    }
    uint64_t v20 = v5[2];
    BOOL v17 = __OFADD__(v20, v9);
    uint64_t v21 = v20 + v9;
    if (!v17)
    {
      v5[2] = v21;
LABEL_20:
      *unint64_t v14 = a3;
      *(void *)uint64_t v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unsigned char *sub_1005A4668@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_1004EC63C(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_1005A522C((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_1005A52A8((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

void (*sub_1005A46E0(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1005A4E80(v6);
  v6[10] = sub_1005A4928(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1005A478C;
}

void sub_1005A478C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  int64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);

  free(v1);
}

void (*sub_1005A4800(void *a1, uint64_t a2, unint64_t a3))(uint64_t a1)
{
  uint64_t v6 = malloc(0x60uLL);
  *a1 = v6;
  v6[8] = a2;
  v6[9] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10025ADCC(a2, a3);
  v6[10] = sub_1005A4EB0(v6);
  v6[11] = sub_1005A4C98(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1005A48B0;
}

void sub_1005A48B0(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  int64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 80);
  uint64_t v4 = *(void *)(*(void *)a1 + 64);
  unint64_t v3 = *(void *)(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 88))();
  sub_100250CC4(v4, v3);
  v2(v1, 0);

  free(v1);
}

void (*sub_1005A4928(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  unint64_t v5 = v4;
  int64_t v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[1] = a3;
  v10[2] = v4;
  *int64_t v10 = a2;
  uint64_t v11 = sub_10000A844((uint64_t *)&unk_100974F20);
  uint64_t v12 = malloc(*(void *)(*(void *)(v11 - 8) + 64));
  v10[3] = v12;
  uint64_t v13 = *v4;
  uint64_t v15 = sub_100583C80(a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t))&String.hash(into:), (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_100584194);
  *((unsigned char *)v10 + 40) = v14 & 1;
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    char v19 = v14;
    uint64_t v20 = *(void *)(v13 + 24);
    if (v20 >= v18 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v15;
      if (v19)
      {
LABEL_8:
        uint64_t v21 = *(void *)(*v5 + 56);
        uint64_t v22 = type metadata accessor for RegistrationState(0);
        uint64_t v23 = *(void *)(v22 - 8);
        sub_1005A8158(v21 + *(void *)(v23 + 72) * v15, (uint64_t)v12, type metadata accessor for RegistrationState);
        uint64_t v24 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v12, v24, 1, v22);
        return sub_1005A4C34;
      }
LABEL_11:
      uint64_t v22 = type metadata accessor for RegistrationState(0);
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = 1;
      goto LABEL_12;
    }
    if (v20 >= v18 && (a4 & 1) == 0)
    {
      sub_10058D8A0(type metadata accessor for RegistrationState, &qword_10096AB20, type metadata accessor for RegistrationState, type metadata accessor for RegistrationState);
      goto LABEL_7;
    }
    sub_100587140(v18, a4 & 1, type metadata accessor for RegistrationState, &qword_10096AB20, type metadata accessor for RegistrationState, type metadata accessor for RegistrationState);
    uint64_t v25 = sub_100583C80(a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t))&String.hash(into:), (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_100584194);
    if ((v19 & 1) == (v26 & 1))
    {
      uint64_t v15 = v25;
      v10[4] = v25;
      if (v19) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1005A4C34(uint64_t **a1)
{
  uint64_t v1 = *a1;
  int64_t v2 = (void *)(*a1)[3];
  sub_1005A4EEC((uint64_t)v2, *((unsigned char *)*a1 + 40), (uint64_t *)(*a1)[2], (*a1)[4], **a1, (*a1)[1]);
  sub_10000A7E8((uint64_t)v2, (uint64_t *)&unk_100974F20);
  free(v2);

  free(v1);
}

void (*sub_1005A4C98(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  unint64_t v5 = v4;
  int64_t v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v4;
  v10[1] = a2;
  uint64_t v11 = *v4;
  uint64_t v13 = sub_100583C80(a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t))&Data.hash(into:), (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_100584670);
  *((unsigned char *)v10 + 40) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*(void *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *int64_t v10 = v19;
        return sub_1005A4E30;
      }
LABEL_11:
      uint64_t v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_10058FE04();
      goto LABEL_7;
    }
    sub_10058AFF0(v16, a4 & 1);
    uint64_t v20 = sub_100583C80(a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t))&Data.hash(into:), (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_100584670);
    if ((v17 & 1) == (v21 & 1))
    {
      uint64_t v13 = v20;
      v10[4] = v20;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1005A4E30(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_1005A5150(*a1, *((unsigned char *)*a1 + 40), (uint64_t *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease();

  free(v1);
}

uint64_t (*sub_1005A4E80(void *a1))()
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_1005A8230;
}

uint64_t (*sub_1005A4EB0(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_1005A4EE0;
}

uint64_t sub_1005A4EE0(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

unint64_t sub_1005A4EEC(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v10 = sub_10000A844((uint64_t *)&unk_100974F20);
  __chkstk_darwin(v10 - 8);
  char v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for RegistrationState(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  char v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v22 - v18;
  sub_10024A330(a1, (uint64_t)v12, (uint64_t *)&unk_100974F20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    unint64_t result = sub_10000A7E8((uint64_t)v12, (uint64_t *)&unk_100974F20);
    if (a2)
    {
      swift_arrayDestroy();
      return sub_1002AC124(a4, *a3);
    }
  }
  else
  {
    sub_1005A8158((uint64_t)v12, (uint64_t)v19, type metadata accessor for RegistrationState);
    char v21 = (void *)*a3;
    if (a2)
    {
      return sub_1005A8158((uint64_t)v19, v21[7] + *(void *)(v14 + 72) * a4, type metadata accessor for RegistrationState);
    }
    else
    {
      sub_1005A8158((uint64_t)v19, (uint64_t)v17, type metadata accessor for RegistrationState);
      sub_100595060(a4, v22, v23, (uint64_t)v17, v21, type metadata accessor for RegistrationState, type metadata accessor for RegistrationState);
      return swift_bridgeObjectRetain();
    }
  }
  return result;
}

uint64_t *sub_1005A5150(uint64_t *result, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8 = *result;
  if (*result)
  {
    uint64_t v9 = (void *)*a3;
    if (a2)
    {
      *(void *)(v9[7] + 8 * a4) = v8;
    }
    else
    {
      v9[(a4 >> 6) + 8] |= 1 << a4;
      uint64_t v10 = (uint64_t *)(v9[6] + 16 * a4);
      *uint64_t v10 = a5;
      v10[1] = a6;
      *(void *)(v9[7] + 8 * a4) = v8;
      uint64_t v11 = v9[2];
      BOOL v12 = __OFADD__(v11, 1);
      uint64_t v13 = v11 + 1;
      if (v12)
      {
        __break(1u);
        return result;
      }
      v9[2] = v13;
      sub_10025ADCC(a5, a6);
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_1002ACC64(a4, *a3);
  }

  return (uint64_t *)swift_bridgeObjectRetain();
}

uint64_t sub_1005A522C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  type metadata accessor for __DataStorage();
  swift_allocObject();
  uint64_t result = __DataStorage.init(bytes:length:)();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for Data.RangeReference();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1005A52A8(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  type metadata accessor for __DataStorage();
  swift_allocObject();
  uint64_t result = __DataStorage.init(bytes:length:)();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1005A532C(uint64_t a1)
{
  uint64_t v9 = sub_10000A844(&qword_100979C18);
  unint64_t v10 = sub_1005A7384();
  v8[0] = a1;
  uint64_t v2 = sub_10026BB6C(v8, v9);
  unint64_t v3 = (unsigned char *)(*v2 + 32);
  uint64_t v4 = &v3[*(void *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_1005A4668(v3, v4, &v7);
  uint64_t v5 = v7;
  sub_10024D338((uint64_t)v8);
  return v5;
}

uint64_t sub_1005A53C8(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10025ADCC(a1, a2);
  if (qword_100969FD0 != -1) {
    uint64_t v5 = swift_once();
  }
  LOBYTE(v19) = byte_100994908;
  __chkstk_darwin(v5);
  *(&v19 - 2) = (uint64_t)&v19;
  sub_10025ADCC(a1, a2);
  uint64_t v6 = sub_100582D78(1, 0, (uint64_t (*)(uint64_t *))sub_1005A81C0, (unint64_t)(&v19 - 4), a1, a2);
  uint64_t result = sub_100250CC4(a1, a2);
  if (v6[2])
  {
    uint64_t v8 = v6[4];
    unint64_t v9 = v6[5];
    uint64_t v19 = v8;
    unint64_t v20 = v9;
    sub_10025ADCC(v8, v9);
    static String.Encoding.utf8.getter();
    sub_1003CEFBC();
    uint64_t v10 = String.init<A>(bytes:encoding:)();
    uint64_t v12 = v11;
    uint64_t result = sub_100250CC4(v8, v9);
    if (!v12)
    {
      char v17 = 3;
      goto LABEL_9;
    }
    if (v6[2] >= 2uLL)
    {
      uint64_t v13 = v6[6];
      unint64_t v14 = v6[7];
      sub_10025ADCC(v13, v14);
      swift_bridgeObjectRelease();
      uint64_t v19 = v13;
      unint64_t v20 = v14;
      static String.Encoding.utf8.getter();
      String.init<A>(bytes:encoding:)();
      uint64_t v16 = v15;
      sub_100250CC4(v13, v14);
      if (v16) {
        return v10;
      }
      char v17 = 4;
LABEL_9:
      swift_bridgeObjectRelease();
      sub_1005676DC();
      swift_allocError();
      *uint64_t v18 = v17;
      swift_willThrow();
      return v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1005A5638(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_100253C50(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(type metadata accessor for Date() - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005A5820(uint64_t a1, uint64_t a2)
{
  return sub_1005A58A0(a1, a2, (uint64_t (*)(void))sub_100253DE8, &qword_10096B3A8);
}

uint64_t sub_1005A5840(uint64_t a1, uint64_t a2)
{
  return sub_1005A58A0(a1, a2, (uint64_t (*)(void))sub_100253DD4, &qword_10096B3B8);
}

uint64_t sub_1005A5860(uint64_t a1, uint64_t a2)
{
  return sub_1005A58A0(a1, a2, (uint64_t (*)(void))sub_100253C3C, (uint64_t *)&unk_10096B410);
}

uint64_t sub_1005A5880(uint64_t a1, uint64_t a2)
{
  return sub_1005A58A0(a1, a2, (uint64_t (*)(void))sub_100253AF8, &qword_10096B400);
}

uint64_t sub_1005A58A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t *a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v6 = *v4;
  uint64_t v7 = *(void *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v10 = a1 - a2;
  if (__OFSUB__(0, v9))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v7 - v9 > *(void *)(v6 + 24) >> 1) {
    uint64_t v6 = a3();
  }
  sub_10000A844(a4);
  uint64_t result = swift_arrayDestroy();
  if (!v9) {
    goto LABEL_17;
  }
  uint64_t v14 = *(void *)(v6 + 16);
  BOOL v15 = __OFSUB__(v14, a2);
  uint64_t v16 = v14 - a2;
  if (v15) {
    goto LABEL_23;
  }
  if ((v16 & 0x8000000000000000) == 0)
  {
    char v17 = (const void *)(v6 + 32 + 40 * a2);
    if (a1 != a2 || v6 + 32 + 40 * a1 >= (unint64_t)v17 + 40 * v16) {
      uint64_t result = (uint64_t)memmove((void *)(v6 + 32 + 40 * a1), v17, 40 * v16);
    }
    uint64_t v18 = *(void *)(v6 + 16);
    BOOL v15 = __OFADD__(v18, v10);
    uint64_t v19 = v18 - v9;
    if (!v15)
    {
      *(void *)(v6 + 16) = v19;
LABEL_17:
      *unint64_t v4 = v6;
      return result;
    }
    goto LABEL_24;
  }
LABEL_25:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005A5A30(uint64_t a1, uint64_t a2)
{
  return sub_1005A5D98(a1, a2, (void (*)(void))type metadata accessor for SDTempPairingConnection);
}

uint64_t sub_1005A5A48(uint64_t a1, uint64_t a2)
{
  return sub_1005A5A5C(a1, a2, &qword_100979EB8);
}

uint64_t sub_1005A5A5C(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v3 = a2;
    uint64_t v5 = a1;
    unint64_t v7 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v15 < v3) {
    goto LABEL_15;
  }
LABEL_4:
  uint64_t v8 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v9 = v5 - v3;
  if (__OFSUB__(0, v8))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v11 = v16 + v27;
    if (!__OFADD__(v16, v27)) {
      goto LABEL_8;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v7 = *v4;
  uint64_t v27 = v5 - v3;
  uint64_t v28 = v5;
  if (*v4 >> 62) {
    goto LABEL_18;
  }
  uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v11 = v10 - v8;
  if (__OFADD__(v10, v9)) {
    goto LABEL_20;
  }
LABEL_8:
  unint64_t v7 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v4 = v7;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
    {
      uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
      if (v11 <= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
        uint64_t v14 = v6;
        goto LABEL_24;
      }
    }
  }
LABEL_21:
  uint64_t v14 = v6;
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  swift_bridgeObjectRelease();
  *unint64_t v4 = v7;
  uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_24:
  char v17 = (char *)(v13 + 32 + 8 * v28);
  sub_10000B740(0, v14);
  swift_arrayDestroy();
  uint64_t v18 = v27;
  if (v27)
  {
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v18 = v27;
      uint64_t v20 = v25 - v3;
      if (!__OFSUB__(v25, v3))
      {
LABEL_27:
        if (v20 < 0)
        {
LABEL_43:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v21 = (char *)(v13 + 32 + 8 * v3);
        if (v28 != v3 || v17 >= &v21[8 * v20])
        {
          memmove(v17, v21, 8 * v20);
          uint64_t v18 = v27;
        }
        if (!(v7 >> 62))
        {
          uint64_t v22 = *(void *)(v13 + 16);
          uint64_t v23 = v22 + v18;
          if (!__OFADD__(v22, v18))
          {
LABEL_33:
            *(void *)(v13 + 16) = v23;
            goto LABEL_34;
          }
          goto LABEL_42;
        }
LABEL_40:
        swift_bridgeObjectRetain();
        uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v23 = v26 + v27;
        if (!__OFADD__(v26, v27)) {
          goto LABEL_33;
        }
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
    }
    else
    {
      uint64_t v19 = *(void *)(v13 + 16);
      uint64_t v20 = v19 - v3;
      if (!__OFSUB__(v19, v3)) {
        goto LABEL_27;
      }
    }
    __break(1u);
    goto LABEL_40;
  }
LABEL_34:

  return specialized Array._endMutation()();
}

uint64_t sub_1005A5D80(uint64_t a1, uint64_t a2)
{
  return sub_1005A5D98(a1, a2, (void (*)(void))type metadata accessor for IncomingAirDropAlert);
}

uint64_t sub_1005A5D98(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v3 = a2;
    uint64_t v5 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v20 < v3) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v8 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = v5 - v3;
  if (__OFSUB__(0, v8))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = v21 + v7;
    if (!__OFADD__(v21, v7)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v4 >> 62) {
    goto LABEL_32;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 - v8;
  if (__OFADD__(v9, v7)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v4 = v11;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v11 & 0x8000000000000000) != 0
    || (v11 & 0x4000000000000000) != 0
    || (uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8, v10 > *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v11 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *unint64_t v4 = v11;
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  v6(0);
  swift_arrayDestroy();
  if (v7)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v15 = v22 - v3;
      if (!__OFSUB__(v22, v3))
      {
LABEL_17:
        if (v15 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v16 = (const void *)(v13 + 32 + 8 * v3);
        if (v5 != v3 || v13 + 32 + 8 * v5 >= (unint64_t)v16 + 8 * v15) {
          memmove((void *)(v13 + 32 + 8 * v5), v16, 8 * v15);
        }
        if (!(v11 >> 62))
        {
          uint64_t v17 = *(void *)(v13 + 16);
          uint64_t v18 = v17 + v7;
          if (!__OFADD__(v17, v7))
          {
LABEL_23:
            *(void *)(v13 + 16) = v18;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v18 = v23 + v7;
        if (!__OFADD__(v23, v7)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v14 = *(void *)(v13 + 16);
      uint64_t v15 = v14 - v3;
      if (!__OFSUB__(v14, v3)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:

  return specialized Array._endMutation()();
}

BOOL _s16DaemoniOSLibrary21SDAirDropHashStoreCDBC7isEmptySbvg_0()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  unint64_t v4 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)v39 - v6;
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)v39 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v39 - v11;
  id v13 = sub_1001B2B24();
  if (!v13) {
    __break(1u);
  }
  uint64_t v14 = v13;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  URL.init(fileURLWithPath:)();
  swift_bridgeObjectRelease();
  URL.appendingPathComponent(_:)();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15(v7, v0);
  URL.appendingPathComponent(_:)();
  URL.appendingPathExtension(_:)();
  v15(v4, v0);
  v15(v12, v0);
  URL.path.getter();
  v15(v10, v0);
  uint64_t v16 = self;
  id v17 = [v16 defaultManager];
  NSString v18 = String._bridgeToObjectiveC()();
  LODWORD(v14) = [v17 fileExistsAtPath:v18];

  if (v14)
  {
    id v19 = [v16 defaultManager];
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    *(void *)&long long v40 = 0;
    id v21 = [v19 attributesOfItemAtPath:v20 error:&v40];

    uint64_t v22 = (void *)v40;
    if (v21)
    {
      type metadata accessor for FileAttributeKey(0);
      sub_1005A81E8(&qword_10096AC78, type metadata accessor for FileAttributeKey);
      uint64_t v23 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
      id v24 = v22;

      if (*(void *)(v23 + 16))
      {
        uint64_t v25 = NSFileSize;
        unint64_t v26 = sub_1005836C4((uint64_t)v25);
        if (v27)
        {
          sub_10024D2D4(*(void *)(v23 + 56) + 32 * v26, (uint64_t)&v40);
        }
        else
        {
          long long v40 = 0u;
          long long v41 = 0u;
        }
      }
      else
      {
        long long v40 = 0u;
        long long v41 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v41 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v29 = v39[0];
          if (qword_100969FC8 != -1) {
            swift_once();
          }
          uint64_t v30 = type metadata accessor for Logger();
          sub_10000B47C(v30, (uint64_t)qword_100979C00);
          uint64_t v31 = Logger.logObject.getter();
          os_log_type_t v32 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v31, v32))
          {
            id v33 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)id v33 = 134217984;
            *(void *)&long long v40 = v29;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v31, v32, "HashDB size: %ld", v33, 0xCu);
            swift_slowDealloc();
          }

          return (v29 & 0xFFFFFFFFFFFFF7FFLL) == 0;
        }
      }
      else
      {
        sub_10000A7E8((uint64_t)&v40, (uint64_t *)&unk_10096AC20);
      }
    }
    else
    {
      id v28 = (id)v40;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (qword_100969FC8 != -1) {
    swift_once();
  }
  uint64_t v35 = type metadata accessor for Logger();
  sub_10000B47C(v35, (uint64_t)qword_100979C00);
  int64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v38 = 0;
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Unable to verify DB size", v38, 2u);
    swift_slowDealloc();
  }

  return 1;
}

uint64_t sub_1005A6680()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v38 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __chkstk_darwin(v1);
  os_log_type_t v37 = (char *)&v34 - v4;
  uint64_t v5 = __chkstk_darwin(v3);
  int64_t v36 = (char *)&v34 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v35 = (char *)&v34 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  Swift::Int v34 = (char *)&v34 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v34 - v11;
  unint64_t v13 = 0;
  uint64_t v15 = (void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v16 = (char *)&unk_1008D3288;
  id v17 = v35;
  do
  {
    if (v13 >= 3)
    {
      __break(1u);
LABEL_10:
      __break(1u);
    }
    BOOL v39 = v16;
    unint64_t v40 = v13;
    swift_bridgeObjectRetain();
    id v19 = sub_1001B2B24();
    if (!v19) {
      goto LABEL_10;
    }
    NSString v20 = v19;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v21 = v37;
    URL.init(fileURLWithPath:)();
    swift_bridgeObjectRelease();
    URL.appendingPathComponent(_:)();
    uint64_t v22 = *v15;
    (*v15)(v21, v0);
    uint64_t v23 = v38;
    URL.appendingPathComponent(_:)();
    uint64_t v24 = v0;
    uint64_t v25 = v36;
    URL.appendingPathExtension(_:)();
    v22(v23, v24);
    unint64_t v26 = v25;
    uint64_t v0 = v24;
    v22(v26, v24);
    char v27 = v34;
    URL.appendingPathComponent(_:)();
    v22(v17, v24);
    URL.appendingPathExtension(_:)();
    swift_bridgeObjectRelease();
    v22(v27, v24);
    id v28 = [self defaultManager];
    URL._bridgeToObjectiveC()(v29);
    uint64_t v31 = v30;
    id v41 = 0;
    LODWORD(v27) = [v28 removeItemAtURL:v30 error:&v41];

    if (v27)
    {
      id v18 = v41;
    }
    else
    {
      id v32 = v41;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
    }
    unint64_t v13 = v40 + 1;
    v22(v12, v24);
    uint64_t v16 = v39 + 16;
  }
  while (v13 != 3);
  return swift_arrayDestroy();
}

void sub_1005A6AB0()
{
  id v0 = [self defaultManager];
  NSString v1 = String._bridgeToObjectiveC()();
  unsigned __int8 v2 = [v0 fileExistsAtPath:v1];

  if ((v2 & 1) == 0)
  {
    id v3 = [objc_allocWithZone((Class)CUKeyValueStoreWriter) init];
    NSString v4 = String._bridgeToObjectiveC()();
    id v11 = 0;
    unsigned int v5 = [v3 startAtPath:v4 error:&v11];

    id v6 = v11;
    if (v5
      && (id v11 = 0,
          id v7 = v6,
          unsigned int v8 = [v3 finishAndReturnError:&v11],
          id v6 = v11,
          v8))
    {
      id v9 = v11;
    }
    else
    {
      id v10 = v6;
      _convertNSErrorToError(_:)();

      swift_willThrow();
    }
  }
}

uint64_t sub_1005A6C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 16);
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 0;
  unint64_t v8 = 0;
  while (1)
  {
    uint64_t result = v3[v7 + 4];
    if (result == a2 && v3[v7 + 5] == a3) {
      break;
    }
    uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
    if (result) {
      break;
    }
    ++v8;
    v7 += 9;
    if (v4 == v8) {
      return v4;
    }
  }
  unint64_t v11 = v8 + 1;
  if (__OFADD__(v8, 1)) {
    goto LABEL_33;
  }
  if (v11 == v4) {
    return v8;
  }
  for (uint64_t i = v7 * 8 + 171; ; i += 72)
  {
    unint64_t v14 = v3[2];
    if (v11 >= v14) {
      break;
    }
    uint64_t v15 = (char *)v3 + i;
    uint64_t result = *(void *)((char *)v3 + i - 67);
    if (result != a2 || *(void *)((char *)v3 + i - 59) != a3)
    {
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      if ((result & 1) == 0)
      {
        if (v11 != v8)
        {
          if (v8 >= v14) {
            goto LABEL_31;
          }
          uint64_t v17 = (uint64_t)&v3[9 * v8 + 4];
          uint64_t v31 = *(void *)v17;
          uint64_t v18 = *(void *)(v17 + 24);
          uint64_t v29 = *(void *)(v17 + 16);
          uint64_t v27 = *(void *)(v17 + 40);
          uint64_t v28 = *(void *)(v17 + 32);
          uint64_t v25 = *(void *)(v17 + 56);
          uint64_t v26 = *(void *)(v17 + 48);
          int v23 = *(unsigned __int16 *)(v17 + 64);
          int v24 = *(unsigned __int8 *)(v17 + 66);
          char v32 = *(unsigned char *)(v17 + 67);
          uint64_t v41 = *(void *)(v15 - 67);
          uint64_t v19 = *(void *)(v15 - 59);
          uint64_t v20 = *(void *)((char *)v3 + i - 43);
          uint64_t v38 = *(void *)((char *)v3 + i - 35);
          uint64_t v39 = *(void *)((char *)v3 + i - 51);
          uint64_t v36 = *(void *)((char *)v3 + i - 19);
          uint64_t v37 = *(void *)((char *)v3 + i - 27);
          uint64_t v35 = *(void *)((char *)v3 + i - 11);
          int v33 = *(unsigned __int16 *)((char *)v3 + i - 3);
          int v34 = *((unsigned __int8 *)v3 + i - 1);
          char v40 = *((unsigned char *)v3 + i);
          uint64_t v30 = *(void *)(v17 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v3 = sub_1002AD568(v3);
          }
          id v21 = &v3[9 * v8];
          v21[4] = v41;
          v21[5] = v19;
          v21[6] = v39;
          v21[7] = v20;
          v21[8] = v38;
          v21[9] = v37;
          v21[10] = v36;
          v21[11] = v35;
          *((unsigned char *)v21 + 98) = (v33 | (v34 << 16)) >> 16;
          *((_WORD *)v21 + 48) = v33;
          *((unsigned char *)v21 + 99) = v40;
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v11 >= v3[2]) {
            goto LABEL_32;
          }
          uint64_t v22 = (char *)v3 + i;
          *(void *)(v22 - 67) = v31;
          *(void *)(v22 - 59) = v30;
          *(void *)(v22 - 51) = v29;
          *(void *)(v22 - 43) = v18;
          *(void *)(v22 - 35) = v28;
          *(void *)(v22 - 27) = v27;
          *(void *)(v22 - 19) = v26;
          *(void *)(v22 - 11) = v25;
          *(v22 - 1) = (v23 | (v24 << 16)) >> 16;
          *(_WORD *)(v22 - 3) = v23;
          *uint64_t v22 = v32;
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          *(void *)a1 = v3;
        }
        if (__OFADD__(v8++, 1)) {
          goto LABEL_30;
        }
      }
    }
    if (++v11 == v3[2]) {
      return v8;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1005A6F28(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_10025438C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_23;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_29;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[9 * a2 + 4];
    size_t v17 = 72 * v15;
    if (72 * a1 < 72 * a2 || (&v4[9 * a1 + 4] < (void *)&v16[v17] ? (BOOL v18 = a1 == a2) : (BOOL v18 = 0), !v18)) {
      uint64_t result = (uint64_t)memmove(&v4[9 * a1 + 4], v16, v17);
    }
    uint64_t v19 = v4[2];
    BOOL v14 = __OFADD__(v19, v8);
    uint64_t v20 = v19 - v7;
    if (!v14)
    {
      v4[2] = v20;
LABEL_23:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_30;
  }
LABEL_31:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005A70B4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005A70EC()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005A7124()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1005A7174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10057FEE0(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_1005A7180(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005A7190()
{
  return swift_release();
}

void *sub_1005A7198(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  swift_bridgeObjectRetain();
  uint64_t v15 = (char *)sub_10058354C(a1, a2);
  swift_bridgeObjectRelease();
  if (qword_100969FD0 != -1) {
    swift_once();
  }
  char v16 = byte_100994908;
  swift_retain();
  size_t v17 = v15;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    size_t v17 = sub_100253724(0, *((void *)v15 + 2) + 1, 1, v15);
  }
  unint64_t v19 = *((void *)v17 + 2);
  unint64_t v18 = *((void *)v17 + 3);
  if (v19 >= v18 >> 1) {
    size_t v17 = sub_100253724((char *)(v18 > 1), v19 + 1, 1, v17);
  }
  *((void *)v17 + 2) = v19 + 1;
  v17[v19 + 32] = v16;
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_10058354C(a3, a4);
  swift_bridgeObjectRelease();
  sub_1003D4A38((uint64_t)v20);
  id v21 = sub_10045C500(a5, a6, a7, a8);
  if ((a9 & 0x1000000) == 0)
  {
    sub_10000A844(&qword_10096B300);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_10076E7A0;
    *(unsigned char *)(v22 + 32) = BYTE2(a9);
    uint64_t v23 = swift_bridgeObjectRetain();
    sub_1003D4A38(v23);
    sub_10057BAC4(a9, 2uLL, v24, v25);
  }
  return v21;
}

unint64_t sub_1005A7384()
{
  unint64_t result = qword_100979C20;
  if (!qword_100979C20)
  {
    sub_100247840(&qword_100979C18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100979C20);
  }
  return result;
}

uint64_t sub_1005A73E4(uint64_t a1, unsigned char *a2)
{
  return sub_100581468(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1005A73F0()
{
  if (*(void *)(v0 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1005A7438(uint64_t a1, uint64_t a2)
{
  return sub_1005A74F8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void))sub_100581A1C);
}

uint64_t sub_1005A7450(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1005A7498()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1005A74E0(uint64_t a1, uint64_t a2)
{
  return sub_1005A74F8(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void))sub_100582194);
}

uint64_t sub_1005A74F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void))
{
  return a3(a1, a2, *(void *)(v3 + 16), *(unsigned __int16 *)(v3 + 24) | (*(unsigned __int8 *)(v3 + 26) << 16), *(void *)(v3 + 32), *(void *)(v3 + 40));
}

uint64_t sub_1005A7518()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005A7554()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1005A759C()
{
  return sub_100582B50();
}

uint64_t sub_1005A75A8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  v28._countAndFlagsBits = a4;
  v28._object = a5;
  v27._countAndFlagsBits = a2;
  v27._object = a3;
  uint64_t v6 = type metadata accessor for String.Encoding();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v29 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100969FC8 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10000B47C(v13, (uint64_t)qword_100979C00);
  BOOL v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v30 = a1;
  v14(v12, a1, v9);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v26 = v6;
    unint64_t v18 = (uint8_t *)v17;
    v31[0] = swift_slowAlloc();
    uint64_t v25 = v7;
    *(_DWORD *)unint64_t v18 = 136315138;
    int v24 = v18 + 4;
    sub_1005A81E8((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
    v31[3] = sub_100254634(v19, v20, v31);
    uint64_t v7 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Writing hash database to: %s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v6 = v26;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  v31[0] = 0;
  v31[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(32);
  swift_bridgeObjectRelease();
  strcpy((char *)v31, "Long hashes:\n");
  HIWORD(v31[1]) = -4864;
  String.append(_:)(v27);
  v21._countAndFlagsBits = 0x682074726F68530ALL;
  v21._object = (void *)0xEF0A3A7365687361;
  String.append(_:)(v21);
  String.append(_:)(v28);
  uint64_t v22 = v29;
  static String.Encoding.utf8.getter();
  sub_10024A1FC();
  StringProtocol.write(to:atomically:encoding:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v22, v6);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for SDAirDropHashStoreCDB()
{
  return self;
}

uint64_t sub_1005A79C4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, __int16 a3@<W2>, uint64_t a4@<X8>)
{
  char v9 = Data.subscript.getter();
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v10 = (int)a1;
      uint64_t v11 = a1 >> 32;
      goto LABEL_5;
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      goto LABEL_5;
    case 3uLL:
      goto LABEL_12;
    default:
      uint64_t v10 = 0;
      uint64_t v11 = BYTE6(a2);
LABEL_5:
      if (v11 < 1 || v11 < v10)
      {
LABEL_12:
        __break(1u);
        JUMPOUT(0x1005A7AE4);
      }
      char v25 = v9;
      uint64_t v13 = Data._Representation.subscript.getter();
      unint64_t v15 = v14;
      uint64_t v16 = sub_1005A53C8(v13, v14);
      if (v4) {
        return sub_100250CC4(v13, v15);
      }
      uint64_t v21 = v16;
      uint64_t v22 = v17;
      uint64_t v23 = v18;
      uint64_t v24 = v19;
      uint64_t result = sub_100250CC4(v13, v15);
      *(_WORD *)a4 = a3;
      *(unsigned char *)(a4 + 2) = v25;
      *(void *)(a4 + 8) = v21;
      *(void *)(a4 + 16) = v22;
      *(void *)(a4 + 24) = v23;
      *(void *)(a4 + 32) = v24;
      return result;
  }
}

uint64_t sub_1005A7AF4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v10) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_56:
        __break(1u);
        goto LABEL_57;
      }
      uint64_t v10 = (int)v10;
LABEL_6:
      if (v10 != 32)
      {
        if (!v5)
        {
          uint64_t v27 = BYTE6(a2);
          goto LABEL_16;
        }
        if (v5 != 1)
        {
          uint64_t v29 = *(void *)(a1 + 16);
          uint64_t v28 = *(void *)(a1 + 24);
          BOOL v13 = __OFSUB__(v28, v29);
          uint64_t v27 = v28 - v29;
          if (!v13) {
            goto LABEL_16;
          }
LABEL_58:
          __break(1u);
          goto LABEL_59;
        }
        LODWORD(v27) = HIDWORD(a1) - a1;
        if (!__OFSUB__(HIDWORD(a1), a1))
        {
          uint64_t v27 = (int)v27;
LABEL_16:
          if (v27 != 2)
          {
LABEL_61:
            __break(1u);
            goto LABEL_62;
          }
          if (!v5)
          {
            uint64_t v30 = BYTE6(a2);
            goto LABEL_24;
          }
          if (v5 != 1)
          {
            uint64_t v32 = *(void *)(a1 + 16);
            uint64_t v31 = *(void *)(a1 + 24);
            uint64_t v30 = v31 - v32;
            if (!__OFSUB__(v31, v32)) {
              goto LABEL_23;
            }
            goto LABEL_60;
          }
          if (!__OFSUB__(HIDWORD(a1), a1))
          {
            uint64_t v30 = HIDWORD(a1) - (int)a1;
LABEL_23:
            sub_10025ADCC(a1, a2);
LABEL_24:
            if (v30 == 2)
            {
              __int16 v33 = sub_1002C8C2C(a1, a2);
              if (!v4)
              {
                __int16 v34 = v33;
                sub_100250CC4(a1, a2);
                sub_1005A79C4(a3, a4, v34, (uint64_t)&v73);
                char v35 = BYTE2(v73);
                unint64_t v37 = v74;
                uint64_t v36 = v75;
                uint64_t v39 = v76;
                uint64_t v38 = v77;
                Class isa = Data._bridgeToObjectiveC()().super.isa;
                id v41 = (id)SFHexStringForData();

                uint64_t v71 = v37;
                uint64_t v72 = v39;
                if (v41)
                {
                  uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  unint64_t v44 = v43;
                }
                else
                {
                  uint64_t v42 = 0;
                  unint64_t v44 = 0;
                }
                sub_10000A844(&qword_10096B300);
                uint64_t v52 = swift_allocObject();
                *(_OWORD *)(v52 + 16) = xmmword_10076E7A0;
                *(unsigned char *)(v52 + 32) = v35;
                uint64_t v53 = sub_1005A532C(v52);
                unint64_t v55 = v54;
                swift_bridgeObjectRelease();
                Class v56 = Data._bridgeToObjectiveC()().super.isa;
                sub_100250CC4(v53, v55);
                id v57 = (id)SFHexStringForData();

                uint64_t v78 = v38;
                if (v57)
                {
                  uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  unint64_t v60 = v59;
                }
                else
                {
                  uint64_t v58 = 0;
                  unint64_t v60 = 0;
                }
                uint64_t v73 = 0;
                unint64_t v74 = 0xE000000000000000;
                _StringGuts.grow(_:)(28);
                swift_bridgeObjectRelease();
                uint64_t v73 = 14955;
                unint64_t v74 = 0xE200000000000000;
                if (v44) {
                  uint64_t v61 = v42;
                }
                else {
                  uint64_t v61 = 0x3E3F3F3F3CLL;
                }
                if (v44) {
                  unint64_t v62 = v44;
                }
                else {
                  unint64_t v62 = 0xE500000000000000;
                }
                unint64_t v63 = v62;
                String.append(_:)(*(Swift::String *)&v61);
                swift_bridgeObjectRelease();
                v64._countAndFlagsBits = 0x3A626D6C202CLL;
                v64._object = (void *)0xE600000000000000;
                String.append(_:)(v64);
                if (v60) {
                  uint64_t v65 = v58;
                }
                else {
                  uint64_t v65 = 0x3E3F3F3F3CLL;
                }
                if (!v60) {
                  unint64_t v60 = 0xE500000000000000;
                }
                unint64_t v66 = v60;
                String.append(_:)(*(Swift::String *)&v65);
                swift_bridgeObjectRelease();
                v67._countAndFlagsBits = 0x3A646963202CLL;
                v67._object = (void *)0xE600000000000000;
                String.append(_:)(v67);
                swift_bridgeObjectRetain();
                v68._countAndFlagsBits = v71;
                v68._object = v36;
                String.append(_:)(v68);
                swift_bridgeObjectRelease();
                v69._countAndFlagsBits = 0x3A702F65202CLL;
                v69._object = (void *)0xE600000000000000;
                String.append(_:)(v69);
                uint64_t v21 = v78;
                swift_bridgeObjectRetain();
                uint64_t v51 = v72;
                goto LABEL_54;
              }
LABEL_63:
              sub_100250CC4(a1, a2);
              swift_unexpectedError();
              __break(1u);
              JUMPOUT(0x1005A7FFCLL);
            }
LABEL_62:
            __break(1u);
            goto LABEL_63;
          }
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
      uint64_t result = sub_1005A53C8(a3, a4);
      if (!v4)
      {
        uint64_t v18 = result;
        uint64_t v19 = v15;
        uint64_t v20 = v16;
        uint64_t v21 = v17;
        Class v22 = Data._bridgeToObjectiveC()().super.isa;
        id v23 = (id)SFHexStringForData();

        if (v23)
        {
          uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v26 = v25;
        }
        else
        {
          uint64_t v24 = 0;
          unint64_t v26 = 0;
        }
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease();
        uint64_t v73 = 14955;
        unint64_t v74 = 0xE200000000000000;
        if (v26) {
          uint64_t v45 = v24;
        }
        else {
          uint64_t v45 = 0x3E3F3F3F3CLL;
        }
        if (v26) {
          unint64_t v46 = v26;
        }
        else {
          unint64_t v46 = 0xE500000000000000;
        }
        unint64_t v47 = v46;
        String.append(_:)(*(Swift::String *)&v45);
        swift_bridgeObjectRelease();
        v48._countAndFlagsBits = 0x3A646963202CLL;
        v48._object = (void *)0xE600000000000000;
        String.append(_:)(v48);
        swift_bridgeObjectRetain();
        v49._countAndFlagsBits = v18;
        v49._object = v19;
        String.append(_:)(v49);
        swift_bridgeObjectRelease();
        v50._countAndFlagsBits = 0x3A702F65202CLL;
        v50._object = (void *)0xE600000000000000;
        String.append(_:)(v50);
        swift_bridgeObjectRetain();
        uint64_t v51 = v20;
LABEL_54:
        uint64_t v70 = v21;
        String.append(_:)(*(Swift::String *)&v51);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        return v73;
      }
      return result;
    case 2uLL:
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      BOOL v13 = __OFSUB__(v11, v12);
      uint64_t v10 = v11 - v12;
      if (!v13) {
        goto LABEL_6;
      }
      goto LABEL_56;
    case 3uLL:
      goto LABEL_61;
    default:
      uint64_t v10 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1005A800C(uint64_t a1, uint64_t a2)
{
  return sub_1005A5A5C(a1, a2, &qword_100979EC0);
}

uint64_t sub_1005A8020(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_10096B458);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005A8088(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005A80F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005A8158(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

BOOL sub_1005A81C0(unsigned __int8 *a1)
{
  return *a1 == **(unsigned __int8 **)(v1 + 16);
}

uint64_t sub_1005A81D8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005A81E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005A825C()
{
  id v1 = [*v0 serviceIdentifier];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1005A82C4(uint64_t a1)
{
  uint64_t v4 = *v1;
  v2[2] = v2;
  v2[7] = v2 + 15;
  v2[3] = sub_1005A83C8;
  uint64_t v5 = swift_continuation_init();
  v2[10] = _NSConcreteStackBlock;
  v2[11] = 0x40000000;
  v2[12] = sub_100336194;
  v2[13] = &unk_1008E02F0;
  v2[14] = v5;
  [v4 provisionPseudonymWithProperties:a1 completion:v2 + 10];
  return _swift_continuation_await(v2 + 2);
}

uint64_t sub_1005A83C8()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 48))
  {
    swift_willThrow();
    uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
    return v2();
  }
  else
  {
    uint64_t v4 = *(void *)(*v0 + 120);
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v1 + 8);
    return v5(v4);
  }
}

uint64_t sub_1005A8508(uint64_t a1)
{
  uint64_t v4 = *v1;
  v2[2] = v2;
  v2[7] = v2 + 15;
  v2[3] = sub_1005A860C;
  uint64_t v5 = swift_continuation_init();
  v2[10] = _NSConcreteStackBlock;
  v2[11] = 0x40000000;
  v2[12] = sub_1005A8728;
  v2[13] = &unk_1008E02D8;
  v2[14] = v5;
  [v4 revokePseudonym:a1 completion:v2 + 10];
  return _swift_continuation_await(v2 + 2);
}

uint64_t sub_1005A860C()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 48))
  {
    swift_willThrow();
    uint64_t v2 = *(uint64_t (**)(uint64_t))(v1 + 8);
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v3 = *(unsigned __int8 *)(*v0 + 120);
    uint64_t v2 = *(uint64_t (**)(uint64_t))(v1 + 8);
  }
  return v2(v3);
}

uint64_t sub_1005A8728(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_10000A844(&qword_10096BAF0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    **(unsigned char **)(*(void *)(v3 + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

id sub_1005A87DC(double a1)
{
  uint64_t v3 = *v1;
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 pseudonymPropertiesWithFeatureID:v4 expiryDurationInSeconds:a1];

  return v5;
}

uint64_t sub_1005A884C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005A88A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005A88BC);
}

uint64_t sub_1005A88C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005A88D4);
}

uint64_t _s14descr1008C9A51V15ExchangeRequestVMa(uint64_t a1)
{
  return sub_10000B93C(a1, (uint64_t *)&unk_10097A038);
}

void sub_1005A88FC()
{
  if (!qword_10097A048)
  {
    type metadata accessor for SFAirDrop.ContactInfo.Handle();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10097A048);
    }
  }
}

uint64_t *sub_1005A8954(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for SFAirDrop.TransferIdentifier();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    BOOL v13 = (uint64_t *)((char *)a1 + v9);
    unint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *BOOL v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    __dst = (char *)a1 + v16;
    uint64_t v17 = (char *)a2 + v16;
    uint64_t v18 = type metadata accessor for SFAirDrop.ContactInfo.Handle();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20(v17, 1, v18))
    {
      uint64_t v21 = sub_10000A844(&qword_1009797D0);
      memcpy(__dst, v17, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
    uint64_t v23 = a3[8];
    uint64_t v24 = (char *)a1 + v23;
    unint64_t v25 = (char *)a2 + v23;
    unint64_t v26 = *((void *)v25 + 1);
    if (v26 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    }
    else
    {
      uint64_t v27 = *(void *)v25;
      sub_10025ADCC(*(void *)v25, *((void *)v25 + 1));
      *(void *)uint64_t v24 = v27;
      *((void *)v24 + 1) = v26;
    }
    uint64_t v28 = a3[9];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    if (*(uint64_t *)((char *)a2 + v28 + 72))
    {
      uint64_t v31 = *((void *)v30 + 1);
      *(void *)uint64_t v29 = *(void *)v30;
      *((void *)v29 + 1) = v31;
      uint64_t v32 = v30 + 16;
      unint64_t v33 = *((void *)v30 + 3);
      swift_bridgeObjectRetain();
      if (v33 >> 60 == 15)
      {
        *((_OWORD *)v29 + 1) = *v32;
      }
      else
      {
        uint64_t v36 = *(void *)v32;
        sub_10025ADCC(v36, v33);
        *((void *)v29 + 2) = v36;
        *((void *)v29 + 3) = v33;
      }
      uint64_t v37 = *((void *)v30 + 4);
      unint64_t v38 = *((void *)v30 + 5);
      sub_10025ADCC(v37, v38);
      *((void *)v29 + 4) = v37;
      *((void *)v29 + 5) = v38;
      uint64_t v39 = *((void *)v30 + 6);
      unint64_t v40 = *((void *)v30 + 7);
      sub_10025ADCC(v39, v40);
      *((void *)v29 + 6) = v39;
      *((void *)v29 + 7) = v40;
      uint64_t v41 = *((void *)v30 + 9);
      *((void *)v29 + 8) = *((void *)v30 + 8);
      *((void *)v29 + 9) = v41;
      *((void *)v29 + 10) = *((void *)v30 + 10);
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v34 = *((_OWORD *)v30 + 3);
      *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
      *((_OWORD *)v29 + 3) = v34;
      *((_OWORD *)v29 + 4) = *((_OWORD *)v30 + 4);
      *((void *)v29 + 10) = *((void *)v30 + 10);
      long long v35 = *((_OWORD *)v30 + 1);
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v35;
    }
  }
  return a1;
}

uint64_t sub_1005A8C3C(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[7];
  uint64_t v6 = type metadata accessor for SFAirDrop.ContactInfo.Handle();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!result) {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v9 = (uint64_t *)(a1 + a2[8]);
  unint64_t v10 = v9[1];
  if (v10 >> 60 != 15) {
    uint64_t result = sub_100250CC4(*v9, v10);
  }
  uint64_t v11 = (void *)(a1 + a2[9]);
  if (v11[9])
  {
    swift_bridgeObjectRelease();
    unint64_t v12 = v11[3];
    if (v12 >> 60 != 15) {
      sub_100250CC4(v11[2], v12);
    }
    sub_100250CC4(v11[4], v11[5]);
    sub_100250CC4(v11[6], v11[7]);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1005A8DCC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  unint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  unint64_t v12 = (void *)(a1 + v8);
  BOOL v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *unint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  __dst = (void *)(a1 + v15);
  uint64_t v16 = (const void *)(a2 + v15);
  uint64_t v17 = type metadata accessor for SFAirDrop.ContactInfo.Handle();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19(v16, 1, v17))
  {
    uint64_t v20 = sub_10000A844(&qword_1009797D0);
    memcpy(__dst, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(__dst, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
  }
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = (uint64_t *)(a2 + v21);
  unint64_t v24 = v23[1];
  if (v24 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  }
  else
  {
    uint64_t v25 = *v23;
    sub_10025ADCC(*v23, v23[1]);
    *(void *)uint64_t v22 = v25;
    *(void *)(v22 + 8) = v24;
  }
  uint64_t v26 = a3[9];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  if (*(void *)(a2 + v26 + 72))
  {
    uint64_t v29 = *(void *)(v28 + 8);
    *(void *)uint64_t v27 = *(void *)v28;
    *(void *)(v27 + 8) = v29;
    uint64_t v30 = (_OWORD *)(v28 + 16);
    unint64_t v31 = *(void *)(v28 + 24);
    swift_bridgeObjectRetain();
    if (v31 >> 60 == 15)
    {
      *(_OWORD *)(v27 + 16) = *v30;
    }
    else
    {
      uint64_t v34 = *(void *)v30;
      sub_10025ADCC(v34, v31);
      *(void *)(v27 + 16) = v34;
      *(void *)(v27 + 24) = v31;
    }
    uint64_t v35 = *(void *)(v28 + 32);
    unint64_t v36 = *(void *)(v28 + 40);
    sub_10025ADCC(v35, v36);
    *(void *)(v27 + 32) = v35;
    *(void *)(v27 + 40) = v36;
    uint64_t v37 = *(void *)(v28 + 48);
    unint64_t v38 = *(void *)(v28 + 56);
    sub_10025ADCC(v37, v38);
    *(void *)(v27 + 48) = v37;
    *(void *)(v27 + 56) = v38;
    uint64_t v39 = *(void *)(v28 + 72);
    *(void *)(v27 + 64) = *(void *)(v28 + 64);
    *(void *)(v27 + 72) = v39;
    *(void *)(v27 + 80) = *(void *)(v28 + 80);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v32 = *(_OWORD *)(v28 + 48);
    *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
    *(_OWORD *)(v27 + 48) = v32;
    *(_OWORD *)(v27 + 64) = *(_OWORD *)(v28 + 64);
    *(void *)(v27 + 80) = *(void *)(v28 + 80);
    long long v33 = *(_OWORD *)(v28 + 16);
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    *(_OWORD *)(v27 + 16) = v33;
  }
  return a1;
}

uint64_t sub_1005A9064(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  unint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = type metadata accessor for SFAirDrop.ContactInfo.Handle();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    uint64_t v21 = sub_10000A844(&qword_1009797D0);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v14, v15, v16);
LABEL_7:
  uint64_t v22 = a3[8];
  uint64_t v23 = (uint64_t *)(a1 + v22);
  unint64_t v24 = (uint64_t *)(a2 + v22);
  unint64_t v25 = *(void *)(a2 + v22 + 8);
  if (*(void *)(a1 + v22 + 8) >> 60 == 15)
  {
    if (v25 >> 60 != 15)
    {
      uint64_t v26 = *v24;
      sub_10025ADCC(v26, v25);
      *uint64_t v23 = v26;
      v23[1] = v25;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v25 >> 60 == 15)
  {
    sub_10026F904((uint64_t)v23);
LABEL_12:
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    goto LABEL_14;
  }
  uint64_t v27 = *v24;
  sub_10025ADCC(v27, v25);
  uint64_t v28 = *v23;
  unint64_t v29 = v23[1];
  *uint64_t v23 = v27;
  v23[1] = v25;
  sub_100250CC4(v28, v29);
LABEL_14:
  uint64_t v30 = a3[9];
  unint64_t v31 = (void *)(a1 + v30);
  long long v32 = (void *)(a2 + v30);
  uint64_t v33 = *(void *)(a1 + v30 + 72);
  uint64_t v34 = *(void *)(a2 + v30 + 72);
  if (v33)
  {
    if (v34)
    {
      *unint64_t v31 = *v32;
      v31[1] = v32[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v35 = v32 + 2;
      unint64_t v36 = v32[3];
      if (v31[3] >> 60 == 15)
      {
        if (v36 >> 60 != 15)
        {
          uint64_t v37 = *v35;
          sub_10025ADCC(*v35, v32[3]);
          v31[2] = v37;
          v31[3] = v36;
LABEL_31:
          uint64_t v56 = v32[4];
          unint64_t v57 = v32[5];
          sub_10025ADCC(v56, v57);
          uint64_t v58 = v31[4];
          unint64_t v59 = v31[5];
          uint64_t v31[4] = v56;
          v31[5] = v57;
          sub_100250CC4(v58, v59);
          uint64_t v60 = v32[6];
          unint64_t v61 = v32[7];
          sub_10025ADCC(v60, v61);
          uint64_t v62 = v31[6];
          unint64_t v63 = v31[7];
          v31[6] = v60;
          v31[7] = v61;
          sub_100250CC4(v62, v63);
          v31[8] = v32[8];
          v31[9] = v32[9];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v31[10] = v32[10];
          return a1;
        }
      }
      else
      {
        if (v36 >> 60 != 15)
        {
          uint64_t v53 = *v35;
          sub_10025ADCC(*v35, v32[3]);
          uint64_t v54 = v31[2];
          unint64_t v55 = v31[3];
          v31[2] = v53;
          v31[3] = v36;
          sub_100250CC4(v54, v55);
          goto LABEL_31;
        }
        sub_10026F904((uint64_t)(v31 + 2));
      }
      *((_OWORD *)v31 + 1) = *(_OWORD *)v35;
      goto LABEL_31;
    }
    sub_1005A884C((uint64_t)v31);
    long long v40 = *((_OWORD *)v32 + 1);
    *(_OWORD *)unint64_t v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v40;
    long long v42 = *((_OWORD *)v32 + 3);
    long long v41 = *((_OWORD *)v32 + 4);
    long long v43 = *((_OWORD *)v32 + 2);
    v31[10] = v32[10];
    *((_OWORD *)v31 + 3) = v42;
    *((_OWORD *)v31 + 4) = v41;
    *((_OWORD *)v31 + 2) = v43;
  }
  else if (v34)
  {
    *unint64_t v31 = *v32;
    v31[1] = v32[1];
    unint64_t v38 = v32 + 2;
    unint64_t v39 = v32[3];
    swift_bridgeObjectRetain();
    if (v39 >> 60 == 15)
    {
      *((_OWORD *)v31 + 1) = *v38;
    }
    else
    {
      uint64_t v48 = *(void *)v38;
      sub_10025ADCC(v48, v39);
      v31[2] = v48;
      v31[3] = v39;
    }
    uint64_t v49 = v32[4];
    unint64_t v50 = v32[5];
    sub_10025ADCC(v49, v50);
    uint64_t v31[4] = v49;
    v31[5] = v50;
    uint64_t v51 = v32[6];
    unint64_t v52 = v32[7];
    sub_10025ADCC(v51, v52);
    v31[6] = v51;
    v31[7] = v52;
    v31[8] = v32[8];
    v31[9] = v32[9];
    v31[10] = v32[10];
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v44 = *((_OWORD *)v32 + 1);
    *(_OWORD *)unint64_t v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v44;
    long long v45 = *((_OWORD *)v32 + 2);
    long long v46 = *((_OWORD *)v32 + 3);
    long long v47 = *((_OWORD *)v32 + 4);
    v31[10] = v32[10];
    *((_OWORD *)v31 + 3) = v46;
    *((_OWORD *)v31 + 4) = v47;
    *((_OWORD *)v31 + 2) = v45;
  }
  return a1;
}

uint64_t sub_1005A94F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for SFAirDrop.ContactInfo.Handle();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_10000A844(&qword_1009797D0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  long long v17 = *(_OWORD *)(v16 + 48);
  *(_OWORD *)(v15 + 32) = *(_OWORD *)(v16 + 32);
  *(_OWORD *)(v15 + 48) = v17;
  *(_OWORD *)(v15 + 64) = *(_OWORD *)(v16 + 64);
  *(void *)(v15 + 80) = *(void *)(v16 + 80);
  long long v18 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v18;
  return a1;
}

uint64_t sub_1005A9698(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  long long v18 = (void *)(a1 + v17);
  int v19 = (void *)(a2 + v17);
  uint64_t v20 = type metadata accessor for SFAirDrop.ContactInfo.Handle();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    uint64_t v25 = sub_10000A844(&qword_1009797D0);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v18, v19, v20);
LABEL_7:
  uint64_t v26 = a3[8];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  unint64_t v29 = *(void *)(a1 + v26 + 8);
  if (v29 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    goto LABEL_12;
  }
  unint64_t v30 = *(void *)(v28 + 8);
  if (v30 >> 60 == 15)
  {
    sub_10026F904(v27);
    goto LABEL_10;
  }
  uint64_t v31 = *(void *)v27;
  *(void *)uint64_t v27 = *(void *)v28;
  *(void *)(v27 + 8) = v30;
  sub_100250CC4(v31, v29);
LABEL_12:
  uint64_t v32 = a3[9];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = a2 + v32;
  if (*(void *)(a1 + v32 + 72))
  {
    if (*(void *)(v34 + 72))
    {
      uint64_t v35 = *(void *)(v34 + 8);
      *uint64_t v33 = *(void *)v34;
      v33[1] = v35;
      swift_bridgeObjectRelease();
      unint64_t v36 = (void *)(v34 + 16);
      unint64_t v37 = v33[3];
      if (v37 >> 60 != 15)
      {
        unint64_t v38 = *(void *)(v34 + 24);
        if (v38 >> 60 != 15)
        {
          uint64_t v41 = v33[2];
          v33[2] = *v36;
          v33[3] = v38;
          sub_100250CC4(v41, v37);
          goto LABEL_22;
        }
        sub_10026F904((uint64_t)(v33 + 2));
      }
      *((_OWORD *)v33 + 1) = *(_OWORD *)v36;
LABEL_22:
      uint64_t v42 = v33[4];
      unint64_t v43 = v33[5];
      *((_OWORD *)v33 + 2) = *(_OWORD *)(v34 + 32);
      sub_100250CC4(v42, v43);
      uint64_t v44 = v33[6];
      unint64_t v45 = v33[7];
      *((_OWORD *)v33 + 3) = *(_OWORD *)(v34 + 48);
      sub_100250CC4(v44, v45);
      uint64_t v46 = *(void *)(v34 + 72);
      v33[8] = *(void *)(v34 + 64);
      v33[9] = v46;
      swift_bridgeObjectRelease();
      v33[10] = *(void *)(v34 + 80);
      return a1;
    }
    sub_1005A884C((uint64_t)v33);
  }
  long long v39 = *(_OWORD *)(v34 + 48);
  *((_OWORD *)v33 + 2) = *(_OWORD *)(v34 + 32);
  *((_OWORD *)v33 + 3) = v39;
  *((_OWORD *)v33 + 4) = *(_OWORD *)(v34 + 64);
  v33[10] = *(void *)(v34 + 80);
  long long v40 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  *((_OWORD *)v33 + 1) = v40;
  return a1;
}

uint64_t sub_1005A99B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005A99CC);
}

uint64_t sub_1005A99D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = sub_10000A844(&qword_1009797D0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 28);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_1005A9B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005A9B24);
}

uint64_t sub_1005A9B28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  else
  {
    uint64_t v11 = sub_10000A844(&qword_1009797D0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t _s14descr1008C9A51V16ExchangeResponseVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10097A0E0);
}

void sub_1005A9C7C()
{
  type metadata accessor for SFAirDrop.TransferIdentifier();
  if (v0 <= 0x3F)
  {
    sub_1005A88FC();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

Swift::Int sub_1005A9D64()
{
  return Hasher._finalize()();
}

Swift::Int sub_1005A9E88()
{
  return Hasher._finalize()();
}

uint64_t sub_1005A9FAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1005AA2D8(a1, a2, a3, _s14descr1008C9A51V15ExchangeRequestVMa, a4);
}

uint64_t sub_1005A9FC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1005A9FF4(_s14descr1008C9A51V16ExchangeResponseVMa, a1);
}

uint64_t sub_1005A9FDC@<X0>(uint64_t a1@<X8>)
{
  return sub_1005A9FF4(_s14descr1008C9A51V15ExchangeRequestVMa, a1);
}

uint64_t sub_1005A9FF4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A844(&qword_1009797D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SFAirDrop.ContactInfo.Handle();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v26 - v13;
  uint64_t v15 = a1(0);
  uint64_t v16 = (uint64_t *)(v2 + *(int *)(v15 + 24));
  if (v16[1])
  {
    uint64_t v17 = v15;
    uint64_t v18 = *v16;
    sub_1005AC43C(v2 + *(int *)(v15 + 28), (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_10000A7E8((uint64_t)v7, &qword_1009797D0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
      int v19 = (uint64_t *)(v2 + *(int *)(v17 + 32));
      unint64_t v20 = v19[1];
      if (v20 >> 60 != 15)
      {
        v26[1] = v18;
        uint64_t v25 = *v19;
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
        swift_bridgeObjectRetain();
        sub_100278C78(v25, v20);
        swift_bridgeObjectRetain();
        SFAirDrop.ContactInfo.init(givenName:fullName:handle:vcard:)();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
        uint64_t v21 = (unsigned int *)&enum case for SFAirDrop.ContactRequest.contact(_:);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
  }
  uint64_t v21 = (unsigned int *)&enum case for SFAirDrop.ContactRequest.notNeeded(_:);
LABEL_7:
  uint64_t v22 = *v21;
  uint64_t v23 = type metadata accessor for SFAirDrop.ContactRequest();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(a2, v22, v23);
}

uint64_t sub_1005AA2C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1005AA2D8(a1, a2, a3, _s14descr1008C9A51V16ExchangeResponseVMa, a4);
}

uint64_t sub_1005AA2D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v53 = a4;
  uint64_t v54 = a3;
  uint64_t v52 = a2;
  uint64_t v7 = sub_10000A844(&qword_1009797D0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000A844(&qword_100970BA8);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for SFAirDrop.ContactInfo();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = a1;
  SFAirDrop.ContactRequest.contact.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1005AC56C(v54);
    uint64_t v21 = type metadata accessor for SFAirDrop.ContactRequest();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v51, v21);
    sub_10000A7E8((uint64_t)v16, &qword_100970BA8);
    uint64_t v22 = (int *)v53(0);
    uint64_t v23 = a5 + v22[7];
    uint64_t v24 = type metadata accessor for SFAirDrop.ContactInfo.Handle();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(a5, v52, v10);
    uint64_t v26 = (void *)(a5 + v22[5]);
    void *v26 = 0;
    v26[1] = 0;
    uint64_t v27 = (void *)(a5 + v22[6]);
    *uint64_t v27 = 0;
    v27[1] = 0;
    *(_OWORD *)(a5 + v22[8]) = xmmword_100770AE0;
    uint64_t v28 = a5 + v22[9];
    *(void *)(v28 + 80) = 0;
    *(_OWORD *)(v28 + 48) = 0u;
    *(_OWORD *)(v28 + 64) = 0u;
    *(_OWORD *)(v28 + 16) = 0u;
    *(_OWORD *)(v28 + 32) = 0u;
    *(_OWORD *)uint64_t v28 = 0u;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    uint64_t v29 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v52, v10);
    uint64_t v30 = SFAirDrop.ContactInfo.givenName.getter();
    uint64_t v49 = v31;
    uint64_t v50 = v30;
    uint64_t v32 = SFAirDrop.ContactInfo.fullName.getter();
    uint64_t v47 = v33;
    uint64_t v48 = v32;
    SFAirDrop.ContactInfo.handle.getter();
    uint64_t v34 = type metadata accessor for SFAirDrop.ContactInfo.Handle();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v9, 0, 1, v34);
    uint64_t v35 = SFAirDrop.ContactInfo.vcard.getter();
    uint64_t v46 = v36;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v29, v10);
    uint64_t v37 = type metadata accessor for SFAirDrop.ContactRequest();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v51, v37);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a5, v13, v10);
    unint64_t v38 = (int *)v53(0);
    long long v39 = (uint64_t *)(a5 + v38[5]);
    uint64_t v40 = v49;
    *long long v39 = v50;
    v39[1] = v40;
    uint64_t v41 = (uint64_t *)(a5 + v38[6]);
    uint64_t v42 = v47;
    *uint64_t v41 = v48;
    v41[1] = v42;
    sub_10024D388((uint64_t)v9, a5 + v38[7], &qword_1009797D0);
    unint64_t v43 = (uint64_t *)(a5 + v38[8]);
    uint64_t v44 = v46;
    *unint64_t v43 = v35;
    v43[1] = v44;
    return sub_10024D388(v54, a5 + v38[9], &qword_10097A128);
  }
  return result;
}

unint64_t sub_1005AA7A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844(&qword_1009797D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SFAirDrop.ContactInfo.Handle();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s14descr1008C9A51V15ExchangeRequestVMa(0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t *)(v1 + *(int *)(v10 + 20));
  uint64_t v15 = *v13;
  uint64_t v14 = (void *)v13[1];
  sub_1005AC4A4(v1, (uint64_t)v12, _s14descr1008C9A51V15ExchangeRequestVMa);
  if (v14)
  {
    swift_bridgeObjectRetain();
    sub_1005AC50C((uint64_t)v12, _s14descr1008C9A51V15ExchangeRequestVMa);
  }
  else
  {
    uint64_t v16 = (uint64_t *)&v12[*(int *)(v9 + 24)];
    uint64_t v15 = *v16;
    uint64_t v14 = (void *)v16[1];
    swift_bridgeObjectRetain();
    sub_1005AC50C((uint64_t)v12, _s14descr1008C9A51V15ExchangeRequestVMa);
    if (!v14) {
      goto LABEL_6;
    }
  }
  sub_1005AC43C(v1 + *(int *)(v9 + 28), (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    unint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    _StringGuts.grow(_:)(45);
    swift_bridgeObjectRelease();
    unint64_t v27 = 0xD000000000000020;
    unint64_t v28 = 0x80000001007C22C0;
    type metadata accessor for SFAirDrop.TransferIdentifier();
    sub_1005AC614(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
    v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
    v21._countAndFlagsBits = 544034336;
    v21._object = (void *)0xE400000000000000;
    String.append(_:)(v21);
    v22._countAndFlagsBits = v15;
    v22._object = v14;
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    v23._countAndFlagsBits = 23328;
    v23._object = (void *)0xE200000000000000;
    String.append(_:)(v23);
    sub_1005AC614(&qword_100970CA8, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactInfo.Handle);
    v24._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v24);
    swift_bridgeObjectRelease();
    v25._countAndFlagsBits = 93;
    v25._object = (void *)0xE100000000000000;
    String.append(_:)(v25);
    unint64_t v19 = v27;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return v19;
  }
  swift_bridgeObjectRelease();
  sub_10000A7E8((uint64_t)v4, &qword_1009797D0);
LABEL_6:
  unint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  _StringGuts.grow(_:)(45);
  swift_bridgeObjectRelease();
  unint64_t v27 = 0xD000000000000020;
  unint64_t v28 = 0x80000001007C22C0;
  type metadata accessor for SFAirDrop.TransferIdentifier();
  sub_1005AC614(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
  v17._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  v18._countAndFlagsBits = 0x746E6F63206F6E20;
  v18._object = (void *)0xEB00000000746361;
  String.append(_:)(v18);
  return v27;
}

unint64_t sub_1005AAC00()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844(&qword_1009797D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SFAirDrop.ContactInfo.Handle();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s14descr1008C9A51V16ExchangeResponseVMa(0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t *)(v1 + *(int *)(v10 + 20));
  uint64_t v15 = *v13;
  uint64_t v14 = (void *)v13[1];
  sub_1005AC4A4(v1, (uint64_t)v12, _s14descr1008C9A51V16ExchangeResponseVMa);
  if (v14)
  {
    swift_bridgeObjectRetain();
    sub_1005AC50C((uint64_t)v12, _s14descr1008C9A51V16ExchangeResponseVMa);
  }
  else
  {
    uint64_t v16 = (uint64_t *)&v12[*(int *)(v9 + 24)];
    uint64_t v15 = *v16;
    uint64_t v14 = (void *)v16[1];
    swift_bridgeObjectRetain();
    sub_1005AC50C((uint64_t)v12, _s14descr1008C9A51V16ExchangeResponseVMa);
    if (!v14) {
      goto LABEL_6;
    }
  }
  sub_1005AC43C(v1 + *(int *)(v9 + 28), (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    unint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    _StringGuts.grow(_:)(46);
    swift_bridgeObjectRelease();
    unint64_t v27 = 0xD000000000000021;
    unint64_t v28 = 0x80000001007C22F0;
    type metadata accessor for SFAirDrop.TransferIdentifier();
    sub_1005AC614(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
    v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
    v21._countAndFlagsBits = 544034336;
    v21._object = (void *)0xE400000000000000;
    String.append(_:)(v21);
    v22._countAndFlagsBits = v15;
    v22._object = v14;
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    v23._countAndFlagsBits = 23328;
    v23._object = (void *)0xE200000000000000;
    String.append(_:)(v23);
    sub_1005AC614(&qword_100970CA8, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactInfo.Handle);
    v24._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v24);
    swift_bridgeObjectRelease();
    v25._countAndFlagsBits = 93;
    v25._object = (void *)0xE100000000000000;
    String.append(_:)(v25);
    unint64_t v19 = v27;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return v19;
  }
  swift_bridgeObjectRelease();
  sub_10000A7E8((uint64_t)v4, &qword_1009797D0);
LABEL_6:
  unint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  _StringGuts.grow(_:)(46);
  swift_bridgeObjectRelease();
  unint64_t v27 = 0xD000000000000021;
  unint64_t v28 = 0x80000001007C22F0;
  type metadata accessor for SFAirDrop.TransferIdentifier();
  sub_1005AC614(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
  v17._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  v18._countAndFlagsBits = 0x746E6F63206F6E20;
  v18._object = (void *)0xEB00000000746361;
  String.append(_:)(v18);
  return v27;
}

uint64_t sub_1005AB060(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1005E837C(*a1, *a2);
}

Swift::Int sub_1005AB06C()
{
  return sub_1005A9E88();
}

uint64_t sub_1005AB088(uint64_t a1)
{
  return sub_1005E95A4(a1, *v1);
}

uint64_t sub_1005AB090(uint64_t a1)
{
  return sub_1005E9CA4(a1, *v1);
}

unint64_t sub_1005AB098@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1008D32D8;
  unint64_t result = sub_1005AC9DC(*a1, v3);
  *a2 = result;
  return result;
}

unint64_t sub_1005AB0D8@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1008D32D8;
  unint64_t result = sub_1005AC9DC(a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_1005AB108(uint64_t a1)
{
  unint64_t v2 = sub_1005AC5C0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005AB144(uint64_t a1)
{
  unint64_t v2 = sub_1005AC5C0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005AB180@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = sub_10000A844(&qword_1009797D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v31 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v32 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10000A844(&qword_10097A130);
  uint64_t v30 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)_s14descr1008C9A51V15ExchangeRequestVMa(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  sub_1005AC5C0();
  uint64_t v33 = v9;
  uint64_t v13 = (uint64_t)v35;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v13) {
    return sub_10024D338((uint64_t)a1);
  }
  uint64_t v14 = (uint64_t)v5;
  uint64_t v15 = v31;
  uint64_t v35 = a1;
  LOBYTE(v36) = 0;
  sub_1005AC614(&qword_100974D28, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
  uint64_t v16 = v32;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v16, v6);
  LOBYTE(v36) = 1;
  uint64_t v17 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  Swift::String v18 = (uint64_t *)&v12[v10[5]];
  *Swift::String v18 = v17;
  v18[1] = v19;
  LOBYTE(v36) = 2;
  uint64_t v32 = 0;
  uint64_t v20 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  Swift::String v21 = (uint64_t *)&v12[v10[6]];
  *Swift::String v21 = v20;
  v21[1] = v22;
  type metadata accessor for SFAirDrop.ContactInfo.Handle();
  LOBYTE(v36) = 3;
  sub_1005AC614(&qword_10097A140, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactInfo.Handle);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_10024D388(v14, (uint64_t)&v12[v10[7]], &qword_1009797D0);
  char v42 = 4;
  sub_1002CC1F4();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  *(_OWORD *)&v12[v10[8]] = v36;
  char v42 = 5;
  sub_100579AAC();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v34);
  uint64_t v23 = v41;
  Swift::String v24 = &v12[v10[9]];
  long long v25 = v37;
  *(_OWORD *)Swift::String v24 = v36;
  *((_OWORD *)v24 + 1) = v25;
  long long v26 = v39;
  *((_OWORD *)v24 + 2) = v38;
  *((_OWORD *)v24 + 3) = v26;
  *((_OWORD *)v24 + 4) = v40;
  *((void *)v24 + 10) = v23;
  sub_1005AC4A4((uint64_t)v12, v29, _s14descr1008C9A51V15ExchangeRequestVMa);
  sub_10024D338((uint64_t)v35);
  return sub_1005AC50C((uint64_t)v12, _s14descr1008C9A51V15ExchangeRequestVMa);
}

uint64_t sub_1005AB790@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005AB180(a1, a2);
}

uint64_t sub_1005AB7A8(void *a1)
{
  return sub_1005ABAA0(a1, &qword_10097A148, (void (*)(void))sub_1005AC5C0, (uint64_t)&_s14descr1008C9A51V15ExchangeRequestV10CodingKeysON, (uint64_t)_s14descr1008C9A51V15ExchangeRequestVMa);
}

unint64_t sub_1005AB7FC@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1008D3388;
  unint64_t result = sub_1005AC9DC(*a1, v3);
  *a2 = result;
  return result;
}

void sub_1005AB834(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEA00000000004449;
  uint64_t v3 = 0x726566736E617254;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000065;
      uint64_t v3 = 0x6D614E6E65766947;
      goto LABEL_3;
    case 2:
      *a1 = 0x656D614E6C6C7546;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x656C646E6148;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x7461446472614356;
      a1[1] = 0xE900000000000061;
      break;
    case 5:
      *a1 = 0xD000000000000011;
      a1[1] = 0x80000001007B5D90;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_1005AB920()
{
  unint64_t result = 0x726566736E617254;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6D614E6E65766947;
      break;
    case 2:
      unint64_t result = 0x656D614E6C6C7546;
      break;
    case 3:
      unint64_t result = 0x656C646E6148;
      break;
    case 4:
      unint64_t result = 0x7461446472614356;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1005AB9F8@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1008D3388;
  unint64_t result = sub_1005AC9DC(a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_1005ABA28(uint64_t a1)
{
  unint64_t v2 = sub_1005AC65C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005ABA64(uint64_t a1)
{
  unint64_t v2 = sub_1005AC65C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005ABAA0(void *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  v20[0] = a5;
  uint64_t v7 = v5;
  uint64_t v9 = sub_10000A844(a2);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  a3();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v21) = 0;
  type metadata accessor for SFAirDrop.TransferIdentifier();
  sub_1005AC614(&qword_100974D38, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
  uint64_t v13 = v20[1];
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v13)
  {
    uint64_t v14 = ((uint64_t (*)(void))v20[0])(0);
    LOBYTE(v21) = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v21) = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v21) = 3;
    type metadata accessor for SFAirDrop.ContactInfo.Handle();
    sub_1005AC614(&qword_10097A150, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactInfo.Handle);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    long long v21 = *(_OWORD *)(v7 + *(int *)(v14 + 32));
    char v27 = 4;
    sub_1002CC290();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    uint64_t v15 = (long long *)(v7 + *(int *)(v14 + 36));
    uint64_t v16 = *((void *)v15 + 10);
    long long v17 = v15[1];
    long long v21 = *v15;
    long long v22 = v17;
    long long v18 = v15[3];
    long long v23 = v15[2];
    long long v24 = v18;
    long long v25 = v15[4];
    uint64_t v26 = v16;
    char v27 = 5;
    sub_100579F98();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1005ABDC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = sub_10000A844(&qword_1009797D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v31 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v32 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10000A844(&qword_10097A158);
  uint64_t v30 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)_s14descr1008C9A51V16ExchangeResponseVMa(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  sub_1005AC65C();
  uint64_t v33 = v9;
  uint64_t v13 = (uint64_t)v35;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v13) {
    return sub_10024D338((uint64_t)a1);
  }
  uint64_t v14 = (uint64_t)v5;
  uint64_t v15 = v31;
  uint64_t v35 = a1;
  LOBYTE(v36) = 0;
  sub_1005AC614(&qword_100974D28, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
  uint64_t v16 = v32;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v16, v6);
  LOBYTE(v36) = 1;
  uint64_t v17 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  long long v18 = (uint64_t *)&v12[v10[5]];
  *long long v18 = v17;
  v18[1] = v19;
  LOBYTE(v36) = 2;
  uint64_t v32 = 0;
  uint64_t v20 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  long long v21 = (uint64_t *)&v12[v10[6]];
  *long long v21 = v20;
  v21[1] = v22;
  type metadata accessor for SFAirDrop.ContactInfo.Handle();
  LOBYTE(v36) = 3;
  sub_1005AC614(&qword_10097A140, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactInfo.Handle);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_10024D388(v14, (uint64_t)&v12[v10[7]], &qword_1009797D0);
  char v42 = 4;
  sub_1002CC1F4();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  *(_OWORD *)&v12[v10[8]] = v36;
  char v42 = 5;
  sub_100579AAC();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v34);
  uint64_t v23 = v41;
  long long v24 = &v12[v10[9]];
  long long v25 = v37;
  *(_OWORD *)long long v24 = v36;
  *((_OWORD *)v24 + 1) = v25;
  long long v26 = v39;
  *((_OWORD *)v24 + 2) = v38;
  *((_OWORD *)v24 + 3) = v26;
  *((_OWORD *)v24 + 4) = v40;
  *((void *)v24 + 10) = v23;
  sub_1005AC4A4((uint64_t)v12, v29, _s14descr1008C9A51V16ExchangeResponseVMa);
  sub_10024D338((uint64_t)v35);
  return sub_1005AC50C((uint64_t)v12, _s14descr1008C9A51V16ExchangeResponseVMa);
}

uint64_t sub_1005AC3D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005ABDC0(a1, a2);
}

uint64_t sub_1005AC3E8(void *a1)
{
  return sub_1005ABAA0(a1, &qword_10097A168, (void (*)(void))sub_1005AC65C, (uint64_t)&_s14descr1008C9A51V16ExchangeResponseV10CodingKeysON, (uint64_t)_s14descr1008C9A51V16ExchangeResponseVMa);
}

uint64_t sub_1005AC43C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_1009797D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005AC4A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005AC50C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005AC56C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1005AC5C0()
{
  unint64_t result = qword_10097A138;
  if (!qword_10097A138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097A138);
  }
  return result;
}

uint64_t sub_1005AC614(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1005AC65C()
{
  unint64_t result = qword_10097A160;
  if (!qword_10097A160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097A160);
  }
  return result;
}

ValueMetadata *_s14descr1008C9A51V16ExchangeResponseV10CodingKeysOMa()
{
  return &_s14descr1008C9A51V16ExchangeResponseV10CodingKeysON;
}

unsigned char *_s14descr1008C9A51V16ExchangeResponseV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005AC794);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr1008C9A51V15ExchangeRequestV10CodingKeysOMa()
{
  return &_s14descr1008C9A51V15ExchangeRequestV10CodingKeysON;
}

unint64_t sub_1005AC7D0()
{
  unint64_t result = qword_10097A170;
  if (!qword_10097A170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097A170);
  }
  return result;
}

unint64_t sub_1005AC828()
{
  unint64_t result = qword_10097A178;
  if (!qword_10097A178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097A178);
  }
  return result;
}

unint64_t sub_1005AC880()
{
  unint64_t result = qword_10097A180;
  if (!qword_10097A180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097A180);
  }
  return result;
}

unint64_t sub_1005AC8D8()
{
  unint64_t result = qword_10097A188;
  if (!qword_10097A188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097A188);
  }
  return result;
}

unint64_t sub_1005AC930()
{
  unint64_t result = qword_10097A190;
  if (!qword_10097A190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097A190);
  }
  return result;
}

unint64_t sub_1005AC988()
{
  unint64_t result = qword_10097A198;
  if (!qword_10097A198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097A198);
  }
  return result;
}

unint64_t sub_1005AC9DC(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  unint64_t v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease();
  if (v5 >= 6) {
    return 6;
  }
  else {
    return v5;
  }
}

uint64_t sub_1005ACA28(uint64_t a1, uint64_t a2)
{
  v2[12] = a1;
  v2[13] = a2;
  uint64_t v3 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v2[14] = v3;
  v2[15] = *(void *)(v3 - 8);
  v2[16] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropReceive.Transfer();
  v2[17] = v4;
  v2[18] = *(void *)(v4 - 8);
  v2[19] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SFPlatform();
  v2[20] = v5;
  v2[21] = *(void *)(v5 - 8);
  v2[22] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferType();
  v2[23] = v6;
  v2[24] = *(void *)(v6 - 8);
  v2[25] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SFAirDropReceive.AskRequest();
  v2[26] = v7;
  v2[27] = *(void *)(v7 - 8);
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v8 = static AirDropActor.shared;
  v2[30] = static AirDropActor.shared;
  return _swift_task_switch(sub_1005ACCA4, v8, 0);
}

uint64_t sub_1005ACCA4()
{
  uint64_t v1 = v0 + 9;
  uint64_t v2 = v0[29];
  uint64_t v3 = v0[26];
  uint64_t v4 = v0[27];
  uint64_t v6 = v0[24];
  uint64_t v5 = v0[25];
  uint64_t v7 = v0[23];
  SFAirDropReceive.Transfer.askRequest.getter();
  SFAirDropReceive.AskRequest.type.getter();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v0[31] = v8;
  v0[32] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v8(v2, v3);
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v5, v7);
  if (v9 == enum case for SFAirDrop.TransferType.linksWithExchange(_:))
  {
    (*(void (**)(void, void))(v0[24] + 96))(v0[25], v0[23]);
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  if (v9 == enum case for SFAirDrop.TransferType.filesWithExchange(_:))
  {
    (*(void (**)(void, void))(v0[24] + 96))(v0[25], v0[23]);
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  if (v9 == enum case for SFAirDrop.TransferType.exchange(_:))
  {
    (*(void (**)(void, void))(v0[24] + 96))(v0[25], v0[23]);
    swift_bridgeObjectRelease();
    if (qword_100969FF0 != -1) {
      swift_once();
    }
    uint64_t v19 = qword_10097A1C8;
LABEL_14:
    uint64_t *v1 = v19;
    swift_bridgeObjectRetain();
    goto LABEL_18;
  }
  if (v9 == enum case for SFAirDrop.TransferType.links(_:))
  {
LABEL_3:
    uint64_t v11 = v0[21];
    uint64_t v10 = v0[22];
    uint64_t v12 = v0[20];
    static SFPlatform.watchOS.getter();
    char v13 = static SFPlatform.isPlatform(_:)();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    if ((v13 & 1) == 0)
    {
      if (qword_100969FE8 == -1) {
        goto LABEL_16;
      }
      goto LABEL_34;
    }
    goto LABEL_9;
  }
  if (v9 == enum case for SFAirDrop.TransferType.files(_:))
  {
LABEL_8:
    uint64_t v15 = v0[21];
    uint64_t v14 = v0[22];
    uint64_t v16 = v0[20];
    static SFPlatform.watchOS.getter();
    char v17 = static SFPlatform.isPlatform(_:)();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    if ((v17 & 1) == 0)
    {
      if (qword_100969FE0 == -1)
      {
LABEL_16:
        long long v18 = (void *)swift_bridgeObjectRetain();
        goto LABEL_17;
      }
LABEL_34:
      swift_once();
      goto LABEL_16;
    }
LABEL_9:
    long long v18 = &_swiftEmptyArrayStorage;
LABEL_17:
    uint64_t *v1 = (uint64_t)v18;
    goto LABEL_18;
  }
  if (v9 == enum case for SFAirDrop.TransferType.peerPayment(_:))
  {
    if (qword_10096A000 != -1) {
      swift_once();
    }
    uint64_t v19 = qword_10097A1D8;
    goto LABEL_14;
  }
  uint64_t v32 = v0[24];
  uint64_t v31 = v0[25];
  uint64_t v33 = v0[23];
  v0[9] = &_swiftEmptyArrayStorage;
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
LABEL_18:
  if (qword_100969FF8 != -1) {
    swift_once();
  }
  uint64_t v20 = swift_bridgeObjectRetain();
  sub_1003D4668(v20);
  long long v21 = (void *)v0[9];
  v0[33] = v21;
  uint64_t v22 = v21[2];
  v0[34] = v22;
  if (v22)
  {
    v0[35] = 0;
    uint64_t v23 = v21[5];
    v0[36] = v23;
    uint64_t v24 = v21[4];
    v0[37] = v24;
    long long v25 = *(void (**)(uint64_t, uint64_t))(v23 + 40);
    v0[5] = v24;
    v0[6] = v23;
    sub_100278AE4(v0 + 2);
    v25(v24, v23);
    SFAirDropReceive.Transfer.askRequest.getter();
    uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 + 48) + **(int **)(v23 + 48));
    long long v26 = (void *)swift_task_alloc();
    v0[38] = v26;
    void *v26 = v0;
    v26[1] = sub_1005AD1EC;
    uint64_t v27 = v0[28];
    return v34(v27, v24, v23);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v29 = v0[12];
    *(void *)(v29 + 32) = 0;
    *(_OWORD *)uint64_t v29 = 0u;
    *(_OWORD *)(v29 + 16) = 0u;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v30 = (uint64_t (*)(void))v0[1];
    return v30();
  }
}

uint64_t sub_1005AD1EC(char a1)
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 248);
  uint64_t v3 = *(void *)(*(void *)v1 + 240);
  uint64_t v4 = *(void *)(*(void *)v1 + 224);
  uint64_t v5 = *(void *)(*(void *)v1 + 208);
  *(unsigned char *)(*(void *)v1 + 312) = a1;
  swift_task_dealloc();
  v2(v4, v5);
  return _swift_task_switch(sub_1005AD370, v3, 0);
}

uint64_t sub_1005AD370()
{
  uint64_t v35 = v0;
  if (*(unsigned char *)(v0 + 312))
  {
    swift_bridgeObjectRelease();
    if (qword_100969FD8 != -1) {
      swift_once();
    }
    uint64_t v2 = *(void *)(v0 + 144);
    uint64_t v1 = *(void *)(v0 + 152);
    uint64_t v3 = *(void *)(v0 + 136);
    uint64_t v4 = *(void *)(v0 + 104);
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000B47C(v5, (uint64_t)qword_10097A1A0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = *(void *)(v0 + 144);
      uint64_t v29 = *(void *)(v0 + 152);
      uint64_t v9 = *(void *)(v0 + 128);
      uint64_t v30 = *(void *)(v0 + 136);
      uint64_t v11 = *(void *)(v0 + 112);
      uint64_t v10 = *(void *)(v0 + 120);
      int8x16_t v31 = *(int8x16_t *)(v0 + 288);
      uint64_t v12 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315394;
      os_log_type_t type = v7;
      SFAirDropReceive.Transfer.id.getter();
      sub_10024E048();
      uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v15 = v14;
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
      *(void *)(v0 + 80) = sub_100254634(v13, v15, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v29, v30);
      *(_WORD *)(v12 + 12) = 2080;
      *(int8x16_t *)(v0 + 56) = vextq_s8(v31, v31, 8uLL);
      sub_10000A844(&qword_10096CC88);
      uint64_t v16 = String.init<A>(describing:)();
      *(void *)(v0 + 88) = sub_100254634(v16, v17, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, type, "Transfer %s using handler %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 144) + 8))(*(void *)(v0 + 152), *(void *)(v0 + 136));
    }

    sub_100278C8C(v0 + 16, *(void *)(v0 + 96));
    sub_10024D338(v0 + 16);
    goto LABEL_10;
  }
  uint64_t v18 = *(void *)(v0 + 272);
  uint64_t v19 = *(void *)(v0 + 280) + 1;
  sub_10024D338(v0 + 16);
  if (v19 == v18)
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void *)(v0 + 96);
    *(void *)(v20 + 32) = 0;
    *(_OWORD *)uint64_t v20 = 0u;
    *(_OWORD *)(v20 + 16) = 0u;
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v21 = *(uint64_t (**)(void))(v0 + 8);
    return v21();
  }
  *(void *)(v0 + 280) = v19;
  uint64_t v23 = *(void *)(v0 + 264) + 16 * v19;
  uint64_t v24 = *(void *)(v23 + 40);
  *(void *)(v0 + 288) = v24;
  uint64_t v25 = *(void *)(v23 + 32);
  *(void *)(v0 + 296) = v25;
  long long v26 = *(void (**)(uint64_t, uint64_t))(v24 + 40);
  *(void *)(v0 + 40) = v25;
  *(void *)(v0 + 48) = v24;
  sub_100278AE4((uint64_t *)(v0 + 16));
  v26(v25, v24);
  SFAirDropReceive.Transfer.askRequest.getter();
  uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 + 48) + **(int **)(v24 + 48));
  uint64_t v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_1005AD1EC;
  uint64_t v28 = *(void *)(v0 + 224);
  return v33(v28, v25, v24);
}

uint64_t sub_1005AD820()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097A1A0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097A1A0);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1005AD8E8()
{
  sub_10000A844(&qword_10096B330);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10077D9A0;
  *(void *)(v0 + 32) = type metadata accessor for SDAirDropContentHandlerCalendarEvents();
  *(void *)(v0 + 40) = &off_1008DED30;
  *(void *)(v0 + 48) = type metadata accessor for SDAirDropContentHandlerContacts();
  *(void *)(v0 + 56) = &off_1008DECA8;
  *(void *)(v0 + 64) = type metadata accessor for SDAirDropContentHandlerNotes();
  *(void *)(v0 + 72) = &off_1008D9FC8;
  *(void *)(v0 + 80) = type metadata accessor for SDAirDropContentHandlerPhotos();
  *(void *)(v0 + 88) = &off_1008E4E98;
  *(void *)(v0 + 96) = type metadata accessor for SDAirDropContentHandlerProfiles();
  *(void *)(v0 + 104) = &off_1008E5260;
  *(void *)(v0 + 112) = type metadata accessor for SDAirDropContentHandlerVoiceMails();
  *(void *)(v0 + 120) = &off_1008DBED0;
  *(void *)(v0 + 128) = type metadata accessor for SDAirDropContentHandlerVoiceMemos();
  *(void *)(v0 + 136) = &off_1008D5AE8;
  *(void *)(v0 + 144) = type metadata accessor for SDAirDropContentHandlerWalletItems();
  *(void *)(v0 + 152) = &off_1008DE110;
  *(void *)(v0 + 160) = type metadata accessor for SDAirDropContentHandlerPDFs();
  *(void *)(v0 + 168) = &off_1008DE6E8;
  *(void *)(v0 + 176) = type metadata accessor for SDAirDropContentHandleriBooksItems();
  *(void *)(v0 + 184) = &off_1008D4198;
  *(void *)(v0 + 192) = type metadata accessor for SDAirDropContentHandlerIPA();
  *(void *)(v0 + 200) = &off_1008D85A0;
  *(void *)(v0 + 208) = type metadata accessor for SDAirDropContentHandlerPlaygroundItems();
  *(void *)(v0 + 216) = &off_1008DB4A8;
  uint64_t result = type metadata accessor for SDAirDropContentHandlerGenericFiles();
  *(void *)(v0 + 224) = result;
  *(void *)(v0 + 232) = &off_1008D9ED8;
  qword_10097A1B8 = v0;
  return result;
}

uint64_t sub_1005ADA38()
{
  sub_10000A844(&qword_10096B330);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10077D9B0;
  *(void *)(v0 + 32) = type metadata accessor for SDAirDropContentHandlerCredentialLinks();
  *(void *)(v0 + 40) = &off_1008DCE18;
  *(void *)(v0 + 48) = type metadata accessor for SDAirDropContentHandlerSharediCloudDocumentsLinks();
  *(void *)(v0 + 56) = &off_1008E1540;
  *(void *)(v0 + 64) = type metadata accessor for SDAirDropContentHandlerKeynoteLiveLinks();
  *(void *)(v0 + 72) = &off_1008D99B0;
  *(void *)(v0 + 80) = type metadata accessor for SDAirDropContentHandlerFindMyFriendsLinks();
  *(void *)(v0 + 88) = &off_1008D6978;
  *(void *)(v0 + 96) = type metadata accessor for SDAirDropContentHandleriWorkLinks();
  *(void *)(v0 + 104) = &off_1008D9308;
  *(void *)(v0 + 112) = type metadata accessor for SDAirDropContentHandlerAppStoreLinks();
  *(void *)(v0 + 120) = &off_1008D70F8;
  *(void *)(v0 + 128) = type metadata accessor for SDAirDropContentHandlerPhoneLinks();
  *(void *)(v0 + 136) = &off_1008DE088;
  *(void *)(v0 + 144) = type metadata accessor for SDAirDropContentHandleriBooksLinks();
  *(void *)(v0 + 152) = &off_1008E5D98;
  *(void *)(v0 + 160) = type metadata accessor for SDAirDropContentHandlerPodcastsLinks();
  *(void *)(v0 + 168) = &off_1008D7D00;
  *(void *)(v0 + 176) = type metadata accessor for SDAirDropContentHandleriTunesULinks();
  *(void *)(v0 + 184) = &off_1008D87C0;
  *(void *)(v0 + 192) = type metadata accessor for SDAirDropContentHandleriTunesStoreLinks();
  *(void *)(v0 + 200) = &off_1008E5300;
  *(void *)(v0 + 208) = type metadata accessor for SDAirDropContentHandleriLifeLinks();
  *(void *)(v0 + 216) = &off_1008E4B00;
  *(void *)(v0 + 224) = type metadata accessor for SDAirDropContentHandlerMapsLinks();
  *(void *)(v0 + 232) = &off_1008D6B10;
  *(void *)(v0 + 240) = type metadata accessor for SDAirDropContentHandlerNewsLinks();
  *(void *)(v0 + 248) = &off_1008E25C0;
  *(void *)(v0 + 256) = type metadata accessor for SDAirDropContentHandleriCloudFamilyLinks();
  *(void *)(v0 + 264) = &off_1008D6630;
  *(void *)(v0 + 272) = type metadata accessor for SDAirDropContentHandlerGenericLinks();
  *(void *)(v0 + 280) = &off_1008D8498;
  uint64_t result = type metadata accessor for SDAirDropContentHandlerWebLinks();
  *(void *)(v0 + 288) = result;
  *(void *)(v0 + 296) = &off_1008D61A8;
  qword_10097A1C0 = v0;
  return result;
}

uint64_t sub_1005ADBD8(uint64_t a1)
{
  return sub_1005ADCB0(a1, (uint64_t (*)(void))type metadata accessor for SDAirDropContentHandlerExchange, (uint64_t)&off_1008D7160, &qword_10097A1C8);
}

uint64_t sub_1005ADC00()
{
  sub_10000A844(&qword_10096B330);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1007709D0;
  *(void *)(v0 + 32) = type metadata accessor for SDAirDropContentHandlerUnsupportedLinkType();
  *(void *)(v0 + 40) = &off_1008E4A60;
  *(void *)(v0 + 48) = type metadata accessor for SDAirDropContentHandlerUnsupportedFileType();
  *(void *)(v0 + 56) = &off_1008DC280;
  uint64_t result = type metadata accessor for SDAirDropContentHandlerMixedTypes();
  *(void *)(v0 + 64) = result;
  *(void *)(v0 + 72) = &off_1008D6888;
  qword_10097A1D0 = v0;
  return result;
}

uint64_t sub_1005ADC88(uint64_t a1)
{
  return sub_1005ADCB0(a1, (uint64_t (*)(void))type metadata accessor for SDAirDropContentHandlerPeerPayment, (uint64_t)&off_1008DAEC8, &qword_10097A1D8);
}

uint64_t sub_1005ADCB0(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t *a4)
{
  sub_10000A844(&qword_10096B330);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10076E7A0;
  uint64_t result = a2(0);
  *(void *)(v7 + 32) = result;
  *(void *)(v7 + 40) = a3;
  *a4 = v7;
  return result;
}

uint64_t type metadata accessor for SDAirDropContentHandlerFactory()
{
  return self;
}

BOOL sub_1005ADD44(uint64_t a1, uint64_t a2)
{
  return ((*(uint64_t (**)(void))(a2 + 24))() & 1) == 0;
}

uint64_t sub_1005ADD78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFPlatform();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static SFPlatform.macOS.getter();
  char v10 = static SFPlatform.isPlatform(_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 56))(a1, 1, a2, a3);
  }
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = (id)SFLocalizedStringForKey();

  if (v12)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  uint64_t v14 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(a3 + 56))(a1, 0, a2, a3);
  uint64_t v16 = v15;
  sub_10000A844((uint64_t *)&unk_10096EE60);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_10076E7A0;
  *(void *)(v17 + 56) = &type metadata for String;
  *(void *)(v17 + 64) = sub_1002E695C();
  *(void *)(v17 + 32) = v14;
  *(void *)(v17 + 40) = v16;
  uint64_t v13 = static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1005ADFA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFPlatform();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = SFAirDropReceive.AskRequest.senderIsMe.getter();
  static SFPlatform.macOS.getter();
  char v11 = static SFPlatform.isPlatform(_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  id v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 56);
  if ((v10 & 1) == 0)
  {
    if (v11)
    {
      uint64_t v18 = v12(a1, 0, a2, a3);
      uint64_t v20 = v19;
      NSString v21 = String._bridgeToObjectiveC()();
      id v22 = (id)SFLocalizedStringForKey();

      if (v22)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
      sub_10000A844((uint64_t *)&unk_10096EE60);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_100770AD0;
      *(void *)(v30 + 56) = &type metadata for String;
      unint64_t v31 = sub_1002E695C();
      *(void *)(v30 + 64) = v31;
      *(void *)(v30 + 32) = v18;
      *(void *)(v30 + 40) = v20;
      uint64_t v32 = SFAirDropReceive.AskRequest.senderDisplayName.getter();
      *(void *)(v30 + 96) = &type metadata for String;
      *(void *)(v30 + 104) = v31;
      *(void *)(v30 + 72) = v32;
      *(void *)(v30 + 80) = v33;
      uint64_t v23 = static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = v12(a1, 1, a2, a3);
      uint64_t v26 = v25;
      NSString v27 = String._bridgeToObjectiveC()();
      id v28 = (id)SFLocalizedStringForKey();

      if (v28)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
      sub_10000A844((uint64_t *)&unk_10096EE60);
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_100770AD0;
      *(void *)(v34 + 56) = &type metadata for String;
      unint64_t v35 = sub_1002E695C();
      *(void *)(v34 + 64) = v35;
      *(void *)(v34 + 32) = v24;
      *(void *)(v34 + 40) = v26;
      uint64_t v36 = SFAirDropReceive.AskRequest.senderDisplayName.getter();
      *(void *)(v34 + 96) = &type metadata for String;
      *(void *)(v34 + 104) = v35;
      *(void *)(v34 + 72) = v36;
      *(void *)(v34 + 80) = v37;
      uint64_t v23 = static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
    }
    goto LABEL_14;
  }
  if (v11)
  {
    uint64_t v13 = v12(a1, 0, a2, a3);
    uint64_t v15 = v14;
    NSString v16 = String._bridgeToObjectiveC()();
    id v17 = (id)SFLocalizedStringForKey();

    if (v17)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_10076E7A0;
    *(void *)(v29 + 56) = &type metadata for String;
    *(void *)(v29 + 64) = sub_1002E695C();
    *(void *)(v29 + 32) = v13;
    *(void *)(v29 + 40) = v15;
    uint64_t v23 = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    return v23;
  }
  return v12(a1, 1, a2, a3);
}

uint64_t sub_1005AE40C(uint64_t a1)
{
  return sub_1005B8094(a1);
}

uint64_t sub_1005AE41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[20] = a5;
  v6[21] = v5;
  v6[18] = a3;
  v6[19] = a4;
  v6[16] = a1;
  v6[17] = a2;
  uint64_t v8 = *(void *)(sub_10000A844(&qword_10096CCA0) - 8);
  v6[22] = v8;
  v6[23] = *(void *)(v8 + 64);
  v6[24] = swift_task_alloc();
  sub_10000A844(&qword_10096C920);
  v6[25] = swift_task_alloc();
  uint64_t v9 = sub_10000A844(&qword_10096B2C0);
  v6[26] = v9;
  v6[27] = *(void *)(v9 - 8);
  v6[28] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer();
  v6[29] = v10;
  v6[30] = *(void *)(v10 - 8);
  v6[31] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Date();
  v6[32] = v11;
  v6[33] = *(void *)(v11 - 8);
  v6[34] = swift_task_alloc();
  v6[35] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for UUID();
  v6[36] = v12;
  v6[37] = *(void *)(v12 - 8);
  v6[38] = swift_task_alloc();
  v6[39] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for SFAirDropReceive.ItemDestination();
  v6[40] = v13;
  v6[41] = *(void *)(v13 - 8);
  v6[42] = swift_task_alloc();
  uint64_t v14 = sub_10000A844(&qword_10096B2F8);
  v6[43] = v14;
  v6[44] = *(void *)(v14 - 8);
  v6[45] = swift_task_alloc();
  uint64_t v15 = type metadata accessor for SFAirDropReceive.AskRequest();
  v6[46] = v15;
  v6[47] = *(void *)(v15 - 8);
  v6[48] = swift_task_alloc();
  v6[49] = *(void *)(a4 - 8);
  v6[50] = swift_task_alloc();
  v6[51] = swift_task_alloc();
  uint64_t v16 = type metadata accessor for SFAirDrop.ButtonConfiguration();
  v6[52] = v16;
  v6[53] = *(void *)(v16 - 8);
  v6[54] = swift_task_alloc();
  v6[55] = swift_task_alloc();
  v6[56] = swift_task_alloc();
  v6[57] = swift_task_alloc();
  v6[58] = swift_task_alloc();
  uint64_t v17 = type metadata accessor for SFAirDrop.DeclineAction();
  v6[59] = v17;
  v6[60] = *(void *)(v17 - 8);
  v6[61] = swift_task_alloc();
  v6[62] = swift_task_alloc();
  uint64_t v18 = sub_10000A844(&qword_100973298);
  v6[63] = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  v6[64] = v19;
  v6[65] = *(void *)(v19 + 64);
  v6[66] = swift_task_alloc();
  v6[67] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v20 = static AirDropActor.shared;
  return _swift_task_switch(sub_1005AE9D8, v20, 0);
}

uint64_t sub_1005AE9D8()
{
  uint64_t v1 = 0x656E696C636544;
  SFProgressContinuation.init(_:initialProgress:file:line:)();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = (id)SFLocalizedStringForKey();

  v163 = (long long *)(v0 + 56);
  if (v3)
  {
    uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;
  }
  else
  {
    unint64_t v5 = 0xE700000000000000;
  }
  uint64_t v6 = *(void *)(v0 + 536);
  uint64_t v7 = *(void *)(v0 + 528);
  uint64_t v9 = *(void *)(v0 + 504);
  uint64_t v8 = *(void *)(v0 + 512);
  uint64_t v10 = *(uint64_t **)(v0 + 464);
  uint64_t v11 = *(void *)(v0 + 416);
  uint64_t v12 = *(void *)(v0 + 424);
  uint64_t v13 = *(void *)(v0 + 392);
  uint64_t v159 = *(void *)(v0 + 168);
  uint64_t v161 = *(void *)(v0 + 408);
  uint64_t v157 = *(void *)(v0 + 152);
  *uint64_t v10 = v1;
  v10[1] = v5;
  v141 = *(void (**)(void))(v12 + 104);
  ((void (*)(uint64_t *, void, uint64_t))v141)(v10, enum case for SFAirDrop.ButtonConfiguration.text(_:), v11);
  v154 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v154(v7, v6, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v149 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = swift_allocObject();
  v155 = *(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 32);
  v155(v15 + v14, v7, v9);
  SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  v16(v161, v159, v157);
  sub_10000A844(&qword_10097A328);
  v142 = v16;
  if (swift_dynamicCast())
  {
    uint64_t v17 = *(void *)(v0 + 536);
    uint64_t v19 = *(void *)(v0 + 376);
    uint64_t v18 = *(void *)(v0 + 384);
    uint64_t v20 = *(void *)(v0 + 368);
    sub_1002AF688(v163, v0 + 16);
    uint64_t v21 = *(void *)(v0 + 40);
    uint64_t v22 = *(void *)(v0 + 48);
    sub_10026BB6C((void *)(v0 + 16), v21);
    SFAirDropReceive.Transfer.askRequest.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8))(v18, v17, v21, v22);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    sub_10024D338(v0 + 16);
  }
  else
  {
    long long *v163 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    *(void *)(v0 + 88) = 0;
    sub_10000A7E8((uint64_t)v163, &qword_10097A330);
    unint64_t v139 = v14;
    if (SFAirDropReceive.Transfer.isPreviewSensitive.getter())
    {
      unint64_t v23 = sub_10048C2F0();
      int v25 = v24;
      sub_1003950E4(v23, v26, v24);
      if (v25 == 2)
      {
        NSString v27 = String._bridgeToObjectiveC()();
        id v28 = (id)SFLocalizedStringForKey();

        if (v28)
        {
          uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v31 = v30;
        }
        else
        {
          unint64_t v31 = 0xE800000000000000;
          uint64_t v29 = 0x65756E69746E6F43;
        }
        char v42 = (uint64_t *)(v0 + 448);
        uint64_t v46 = *(uint64_t **)(v0 + 448);
        *uint64_t v46 = v29;
        v46[1] = v31;
        v141();
        uint64_t v44 = (void *)0xEA00000000007974;
        unint64_t v45 = 0x656661536D6D6F43;
      }
      else
      {
        NSString v37 = String._bridgeToObjectiveC()();
        id v38 = (id)SFLocalizedStringForKey();

        if (v38)
        {
          uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v41 = v40;
        }
        else
        {
          unint64_t v41 = 0xE400000000000000;
          uint64_t v39 = 2003789907;
        }
        char v42 = (uint64_t *)(v0 + 440);
        uint64_t v47 = *(void **)(v0 + 440);
        *uint64_t v47 = 0x6C6C69662E657965;
        v47[1] = 0xE800000000000000;
        v47[2] = v39;
        v47[3] = v41;
        v141();
        uint64_t v44 = (void *)0x80000001007C2620;
        unint64_t v45 = 0xD000000000000010;
      }
    }
    else
    {
      NSString v32 = String._bridgeToObjectiveC()();
      id v33 = (id)SFLocalizedStringForKey();

      if (v33)
      {
        uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v36 = v35;
      }
      else
      {
        unint64_t v36 = 0xE600000000000000;
        uint64_t v34 = 0x747065636341;
      }
      char v42 = (uint64_t *)(v0 + 432);
      unint64_t v43 = *(uint64_t **)(v0 + 432);
      *unint64_t v43 = v34;
      v43[1] = v36;
      v141();
      uint64_t v44 = (void *)0xE700000000000000;
      unint64_t v45 = 0x72616C75676552;
    }
    uint64_t v147 = v45;
    uint64_t v48 = *v42;
    uint64_t v136 = *(void *)(v0 + 536);
    uint64_t v49 = *(void *)(v0 + 528);
    uint64_t v134 = *(void *)(v0 + 504);
    uint64_t v51 = *(void *)(v0 + 456);
    uint64_t v50 = *(void *)(v0 + 464);
    uint64_t v52 = *(void *)(v0 + 416);
    uint64_t v53 = *(void *)(v0 + 424);
    uint64_t v54 = *(void *)(v0 + 352);
    uint64_t v156 = *(void *)(v0 + 360);
    uint64_t v164 = *(void *)(v0 + 344);
    uint64_t v55 = *(void *)(v0 + 328);
    uint64_t v132 = *(void *)(v0 + 320);
    uint64_t v133 = *(void *)(v0 + 336);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v51, v48, v52);
    sub_10000A844(&qword_100970B50);
    v56._countAndFlagsBits = v147;
    v56._object = v44;
    String.append(_:)(v56);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v50, v51, v52);
    (*(void (**)(uint64_t, void, uint64_t))(v55 + 104))(v133, enum case for SFAirDropReceive.ItemDestination.default(_:), v132);
    v154(v49, v136, v134);
    uint64_t v57 = swift_allocObject();
    v155(v57 + v139, v49, v134);
    sub_1005BB278(&qword_1009732A0, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
    sub_1005BB278(&qword_1009732A8, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
    sub_1005BB278(&qword_10096CCB0, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
    SFAirDrop.AcceptAction.Single.init(id:buttonConfiguration:prominent:hidden:defaultAnswer:operation:)();
    UUID.init()();
    (*(void (**)(uint64_t, void, uint64_t))(v54 + 104))(v156, enum case for SFAirDrop.AcceptAction.single<A>(_:), v164);
    sub_10000A844(&qword_10096B2F0);
    unint64_t v58 = (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = xmmword_10076E7A0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v54 + 32))(v59 + v58, v156, v164);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v51, v52);
  }
  UUID.init()();
  static Date.now.getter();
  NSString v60 = String._bridgeToObjectiveC()();
  id v61 = (id)SFLocalizedStringForKey();

  if (v61)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  char v62 = SFAirDropReceive.Transfer.isPreviewSensitive.getter();
  SFAirDropReceive.Transfer.askRequest.getter();
  if (v62)
  {
    uint64_t v64 = *(void *)(v0 + 376);
    uint64_t v63 = *(void *)(v0 + 384);
    uint64_t v65 = *(void *)(v0 + 368);
    sub_10048C410();
    uint64_t v148 = v66;
    uint64_t v165 = v67;
    Swift::String v68 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
    v68(v63, v65);
  }
  else
  {
    uint64_t v69 = *(void *)(v0 + 400);
    uint64_t v70 = *(void *)(v0 + 376);
    uint64_t v71 = *(void *)(v0 + 384);
    uint64_t v72 = *(void *)(v0 + 368);
    uint64_t v73 = *(void *)(v0 + 240);
    uint64_t v166 = *(void *)(v0 + 248);
    uint64_t v150 = *(void *)(v0 + 232);
    uint64_t v74 = *(void *)(v0 + 168);
    uint64_t v75 = *(void *)(v0 + 152);
    uint64_t v76 = *(void *)(v0 + 136);
    uint64_t v148 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 160) + 80))(v71, 0, v75);
    uint64_t v78 = v77;
    uint64_t v79 = v71;
    uint64_t v80 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
    v80(v79, v72);
    v142(v69, v74, v75);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 16))(v166, v76, v150);
    uint64_t v82 = *(void *)(v0 + 392);
    uint64_t v81 = *(void *)(v0 + 400);
    uint64_t v165 = v78;
    if (v78)
    {
      uint64_t v83 = *(void *)(v0 + 152);
      (*(void (**)(void, void))(*(void *)(v0 + 240) + 8))(*(void *)(v0 + 248), *(void *)(v0 + 232));
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v81, v83);
      Swift::String v68 = v80;
    }
    else
    {
      uint64_t v84 = *(void *)(v0 + 384);
      v151 = v80;
      uint64_t v85 = *(void *)(v0 + 240);
      uint64_t v86 = *(void *)(v0 + 248);
      uint64_t v143 = *(void *)(v0 + 368);
      uint64_t v145 = *(void *)(v0 + 232);
      uint64_t v88 = *(void *)(v0 + 152);
      uint64_t v87 = *(void *)(v0 + 160);
      SFAirDropReceive.Transfer.askRequest.getter();
      uint64_t v148 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v84, 0, v88, v87);
      uint64_t v165 = v89;
      v151(v84, v143);
      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v86, v145);
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v81, v88);
      Swift::String v68 = v151;
    }
  }
  uint64_t v90 = *(void *)(v0 + 384);
  uint64_t v91 = *(void *)(v0 + 368);
  uint64_t v92 = *(void *)(v0 + 160);
  uint64_t v93 = *(void *)(v0 + 152);
  SFAirDropReceive.Transfer.askRequest.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 88))(v90, v93, v92);
  v152 = v68;
  v68(v90, v91);
  NSString v94 = String._bridgeToObjectiveC()();
  id v95 = (id)SFLocalizedStringForKey();

  if (v95)
  {
    uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v98 = v97;
  }
  else
  {
    uint64_t v96 = 0;
    uint64_t v98 = 0;
  }
  *(void *)(v0 + 112) = v96;
  *(void *)(v0 + 120) = v98;
  sub_10000A844(&qword_10096B540);
  Optional.tryUnwrap(_:file:line:)();
  uint64_t v99 = *(void *)(v0 + 384);
  uint64_t v100 = *(void *)(v0 + 368);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000A844((uint64_t *)&unk_10096EE60);
  uint64_t v101 = swift_allocObject();
  *(_OWORD *)(v101 + 16) = xmmword_100770AD0;
  SFAirDropReceive.Transfer.askRequest.getter();
  SFAirDropReceive.AskRequest.senderDisplayName.getter();
  v152(v99, v100);
  NSString v102 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v103 = (id)SFTruncateAirDropSenderNameForUI();

  if (v103)
  {
    uint64_t v162 = *(void *)(v0 + 536);
    uint64_t v127 = *(void *)(v0 + 528);
    uint64_t v131 = *(void *)(v0 + 512);
    uint64_t v126 = *(void *)(v0 + 504);
    uint64_t v158 = *(void *)(v0 + 496);
    uint64_t v135 = *(void *)(v0 + 488);
    uint64_t v146 = *(void *)(v0 + 480);
    uint64_t v153 = *(void *)(v0 + 472);
    uint64_t v104 = *(void *)(v0 + 312);
    uint64_t v105 = *(void *)(v0 + 296);
    uint64_t v138 = *(void *)(v0 + 304);
    uint64_t v106 = *(void *)(v0 + 288);
    uint64_t v125 = v106;
    uint64_t v144 = *(void *)(v0 + 280);
    uint64_t v107 = *(void *)(v0 + 264);
    uint64_t v140 = *(void *)(v0 + 272);
    uint64_t v108 = *(void *)(v0 + 256);
    uint64_t v160 = *(void *)(v0 + 224);
    uint64_t v129 = *(void *)(v0 + 216);
    uint64_t v130 = *(void *)(v0 + 208);
    uint64_t v121 = *(void *)(v0 + 200);
    uint64_t v137 = *(void *)(v0 + 192);
    uint64_t v123 = *(void *)(v0 + 176);
    uint64_t v124 = *(void *)(v0 + 184);
    uint64_t v122 = *(void *)(v0 + 144);
    uint64_t v128 = *(void *)(v0 + 128);
    uint64_t v109 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v111 = v110;

    *(void *)(v101 + 56) = &type metadata for String;
    unint64_t v112 = sub_1002E695C();
    *(void *)(v101 + 32) = v109;
    *(void *)(v101 + 40) = v111;
    *(void *)(v101 + 96) = &type metadata for String;
    *(void *)(v101 + 104) = v112;
    *(void *)(v101 + 64) = v112;
    *(void *)(v101 + 72) = v148;
    *(void *)(v101 + 80) = v165;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 16))(v138, v104, v106);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v107 + 16))(v140, v144, v108);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v146 + 16))(v135, v158, v153);
    sub_1005BB278(&qword_1009732A0, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
    sub_1005BB278(&qword_1009732A8, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
    sub_1005BB278(&qword_10096CCB0, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
    SFAirDrop.PermissionRequest.init(id:requestDate:title:prompt:acceptActions:declineAction:isAnswered:)();
    uint64_t v113 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v121, 1, 1, v113);
    sub_1005BAE7C(v122, v137);
    v154(v127, v162, v126);
    uint64_t v114 = static AirDropActor.shared;
    uint64_t v115 = sub_1005BB278((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    unint64_t v116 = (*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80);
    uint64_t v117 = swift_allocObject();
    *(void *)(v117 + 16) = v114;
    *(void *)(v117 + 24) = v115;
    sub_1005BB0B0(v137, v117 + v116);
    v155(v117 + ((v124 + v149 + v116) & ~v149), v127, v126);
    swift_retain();
    uint64_t v118 = sub_10028CAD4(v121, (uint64_t)&unk_10097A340, v117);
    (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v144, v108);
    (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v104, v125);
    (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v158, v153);
    (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v162, v126);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v129 + 32))(v128, v160, v130);
    *(void *)(v128 + *(int *)(sub_10000A844(&qword_10096CC70) + 52)) = v118;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v119 = *(uint64_t (**)(void))(v0 + 8);
    return v119();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t sub_1005AFD80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v58 = a5;
  uint64_t v59 = a8;
  uint64_t v56 = a6;
  uint64_t v57 = a7;
  uint64_t v55 = a4;
  v48._countAndFlagsBits = a2;
  v48._object = a3;
  uint64_t v45 = a1;
  uint64_t v60 = a9;
  uint64_t v9 = type metadata accessor for SFProgressTask();
  uint64_t v52 = *(void *)(v9 - 8);
  uint64_t v53 = v9;
  uint64_t v54 = *(void *)(v52 + 64);
  __chkstk_darwin(v9);
  uint64_t v51 = (char *)v42 - v10;
  uint64_t v49 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v46 = *(void *)(v49 - 8);
  uint64_t v50 = *(void *)(v46 + 64);
  __chkstk_darwin(v49);
  uint64_t v47 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SFAirDrop.ButtonConfiguration();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42[1] = v16;
  __chkstk_darwin(v14);
  uint64_t v18 = (void *)((char *)v42 - v17);
  uint64_t v19 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  SFAirDropReceive.Transfer.id.getter();
  uint64_t v23 = SFAirDrop.TransferIdentifier.shortIdentifier.getter();
  int v25 = v24;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  uint64_t v61 = 0x2D6C65636E6143;
  uint64_t v62 = 0xE700000000000000;
  v26._countAndFlagsBits = v23;
  v26._object = v25;
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v27._countAndFlagsBits = 45;
  v27._object = (void *)0xE100000000000000;
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.append(_:)(v48);
  swift_bridgeObjectRelease();
  v48._countAndFlagsBits = v62;
  v48._object = (void *)v61;
  *uint64_t v18 = 0x662E657261757173;
  v18[1] = 0xEB000000006C6C69;
  id v28 = *(void (**)(void *, void, uint64_t))(v13 + 104);
  unint64_t v43 = v18;
  uint64_t v44 = v12;
  v28(v18, enum case for SFAirDrop.ButtonConfiguration.symbol(_:), v12);
  (*(void (**)(char *, void *, uint64_t))(v13 + 16))(v16, v18, v12);
  uint64_t v29 = v46;
  unint64_t v30 = v47;
  uint64_t v31 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v47, v45, v49);
  NSString v32 = v51;
  uint64_t v33 = v52;
  uint64_t v34 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v51, v55, v53);
  unint64_t v35 = (*(unsigned __int8 *)(v29 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v36 = v33;
  unint64_t v37 = (v50 + *(unsigned __int8 *)(v33 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  id v38 = (char *)swift_allocObject();
  uint64_t v39 = v56;
  *((void *)v38 + 2) = v58;
  *((void *)v38 + 3) = v39;
  uint64_t v40 = v59;
  *((void *)v38 + 4) = v57;
  *((void *)v38 + 5) = v40;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v38[v35], v30, v31);
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(&v38[v37], v32, v34);
  SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)();
  return (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v43, v44);
}

uint64_t sub_1005B023C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, int a3@<W3>, void *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v98 = a4;
  uint64_t v8 = v7;
  uint64_t v102 = a6;
  LODWORD(v105) = a3;
  uint64_t v97 = a2;
  uint64_t v106 = a1;
  uint64_t v89 = a7;
  uint64_t v88 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v86 = v10;
  uint64_t v92 = (char *)v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v11 - 8);
  uint64_t v91 = (uint64_t)v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Date();
  __chkstk_darwin(v13 - 8);
  uint64_t v83 = (char *)v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for UUID();
  __chkstk_darwin(v15 - 8);
  uint64_t v82 = (char *)v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_10000A844(&qword_10096B2C0);
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v90 = (char *)v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for SFAirDropReceive.AskRequest();
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v78 = (char *)v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for SFAirDrop.ButtonConfiguration();
  uint64_t v95 = *(void *)(v19 - 8);
  uint64_t v96 = (void (*)(uint64_t, char *, uint64_t))v19;
  __chkstk_darwin(v19);
  uint64_t v21 = (void *)((char *)v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = type metadata accessor for SFAirDrop.DeclineAction();
  uint64_t v103 = *(void *)(v22 - 8);
  uint64_t v104 = v22;
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v81 = (char *)v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v109 = (char *)v75 - v26;
  uint64_t v27 = *(void *)(a5 - 8);
  uint64_t v28 = __chkstk_darwin(v25);
  unint64_t v30 = (char *)v75 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v33 = (char *)v75 - v32;
  __chkstk_darwin(v31);
  unint64_t v35 = (char *)v75 - v34;
  uint64_t v36 = sub_10000A844(&qword_100973298);
  uint64_t v107 = *(void *)(v36 - 8);
  uint64_t v108 = v36;
  uint64_t v37 = __chkstk_darwin(v36);
  uint64_t v100 = v38;
  uint64_t v101 = (char *)v75 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v40 = (char *)v75 - v39;
  uint64_t v41 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v94 = (uint64_t)"AIRDROP_RECEIVING_TEXT";
  uint64_t v114 = v40;
  uint64_t v77 = v41;
  SFProgressContinuation.init(_:initialProgress:file:line:)();
  char v42 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v42(v35, v8, a5);
  type metadata accessor for SDAirDropContentHandlerUnsupportedLinkType();
  int v43 = swift_dynamicCast();
  uint64_t v93 = v8;
  if (v43)
  {
    swift_release();
    v42(v33, v8, a5);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v33, a5);
    int v44 = 1;
    uint64_t v45 = v108;
  }
  else
  {
    v42(v33, v8, a5);
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v30, v33, a5);
    type metadata accessor for SDAirDropContentHandlerUnsupportedFileType();
    int v44 = swift_dynamicCast();
    if (v44) {
      swift_release();
    }
    uint64_t v45 = v108;
  }
  uint64_t v98 = sub_1005B8654(v106, v97, v105 & 1, (uint64_t)v98, (uint64_t)v114, v44, a5);
  *uint64_t v21 = 0;
  v21[1] = 0xE000000000000000;
  (*(void (**)(void *, void, void))(v95 + 104))(v21, enum case for SFAirDrop.ButtonConfiguration.text(_:), v96);
  uint64_t v46 = v107;
  uint64_t v47 = v101;
  uint64_t v76 = *(void (**)(void))(v107 + 16);
  v76();
  uint64_t v48 = *(unsigned __int8 *)(v46 + 80);
  uint64_t v97 = v48;
  uint64_t v95 = v48 | 7;
  uint64_t v49 = swift_allocObject() + ((v48 + 16) & ~v48);
  uint64_t v96 = *(void (**)(uint64_t, char *, uint64_t))(v46 + 32);
  v96(v49, v47, v45);
  SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)();
  NSString v50 = String._bridgeToObjectiveC()();
  id v51 = (id)SFLocalizedStringForKey();

  if (v51)
  {
    uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v54 = v53;
  }
  else
  {
    uint64_t v52 = 0;
    uint64_t v54 = 0;
  }
  uint64_t v55 = v103;
  uint64_t v110 = v52;
  uint64_t v111 = v54;
  sub_10000A844(&qword_10096B540);
  uint64_t v56 = v99;
  Optional.tryUnwrap(_:file:line:)();
  uint64_t v57 = (uint64_t)v114;
  if (v56)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v109, v104);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v107 + 8))(v57, v108);
  }
  else
  {
    uint64_t v99 = 0;
    uint64_t v94 = ~v97;
    swift_bridgeObjectRelease();
    v75[2] = v112;
    v75[1] = v113;
    uint64_t v59 = v78;
    SFAirDropReceive.Transfer.askRequest.getter();
    uint64_t v102 = (*(uint64_t (**)(char *, uint64_t))(v102 + 72))(v59, a5);
    uint64_t v93 = v60;
    (*(void (**)(char *, uint64_t))(v79 + 8))(v59, v80);
    UUID.init()();
    static Date.now.getter();
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v81, v109, v104);
    sub_1005BB278(&qword_1009732A0, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
    sub_1005BB278(&qword_1009732A8, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
    sub_1005BB278(&qword_10096CCB0, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
    SFAirDrop.PermissionRequest.init(id:requestDate:title:prompt:acceptActions:declineAction:isAnswered:)();
    uint64_t v61 = 1800;
    if (v105) {
      uint64_t v61 = 7;
    }
    uint64_t v105 = v61;
    uint64_t v62 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v91, 1, 1, v62);
    ((void (*)(char *, char *, uint64_t))v76)(v47, v114, v108);
    uint64_t v63 = v87;
    uint64_t v64 = v88;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v92, v106, v88);
    if (qword_100969B90 != -1) {
      swift_once();
    }
    uint64_t v65 = static AirDropActor.shared;
    uint64_t v66 = sub_1005BB278((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v67 = (v97 + 32) & v94;
    unint64_t v68 = (v100 + v67 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v69 = (v68 + *(unsigned __int8 *)(v63 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
    uint64_t v70 = swift_allocObject();
    *(void *)(v70 + 16) = v65;
    *(void *)(v70 + 24) = v66;
    uint64_t v71 = v70 + v67;
    uint64_t v72 = v108;
    v96(v71, v101, v108);
    *(void *)(v70 + v68) = v105;
    (*(void (**)(unint64_t, char *, uint64_t))(v63 + 32))(v70 + v69, v92, v64);
    swift_retain();
    uint64_t v73 = sub_10028CAD4(v91, (uint64_t)&unk_10097A2A0, v70);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v109, v104);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v114, v72);
    uint64_t v74 = v89;
    (*(void (**)(uint64_t, char *, uint64_t))(v84 + 32))(v89, v90, v85);
    uint64_t result = sub_10000A844(&qword_10096CC70);
    *(void *)(v74 + *(int *)(result + 52)) = v73;
  }
  return result;
}

uint64_t sub_1005B0F3C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v64 = a1;
  uint64_t v59 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v63 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v67 = v2;
  uint64_t v58 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v3 - 8);
  uint64_t v76 = (uint64_t)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000A844(&qword_100970B28);
  __chkstk_darwin(v5 - 8);
  uint64_t v55 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for SFInterventionWorkflow();
  uint64_t v57 = *(char **)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v71 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A844(&qword_10096B2C0);
  uint64_t v65 = *(void *)(v8 - 8);
  uint64_t v66 = v8;
  __chkstk_darwin(v8);
  uint64_t v75 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v73 = *(void *)(v10 - 8);
  uint64_t v74 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v70 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v50 - v13;
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v69 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v50 - v20;
  NSString v50 = (char *)&v50 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v50 - v22;
  uint64_t v78 = sub_10000A844(&qword_10097A2E0);
  uint64_t v24 = *(void *)(v78 - 8);
  uint64_t v25 = *(void *)(v24 + 64);
  uint64_t v26 = __chkstk_darwin(v78);
  uint64_t v77 = (char *)&v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v50 - v27;
  type metadata accessor for SFInterventionResponse();
  uint64_t v72 = v28;
  SFProgressContinuation.init(_:initialProgress:file:line:)();
  UUID.init()();
  static Date.now.getter();
  uint64_t v60 = v16;
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v29(v21, v23, v15);
  unint64_t v30 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
  uint64_t v62 = v14;
  v30(v70, v14, v74);
  (*((void (**)(char *, void, uint64_t))v57 + 13))(v71, enum case for SFInterventionWorkflow.receive(_:), v61);
  uint64_t v57 = v23;
  uint64_t v61 = v15;
  v29(v69, v23, v15);
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  uint64_t v32 = v77;
  uint64_t v33 = v78;
  v31(v77, v28, v78);
  uint64_t v34 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v51 = ~v34;
  uint64_t v54 = v25;
  uint64_t v52 = v34 | 7;
  uint64_t v35 = swift_allocObject() + ((v34 + 16) & ~v34);
  uint64_t v56 = v24;
  uint64_t v53 = *(void (**)(uint64_t, char *, uint64_t))(v24 + 32);
  v53(v35, v32, v33);
  sub_1005BB278(&qword_1009732A0, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
  sub_1005BB278(&qword_1009732A8, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
  sub_1005BB278(&qword_10096CCB0, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
  uint64_t v36 = v59;
  SFAirDrop.PermissionRequest.InterventionAction.init(id:operation:)();
  uint64_t v37 = v58;
  uint64_t v38 = v36;
  uint64_t v39 = v63;
  SFAirDrop.PermissionRequest.init(id:requestDate:interventionWorkflow:action:isAnswered:)();
  uint64_t v40 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v76, 1, 1, v40);
  v31(v77, v72, v78);
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v37, v64, v36);
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v41 = static AirDropActor.shared;
  uint64_t v42 = sub_1005BB278((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v43 = (v34 + 32) & v51;
  unint64_t v44 = (v43 + v54 + *(unsigned __int8 *)(v39 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = v41;
  *(void *)(v45 + 24) = v42;
  uint64_t v46 = v78;
  v53(v45 + v43, v77, v78);
  (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v45 + v44, v37, v38);
  swift_retain();
  uint64_t v47 = sub_10028CAD4(v76, (uint64_t)&unk_10097A2F0, v45);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v62, v74);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v57, v61);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v72, v46);
  uint64_t v48 = v68;
  (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v68, v75, v66);
  uint64_t result = sub_10000A844(&qword_10096CC70);
  *(void *)(v48 + *(int *)(result + 52)) = v47;
  return result;
}

uint64_t sub_1005B186C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v107 = a2;
  uint64_t v88 = a1;
  uint64_t v102 = a3;
  uint64_t v3 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v3 - 8);
  uint64_t v101 = (char *)v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for SFAirDrop.ContactInfo.Handle();
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v92 = (char *)v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for SFAirDropReceive.AskRequest();
  uint64_t v82 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v81 = (char *)v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_10000A844((uint64_t *)&unk_1009723F0);
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  v120 = (char *)v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = type metadata accessor for Date();
  uint64_t v119 = *(void *)(v114 - 8);
  uint64_t v8 = __chkstk_darwin(v114);
  uint64_t v111 = (char *)v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v117 = (char *)v78 - v10;
  uint64_t v118 = type metadata accessor for UUID();
  uint64_t v116 = *(void *)(v118 - 8);
  uint64_t v11 = __chkstk_darwin(v118);
  uint64_t v110 = (char *)v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v115 = (char *)v78 - v13;
  uint64_t v14 = type metadata accessor for SFAirDrop.ContactRequest();
  uint64_t v15 = *(char **)(v14 - 8);
  uint64_t v108 = v14;
  uint64_t v109 = v15;
  __chkstk_darwin(v14);
  unint64_t v104 = (unint64_t)v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_10000A844(&qword_100970CD8);
  uint64_t v98 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v103 = (char *)v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for SFAirDrop.ButtonConfiguration();
  uint64_t v18 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v20 = (void *)((char *)v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v112 = type metadata accessor for SFAirDrop.DeclineAction();
  uint64_t v97 = *(void *)(v112 - 8);
  uint64_t v21 = __chkstk_darwin(v112);
  uint64_t v89 = (char *)v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v125 = (char *)v78 - v23;
  uint64_t v24 = sub_10000A844(&qword_100970CE0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void *)(v25 + 64);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  unint64_t v30 = (char *)v78 - v29;
  SFProgressContinuation.init(_:initialProgress:file:line:)();
  *uint64_t v20 = 0x776F4E20746F4ELL;
  v20[1] = 0xE700000000000000;
  LODWORD(v79) = enum case for SFAirDrop.ButtonConfiguration.text(_:);
  uint64_t v31 = *(void (**)(uint64_t, char *, uint64_t))(v18 + 104);
  uint64_t v80 = v18 + 104;
  uint64_t v85 = v31;
  ((void (*)(void *))v31)(v20);
  uint64_t v105 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  v105(v28, v30, v24);
  uint64_t v32 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v90 = v26;
  uint64_t v86 = ((v32 + 16) & ~v32) + v26;
  uint64_t v87 = (v32 + 16) & ~v32;
  uint64_t v106 = v32;
  uint64_t v33 = v32 | 7;
  uint64_t v34 = swift_allocObject() + v87;
  uint64_t v93 = v25;
  uint64_t v35 = *(void (**)(uint64_t, char *, uint64_t))(v25 + 32);
  v35(v34, v28, v24);
  SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)();
  *uint64_t v20 = 0x6572616853;
  v20[1] = 0xE500000000000000;
  v85((uint64_t)v20, (char *)v79, v84);
  uint64_t v36 = type metadata accessor for SFAirDrop.ContactInfo();
  unint64_t v37 = v104;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v104, v107, v36);
  (*((void (**)(unint64_t, void, uint64_t))v109 + 13))(v37, enum case for SFAirDrop.ContactRequest.contact(_:), v108);
  uint64_t v109 = v30;
  uint64_t v38 = v30;
  uint64_t v39 = v28;
  uint64_t v84 = v25 + 16;
  v105(v28, v38, v24);
  uint64_t v86 = v33;
  uint64_t v40 = swift_allocObject() + v87;
  uint64_t v41 = v24;
  uint64_t v87 = v25 + 32;
  uint64_t v85 = v35;
  v35(v40, v28, v24);
  uint64_t v42 = v103;
  uint64_t v43 = sub_1005BB278(&qword_100970CE8, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest);
  uint64_t v44 = sub_1005BB278(&qword_100970CF0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest);
  v78[1] = sub_1005BB278(&qword_100970CF8, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest);
  uint64_t v79 = v44;
  uint64_t v80 = v43;
  SFAirDrop.AcceptAction.Single.init(id:buttonConfiguration:prominent:hidden:defaultAnswer:operation:)();
  uint64_t v45 = v115;
  UUID.init()();
  uint64_t v46 = v117;
  static Date.now.getter();
  (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v110, v45, v118);
  (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v111, v46, v114);
  uint64_t v123 = 0;
  unint64_t v124 = 0xE000000000000000;
  v47._countAndFlagsBits = 0x6977206572616853;
  v47._object = (void *)0xEB00000000206874;
  String.append(_:)(v47);
  uint64_t v48 = v81;
  SFAirDropReceive.Transfer.askRequest.getter();
  SFAirDropReceive.AskRequest.senderDisplayName.getter();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v48, v83);
  NSString v49 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v50 = (id)SFTruncateAirDropSenderNameForUI();

  uint64_t v94 = v41;
  uint64_t v91 = v39;
  if (v50)
  {
    uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v53 = v52;
  }
  else
  {
    uint64_t v51 = 0;
    uint64_t v53 = 0;
  }
  unint64_t v104 = ~v106;
  uint64_t v121 = v51;
  uint64_t v122 = v53;
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  swift_bridgeObjectRelease();
  v54._countAndFlagsBits = 63;
  v54._object = (void *)0xE100000000000000;
  String.append(_:)(v54);
  uint64_t v88 = v123;
  uint64_t v83 = v124;
  uint64_t v123 = SFAirDrop.ContactInfo.fullName.getter();
  unint64_t v124 = v55;
  v56._countAndFlagsBits = 10;
  v56._object = (void *)0xE100000000000000;
  String.append(_:)(v56);
  uint64_t v57 = v92;
  SFAirDrop.ContactInfo.handle.getter();
  sub_1005BB278(&qword_100970CA8, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactInfo.Handle);
  uint64_t v58 = v96;
  v59._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v59);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v57, v58);
  sub_10000A844(&qword_100970D00);
  uint64_t v60 = sub_10000A844(&qword_100970D08);
  uint64_t v61 = *(void *)(v60 - 8);
  unint64_t v62 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  uint64_t v63 = swift_allocObject();
  *(_OWORD *)(v63 + 16) = xmmword_10076E7A0;
  unint64_t v64 = v63 + v62;
  sub_10000A844(&qword_100970D10);
  uint64_t v65 = v98;
  (*(void (**)(unint64_t, char *, uint64_t))(v98 + 16))(v64, v42, v113);
  UUID.init()();
  (*(void (**)(unint64_t, void, uint64_t))(v61 + 104))(v64, enum case for SFAirDrop.AcceptAction.single<A>(_:), v60);
  uint64_t v66 = v97;
  (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v89, v125, v112);
  SFAirDrop.PermissionRequest.init(id:requestDate:title:prompt:acceptActions:declineAction:isAnswered:)();
  uint64_t v67 = type metadata accessor for TaskPriority();
  uint64_t v68 = (uint64_t)v101;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v101, 1, 1, v67);
  unint64_t v69 = v91;
  uint64_t v70 = v94;
  v105(v91, v109, v94);
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v71 = static AirDropActor.shared;
  uint64_t v72 = sub_1005BB278((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v73 = (v106 + 32) & v104;
  uint64_t v74 = swift_allocObject();
  *(void *)(v74 + 16) = v71;
  *(void *)(v74 + 24) = v72;
  v85(v74 + v73, v69, v70);
  swift_retain();
  uint64_t v75 = sub_10028CC74(v68, (uint64_t)&unk_10097A318, v74);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v117, v114);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v115, v118);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v103, v113);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v125, v112);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v109, v70);
  uint64_t v76 = v102;
  (*(void (**)(uint64_t, char *, uint64_t))(v99 + 32))(v102, v120, v100);
  uint64_t result = sub_10000A844(&qword_100970C58);
  *(void *)(v76 + *(int *)(result + 52)) = v75;
  return result;
}

void sub_1005B287C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v195 = a1;
  uint64_t v184 = a2;
  uint64_t v2 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v157 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v183 = sub_10000A844(&qword_10096B2C0);
  uint64_t v182 = *(void *)(v183 - 8);
  __chkstk_darwin(v183);
  v193 = (char *)v157 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SFAirDrop.DeclineAction();
  uint64_t v179 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  v177 = (char *)v157 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v187 = (char *)v157 - v9;
  uint64_t v10 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v173 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  v174 = (char *)v157 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = sub_10000A844(&qword_10096B368);
  uint64_t v191 = *(void *)(v192 - 8);
  __chkstk_darwin(v192);
  v201 = (char *)v157 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SFAirDrop.ButtonConfiguration();
  v198 = *(void **)(v13 - 8);
  uint64_t v199 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  v169 = (void *)((char *)v157 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __chkstk_darwin(v14);
  v170 = (void *)((char *)v157 - v17);
  uint64_t v18 = __chkstk_darwin(v16);
  v186 = (char *)v157 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v188 = (char *)v157 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v168 = (void *)((char *)v157 - v23);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v167 = (void *)((char *)v157 - v25);
  __chkstk_darwin(v24);
  v185 = (char *)v157 - v26;
  v194 = (void (*)(char *, char *, uint64_t))type metadata accessor for SFAirDropReceive.AskRequest();
  uint64_t v27 = *((void *)v194 - 1);
  __chkstk_darwin(v194);
  uint64_t v29 = (char *)v157 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v209 = type metadata accessor for SFPlatform();
  uint64_t v30 = *(void *)(v209 - 8);
  __chkstk_darwin(v209);
  v208 = (char *)v157 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v207 = type metadata accessor for Date();
  uint64_t v211 = *(void *)(v207 - 8);
  uint64_t v32 = __chkstk_darwin(v207);
  v176 = (char *)v157 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)v157 - v34;
  uint64_t v36 = type metadata accessor for UUID();
  uint64_t v205 = *(void *)(v36 - 8);
  uint64_t v206 = v36;
  uint64_t v37 = __chkstk_darwin(v36);
  v175 = (char *)v157 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v40 = (char *)v157 - v39;
  uint64_t v210 = sub_10000A844(&qword_100973298);
  uint64_t v204 = *(void *)(v210 - 8);
  uint64_t v41 = __chkstk_darwin(v210);
  v200 = (char *)v157 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = v42;
  __chkstk_darwin(v41);
  v216 = (char *)v157 - v43;
  uint64_t v190 = v10;
  SFProgressContinuation.init(_:initialProgress:file:line:)();
  v202 = v40;
  UUID.init()();
  v203 = v35;
  static Date.now.getter();
  unint64_t v44 = 0xE700000000000000;
  NSString v45 = String._bridgeToObjectiveC()();
  id v46 = (id)SFLocalizedStringForKey();

  if (v46)
  {
    uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v44 = v48;
  }
  else
  {
    uint64_t v47 = 0x706F7244726941;
  }
  unint64_t v196 = v44;
  uint64_t v178 = v47;
  NSString v49 = v208;
  static SFPlatform.visionOS.getter();
  char v50 = static SFPlatform.isPlatform(_:)();
  v171 = *(void (**)(char *, uint64_t))(v30 + 8);
  uint64_t v172 = v30 + 8;
  v171(v49, v209);
  v181 = v4;
  uint64_t v180 = v6;
  if ((v50 & 1) == 0)
  {
    SFAirDropReceive.Transfer.askRequest.getter();
    sub_10048C410();
    uint64_t v165 = v56;
    uint64_t v58 = v57;
    Swift::String v59 = *(void (**)(char *, void (*)(char *, char *, uint64_t)))(v27 + 8);
    v59(v29, v194);
    NSString v60 = String._bridgeToObjectiveC()();
    id v61 = (id)SFLocalizedStringForKey();

    if (v61)
    {
      uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v64 = v63;
    }
    else
    {
      uint64_t v62 = 0;
      uint64_t v64 = 0;
    }
    uint64_t v65 = v211;
    uint64_t v212 = v62;
    uint64_t v213 = v64;
    sub_10000A844(&qword_10096B540);
    uint64_t v67 = v197;
    Optional.tryUnwrap(_:file:line:)();
    if (v67)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    uint64_t v166 = 0;
    swift_bridgeObjectRelease();
    v197 = (void (*)(void, void, void))v214;
    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = xmmword_100770AD0;
    SFAirDropReceive.Transfer.askRequest.getter();
    SFAirDropReceive.AskRequest.senderDisplayName.getter();
    v59(v29, v194);
    NSString v75 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v76 = (id)SFTruncateAirDropSenderNameForUI();

    if (v76)
    {
      uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v79 = v78;

      *(void *)(v74 + 56) = &type metadata for String;
      unint64_t v80 = sub_1002E695C();
      *(void *)(v74 + 32) = v77;
      *(void *)(v74 + 40) = v79;
      *(void *)(v74 + 96) = &type metadata for String;
      *(void *)(v74 + 104) = v80;
      uint64_t v81 = v165;
      *(void *)(v74 + 64) = v80;
      *(void *)(v74 + 72) = v81;
      *(void *)(v74 + 80) = v58;
      goto LABEL_20;
    }
LABEL_42:
    __break(1u);
    return;
  }
  NSString v51 = String._bridgeToObjectiveC()();
  id v52 = (id)SFLocalizedStringForKey();

  if (v52)
  {
    uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v55 = v54;
  }
  else
  {
    uint64_t v53 = 0;
    uint64_t v55 = 0;
  }
  uint64_t v65 = v211;
  uint64_t v212 = v53;
  uint64_t v213 = v55;
  sub_10000A844(&qword_10096B540);
  uint64_t v66 = v197;
  Optional.tryUnwrap(_:file:line:)();
  if (v66)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v203, v207);
    (*(void (**)(char *, uint64_t))(v205 + 8))(v202, v206);
    (*(void (**)(char *, uint64_t))(v204 + 8))(v216, v210);
    return;
  }
  uint64_t v166 = 0;
  swift_bridgeObjectRelease();
  sub_10000A844((uint64_t *)&unk_10096EE60);
  uint64_t v68 = swift_allocObject();
  *(_OWORD *)(v68 + 16) = xmmword_10076E7A0;
  SFAirDropReceive.Transfer.askRequest.getter();
  SFAirDropReceive.AskRequest.senderDisplayName.getter();
  (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v27 + 8))(v29, v194);
  NSString v69 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v70 = (id)SFTruncateAirDropSenderNameForUI();

  if (!v70)
  {
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v73 = v72;

  *(void *)(v68 + 56) = &type metadata for String;
  *(void *)(v68 + 64) = sub_1002E695C();
  *(void *)(v68 + 32) = v71;
  *(void *)(v68 + 40) = v73;
LABEL_20:
  uint64_t v164 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v163 = v82;
  uint64_t v83 = v185;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v84 = sub_10048C2F0();
  int v86 = v85;
  sub_1003950E4(v84, v87, v85);
  if (v86 == 2)
  {
    NSString v88 = String._bridgeToObjectiveC()();
    id v89 = (id)SFLocalizedStringForKey();

    uint64_t v91 = v198;
    uint64_t v90 = v199;
    if (v89)
    {
      uint64_t v92 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v94 = v93;
    }
    else
    {
      unint64_t v94 = 0xE800000000000000;
      uint64_t v92 = 0x65756E69746E6F43;
    }
    uint64_t v100 = v167;
    *uint64_t v167 = v92;
    v100[1] = v94;
    v157[0] = v91[13];
    ((void (*)(uint64_t *, void, uint64_t))v157[0])(v100, enum case for SFAirDrop.ButtonConfiguration.text(_:), v90);
    uint64_t v162 = (void (*)(char *, uint64_t *, uint64_t))v91[4];
    v162(v83, v100, v90);
    unint64_t v101 = 0xEA00000000007974;
    unint64_t v102 = 0x656661536D6D6F43;
  }
  else
  {
    NSString v95 = String._bridgeToObjectiveC()();
    id v96 = (id)SFLocalizedStringForKey();

    uint64_t v91 = v198;
    if (v96)
    {
      uint64_t v97 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v99 = v98;
    }
    else
    {
      unint64_t v99 = 0xE400000000000000;
      uint64_t v97 = 2003789907;
    }
    uint64_t v103 = v168;
    uint64_t *v168 = 0x6C6C69662E657965;
    v103[1] = 0xE800000000000000;
    v103[2] = v97;
    v103[3] = v99;
    uint64_t v90 = v199;
    v157[0] = v91[13];
    ((void (*)(uint64_t *, void, uint64_t))v157[0])(v103, enum case for SFAirDrop.ButtonConfiguration.symbolText(_:), v199);
    uint64_t v162 = (void (*)(char *, uint64_t *, uint64_t))v91[4];
    v162(v83, v103, v90);
    unint64_t v101 = 0x80000001007C2620;
    unint64_t v102 = 0xD000000000000010;
  }
  uint64_t v214 = 0x2D747065636341;
  unint64_t v215 = 0xE700000000000000;
  unint64_t v104 = v101;
  String.append(_:)(*(Swift::String *)&v102);
  swift_bridgeObjectRelease();
  v157[2] = v214;
  v157[1] = v215;
  uint64_t v159 = (void (*)(char *, char *, uint64_t))v91[2];
  v159(v188, v83, v90);
  (*(void (**)(char *, void, uint64_t))(v173 + 104))(v174, enum case for SFAirDropReceive.ItemDestination.default(_:), v190);
  uint64_t v105 = v204;
  uint64_t v106 = *(void (**)(char *, char *, uint64_t))(v204 + 16);
  uint64_t v107 = v200;
  uint64_t v108 = v210;
  uint64_t v195 = v204 + 16;
  v194 = v106;
  v106(v200, v216, v210);
  unint64_t v109 = *(unsigned __int8 *)(v105 + 80);
  uint64_t v110 = (v109 + 16) & ~v109;
  uint64_t v167 = (uint64_t *)v109;
  v157[4] = v110 + v189;
  uint64_t v173 = v109 | 7;
  uint64_t v111 = swift_allocObject();
  uint64_t v158 = v110;
  uint64_t v112 = *(void (**)(void, void, void))(v105 + 32);
  v168 = (uint64_t *)(v105 + 32);
  v197 = v112;
  v112(v111 + v110, v107, v108);
  uint64_t v113 = sub_1005BB278(&qword_1009732A0, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
  uint64_t v114 = sub_1005BB278(&qword_1009732A8, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
  uint64_t v156 = sub_1005BB278(&qword_10096CCB0, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
  uint64_t v161 = v114;
  uint64_t v165 = v113;
  SFAirDrop.AcceptAction.Single.init(id:buttonConfiguration:prominent:hidden:defaultAnswer:operation:)();
  uint64_t v115 = v208;
  static SFPlatform.visionOS.getter();
  char v116 = static SFPlatform.isPlatform(_:)();
  v171(v115, v209);
  uint64_t v160 = v156;
  v157[3] = v91 + 2;
  if (v116)
  {
    NSString v117 = String._bridgeToObjectiveC()();
    id v118 = (id)SFLocalizedStringForKey();

    if (v118)
    {
      uint64_t v119 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v121 = v120;
    }
    else
    {
      unint64_t v121 = 0xE600000000000000;
      uint64_t v119 = 0x6574656C6544;
    }
    uint64_t v126 = v187;
    uint64_t v127 = v186;
    uint64_t v129 = v210;
    uint64_t v130 = v170;
    uint64_t v131 = v167;
    uint64_t v132 = (void (*)(uint64_t *, void, uint64_t))v157[0];
    uint64_t *v170 = v119;
    uint64_t v128 = v207;
  }
  else
  {
    NSString v122 = String._bridgeToObjectiveC()();
    id v123 = (id)SFLocalizedStringForKey();

    if (v123)
    {
      uint64_t v124 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v121 = v125;

      uint64_t v126 = v187;
      uint64_t v127 = v186;
      uint64_t v128 = v207;
      uint64_t v129 = v210;
      uint64_t v130 = v169;
      uint64_t v131 = v167;
      uint64_t v132 = (void (*)(uint64_t *, void, uint64_t))v157[0];
    }
    else
    {
      unint64_t v121 = 0xE700000000000000;
      uint64_t v126 = v187;
      uint64_t v127 = v186;
      uint64_t v128 = v207;
      uint64_t v129 = v210;
      uint64_t v130 = v169;
      uint64_t v131 = v167;
      uint64_t v132 = (void (*)(uint64_t *, void, uint64_t))v157[0];
      uint64_t v124 = 0x656E696C636544;
    }
    *uint64_t v130 = v124;
  }
  uint64_t v209 = ~(unint64_t)v131;
  v130[1] = v121;
  uint64_t v133 = v199;
  v132(v130, enum case for SFAirDrop.ButtonConfiguration.text(_:), v199);
  v162(v127, v130, v133);
  v159(v188, v127, v133);
  uint64_t v134 = v200;
  v194(v200, v216, v129);
  uint64_t v135 = swift_allocObject();
  v197(v135 + v158, v134, v129);
  SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)();
  (*(void (**)(char *, char *, uint64_t))(v205 + 16))(v175, v202, v206);
  (*(void (**)(char *, char *, uint64_t))(v211 + 16))(v176, v203, v128);
  sub_10000A844(&qword_10096B2F0);
  uint64_t v136 = sub_10000A844(&qword_10096B2F8);
  uint64_t v137 = *(void *)(v136 - 8);
  unint64_t v138 = (*(unsigned __int8 *)(v137 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80);
  uint64_t v139 = swift_allocObject();
  *(_OWORD *)(v139 + 16) = xmmword_10076E7A0;
  unint64_t v140 = v139 + v138;
  sub_10000A844(&qword_100970B50);
  (*(void (**)(unint64_t, char *, uint64_t))(v191 + 16))(v140, v201, v192);
  UUID.init()();
  (*(void (**)(unint64_t, void, uint64_t))(v137 + 104))(v140, enum case for SFAirDrop.AcceptAction.single<A>(_:), v136);
  uint64_t v141 = v179;
  v142 = v126;
  uint64_t v143 = v180;
  (*(void (**)(char *, char *, uint64_t))(v179 + 16))(v177, v142, v180);
  SFAirDrop.PermissionRequest.init(id:requestDate:title:prompt:acceptActions:declineAction:isAnswered:)();
  uint64_t v144 = type metadata accessor for TaskPriority();
  uint64_t v145 = (uint64_t)v181;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v144 - 8) + 56))(v181, 1, 1, v144);
  uint64_t v146 = v200;
  uint64_t v147 = v210;
  ((void (*)(void))v194)();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v148 = static AirDropActor.shared;
  uint64_t v149 = sub_1005BB278((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
  uint64_t v150 = (unint64_t)(v167 + 4) & v209;
  uint64_t v151 = swift_allocObject();
  *(void *)(v151 + 16) = v148;
  *(void *)(v151 + 24) = v149;
  v197(v151 + v150, v146, v147);
  swift_retain();
  uint64_t v152 = sub_10028CAD4(v145, (uint64_t)&unk_10097A308, v151);
  (*(void (**)(char *, uint64_t))(v141 + 8))(v187, v143);
  uint64_t v153 = v199;
  v154 = (void (*)(char *, uint64_t))v198[1];
  v154(v186, v199);
  (*(void (**)(char *, uint64_t))(v191 + 8))(v201, v192);
  v154(v185, v153);
  (*(void (**)(char *, uint64_t))(v211 + 8))(v203, v207);
  (*(void (**)(char *, uint64_t))(v205 + 8))(v202, v206);
  (*(void (**)(char *, uint64_t))(v204 + 8))(v216, v147);
  uint64_t v155 = v184;
  (*(void (**)(uint64_t, char *, uint64_t))(v182 + 32))(v184, v193, v183);
  *(void *)(v155 + *(int *)(sub_10000A844(&qword_10096CC70) + 52)) = v152;
}

uint64_t sub_1005B40B0(uint64_t a1, int a2, int a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v27 = a6;
  uint64_t v26 = a5;
  int v28 = a3;
  int v29 = a2;
  uint64_t v30 = a1;
  uint64_t v7 = type metadata accessor for SFAirDrop.TransferType();
  uint64_t v31 = *(void *)(v7 - 8);
  uint64_t v32 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SFAirDropReceive.AskRequest();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SFPlatform();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static SFPlatform.visionOS.getter();
  char v18 = static SFPlatform.isPlatform(_:)();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v15 + 8);
  v19(v17, v14);
  if (v18)
  {
    char v20 = 0;
  }
  else
  {
    if (v29) {
      char v21 = a4;
    }
    else {
      char v21 = v28 ^ 1 | a4;
    }
    static SFPlatform.macOS.getter();
    char v22 = static SFPlatform.isPlatform(_:)();
    v19(v17, v14);
    if (v22) {
      char v21 = (*(uint64_t (**)(uint64_t))(v27 + 32))(v26);
    }
    SFAirDropReceive.Transfer.askRequest.getter();
    SFAirDropReceive.AskRequest.type.getter();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    char v23 = SFAirDrop.TransferType.isLinks.getter();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v32);
    char v20 = v21 & (v23 ^ 1);
  }
  return v20 & 1;
}

uint64_t sub_1005B4364()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097A280);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097A280);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1005B442C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  v5[3] = a1;
  sub_10000A844(&qword_10097A348);
  v5[6] = swift_task_alloc();
  uint64_t v6 = sub_10000A844(&qword_100973298);
  v5[7] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[8] = v7;
  v5[9] = *(void *)(v7 + 64);
  v5[10] = swift_task_alloc();
  sub_10000A844(&qword_10096C920);
  v5[11] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SFAirDropReceive.ItemDestination();
  v5[12] = v8;
  v5[13] = *(void *)(v8 - 8);
  v5[14] = swift_task_alloc();
  uint64_t v9 = sub_10000A844(&qword_1009732C0);
  v5[15] = v9;
  v5[16] = *(void *)(v9 - 8);
  v5[17] = swift_task_alloc();
  sub_10000A844(&qword_10096CCA0);
  v5[18] = swift_task_alloc();
  uint64_t v10 = sub_10000A844(&qword_10096BBA8);
  v5[19] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v5[20] = v11;
  v5[21] = *(void *)(v11 + 64);
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v12 = static AirDropActor.shared;
  v5[24] = static AirDropActor.shared;
  return _swift_task_switch(sub_1005B46FC, v12, 0);
}

uint64_t sub_1005B46FC()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[18];
  sub_1005BAE7C(v0[4], v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000A7E8(v0[18], &qword_10096CCA0);
    SFProgressContinuation.task.getter();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[25] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1005B4A14;
    uint64_t v5 = v0[15];
    uint64_t v6 = v0[3];
    return SFProgressTask.finalValue.getter(v6, v5);
  }
  else
  {
    uint64_t v8 = v0[22];
    unint64_t v7 = v0[23];
    uint64_t v9 = v0[20];
    uint64_t v10 = v0[19];
    uint64_t v11 = v0[11];
    uint64_t v12 = v0[8];
    uint64_t v26 = v0[10];
    uint64_t v24 = v0[5];
    uint64_t v25 = v0[7];
    uint64_t v13 = *(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32);
    v13(v7, v0[18], v10);
    uint64_t v14 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 1, 1, v14);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16))(v8, v7, v10);
    unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v16 = swift_allocObject();
    v0[27] = v16;
    v13(v16 + v15, v8, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v26, v24, v25);
    unint64_t v17 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v18 = swift_allocObject();
    v0[28] = v18;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 32))(v18 + v17, v26, v25);
    uint64_t v19 = (void *)swift_task_alloc();
    v0[29] = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_1005B4B90;
    uint64_t v20 = v0[14];
    uint64_t v21 = v0[11];
    uint64_t v22 = v0[12];
    return concurrentRace<A>(priority:operation:against:)(v20, v21, &unk_10097A358, v16, &unk_10097A368, v18, v22);
  }
}

uint64_t sub_1005B4A14()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[24];
  (*(void (**)(void, void))(v2[16] + 8))(v2[17], v2[15]);
  if (v0) {
    uint64_t v4 = sub_1005B4EE8;
  }
  else {
    uint64_t v4 = sub_1005B4E24;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1005B4B90()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 192);
  sub_10000A7E8(*(void *)(v2 + 88), &qword_10096C920);
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v4 = sub_1005B50F8;
  }
  else {
    uint64_t v4 = sub_1005B4D20;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1005B4D20()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[3];
  (*(void (**)(void, void))(v0[20] + 8))(v0[23], v0[19]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1005B4E24()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005B4EE8()
{
  v0[2] = v0[26];
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  uint64_t v1 = type metadata accessor for SFAirDropReceive.Failure();
  char v2 = swift_dynamicCast();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 56);
  uint64_t v4 = v0[6];
  if (v2)
  {
    v3(v4, 0, 1, v1);
    sub_10000A7E8(v4, &qword_10097A348);
    swift_willThrow();
  }
  else
  {
    v3(v4, 1, 1, v1);
    sub_10000A7E8(v4, &qword_10097A348);
    type metadata accessor for CancellationError();
    sub_1005BB278(&qword_10096CCB8, (void (*)(uint64_t))&type metadata accessor for CancellationError);
    swift_allocError();
    CancellationError.init()();
    swift_willThrow();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1005B50F8()
{
  (*(void (**)(void, void))(v0[20] + 8))(v0[23], v0[19]);
  v0[2] = v0[30];
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  uint64_t v1 = type metadata accessor for SFAirDropReceive.Failure();
  char v2 = swift_dynamicCast();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 56);
  uint64_t v4 = v0[6];
  if (v2)
  {
    v3(v4, 0, 1, v1);
    sub_10000A7E8(v4, &qword_10097A348);
    swift_willThrow();
  }
  else
  {
    v3(v4, 1, 1, v1);
    sub_10000A7E8(v4, &qword_10097A348);
    type metadata accessor for CancellationError();
    sub_1005BB278(&qword_10096CCB8, (void (*)(uint64_t))&type metadata accessor for CancellationError);
    swift_allocError();
    CancellationError.init()();
    swift_willThrow();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1005B5320(uint64_t a1, uint64_t a2)
{
  v2[3] = a2;
  uint64_t v3 = sub_10000A844(&qword_10096CC58);
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  v2[7] = static AirDropActor.shared;
  return _swift_task_switch(sub_1005B5420, v4, 0);
}

uint64_t sub_1005B5420()
{
  sub_10000A844(&qword_10096BBA8);
  SFProgressContinuation.task.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  void *v1 = v0;
  v1[1] = sub_1005B54E8;
  uint64_t v2 = *(void *)(v0 + 32);
  return SFProgressTask.finalValue.getter(v0 + 16, v2);
}

uint64_t sub_1005B54E8()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v3 = v2[7];
  uint64_t v4 = v2[6];
  uint64_t v5 = v2[5];
  uint64_t v6 = v2[4];
  if (v0)
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = sub_1005B57B0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = sub_1005B5694;
  }
  return _swift_task_switch(v7, v3, 0);
}

uint64_t sub_1005B5694()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = type metadata accessor for SFAirDropReceive.Failure();
  sub_1005BB278(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v1 - 8) + 104))(v2, enum case for SFAirDropReceive.Failure.askDismissed(_:), v1);
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1005B57B0()
{
  uint64_t v1 = type metadata accessor for SFAirDropReceive.Failure();
  sub_1005BB278(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v1 - 8) + 104))(v2, enum case for SFAirDropReceive.Failure.askDismissed(_:), v1);
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1005B58C4(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = sub_10000A844(&qword_1009732C0);
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  v2[7] = static AirDropActor.shared;
  return _swift_task_switch(sub_1005B59C4, v4, 0);
}

uint64_t sub_1005B59C4()
{
  sub_10000A844(&qword_100973298);
  SFProgressContinuation.task.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  void *v1 = v0;
  v1[1] = sub_100391CE4;
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  return SFProgressTask.finalValue.getter(v3, v2);
}

uint64_t sub_1005B5A80(uint64_t a1, unsigned int *a2, uint64_t *a3)
{
  uint64_t v5 = type metadata accessor for SFAirDropReceive.Failure();
  sub_1005BB278(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, *a2, v5);
  sub_10000A844(a3);
  SFProgressContinuation.fail(with:)();

  return swift_errorRelease();
}

uint64_t sub_1005B5B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  uint64_t v5 = sub_10000A844(&qword_1009732C0);
  v4[4] = v5;
  v4[5] = *(void *)(v5 - 8);
  v4[6] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v4[7] = static AirDropActor.shared;
  return _swift_task_switch(sub_1005B59C4, v6, 0);
}

uint64_t sub_1005B5C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  uint64_t v6 = type metadata accessor for SFInterventionResponse();
  v5[5] = v6;
  v5[6] = *(void *)(v6 - 8);
  v5[7] = swift_task_alloc();
  uint64_t v7 = sub_10000A844(&qword_10097A2F8);
  v5[8] = v7;
  v5[9] = *(void *)(v7 - 8);
  v5[10] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v8 = static AirDropActor.shared;
  v5[11] = static AirDropActor.shared;
  return _swift_task_switch(sub_1005B5DD0, v8, 0);
}

uint64_t sub_1005B5DD0()
{
  sub_10000A844(&qword_10097A2E0);
  SFProgressContinuation.task.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[12] = v1;
  void *v1 = v0;
  v1[1] = sub_1005B5E88;
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  return SFProgressTask.finalValue.getter(v2, v3);
}

uint64_t sub_1005B5E88()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = *(void *)(*v1 + 72);
  uint64_t v5 = *(void *)(*v1 + 64);
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 88);
  if (v0) {
    uint64_t v7 = sub_1005B6208;
  }
  else {
    uint64_t v7 = sub_1005B6010;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1005B6010()
{
  int v1 = (*(uint64_t (**)(void, void))(v0[6] + 88))(v0[7], v0[5]);
  if (v1 == enum case for SFInterventionResponse.accept(_:))
  {
    uint64_t v2 = v0[4];
    uint64_t v3 = v0[2];
    uint64_t v4 = type metadata accessor for SFAirDropReceive.ItemDestination();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v3, v2, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
LABEL_5:
    return v5();
  }
  if (v1 == enum case for SFInterventionResponse.reject(_:))
  {
    uint64_t v6 = type metadata accessor for SFAirDropReceive.Failure();
    sub_1005BB278(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v6 - 8) + 104))(v7, enum case for SFAirDropReceive.Failure.declined(_:), v6);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    goto LABEL_5;
  }
  return _diagnoseUnexpectedEnumCase<A>(type:)();
}

uint64_t sub_1005B6208()
{
  swift_task_dealloc();
  swift_task_dealloc();
  int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005B6278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A008 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_10000B47C(v16, (uint64_t)qword_10097A280);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  unint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v33 = a2;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v37 = v30;
    uint64_t v31 = a4;
    *(_DWORD *)uint64_t v20 = 136315138;
    int v28 = v20 + 4;
    int v29 = v20;
    SFAirDropReceive.Transfer.id.getter();
    sub_1005BB278(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
    uint64_t v21 = v35;
    uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v32 = a5;
    unint64_t v24 = v23;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v21);
    uint64_t v36 = sub_100254634(v22, v24, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Transfer %s was cancelled.", v29, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }

  uint64_t v25 = type metadata accessor for SFAirDropReceive.Failure();
  sub_1005BB278(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, enum case for SFAirDropReceive.Failure.receiverCancelled(_:), v25);
  type metadata accessor for SFProgressTask();
  SFProgressTask.cancel(_:)();
  return swift_errorRelease();
}

uint64_t sub_1005B669C()
{
  uint64_t v0 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A008 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_10097A280);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "openRequest was dismissed.", v7, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for SFAirDropReceive.ItemDestination.noItem(_:), v0);
  sub_10000A844(&qword_100973298);
  SFProgressContinuation.finish(with:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1005B6860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  uint64_t v7 = type metadata accessor for SFAirDropReceive.Transfer();
  v6[6] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[7] = v8;
  v6[8] = *(void *)(v8 + 64);
  v6[9] = swift_task_alloc();
  uint64_t v9 = sub_10000A844(&qword_100973298);
  v6[10] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v6[11] = v10;
  v6[12] = *(void *)(v10 + 64);
  v6[13] = swift_task_alloc();
  sub_10000A844(&qword_10096C920);
  v6[14] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v11 = static AirDropActor.shared;
  v6[15] = static AirDropActor.shared;
  return _swift_task_switch(sub_1005B6A00, v11, 0);
}

uint64_t sub_1005B6A00()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[6];
  uint64_t v19 = v0[5];
  uint64_t v8 = v0[3];
  uint64_t v20 = v0[4];
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v1, 1, 1, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v8, v5);
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v11 = swift_allocObject();
  v0[16] = v11;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v11 + v10, v2, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v19, v7);
  unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = swift_allocObject();
  v0[17] = v13;
  *(void *)(v13 + 16) = v20;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v13 + v12, v4, v7);
  uint64_t v14 = (void *)swift_task_alloc();
  v0[18] = v14;
  uint64_t v15 = type metadata accessor for SFAirDropReceive.ItemDestination();
  *uint64_t v14 = v0;
  v14[1] = sub_1005B6C2C;
  uint64_t v16 = v0[14];
  uint64_t v17 = v0[2];
  return concurrentRace<A>(priority:operation:against:)(v17, v16, &unk_10097A2B0, v11, &unk_10097A2C0, v13, v15);
}

uint64_t sub_1005B6C2C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 112);
  uint64_t v3 = *(void **)v1;
  v3[19] = v0;
  swift_task_dealloc();
  sub_10000A7E8(v2, &qword_10096C920);
  swift_release();
  swift_release();
  if (v0)
  {
    uint64_t v4 = v3[15];
    return _swift_task_switch(sub_1005B6DF4, v4, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v3[1];
    return v5();
  }
}

uint64_t sub_1005B6DF4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005B6E6C(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = sub_10000A844(&qword_1009732C0);
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v4 = static AirDropActor.shared;
  v2[7] = static AirDropActor.shared;
  return _swift_task_switch(sub_100411640, v4, 0);
}

uint64_t sub_1005B6F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SFAirDropReceive.Transfer();
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  v3[11] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for ContinuousClock();
  v3[12] = v6;
  v3[13] = *(void *)(v6 - 8);
  v3[14] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  v3[15] = static AirDropActor.shared;
  return _swift_task_switch(sub_1005B7124, v7, 0);
}

uint64_t sub_1005B7124()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = 1000000000000000000 * v1;
  uint64_t v3 = ((v1 >> 63) & 0xF21F494C589C0000) + (((unint64_t)v1 * (unsigned __int128)0xDE0B6B3A7640000uLL) >> 64);
  ContinuousClock.init()();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1005B7218;
  return v6(v2, v3, 0, 0, 1);
}

uint64_t sub_1005B7218()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 112);
  uint64_t v4 = *(void *)(*v1 + 104);
  uint64_t v5 = *(void *)(*v1 + 96);
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 120);
  if (v0) {
    uint64_t v7 = sub_1005B73A0;
  }
  else {
    uint64_t v7 = sub_1005B741C;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1005B73A0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005B741C()
{
  int v28 = v0;
  if (qword_10096A008 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[5];
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000B47C(v5, (uint64_t)qword_10097A280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = v0[10];
  uint64_t v10 = v0[11];
  if (v8)
  {
    uint64_t v25 = v0[9];
    uint64_t v11 = v0[7];
    uint64_t v12 = v0[8];
    uint64_t v13 = v0[6];
    os_log_type_t type = v7;
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315138;
    SFAirDropReceive.Transfer.id.getter();
    sub_1005BB278(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
    log = v6;
    uint64_t v15 = v13;
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v18 = v17;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v15);
    v0[2] = sub_100254634(v16, v18, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v25);
    uint64_t v6 = log;
    _os_log_impl((void *)&_mh_execute_header, log, type, ".waitingForOpenResponse request timeout for transfer %s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v9 + 8))(v0[11], v0[9]);
  }

  uint64_t v19 = v0[3];
  uint64_t v20 = enum case for SFAirDropReceive.ItemDestination.noItem(_:);
  uint64_t v21 = type metadata accessor for SFAirDropReceive.ItemDestination();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v19, v20, v21);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_1005B7734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  sub_100278C8C(a2, (uint64_t)v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v7);
  unint64_t v14 = (*(unsigned __int8 *)(v8 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = swift_allocObject();
  sub_1002AF688(v18, v15 + 16);
  *(void *)(v15 + 56) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v15 + v14, (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  swift_bridgeObjectRetain();
  static Task<>.noThrow(priority:operation:)();
  swift_release();
  swift_release();
  sub_10000A7E8((uint64_t)v12, &qword_10096C920);
  sub_10000A844(&qword_100973298);
  return SFProgressContinuation.finish(with:)();
}

uint64_t sub_1005B7970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[3] = a2;
  uint64_t v5 = type metadata accessor for UUID();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v6 = static AirDropActor.shared;
  v4[9] = static AirDropActor.shared;
  return _swift_task_switch(sub_1005B7A70, v6, 0);
}

uint64_t sub_1005B7A70()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10026BB6C(v1, v2);
  SFAirDropReceive.Transfer.receiveID.getter();
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[10] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1005B7B98;
  uint64_t v5 = v0[8];
  uint64_t v7 = v0[4];
  uint64_t v6 = v0[5];
  return v9(v7, v5, v6, v2, v3);
}

uint64_t sub_1005B7B98(char a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 64);
  uint64_t v6 = *(void *)(*v2 + 56);
  uint64_t v7 = *(void *)(*v2 + 48);
  *(unsigned char *)(v4 + 100) = a1;
  *(void *)(v4 + 88) = v1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  uint64_t v8 = *(void *)(v3 + 72);
  if (v1) {
    uint64_t v9 = sub_1005B7E88;
  }
  else {
    uint64_t v9 = sub_1005B7D2C;
  }
  return _swift_task_switch(v9, v8, 0);
}

uint64_t sub_1005B7D2C()
{
  if (qword_10096A008 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097A280);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = *(unsigned __int8 *)(v0 + 100);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67109120;
    *(_DWORD *)(v0 + 96) = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Move to App finished with success: %{BOOL}d", v5, 8u);
    swift_slowDealloc();
  }

  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1005B7E88()
{
  if (qword_10096A008 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097A280);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)int v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Move to App threw error %@", v4, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1005B8094(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v34 = v2;
  __chkstk_darwin(v2);
  uint64_t v31 = v3;
  uint64_t v32 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v4 - 8);
  uint64_t v37 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for UUID();
  uint64_t v30 = *(void *)(v35 - 8);
  uint64_t v6 = *(void *)(v30 + 64);
  uint64_t v7 = __chkstk_darwin(v35);
  uint64_t v8 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v36 = (char *)&v30 - v9;
  uint64_t v10 = type metadata accessor for SFAirDrop.TransferType();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SFAirDropReceive.AskRequest();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  SFAirDropReceive.Transfer.askRequest.getter();
  SFAirDropReceive.AskRequest.type.getter();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  LOBYTE(v17) = SFAirDrop.TransferType.isFiles.getter();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v17)
  {
    uint64_t v19 = v36;
    SFAirDropReceive.Transfer.receiveID.getter();
    uint64_t v20 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v37, 1, 1, v20);
    uint64_t v21 = v32;
    uint64_t v22 = v33;
    uint64_t v23 = v34;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v32, a1, v34);
    uint64_t v24 = v30;
    uint64_t v25 = v35;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v8, v19, v35);
    unint64_t v26 = (*(unsigned __int8 *)(v22 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    unint64_t v27 = (v31 + *(unsigned __int8 *)(v24 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    uint64_t v28 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v28 + v26, v21, v23);
    (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v28 + v27, v8, v25);
    uint64_t v29 = (uint64_t)v37;
    static Task<>.noThrow(priority:operation:)();
    swift_release();
    swift_release();
    sub_10000A7E8(v29, &qword_10096C920);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v36, v25);
  }
  return result;
}

uint64_t sub_1005B8504()
{
  uint64_t v1 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

void *sub_1005B8654(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  LODWORD(v163) = a6;
  uint64_t v170 = a5;
  uint64_t v162 = a4;
  uint64_t v182 = a2;
  uint64_t v155 = a1;
  uint64_t v9 = sub_10000A844(&qword_10096B368);
  uint64_t v152 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v160 = (char *)&v149 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v159 = (char *)&v149 - v12;
  uint64_t v157 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v156 = *(void *)(v157 - 8);
  uint64_t v13 = __chkstk_darwin(v157);
  uint64_t v153 = v14;
  v154 = (char *)&v149 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = a7;
  v175 = *(char **)(a7 - 8);
  __chkstk_darwin(v13);
  v171 = (char *)&v149 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = sub_10000A844(&qword_100973298);
  uint64_t v176 = *(void *)(v169 - 8);
  __chkstk_darwin(v169);
  uint64_t v165 = v16;
  v168 = (char *)&v149 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v17 = *(void *)(v181 - 8);
  uint64_t v18 = __chkstk_darwin(v181);
  uint64_t v20 = (char *)&v149 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v177 = (uint64_t *)((char *)&v149 - v21);
  uint64_t v22 = type metadata accessor for SFAirDrop.ButtonConfiguration();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v179 = v22;
  uint64_t v180 = v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v161 = (unint64_t *)((char *)&v149 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v24);
  uint64_t v178 = (uint64_t *)((char *)&v149 - v26);
  uint64_t v167 = sub_10000A844(&qword_10096B2F8);
  uint64_t v166 = *(void *)(v167 - 8);
  uint64_t v27 = __chkstk_darwin(v167);
  uint64_t v150 = (char *)&v149 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v151 = (char *)&v149 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v158 = (char *)&v149 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v164 = (char *)&v149 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  v174 = (char *)&v149 - v36;
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v149 - v37;
  uint64_t v39 = type metadata accessor for SFPlatform();
  uint64_t v40 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v42 = (char *)&v149 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  static SFPlatform.iOS.getter();
  LOBYTE(a7) = static SFPlatform.isPlatform(_:)();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v40 + 8);
  v43(v42, v39);
  if ((a7 & 1) != 0
    || (static SFPlatform.watchOS.getter(), char v44 = static SFPlatform.isPlatform(_:)(), v43(v42, v39), (v44 & 1) != 0))
  {
    if (a3)
    {
      NSString v45 = _swiftEmptyArrayStorage;
      uint64_t v46 = v182;
      uint64_t v47 = v173;
      uint64_t v48 = v172;
      NSString v49 = v171;
LABEL_19:
      (*((void (**)(char *, uint64_t, uint64_t))v175 + 2))(v49, v48, v47);
      sub_10000A844(&qword_100978598);
      if (swift_dynamicCast())
      {
        sub_1002AF688(v183, (uint64_t)&v185);
        uint64_t v79 = v186;
        uint64_t v80 = v187;
        sub_10026BB6C(&v185, v186);
        if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 8))(v46, v79, v80))
        {
          unint64_t v81 = 0xD000000000000013;
          if (v163) {
            unint64_t v81 = 0x662E7265646C6F66;
          }
          unint64_t v82 = 0x80000001007C2550;
          if (v163) {
            unint64_t v82 = 0xEB000000006C6C69;
          }
          uint64_t v83 = v161;
          *uint64_t v161 = v81;
          v83[1] = v82;
          uint64_t v84 = v179;
          uint64_t v85 = v180;
          (*(void (**)(unint64_t *, void, uint64_t))(v180 + 104))(v83, enum case for SFAirDrop.ButtonConfiguration.symbol(_:), v179);
          uint64_t v86 = sub_10000A844(&qword_100970B50);
          v175 = &v164[*(int *)(v86 + 48)];
          (*(void (**)(uint64_t *, unint64_t *, uint64_t))(v85 + 16))(v178, v83, v84);
          uint64_t v87 = v177;
          void *v177 = 0xD000000000000034;
          v87[1] = 0x80000001007B7D20;
          (*(void (**)(void))(v17 + 104))();
          sub_100278C8C((uint64_t)&v185, (uint64_t)v183);
          uint64_t v88 = v156;
          id v89 = v154;
          uint64_t v90 = v157;
          (*(void (**)(char *, uint64_t, uint64_t))(v156 + 16))(v154, v155, v157);
          uint64_t v91 = v176;
          uint64_t v92 = v168;
          uint64_t v93 = v169;
          (*(void (**)(char *, uint64_t, uint64_t))(v176 + 16))(v168, v170, v169);
          unint64_t v94 = (*(unsigned __int8 *)(v88 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
          unint64_t v95 = (v153 + *(unsigned __int8 *)(v91 + 80) + v94) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
          uint64_t v96 = swift_allocObject();
          sub_1002AF688(v183, v96 + 16);
          *(void *)(v96 + 56) = v182;
          uint64_t v97 = v89;
          uint64_t v98 = v166;
          (*(void (**)(unint64_t, char *, uint64_t))(v88 + 32))(v96 + v94, v97, v90);
          (*(void (**)(unint64_t, char *, uint64_t))(v91 + 32))(v96 + v95, v92, v93);
          sub_1005BB278(&qword_1009732A0, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
          sub_1005BB278(&qword_1009732A8, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
          sub_1005BB278(&qword_10096CCB0, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
          swift_bridgeObjectRetain();
          unint64_t v99 = v164;
          SFAirDrop.AcceptAction.Single.init(id:buttonConfiguration:prominent:hidden:defaultAnswer:operation:)();
          UUID.init()();
          uint64_t v100 = v167;
          (*(void (**)(char *, void, uint64_t))(v98 + 104))(v99, enum case for SFAirDrop.AcceptAction.single<A>(_:), v167);
          unint64_t v101 = v158;
          (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v158, v99, v100);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            NSString v45 = (void *)sub_1002539A0(0, v45[2] + 1, 1, (unint64_t)v45);
          }
          unint64_t v103 = v45[2];
          unint64_t v102 = v45[3];
          if (v103 >= v102 >> 1) {
            NSString v45 = (void *)sub_1002539A0(v102 > 1, v103 + 1, 1, (unint64_t)v45);
          }
          v45[2] = v103 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v98 + 32))((unint64_t)v45+ ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80))+ *(void *)(v98 + 72) * v103, v101, v100);
          (*(void (**)(char *, uint64_t))(v98 + 8))(v164, v100);
          (*(void (**)(unint64_t *, uint64_t))(v180 + 8))(v161, v179);
        }
        sub_10024D338((uint64_t)&v185);
      }
      else
      {
        uint64_t v184 = 0;
        memset(v183, 0, sizeof(v183));
        sub_10000A7E8((uint64_t)v183, &qword_1009785A0);
      }
      return v45;
    }
    if (v163)
    {
      NSString v50 = String._bridgeToObjectiveC()();
      id v51 = (id)SFLocalizedStringForKey();

      uint64_t v52 = v166;
      if (!v51)
      {
        unint64_t v53 = 0xE700000000000000;
        uint64_t v54 = 0x70704120746547;
LABEL_16:
        uint64_t v160 = &v38[*(int *)(sub_10000A844(&qword_100970B50) + 48)];
        NSString v69 = v178;
        uint64_t v68 = v179;
        *uint64_t v178 = v54;
        v69[1] = v53;
        (*(void (**)(uint64_t *, void, uint64_t))(v180 + 104))(v69, enum case for SFAirDrop.ButtonConfiguration.text(_:), v68);
        uint64_t v149 = v17;
        (*(void (**)(void *, uint64_t, uint64_t))(v17 + 16))(v177, v162, v181);
        uint64_t v70 = v176;
        uint64_t v71 = v168;
        uint64_t v72 = v169;
        (*(void (**)(char *, uint64_t, uint64_t))(v176 + 16))(v168, v170, v169);
        unint64_t v73 = (*(unsigned __int8 *)(v70 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
        uint64_t v74 = swift_allocObject();
        (*(void (**)(unint64_t, char *, uint64_t))(v70 + 32))(v74 + v73, v71, v72);
        sub_1005BB278(&qword_1009732A0, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
        sub_1005BB278(&qword_1009732A8, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
        sub_1005BB278(&qword_10096CCB0, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
        SFAirDrop.AcceptAction.Single.init(id:buttonConfiguration:prominent:hidden:defaultAnswer:operation:)();
        UUID.init()();
        uint64_t v75 = v167;
        (*(void (**)(char *, void, uint64_t))(v52 + 104))(v38, enum case for SFAirDrop.AcceptAction.single<A>(_:), v167);
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v174, v38, v75);
        NSString v45 = (void *)sub_1002539A0(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
        unint64_t v77 = v45[2];
        unint64_t v76 = v45[3];
        if (v77 >= v76 >> 1) {
          NSString v45 = (void *)sub_1002539A0(v76 > 1, v77 + 1, 1, (unint64_t)v45);
        }
        uint64_t v46 = v182;
        uint64_t v47 = v173;
        uint64_t v78 = v174;
        uint64_t v48 = v172;
        NSString v49 = v171;
        v45[2] = v77 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v52 + 32))((unint64_t)v45+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(void *)(v52 + 72) * v77, v78, v75);
        (*(void (**)(char *, uint64_t))(v52 + 8))(v38, v75);
        uint64_t v17 = v149;
        goto LABEL_19;
      }
    }
    else
    {
      NSString v66 = String._bridgeToObjectiveC()();
      id v51 = (id)SFLocalizedStringForKey();

      uint64_t v52 = v166;
      if (!v51)
      {
        unint64_t v53 = 0xE400000000000000;
        uint64_t v54 = 2003134806;
        goto LABEL_16;
      }
    }
    uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v53 = v67;

    goto LABEL_16;
  }
  static SFPlatform.macOS.getter();
  char v55 = static SFPlatform.isPlatform(_:)();
  v43(v42, v39);
  if ((v55 & 1) == 0) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v182 = v9;
  uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v57 = v162;
  uint64_t v58 = v181;
  v56(v20, v162, v181);
  int v59 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v20, v58);
  int v60 = enum case for SFAirDropReceive.ItemDestination.default(_:);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v58);
  if (v59 != v60) {
    return _swiftEmptyArrayStorage;
  }
  NSString v61 = String._bridgeToObjectiveC()();
  id v62 = (id)SFLocalizedStringForKey();

  uint64_t v149 = v17;
  if (v62)
  {
    uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v65 = v64;
  }
  else
  {
    unint64_t v65 = 0xEE007265646E6946;
    uint64_t v63 = 0x206E6920776F6853;
  }
  uint64_t v105 = v178;
  *uint64_t v178 = v63;
  v105[1] = v65;
  uint64_t v106 = *(char **)(v180 + 104);
  LODWORD(v175) = enum case for SFAirDrop.ButtonConfiguration.text(_:);
  v180 += 104;
  v174 = v106;
  ((void (*)(uint64_t *))v106)(v105);
  v56((char *)v177, v57, v181);
  uint64_t v107 = v176;
  uint64_t v108 = v168;
  uint64_t v109 = v169;
  uint64_t v164 = *(char **)(v176 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v164)(v168, v170, v169);
  uint64_t v110 = *(unsigned __int8 *)(v107 + 80);
  uint64_t v111 = (v110 + 16) & ~v110;
  v165 += v111;
  uint64_t v163 = v110 | 7;
  uint64_t v112 = swift_allocObject();
  uint64_t v113 = *(void (**)(uint64_t, char *, uint64_t))(v107 + 32);
  uint64_t v176 = v107 + 32;
  v113(v112 + v111, v108, v109);
  uint64_t v114 = sub_1005BB278(&qword_1009732A0, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
  uint64_t v115 = sub_1005BB278(&qword_1009732A8, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
  v171 = (char *)sub_1005BB278(&qword_10096CCB0, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination);
  uint64_t v172 = v115;
  uint64_t v173 = v114;
  SFAirDrop.AcceptAction.Single.init(id:buttonConfiguration:prominent:hidden:defaultAnswer:operation:)();
  NSString v116 = String._bridgeToObjectiveC()();
  id v117 = (id)SFLocalizedStringForKey();

  if (v117)
  {
    uint64_t v118 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v120 = v119;
  }
  else
  {
    unint64_t v120 = 0xE400000000000000;
    uint64_t v118 = 1852141647;
  }
  NSString v122 = v178;
  uint64_t v121 = v179;
  *uint64_t v178 = v118;
  v122[1] = v120;
  ((void (*)(uint64_t *, void, uint64_t))v174)(v122, v175, v121);
  id v123 = v177;
  void *v177 = 0xD000000000000024;
  v123[1] = 0x80000001007C24E0;
  (*(void (**)(void *, void, uint64_t))(v149 + 104))(v123, enum case for SFAirDropReceive.ItemDestination.customApp(_:), v181);
  uint64_t v124 = v168;
  uint64_t v125 = v169;
  ((void (*)(char *, uint64_t, uint64_t))v164)(v168, v170, v169);
  uint64_t v126 = swift_allocObject();
  v113(v126 + v111, v124, v125);
  SFAirDrop.AcceptAction.Single.init(id:buttonConfiguration:prominent:hidden:defaultAnswer:operation:)();
  NSString v127 = String._bridgeToObjectiveC()();
  id v128 = (id)SFLocalizedStringForKey();

  if (v128)
  {
    uint64_t v129 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v131 = v130;
  }
  else
  {
    unint64_t v131 = 0xE700000000000000;
    uint64_t v129 = 0x736E6F6974704FLL;
  }
  uint64_t v132 = v166;
  sub_10000A844(&qword_10097A2C8);
  uint64_t v133 = v151;
  uint64_t v135 = v178;
  uint64_t v134 = v179;
  *uint64_t v178 = v129;
  v135[1] = v131;
  ((void (*)(uint64_t *, void, uint64_t))v174)(v135, v175, v134);
  sub_10000A844(&qword_10096B360);
  uint64_t v136 = v152;
  uint64_t v137 = *(void *)(v152 + 72);
  unint64_t v138 = (*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80);
  uint64_t v139 = swift_allocObject();
  *(_OWORD *)(v139 + 16) = xmmword_100770AD0;
  unint64_t v140 = v139 + v138;
  uint64_t v141 = *(void (**)(unint64_t, char *, uint64_t))(v136 + 16);
  uint64_t v142 = v182;
  v141(v139 + v138, v160, v182);
  v141(v140 + v137, v159, v142);
  SFAirDrop.AcceptAction.Composite.init(buttonConfiguration:actions:)();
  UUID.init()();
  uint64_t v143 = v167;
  (*(void (**)(char *, void, uint64_t))(v132 + 104))(v133, enum case for SFAirDrop.AcceptAction.composite<A>(_:), v167);
  uint64_t v144 = v150;
  (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v150, v133, v143);
  NSString v45 = (void *)sub_1002539A0(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  unint64_t v146 = v45[2];
  unint64_t v145 = v45[3];
  if (v146 >= v145 >> 1) {
    NSString v45 = (void *)sub_1002539A0(v145 > 1, v146 + 1, 1, (unint64_t)v45);
  }
  v45[2] = v146 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v132 + 32))((unint64_t)v45+ ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80))+ *(void *)(v132 + 72) * v146, v144, v143);
  (*(void (**)(char *, uint64_t))(v132 + 8))(v151, v143);
  uint64_t v147 = *(void (**)(char *, uint64_t))(v152 + 8);
  uint64_t v148 = v182;
  v147(v160, v182);
  v147(v159, v148);
  return v45;
}

uint64_t sub_1005B9CA8()
{
  return sub_100395108(&qword_100973298);
}

uint64_t sub_1005B9CB4()
{
  sub_10000A844(&qword_100973298);

  return sub_1005B669C();
}

uint64_t sub_1005B9D18()
{
  uint64_t v1 = sub_10000A844(&qword_100973298);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1005B9E80(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(sub_10000A844(&qword_100973298) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SFAirDropReceive.Transfer() - 8) + 80);
  uint64_t v9 = v7 + v8 + 8;
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = v1 + v6;
  uint64_t v13 = *(void *)(v1 + v7);
  uint64_t v14 = v1 + (v9 & ~v8);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  *uint64_t v15 = v3;
  v15[1] = sub_10000A6F0;
  return sub_1005B6860(a1, v10, v11, v12, v13, v14);
}

uint64_t sub_1005B9FF0()
{
  return sub_100395108(&qword_100973298);
}

uint64_t sub_1005B9FFC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10000A844(&qword_100973298) - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *unint64_t v6 = v2;
  v6[1] = sub_10000A6F0;
  return sub_1005B6E6C(a1, v5);
}

uint64_t sub_1005BA0D8()
{
  uint64_t v1 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1005BA168(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SFAirDropReceive.Transfer() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_10000A6F4;
  return sub_1005B6F6C(a1, v5, v6);
}

uint64_t sub_1005BA250()
{
  return sub_100395108(&qword_100973298);
}

uint64_t sub_1005BA25C()
{
  return sub_100395108(&qword_100973298);
}

uint64_t sub_1005BA268()
{
  return sub_100395108(&qword_100973298);
}

uint64_t sub_1005BA274()
{
  uint64_t v1 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = sub_10000A844(&qword_100973298);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  sub_10024D338(v0 + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1005BA3D8(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SFAirDropReceive.Transfer() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_10000A844(&qword_100973298);
  uint64_t v5 = *(void *)(v1 + 56);

  return sub_1005B7734(a1, v1 + 16, v5, v1 + v4);
}

uint64_t sub_1005BA4B8()
{
  uint64_t v1 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  sub_10024D338(v0 + 16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1005BA58C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SFAirDropReceive.Transfer() - 8);
  uint64_t v5 = v1 + 16;
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10000A6F4;
  return sub_1005B7970(a1, v5, v6, v7);
}

uint64_t sub_1005BA67C()
{
  return sub_100395108(&qword_10097A2E0);
}

uint64_t sub_1005BA688(uint64_t a1)
{
  return sub_10053AC14(a1, &qword_10097A2E0);
}

uint64_t sub_1005BA694()
{
  uint64_t v1 = sub_10000A844(&qword_10097A2E0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for SFAirDropReceive.ItemDestination();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1005BA7F0(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(sub_10000A844(&qword_10097A2E0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SFAirDropReceive.ItemDestination() - 8) + 80);
  unint64_t v9 = v6 + v7 + v8;
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = v1 + v6;
  uint64_t v13 = v1 + (v9 & ~v8);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v14;
  *uint64_t v14 = v3;
  v14[1] = sub_10000A6F0;
  return sub_1005B5C70(a1, v10, v11, v12, v13);
}

uint64_t sub_1005BA94C()
{
  return sub_100395108(&qword_100973298);
}

uint64_t sub_1005BA958()
{
  return sub_100395108(&qword_100973298);
}

uint64_t sub_1005BA964()
{
  return sub_1005BAE00(&qword_100973298, (unsigned int *)&enum case for SFAirDropReceive.Failure.declined(_:));
}

uint64_t sub_1005BA978()
{
  return sub_100394A2C(&qword_100973298);
}

uint64_t sub_1005BA984(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10000A844(&qword_100973298) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10000A6F0;
  return sub_1005B5B70(a1, v5, v6, v7);
}

uint64_t sub_1005BAA74()
{
  uint64_t v1 = type metadata accessor for SFAirDropReceive.Transfer();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for SFProgressTask();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1005BABD0()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = *(void *)(type metadata accessor for SFAirDropReceive.Transfer() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for SFProgressTask() - 8);
  uint64_t v8 = (uint64_t)v0 + ((v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_1005B6278((uint64_t)v0 + v5, v8, v1, v2, v3);
}

uint64_t sub_1005BACCC()
{
  return sub_100395108(&qword_100970CE0);
}

uint64_t sub_1005BACD8()
{
  return sub_1005BAE00(&qword_100970CE0, (unsigned int *)&enum case for SFAirDropReceive.Failure.receiverCancelled(_:));
}

uint64_t sub_1005BACEC()
{
  return sub_100395108(&qword_100970CE0);
}

uint64_t sub_1005BACF8()
{
  return sub_100394A2C(&qword_100970CE0);
}

uint64_t sub_1005BAD04(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10000A844(&qword_100970CE0) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10000A6F0;
  return sub_100537380(a1, v5, v6, v7);
}

uint64_t sub_1005BADF4()
{
  return sub_100395108(&qword_100973298);
}

uint64_t sub_1005BAE00(uint64_t *a1, unsigned int *a2)
{
  uint64_t v5 = *(void *)(sub_10000A844(a1) - 8);
  return sub_1005B5A80(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2, a1);
}

uint64_t sub_1005BAE70()
{
  return sub_100395108(&qword_100973298);
}

uint64_t sub_1005BAE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_10096CCA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005BAEE4()
{
  uint64_t v1 = *(void *)(sub_10000A844(&qword_10096CCA0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v13 = *(void *)(v1 + 64);
  uint64_t v4 = sub_10000A844(&qword_100973298);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  swift_unknownObjectRelease();
  uint64_t v8 = sub_10000A844(&qword_10096BBA8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v0 + v3, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v3, v8);
  }
  uint64_t v10 = (v3 + v13 + v6) & ~v6;
  uint64_t v11 = v10 + v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v10, v4);

  return _swift_deallocObject(v0, v11, v2 | v6 | 7);
}

uint64_t sub_1005BB0B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_10096CCA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005BB118(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(sub_10000A844(&qword_10096CCA0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(sub_10000A844(&qword_100973298) - 8) + 80);
  unint64_t v9 = v6 + v7 + v8;
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = v1 + v6;
  uint64_t v13 = v1 + (v9 & ~v8);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v14;
  *uint64_t v14 = v3;
  v14[1] = sub_10000A6F0;
  return sub_1005B442C(a1, v10, v11, v12, v13);
}

uint64_t sub_1005BB278(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005BB2C0()
{
  return sub_100395108(&qword_10096BBA8);
}

uint64_t sub_1005BB2CC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10000A844(&qword_10096BBA8) - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *unint64_t v6 = v2;
  v6[1] = sub_10000A6F0;
  return sub_1005B5320(a1, v5);
}

uint64_t sub_1005BB3A8()
{
  return sub_100395108(&qword_100973298);
}

uint64_t sub_1005BB3B4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10000A844(&qword_100973298) - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *unint64_t v6 = v2;
  v6[1] = sub_10000A6F0;
  return sub_1005B58C4(a1, v5);
}

uint64_t sub_1005BB490()
{
  if (qword_10096A010 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_10097A370);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Starting to listen over Bonjour", v3, 2u);
    swift_slowDealloc();
  }

  NWListener.stateUpdateHandler.setter();
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  NWListener.newConnectionHandler.setter();
  swift_release();
  NWListener.start(queue:)();
  if (qword_10096A050 != -1) {
    swift_once();
  }
  sub_1005DE128();

  return sub_1005BC8D8();
}

uint64_t sub_1005BB630()
{
  uint64_t v1 = v0;
  if (qword_10096A010 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097A370);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Stopping temp pairing server", v5, 2u);
    swift_slowDealloc();
  }

  if (v1[9])
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    OS_dispatch_source.cancel()();
    swift_unknownObjectRelease();
    v1[9] = 0;
    swift_unknownObjectRelease();
  }
  NWListener.cancel()();
  swift_beginAccess();
  unint64_t v6 = v1[8];
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v7 = result;
    if (!result) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v7) {
      goto LABEL_16;
    }
  }
  if (v7 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    NWConnection.cancel()();
    swift_release();
  }
LABEL_16:
  swift_bridgeObjectRelease();
  if (qword_10096A050 != -1) {
    swift_once();
  }
  uint64_t result = sub_1005DE430();
  uint64_t v10 = (void (*)(uint64_t))v1[3];
  if (v10)
  {
    uint64_t v11 = swift_retain();
    v10(v11);
    return sub_1002CA430((uint64_t)v10);
  }
  return result;
}

uint64_t sub_1005BB88C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097A370);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097A370);
  if (qword_100969C48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994528);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1005BB954()
{
  uint64_t v0 = type metadata accessor for DispatchTimeInterval();
  sub_10024A2B8(v0, qword_10097A388);
  *(void *)sub_10000B47C(v0, (uint64_t)qword_10097A388) = 60;
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);

  return v1();
}

void *sub_1005BB9E4(void *a1, void *a2, void *a3)
{
  uint64_t v48 = a1;
  os_log_type_t v4 = v3;
  uint64_t v7 = *v3;
  uint64_t v8 = type metadata accessor for NWTXTRecord();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_10000A844((uint64_t *)&unk_10097A4A0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for NWEndpoint.Port();
  __chkstk_darwin(v12 - 8);
  v3[3] = 0;
  v3[4] = 0;
  v3[8] = _swiftEmptyArrayStorage;
  v3[9] = 0;
  v3[7] = [objc_allocWithZone((Class)RPClient) init];
  v3[2] = a3;
  uint64_t v13 = self;
  id v14 = a3;
  id v15 = [v13 sharedNearbyAgent];
  id v16 = [v15 temporarySelfIdentity];

  if (!v16)
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = type metadata accessor for SFError();
    sub_1005BD8AC(&qword_10096C568, (void (*)(uint64_t))&type metadata accessor for SFError);
    swift_allocError();
    *uint64_t v36 = 0xD000000000000015;
    v36[1] = 0x80000001007C2760;
    v36[2] = 0xD00000000000005ALL;
    v36[3] = 0x80000001007C2780;
    v36[4] = 42;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v35 - 8) + 104))(v36, enum case for SFError.missingValue(_:), v35);
    swift_willThrow();
LABEL_8:

    int v39 = 0;
    goto LABEL_11;
  }
  id v17 = [v16 edPKData];
  if (!v17)
  {
    swift_bridgeObjectRelease();
    uint64_t v37 = type metadata accessor for SFError();
    sub_1005BD8AC(&qword_10096C568, (void (*)(uint64_t))&type metadata accessor for SFError);
    swift_allocError();
    *uint64_t v38 = 0x617461444B506465;
    v38[1] = 0xE800000000000000;
    v38[2] = 0xD00000000000005ALL;
    v38[3] = 0x80000001007C2780;
    v38[4] = 46;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v37 - 8) + 104))(v38, enum case for SFError.missingValue(_:), v37);
    swift_willThrow();

    goto LABEL_8;
  }
  uint64_t v18 = v17;
  id v46 = v14;
  uint64_t v44 = v7;
  uint64_t v19 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  v4[6] = v16;
  id v22 = v16;
  uint64_t v47 = v19;
  NSString v45 = v21;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  v50[0] = 0;
  id v24 = [v22 authTagForData:isa type:1 error:v50];

  id v25 = v50[0];
  if (v24)
  {
    uint64_t v26 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v28 = v27;

    v50[1] = v48;
    v50[2] = a2;
    uint64_t v48 = a2;
    unint64_t v29 = (unint64_t)v45;
    v50[3] = v47;
    v50[4] = v45;
    v50[5] = v26;
    v50[6] = v28;
    sub_10025ADCC((uint64_t)v47, (unint64_t)v45);
    sub_10025ADCC((uint64_t)v26, (unint64_t)v28);
    sub_1006687E8();
    static NWEndpoint.Port.any.getter();
    type metadata accessor for NWListener();
    swift_allocObject();
    uint64_t v30 = v49;
    uint64_t v31 = NWListener.init(using:on:)();
    if (!v30)
    {
      v4[5] = v31;
      uint64_t v49 = v31;
      sub_1004BE364();
      NWListener.Service.init(name:type:domain:txtRecord:)();
      uint64_t v42 = type metadata accessor for NWListener.Service();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v11, 0, 1, v42);
      NWListener.service.setter();

      uint64_t v43 = (uint64_t)v47;
      sub_100250CC4((uint64_t)v47, v29);
      sub_100250CC4((uint64_t)v26, (unint64_t)v28);
      swift_bridgeObjectRelease();
      sub_100250CC4(v43, v29);
      sub_100250CC4((uint64_t)v26, (unint64_t)v28);
      return v4;
    }

    uint64_t v32 = (uint64_t)v47;
    sub_100250CC4((uint64_t)v47, v29);
    sub_100250CC4((uint64_t)v26, (unint64_t)v28);
    swift_bridgeObjectRelease();
    sub_100250CC4(v32, v29);
    uint64_t v33 = (uint64_t)v26;
    unint64_t v34 = (unint64_t)v28;
  }
  else
  {
    uint64_t v40 = v25;
    swift_bridgeObjectRelease();
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v33 = (uint64_t)v47;
    unint64_t v34 = (unint64_t)v45;
  }
  sub_100250CC4(v33, v34);
  int v39 = 1;
LABEL_11:

  sub_1002CA430(v4[3]);
  if (v39) {

  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_deallocPartialClassInstance();
  return v4;
}

void sub_1005BC098(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NWListener.State();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  if (qword_10096A010 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000B47C(v9, (uint64_t)qword_10097A370);
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v10(v8, a1, v2);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v19 = v17;
    *(_DWORD *)uint64_t v13 = 136315138;
    id v16 = v13 + 4;
    v10(v6, (uint64_t)v8, v2);
    uint64_t v14 = String.init<A>(describing:)();
    uint64_t v18 = sub_100254634(v14, v15, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Bonjour listener state changed: %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
}

uint64_t sub_1005BC330(uint64_t a1)
{
  uint64_t v2 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = 0;
    void v8[3] = 0;
    v8[4] = v6;
    v8[5] = a1;
    swift_retain();
    sub_10028CFA8((uint64_t)v4, (uint64_t)&unk_10097A490, (uint64_t)v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_1005BC460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_1005BC480, 0, 0);
}

uint64_t sub_1005BC480()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v0 = static AirDropActor.shared;
  return _swift_task_switch(sub_1005BC518, v0, 0);
}

uint64_t sub_1005BC518()
{
  sub_1005BC578(*(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005BC578(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SDTempPairingConnection.Role(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (void *)((char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_10096A010 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000B47C(v7, (uint64_t)qword_10097A370);
  swift_retain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v23[1] = v4;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v24 = a1;
    v25[0] = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    type metadata accessor for NWConnection();
    swift_retain();
    uint64_t v12 = String.init<A>(describing:)();
    uint64_t v24 = sub_100254634(v12, v13, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Received incoming connection: %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  *uint64_t v6 = a1;
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = (void *)v2[6];
  unint64_t v15 = (void *)v2[2];
  type metadata accessor for SDTempPairingConnection(0);
  swift_allocObject();
  swift_retain();
  id v16 = v14;
  id v17 = v15;
  uint64_t v18 = sub_1004C51BC((uint64_t)v6, v16, v17);

  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  *(void *)(v20 + 24) = v18;
  uint64_t v21 = v18[3];
  v18[3] = sub_1005BD8A4;
  v18[4] = v20;
  swift_retain();
  sub_1002CA430(v21);
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v2[8] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v2[8] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1005BC8D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchTimeInterval();
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v38 = (uint64_t *)((char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  uint64_t v37 = (uint64_t)&v31 - v5;
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v36 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v33 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v34 = (char *)&v31 - v9;
  uint64_t v32 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v10 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  unint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for OS_dispatch_source.TimerFlags();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + 72))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    OS_dispatch_source.cancel()();
    swift_unknownObjectRelease();
    *(void *)(v0 + 72) = 0;
    swift_unknownObjectRelease();
  }
  sub_10000B740(0, (unint64_t *)&qword_10096D4F0);
  static OS_dispatch_source.TimerFlags.strict.getter();
  uint64_t v20 = static OS_dispatch_source.makeTimerSource(flags:queue:)();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  *(void *)(v1 + 72) = v20;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  swift_getObjectType();
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1005BD65C;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008E0810;
  id v22 = _Block_copy(aBlock);
  swift_retain();
  j___s8Dispatch0A3QoSV11unspecifiedACvgZ();
  sub_1005BD8F8();
  OS_dispatch_source.setEventHandler(qos:flags:handler:)();
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v32);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v31);
  swift_release();
  swift_release();
  uint64_t v23 = v33;
  static DispatchTime.now()();
  if (qword_10096A018 != -1) {
    swift_once();
  }
  uint64_t v24 = v40;
  sub_10000B47C(v40, (uint64_t)qword_10097A388);
  id v25 = v34;
  + infix(_:_:)();
  uint64_t v26 = v36;
  uint64_t v35 = *(void *)(v35 + 8);
  ((void (*)(char *, uint64_t))v35)(v23, v36);
  uint64_t v27 = v37;
  sub_1002C1F64(v37);
  uint64_t v28 = v38;
  sub_1002C1FD8(v38);
  OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
  unint64_t v29 = *(void (**)(void *, uint64_t))(v39 + 8);
  v29(v28, v24);
  v29((void *)v27, v24);
  ((void (*)(char *, uint64_t))v35)(v25, v26);
  OS_dispatch_source.activate()();
  return swift_unknownObjectRelease();
}

uint64_t sub_1005BCE84()
{
  uint64_t v0 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
    uint64_t v6 = qword_100969B90;
    swift_retain();
    if (v6 != -1) {
      swift_once();
    }
    uint64_t v7 = static AirDropActor.shared;
    uint64_t v8 = sub_1005BD8AC((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = v7;
    v9[3] = v8;
    v9[4] = v4;
    swift_retain();
    sub_10028CFA8((uint64_t)v2, (uint64_t)&unk_10097A480, (uint64_t)v9);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1005BD03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_1005BD0D8, v5, 0);
}

uint64_t sub_1005BD0D8()
{
  if (qword_10096A010 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097A370);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Timer fired, stopping server", v4, 2u);
    swift_slowDealloc();
  }

  sub_1005BB630();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1005BD1F4(void *a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1005BD268(a1, a3);
    return swift_release();
  }
  return result;
}

id sub_1005BD268(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_10096A010 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_10097A370);
  id v7 = a1;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v21 = v3;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    v23[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    sub_10000B740(0, (unint64_t *)&unk_100972810);
    id v11 = v7;
    uint64_t v12 = String.init<A>(describing:)();
    uint64_t v22 = sub_100254634(v12, v13, v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v3 = v21;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Adding remote identity: %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v14 = *(void **)(v3 + 56);
  [v14 addOrUpdateIdentity:v7 completion:v21, v22];
  NWConnection.cancel()();
  unint64_t v15 = (void *)(v3 + 64);
  swift_beginAccess();
  swift_retain();
  int64_t v16 = sub_1003E6FDC((uint64_t *)(v3 + 64), a2);
  swift_release();
  unint64_t v17 = *(void *)(v3 + 64);
  if (!(v17 >> 62))
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v18 >= v16) {
      goto LABEL_8;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v18 < v16) {
    goto LABEL_13;
  }
LABEL_8:
  sub_1005A5A30(v16, v18);
  id result = (id)swift_endAccess();
  if (!(*v15 >> 62))
  {
    if (*(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      return result;
    }
    return [v14 invalidate];
  }
LABEL_14:
  swift_bridgeObjectRetain();
  uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
  id result = (id)swift_bridgeObjectRelease();
  if (!v20) {
    return [v14 invalidate];
  }
  return result;
}

uint64_t sub_1005BD574()
{
  sub_1002CA430(*(void *)(v0 + 24));
  swift_release();

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1005BD5C4()
{
  sub_1005BD574();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDTempPairingServer()
{
  return self;
}

uint64_t sub_1005BD61C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005BD654(uint64_t a1)
{
  return sub_1005BC330(a1);
}

uint64_t sub_1005BD65C()
{
  return sub_1005BCE84();
}

uint64_t sub_1005BD664(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005BD674()
{
  return swift_release();
}

uint64_t sub_1005BD67C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1005BD6BC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_10000A6F4;
  return sub_1005BD03C(a1, v4, v5, v6);
}

uint64_t sub_1005BD770()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1005BD7B8()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_10000A6F0;
  *(_OWORD *)(v2 + 16) = v3;
  return _swift_task_switch(sub_1005BC480, 0, 0);
}

uint64_t sub_1005BD864()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005BD8A4(void *a1)
{
  return sub_1005BD1F4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1005BD8AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005BD8F8()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_1005BD9A4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097A4B0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097A4B0);
  if (qword_100969C60 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994570);
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1005BDA6C(uint64_t a1)
{
  return sub_1005BDABC(a1, (void (*)(void))sub_1005C144C, "Setting advertise rate on %s to %s", (SEL *)&selRef_setAdvertiseRate_);
}

id sub_1005BDA94(uint64_t a1)
{
  return sub_1005BDABC(a1, (void (*)(void))sub_1005C1534, "Setting use case on %s to %s", (SEL *)&selRef_setUseCase_);
}

id sub_1005BDABC(uint64_t a1, void (*a2)(void), const char *a3, SEL *a4)
{
  a2();
  uint64_t v8 = String.init(cString:)();
  unint64_t v10 = v9;
  if (qword_10096A020 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10000B47C(v11, (uint64_t)qword_10097A4B0);
  uint64_t v12 = v4;
  swift_bridgeObjectRetain();
  unint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    sub_100278C78(*(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_configuration], *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_configuration + 8]);
    uint64_t v16 = String.init<A>(describing:)();
    sub_100254634(v16, v17, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_100254634(v8, v10, &v19);
    a1 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, a3, (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return [v12[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_advertiser] *a4, a1];
}

id sub_1005BDD30(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_aggressiveAdvertiserTimer] = 0;
  *(void *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_queue] = a1;
  uint64_t v11 = (uint64_t *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_configuration];
  *uint64_t v11 = a2;
  v11[1] = a3;
  v11[2] = a4;
  id v12 = objc_allocWithZone((Class)CBAdvertiser);
  unint64_t v13 = v5;
  id v14 = a1;
  sub_100278C78(a2, a3);
  id v15 = [v12 init];
  *(void *)&v13[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_advertiser] = v15;

  v23.receiver = v13;
  v23.super_class = ObjectType;
  id v16 = [super init];
  unint64_t v17 = self;
  id v18 = v16;
  id v19 = [v17 defaultCenter];
  uint64_t v20 = off_100969790;
  id v21 = v18;
  [v19 addObserver:v21 selector:"handleRapportIdentitiesChanged" name:v20 object:0];
  sub_100250CB0(a2, a3);

  return v21;
}

void sub_1005BDEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (uint64_t *)((char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_queue];
  *unint64_t v10 = v11;
  uint64_t v12 = enum case for DispatchPredicate.onQueue(_:);
  unint64_t v13 = (uint64_t *)(v8 + 104);
  id v46 = *(void (**)(void *, uint64_t, uint64_t))(v8 + 104);
  v46(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  id v14 = v11;
  char v15 = _dispatchPreconditionTest(_:)();
  NSString v45 = *(void (**)(void *, uint64_t))(v8 + 8);
  v45(v10, v7);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  uint64_t v16 = OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_advertiser;
  [*(id *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_advertiser] setDispatchQueue:v14];
  uint64_t v42 = v16;
  unint64_t v17 = *(void **)&v4[v16];
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v52 = sub_1005C131C;
  unint64_t v53 = (void *)v18;
  aBlock = _NSConcreteStackBlock;
  uint64_t v3 = 1107296256;
  uint64_t v49 = 1107296256;
  NSString v50 = sub_100296520;
  id v51 = &unk_1008E0990;
  id v19 = _Block_copy(&aBlock);
  id v20 = v17;
  swift_release();
  [v20 setAdvertisingAddressChangedHandler:v19];
  _Block_release(v19);

  *unint64_t v10 = v14;
  v46(v10, v12, v7);
  id v21 = v14;
  char v22 = _dispatchPreconditionTest(_:)();
  v45(v10, v7);
  if ((v22 & 1) == 0)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    swift_once();
    goto LABEL_6;
  }
  unint64_t v13 = (uint64_t *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_configuration];
  unint64_t v23 = *(void *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_configuration + 8];
  if (v23 >> 60 != 15)
  {
    uint64_t v24 = v13[2];
    uint64_t v25 = *v13;
    sub_10025ADCC(*v13, *(void *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_configuration + 8]);
    LOBYTE(aBlock) = BYTE1(v24) & 1;
    sub_1005C04AC(v25, v23, v24 & 0xFFFFFFFFFFFF00FFLL | ((unint64_t)(BYTE1(v24) & 1) << 8));
    sub_100250CB0(v25, v23);
  }
  sub_1005BEA58();
  if (qword_10096A020 != -1) {
    goto LABEL_18;
  }
LABEL_6:
  uint64_t v26 = type metadata accessor for Logger();
  sub_10000B47C(v26, (uint64_t)qword_10097A4B0);
  uint64_t v27 = v4;
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = (void **)swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136315138;
    unint64_t v32 = (unint64_t)v13[1] >> 60;
    aBlock = v31;
    if (v32 <= 0xE) {
      uint64_t v33 = 0x706F7244726941;
    }
    else {
      uint64_t v33 = 0x6E4979627261654ELL;
    }
    if (v32 <= 0xE) {
      unint64_t v34 = 0xE700000000000000;
    }
    else {
      unint64_t v34 = 0xEC00000032566F66;
    }
    uint64_t v47 = sub_100254634(v33, v34, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Starting to advertise for %s", v30, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v36 = v43;
  uint64_t v35 = v44;
  uint64_t v37 = *(void **)&v4[v42];
  uint64_t v38 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v39 = (void *)swift_allocObject();
  void v39[2] = v38;
  v39[3] = v36;
  v39[4] = v35;
  uint64_t v52 = sub_1005C1350;
  unint64_t v53 = v39;
  aBlock = _NSConcreteStackBlock;
  uint64_t v49 = v3;
  NSString v50 = sub_1006B210C;
  id v51 = &unk_1008E09E0;
  uint64_t v40 = _Block_copy(&aBlock);
  id v41 = v37;
  sub_1002CA420(v36);
  swift_release();
  [v41 activateWithCompletion:v40];
  _Block_release(v40);
}

void sub_1005BE41C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_queue);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (qword_10096A020 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000B47C(v8, (uint64_t)qword_10097A4B0);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Bluetooth address changed, updating temp auth tag if necessary", v11, 2u);
    swift_slowDealloc();
  }

  sub_1005BEA58();
}

void sub_1005BE5EC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    if (a1)
    {
      swift_errorRetain();
      if (qword_10096A020 != -1) {
        swift_once();
      }
      uint64_t v7 = type metadata accessor for Logger();
      sub_10000B47C(v7, (uint64_t)qword_10097A4B0);
      id v8 = v6;
      swift_errorRetain();
      uint64_t v9 = (char *)v8;
      swift_errorRetain();
      os_log_type_t v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 136315394;
        sub_100278C78(*(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_configuration], *(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_configuration + 8]);
        uint64_t v13 = String.init<A>(describing:)();
        sub_100254634(v13, v14, &v26);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v12 + 12) = 2080;
        swift_errorRetain();
        sub_10000A844(&qword_10096BAF0);
        uint64_t v15 = String.init<A>(describing:)();
        sub_100254634(v15, v16, &v26);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "Failed to start advertising for %s: %s", (uint8_t *)v12, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v17 = swift_errorRelease();
        if (!a3) {
          goto LABEL_17;
        }
      }
      else
      {
        swift_errorRelease();

        swift_errorRelease();
        swift_errorRelease();

        if (!a3) {
          goto LABEL_17;
        }
      }
    }
    else
    {
      if (qword_10096A020 != -1) {
        swift_once();
      }
      uint64_t v18 = type metadata accessor for Logger();
      sub_10000B47C(v18, (uint64_t)qword_10097A4B0);
      id v19 = v6;
      id v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v20, v21))
      {
        char v22 = (uint8_t *)swift_slowAlloc();
        uint64_t v23 = swift_slowAlloc();
        *(_DWORD *)char v22 = 136315138;
        uint64_t v26 = v23;
        sub_100278C78(*(void *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_configuration], *(void *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_configuration + 8]);
        uint64_t v24 = String.init<A>(describing:)();
        sub_100254634(v24, v25, &v26);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "Started advertising for %s", v22, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      sub_1005BEA58();
      if (!a3) {
        goto LABEL_17;
      }
    }
    a3(v17);
LABEL_17:
  }
}

void sub_1005BEA58()
{
  unint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (void *)((char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_queue];
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, unint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  uint64_t v7 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, unint64_t))(v2 + 8))(v4, v1);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_5;
  }
  id v8 = [self sharedNearbyAgent];
  unsigned int v9 = [v8 hasAdHocPairings];

  if (!v9) {
    return;
  }
  id v10 = sub_1005C0858();
  if (v11 >> 60 == 15) {
    return;
  }
  uint64_t v7 = (uint64_t)v10;
  unint64_t v1 = v11;
  if (qword_10096A020 != -1) {
    goto LABEL_20;
  }
LABEL_5:
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000B47C(v12, (uint64_t)qword_10097A4B0);
  uint64_t v13 = v0;
  sub_100278C78(v7, v1);
  unint64_t v14 = v13;
  sub_100278C78(v7, v1);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  uint64_t v17 = off_10097A000;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    v34[1] = v19;
    *(_DWORD *)uint64_t v18 = 136315394;
    unint64_t v20 = *(void *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_configuration + 8] >> 60;
    uint64_t v36 = v19;
    if (v20 <= 0xE) {
      uint64_t v21 = 0x706F7244726941;
    }
    else {
      uint64_t v21 = 0x6E4979627261654ELL;
    }
    if (v20 <= 0xE) {
      unint64_t v22 = 0xE700000000000000;
    }
    else {
      unint64_t v22 = 0xEC00000032566F66;
    }
    uint64_t v35 = sub_100254634(v21, v22, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v35 = (uint64_t)sub_10045E0B4(v7, v1);
    sub_10000A844((uint64_t *)&unk_100974C30);
    sub_1002AE308((unint64_t *)&qword_10096CE90, (uint64_t *)&unk_100974C30);
    uint64_t v23 = BidirectionalCollection<>.joined(separator:)();
    unint64_t v25 = v24;
    swift_bridgeObjectRelease();
    uint64_t v26 = v23;
    uint64_t v17 = off_10097A000;
    uint64_t v35 = sub_100254634(v26, v25, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100250CB0(v7, v1);
    sub_100250CB0(v7, v1);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Setting temp auth tag on %s to %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_100250CB0(v7, v1);
    sub_100250CB0(v7, v1);
  }

  unint64_t v27 = *(void *)((char *)v17[154] + (void)v14 + 8);
  uint64_t v28 = OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_advertiser;
  id v29 = *(id *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_advertiser];
  uint64_t v30 = v29;
  if (v27 >> 60 == 15)
  {
    [v29 setNearbyInfoV2Flags:[v29 nearbyInfoV2Flags] | 0x10];

    id v31 = *(id *)&v14[v28];
    v32.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v31 setNearbyInfoV2TempAuthTagData:v32.super.isa];
    sub_100250CB0(v7, v1);
  }
  else
  {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v30 setAirdropTempAuthTagData:isa];

    v32.super.Class isa = (Class)*(id *)&v14[v28];
    [(objc_class *)v32.super.isa setAirdropFlags:[(objc_class *)v32.super.isa airdropFlags] | 0x40];
    sub_100250CB0(v7, v1);
  }
}

uint64_t sub_1005BEF80(void (*a1)(uint64_t), uint64_t a2, double a3)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  __chkstk_darwin(v7);
  NSData v32 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for DispatchQoS();
  uint64_t v31 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  id v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for DispatchTime();
  uint64_t v30 = *(void *)(v36 - 8);
  uint64_t v11 = __chkstk_darwin(v36);
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v29 - v14;
  uint64_t v16 = type metadata accessor for DispatchPredicate();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (void *)((char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v20 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_queue);
  *uint64_t v19 = v20;
  (*(void (**)(void *, void, uint64_t))(v17 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v16);
  v29[1] = v20;
  LOBYTE(v20) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v17 + 8))(v19, v16);
  if (v20)
  {
    uint64_t v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v23 = (void *)swift_allocObject();
    void v23[2] = v22;
    uint64_t v23[3] = a1;
    v23[4] = a2;
    sub_1002CA420((uint64_t)a1);
    if (a3 <= 0.0)
    {
      uint64_t v28 = swift_retain();
      sub_1005BF488(v28, a1);
      swift_release();
    }
    else
    {
      static DispatchTime.now()();
      + infix(_:_:)();
      uint64_t v30 = *(void *)(v30 + 8);
      ((void (*)(char *, uint64_t))v30)(v13, v36);
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = sub_1005C13E0;
      *(void *)(v24 + 24) = v23;
      aBlock[4] = sub_1005C1424;
      aBlock[5] = v24;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100296520;
      aBlock[3] = &unk_1008E0A80;
      unint64_t v25 = _Block_copy(aBlock);
      swift_retain();
      static DispatchQoS.unspecified.getter();
      uint64_t v37 = _swiftEmptyArrayStorage;
      sub_1002B63C4();
      sub_10000A844((uint64_t *)&unk_10096C490);
      sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
      uint64_t v26 = v32;
      uint64_t v27 = v35;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v25);
      swift_release();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v27);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v33);
      ((void (*)(char *, uint64_t))v30)(v15, v36);
    }
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1005BF488(uint64_t a1, void (*a2)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    if (qword_10096A020 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000B47C(v5, (uint64_t)qword_10097A4B0);
    id v6 = v4;
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      unint64_t v11 = *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_configuration + 8] >> 60;
      uint64_t v19 = v10;
      if (v11 <= 0xE) {
        uint64_t v12 = 0x706F7244726941;
      }
      else {
        uint64_t v12 = 0x6E4979627261654ELL;
      }
      if (v11 <= 0xE) {
        unint64_t v13 = 0xE700000000000000;
      }
      else {
        unint64_t v13 = 0xEC00000032566F66;
      }
      sub_100254634(v12, v13, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Invalidating %s advertiser", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v14 = OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_advertiser;
    [*(id *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_advertiser] invalidate];
    id v15 = [objc_allocWithZone((Class)CBAdvertiser) init];
    uint64_t v16 = *(void **)&v6[v14];
    *(void *)&v6[v14] = v15;

    uint64_t v17 = OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_aggressiveAdvertiserTimer;
    if (*(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_aggressiveAdvertiserTimer])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      OS_dispatch_source.cancel()();
      swift_unknownObjectRelease();
    }
    *(void *)&v6[v17] = 0;
    uint64_t v18 = swift_unknownObjectRelease();
    if (a2) {
      a2(v18);
    }
  }
}

uint64_t sub_1005BF740(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v48 = a1;
  uint64_t v3 = type metadata accessor for DispatchTimeInterval();
  uint64_t v53 = *(void *)(v3 - 8);
  uint64_t v54 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v52 = (void *)((char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v49 = (void *)((char *)v40 - v6);
  uint64_t v7 = type metadata accessor for DispatchTime();
  uint64_t v50 = *(void *)(v7 - 8);
  uint64_t v51 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  id v46 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v47 = (char *)v40 - v10;
  uint64_t v45 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  id v41 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for DispatchQoS();
  uint64_t v42 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  unint64_t v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for OS_dispatch_source.TimerFlags();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchPredicate();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (void *)((char *)v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_queue);
  *uint64_t v21 = v22;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
  id v23 = v22;
  LOBYTE(v22) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v19 + 8))(v21, v18);
  if (v22)
  {
    uint64_t v25 = OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_aggressiveAdvertiserTimer;
    if (*(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_aggressiveAdvertiserTimer))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      OS_dispatch_source.cancel()();
      swift_unknownObjectRelease();
    }
    sub_10042084C();
    static OS_dispatch_source.TimerFlags.strict.getter();
    uint64_t v26 = static OS_dispatch_source.makeTimerSource(flags:queue:)();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    *(void *)(v2 + v25) = v26;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    v40[1] = v26;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v28 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_1005C135C;
    aBlock[5] = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100296520;
    aBlock[3] = &unk_1008E0A08;
    id v29 = _Block_copy(aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v30 = v41;
    uint64_t v55 = ObjectType;
    sub_1005BD8F8();
    OS_dispatch_source.setEventHandler(qos:flags:handler:)();
    _Block_release(v29);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v30, v45);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v44);
    swift_release();
    swift_release();
    uint64_t v31 = v46;
    static DispatchTime.now()();
    uint64_t v32 = (uint64_t)v49;
    void *v49 = v48;
    uint64_t v34 = v53;
    uint64_t v33 = v54;
    (*(void (**)(uint64_t, void, uint64_t))(v53 + 104))(v32, enum case for DispatchTimeInterval.seconds(_:), v54);
    uint64_t v35 = v47;
    + infix(_:_:)();
    uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    v36(v32, v33);
    uint64_t v37 = v51;
    uint64_t v38 = *(void (**)(char *, uint64_t))(v50 + 8);
    v38(v31, v51);
    sub_1002C1F64(v32);
    uint64_t v39 = v52;
    sub_1002C1FD8(v52);
    OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
    v36((uint64_t)v39, v33);
    v36(v32, v33);
    v38(v35, v37);
    OS_dispatch_source.activate()();
    return swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1005BFDD4(uint64_t a1, void (*a2)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    a2();
  }
}

uint64_t sub_1005BFE30()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_queue);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    uint64_t v9 = OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_aggressiveAdvertiserTimer;
    if (*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_aggressiveAdvertiserTimer))
    {
      uint64_t v10 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      sub_1005BEF80((void (*)(uint64_t))sub_1005C138C, v10, 0.0);
      swift_release_n();
      if (*(void *)(v1 + v9))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        OS_dispatch_source.cancel()();
        swift_unknownObjectRelease();
      }
      *(void *)(v1 + v9) = 0;
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1005BFFF0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v30 = a1;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_queue);
  *uint64_t v9 = v10;
  uint64_t v11 = *(void (**)(void))(v7 + 104);
  unsigned int v29 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v28 = (void (*)(void *, void, uint64_t))v11;
  v11(v9);
  id v12 = v10;
  char v13 = _dispatchPreconditionTest(_:)();
  uint64_t v14 = *(void (**)(void *, uint64_t))(v7 + 8);
  v14(v9, v6);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v26 = v3;
  uint64_t v27 = v14;
  uint64_t v15 = a3;
  uint64_t v16 = (uint64_t *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_configuration);
  unint64_t v17 = a2;
  uint64_t v18 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_configuration);
  unint64_t v19 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_configuration + 8);
  uint64_t v20 = v30;
  *uint64_t v16 = v30;
  v16[1] = v17;
  v16[2] = v15;
  sub_100278C78(v20, v17);
  sub_100250CB0(v18, v19);
  *uint64_t v9 = v12;
  v28(v9, v29, v6);
  id v21 = v12;
  char v22 = _dispatchPreconditionTest(_:)();
  v27(v9, v6);
  if ((v22 & 1) == 0)
  {
LABEL_7:
    __break(1u);
    return;
  }
  unint64_t v23 = v16[1];
  if (v23 >> 60 != 15)
  {
    uint64_t v24 = v16[2];
    uint64_t v25 = *v16;
    sub_10025ADCC(*v16, v16[1]);
    char v31 = BYTE1(v24) & 1;
    sub_1005C04AC(v25, v23, v24 & 0xFFFFFFFFFFFF00FFLL | ((unint64_t)(BYTE1(v24) & 1) << 8));
    sub_100250CB0(v25, v23);
  }
  sub_1005BEA58();
}

void sub_1005C0218()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = (uint64_t *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_configuration);
    unint64_t v3 = *(void *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_configuration + 8);
    if (v3 >> 60 != 15)
    {
      uint64_t v4 = *v2;
      sub_10025ADCC(*v2, v3);
      if (qword_10096A020 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      sub_10000B47C(v5, (uint64_t)qword_10097A4B0);
      id v6 = v1;
      uint64_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        uint64_t v13 = swift_slowAlloc();
        *(_DWORD *)uint64_t v9 = 136315138;
        unint64_t v10 = (unint64_t)v2[1] >> 60;
        uint64_t v14 = v13;
        if (v10 <= 0xE) {
          uint64_t v11 = 0x706F7244726941;
        }
        else {
          uint64_t v11 = 0x6E4979627261654ELL;
        }
        if (v10 <= 0xE) {
          unint64_t v12 = 0xE700000000000000;
        }
        else {
          unint64_t v12 = 0xEC00000032566F66;
        }
        sub_100254634(v11, v12, &v14);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "Changing advertisement rate to default on %s advertiser", v9, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      sub_10025ADCC(v4, v3);
      sub_1005BFFF0(v4, v3, 256);
      sub_1005BDEB0(0, 0);
      sub_100250CB0(v4, v3);
      sub_100250CB0(v4, v3);
    }
  }
}

uint64_t sub_1005C04AC(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_queue);
  *unint64_t v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  id v12 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    uint64_t v14 = OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_advertiser;
    uint64_t v15 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_advertiser);
    sub_10025ADCC(a1, a2);
    [v15 setAdvertiseRate:HIDWORD(a3)];
    [*(id *)(v3 + v14) setAirdropVersion:2];
    id v16 = *(id *)(v3 + v14);
    LOWORD(v15) = Data.subscript.getter();
    [v16 setAirdropHash1:(unsigned __int16)(Data.subscript.getter() | (unsigned __int16)((_WORD)v15 << 8))];

    id v17 = *(id *)(v3 + v14);
    LOWORD(v15) = Data.subscript.getter();
    [v17 setAirdropHash2:(unsigned __int16)(Data.subscript.getter() | (unsigned __int16)((_WORD)v15 << 8))];

    id v18 = *(id *)(v3 + v14);
    LOWORD(v15) = Data.subscript.getter();
    [v18 setAirdropHash3:(unsigned __int16)(Data.subscript.getter() | (unsigned __int16)((_WORD)v15 << 8))];

    id v19 = *(id *)(v3 + v14);
    LOWORD(v15) = Data.subscript.getter();
    [v19 setAirdropHash4:(unsigned __int16)(Data.subscript.getter() | (unsigned __int16)((_WORD)v15 << 8))];

    if ((a3 & 0x100) == 0) {
      [*(id *)(v3 + v14) setAirdropModel:a3];
    }
    [*(id *)(v3 + v14) setAirdropConfigData:BYTE3(a3)];
    [*(id *)(v3 + v14) setAirdropFlags:BYTE2(a3)];
    return sub_100250CC4(a1, a2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for SDBLEAdvertiser()
{
  return self;
}

id sub_1005C0858()
{
  id v1 = [self sharedNearbyAgent];
  id v2 = [v1 temporarySelfIdentity];

  if (!v2) {
    return 0;
  }
  id v3 = [*(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_advertiser) advertisingAddressDataNonConnectable];
  if (!v3)
  {

    return v3;
  }
  uint64_t v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v6 = v5;

  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v18 = 0;
  id v8 = [v2 authTagForData:isa type:2 error:&v18];

  id v9 = v18;
  if (!v8)
  {
    unint64_t v10 = v9;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_10096A020 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000B47C(v11, (uint64_t)qword_10097A4B0);
    swift_errorRetain();
    swift_errorRetain();
    id v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      id v18 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      swift_errorRetain();
      sub_10000A844(&qword_10096BAF0);
      uint64_t v15 = String.init<A>(describing:)();
      sub_100254634(v15, v16, (uint64_t *)&v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failed to create temp auth tag: %s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100250CC4(v4, v6);
      swift_errorRelease();
    }
    else
    {

      sub_100250CC4(v4, v6);
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    return 0;
  }
  id v3 = (id)static Data._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100250CC4(v4, v6);
  return v3;
}

uint64_t sub_1005C0BAC()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[1] = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_queue);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1005C12FC;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008E0968;
  id v9 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  os_log_type_t v13 = _swiftEmptyArrayStorage;
  sub_1002B63C4();
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  swift_release();
  return swift_release();
}

void sub_1005C0E58()
{
  if (qword_10096A020 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_10097A4B0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Rapport identities changed, updating temp auth tag if necessary", v3, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_1005BEA58();
  }
}

uint64_t *destroy for SDBLEAdvertiser.Configuration(uint64_t *result)
{
  unint64_t v1 = result[1];
  if ((v1 & 0x3000000000000000) == 0) {
    return (uint64_t *)sub_100250CC4(*result, v1);
  }
  return result;
}

uint64_t _s16DaemoniOSLibrary15SDBLEAdvertiserC13ConfigurationOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = a2[1];
  if ((v4 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = a2[2];
  }
  else
  {
    uint64_t v5 = *a2;
    sub_10025ADCC(*a2, a2[1]);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v4;
    int v6 = *((_DWORD *)a2 + 5);
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    *(_DWORD *)(a1 + 20) = v6;
  }
  return a1;
}

uint64_t assignWithCopy for SDBLEAdvertiser.Configuration(uint64_t a1, long long *a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *((void *)a2 + 1);
  uint64_t v6 = v5 & 0x3000000000000000;
  if ((v4 & 0x3000000000000000) != 0)
  {
    if (!v6)
    {
      uint64_t v7 = *(void *)a2;
      sub_10025ADCC(*(void *)a2, *((void *)a2 + 1));
      *(void *)a1 = v7;
      *(void *)(a1 + 8) = v5;
LABEL_8:
      *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
      *(unsigned char *)(a1 + 18) = *((unsigned char *)a2 + 18);
      *(unsigned char *)(a1 + 19) = *((unsigned char *)a2 + 19);
      *(_DWORD *)(a1 + 20) = *((_DWORD *)a2 + 5);
      return a1;
    }
  }
  else
  {
    if (!v6)
    {
      uint64_t v9 = *(void *)a2;
      sub_10025ADCC(*(void *)a2, *((void *)a2 + 1));
      uint64_t v10 = *(void *)a1;
      unint64_t v11 = *(void *)(a1 + 8);
      *(void *)a1 = v9;
      *(void *)(a1 + 8) = v5;
      sub_100250CC4(v10, v11);
      goto LABEL_8;
    }
    sub_100250CC4(*(void *)a1, v4);
  }
  long long v8 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v8;
  return a1;
}

uint64_t assignWithTake for SDBLEAdvertiser.Configuration(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 0x3000000000000000) == 0)
  {
    uint64_t v5 = *(void *)(a2 + 8);
    if ((v5 & 0x3000000000000000) == 0)
    {
      uint64_t v7 = *(void *)a1;
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v5;
      sub_100250CC4(v7, v4);
      int v8 = *(_DWORD *)(a2 + 20);
      *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 20) = v8;
      return a1;
    }
    sub_100250CC4(*(void *)a1, v4);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDBLEAdvertiser.Configuration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 12);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  if (v3 + 1 >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SDBLEAdvertiser.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)uint64_t result = a2 - 12;
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

uint64_t sub_1005C1210(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8) >> 60;
  if (((4 * v1) & 0xC) != 0) {
    return 16 - ((4 * v1) & 0xC | (v1 >> 2));
  }
  else {
    return 0;
  }
}

void *sub_1005C1238(void *result, unsigned int a2)
{
  if (a2 > 0xC)
  {
    result[1] = 0;
    result[2] = 0;
    *uint64_t result = a2 - 13;
  }
  else if (a2)
  {
    *uint64_t result = 0;
    result[1] = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
  }
  return result;
}

ValueMetadata *type metadata accessor for SDBLEAdvertiser.Configuration()
{
  return &type metadata for SDBLEAdvertiser.Configuration;
}

uint64_t sub_1005C127C()
{
  if (*(void *)(v0 + 8) >> 60 == 15) {
    return 0x6E4979627261654ELL;
  }
  else {
    return 0x706F7244726941;
  }
}

uint64_t sub_1005C12C4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1005C12FC()
{
}

uint64_t sub_1005C1304(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005C1314()
{
  return swift_release();
}

void sub_1005C131C()
{
  sub_1005BFDD4(v0, sub_1005BE41C);
}

void sub_1005C1350(uint64_t a1)
{
  sub_1005BE5EC(a1, *(void *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

void sub_1005C135C()
{
  sub_1005BFDD4(v0, (void (*)(void))sub_1005BFE30);
}

void sub_1005C138C()
{
}

uint64_t sub_1005C1398()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1005C13E0()
{
  sub_1005BF488(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1005C13EC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005C1424()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

const char *sub_1005C144C(int a1)
{
  if (a1 > 39)
  {
    if (a1 <= 44)
    {
      if (a1 == 40) {
        return "Medium";
      }
      if (a1 == 42) {
        return "MediumMid";
      }
    }
    else
    {
      switch(a1)
      {
        case '-':
          return "MediumHigh";
        case '2':
          return "High";
        case '<':
          return "Max";
      }
    }
  }
  else if (a1 <= 14)
  {
    if (!a1) {
      return "Default";
    }
    if (a1 == 10) {
      return "Periodic";
    }
  }
  else
  {
    switch(a1)
    {
      case 15:
        return "PeriodicHigh";
      case 20:
        return "Background";
      case 30:
        return "Low";
    }
  }
  return "?";
}

const char *sub_1005C1534(int a1)
{
  if (a1 >= 0x20000)
  {
    if (a1 >= 327680)
    {
      if (a1 > 589824)
      {
        if (a1 <= 2147418111)
        {
          switch(a1)
          {
            case 589825:
              return "FindNearbyPencil";
            case 655360:
              return "AccessDigitalHomeKey";
            case 786432:
              return "ProxControlDeviceClose";
            default:
              return "?";
          }
        }
        else
        {
          switch(a1)
          {
            case 2147418112:
              uint64_t result = "InternalTestNoLockScan";
              break;
            case 2147418113:
              uint64_t result = "InternalTestNoScreenOffScan";
              break;
            case 2147418114:
              uint64_t result = "InternalTestScanWithNoDups";
              break;
            case 2147418115:
              uint64_t result = "InternalTestScanWithDups";
              break;
            case 2147418116:
              uint64_t result = "InternalTestScanFor20Seconds";
              break;
            case 2147418117:
              uint64_t result = "InternalTestActiveScan";
              break;
            case 2147418118:
              uint64_t result = "InternalTestUUIDScan";
              break;
            case 2147418119:
              uint64_t result = "InternalTestScanFor10ClockSeconds";
              break;
            case 2147418120:
              uint64_t result = "InternalTestScanBoost";
              break;
            default:
              return "?";
          }
        }
      }
      else if (a1 > 458752)
      {
        switch(a1)
        {
          case 524288:
            uint64_t result = "ADPD";
            break;
          case 524289:
            uint64_t result = "ADPDBuffer";
            break;
          case 524290:
            uint64_t result = "MicroLocation";
            break;
          case 524291:
            uint64_t result = "MicroLocationLeech";
            break;
          default:
            if (a1 == 458753)
            {
              uint64_t result = "PrecisionFindingFindee";
            }
            else
            {
              if (a1 != 589824) {
                return "?";
              }
              uint64_t result = "FindNearbyRemote";
            }
            break;
        }
      }
      else
      {
        switch(a1)
        {
          case 393216:
            uint64_t result = "CaptiveNetworkJoin";
            break;
          case 393217:
            uint64_t result = "UseCaseSIMTransfer";
            break;
          case 393218:
            uint64_t result = "MacSetup";
            break;
          case 393219:
            uint64_t result = "AppleIDSignIn";
            break;
          case 393220:
            uint64_t result = "AppleIDSignInSettings";
            break;
          default:
            if (a1 == 327680)
            {
              uint64_t result = "RapportThirdParty";
            }
            else
            {
              if (a1 != 458752) {
                return "?";
              }
              uint64_t result = "PrecisionFindingFinder";
            }
            break;
        }
      }
    }
    else
    {
      switch(a1)
      {
        case 131072:
          return "SharingDefault";
        case 131073:
          return "SharingPhoneAutoUnlock";
        case 131074:
          return "SharingSiriWatchAuth";
        case 131075:
          return "SharingMacAutoUnlock";
        case 131076:
          return "SharingEDTScreenOn";
        case 131077:
          return "SharingEDTWiFiDisabled";
        case 131078:
          return "SharingEDTWombatEligibleAsDefaultCamera";
        case 131079:
          return "SharingEDTWombatCameraPicker";
        case 131080:
          return "SharingWombatBackground";
        case 131081:
          return "SharingUniversalControl";
        case 131082:
          return "SharingPeopleProximity";
        case 131083:
          return "SharingEDTEnsembleOpenDisplayPrefs";
        case 131084:
          return "SharingEDTNearbydMotionStopped";
        case 131085:
          return "SharingDoubleBoostGenericScan";
        case 131086:
          return "SharingEDTIncomingAdvertisement ";
        case 131087:
          return "SharingEDTWombatStreamStart";
        case 131088:
          return "SharingOYAutoUnlock";
        case 131089:
          return "?";
        case 131090:
          return "SharingAirDrop";
        case 131091:
          return "SharingNearbyInvitationHost";
        case 131092:
          return "SharingNearbyInvitationParticipant";
        case 131093:
          return "SharingAirDropAskToAirDrop";
        case 131094:
          return "SharingAirDropTempIdentity";
        case 131095:
          return "SharingAirDropNeedsCLink";
        case 131096:
          return "SharingRemoteWidgetUpdate";
        case 131097:
          return "SharingCountryCodeUpdate";
        case 131098:
          return "SharingMacPhoneAutoUnlock";
        case 131099:
          return "SharingVisionProDiscovery";
        case 131100:
          return "SharingVisionProStateChange";
        case 131101:
          return "SharingContinuityScreen";
        case 131102:
          return "SharingEDTRemoteDisplay";
        default:
          if (a1 == 196608)
          {
            uint64_t result = "DigitalIDTSA";
          }
          else
          {
            if (a1 != 0x40000) {
              return "?";
            }
            uint64_t result = "DigitalCarKeyThirdParty";
          }
          break;
      }
    }
  }
  else if (a1 <= 0x20000)
  {
    switch(a1)
    {
      case 65536:
        uint64_t result = "FindMyAction";
        break;
      case 65537:
        uint64_t result = "FindMyBackground";
        break;
      case 65538:
        uint64_t result = "FindMyActionHELE";
        break;
      case 65539:
        uint64_t result = "FindMyBackgroundHELE";
        break;
      case 65540:
        uint64_t result = "FindMyActionTransient";
        break;
      case 65541:
        uint64_t result = "FindMyBackgroundTransient";
        break;
      case 65542:
        uint64_t result = "FindMyActionHELETransient";
        break;
      case 65543:
        uint64_t result = "FindMyBackgroundHELETransient";
        break;
      case 65544:
        uint64_t result = "FindMyNotOptedIn";
        break;
      case 65545:
        uint64_t result = "FindMyOptedIn";
        break;
      case 65546:
        uint64_t result = "FindMySepAlertsEnabled";
        break;
      case 65547:
        uint64_t result = "FindMyTemporaryAggressiveLegacy";
        break;
      case 65548:
        uint64_t result = "FindMyTemporaryLongAggressive";
        break;
      case 65549:
        uint64_t result = "FindMyBTFindingUserInitiated";
        break;
      case 65550:
        uint64_t result = "FindMyHELE";
        break;
      case 65551:
        uint64_t result = "FindMyBeaconOnDemand";
        break;
      case 65552:
        uint64_t result = "FindMyWildTimedScan";
        break;
      case 65553:
        uint64_t result = "FindMyBackgroundLeechScan";
        break;
      case 65554:
        uint64_t result = "FindMySnifferMode";
        break;
      case 65555:
        uint64_t result = "FindMyUnpair";
        break;
      case 65556:
        uint64_t result = "FindMyUnpairHELE";
        break;
      case 65557:
        uint64_t result = "FindMyPlaySound";
        break;
      case 65558:
        uint64_t result = "FindMyPlaySoundHELE";
        break;
      case 65559:
        uint64_t result = "FindMyNotOptedInBeepOnMoveWaking";
        break;
      case 65560:
        uint64_t result = "FindMyUTTransient";
        break;
      case 65561:
        uint64_t result = "FindMyUTHELETransient";
        break;
      default:
        JUMPOUT(0);
    }
  }
  else
  {
    uint64_t result = "Unspecified";
    switch(a1)
    {
      case 0:
        return result;
      case 1:
        uint64_t result = "HealthKit";
        break;
      case 2:
        uint64_t result = "HomeKit";
        break;
      case 3:
        uint64_t result = "FindMyObjectConnection";
        break;
      case 4:
        uint64_t result = "FindMyObjectConnectionTransient";
        break;
      case 5:
        uint64_t result = "MIDI";
        break;
      case 6:
        uint64_t result = "Continuity";
        break;
      case 7:
        uint64_t result = "InstantHotSpot";
        break;
      case 8:
        uint64_t result = "NearBy";
        break;
      case 9:
        uint64_t result = "Sharing";
        break;
      case 10:
        uint64_t result = "HearingSupport";
        break;
      case 11:
        uint64_t result = "Magnet";
        break;
      case 12:
        uint64_t result = "HID";
        break;
      case 13:
        uint64_t result = "LEA";
        break;
      case 14:
        uint64_t result = "External";
        break;
      case 15:
        uint64_t result = "ExternalMedical";
        break;
      case 16:
        uint64_t result = "ExternalLock";
        break;
      case 17:
        uint64_t result = "ExternalWatch";
        break;
      case 18:
        uint64_t result = "SmartRouting";
        break;
      case 19:
        uint64_t result = "DigitalID";
        break;
      case 20:
        uint64_t result = "DigitalKey";
        break;
      case 21:
        uint64_t result = "DigitalCarKey";
        break;
      case 22:
        uint64_t result = "HeySiri";
        break;
      case 23:
        uint64_t result = "ThirdPartyApp";
        break;
      case 24:
        uint64_t result = "CNJ";
        break;
      default:
        switch(a1)
        {
          case 256:
            uint64_t result = "DevicePresenceDetection";
            break;
          case 257:
            uint64_t result = "AudioBox";
            break;
          case 258:
            uint64_t result = "SIMTransfer";
            break;
          case 259:
            uint64_t result = "ProximityScreenOnLeechScan";
            break;
          case 260:
            uint64_t result = "MacMigrate";
            break;
          case 263:
            uint64_t result = "HIDUARTService";
            break;
          case 264:
            uint64_t result = "AccessibilitySwitchControlPairing";
            break;
          case 265:
            uint64_t result = "BaseBandFastConnect";
            break;
          case 266:
            uint64_t result = "SafetyAlerts";
            break;
          case 267:
            uint64_t result = "LECarPlay";
            break;
          case 268:
            uint64_t result = "TCCBluetooth";
            break;
          case 269:
            uint64_t result = "AOPBufferLeech";
            break;
          default:
            return "?";
        }
        break;
    }
  }
  return result;
}

uint64_t destroy for SDBLEAdvertiser.Configuration.AirDrop(uint64_t a1)
{
  return sub_100250CC4(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t _s16DaemoniOSLibrary15SDBLEAdvertiserC13ConfigurationO7AirDropVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_10025ADCC(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  int v6 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = v6;
  return a1;
}

uint64_t assignWithCopy for SDBLEAdvertiser.Configuration.AirDrop(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_10025ADCC(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_100250CC4(v6, v7);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  return a1;
}

uint64_t assignWithTake for SDBLEAdvertiser.Configuration.AirDrop(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_100250CC4(v4, v5);
  int v6 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for SDBLEAdvertiser.Configuration.AirDrop(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SDBLEAdvertiser.Configuration.AirDrop(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDBLEAdvertiser.Configuration.AirDrop()
{
  return &type metadata for SDBLEAdvertiser.Configuration.AirDrop;
}

uint64_t sub_1005C2040()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097A510);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097A510);
  if (qword_100969CD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946C0);
  unsigned int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1005C2108(void *a1)
{
  uint64_t v3 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v3 - 8);
  unint64_t v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AuthenticationSecurityRequest(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v57 = v6;
  uint64_t v58 = v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v59 = v9;
  uint64_t v60 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v51 - v10;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  NSString v61 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchPredicate();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  id v18 = (uint64_t *)((char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v19 = *(void **)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *id v18 = v19;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  id v20 = v19;
  LOBYTE(v19) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  if (v19)
  {
    uint64_t v55 = v13;
    uint64_t v56 = (uint64_t *)v11;
    uint64_t v62 = v12;
    if (qword_10096A028 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v21 = type metadata accessor for Logger();
  sub_10000B47C(v21, (uint64_t)qword_10097A510);
  id v22 = a1;
  unint64_t v23 = v1;
  id v24 = v22;
  uint64_t v25 = v23;
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  BOOL v28 = os_log_type_enabled(v26, v27);
  id v54 = v24;
  if (v28)
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v30 = (void *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    v65[0] = v52;
    *(_DWORD *)uint64_t v29 = 138412546;
    *(void *)&long long v63 = v24;
    uint64_t v53 = v5;
    id v31 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v30 = v24;

    *(_WORD *)(v29 + 12) = 2080;
    uint64_t v32 = UUID.uuidString.getter();
    *(void *)&long long v63 = sub_100254634(v32, v33, v65);
    unint64_t v5 = v53;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Received authentication pairing request: %@ for sessionID %s", (uint8_t *)v29, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_100508854();
  uint64_t v34 = (uint64_t)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
  swift_beginAccess();
  sub_10024A330(v34, (uint64_t)&v63, &qword_10097BB50);
  if (v64)
  {
    sub_1002AF688(&v63, (uint64_t)v65);
    unint64_t v35 = *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
    if (v35 < 0xF && ((0x4FFFu >> v35) & 1) != 0)
    {
      uint64_t v36 = (uint64_t *)((char *)&unk_10077DB60 + 8 * v35);
    }
    else
    {
      if (qword_100969BE8 != -1) {
        swift_once();
      }
      uint64_t v36 = &qword_100994470;
    }
    uint64_t v38 = *v36;
    uint64_t v39 = v61;
    Date.init()();
    uint64_t v40 = v56;
    uint64_t v41 = v55;
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))((char *)v56 + *(int *)(v57 + 20), v39, v62);
    *uint64_t v40 = v38;
    uint64_t v42 = type metadata accessor for TaskPriority();
    uint64_t v43 = (uint64_t)v5;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v5, 1, 1, v42);
    uint64_t v44 = v60;
    sub_100340128((uint64_t)v40, v60);
    sub_100278C8C((uint64_t)v65, (uint64_t)&v63);
    unint64_t v45 = (*(unsigned __int8 *)(v58 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    unint64_t v46 = (v59 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v47 = (void *)swift_allocObject();
    v47[2] = 0;
    v47[3] = 0;
    v47[4] = v25;
    sub_10045AA40(v44, (uint64_t)v47 + v45);
    uint64_t v48 = v54;
    *(void *)((char *)v47 + v46) = v54;
    sub_1002AF688(&v63, (uint64_t)v47 + ((v46 + 15) & 0xFFFFFFFFFFFFFFF8));
    id v49 = v48;
    uint64_t v50 = v25;
    sub_10028CFA8(v43, (uint64_t)&unk_10097A578, (uint64_t)v47);
    swift_release();
    sub_10034018C((uint64_t)v40);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v62);
    return sub_10024D338((uint64_t)v65);
  }
  else
  {
    sub_10000A7E8((uint64_t)&v63, &qword_10097BB50);
    return sub_1005C8CD0(10, 0xD000000000000014, 0x80000001007C2E80, (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
  }
}

uint64_t sub_1005C283C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[45] = a6;
  v7[46] = a7;
  v7[43] = a4;
  v7[44] = a5;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  v7[47] = v8;
  v7[48] = *(void *)(v8 - 8);
  v7[49] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DispatchQoS();
  v7[50] = v9;
  v7[51] = *(void *)(v9 - 8);
  v7[52] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for ContinuousClock();
  v7[53] = v10;
  v7[54] = *(void *)(v10 - 8);
  v7[55] = swift_task_alloc();
  return _swift_task_switch(sub_1005C29B8, 0, 0);
}

uint64_t sub_1005C29B8()
{
  uint64_t v100 = v0;
  uint64_t v1 = *(void *)(v0 + 344) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
  swift_beginAccess();
  sub_10024A330(v1, v0 + 64, &qword_100978040);
  if (*(void *)(v0 + 88))
  {
    uint64_t v2 = *(void *)(v0 + 352);
    sub_100278C8C(v0 + 64, v0 + 104);
    sub_10000A7E8(v0 + 64, &qword_100978040);
    uint64_t v3 = (void *)(*sub_10026BB6C((void *)(v0 + 104), *(void *)(v0 + 128))
                  + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager);
    swift_beginAccess();
    uint64_t v4 = *sub_10026BB6C(v3, v3[3]);
    uint64_t v5 = swift_task_alloc();
    *(void *)(v0 + 448) = v5;
    *(void *)(v5 + 16) = v4;
    *(void *)(v5 + 24) = v2;
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 456) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1005C3A88;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6, 0, 0, 0x6F6974616C6F6976, 0xEF293A726F66286ELL, sub_1003CEA74, v5, (char *)&type metadata for () + 8);
  }
  sub_10000A7E8(v0 + 64, &qword_100978040);
  if (qword_10096A028 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void **)(v0 + 344);
  uint64_t v8 = type metadata accessor for Logger();
  *(void *)(v0 + 472) = sub_10000B47C(v8, (uint64_t)qword_10097A510);
  id v9 = v7;
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void **)(v0 + 344);
  uint64_t v94 = v8;
  uint64_t v96 = (id *)(v0 + 328);
  if (v12)
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315138;
    v99[0] = v15;
    uint64_t v16 = sub_10050938C();
    *(void *)(v0 + 320) = sub_100254634(v16, v17, v99);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Authentication Session type: %s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v18 = [objc_allocWithZone((Class)SDAuthenticationPairingResponse) init];
  *(void *)(v0 + 480) = v18;
  if (!v18)
  {
    sub_10024D280();
    uint64_t v23 = swift_allocError();
    *(_DWORD *)uint64_t v24 = 10;
    *(void *)(v24 + 8) = 0xD000000000000039;
    *(void *)(v24 + 16) = 0x80000001007C2EA0;
    swift_willThrow();
    goto LABEL_14;
  }
  uint64_t v19 = *(void *)(v0 + 344);
  uint64_t v20 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  *(void *)(v0 + 488) = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  uint64_t v21 = *(void *)(v19 + v20);
  uint64_t v22 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationPairingKeySession_aksPairingSession;
  *(void *)(v0 + 496) = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationPairingKeySession_aksPairingSession;
  *(void *)(v0 + 504) = *(void *)(v19 + v22);
  if (v21 == 8)
  {
    swift_retain();
    sub_1006B0B04();
    uint64_t v44 = (void *)sub_1006B0308(0, 0xF000000000000000);
    swift_release();
    *(void *)(v0 + 544) = v44;
    unint64_t v45 = *(void **)(v0 + 480);
    uint64_t v46 = *(void *)(v0 + 488);
    uint64_t v47 = *(void *)(v0 + 344);
    UUID.uuidString.getter();
    NSString v48 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v45 setSessionID:v48];

    [v45 setVersion:1];
    uint64_t v49 = Data.init(referencing:)();
    unint64_t v51 = v50;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100250CC4(v49, v51);
    [v45 setToken:isa];

    if (HIDWORD(*(void *)(v47 + v46))) {
      return _assertionFailure(_:_:file:line:flags:)();
    }
    uint64_t v53 = *(void *)(v0 + 344);
    [*(id *)(v0 + 480) setType:];
    uint64_t v54 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationPairingKeySession_requestArmingUI;
    if (*(unsigned char *)(v53 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationPairingKeySession_requestArmingUI) == 1)
    {
      uint64_t v55 = Logger.logObject.getter();
      os_log_type_t v56 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v55, v56))
      {
        uint64_t v57 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v57 = 0;
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "Requesting arming UI", v57, 2u);
        swift_slowDealloc();
      }
      uint64_t v58 = *(void **)(v0 + 480);

      [v58 setRequestArmingUI:*(unsigned __int8 *)(v53 + v54)];
    }
    id v59 = [*(id *)(v0 + 480) data];
    if (v59)
    {
      uint64_t v60 = v59;
      uint64_t v61 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v63 = v62;

      *(void *)(v0 + 552) = v61;
      *(void *)(v0 + 560) = v63;
      id v64 = [self standardUserDefaults];
      NSString v65 = String._bridgeToObjectiveC()();
      uint64_t v66 = (uint64_t)[v64 integerForKey:v65];

      if (v66 > 0)
      {
        unint64_t v67 = Logger.logObject.getter();
        os_log_type_t v68 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v67, v68))
        {
          NSString v69 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)NSString v69 = 134217984;
          *(void *)(v0 + 304) = v66;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v67, v68, "### TESTING ONLY: start delaySendingPairingResponse for %ld seconds", v69, 0xCu);
          swift_slowDealloc();
        }

        ContinuousClock.init()();
        uint64_t v97 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598
                                                                               + dword_10096C598);
        uint64_t v70 = (void *)swift_task_alloc();
        *(void *)(v0 + 568) = v70;
        *uint64_t v70 = v0;
        v70[1] = sub_1005C6290;
        return v97(1000000000000000000 * v66, ((unint64_t)v66 * (unsigned __int128)0xDE0B6B3A7640000uLL) >> 64, 0, 0, 1);
      }
      unint64_t v81 = *(void *)(v0 + 560);
      uint64_t v82 = *(void *)(v0 + 552);
      uint64_t v92 = *(void **)(v0 + 480);
      uint64_t v91 = *(void *)(v0 + 416);
      uint64_t v93 = *(void **)(v0 + 544);
      uint64_t v95 = *(void *)(v0 + 408);
      uint64_t v83 = *(void *)(v0 + 392);
      uint64_t v98 = *(void *)(v0 + 400);
      uint64_t v84 = *(void *)(v0 + 376);
      uint64_t v85 = *(void *)(v0 + 384);
      uint64_t v86 = *(void **)(v0 + 344);
      sub_100278C8C(*(void *)(v0 + 368), v0 + 144);
      uint64_t v87 = (void *)swift_allocObject();
      v87[2] = v86;
      v87[3] = v82;
      v87[4] = v81;
      sub_1002AF688((long long *)(v0 + 144), (uint64_t)(v87 + 5));
      *(void *)(v0 + 48) = sub_1005C9E34;
      *(void *)(v0 + 56) = v87;
      *(void *)(v0 + 16) = _NSConcreteStackBlock;
      *(void *)(v0 + 24) = 1107296256;
      *(void *)(v0 + 32) = sub_100296520;
      *(void *)(v0 + 40) = &unk_1008E0BF0;
      uint64_t v88 = _Block_copy((const void *)(v0 + 16));
      id v89 = v86;
      sub_10025ADCC(v82, v81);
      static DispatchQoS.unspecified.getter();
      *(void *)(v0 + 296) = _swiftEmptyArrayStorage;
      sub_100361140((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10000A844((uint64_t *)&unk_10096C490);
      sub_1002B4B9C();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v88);
      sub_100250CC4(v82, v81);

      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v83, v84);
      (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v91, v98);
      swift_release();
      goto LABEL_50;
    }
    uint64_t v79 = *(void **)(v0 + 480);
    sub_10024D280();
    uint64_t v23 = swift_allocError();
    *(_DWORD *)uint64_t v80 = 10;
    *(void *)(v80 + 8) = 0xD000000000000020;
    *(void *)(v80 + 16) = 0x80000001007BA860;
    swift_willThrow();

LABEL_14:
    *(void *)(v0 + 288) = v23;
    swift_errorRetain();
    sub_10000A844(&qword_10096BAF0);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      sub_1005C8CD0(*(_DWORD *)(v0 + 232), *(void *)(v0 + 240), *(void *)(v0 + 248), (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_errorRelease();
      *(void *)(v0 + 272) = v23;
      swift_errorRetain();
      sub_1005C9DAC();
      if (!swift_dynamicCast())
      {
        swift_errorRelease();
        if (qword_10096A028 != -1) {
          swift_once();
        }
        sub_10000B47C(v94, (uint64_t)qword_10097A510);
        swift_errorRetain();
        swift_errorRetain();
        unint64_t v33 = Logger.logObject.getter();
        os_log_type_t v34 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v33, v34))
        {
          unint64_t v35 = (uint8_t *)swift_slowAlloc();
          uint64_t v36 = swift_slowAlloc();
          *(_DWORD *)unint64_t v35 = 136315138;
          v99[0] = v36;
          *(void *)(v0 + 280) = v23;
          swift_errorRetain();
          uint64_t v37 = String.init<A>(describing:)();
          *(void *)(v0 + 256) = sub_100254634(v37, v38, v99);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v33, v34, "Unexpected error: %s", v35, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
        }

        sub_1005C8CD0(10, 0, 0xE000000000000000, (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
        goto LABEL_49;
      }
      swift_errorRelease();
      id v25 = *v96;
      int v26 = [*v96 code];
      id v27 = [v25 domain];
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v30 = v29;

      if (v28 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v30 == v31)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v39 & 1) == 0)
        {
          if (qword_10096A028 != -1) {
            swift_once();
          }
          sub_10000B47C(v94, (uint64_t)qword_10097A510);
          id v71 = v25;
          uint64_t v72 = Logger.logObject.getter();
          os_log_type_t v73 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v72, v73))
          {
            uint64_t v74 = (uint8_t *)swift_slowAlloc();
            v99[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v74 = 136315138;
            *(void *)(v0 + 264) = v71;
            id v75 = v71;
            uint64_t v76 = String.init<A>(describing:)();
            *(void *)(v0 + 336) = sub_100254634(v76, v77, v99);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();

            _os_log_impl((void *)&_mh_execute_header, v72, v73, "Unexpected error: %s", v74, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          sub_1005C8CD0(10, 0, 0xE000000000000000, (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);

          goto LABEL_49;
        }
      }
      id v40 = (id)SFAuthenticationErrorToString();
      uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v43 = v42;

      sub_1005C8CD0(v26, v41, v43, (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
      swift_bridgeObjectRelease();
    }
LABEL_49:
    swift_errorRelease();
LABEL_50:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v78 = *(uint64_t (**)(void))(v0 + 8);
    return v78();
  }
  swift_retain();
  uint64_t v32 = (void *)swift_task_alloc();
  *(void *)(v0 + 512) = v32;
  *uint64_t v32 = v0;
  v32[1] = sub_1005C511C;
  return sub_1006AE518();
}

uint64_t sub_1005C3A88()
{
  *(void *)(*(void *)v1 + 464) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1005C4AF4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1005C3BA4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005C3BA4()
{
  uint64_t v96 = v0;
  sub_10024D338(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 464);
  if (qword_10096A028 != -1) {
    swift_once();
  }
  uint64_t v2 = (id *)(v0 + 328);
  uint64_t v3 = *(void **)(v0 + 344);
  uint64_t v4 = type metadata accessor for Logger();
  *(void *)(v0 + 472) = sub_10000B47C(v4, (uint64_t)qword_10097A510);
  id v5 = v3;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  id v9 = *(void **)(v0 + 344);
  uint64_t v92 = v4;
  if (v8)
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    v95[0] = v11;
    uint64_t v12 = sub_10050938C();
    *(void *)(v0 + 320) = sub_100254634(v12, v13, v95);
    uint64_t v2 = (id *)(v0 + 328);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Authentication Session type: %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v14 = [objc_allocWithZone((Class)SDAuthenticationPairingResponse) init];
  *(void *)(v0 + 480) = v14;
  if (!v14)
  {
    sub_10024D280();
    uint64_t v20 = swift_allocError();
    *(_DWORD *)uint64_t v21 = 10;
    *(void *)(v21 + 8) = 0xD000000000000039;
    *(void *)(v21 + 16) = 0x80000001007C2EA0;
    swift_willThrow();
    goto LABEL_12;
  }
  uint64_t v15 = *(void *)(v0 + 344);
  uint64_t v16 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  *(void *)(v0 + 488) = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  uint64_t v17 = *(void *)(v15 + v16);
  uint64_t v18 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationPairingKeySession_aksPairingSession;
  *(void *)(v0 + 496) = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationPairingKeySession_aksPairingSession;
  *(void *)(v0 + 504) = *(void *)(v15 + v18);
  if (v17 == 8)
  {
    uint64_t v19 = v14;
    swift_retain();
    sub_1006B0B04();
    uint64_t v20 = v1;
    if (v1)
    {

      swift_release();
    }
    else
    {
      uint64_t v42 = (void *)sub_1006B0308(0, 0xF000000000000000);
      swift_release();
      *(void *)(v0 + 544) = v42;
      uint64_t v43 = *(void **)(v0 + 480);
      uint64_t v44 = *(void *)(v0 + 488);
      uint64_t v45 = *(void *)(v0 + 344);
      UUID.uuidString.getter();
      NSString v46 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v43 setSessionID:v46];

      [v43 setVersion:1];
      uint64_t v47 = Data.init(referencing:)();
      unint64_t v49 = v48;
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_100250CC4(v47, v49);
      [v43 setToken:isa];

      if (HIDWORD(*(void *)(v45 + v44))) {
        return _assertionFailure(_:_:file:line:flags:)();
      }
      uint64_t v51 = *(void *)(v0 + 344);
      [*(id *)(v0 + 480) setType:];
      uint64_t v52 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationPairingKeySession_requestArmingUI;
      if (*(unsigned char *)(v51 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationPairingKeySession_requestArmingUI) == 1)
      {
        uint64_t v53 = Logger.logObject.getter();
        os_log_type_t v54 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v53, v54))
        {
          uint64_t v55 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v55 = 0;
          _os_log_impl((void *)&_mh_execute_header, v53, v54, "Requesting arming UI", v55, 2u);
          swift_slowDealloc();
        }
        os_log_type_t v56 = *(void **)(v0 + 480);

        [v56 setRequestArmingUI:*(unsigned __int8 *)(v51 + v52)];
      }
      id v57 = [*(id *)(v0 + 480) data];
      if (v57)
      {
        uint64_t v58 = v57;
        uint64_t v59 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v61 = v60;

        *(void *)(v0 + 552) = v59;
        *(void *)(v0 + 560) = v61;
        id v62 = [self standardUserDefaults];
        NSString v63 = String._bridgeToObjectiveC()();
        uint64_t v64 = (uint64_t)[v62 integerForKey:v63];

        if (v64 > 0)
        {
          NSString v65 = Logger.logObject.getter();
          os_log_type_t v66 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v65, v66))
          {
            unint64_t v67 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)unint64_t v67 = 134217984;
            *(void *)(v0 + 304) = v64;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v65, v66, "### TESTING ONLY: start delaySendingPairingResponse for %ld seconds", v67, 0xCu);
            swift_slowDealloc();
          }

          ContinuousClock.init()();
          uint64_t v93 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598
                                                                                 + dword_10096C598);
          os_log_type_t v68 = (void *)swift_task_alloc();
          *(void *)(v0 + 568) = v68;
          *os_log_type_t v68 = v0;
          v68[1] = sub_1005C6290;
          return v93(1000000000000000000 * v64, ((unint64_t)v64 * (unsigned __int128)0xDE0B6B3A7640000uLL) >> 64, 0, 0, 1);
        }
        unint64_t v79 = *(void *)(v0 + 560);
        uint64_t v80 = *(void *)(v0 + 552);
        id v89 = *(void **)(v0 + 480);
        uint64_t v88 = *(void *)(v0 + 416);
        uint64_t v90 = *(void **)(v0 + 544);
        uint64_t v91 = *(void *)(v0 + 408);
        uint64_t v81 = *(void *)(v0 + 392);
        uint64_t v94 = *(void *)(v0 + 400);
        uint64_t v82 = *(void *)(v0 + 376);
        uint64_t v83 = *(void *)(v0 + 384);
        uint64_t v84 = *(void **)(v0 + 344);
        sub_100278C8C(*(void *)(v0 + 368), v0 + 144);
        uint64_t v85 = (void *)swift_allocObject();
        v85[2] = v84;
        v85[3] = v80;
        v85[4] = v79;
        sub_1002AF688((long long *)(v0 + 144), (uint64_t)(v85 + 5));
        *(void *)(v0 + 48) = sub_1005C9E34;
        *(void *)(v0 + 56) = v85;
        *(void *)(v0 + 16) = _NSConcreteStackBlock;
        *(void *)(v0 + 24) = 1107296256;
        *(void *)(v0 + 32) = sub_100296520;
        *(void *)(v0 + 40) = &unk_1008E0BF0;
        uint64_t v86 = _Block_copy((const void *)(v0 + 16));
        id v87 = v84;
        sub_10025ADCC(v80, v79);
        static DispatchQoS.unspecified.getter();
        *(void *)(v0 + 296) = _swiftEmptyArrayStorage;
        sub_100361140((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10000A844((uint64_t *)&unk_10096C490);
        sub_1002B4B9C();
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v86);
        sub_100250CC4(v80, v79);

        (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v81, v82);
        (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v88, v94);
        swift_release();
        goto LABEL_48;
      }
      unint64_t v77 = *(void **)(v0 + 480);
      sub_10024D280();
      uint64_t v20 = swift_allocError();
      *(_DWORD *)uint64_t v78 = 10;
      *(void *)(v78 + 8) = 0xD000000000000020;
      *(void *)(v78 + 16) = 0x80000001007BA860;
      swift_willThrow();
    }
LABEL_12:
    *(void *)(v0 + 288) = v20;
    swift_errorRetain();
    sub_10000A844(&qword_10096BAF0);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      sub_1005C8CD0(*(_DWORD *)(v0 + 232), *(void *)(v0 + 240), *(void *)(v0 + 248), (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_errorRelease();
      *(void *)(v0 + 272) = v20;
      swift_errorRetain();
      sub_1005C9DAC();
      if (!swift_dynamicCast())
      {
        swift_errorRelease();
        if (qword_10096A028 != -1) {
          swift_once();
        }
        sub_10000B47C(v92, (uint64_t)qword_10097A510);
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v31 = Logger.logObject.getter();
        os_log_type_t v32 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v31, v32))
        {
          unint64_t v33 = (uint8_t *)swift_slowAlloc();
          uint64_t v34 = swift_slowAlloc();
          *(_DWORD *)unint64_t v33 = 136315138;
          v95[0] = v34;
          *(void *)(v0 + 280) = v20;
          swift_errorRetain();
          uint64_t v35 = String.init<A>(describing:)();
          *(void *)(v0 + 256) = sub_100254634(v35, v36, v95);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v31, v32, "Unexpected error: %s", v33, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
        }

        sub_1005C8CD0(10, 0, 0xE000000000000000, (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
        goto LABEL_47;
      }
      swift_errorRelease();
      id v22 = *v2;
      int v23 = [*v2 code];
      id v24 = [v22 domain];
      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v27 = v26;

      if (v25 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v27 == v28)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v37 & 1) == 0)
        {
          if (qword_10096A028 != -1) {
            swift_once();
          }
          sub_10000B47C(v92, (uint64_t)qword_10097A510);
          id v69 = v22;
          uint64_t v70 = Logger.logObject.getter();
          os_log_type_t v71 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v70, v71))
          {
            uint64_t v72 = (uint8_t *)swift_slowAlloc();
            v95[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v72 = 136315138;
            *(void *)(v0 + 264) = v69;
            id v73 = v69;
            uint64_t v74 = String.init<A>(describing:)();
            *(void *)(v0 + 336) = sub_100254634(v74, v75, v95);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();

            _os_log_impl((void *)&_mh_execute_header, v70, v71, "Unexpected error: %s", v72, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          sub_1005C8CD0(10, 0, 0xE000000000000000, (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);

          goto LABEL_47;
        }
      }
      id v38 = (id)SFAuthenticationErrorToString();
      uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v41 = v40;

      sub_1005C8CD0(v23, v39, v41, (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
      swift_bridgeObjectRelease();
    }
LABEL_47:
    swift_errorRelease();
LABEL_48:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v76 = *(uint64_t (**)(void))(v0 + 8);
    return v76();
  }
  swift_retain();
  uint64_t v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 512) = v29;
  *uint64_t v29 = v0;
  v29[1] = sub_1005C511C;
  return sub_1006AE518();
}

uint64_t sub_1005C4AF4()
{
  uint64_t v31 = v0;
  swift_task_dealloc();
  sub_10024D338(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 464);
  *(void *)(v0 + 288) = v1;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    sub_1005C8CD0(*(_DWORD *)(v0 + 232), *(void *)(v0 + 240), *(void *)(v0 + 248), (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v2 = (id *)(v0 + 328);
  swift_errorRelease();
  *(void *)(v0 + 272) = v1;
  swift_errorRetain();
  sub_1005C9DAC();
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    id v3 = *v2;
    int v4 = [*v2 code];
    id v5 = [v3 domain];
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
      {
        if (qword_10096A028 != -1) {
          swift_once();
        }
        uint64_t v21 = type metadata accessor for Logger();
        sub_10000B47C(v21, (uint64_t)qword_10097A510);
        id v3 = v3;
        id v22 = Logger.logObject.getter();
        os_log_type_t v23 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v22, v23))
        {
          id v24 = (uint8_t *)swift_slowAlloc();
          uint64_t v30 = swift_slowAlloc();
          *(_DWORD *)id v24 = 136315138;
          *(void *)(v0 + 264) = v3;
          id v25 = v3;
          uint64_t v26 = String.init<A>(describing:)();
          *(void *)(v0 + 336) = sub_100254634(v26, v27, &v30);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();

          _os_log_impl((void *)&_mh_execute_header, v22, v23, "Unexpected error: %s", v24, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        sub_1005C8CD0(10, 0, 0xE000000000000000, (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
        goto LABEL_21;
      }
    }
    id v17 = (id)SFAuthenticationErrorToString();
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;

    sub_1005C8CD0(v4, v18, v20, (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
    swift_bridgeObjectRelease();
LABEL_21:

    goto LABEL_22;
  }
  swift_errorRelease();
  if (qword_10096A028 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000B47C(v10, (uint64_t)qword_10097A510);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v12))
  {
    unint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)unint64_t v13 = 136315138;
    *(void *)(v0 + 280) = v1;
    swift_errorRetain();
    uint64_t v14 = String.init<A>(describing:)();
    *(void *)(v0 + 256) = sub_100254634(v14, v15, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Unexpected error: %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_1005C8CD0(10, 0, 0xE000000000000000, (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
LABEL_22:
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t sub_1005C511C(uint64_t a1, uint64_t a2)
{
  int v4 = (void *)*v3;
  v4[65] = a1;
  v4[66] = a2;
  v4[67] = v2;
  swift_task_dealloc();
  if (v2)
  {
    id v5 = sub_1005C6D2C;
  }
  else
  {
    swift_release();
    id v5 = sub_1005C5240;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1005C5240()
{
  uint64_t v115 = v0;
  id v1 = [(id)v0[45] longTermKey];
  if (!v1)
  {
    unint64_t v19 = v0[66];
    uint64_t v20 = v0[65];
    uint64_t v21 = (void *)v0[60];
    sub_10024D280();
    uint64_t v22 = swift_allocError();
    *(_DWORD *)uint64_t v23 = 10;
    *(void *)(v23 + 8) = 0xD000000000000015;
    *(void *)(v23 + 16) = 0x80000001007C2EE0;
    swift_willThrow();
    sub_100250CC4(v20, v19);

    goto LABEL_9;
  }
  uint64_t v2 = v1;
  uint64_t v3 = v0[62];
  uint64_t v4 = v0[43];
  uint64_t v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v7 = v6;

  uint64_t v8 = *(void *)(v4 + v3);
  uint64_t v9 = *(void **)(v8 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager);
  swift_retain();
  sub_10025ADCC(v5, v7);
  unint64_t v111 = v7;
  v10.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
  uint64_t v12 = *(void *)(v8 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 24);
  uint64_t v11 = *(void *)(v8 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice + 32);
  unint64_t v13 = sub_10026BB6C((void *)(v8 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice), v12);
  uint64_t v14 = *(void *)(v12 - 8);
  uint64_t v15 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v14 + 16))(v15, v13, v12);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v11);
  uint64_t v17 = v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v12);
  if (v17)
  {
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v18 = 0;
  }
  uint64_t v24 = v0[67];
  swift_task_dealloc();
  [v9 signAndStoreRemoteLTK:v10.super.isa forDeviceID:v18];

  sub_1006AFDE8();
  uint64_t v22 = v24;
  if (v24)
  {
    unint64_t v25 = v0[66];
    uint64_t v26 = v0[65];

    sub_100250CC4(v5, v111);
    swift_release();
    sub_100250CC4(v5, v111);
    sub_100250CC4(v26, v25);
    goto LABEL_9;
  }
  uint64_t v109 = (void *)sub_1006B0308(0, 0xF000000000000000);
  unint64_t v46 = v0[66];
  uint64_t v47 = v0[65];
  sub_100250CC4(v5, v111);
  swift_release();
  sub_10025ADCC(v47, v46);
  sub_10025ADCC(v47, v46);
  unint64_t v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.default.getter();
  BOOL v50 = os_log_type_enabled(v48, v49);
  unint64_t v51 = v0[66];
  uint64_t v52 = v0[65];
  if (v50)
  {
    uint64_t v53 = (uint8_t *)swift_slowAlloc();
    v114[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v53 = 136315138;
    uint64_t v54 = Data.debugDescription.getter();
    v0[39] = sub_100254634(v54, v55, v114);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100250CC4(v52, v51);
    sub_100250CC4(v52, v51);
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "Sending localAttestedLTK: %s", v53, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100250CC4(v52, v51);
    sub_100250CC4(v52, v51);
  }

  unint64_t v63 = v0[66];
  uint64_t v64 = v0[65];
  NSString v65 = (void *)v0[60];
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  [v65 setLongTermKey:isa];

  sub_100250CC4(v5, v111);
  sub_100250CC4(v64, v63);
  v0[68] = v109;
  unint64_t v67 = (void *)v0[60];
  uint64_t v68 = v0[61];
  uint64_t v69 = v0[43];
  UUID.uuidString.getter();
  NSString v70 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v67 setSessionID:v70];

  [v67 setVersion:1];
  uint64_t v71 = Data.init(referencing:)();
  unint64_t v73 = v72;
  Class v74 = Data._bridgeToObjectiveC()().super.isa;
  sub_100250CC4(v71, v73);
  [v67 setToken:v74];

  if (HIDWORD(*(void *)(v69 + v68))) {
    return _assertionFailure(_:_:file:line:flags:)();
  }
  uint64_t v75 = v0[43];
  [v0[60] setType:];
  uint64_t v76 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationPairingKeySession_requestArmingUI;
  if (*(unsigned char *)(v75 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationPairingKeySession_requestArmingUI) == 1)
  {
    unint64_t v77 = Logger.logObject.getter();
    os_log_type_t v78 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v77, v78))
    {
      unint64_t v79 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v79 = 0;
      _os_log_impl((void *)&_mh_execute_header, v77, v78, "Requesting arming UI", v79, 2u);
      swift_slowDealloc();
    }
    uint64_t v80 = (void *)v0[60];

    [v80 setRequestArmingUI:*(unsigned __int8 *)(v75 + v76)];
  }
  id v81 = [(id)v0[60] data];
  if (!v81)
  {
    uint64_t v94 = (void *)v0[60];
    sub_10024D280();
    uint64_t v22 = swift_allocError();
    *(_DWORD *)uint64_t v95 = 10;
    *(void *)(v95 + 8) = 0xD000000000000020;
    *(void *)(v95 + 16) = 0x80000001007BA860;
    swift_willThrow();

LABEL_9:
    v0[36] = v22;
    swift_errorRetain();
    sub_10000A844(&qword_10096BAF0);
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      sub_1005C8CD0(*((_DWORD *)v0 + 58), v0[30], v0[31], (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
      swift_bridgeObjectRelease();
LABEL_46:
      swift_errorRelease();
      goto LABEL_47;
    }
    unint64_t v27 = (id *)(v0 + 41);
    swift_errorRelease();
    v0[34] = v22;
    swift_errorRetain();
    sub_1005C9DAC();
    if (!swift_dynamicCast())
    {
      swift_errorRelease();
      if (qword_10096A028 != -1) {
        swift_once();
      }
      uint64_t v35 = type metadata accessor for Logger();
      sub_10000B47C(v35, (uint64_t)qword_10097A510);
      swift_errorRetain();
      swift_errorRetain();
      unint64_t v36 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v36, v37))
      {
        id v38 = (uint8_t *)swift_slowAlloc();
        v114[0] = swift_slowAlloc();
        *(_DWORD *)id v38 = 136315138;
        v0[35] = v22;
        swift_errorRetain();
        uint64_t v39 = String.init<A>(describing:)();
        v0[32] = sub_100254634(v39, v40, v114);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "Unexpected error: %s", v38, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      sub_1005C8CD0(10, 0, 0xE000000000000000, (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
      goto LABEL_46;
    }
    swift_errorRelease();
    id v28 = *v27;
    int v29 = [*v27 code];
    id v30 = [v28 domain];
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v33 = v32;

    if (v31 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v33 == v34)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v41 & 1) == 0)
      {
        if (qword_10096A028 != -1) {
          swift_once();
        }
        uint64_t v56 = type metadata accessor for Logger();
        sub_10000B47C(v56, (uint64_t)qword_10097A510);
        id v28 = v28;
        id v57 = Logger.logObject.getter();
        os_log_type_t v58 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v57, v58))
        {
          uint64_t v59 = (uint8_t *)swift_slowAlloc();
          v114[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v59 = 136315138;
          v0[33] = v28;
          id v60 = v28;
          uint64_t v61 = String.init<A>(describing:)();
          v0[42] = sub_100254634(v61, v62, v114);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();

          _os_log_impl((void *)&_mh_execute_header, v57, v58, "Unexpected error: %s", v59, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        sub_1005C8CD0(10, 0, 0xE000000000000000, (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
        goto LABEL_45;
      }
    }
    id v42 = (id)SFAuthenticationErrorToString();
    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v45 = v44;

    sub_1005C8CD0(v29, v43, v45, (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
    swift_bridgeObjectRelease();
LABEL_45:

    goto LABEL_46;
  }
  uint64_t v82 = v81;
  uint64_t v83 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v85 = v84;

  v0[69] = v83;
  v0[70] = v85;
  id v86 = [self standardUserDefaults];
  NSString v87 = String._bridgeToObjectiveC()();
  uint64_t v88 = (uint64_t)[v86 integerForKey:v87];

  if (v88 > 0)
  {
    id v89 = Logger.logObject.getter();
    os_log_type_t v90 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v89, v90))
    {
      uint64_t v91 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v91 = 134217984;
      v0[38] = v88;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v89, v90, "### TESTING ONLY: start delaySendingPairingResponse for %ld seconds", v91, 0xCu);
      swift_slowDealloc();
    }

    ContinuousClock.init()();
    uint64_t v112 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
    uint64_t v92 = (void *)swift_task_alloc();
    v0[71] = v92;
    *uint64_t v92 = v0;
    v92[1] = sub_1005C6290;
    return v112(1000000000000000000 * v88, ((unint64_t)v88 * (unsigned __int128)0xDE0B6B3A7640000uLL) >> 64, 0, 0, 1);
  }
  unint64_t v97 = v0[70];
  uint64_t v98 = v0[69];
  uint64_t v107 = (void *)v0[60];
  uint64_t v106 = v0[52];
  uint64_t v108 = (void *)v0[68];
  uint64_t v110 = v0[51];
  uint64_t v99 = v0[49];
  uint64_t v113 = v0[50];
  uint64_t v100 = v0[47];
  uint64_t v101 = v0[48];
  unint64_t v102 = (void *)v0[43];
  sub_100278C8C(v0[46], (uint64_t)(v0 + 18));
  unint64_t v103 = (void *)swift_allocObject();
  v103[2] = v102;
  v103[3] = v98;
  v103[4] = v97;
  sub_1002AF688((long long *)v0 + 9, (uint64_t)(v103 + 5));
  v0[6] = sub_1005C9E34;
  v0[7] = v103;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100296520;
  v0[5] = &unk_1008E0BF0;
  unint64_t v104 = _Block_copy(v0 + 2);
  id v105 = v102;
  sub_10025ADCC(v98, v97);
  static DispatchQoS.unspecified.getter();
  v0[37] = _swiftEmptyArrayStorage;
  sub_100361140((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002B4B9C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v104);
  sub_100250CC4(v98, v97);

  (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v99, v100);
  (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v106, v113);
  swift_release();
LABEL_47:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v96 = (uint64_t (*)(void))v0[1];
  return v96();
}

uint64_t sub_1005C6290()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 576) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[54] + 8))(v2[55], v2[53]);
  if (v0) {
    uint64_t v3 = sub_1005C66F4;
  }
  else {
    uint64_t v3 = sub_1005C63F8;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1005C63F8()
{
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "### TESTING ONLY: end delaySendingPairingResponse", v3, 2u);
    swift_slowDealloc();
  }

  unint64_t v4 = *((void *)v0 + 70);
  uint64_t v5 = *((void *)v0 + 69);
  uint64_t v16 = (void *)*((void *)v0 + 60);
  uint64_t v15 = *((void *)v0 + 52);
  uint64_t v17 = (void *)*((void *)v0 + 68);
  uint64_t v18 = *((void *)v0 + 51);
  uint64_t v6 = *((void *)v0 + 49);
  uint64_t v19 = *((void *)v0 + 50);
  uint64_t v7 = *((void *)v0 + 47);
  uint64_t v8 = *((void *)v0 + 48);
  uint64_t v9 = (void *)*((void *)v0 + 43);
  sub_100278C8C(*((void *)v0 + 46), (uint64_t)(v0 + 9));
  NSData v10 = (void *)swift_allocObject();
  v10[2] = v9;
  v10[3] = v5;
  v10[4] = v4;
  sub_1002AF688(v0 + 9, (uint64_t)(v10 + 5));
  *((void *)v0 + 6) = sub_1005C9E34;
  *((void *)v0 + 7) = v10;
  *((void *)v0 + 2) = _NSConcreteStackBlock;
  *((void *)v0 + 3) = 1107296256;
  *((void *)v0 + 4) = sub_100296520;
  *((void *)v0 + 5) = &unk_1008E0BF0;
  uint64_t v11 = _Block_copy(v0 + 1);
  id v12 = v9;
  sub_10025ADCC(v5, v4);
  static DispatchQoS.unspecified.getter();
  *((void *)v0 + 37) = _swiftEmptyArrayStorage;
  sub_100361140((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002B4B9C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);
  sub_100250CC4(v5, v4);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v19);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v13 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v13();
}

uint64_t sub_1005C66F4()
{
  uint64_t v34 = v0;
  unint64_t v1 = *(void *)(v0 + 560);
  uint64_t v2 = *(void *)(v0 + 552);
  uint64_t v3 = *(void **)(v0 + 480);

  sub_100250CC4(v2, v1);
  uint64_t v4 = *(void *)(v0 + 576);
  *(void *)(v0 + 288) = v4;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    sub_1005C8CD0(*(_DWORD *)(v0 + 232), *(void *)(v0 + 240), *(void *)(v0 + 248), (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v5 = (id *)(v0 + 328);
  swift_errorRelease();
  *(void *)(v0 + 272) = v4;
  swift_errorRetain();
  sub_1005C9DAC();
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    id v6 = *v5;
    int v7 = [*v5 code];
    id v8 = [v6 domain];
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    if (v9 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v11 == v12)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
        if (qword_10096A028 != -1) {
          swift_once();
        }
        uint64_t v24 = type metadata accessor for Logger();
        sub_10000B47C(v24, (uint64_t)qword_10097A510);
        id v6 = v6;
        unint64_t v25 = Logger.logObject.getter();
        os_log_type_t v26 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v25, v26))
        {
          unint64_t v27 = (uint8_t *)swift_slowAlloc();
          uint64_t v33 = swift_slowAlloc();
          *(_DWORD *)unint64_t v27 = 136315138;
          *(void *)(v0 + 264) = v6;
          id v28 = v6;
          uint64_t v29 = String.init<A>(describing:)();
          *(void *)(v0 + 336) = sub_100254634(v29, v30, &v33);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();

          _os_log_impl((void *)&_mh_execute_header, v25, v26, "Unexpected error: %s", v27, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        sub_1005C8CD0(10, 0, 0xE000000000000000, (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
        goto LABEL_21;
      }
    }
    id v20 = (id)SFAuthenticationErrorToString();
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    sub_1005C8CD0(v7, v21, v23, (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
    swift_bridgeObjectRelease();
LABEL_21:

    goto LABEL_22;
  }
  swift_errorRelease();
  if (qword_10096A028 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10000B47C(v13, (uint64_t)qword_10097A510);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315138;
    *(void *)(v0 + 280) = v4;
    swift_errorRetain();
    uint64_t v17 = String.init<A>(describing:)();
    *(void *)(v0 + 256) = sub_100254634(v17, v18, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Unexpected error: %s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_1005C8CD0(10, 0, 0xE000000000000000, (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
LABEL_22:
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_1005C6D2C()
{
  uint64_t v31 = v0;

  swift_release();
  uint64_t v1 = *(void *)(v0 + 536);
  *(void *)(v0 + 288) = v1;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    sub_1005C8CD0(*(_DWORD *)(v0 + 232), *(void *)(v0 + 240), *(void *)(v0 + 248), (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v2 = (id *)(v0 + 328);
  swift_errorRelease();
  *(void *)(v0 + 272) = v1;
  swift_errorRetain();
  sub_1005C9DAC();
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    id v3 = *v2;
    int v4 = [*v2 code];
    id v5 = [v3 domain];
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
      {
        if (qword_10096A028 != -1) {
          swift_once();
        }
        uint64_t v21 = type metadata accessor for Logger();
        sub_10000B47C(v21, (uint64_t)qword_10097A510);
        id v3 = v3;
        uint64_t v22 = Logger.logObject.getter();
        os_log_type_t v23 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v24 = (uint8_t *)swift_slowAlloc();
          uint64_t v30 = swift_slowAlloc();
          *(_DWORD *)uint64_t v24 = 136315138;
          *(void *)(v0 + 264) = v3;
          id v25 = v3;
          uint64_t v26 = String.init<A>(describing:)();
          *(void *)(v0 + 336) = sub_100254634(v26, v27, &v30);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();

          _os_log_impl((void *)&_mh_execute_header, v22, v23, "Unexpected error: %s", v24, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        sub_1005C8CD0(10, 0, 0xE000000000000000, (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
        goto LABEL_21;
      }
    }
    id v17 = (id)SFAuthenticationErrorToString();
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;

    sub_1005C8CD0(v4, v18, v20, (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
    swift_bridgeObjectRelease();
LABEL_21:

    goto LABEL_22;
  }
  swift_errorRelease();
  if (qword_10096A028 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000B47C(v10, (uint64_t)qword_10097A510);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    *(void *)(v0 + 280) = v1;
    swift_errorRetain();
    uint64_t v14 = String.init<A>(describing:)();
    *(void *)(v0 + 256) = sub_100254634(v14, v15, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Unexpected error: %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_1005C8CD0(10, 0, 0xE000000000000000, (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
LABEL_22:
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t sub_1005C7354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_10096A028 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000B47C(v8, (uint64_t)qword_10097A510);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Sending authentication pairing response", v11, 2u);
    swift_slowDealloc();
  }

  uint64_t v12 = a1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
  swift_beginAccess();
  sub_10024A330(v12, (uint64_t)&v18, &qword_100978040);
  if (v19)
  {
    sub_1002AF688(&v18, (uint64_t)v20);
    sub_10026BB6C(v20, v20[3]);
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationPairingKeySession_requestArmingUI) == 1) {
      char v13 = *(unsigned char *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationPairingKeySession_armingUITransportType);
    }
    else {
      char v13 = sub_100508B74(*(void *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type));
    }
    sub_1006FA9F0(a2, a3, a4, 4, v13);
    sub_10024D338((uint64_t)v20);
  }
  else
  {
    sub_10000A7E8((uint64_t)&v18, &qword_100978040);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      char v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Warning: No delegate to send response to", v16, 2u);
      swift_slowDealloc();
    }
  }
  return sub_100507F28(0, 1);
}

char *sub_1005C759C(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  id v8 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    if (qword_10096A028 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = sub_10000B47C(v9, (uint64_t)qword_10097A510);
  id v11 = a1;
  uint64_t v12 = v1;
  id v13 = v11;
  uint64_t v14 = v12;
  uint64_t v110 = v10;
  os_log_type_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    long long v18 = (void *)swift_slowAlloc();
    uint64_t v109 = swift_slowAlloc();
    v117[0] = v109;
    *(_DWORD *)uint64_t v17 = 138412546;
    uint64_t v113 = (uint64_t)v13;
    id v19 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *long long v18 = v13;

    *(_WORD *)(v17 + 12) = 2080;
    uint64_t v20 = UUID.uuidString.getter();
    uint64_t v113 = sub_100254634(v20, v21, v117);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Received authentication pairing create secret: %@ for sessionID %s", (uint8_t *)v17, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_100508854();
  uint64_t v22 = (uint64_t)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
  swift_beginAccess();
  sub_10024A330(v22, (uint64_t)&v113, &qword_10097BB50);
  sub_10024A330((uint64_t)&v113, (uint64_t)&v111, &qword_10097BB50);
  if (v112)
  {
    sub_1002AF688(&v111, (uint64_t)v117);
    sub_10000A7E8((uint64_t)&v113, &qword_10097BB50);
    id v23 = [v13 token];
    if (v23)
    {
      uint64_t v24 = v23;
      uint64_t v25 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v27 = v26;

      swift_retain();
      id v33 = sub_1006AEF58(v25, v27);
      swift_release();
      id v34 = [objc_allocWithZone((Class)SDAuthenticationPairingCreateRecord) init];
      if (v34)
      {
        uint64_t v35 = v34;
        uint64_t v36 = 0xD000000000000015;
        uint64_t v107 = &v14[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_sessionID];
        UUID.uuidString.getter();
        NSString v37 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v35 setSessionID:v37];

        [v35 setToken:v33];
        uint64_t v38 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationPairingKeySession_requestArmingUI;
        [v35 setRequestArmingUI:v14[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationPairingKeySession_requestArmingUI]];
        id v39 = [v35 data];
        if (v39)
        {
          unint64_t v40 = v39;
          id v106 = v33;
          uint64_t v108 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v42 = v41;

          id v43 = [self standardUserDefaults];
          NSString v44 = String._bridgeToObjectiveC()();
          uint64_t v109 = (uint64_t)v14;
          uint64_t v45 = v44;
          unsigned __int8 v46 = [v43 BOOLForKey:v44];

          uint64_t v47 = v109 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
          swift_beginAccess();
          sub_10024A330(v47, (uint64_t)&v111, &qword_100978040);
          if (v112)
          {
            unint64_t v105 = v42;
            sub_1002AF688(&v111, (uint64_t)&v113);
            if (v46)
            {
              unint64_t v48 = Logger.logObject.getter();
              os_log_type_t v49 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v48, v49))
              {
                BOOL v50 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)BOOL v50 = 0;
                _os_log_impl((void *)&_mh_execute_header, v48, v49, "### TESTING ONLY: Skip sending authentication pairing create record due to default skipSendAuthenticationPairingCreateRecord", v50, 2u);
                swift_slowDealloc();
              }
            }
            else
            {
              sub_10026BB6C(&v113, v115);
              if (*(unsigned char *)(v109 + v38) == 1) {
                char v58 = *(unsigned char *)(v109
              }
                               + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationPairingKeySession_armingUITransportType);
              else {
                char v58 = sub_100508B74(*(void *)(v109 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type));
              }
              sub_1006FA9F0(v108, v105, (uint64_t)v117, 5, v58);
            }
            uint64_t v59 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
            id v60 = (char *)v109;
            if (*(void *)(v109 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type) == 5) {
              sub_100507F28(0, 1);
            }
            sub_10024D338((uint64_t)&v113);
            uint64_t v61 = *(void *)&v60[v59];
            if (v61 != 3)
            {
LABEL_54:
              if (v61 == 5)
              {
                sub_10024D338((uint64_t)v117);

                sub_100250CC4(v108, v105);
                return (char *)sub_100250CC4(v25, (unint64_t)v27);
              }
              else
              {
                sub_10024A330(v47, (uint64_t)&v113, &qword_100978040);
                if (v115)
                {
                  sub_100278C8C((uint64_t)&v113, (uint64_t)&v111);
                  sub_10000A7E8((uint64_t)&v113, &qword_100978040);
                  uint64_t v94 = (char *)*sub_10026BB6C(&v111, v112);
                  uint64_t v95 = v60;
                  sub_1004EA2EC(v95, v94);
                  sub_100250CC4(v108, v105);
                  sub_100250CC4(v25, (unint64_t)v27);

                  sub_10024D338((uint64_t)v117);
                  return (char *)sub_10024D338((uint64_t)&v111);
                }
                else
                {
                  sub_10024D338((uint64_t)v117);

                  sub_100250CC4(v108, v105);
                  sub_100250CC4(v25, (unint64_t)v27);
                  return (char *)sub_10000A7E8((uint64_t)&v113, &qword_100978040);
                }
              }
            }
            unint64_t v62 = v60;
            unint64_t v63 = Logger.logObject.getter();
            LODWORD(v103) = static os_log_type_t.info.getter();
            BOOL v64 = os_log_type_enabled(v63, (os_log_type_t)v103);
            uint64_t v104 = v47;
            if (!v64)
            {

LABEL_44:
              uint64_t result = (char *)[self sharedManager];
              if (!result)
              {
                __break(1u);
                return result;
              }
              unint64_t v79 = result;
              UUID.uuidString.getter();
              NSString v80 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              sub_10024A330(v22, (uint64_t)&v113, &qword_10097BB50);
              uint64_t v81 = v115;
              if (v115)
              {
                NSString v103 = v80;
                uint64_t v107 = v79;
                uint64_t v82 = v59;
                uint64_t v83 = v116;
                uint64_t v84 = sub_10026BB6C(&v113, v115);
                os_log_t v102 = (os_log_t)&v96;
                uint64_t v85 = *(void *)(v81 - 8);
                __chkstk_darwin(v84);
                NSString v87 = (char *)&v96 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
                (*(void (**)(char *))(v85 + 16))(v87);
                sub_10000A7E8((uint64_t)&v113, &qword_10097BB50);
                (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v81, v83);
                uint64_t v89 = v88;
                (*(void (**)(char *, uint64_t))(v85 + 8))(v87, v81);
                if (v89)
                {
                  NSString v90 = String._bridgeToObjectiveC()();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  NSString v90 = 0;
                }
                id v60 = (char *)v109;
                uint64_t v47 = v104;
                uint64_t v59 = v82;
                unint64_t v79 = v107;
                NSString v80 = v103;
              }
              else
              {
                sub_10000A7E8((uint64_t)&v113, &qword_10097BB50);
                NSString v90 = 0;
                uint64_t v47 = v104;
              }
              [v79 setPairingID:v80 forWatchID:v90];

              uint64_t v91 = Logger.logObject.getter();
              os_log_type_t v92 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v91, v92))
              {
                uint64_t v93 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v93 = 0;
                _os_log_impl((void *)&_mh_execute_header, v91, v92, "Pairing enabled", v93, 2u);
                swift_slowDealloc();
              }

              uint64_t v61 = *(void *)&v60[v59];
              goto LABEL_54;
            }
            os_log_t v102 = v63;
            uint64_t v100 = v59;
            uint64_t v65 = swift_slowAlloc();
            uint64_t v101 = swift_slowAlloc();
            *(void *)&long long v111 = v101;
            *(_DWORD *)uint64_t v65 = 136315394;
            uint64_t v66 = UUID.uuidString.getter();
            uint64_t v113 = sub_100254634(v66, v67, (uint64_t *)&v111);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            *(_WORD *)(v65 + 12) = 2080;
            sub_10024A330(v22, (uint64_t)&v113, &qword_10097BB50);
            uint64_t v68 = v115;
            if (v115)
            {
              uint64_t v69 = v116;
              NSString v70 = sub_10026BB6C(&v113, v115);
              uint64_t v98 = &v96;
              uint64_t v71 = *(void *)(v68 - 8);
              __chkstk_darwin(v70);
              uint64_t v99 = v62;
              uint64_t v73 = v65;
              Class v74 = (char *)&v96 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
              (*(void (**)(char *))(v71 + 16))(v74);
              sub_10000A7E8((uint64_t)&v113, &qword_10097BB50);
              uint64_t v97 = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 8))(v68, v69);
              unint64_t v76 = v75;
              unint64_t v77 = v74;
              uint64_t v65 = v73;
              unint64_t v62 = v99;
              (*(void (**)(char *, uint64_t))(v71 + 8))(v77, v68);
              if (v76)
              {
                uint64_t v36 = v97;
LABEL_43:
                uint64_t v59 = v100;
                uint64_t v113 = sub_100254634(v36, v76, (uint64_t *)&v111);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();

                swift_bridgeObjectRelease();
                os_log_t v78 = v102;
                _os_log_impl((void *)&_mh_execute_header, v102, (os_log_type_t)v103, "Setting pairing ID: %s for device: %s", (uint8_t *)v65, 0x16u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                id v60 = (char *)v109;
                goto LABEL_44;
              }
            }
            else
            {
              sub_10000A7E8((uint64_t)&v113, &qword_10097BB50);
            }
            uint64_t v113 = 0;
            unint64_t v114 = 0xE000000000000000;
            _StringGuts.grow(_:)(17);
            swift_bridgeObjectRelease();
            unint64_t v76 = 0x80000001007B7770;
            goto LABEL_43;
          }
          sub_10000A7E8((uint64_t)&v111, &qword_100978040);
          uint64_t v113 = 0;
          unint64_t v114 = 0xE000000000000000;
          _StringGuts.grow(_:)(61);
          v53._countAndFlagsBits = 0xD00000000000003BLL;
          v53._object = (void *)0x80000001007C2F60;
          String.append(_:)(v53);
          v54._countAndFlagsBits = 0x5F28656C646E6168;
          v54._object = (void *)0xEA0000000000293ALL;
          String.append(_:)(v54);
          uint64_t v55 = v113;
          unint64_t v56 = v114;
          sub_10024D280();
          uint64_t v28 = swift_allocError();
          *(_DWORD *)uint64_t v57 = 25;
          *(void *)(v57 + 8) = v55;
          *(void *)(v57 + 16) = v56;
          swift_willThrow();
          sub_100250CC4(v108, v42);
          sub_100250CC4(v25, (unint64_t)v27);
        }
        else
        {
          sub_10024D280();
          uint64_t v28 = swift_allocError();
          *(_DWORD *)uint64_t v52 = 10;
          *(void *)(v52 + 8) = 0xD000000000000020;
          *(void *)(v52 + 16) = 0x80000001007BA860;
          swift_willThrow();
          sub_100250CC4(v25, (unint64_t)v27);
        }
      }
      else
      {
        sub_10024D280();
        uint64_t v28 = swift_allocError();
        *(_DWORD *)uint64_t v51 = 10;
        *(void *)(v51 + 8) = 0xD00000000000003ELL;
        *(void *)(v51 + 16) = 0x80000001007C2F20;
        swift_willThrow();
        sub_100250CC4(v25, (unint64_t)v27);
      }
    }
    else
    {
      sub_10024D280();
      uint64_t v28 = swift_allocError();
      *(_DWORD *)uint64_t v30 = 10;
      strcpy((char *)(v30 + 8), "Missing token");
      *(_WORD *)(v30 + 22) = -4864;
      swift_willThrow();
    }
    sub_10024D338((uint64_t)v117);
  }
  else
  {
    sub_10000A7E8((uint64_t)&v111, &qword_10097BB50);
    sub_10024D280();
    uint64_t v28 = swift_allocError();
    *(_DWORD *)uint64_t v29 = 10;
    *(void *)(v29 + 8) = 0xD00000000000001BLL;
    *(void *)(v29 + 16) = 0x80000001007C2F00;
    swift_willThrow();
    sub_10000A7E8((uint64_t)&v113, &qword_10097BB50);
  }
  uint64_t v113 = v28;
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    sub_1005C8CD0(v117[0], v117[1], v117[2], (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
    swift_errorRelease();
    return (char *)swift_bridgeObjectRelease();
  }
  else
  {
    v117[0] = v28;
    swift_errorRetain();
    type metadata accessor for SFAuthenticationError(0);
    if (swift_dynamicCast()) {
      int v32 = v113;
    }
    else {
      int v32 = 25;
    }
    sub_1005C8CD0(v32, 0, 0xE000000000000000, (uint64_t)&unk_1008E0C28, (uint64_t)sub_1005C9E60, (uint64_t)&unk_1008E0C40);
    return (char *)swift_errorRelease();
  }
}

void sub_1005C8724(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  id v8 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    if (qword_10096A028 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = sub_10000B47C(v9, (uint64_t)qword_10097A510);
  id v11 = a1;
  uint64_t v12 = v1;
  id v13 = v11;
  uint64_t v14 = v12;
  os_log_type_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    long long v18 = (void *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v40 = v38;
    *(_DWORD *)uint64_t v17 = 138412546;
    uint64_t v43 = (uint64_t)v13;
    id v19 = v13;
    uint64_t v39 = v10;
    id v20 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *long long v18 = v13;

    *(_WORD *)(v17 + 12) = 2080;
    uint64_t v21 = UUID.uuidString.getter();
    uint64_t v43 = sub_100254634(v21, v22, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Received authentication pairing response: %@ for sessionID %s", (uint8_t *)v17, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if ([v13 hasErrorCode])
  {
    unsigned int v23 = [v13 errorCode];
    uint64_t v40 = 0;
    uint64_t v41 = 0xE000000000000000;
    _StringGuts.grow(_:)(32);
    swift_bridgeObjectRelease();
    uint64_t v40 = 0xD00000000000001ELL;
    uint64_t v41 = 0x80000001007BA950;
    id v24 = (id)SFAuthenticationErrorToString();
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v27 = v26;

    v28._countAndFlagsBits = v25;
    v28._object = v27;
    String.append(_:)(v28);
    swift_bridgeObjectRelease();
    uint64_t v29 = v40;
    uint64_t v30 = v41;
    sub_10024D280();
    uint64_t v31 = swift_allocError();
    *(_DWORD *)uint64_t v32 = v23;
    *(void *)(v32 + 8) = v29;
    *(void *)(v32 + 16) = v30;
    swift_willThrow();
    uint64_t v43 = v31;
    swift_errorRetain();
    swift_errorRetain();
    sub_10000A844(&qword_10096BAF0);
    if (swift_dynamicCast())
    {
      sub_1005C8CD0(v40, v41, v42, (uint64_t)&unk_1008E0C78, (uint64_t)sub_1005CA248, (uint64_t)&unk_1008E0C90);
      swift_errorRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v40 = v31;
      swift_errorRetain();
      type metadata accessor for SFAuthenticationError(0);
      if (swift_dynamicCast()) {
        int v36 = v43;
      }
      else {
        int v36 = 25;
      }
      sub_1005C8CD0(v36, 0, 0xE000000000000000, (uint64_t)&unk_1008E0C78, (uint64_t)sub_1005CA248, (uint64_t)&unk_1008E0C90);
      swift_errorRelease();
    }
    swift_errorRelease();
  }
  else
  {
    id v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Got message that should include error but didn't include error", v35, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1005C8CD0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for DispatchQoS();
  uint64_t v14 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  os_log_type_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v6;
  *(_DWORD *)(v17 + 24) = a1;
  *(void *)(v17 + 32) = a2;
  *(void *)(v17 + 40) = a3;
  aBlock[4] = v22;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = v23;
  long long v18 = _Block_copy(aBlock);
  id v19 = v6;
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  uint64_t v26 = _swiftEmptyArrayStorage;
  sub_100361140((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002B4B9C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v25);
  return swift_release();
}

void sub_1005C8F80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v8 = [objc_allocWithZone((Class)SDAuthenticationPairingResponse) init];
  uint64_t v9 = v8;
  uint64_t v10 = &qword_10096A000;
  if (v8)
  {
    [v8 setVersion:1];
    uint64_t v11 = a2;
    uint64_t v12 = v9;
    UUID.uuidString.getter();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v12 setSessionID:v13];

    [v12 setErrorCode:a1];
    uint64_t v14 = v12;
    a2 = v11;
    id v15 = [v14 data];
    if (v15)
    {
      os_log_type_t v16 = v15;
      int v17 = a1;
      a1 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v19 = v18;

      uint64_t v20 = (uint64_t)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
      swift_beginAccess();
      sub_10024A330(v20, (uint64_t)&v44, &qword_10097BB50);
      if (v45)
      {
        sub_1002AF688(&v44, (uint64_t)v46);
        uint64_t v21 = (uint64_t)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
        swift_beginAccess();
        sub_10024A330(v21, (uint64_t)&v44, &qword_100978040);
        if (v45)
        {
          sub_100278C8C((uint64_t)&v44, (uint64_t)v43);
          sub_10000A7E8((uint64_t)&v44, &qword_100978040);
          sub_10026BB6C(v43, v43[3]);
          if (v4[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationPairingKeySession_requestArmingUI] == 1) {
            char v22 = v4[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationPairingKeySession_armingUITransportType];
          }
          else {
            char v22 = sub_100508B74(*(void *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type]);
          }
          sub_1006FA9F0(a1, v19, (uint64_t)v46, 4, v22);
          sub_100250CC4(a1, v19);
          sub_10024D338((uint64_t)v46);
          sub_10024D338((uint64_t)v43);
        }
        else
        {
          sub_10024D338((uint64_t)v46);
          sub_100250CC4(a1, v19);
          sub_10000A7E8((uint64_t)&v44, &qword_100978040);
        }
        LODWORD(a1) = v17;
        goto LABEL_20;
      }
      sub_100250CC4(a1, v19);
      sub_10000A7E8((uint64_t)&v44, &qword_10097BB50);
      LODWORD(a1) = v17;
    }
  }
  uint64_t v42 = a2;
  if (qword_10096A028 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for Logger();
  sub_10000B47C(v23, (uint64_t)qword_10097A510);
  uint64_t v24 = v9;
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v41 = a3;
    unint64_t v27 = (uint8_t *)swift_slowAlloc();
    Swift::String v28 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v27 = 138412290;
    if (v9)
    {
      v46[0] = v24;
      uint64_t v29 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v30 = v9;
    }
    else
    {
      v46[0] = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v30 = 0;
    }
    *Swift::String v28 = v30;

    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Could not convert response to data: %@", v27, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a3 = v41;
    a2 = v42;
    uint64_t v10 = &qword_10096A000;
  }
  else
  {

    uint64_t v10 = &qword_10096A000;
  }
LABEL_20:
  uint64_t v31 = (uint64_t)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess();
  sub_10024A330(v31, (uint64_t)v46, &qword_100978040);
  if (v46[3])
  {
    sub_100278C8C((uint64_t)v46, (uint64_t)&v44);
    sub_10000A7E8((uint64_t)v46, &qword_100978040);
    uint64_t v32 = *sub_10026BB6C(&v44, v45);
    id v33 = v4;
    sub_100458778(v33, a1, a2, a3, v32);

    sub_10024D338((uint64_t)&v44);
  }
  else
  {
    sub_10000A7E8((uint64_t)v46, &qword_100978040);
  }
  if (v10[5] != -1) {
    swift_once();
  }
  uint64_t v34 = type metadata accessor for Logger();
  sub_10000B47C(v34, (uint64_t)qword_10097A510);
  swift_bridgeObjectRetain_n();
  uint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 138412290;
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v39 = a1;
    *(void *)(v39 + 8) = a2;
    *(void *)(v39 + 16) = a3;
    swift_bridgeObjectRetain();
    uint64_t v40 = _swift_stdlib_bridgeErrorToNSError();
    v46[0] = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v38 = v40;
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Session failed with error: %@", v37, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v35 = v9;
  }
}

uint64_t sub_1005C9630()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    if (qword_10096A028 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger();
  sub_10000B47C(v7, (uint64_t)qword_10097A510);
  id v8 = v0;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v17 = v12;
    type metadata accessor for UUID();
    sub_100361140((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v16 = sub_100254634(v13, v14, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Response timer fired for %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_1005C8CD0(12, 0xD000000000000035, 0x80000001007C2FA0, (uint64_t)&unk_1008E0C78, (uint64_t)sub_1005CA248, (uint64_t)&unk_1008E0C90);
  return sub_100508854();
}

uint64_t sub_1005C995C(void *a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (uint64_t)a1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
  swift_beginAccess();
  sub_10024A330(v8, (uint64_t)v13, &qword_100978040);
  if (!v14) {
    return sub_10000A7E8((uint64_t)v13, &qword_100978040);
  }
  sub_100278C8C((uint64_t)v13, (uint64_t)v12);
  sub_10000A7E8((uint64_t)v13, &qword_100978040);
  uint64_t v9 = *sub_10026BB6C(v12, v12[3]);
  id v10 = a1;
  sub_100458778(v10, a2, a3, a4, v9);

  return sub_10024D338((uint64_t)v12);
}

uint64_t sub_1005C9A48()
{
  return swift_release();
}

uint64_t sub_1005C9A68()
{
  return type metadata accessor for SDAuthenticationPairingKeySession();
}

uint64_t type metadata accessor for SDAuthenticationPairingKeySession()
{
  uint64_t result = qword_10097A560;
  if (!qword_10097A560) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005C9ABC()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1005C9B18()
{
  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationPairingKeySession_requestArmingUI);
}

uint64_t sub_1005C9B2C(uint64_t result)
{
  *(unsigned char *)(*v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationPairingKeySession_requestArmingUI) = result;
  return result;
}

uint64_t sub_1005C9B40()
{
  uint64_t v1 = (int *)(type metadata accessor for AuthenticationSecurityRequest(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  uint64_t v7 = v0 + v1[7] + v3;
  uint64_t v8 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  sub_10024D338(v0 + v6);

  return _swift_deallocObject(v0, v6 + 40, v4);
}

uint64_t sub_1005C9C68(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AuthenticationSecurityRequest(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = *(void *)((char *)v1 + v6);
  uint64_t v12 = (uint64_t)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_10000A6F4;
  return sub_1005C283C(a1, v7, v8, v9, v10, v11, v12);
}

unint64_t sub_1005C9DAC()
{
  unint64_t result = qword_10096B820;
  if (!qword_10096B820)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_10096B820);
  }
  return result;
}

uint64_t sub_1005C9DEC()
{
  sub_100250CC4(*(void *)(v0 + 24), *(void *)(v0 + 32));
  sub_10024D338(v0 + 40);

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1005C9E34()
{
  return sub_1005C7354(v0[2], v0[3], v0[4], (uint64_t)(v0 + 5));
}

uint64_t sub_1005C9E44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005C9E54()
{
  return swift_release();
}

void sub_1005C9E60()
{
  sub_1005C8F80(*(unsigned int *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

id sub_1005C9E90(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a4;
  uint64_t v32 = a1;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v31 - v12;
  v4[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationPairingKeySession_requestArmingUI] = 0;
  v4[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationPairingKeySession_armingUITransportType] = 3;
  uint64_t v33 = a3;
  sub_100278C8C(a3, (uint64_t)v36);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v34 = a2;
  v14(v13, (uint64_t)a2, v7);
  type metadata accessor for SDAuthenticationAKSPairingSession();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksSession) = 0;
  uint64_t v16 = self;
  uint64_t v17 = v4;
  id result = [v16 sharedManager];
  if (result)
  {
    *(void *)(v15 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_aksManager) = result;
    *(unsigned char *)(v15 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_role) = 1;
    sub_1002AF688(v36, v15 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_peerDevice);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v15 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_sessionID, v13, v7);
    uint64_t v19 = v31;
    *(void *)(v15 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationAKSPairingSession_type) = v31;
    *(void *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAuthenticationPairingKeySession_aksPairingSession] = v15;

    uint64_t v20 = v34;
    v14(v11, (uint64_t)v34, v7);
    uint64_t v21 = &v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    *(_OWORD *)uint64_t v21 = 0u;
    *((_OWORD *)v21 + 1) = 0u;
    *((void *)v21 + 4) = 0;
    char v22 = &v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
    *(_OWORD *)char v22 = 0u;
    *((_OWORD *)v22 + 1) = 0u;
    *((void *)v22 + 4) = 0;
    *(void *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_responseTimer] = 0;
    uint64_t v23 = v32;
    *(void *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue] = v32;
    v14(&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_sessionID], (uint64_t)v11, v7);
    *(void *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type] = v19;
    uint64_t v24 = (objc_class *)type metadata accessor for SDAuthenticationSession();
    v35.receiver = v17;
    v35.super_class = v24;
    id v25 = v23;
    id v26 = [super init];
    unint64_t v27 = *(void (**)(char *, uint64_t))(v8 + 8);
    v27(v11, v7);
    uint64_t v28 = v33;
    sub_100278C8C(v33, (uint64_t)v36);
    uint64_t v29 = (uint64_t)v26 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
    swift_beginAccess();
    id v30 = v26;
    sub_1003610D8((uint64_t)v36, v29);
    swift_endAccess();

    sub_10024D338(v28);
    v27(v20, v7);
    return v30;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005CA208()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1005CA248()
{
  return sub_1005C995C(*(void **)(v0 + 16), *(_DWORD *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

id sub_1005CA258()
{
  sub_100508854();
  if (qword_10096A028 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = sub_10000B47C(v1, (uint64_t)qword_10097A510);
  uint64_t v3 = v0;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.info.getter();
  if (!os_log_type_enabled(v4, v5))
  {

    goto LABEL_11;
  }
  v38[1] = v2;
  uint64_t v6 = swift_slowAlloc();
  v39[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v6 = 136315394;
  uint64_t v7 = UUID.uuidString.getter();
  v40[0] = sub_100254634(v7, v8, v39);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();

  swift_bridgeObjectRelease();
  *(_WORD *)(v6 + 12) = 2080;
  uint64_t v9 = (uint64_t)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
  swift_beginAccess();
  sub_10024A330(v9, (uint64_t)v40, &qword_10097BB50);
  uint64_t v10 = v41;
  if (!v41)
  {
    sub_10000A7E8((uint64_t)v40, &qword_10097BB50);
LABEL_9:
    v40[0] = 0;
    v40[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease();
    unint64_t v18 = 0x80000001007B7770;
    uint64_t v16 = 0xD000000000000015;
    goto LABEL_10;
  }
  uint64_t v11 = v42;
  uint64_t v12 = sub_10026BB6C(v40, v41);
  v38[0] = v38;
  uint64_t v13 = *(void *)(v10 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v15);
  sub_10000A7E8((uint64_t)v40, &qword_10097BB50);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  unint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v10);
  if (!v18) {
    goto LABEL_9;
  }
LABEL_10:
  v40[0] = sub_100254634(v16, v18, v39);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();

  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v4, v5, "Setting pairing ID: %s for device: %s", (uint8_t *)v6, 0x16u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

LABEL_11:
  id result = [self sharedManager];
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v20 = result;
  UUID.uuidString.getter();
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v22 = (uint64_t)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
  swift_beginAccess();
  sub_10024A330(v22, (uint64_t)v40, &qword_10097BB50);
  uint64_t v23 = v41;
  if (!v41)
  {
    sub_10000A7E8((uint64_t)v40, &qword_10097BB50);
    goto LABEL_16;
  }
  uint64_t v24 = v42;
  id v25 = sub_10026BB6C(v40, v41);
  uint64_t v26 = *(void *)(v23 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)v38 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v26 + 16))(v28);
  sub_10000A7E8((uint64_t)v40, &qword_10097BB50);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
  uint64_t v30 = v29;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v23);
  if (!v30)
  {
LABEL_16:
    NSString v31 = 0;
    goto LABEL_17;
  }
  NSString v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_17:
  [v20 setPairingID:v21 forWatchID:v31, v38[0]];

  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v34 = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Pairing enabled", v34, 2u);
    swift_slowDealloc();
  }

  if (*(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type] != 8)
  {
    if (qword_10096A198 != -1) {
      swift_once();
    }
    if (qword_100994D10) {
      sub_1006CD9D4();
    }
  }
  uint64_t v35 = (uint64_t)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess();
  sub_10024A330(v35, (uint64_t)v40, &qword_100978040);
  if (!v41) {
    return (id)sub_10000A7E8((uint64_t)v40, &qword_100978040);
  }
  sub_100278C8C((uint64_t)v40, (uint64_t)v39);
  sub_10000A7E8((uint64_t)v40, &qword_100978040);
  os_log_type_t v36 = (char *)*sub_10026BB6C(v39, v39[3]);
  uint64_t v37 = v3;
  sub_1004EA2EC(v37, v36);

  return (id)sub_10024D338((uint64_t)v39);
}

uint64_t sub_1005CA94C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097A580);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097A580);
  if (qword_100969CA0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994630);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t type metadata accessor for SDContactChangeHistoryEvent()
{
  return self;
}

uint64_t type metadata accessor for SDContactChangeHistoryDropEverythingEvent()
{
  return self;
}

void sub_1005CAA5C()
{
}

uint64_t type metadata accessor for SDContactChangeHistoryAddEvent()
{
  return self;
}

uint64_t sub_1005CAA88()
{
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for SDContactChangeHistoryDeleteEvent()
{
  return self;
}

uint64_t type metadata accessor for SDContactChangeHistoryUpdateEvent()
{
  return self;
}

void *sub_1005CAAD8(uint64_t a1, unint64_t a2)
{
  id v4 = [objc_allocWithZone((Class)CNChangeHistoryFetchRequest) init];
  if (a2 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
  }
  [v4 setStartingToken:isa];

  [v4 setShouldUnifyResults:1];
  [v4 setIncludeGroupChanges:0];
  if (qword_100969F98 != -1) {
    swift_once();
  }
  sub_10000A844(&qword_100972450);
  Class v6 = Array._bridgeToObjectiveC()().super.isa;
  [v4 setAdditionalContactKeyDescriptors:v6];

  uint64_t v7 = sub_1005CB19C((uint64_t)v4);
  if (v2) {
    return (void *)v8;
  }
  else {
    return v7;
  }
}

uint64_t sub_1005CAC30(uint64_t a1, unint64_t a2)
{
  if (qword_100969FA0 != -1) {
    swift_once();
  }
  id v5 = objc_allocWithZone((Class)CNContactFetchRequest);
  swift_bridgeObjectRetain();
  sub_10000A844(&qword_100972450);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v7 = [v5 initWithKeysToFetch:isa];

  uint64_t v8 = self;
  sub_10000A844(&qword_10096B500);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10076E7A0;
  *(void *)(v9 + 32) = a1;
  *(void *)(v9 + 40) = a2;
  swift_bridgeObjectRetain();
  Class v10 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v8 predicateForContactsWithIdentifiers:v10];

  [v7 setPredicate:v11];
  uint64_t v28 = 0;
  uint64_t v12 = *(void **)(v2 + 32);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = &v28;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = sub_1005CB938;
  v14[3] = v13;
  aBlock[4] = sub_1005CB984;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1005CB140;
  aBlock[3] = &unk_1008E0D38;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned int v16 = [v12 enumerateContactsWithFetchRequest:v7 error:aBlock usingBlock:v15];
  _Block_release(v15);
  id v17 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_7;
  }
  if (v16)
  {

    goto LABEL_10;
  }
  _convertNSErrorToError(_:)();

  swift_willThrow();
  if (qword_10096A030 != -1) {
    goto LABEL_12;
  }
LABEL_7:
  uint64_t v19 = type metadata accessor for Logger();
  sub_10000B47C(v19, (uint64_t)qword_10097A580);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    aBlock[0] = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315394;
    swift_bridgeObjectRetain();
    sub_100254634(a1, a2, (uint64_t *)aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v23 = Error.localizedDescription.getter();
    sub_100254634(v23, v24, (uint64_t *)aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Failed to find contact with contact identifier %s, error: %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
LABEL_10:
  uint64_t v25 = v28;
  swift_release();
  return v25;
}

void sub_1005CB140(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

void *sub_1005CB19C(uint64_t a1)
{
  id v3 = *(void **)(v1 + 32);
  id v16 = 0;
  id v4 = sub_1001AC42C(a1, v3, &v16);
  id v5 = v4;
  if (v16)
  {
    id v6 = v16;
    swift_willThrow();
  }
  else if (v4)
  {
    id v7 = [(SDContactFetchResult *)v4 events];
    sub_1005CB4A0();
    unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v9 = [(SDContactFetchResult *)v5 currentHistoryToken];
    static Data._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v2 = sub_1005CB4E0(v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_10096A030 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000B47C(v11, (uint64_t)qword_10097A580);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Fetch result should not be nil since no error was reported", v14, 2u);
      swift_slowDealloc();
    }

    sub_1005CB44C();
    swift_allocError();
    *uint64_t v15 = 104;
    swift_willThrow();
  }
  return v2;
}

uint64_t type metadata accessor for SDContactStore()
{
  return self;
}

uint64_t sub_1005CB3E0()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1001B3D7C(v0);

  if (!v1) {
    return 0;
  }
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

unint64_t sub_1005CB44C()
{
  unint64_t result = qword_10097A990;
  if (!qword_10097A990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097A990);
  }
  return result;
}

unint64_t sub_1005CB4A0()
{
  unint64_t result = qword_10097A998;
  if (!qword_10097A998)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10097A998);
  }
  return result;
}

void *sub_1005CB4E0(unint64_t a1)
{
  unint64_t v27 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = (uint64_t)result;
    if (result) {
      goto LABEL_3;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  unint64_t result = (void *)swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_31;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    id v5 = &NSCalendarIdentifierGregorian_ptr;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v4 + 32);
      id v7 = v6;
      self;
      if (swift_dynamicCastObjCClass()) {
        break;
      }
      self;
      unint64_t v8 = (void *)swift_dynamicCastObjCClass();
      if (v8)
      {
        id v9 = [v8 contact];
        type metadata accessor for SDContactChangeHistoryAddEvent();
        goto LABEL_15;
      }
      self;
      uint64_t v10 = swift_dynamicCastObjCClass();
      if (v10)
      {
        uint64_t v11 = (void *)v10;
        uint64_t v12 = v5;
        id v13 = v7;
        id v14 = [v11 contactIdentifier];
        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v17 = v16;

        type metadata accessor for SDContactChangeHistoryDeleteEvent();
        uint64_t v18 = swift_allocObject();
        *(void *)(v18 + 16) = v15;
        *(void *)(v18 + 24) = v17;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        id v5 = v12;
        goto LABEL_7;
      }
      self;
      uint64_t v19 = (void *)swift_dynamicCastObjCClass();
      if (v19)
      {
        id v9 = [v19 contact];
        type metadata accessor for SDContactChangeHistoryUpdateEvent();
LABEL_15:
        *(void *)(swift_allocObject() + 16) = v9;
LABEL_16:
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        goto LABEL_6;
      }
      if (qword_10096A030 != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      sub_10000B47C(v20, (uint64_t)qword_10097A580);
      id v7 = v7;
      os_log_type_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = 136315138;
        swift_getObjectType();
        uint64_t v24 = _typeName(_:qualified:)();
        *(void *)(v23 + 4) = sub_100254634(v24, v25, &v26);

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "Ignore event %s", (uint8_t *)v23, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        goto LABEL_7;
      }

LABEL_6:
LABEL_7:
      if (v2 == ++v4)
      {
        swift_bridgeObjectRelease();
        return (void *)v27;
      }
    }
    type metadata accessor for SDContactChangeHistoryDropEverythingEvent();
    swift_allocObject();
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005CB928()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1005CB938(void *a1, unsigned char *a2)
{
  uint64_t v4 = *(void ***)(v2 + 16);
  id v5 = *v4;
  *uint64_t v4 = a1;
  id v6 = a1;

  *a2 = 1;
}

uint64_t sub_1005CB974()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005CB984()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1005CB9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005CB9BC()
{
  return swift_release();
}

uint64_t _s14descr1008C9AB9V11AskResponseVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 96);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 88);
    return sub_100250CC4(v4, v3);
  }
  return result;
}

uint64_t _s14descr1008C9AB9V11AskResponseVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  unint64_t v8 = (uint64_t *)(a2 + 88);
  unint64_t v9 = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 88) = *(_OWORD *)v8;
  }
  else
  {
    uint64_t v10 = *v8;
    sub_10025ADCC(*v8, v9);
    *(void *)(a1 + 88) = v10;
    *(void *)(a1 + 96) = v9;
  }
  return a1;
}

uint64_t _s14descr1008C9AB9V11AskResponseVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t *)(a2 + 88);
  unint64_t v5 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_10025ADCC(*v4, v5);
      uint64_t v8 = *(void *)(a1 + 88);
      unint64_t v9 = *(void *)(a1 + 96);
      *(void *)(a1 + 88) = v7;
      *(void *)(a1 + 96) = v5;
      sub_100250CC4(v8, v9);
      return a1;
    }
    sub_10026F904(a1 + 88);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  sub_10025ADCC(*v4, v5);
  *(void *)(a1 + 88) = v6;
  *(void *)(a1 + 96) = v5;
  return a1;
}

__n128 _s14descr1008C9AB9V11AskResponseVwtk(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t _s14descr1008C9AB9V11AskResponseVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  unint64_t v9 = (void *)(a2 + 88);
  unint64_t v10 = *(void *)(a1 + 96);
  if (v10 >> 60 != 15)
  {
    unint64_t v11 = *(void *)(a2 + 96);
    if (v11 >> 60 != 15)
    {
      uint64_t v12 = *(void *)(a1 + 88);
      *(void *)(a1 + 88) = *v9;
      *(void *)(a1 + 96) = v11;
      sub_100250CC4(v12, v10);
      return a1;
    }
    sub_10026F904(a1 + 88);
  }
  *(_OWORD *)(a1 + 88) = *(_OWORD *)v9;
  return a1;
}

uint64_t _s14descr1008C9AB9V11AskResponseVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr1008C9AB9V11AskResponseVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s14descr1008C9AB9V11AskResponseVMa()
{
  return &_s14descr1008C9AB9V11AskResponseVN;
}

uint64_t *sub_1005CBE0C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for SFAirDrop.TransferIdentifier();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_10000A844((uint64_t *)&unk_10096DFB0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = (char *)a1 + v11;
    id v13 = (char *)a2 + v11;
    uint64_t v14 = type metadata accessor for SFAirDrop.TransferType();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_10000A844(&qword_10096DFA8);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v17 = a3[6];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    unint64_t v20 = *((void *)v19 + 1);
    if (v20 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    }
    else
    {
      uint64_t v21 = *(void *)v19;
      sub_10025ADCC(*(void *)v19, *((void *)v19 + 1));
      *(void *)uint64_t v18 = v21;
      *((void *)v18 + 1) = v20;
    }
    uint64_t v22 = a3[7];
    uint64_t v23 = a3[8];
    uint64_t v24 = (uint64_t *)((char *)a1 + v22);
    unint64_t v25 = (uint64_t *)((char *)a2 + v22);
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    unint64_t v27 = (uint64_t *)((char *)a1 + v23);
    uint64_t v28 = (uint64_t *)((char *)a2 + v23);
    uint64_t v58 = v28[1];
    *unint64_t v27 = *v28;
    v27[1] = v58;
    uint64_t v29 = a3[9];
    uint64_t v30 = a3[10];
    NSString v31 = (uint64_t *)((char *)a1 + v29);
    uint64_t v32 = (uint64_t *)((char *)a2 + v29);
    uint64_t v33 = v32[1];
    *NSString v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = (uint64_t *)((char *)a1 + v30);
    uint64_t v35 = (uint64_t *)((char *)a2 + v30);
    uint64_t v36 = v35[1];
    void *v34 = *v35;
    v34[1] = v36;
    uint64_t v37 = a3[12];
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)a1 + v37) = *(uint64_t *)((char *)a2 + v37);
    uint64_t v38 = a3[13];
    uint64_t v39 = a3[14];
    uint64_t v40 = (uint64_t *)((char *)a1 + v38);
    uint64_t v41 = (uint64_t *)((char *)a2 + v38);
    uint64_t v42 = v41[1];
    *uint64_t v40 = *v41;
    v40[1] = v42;
    uint64_t v57 = (char *)a1 + v39;
    uint64_t v43 = (uint64_t *)((char *)a2 + v39);
    unint64_t v44 = *(uint64_t *)((char *)a2 + v39 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v44 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v57 = *(_OWORD *)v43;
    }
    else
    {
      uint64_t v45 = *v43;
      sub_10025ADCC(*v43, v44);
      *(void *)uint64_t v57 = v45;
      *((void *)v57 + 1) = v44;
    }
    uint64_t v46 = a3[15];
    uint64_t v47 = (char *)a1 + v46;
    unint64_t v48 = (char *)a2 + v46;
    unint64_t v49 = *((void *)v48 + 1);
    if (v49 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
    }
    else
    {
      uint64_t v50 = *(void *)v48;
      sub_10025ADCC(*(void *)v48, *((void *)v48 + 1));
      *(void *)uint64_t v47 = v50;
      *((void *)v47 + 1) = v49;
    }
    uint64_t v51 = a3[17];
    *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
    uint64_t v52 = (char *)a1 + v51;
    Swift::String v53 = (uint64_t *)((char *)a2 + v51);
    unint64_t v54 = *(uint64_t *)((char *)a2 + v51 + 8);
    if (v54 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
    }
    else
    {
      uint64_t v55 = *v53;
      sub_10025ADCC(*v53, v54);
      *(void *)uint64_t v52 = v55;
      *((void *)v52 + 1) = v54;
    }
  }
  return a1;
}

uint64_t sub_1005CC224(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = type metadata accessor for SFAirDrop.TransferType();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v9 = (uint64_t *)(a1 + a2[6]);
  unint64_t v10 = v9[1];
  if (v10 >> 60 != 15) {
    sub_100250CC4(*v9, v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v12 = (uint64_t *)(a1 + a2[14]);
  unint64_t v13 = v12[1];
  if (v13 >> 60 != 15) {
    uint64_t result = sub_100250CC4(*v12, v13);
  }
  uint64_t v14 = (uint64_t *)(a1 + a2[15]);
  unint64_t v15 = v14[1];
  if (v15 >> 60 != 15) {
    uint64_t result = sub_100250CC4(*v14, v15);
  }
  uint64_t v16 = (uint64_t *)(a1 + a2[17]);
  unint64_t v17 = v16[1];
  if (v17 >> 60 != 15)
  {
    uint64_t v18 = *v16;
    return sub_100250CC4(v18, v17);
  }
  return result;
}

char *sub_1005CC478(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10000A844((uint64_t *)&unk_10096DFB0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  unint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for SFAirDrop.TransferType();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_10000A844(&qword_10096DFA8);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  unint64_t v17 = &a2[v15];
  unint64_t v18 = *((void *)v17 + 1);
  if (v18 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  }
  else
  {
    uint64_t v19 = *(void *)v17;
    sub_10025ADCC(*(void *)v17, *((void *)v17 + 1));
    *(void *)uint64_t v16 = v19;
    *((void *)v16 + 1) = v18;
  }
  uint64_t v20 = a3[7];
  uint64_t v21 = a3[8];
  uint64_t v22 = &a1[v20];
  uint64_t v23 = &a2[v20];
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = v24;
  unint64_t v25 = &a1[v21];
  uint64_t v26 = &a2[v21];
  uint64_t v27 = *((void *)v26 + 1);
  *(void *)unint64_t v25 = *(void *)v26;
  *((void *)v25 + 1) = v27;
  uint64_t v28 = a3[9];
  uint64_t v29 = a3[10];
  uint64_t v30 = &a1[v28];
  NSString v31 = &a2[v28];
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = *(void *)v31;
  *((void *)v30 + 1) = v32;
  uint64_t v33 = &a1[v29];
  uint64_t v34 = &a2[v29];
  uint64_t v35 = *((void *)v34 + 1);
  *(void *)uint64_t v33 = *(void *)v34;
  *((void *)v33 + 1) = v35;
  uint64_t v36 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  *(void *)&a1[v36] = *(void *)&a2[v36];
  uint64_t v37 = a3[13];
  uint64_t v38 = a3[14];
  unint64_t v56 = a3;
  uint64_t v39 = &a1[v37];
  uint64_t v40 = &a2[v37];
  uint64_t v41 = *((void *)v40 + 1);
  *(void *)uint64_t v39 = *(void *)v40;
  *((void *)v39 + 1) = v41;
  uint64_t v57 = &a1[v38];
  uint64_t v42 = (uint64_t *)&a2[v38];
  unint64_t v43 = *(void *)&a2[v38 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v43 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v57 = *(_OWORD *)v42;
  }
  else
  {
    uint64_t v44 = *v42;
    sub_10025ADCC(*v42, v43);
    *(void *)uint64_t v57 = v44;
    *((void *)v57 + 1) = v43;
  }
  uint64_t v45 = v56[15];
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  unint64_t v48 = *((void *)v47 + 1);
  if (v48 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  }
  else
  {
    uint64_t v49 = *(void *)v47;
    sub_10025ADCC(*(void *)v47, *((void *)v47 + 1));
    *(void *)uint64_t v46 = v49;
    *((void *)v46 + 1) = v48;
  }
  uint64_t v50 = v56[17];
  a1[v56[16]] = a2[v56[16]];
  uint64_t v51 = &a1[v50];
  uint64_t v52 = (uint64_t *)&a2[v50];
  unint64_t v53 = *(void *)&a2[v50 + 8];
  if (v53 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
  }
  else
  {
    uint64_t v54 = *v52;
    sub_10025ADCC(*v52, v53);
    *(void *)uint64_t v51 = v54;
    *((void *)v51 + 1) = v53;
  }
  return a1;
}

char *sub_1005CC844(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_10000A844((uint64_t *)&unk_10096DFB0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for SFAirDrop.TransferType();
  uint64_t v16 = *(void *)(v15 - 8);
  unint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_12:
    uint64_t v20 = sub_10000A844(&qword_10096DFA8);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_13:
  uint64_t v21 = a3[6];
  uint64_t v22 = (uint64_t *)&a1[v21];
  uint64_t v23 = (uint64_t *)&a2[v21];
  unint64_t v24 = *(void *)&a2[v21 + 8];
  if (*(void *)&a1[v21 + 8] >> 60 == 15)
  {
    if (v24 >> 60 != 15)
    {
      uint64_t v25 = *v23;
      sub_10025ADCC(v25, v24);
      *uint64_t v22 = v25;
      v22[1] = v24;
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v24 >> 60 == 15)
  {
    sub_10026F904((uint64_t)v22);
LABEL_18:
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    goto LABEL_20;
  }
  uint64_t v26 = *v23;
  sub_10025ADCC(v26, v24);
  uint64_t v27 = *v22;
  unint64_t v28 = v22[1];
  *uint64_t v22 = v26;
  v22[1] = v24;
  sub_100250CC4(v27, v28);
LABEL_20:
  uint64_t v29 = a3[7];
  uint64_t v30 = &a1[v29];
  NSString v31 = &a2[v29];
  *(void *)uint64_t v30 = *(void *)v31;
  *((void *)v30 + 1) = *((void *)v31 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[8];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  *(void *)uint64_t v33 = *(void *)v34;
  *((void *)v33 + 1) = *((void *)v34 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[9];
  uint64_t v36 = &a1[v35];
  uint64_t v37 = &a2[v35];
  *(void *)uint64_t v36 = *(void *)v37;
  *((void *)v36 + 1) = *((void *)v37 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[10];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  *(void *)uint64_t v39 = *(void *)v40;
  *((void *)v39 + 1) = *((void *)v40 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = a3[13];
  uint64_t v42 = &a1[v41];
  unint64_t v43 = &a2[v41];
  *(void *)uint64_t v42 = *(void *)v43;
  *((void *)v42 + 1) = *((void *)v43 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[14];
  uint64_t v45 = (uint64_t *)&a1[v44];
  uint64_t v46 = (uint64_t *)&a2[v44];
  unint64_t v47 = *(void *)&a2[v44 + 8];
  if (*(void *)&a1[v44 + 8] >> 60 == 15)
  {
    if (v47 >> 60 != 15)
    {
      uint64_t v48 = *v46;
      sub_10025ADCC(v48, v47);
      *uint64_t v45 = v48;
      v45[1] = v47;
      goto LABEL_27;
    }
    goto LABEL_25;
  }
  if (v47 >> 60 == 15)
  {
    sub_10026F904((uint64_t)v45);
LABEL_25:
    *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
    goto LABEL_27;
  }
  uint64_t v49 = *v46;
  sub_10025ADCC(v49, v47);
  uint64_t v50 = *v45;
  unint64_t v51 = v45[1];
  *uint64_t v45 = v49;
  v45[1] = v47;
  sub_100250CC4(v50, v51);
LABEL_27:
  uint64_t v52 = a3[15];
  unint64_t v53 = (uint64_t *)&a1[v52];
  uint64_t v54 = (uint64_t *)&a2[v52];
  unint64_t v55 = *(void *)&a2[v52 + 8];
  if (*(void *)&a1[v52 + 8] >> 60 == 15)
  {
    if (v55 >> 60 != 15)
    {
      uint64_t v56 = *v54;
      sub_10025ADCC(v56, v55);
      *unint64_t v53 = v56;
      v53[1] = v55;
      goto LABEL_34;
    }
    goto LABEL_32;
  }
  if (v55 >> 60 == 15)
  {
    sub_10026F904((uint64_t)v53);
LABEL_32:
    *(_OWORD *)unint64_t v53 = *(_OWORD *)v54;
    goto LABEL_34;
  }
  uint64_t v57 = *v54;
  sub_10025ADCC(v57, v55);
  uint64_t v58 = *v53;
  unint64_t v59 = v53[1];
  *unint64_t v53 = v57;
  v53[1] = v55;
  sub_100250CC4(v58, v59);
LABEL_34:
  a1[a3[16]] = a2[a3[16]];
  uint64_t v60 = a3[17];
  uint64_t v61 = (uint64_t *)&a1[v60];
  unint64_t v62 = (uint64_t *)&a2[v60];
  unint64_t v63 = *(void *)&a2[v60 + 8];
  if (*(void *)&a1[v60 + 8] >> 60 != 15)
  {
    if (v63 >> 60 != 15)
    {
      uint64_t v65 = *v62;
      sub_10025ADCC(v65, v63);
      uint64_t v66 = *v61;
      unint64_t v67 = v61[1];
      uint64_t *v61 = v65;
      v61[1] = v63;
      sub_100250CC4(v66, v67);
      return a1;
    }
    sub_10026F904((uint64_t)v61);
    goto LABEL_39;
  }
  if (v63 >> 60 == 15)
  {
LABEL_39:
    *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
    return a1;
  }
  uint64_t v64 = *v62;
  sub_10025ADCC(v64, v63);
  uint64_t *v61 = v64;
  v61[1] = v63;
  return a1;
}

char *sub_1005CCE34(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10000A844((uint64_t *)&unk_10096DFB0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for SFAirDrop.TransferType();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_10000A844(&qword_10096DFA8);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_OWORD *)&a1[v15] = *(_OWORD *)&a2[v15];
  uint64_t v16 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  *(_OWORD *)&a1[v16] = *(_OWORD *)&a2[v16];
  uint64_t v17 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  uint64_t v18 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  *(_OWORD *)&a1[v18] = *(_OWORD *)&a2[v18];
  uint64_t v19 = a3[15];
  *(_OWORD *)&a1[a3[14]] = *(_OWORD *)&a2[a3[14]];
  *(_OWORD *)&a1[v19] = *(_OWORD *)&a2[v19];
  uint64_t v20 = a3[17];
  a1[a3[16]] = a2[a3[16]];
  *(_OWORD *)&a1[v20] = *(_OWORD *)&a2[v20];
  return a1;
}

char *sub_1005CD0BC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_10000A844((uint64_t *)&unk_10096DFB0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for SFAirDrop.TransferType();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_12:
    uint64_t v20 = sub_10000A844(&qword_10096DFA8);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_13:
  uint64_t v21 = a3[6];
  uint64_t v22 = (uint64_t)&a1[v21];
  uint64_t v23 = &a2[v21];
  unint64_t v24 = *(void *)&a1[v21 + 8];
  if (v24 >> 60 == 15)
  {
LABEL_16:
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    goto LABEL_18;
  }
  unint64_t v25 = *((void *)v23 + 1);
  if (v25 >> 60 == 15)
  {
    sub_10026F904(v22);
    goto LABEL_16;
  }
  uint64_t v26 = *(void *)v22;
  *(void *)uint64_t v22 = *(void *)v23;
  *(void *)(v22 + 8) = v25;
  sub_100250CC4(v26, v24);
LABEL_18:
  uint64_t v27 = a3[7];
  unint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v31 = *(void *)v29;
  uint64_t v30 = *((void *)v29 + 1);
  *(void *)unint64_t v28 = v31;
  *((void *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[8];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v36 = *(void *)v34;
  uint64_t v35 = *((void *)v34 + 1);
  *(void *)uint64_t v33 = v36;
  *((void *)v33 + 1) = v35;
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[9];
  uint64_t v38 = &a1[v37];
  uint64_t v39 = &a2[v37];
  uint64_t v41 = *(void *)v39;
  uint64_t v40 = *((void *)v39 + 1);
  *(void *)uint64_t v38 = v41;
  *((void *)v38 + 1) = v40;
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[10];
  unint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  uint64_t v46 = *(void *)v44;
  uint64_t v45 = *((void *)v44 + 1);
  *(void *)unint64_t v43 = v46;
  *((void *)v43 + 1) = v45;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  swift_bridgeObjectRelease();
  uint64_t v47 = a3[13];
  uint64_t v48 = &a1[v47];
  uint64_t v49 = &a2[v47];
  uint64_t v51 = *(void *)v49;
  uint64_t v50 = *((void *)v49 + 1);
  *(void *)uint64_t v48 = v51;
  *((void *)v48 + 1) = v50;
  swift_bridgeObjectRelease();
  uint64_t v52 = a3[14];
  uint64_t v53 = (uint64_t)&a1[v52];
  uint64_t v54 = &a2[v52];
  unint64_t v55 = *(void *)&a1[v52 + 8];
  if (v55 >> 60 == 15)
  {
LABEL_21:
    *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
    goto LABEL_23;
  }
  unint64_t v56 = *((void *)v54 + 1);
  if (v56 >> 60 == 15)
  {
    sub_10026F904(v53);
    goto LABEL_21;
  }
  uint64_t v57 = *(void *)v53;
  *(void *)uint64_t v53 = *(void *)v54;
  *(void *)(v53 + 8) = v56;
  sub_100250CC4(v57, v55);
LABEL_23:
  uint64_t v58 = a3[15];
  uint64_t v59 = (uint64_t)&a1[v58];
  uint64_t v60 = &a2[v58];
  unint64_t v61 = *(void *)&a1[v58 + 8];
  if (v61 >> 60 == 15)
  {
LABEL_26:
    *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
    goto LABEL_28;
  }
  unint64_t v62 = *((void *)v60 + 1);
  if (v62 >> 60 == 15)
  {
    sub_10026F904(v59);
    goto LABEL_26;
  }
  uint64_t v63 = *(void *)v59;
  *(void *)uint64_t v59 = *(void *)v60;
  *(void *)(v59 + 8) = v62;
  sub_100250CC4(v63, v61);
LABEL_28:
  uint64_t v64 = a3[17];
  a1[a3[16]] = a2[a3[16]];
  uint64_t v65 = (uint64_t *)&a1[v64];
  uint64_t v66 = (uint64_t *)&a2[v64];
  unint64_t v67 = *(void *)&a1[v64 + 8];
  if (v67 >> 60 != 15)
  {
    unint64_t v68 = v66[1];
    if (v68 >> 60 != 15)
    {
      uint64_t v69 = *v65;
      *uint64_t v65 = *v66;
      v65[1] = v68;
      sub_100250CC4(v69, v67);
      return a1;
    }
    sub_10026F904((uint64_t)v65);
  }
  *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
  return a1;
}

uint64_t sub_1005CD588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005CD59C);
}

uint64_t sub_1005CD59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_10096DFB0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_10000A844(&qword_10096DFA8);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1005CD6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005CD6D0);
}

uint64_t sub_1005CD6D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_10000A844((uint64_t *)&unk_10096DFB0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_10000A844(&qword_10096DFA8);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t _s14descr1008C9AB9V10AskRequestVMa()
{
  uint64_t result = qword_10097AA10;
  if (!qword_10097AA10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005CD838()
{
  sub_1005CD978(319, (unint64_t *)&qword_100974CC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
  if (v0 <= 0x3F)
  {
    sub_1005CD978(319, (unint64_t *)&unk_10097AA20, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1005CD978(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_1005CD9CC(void (*a1)(uint64_t *__return_ptr, uint64_t, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    uint64_t v42 = _swiftEmptyArrayStorage;
    sub_100255668(0, v5, 0);
    uint64_t v6 = _swiftEmptyArrayStorage;
    uint64_t v8 = *(void *)(type metadata accessor for URL() - 8);
    uint64_t v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v30 = *(void *)(v8 + 72);
    while (1)
    {
      a1(&v33, v9, &v32);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v10 = v33;
      uint64_t v11 = v34;
      long long v12 = v35;
      long long v13 = v36;
      uint64_t v14 = v37;
      char v15 = v38;
      long long v16 = v39;
      char v17 = v40;
      unint64_t v19 = v6[2];
      unint64_t v18 = v6[3];
      char v20 = v41;
      uint64_t v42 = v6;
      if (v19 >= v18 >> 1)
      {
        long long v28 = v36;
        long long v29 = v35;
        long long v27 = v39;
        uint64_t v26 = v33;
        uint64_t v22 = v34;
        char v24 = v40;
        char v25 = v38;
        sub_100255668(v18 > 1, v19 + 1, 1);
        char v17 = v24;
        char v15 = v25;
        uint64_t v11 = v22;
        uint64_t v10 = v26;
        long long v16 = v27;
        long long v13 = v28;
        long long v12 = v29;
        uint64_t v6 = v42;
      }
      v6[2] = v19 + 1;
      uint64_t v21 = &v6[11 * v19];
      v21[4] = v10;
      v21[5] = v11;
      *((_OWORD *)v21 + 3) = v12;
      *((_OWORD *)v21 + 4) = v13;
      v21[10] = v14;
      *((unsigned char *)v21 + 88) = v15;
      *((_OWORD *)v21 + 6) = v16;
      *((unsigned char *)v21 + 112) = v17;
      *((unsigned char *)v21 + 113) = v20;
      v9 += v30;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_1005CDB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[17] = a8;
  v8[18] = v16;
  v8[15] = a6;
  v8[16] = a7;
  v8[13] = a4;
  v8[14] = a5;
  v8[11] = a2;
  v8[12] = a3;
  v8[10] = a1;
  type metadata accessor for SFAirDrop.TransferIdentifier();
  v8[19] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for SFAirDropSend.ItemMetadata();
  v8[20] = v9;
  v8[21] = *(void *)(v9 - 8);
  v8[22] = swift_task_alloc();
  v8[23] = swift_task_alloc();
  sub_10000A844(&qword_100970FC8);
  v8[24] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SFAirDrop.TransferType();
  v8[25] = v10;
  v8[26] = *(void *)(v10 - 8);
  v8[27] = swift_task_alloc();
  v8[28] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for URL();
  v8[29] = v11;
  v8[30] = *(void *)(v11 - 8);
  v8[31] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for SFSecurityScopedURL();
  v8[32] = v12;
  v8[33] = *(void *)(v12 - 8);
  v8[34] = swift_task_alloc();
  v8[35] = swift_task_alloc();
  v8[36] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for SFAirDropSend.Request();
  v8[37] = v13;
  v8[38] = *(void *)(v13 - 8);
  v8[39] = swift_task_alloc();
  v8[40] = swift_task_alloc();
  v8[41] = swift_task_alloc();
  return _swift_task_switch(sub_1005CDE8C, 0, 0);
}

uint64_t sub_1005CDE8C()
{
  uint64_t v206 = v0;
  unint64_t v2 = v0 + 15;
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[41];
  uint64_t v5 = v0[37];
  uint64_t v4 = v0[38];
  uint64_t v6 = v0[11];
  id v175 = sub_1004610EC();
  v0[42] = v175;
  v0[43] = v7;
  unint64_t v177 = v7;
  uint64_t v180 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v180(v3, v6, v5);
  uint64_t v183 = v0 + 15;
  uint64_t v8 = (void (**)(uint64_t, char *))(v4 + 8);
  uint64_t v9 = v0[41];
  uint64_t v10 = (char *)v0[37];
  v203 = v0;
  uint64_t v178 = v1;
  if (v1)
  {
    uint64_t v11 = *v2;
    uint64_t v12 = *v8;
    swift_bridgeObjectRetain();
    uint64_t v184 = v12;
    v12(v9, v10);
    uint64_t v13 = v11;
  }
  else
  {
    uint64_t v14 = SFAirDropSend.Request.urls.getter();
    uint64_t v184 = *v8;
    (*v8)(v9, v10);
    if (!v14)
    {
      uint64_t v10 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_26;
    }
    uint64_t v13 = v14;
  }
  uint64_t v15 = _swiftEmptyArrayStorage;
  v205[0] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v199 = *(void *)(v13 + 16);
  if (!v199)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v28 = v15[2];
    if (v28)
    {
      uint64_t v29 = v0[33];
      v197 = *(void (**)(uint64_t, char *, uint64_t))(v29 + 16);
      uint64_t v30 = (char *)v15 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
      uint64_t v190 = (void (**)(uint64_t, uint64_t))(v0[30] + 8);
      uint64_t v194 = *(void *)(v29 + 72);
      uint64_t v186 = (void (**)(uint64_t, uint64_t))(v29 + 8);
      swift_retain();
      uint64_t v10 = (char *)_swiftEmptyArrayStorage;
      do
      {
        uint64_t v31 = v0[34];
        uint64_t v32 = v0[31];
        uint64_t v33 = v0[32];
        uint64_t v34 = v0[29];
        v197(v31, v30, v33);
        SFSecurityScopedURL.url.getter();
        uint64_t v35 = URL.absoluteString.getter();
        uint64_t v37 = v36;
        (*v190)(v32, v34);
        (*v186)(v31, v33);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_100253208(0, *((void *)v10 + 2) + 1, 1, v10);
        }
        unint64_t v39 = *((void *)v10 + 2);
        unint64_t v38 = *((void *)v10 + 3);
        if (v39 >= v38 >> 1) {
          uint64_t v10 = sub_100253208((char *)(v38 > 1), v39 + 1, 1, v10);
        }
        *((void *)v10 + 2) = v39 + 1;
        char v40 = &v10[16 * v39];
        *((void *)v40 + 4) = v35;
        *((void *)v40 + 5) = v37;
        v30 += v194;
        --v28;
        unint64_t v0 = v203;
      }
      while (v28);
      swift_release_n();
    }
    else
    {
      swift_release();
      uint64_t v10 = (char *)_swiftEmptyArrayStorage;
    }
    unint64_t v2 = v183;
LABEL_26:
    v0[44] = v184;
    v0[45] = v10;
    if (qword_10096A038 == -1) {
      goto LABEL_27;
    }
    goto LABEL_88;
  }
  unint64_t v16 = 0;
  unint64_t v2 = (void *)v0[33];
  v193 = (void (**)(uint64_t, uint64_t))(v0[30] + 8);
  uint64_t v189 = (void (**)(char *, uint64_t, uint64_t))(v2 + 4);
  while (v16 < *(void *)(v13 + 16))
  {
    char v17 = v15;
    uint64_t v18 = v0[31];
    uint64_t v19 = v0[29];
    unint64_t v20 = (*((unsigned __int8 *)v2 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v2 + 80);
    uint64_t v10 = (char *)v2[9];
    uint64_t v21 = v13;
    ((void (*)(void, unint64_t, void))v2[2])(v0[36], v13 + v20 + (void)v10 * v16, v0[32]);
    SFSecurityScopedURL.url.getter();
    char v22 = URL.isFileURL.getter();
    (*v193)(v18, v19);
    if (v22)
    {
      ((void (*)(void, void))v2[1])(v0[36], v0[32]);
      uint64_t v15 = v17;
    }
    else
    {
      uint64_t v23 = *v189;
      (*v189)((char *)v0[35], v0[36], v0[32]);
      uint64_t v15 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100255688(0, v17[2] + 1, 1);
        uint64_t v15 = (void *)v205[0];
      }
      unint64_t v25 = v15[2];
      unint64_t v24 = v15[3];
      if (v25 >= v24 >> 1)
      {
        sub_100255688(v24 > 1, v25 + 1, 1);
        uint64_t v15 = (void *)v205[0];
      }
      unint64_t v0 = v203;
      uint64_t v26 = v203[35];
      uint64_t v27 = v203[32];
      v15[2] = v25 + 1;
      v23((char *)v15 + v20 + v25 * (void)v10, v26, v27);
      v205[0] = (uint64_t)v15;
    }
    ++v16;
    uint64_t v13 = v21;
    if (v199 == v16) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_88:
  swift_once();
LABEL_27:
  uint64_t v41 = type metadata accessor for Logger();
  v0[46] = sub_10000B47C(v41, (uint64_t)qword_10097A9A0);
  swift_bridgeObjectRetain_n();
  uint64_t v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = swift_slowAlloc();
    v205[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v44 = 134218499;
    v203[7] = *((void *)v10 + 2);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2160;
    v203[8] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v44 + 22) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v45 = Array.description.getter();
    unint64_t v47 = v46;
    swift_bridgeObjectRelease();
    v203[9] = sub_100254634(v45, v47, v205);
    unint64_t v0 = v203;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "Adding URL items (count=%ld) to request: %{private,mask.hash}s", (uint8_t *)v44, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    unint64_t v2 = v183;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v48 = v0 + 16;
  uint64_t v49 = v0[40];
  uint64_t v50 = v0[11];
  if (!v0[16])
  {
    uint64_t v52 = v0[39];
    uint64_t v53 = v0[37];
    v180(v0[40], v0[11], v53);
    v180(v52, v49, v53);
    if (v178)
    {
      v184(v0[39], (char *)v0[37]);
      uint64_t v48 = v2;
      goto LABEL_34;
    }
    uint64_t v98 = v0[39];
    uint64_t v97 = v0[40];
    uint64_t v99 = (char *)v0[37];
    uint64_t v54 = SFAirDropSend.Request.urls.getter();
    v184(v98, v99);
    v184(v97, v99);
    if (v54) {
      goto LABEL_35;
    }
    sub_100395764(0);
    uint64_t v100 = SFAirDropSend.Request.urlsMetadata.getter();
    if (v100)
    {
      uint64_t v101 = v100;
      int64_t v102 = *(void *)(v100 + 16);
      if (v102)
      {
        uint64_t v103 = v0[21];
        v205[0] = (uint64_t)_swiftEmptyArrayStorage;
        sub_100255668(0, v102, 0);
        uint64_t v104 = *(void (**)(void, void, void))(v103 + 16);
        v103 += 16;
        unint64_t v105 = v101 + ((*(unsigned __int8 *)(v103 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 64));
        uint64_t v174 = *(void *)(v103 + 56);
        uint64_t v176 = v104;
        id v106 = (void (**)(uint64_t, uint64_t))(v103 - 8);
        do
        {
          uint64_t v108 = v0[22];
          unint64_t v107 = v0[23];
          uint64_t v109 = v0[20];
          v176(v107, v105, v109);
          v176(v108, v107, v109);
          uint64_t v201 = SFAirDropSend.ItemMetadata.fileName.getter();
          uint64_t v195 = v110;
          uint64_t v111 = SFAirDropSend.ItemMetadata.fileType.getter();
          uint64_t v187 = v112;
          uint64_t v191 = v111;
          uint64_t v185 = SFAirDropSend.ItemMetadata.fileSubType.getter();
          uint64_t v182 = v113;
          uint64_t v181 = SFAirDropSend.ItemMetadata.fileSize.getter();
          uint64_t v114 = SFAirDropSend.ItemMetadata.fileBOMPath.getter();
          uint64_t v116 = v115;
          char v117 = SFAirDropSend.ItemMetadata.fileIsDirectory.getter();
          uint64_t v118 = *v106;
          (*v106)(v108, v109);
          v118(v107, v109);
          uint64_t v119 = v205[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100255668(0, *(void *)(v119 + 16) + 1, 1);
            uint64_t v119 = v205[0];
          }
          unint64_t v121 = *(void *)(v119 + 16);
          unint64_t v120 = *(void *)(v119 + 24);
          if (v121 >= v120 >> 1)
          {
            sub_100255668(v120 > 1, v121 + 1, 1);
            uint64_t v119 = v205[0];
          }
          *(void *)(v119 + 16) = v121 + 1;
          uint64_t v122 = v119 + 88 * v121;
          *(void *)(v122 + 32) = v201;
          *(void *)(v122 + 40) = v195;
          *(void *)(v122 + 48) = v191;
          *(void *)(v122 + 56) = v187;
          *(void *)(v122 + 64) = v185;
          *(void *)(v122 + 72) = v182;
          *(void *)(v122 + 80) = v181;
          *(unsigned char *)(v122 + 88) = 0;
          *(void *)(v122 + 96) = v114;
          *(void *)(v122 + 104) = v116;
          *(unsigned char *)(v122 + 112) = v117 & 1;
          v105 += v174;
          *(unsigned char *)(v122 + 113) = 0;
          --v102;
          unint64_t v0 = v203;
        }
        while (v102);
        swift_bridgeObjectRelease();
        swift_retain_n();
        swift_bridgeObjectRetain();
        uint64_t v151 = (void *)v119;
        uint64_t v152 = Logger.logObject.getter();
        os_log_type_t v153 = static os_log_type_t.default.getter();
        BOOL v154 = os_log_type_enabled(v152, v153);
        uint64_t v179 = v151;
        if (v154)
        {
          uint64_t v155 = swift_slowAlloc();
          v205[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v155 = 134218499;
          v203[3] = v151[2];
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release();
          *(_WORD *)(v155 + 12) = 2160;
          v203[4] = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v155 + 22) = 2081;
          swift_bridgeObjectRetain();
          uint64_t v156 = Array.description.getter();
          unint64_t v158 = v157;
          swift_release();
          v203[5] = sub_100254634(v156, v158, v205);
          unint64_t v0 = v203;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_release_n();
          _os_log_impl((void *)&_mh_execute_header, v152, v153, "Adding file info (count=%ld) to request: %{private,mask.hash}s", (uint8_t *)v155, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_release_n();
        }

        unint64_t v2 = v183;
LABEL_39:
        uint64_t v63 = v0;
        uint64_t v64 = v0[28];
        uint64_t v65 = v0[26];
        uint64_t v66 = v63[25];
        uint64_t v67 = SFAirDropSend.Request.itemPreviewData.getter();
        unint64_t v69 = v68;
        SFAirDropSend.Request.type.getter();
        char v70 = SFAirDrop.TransferType.isOnlyExchange.getter();
        (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v64, v66);
        if (v70)
        {
          uint64_t v198 = 0;
          uint64_t v71 = 0;
        }
        else
        {
          id v83 = [(id)v63[14] computerName];
          if (v83)
          {
            uint64_t v84 = v83;
            uint64_t v198 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v71 = v85;
          }
          else
          {
            uint64_t v198 = 0;
            uint64_t v71 = 0;
          }
        }
        sub_100278C78(v67, v69);
        sub_100278C78(v67, v69);
        id v123 = Logger.logObject.getter();
        os_log_type_t v124 = static os_log_type_t.default.getter();
        uint64_t v196 = v69;
        if (os_log_type_enabled(v123, v124))
        {
          unint64_t v125 = v69;
          uint64_t v126 = (uint8_t *)swift_slowAlloc();
          v205[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v126 = 136315138;
          if (v125 >> 60 == 15)
          {
            unint64_t v127 = 0x80000001007C3310;
            unint64_t v128 = 0xD000000000000016;
          }
          else
          {
            unint64_t v128 = Data.description.getter();
            unint64_t v127 = v129;
          }
          *(v2 - 13) = sub_100254634(v128, v127, v205);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100250CB0(v67, v125);
          sub_100250CB0(v67, v125);
          _os_log_impl((void *)&_mh_execute_header, v123, v124, "Adding preview data to request %s", v126, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_100250CB0(v67, v69);
          sub_100250CB0(v67, v69);
        }
        SFAirDropSend.Request.id.getter();
        SFAirDropSend.Request.type.getter();
        uint64_t v130 = SFAirDropSend.Request.requestSource.getter();
        uint64_t v132 = v131;
        if (!v71)
        {
          NSString v133 = String._bridgeToObjectiveC()();
          id v134 = (id)SFLocalizedStringForKey();

          if (!v134)
          {
LABEL_90:
            uint64_t v80 = swift_bridgeObjectRelease();
            __break(1u);
            return static SFSecurityScopedURL.withAccess<A>(to:body:)(v80, v81, v79, v82, v78);
          }
          uint64_t v198 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v71 = v135;
        }
        uint64_t v136 = v203;
        uint64_t v188 = v132;
        uint64_t v192 = v130;
        uint64_t v202 = v71;
        uint64_t v204 = v67;
        id v137 = [(id)v136[14] modelName];
        if (v137)
        {
          unint64_t v138 = v137;
          uint64_t v169 = v136[45];
          uint64_t v170 = v136[42];
          uint64_t v173 = (void (*)(uint64_t, uint64_t))v136[44];
          uint64_t v171 = v136[43];
          uint64_t v172 = v136[37];
          uint64_t v139 = v136[27];
          uint64_t v140 = v136[19];
          uint64_t v141 = v136[13];
          v168 = (void *)v136[14];
          uint64_t v142 = v136[11];
          uint64_t v143 = v136[12];
          uint64_t v144 = v136[10];
          uint64_t v145 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v147 = v146;

          uint64_t v148 = SFAirDropSend.Request.customPayload.getter();
          sub_1005D0F4C(v140, v139, v143, v141, v170, v171, v192, v188, v144, v198, v202, v145, v147, v169, v179, 0, 0, v204, v196,
            0,
            0xF000000000000000,
            0,
            v148,
            v149);

          v173(v142, v172);
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v96 = (uint64_t (*)(void))v136[1];
          goto LABEL_74;
        }
        swift_bridgeObjectRelease();
        __break(1u);
        goto LABEL_90;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v159 = Logger.logObject.getter();
      os_log_type_t v160 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v159, v160)) {
        goto LABEL_85;
      }
      uint64_t v161 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v161 = 0;
      uint64_t v162 = "Send request claims to provide file metadata but provides none";
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v159 = Logger.logObject.getter();
      os_log_type_t v160 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v159, v160))
      {
LABEL_85:
        uint64_t v163 = (char *)v0[37];
        uint64_t v164 = (void *)v0[14];
        uint64_t v165 = v0[11];

        uint64_t v166 = type metadata accessor for SFAirDropSend.Failure();
        sub_1005D7A14(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
        swift_allocError();
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v166 - 8) + 104))(v167, enum case for SFAirDropSend.Failure.badRequest(_:), v166);
        swift_willThrow();
        sub_100250CB0((uint64_t)v175, v177);

        v184(v165, v163);
        goto LABEL_50;
      }
      uint64_t v161 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v161 = 0;
      uint64_t v162 = "Send request does not provide either file URLs or file metadata";
    }
    _os_log_impl((void *)&_mh_execute_header, v159, v160, v162, v161, 2u);
    unint64_t v0 = v203;
    swift_slowDealloc();
    goto LABEL_85;
  }
  uint64_t v51 = v203[37];
  swift_bridgeObjectRetain();
  unint64_t v0 = v203;
  v180(v49, v50, v51);
  swift_bridgeObjectRelease();
LABEL_34:
  uint64_t v54 = *v48;
  v184(v0[40], (char *)v0[37]);
LABEL_35:
  v0[47] = v54;
  unint64_t v55 = v0;
  uint64_t v56 = v0[28];
  uint64_t v57 = v0[26];
  uint64_t v58 = v55[25];
  SFAirDropSend.Request.type.getter();
  char v59 = SFAirDrop.TransferType.isOnlyExchange.getter();
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v58);
  if (v59)
  {
    sub_100395764(v55[16]);
    swift_bridgeObjectRelease();
    uint64_t v60 = Logger.logObject.getter();
    os_log_type_t v61 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v60, v61))
    {
      unint64_t v62 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v62 = 0;
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "Adding empty file info to request for exchange only send request", v62, 2u);
      swift_slowDealloc();
    }

    uint64_t v179 = _swiftEmptyArrayStorage;
    unint64_t v0 = v203;
    goto LABEL_39;
  }
  if (*(void *)(v54 + 16))
  {
    uint64_t v72 = v203[32];
    uint64_t v73 = v203[33];
    uint64_t v74 = v203[24];
    uint64_t v75 = v203[18];
    long long v200 = *((_OWORD *)v203 + 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v73 + 16))(v74, v54 + ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80)), v72);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v73 + 56))(v74, 0, 1, v72);
    sub_10000A7E8(v74, &qword_100970FC8);
    uint64_t v76 = swift_task_alloc();
    v203[48] = v76;
    *(_OWORD *)(v76 + 16) = v200;
    *(void *)(v76 + 32) = v75;
    unint64_t v77 = (void *)swift_task_alloc();
    v203[49] = v77;
    uint64_t v78 = sub_10000A844(&qword_10097AA88);
    *unint64_t v77 = v203;
    v77[1] = sub_1005CF498;
    unint64_t v79 = &unk_10097AB20;
    uint64_t v80 = (uint64_t)(v203 + 6);
    uint64_t v81 = v54;
    uint64_t v82 = v76;
    return static SFSecurityScopedURL.withAccess<A>(to:body:)(v80, v81, v79, v82, v78);
  }
  uint64_t v86 = v203[24];
  uint64_t v87 = v203[16];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v203[33] + 56))(v86, 1, 1, v203[32]);
  sub_100395764(v87);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000A7E8(v86, &qword_100970FC8);
  uint64_t v88 = Logger.logObject.getter();
  os_log_type_t v89 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v88, v89))
  {
    NSString v90 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v90 = 0;
    _os_log_impl((void *)&_mh_execute_header, v88, v89, "Send request claims to provide URLs but provides none", v90, 2u);
    swift_slowDealloc();
  }
  unint64_t v0 = v203;
  uint64_t v91 = (char *)v203[37];
  os_log_type_t v92 = (void *)v203[14];
  uint64_t v93 = v203[11];

  uint64_t v94 = type metadata accessor for SFAirDropSend.Failure();
  sub_1005D7A14(&qword_100974F50, (void (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v94 - 8) + 104))(v95, enum case for SFAirDropSend.Failure.badRequest(_:), v94);
  swift_willThrow();
  sub_100250CB0((uint64_t)v175, v177);

  v184(v93, v91);
LABEL_50:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v96 = (uint64_t (*)(void))v0[1];
LABEL_74:
  return v96();
}

uint64_t sub_1005CF498()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 400) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_100395764(*(void *)(v2 + 128));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v3 = sub_1005CFAFC;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 128);
    swift_bridgeObjectRelease();
    sub_100395764(v4);
    swift_task_dealloc();
    uint64_t v3 = sub_1005CF640;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1005CF640()
{
  uint64_t v54 = v0;
  uint64_t v1 = *(void **)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v5 = SFAirDropSend.Request.itemPreviewData.getter();
  unint64_t v7 = v6;
  SFAirDropSend.Request.type.getter();
  char v8 = SFAirDrop.TransferType.isOnlyExchange.getter();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  if ((v8 & 1) != 0
    || (id v9 = [*(id *)(v0 + 112) computerName]) == 0)
  {
    uint64_t v50 = 0;
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v10 = v9;
    uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;
  }
  sub_100278C78(v5, v7);
  sub_100278C78(v5, v7);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  uint64_t v51 = v1;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315138;
    if (v7 >> 60 == 15)
    {
      unint64_t v16 = 0x80000001007C3310;
      unint64_t v17 = 0xD000000000000016;
    }
    else
    {
      unint64_t v17 = Data.description.getter();
      unint64_t v16 = v18;
    }
    *(void *)(v0 + 16) = sub_100254634(v17, v16, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100250CB0(v5, v7);
    sub_100250CB0(v5, v7);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Adding preview data to request %s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100250CB0(v5, v7);
    sub_100250CB0(v5, v7);
  }
  SFAirDropSend.Request.id.getter();
  SFAirDropSend.Request.type.getter();
  uint64_t v19 = SFAirDropSend.Request.requestSource.getter();
  uint64_t v21 = v20;
  if (!v12)
  {
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = (id)SFLocalizedStringForKey();

    if (!v23)
    {
LABEL_19:
      uint64_t result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }
    uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v24;
  }
  uint64_t v46 = v21;
  uint64_t v47 = v19;
  uint64_t v52 = v12;
  uint64_t v48 = v7;
  uint64_t v49 = v5;
  id v25 = [*(id *)(v0 + 112) modelName];
  if (!v25)
  {
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v26 = v25;
  uint64_t v41 = *(void *)(v0 + 360);
  uint64_t v42 = *(void *)(v0 + 336);
  uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v0 + 352);
  uint64_t v43 = *(void *)(v0 + 344);
  uint64_t v44 = *(void *)(v0 + 296);
  uint64_t v27 = *(void *)(v0 + 216);
  uint64_t v28 = *(void *)(v0 + 152);
  uint64_t v29 = *(void *)(v0 + 104);
  char v40 = *(void **)(v0 + 112);
  uint64_t v30 = *(void *)(v0 + 88);
  uint64_t v31 = *(void *)(v0 + 96);
  uint64_t v32 = *(void *)(v0 + 80);
  uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v35 = v34;

  uint64_t v36 = SFAirDropSend.Request.customPayload.getter();
  sub_1005D0F4C(v28, v27, v31, v29, v42, v43, v47, v46, v32, v50, v52, v33, v35, v41, v51, 0, 0, v49, v48,
    0,
    0xF000000000000000,
    0,
    v36,
    v37);

  v45(v30, v44);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
  return v38();
}

uint64_t sub_1005CFAFC()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[44];
  uint64_t v2 = v0[37];
  uint64_t v3 = (void *)v0[14];
  uint64_t v4 = v0[11];
  sub_100250CB0(v0[42], v0[43]);

  v1(v4, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1005CFC40()
{
  if (IsAppleInternalBuild())
  {
    _StringGuts.grow(_:)(222);
    v1._countAndFlagsBits = 0x75716572204B5341;
    v1._object = (void *)0xEF20444920747365;
    String.append(_:)(v1);
    type metadata accessor for SFAirDrop.TransferIdentifier();
    sub_1005D7A14(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    v2._countAndFlagsBits = 0x206570795420;
    v2._object = (void *)0xE600000000000000;
    String.append(_:)(v2);
    uint64_t v3 = (int *)_s14descr1008C9AB9V10AskRequestVMa();
    type metadata accessor for SFAirDrop.TransferType();
    sub_1005D7A14((unint64_t *)&unk_10097F240, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    v4._countAndFlagsBits = 0x207265646E655320;
    v4._object = (void *)0xE800000000000000;
    String.append(_:)(v4);
    uint64_t v5 = (uint64_t *)(v0 + v3[7]);
    uint64_t v6 = *v5;
    uint64_t v7 = (void *)v5[1];
    swift_bridgeObjectRetain();
    v8._countAndFlagsBits = v6;
    v8._object = v7;
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
    v9._countAndFlagsBits = 0x22206D4E202CLL;
    v9._object = (void *)0xE600000000000000;
    String.append(_:)(v9);
    uint64_t v10 = (uint64_t *)(v0 + v3[9]);
    uint64_t v11 = *v10;
    uint64_t v12 = (void *)v10[1];
    swift_bridgeObjectRetain();
    v13._countAndFlagsBits = v11;
    v13._object = v12;
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    v14._countAndFlagsBits = 0x20644D202C22;
    v14._object = (void *)0xE600000000000000;
    String.append(_:)(v14);
    uint64_t v15 = (uint64_t *)(v0 + v3[10]);
    uint64_t v16 = *v15;
    unint64_t v17 = (void *)v15[1];
    swift_bridgeObjectRetain();
    v18._countAndFlagsBits = v16;
    v18._object = v17;
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    v19._object = (void *)0xEC000000203A736DLL;
    v19._countAndFlagsBits = 0x6574496C7275202CLL;
    String.append(_:)(v19);
    sub_10000A844((uint64_t *)&unk_100974C30);
    sub_1005D33E0(&qword_10097AA80, (uint64_t *)&unk_100974C30);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    v20._countAndFlagsBits = 0x3A73656C6966202CLL;
    v20._object = (void *)0xE900000000000020;
    String.append(_:)(v20);
    sub_10000A844(&qword_10097AA88);
    sub_1005D33E0(&qword_10097AA90, &qword_10097AA88);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    v21._countAndFlagsBits = 0xD00000000000001CLL;
    v21._object = (void *)0x80000001007C31D0;
    String.append(_:)(v21);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    v22._object = (void *)0x80000001007C31F0;
    v22._countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v22);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    v23._countAndFlagsBits = 0x6349656C6966202CLL;
    v23._object = (void *)0xEC000000203A6E6FLL;
    String.append(_:)(v23);
    sub_1002CE57C();
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    v24._object = (void *)0x80000001007C3210;
    v24._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v24);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    v25._object = (void *)0x80000001007C3230;
    v25._countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v25);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    unint64_t v26 = 0xD000000000000012;
    unint64_t v27 = 0x80000001007C3250;
  }
  else
  {
    _StringGuts.grow(_:)(214);
    v29._countAndFlagsBits = 0x75716572204B5341;
    v29._object = (void *)0xEF20444920747365;
    String.append(_:)(v29);
    type metadata accessor for SFAirDrop.TransferIdentifier();
    sub_1005D7A14(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    v30._countAndFlagsBits = 0x206570795420;
    v30._object = (void *)0xE600000000000000;
    String.append(_:)(v30);
    uint64_t v31 = (int *)_s14descr1008C9AB9V10AskRequestVMa();
    type metadata accessor for SFAirDrop.TransferType();
    sub_1005D7A14((unint64_t *)&unk_10097F240, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    v32._countAndFlagsBits = 0x207265646E655320;
    v32._object = (void *)0xE800000000000000;
    String.append(_:)(v32);
    uint64_t v33 = (uint64_t *)(v0 + v31[7]);
    uint64_t v34 = *v33;
    uint64_t v35 = (void *)v33[1];
    swift_bridgeObjectRetain();
    v36._countAndFlagsBits = v34;
    v36._object = v35;
    String.append(_:)(v36);
    swift_bridgeObjectRelease();
    v37._countAndFlagsBits = 0x22206D4E202CLL;
    v37._object = (void *)0xE600000000000000;
    String.append(_:)(v37);
    unint64_t v38 = (uint64_t *)(v0 + v31[9]);
    uint64_t v39 = *v38;
    char v40 = (void *)v38[1];
    swift_bridgeObjectRetain();
    v41._countAndFlagsBits = v39;
    v41._object = v40;
    String.append(_:)(v41);
    swift_bridgeObjectRelease();
    v42._countAndFlagsBits = 0x20644D202C22;
    v42._object = (void *)0xE600000000000000;
    String.append(_:)(v42);
    uint64_t v43 = (uint64_t *)(v0 + v31[10]);
    uint64_t v44 = *v43;
    uint64_t v45 = (void *)v43[1];
    swift_bridgeObjectRetain();
    v46._countAndFlagsBits = v44;
    v46._object = v45;
    String.append(_:)(v46);
    swift_bridgeObjectRelease();
    v47._countAndFlagsBits = 0xD000000000000012;
    v47._object = (void *)0x80000001007C3290;
    String.append(_:)(v47);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    v48._countAndFlagsBits = 0x2E73656C6966202CLL;
    v48._object = (void *)0xEF203A746E756F63;
    String.append(_:)(v48);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    v49._countAndFlagsBits = 0xD00000000000001CLL;
    v49._object = (void *)0x80000001007C31D0;
    String.append(_:)(v49);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    v50._object = (void *)0x80000001007C31F0;
    v50._countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v50);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    v51._countAndFlagsBits = 0x6349656C6966202CLL;
    v51._object = (void *)0xEC000000203A6E6FLL;
    String.append(_:)(v51);
    sub_1002CE57C();
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    v52._object = (void *)0x80000001007C3210;
    v52._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v52);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    unint64_t v27 = 0x80000001007C3230;
    unint64_t v26 = 0xD000000000000014;
  }
  String.append(_:)(*(Swift::String *)&v26);
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  v28._object = (void *)0x80000001007C3270;
  v28._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v28);
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  return 0;
}

uint64_t sub_1005D058C()
{
  v21[0] = 0;
  v21[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(118);
  uint64_t v16 = 0;
  unint64_t v17 = 0xE000000000000000;
  v1._countAndFlagsBits = 0xD000000000000011;
  v1._object = (void *)0x80000001007C32B0;
  String.append(_:)(v1);
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)v0[1];
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = v2;
  v4._object = v3;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 0x20644D202C22;
  v5._object = (void *)0xE600000000000000;
  String.append(_:)(v5);
  uint64_t v6 = v0[2];
  uint64_t v7 = (void *)v0[3];
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v6;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0xD00000000000001ALL;
  v9._object = (void *)0x80000001007C32D0;
  String.append(_:)(v9);
  sub_10024D388((uint64_t)(v0 + 4), (uint64_t)&v22, &qword_1009713C0);
  sub_10024D388((uint64_t)&v22, (uint64_t)v21, &qword_1009713C0);
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  v10._countAndFlagsBits = 0x736553736469202CLL;
  v10._object = (void *)0xEF2044496E6F6973;
  String.append(_:)(v10);
  sub_10024D388((uint64_t)(v0 + 5), (uint64_t)v21, &qword_10096B540);
  sub_10024D388((uint64_t)v21, (uint64_t)v20, &qword_10096B540);
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  v11._countAndFlagsBits = 0x6F6475657370202CLL;
  v11._object = (void *)0xEC000000206D796ELL;
  String.append(_:)(v11);
  sub_10024D388((uint64_t)(v0 + 7), (uint64_t)v20, &qword_10096B540);
  sub_10024D388((uint64_t)v20, (uint64_t)v19, &qword_10096B540);
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  v12._countAndFlagsBits = 0x6F5468737570202CLL;
  v12._object = (void *)0xEC000000206E656BLL;
  String.append(_:)(v12);
  sub_10024D388((uint64_t)(v0 + 9), (uint64_t)v19, &qword_10096B540);
  sub_10024D388((uint64_t)v19, (uint64_t)v18, &qword_10096B540);
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  v13._object = (void *)0x80000001007C32F0;
  v13._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v13);
  sub_10024D388((uint64_t)(v0 + 11), (uint64_t)v18, &qword_10096B260);
  sub_10024D388((uint64_t)v18, (uint64_t)v15, &qword_10096B260);
  sub_1002CE57C();
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  return v16;
}

uint64_t sub_1005D0854()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097A9A0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097A9A0);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

unint64_t sub_1005D091C(char a1)
{
  unint64_t result = 0x726566736E617254;
  switch(a1)
  {
    case 2:
    case 9:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x44497265646E6553;
      break;
    case 4:
      unint64_t result = 0x4449656C646E7542;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0x6F4D7265646E6553;
      break;
    case 7:
      unint64_t result = 0x736D657449;
      break;
    case 8:
      unint64_t result = 0x73656C6946;
      break;
    case 10:
      unint64_t result = 0x6E6F6349656C6946;
      break;
    case 11:
      unint64_t result = 0x6C69466C6C616D53;
      break;
    case 12:
      unint64_t result = 0xD000000000000013;
      break;
    case 13:
      unint64_t result = 0x61506D6F74737543;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1005D0AE0(char a1)
{
  unint64_t result = 0x726566736E617254;
  switch(a1)
  {
    case 2:
    case 9:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x44497265646E6553;
      break;
    case 4:
      unint64_t result = 0x4449656C646E7542;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0x6F4D7265646E6553;
      break;
    case 7:
      unint64_t result = 0x736D657449;
      break;
    case 8:
      unint64_t result = 0x73656C6946;
      break;
    case 10:
      unint64_t result = 0x6E6F6349656C6946;
      break;
    case 11:
      unint64_t result = 0x6C69466C6C616D53;
      break;
    case 12:
      unint64_t result = 0xD000000000000013;
      break;
    case 13:
      unint64_t result = 0x61506D6F74737543;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1005D0CA4(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1005D091C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1005D091C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_1005D0D30()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1005D091C(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1005D0D94()
{
  sub_1005D091C(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1005D0DE8()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1005D091C(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_1005D0E48@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1005D4E48(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1005D0E78@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1005D091C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1005D0EA4()
{
  return sub_1005D0AE0(*v0);
}

unint64_t sub_1005D0EAC@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1005D4E48(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1005D0ED4(uint64_t a1)
{
  unint64_t v2 = sub_1005D773C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005D0F10(uint64_t a1)
{
  unint64_t v2 = sub_1005D773C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005D0F4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24)
{
  unint64_t v27 = (int *)_s14descr1008C9AB9V10AskRequestVMa();
  uint64_t v43 = v27[11];
  uint64_t v46 = v27[12];
  *(void *)(a9 + v46) = _swiftEmptyArrayStorage;
  Swift::String v28 = (void *)(a9 + v27[13]);
  *Swift::String v28 = 0;
  v28[1] = 0;
  uint64_t v29 = a9 + v27[14];
  *(_OWORD *)uint64_t v29 = xmmword_100770AE0;
  uint64_t v51 = a9 + v27[15];
  *(_OWORD *)uint64_t v51 = xmmword_100770AE0;
  uint64_t v53 = v27[16];
  *(unsigned char *)(a9 + v53) = 0;
  uint64_t v52 = a9 + v27[17];
  *(_OWORD *)uint64_t v52 = xmmword_100770AE0;
  uint64_t v30 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v31 = *(void *)(v30 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(a9, a1, v30);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(a9, 0, 1, v30);
  uint64_t v32 = a9 + v27[5];
  uint64_t v33 = type metadata accessor for SFAirDrop.TransferType();
  uint64_t v34 = *(void *)(v33 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v32, a2, v33);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v32, 0, 1, v33);
  uint64_t v35 = (void *)(a9 + v27[6]);
  *uint64_t v35 = a5;
  v35[1] = a6;
  Swift::String v36 = (void *)(a9 + v27[8]);
  *Swift::String v36 = a7;
  v36[1] = a8;
  Swift::String v37 = (void *)(a9 + v27[7]);
  *Swift::String v37 = a3;
  v37[1] = a4;
  unint64_t v38 = (void *)(a9 + v27[9]);
  *unint64_t v38 = a10;
  v38[1] = a11;
  uint64_t v39 = (void *)(a9 + v27[10]);
  *uint64_t v39 = a12;
  v39[1] = a13;
  *(void *)(a9 + v43) = a14;
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(a2, v33);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(a1, v30);
  if (a15) {
    char v40 = a15;
  }
  else {
    char v40 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  *(void *)(a9 + v46) = v40;
  swift_bridgeObjectRelease();
  *Swift::String v28 = a16;
  v28[1] = a17;
  sub_100250CB0(*(void *)v29, *(void *)(v29 + 8));
  *(void *)uint64_t v29 = a18;
  *(void *)(v29 + 8) = a19;
  sub_100250CB0(*(void *)v51, *(void *)(v51 + 8));
  *(void *)uint64_t v51 = a20;
  *(void *)(v51 + 8) = a21;
  *(unsigned char *)(a9 + v53) = a22;
  uint64_t result = sub_100250CB0(*(void *)v52, *(void *)(v52 + 8));
  *(void *)uint64_t v52 = a23;
  *(void *)(v52 + 8) = a24;
  return result;
}

uint64_t sub_1005D12B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  v5[9] = a5;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v5[10] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URL();
  v5[11] = v6;
  v5[12] = *(void *)(v6 - 8);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  return _swift_task_switch(sub_1005D13CC, 0, 0);
}

void sub_1005D13CC()
{
  void (*v30)(uint64_t *__return_ptr, uint64_t, uint64_t *);
  void *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  void (*v40)(void);
  unint64_t v41;
  void *v42;
  void (*v43)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (**v44)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v45)(uint64_t, unint64_t, uint64_t);
  char *v46;
  void *v47;
  uint64_t v48;

  Swift::String v47 = v0;
  uint64_t v1 = v0[6];
  uint64_t v46 = (char *)_swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = v0[12];
  Swift::String v42 = v0;
  if (v2)
  {
    uint64_t v6 = *(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16);
    uint64_t v5 = v4 + 16;
    uint64_t v45 = v6;
    Swift::String v41 = (*(unsigned __int8 *)(v5 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 64);
    unint64_t v7 = v3 + v41;
    uint64_t v8 = *(void *)(v5 + 56);
    Swift::String v9 = (void (**)(void, void, void))(v5 + 16);
    Swift::String v10 = (char *)_swiftEmptyArrayStorage;
    uint64_t v44 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 40);
    while (1)
    {
      Swift::String v11 = v9;
      uint64_t v13 = v0[10];
      uint64_t v12 = v0[11];
      v45(v13, v7, v12);
      uint64_t v43 = *v44;
      (*v44)(v13, 0, 1, v12);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v13, 1, v12) == 1) {
        break;
      }
      Swift::String v9 = v11;
      Swift::String v14 = (void (*)(char *, uint64_t, uint64_t))*v11;
      (*v11)(v0[15], v0[10], v0[11]);
      if (URL.isFileURL.getter())
      {
        v14((char *)v0[14], v0[15], v0[11]);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10025539C(0, *((void *)v10 + 2) + 1, 1);
          Swift::String v10 = v46;
        }
        uint64_t v15 = v10;
        unint64_t v16 = *((void *)v10 + 2);
        unint64_t v17 = *((void *)v15 + 3);
        if (v16 >= v17 >> 1)
        {
          sub_10025539C(v17 > 1, v16 + 1, 1);
          uint64_t v15 = v46;
        }
        uint64_t v0 = v42;
        uint64_t v18 = v42[14];
        uint64_t v19 = v42[11];
        *((void *)v15 + 2) = v16 + 1;
        Swift::String v9 = v11;
        v14(&v15[v41 + v16 * v8], v18, v19);
        uint64_t v46 = v15;
        Swift::String v10 = v15;
      }
      else
      {
        (*(void (**)(void, void))(v5 - 8))(v0[15], v0[11]);
      }
      v7 += v8;
      if (!--v2)
      {
        v43(v0[10], 1, 1, v0[11]);
        break;
      }
    }
  }
  else
  {
    Swift::String v10 = (char *)_swiftEmptyArrayStorage;
    (*(void (**)(void, uint64_t, uint64_t, void))(v4 + 56))(v0[10], 1, 1, v0[11]);
  }
  uint64_t v20 = v0[10];
  swift_bridgeObjectRelease();
  sub_10000A7E8(v20, (uint64_t *)&unk_10096AC10);
  if (*((void *)v10 + 2))
  {
    CFArrayRef isa = Array._bridgeToObjectiveC()().super.isa;
    char v22 = (void *)sub_1001B1E48(isa);

    if (!v22)
    {
      __break(1u);
      return;
    }
    uint64_t v23 = v0[7];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v24 = v0[12];
    uint64_t v25 = v0[13];
    uint64_t v26 = v0[11];
    if (v23)
    {
      uint64_t v27 = v0[9];
      uint64_t v28 = swift_task_alloc();
      long long v29 = *(_OWORD *)(v0 + 7);
      *(void *)(v28 + 16) = v25;
      *(_OWORD *)(v28 + 24) = v29;
      *(void *)(v28 + 40) = v27;
      uint64_t v30 = (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t *))sub_1005D79F0;
    }
    else
    {
      uint64_t v28 = swift_task_alloc();
      *(void *)(v28 + 16) = v25;
      uint64_t v30 = (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t *))sub_1005D79D0;
    }
    uint64_t v31 = sub_1005CD9CC(v30, v28, (uint64_t)v10);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v26);
    swift_task_dealloc();
  }
  else
  {
    uint64_t v31 = _swiftEmptyArrayStorage;
  }
  if (qword_10096A038 != -1) {
    swift_once();
  }
  uint64_t v32 = type metadata accessor for Logger();
  sub_10000B47C(v32, (uint64_t)qword_10097A9A0);
  swift_retain_n();
  uint64_t v33 = Logger.logObject.getter();
  uint64_t v34 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = v42;
    Swift::String v36 = swift_slowAlloc();
    uint64_t v46 = (char *)swift_slowAlloc();
    *(_DWORD *)Swift::String v36 = 134218499;
    void v42[2] = *((void *)v10 + 2);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v36 + 12) = 2160;
    v42[3] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v36 + 22) = 2081;
    swift_retain();
    Swift::String v37 = Array.description.getter();
    uint64_t v39 = v38;
    swift_release();
    v42[4] = sub_100254634(v37, v39, (uint64_t *)&v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Adding file items (count=%ld) to request: %{private,mask.hash}s", (uint8_t *)v36, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();

    uint64_t v35 = v42;
  }
  *(void *)v35[5] = v31;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v40 = (void (*)(void))v35[1];
  v40();
}

double sub_1005D19DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void *a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v24 = a4;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v24 - v14;
  unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16((char *)&v24 - v14, a1, v9);
  v16(v13, a2, v9);
  if (*(void *)(a3 + 16) && (unint64_t v17 = sub_100583AD4(a1), (v18 & 1) != 0)) {
    int v19 = *(unsigned __int8 *)(*(void *)(a3 + 56) + v17);
  }
  else {
    int v19 = 0;
  }
  uint64_t v20 = v27;
  sub_1005D66E4((uint64_t)v15, (uint64_t)v13, v19, (uint64_t *)v25);
  if (v20)
  {
    *uint64_t v24 = v20;
  }
  else
  {
    long long v22 = v25[3];
    *(_OWORD *)(a5 + 32) = v25[2];
    *(_OWORD *)(a5 + 48) = v22;
    *(_OWORD *)(a5 + 64) = v25[4];
    *(_WORD *)(a5 + 80) = v26;
    double result = *(double *)v25;
    long long v23 = v25[1];
    *(_OWORD *)a5 = v25[0];
    *(_OWORD *)(a5 + 16) = v23;
  }
  return result;
}

double sub_1005D1B78@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  long long v22 = a3;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v19 - v13;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v15((char *)&v19 - v13, a1, v8);
  v15(v12, a2, v8);
  sub_1005D66E4((uint64_t)v14, (uint64_t)v12, 0, (uint64_t *)v20);
  if (v4)
  {
    *long long v22 = v4;
  }
  else
  {
    long long v17 = v20[3];
    *(_OWORD *)(a4 + 32) = v20[2];
    *(_OWORD *)(a4 + 48) = v17;
    *(_OWORD *)(a4 + 64) = v20[4];
    *(_WORD *)(a4 + 80) = v21;
    double result = *(double *)v20;
    long long v18 = v20[1];
    *(_OWORD *)a4 = v20[0];
    *(_OWORD *)(a4 + 16) = v18;
  }
  return result;
}

uint64_t sub_1005D1CF0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000A844(&qword_10097AAE8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  sub_1005D773C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v13) = 0;
  type metadata accessor for SFAirDrop.TransferIdentifier();
  sub_1005D7A14(&qword_100974D38, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v9 = (int *)_s14descr1008C9AB9V10AskRequestVMa();
    LOBYTE(v13) = 1;
    type metadata accessor for SFAirDrop.TransferType();
    sub_1005D7A14(&qword_10097AAF0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    long long v13 = *(_OWORD *)(v3 + v9[6]);
    char v12 = 2;
    sub_1002CC290();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v13) = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v13) = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v13) = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v13) = 6;
    KeyedEncodingContainer.encode(_:forKey:)();
    *(void *)&long long v13 = *(void *)(v3 + v9[11]);
    char v12 = 7;
    sub_10000A844((uint64_t *)&unk_100974C30);
    sub_1005D77E4(&qword_10097AAF8);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    *(void *)&long long v13 = *(void *)(v3 + v9[12]);
    char v12 = 8;
    sub_10000A844(&qword_10097AA88);
    sub_1005D7848(&qword_10097AB00, (void (*)(void))sub_1005D78B8);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v13) = 9;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    long long v13 = *(_OWORD *)(v3 + v9[14]);
    char v12 = 10;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    long long v13 = *(_OWORD *)(v3 + v9[15]);
    char v12 = 11;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v13) = 12;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    long long v13 = *(_OWORD *)(v3 + v9[17]);
    char v12 = 13;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1005D220C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v3 = sub_10000A844(&qword_10096DFA8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_10096DFB0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A844(&qword_10097AAB8);
  uint64_t v43 = *(void *)(v9 - 8);
  uint64_t v44 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = (int *)_s14descr1008C9AB9V10AskRequestVMa();
  long long v13 = (int *)__chkstk_darwin(v12);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = v13[11];
  *(void *)&v15[v53] = 0;
  uint64_t v16 = v13[12];
  *(void *)&v15[v16] = _swiftEmptyArrayStorage;
  long long v17 = &v15[v13[13]];
  *(void *)long long v17 = 0;
  *((void *)v17 + 1) = 0;
  uint64_t v51 = (uint64_t *)v17;
  uint64_t v52 = v16;
  long long v18 = &v15[v13[14]];
  *(_OWORD *)long long v18 = xmmword_100770AE0;
  Swift::String v49 = &v15[v13[15]];
  Swift::String v50 = v18;
  *(_OWORD *)Swift::String v49 = xmmword_100770AE0;
  uint64_t v19 = v13[16];
  v15[v19] = 0;
  uint64_t v20 = &v15[v13[17]];
  uint64_t v46 = a1;
  Swift::String v47 = v20;
  *(_OWORD *)uint64_t v20 = xmmword_100770AE0;
  sub_10026BB6C(a1, a1[3]);
  sub_1005D773C();
  uint64_t v45 = v11;
  uint64_t v21 = v48;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v21)
  {
    sub_10024D338((uint64_t)v46);
    long long v23 = v47;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100250CB0(*(void *)v50, *((void *)v50 + 1));
    sub_100250CB0(*(void *)v49, *((void *)v49 + 1));
    return sub_100250CB0(*(void *)v23, *((void *)v23 + 1));
  }
  else
  {
    uint64_t v48 = v19;
    uint64_t v22 = v43;
    type metadata accessor for SFAirDrop.TransferIdentifier();
    LOBYTE(v54) = 0;
    sub_1005D7A14(&qword_100974D28, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10024D388((uint64_t)v8, (uint64_t)v15, (uint64_t *)&unk_10096DFB0);
    type metadata accessor for SFAirDrop.TransferType();
    LOBYTE(v54) = 1;
    sub_1005D7A14(&qword_10097AAC8, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10024D388((uint64_t)v5, (uint64_t)&v15[v12[5]], &qword_10096DFA8);
    char v55 = 2;
    sub_1002CC1F4();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    *(_OWORD *)&v15[v12[6]] = v54;
    LOBYTE(v54) = 3;
    uint64_t v24 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v25 = (uint64_t *)&v15[v12[7]];
    *uint64_t v25 = v24;
    v25[1] = v26;
    LOBYTE(v54) = 4;
    uint64_t v27 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v28 = (uint64_t *)&v15[v12[8]];
    *uint64_t v28 = v27;
    v28[1] = v29;
    LOBYTE(v54) = 5;
    uint64_t v30 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v31 = (uint64_t *)&v15[v12[9]];
    *uint64_t v31 = v30;
    v31[1] = v32;
    LOBYTE(v54) = 6;
    uint64_t v33 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v34 = (uint64_t *)&v15[v12[10]];
    uint64_t *v34 = v33;
    v34[1] = v35;
    sub_10000A844((uint64_t *)&unk_100974C30);
    char v55 = 7;
    sub_1005D77E4(&qword_10097AAD0);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    *(void *)&v15[v53] = v54;
    sub_10000A844(&qword_10097AA88);
    char v55 = 8;
    sub_1005D7848(&qword_10097AAD8, (void (*)(void))sub_1005D7790);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    *(void *)&v15[v52] = v54;
    LOBYTE(v54) = 9;
    uint64_t v36 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    Swift::String v37 = v51;
    *uint64_t v51 = v36;
    v37[1] = v38;
    char v55 = 10;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    *(_OWORD *)Swift::String v50 = v54;
    char v55 = 11;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    *(_OWORD *)Swift::String v49 = v54;
    LOBYTE(v54) = 12;
    v15[v48] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    char v55 = 13;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v45, v44);
    long long v39 = v54;
    char v40 = v47;
    sub_100250CB0(*(void *)v47, *((void *)v47 + 1));
    *(_OWORD *)char v40 = v39;
    sub_1005D4D80((uint64_t)v15, v42, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
    sub_10024D338((uint64_t)v46);
    return sub_1005D4DE8((uint64_t)v15, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  }
}

unint64_t sub_1005D2B60(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
    case 4:
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0x6973736553534449;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1005D2C3C(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
    case 4:
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0x6973736553534449;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1005D2D18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005D220C(a1, a2);
}

uint64_t sub_1005D2D30(void *a1)
{
  return sub_1005D1CF0(a1);
}

uint64_t sub_1005D2D4C(char *a1, char *a2)
{
  return sub_1005E8B34(*a1, *a2);
}

Swift::Int sub_1005D2D58()
{
  return sub_1005E9F20();
}

uint64_t sub_1005D2D64()
{
  return sub_1005E97E4();
}

Swift::Int sub_1005D2D6C()
{
  return sub_1005E9F20();
}

unint64_t sub_1005D2D74@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1008D35A8;
  unint64_t result = sub_1005D8080(*a1, v3);
  *a2 = result;
  return result;
}

unint64_t sub_1005D2DAC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1005D2B60(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1005D2DD8()
{
  return sub_1005D2C3C(*v0);
}

unint64_t sub_1005D2DE0@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1008D35A8;
  unint64_t result = sub_1005D8080(a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_1005D2E10(uint64_t a1)
{
  unint64_t v2 = sub_1005D76E8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005D2E4C(uint64_t a1)
{
  unint64_t v2 = sub_1005D76E8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005D2E88(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000A844(&qword_10097AAB0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10026BB6C(a1, a1[3]);
  sub_1005D76E8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v11[0] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    v11[0] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v11[0] = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v11[0] = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v11[0] = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v11[0] = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    sub_10024D388(v3 + 88, (uint64_t)v12, &qword_10096B260);
    sub_10024D388((uint64_t)v12, (uint64_t)v11, &qword_10096B260);
    v10[15] = 6;
    sub_1002CC290();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1005D30E8(char a1)
{
  unint64_t result = 0x656D614E656C6946;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x65707954656C6946;
      break;
    case 2:
      unint64_t result = 0x54627553656C6946;
      break;
    case 3:
      unint64_t result = 0x657A6953656C6946;
      break;
    case 4:
      unint64_t result = 0x506D6F42656C6946;
      break;
    case 5:
      unint64_t result = 0x69447349656C6946;
      break;
    case 6:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1005D31E8(char a1)
{
  unint64_t result = 0x656D614E656C6946;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x65707954656C6946;
      break;
    case 2:
      unint64_t result = 0x54627553656C6946;
      break;
    case 3:
      unint64_t result = 0x657A6953656C6946;
      break;
    case 4:
      unint64_t result = 0x506D6F42656C6946;
      break;
    case 5:
      unint64_t result = 0x69447349656C6946;
      break;
    case 6:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

__n128 sub_1005D32E8@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1005D712C(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(void *)(a2 + 96) = v8;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_1005D3348(void *a1)
{
  return sub_1005D2E88(a1);
}

uint64_t sub_1005D3394()
{
  return sub_1005D058C();
}

uint64_t sub_1005D33E0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100247840(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005D3430(unsigned __int8 *a1, char *a2)
{
  return sub_1005E8D44(*a1, *a2);
}

Swift::Int sub_1005D343C()
{
  return sub_1005EA048();
}

uint64_t sub_1005D3448()
{
  return sub_1005E98F4();
}

Swift::Int sub_1005D3450()
{
  return sub_1005EA048();
}

unint64_t sub_1005D3458@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1008D3670;
  unint64_t result = sub_1005D8080(*a1, v3);
  *a2 = result;
  return result;
}

unint64_t sub_1005D3490@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1005D30E8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1005D34BC()
{
  return sub_1005D31E8(*v0);
}

unint64_t sub_1005D34C4@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1008D3670;
  unint64_t result = sub_1005D8080(a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_1005D34F4(uint64_t a1)
{
  unint64_t v2 = sub_1005D8538();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005D3530(uint64_t a1)
{
  unint64_t v2 = sub_1005D8538();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005D356C(void *a1)
{
  uint64_t v3 = sub_10000A844(&qword_10097AB70);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  long long v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10026BB6C(a1, a1[3]);
  sub_1005D8538();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    v8[14] = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v8[12] = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v8[11] = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v8[10] = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[9] = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

double sub_1005D3798@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1005D80C8(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_WORD *)(a2 + 80) = v8;
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1005D37F4(void *a1)
{
  return sub_1005D356C(a1);
}

uint64_t sub_1005D380C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  sub_10000A844(&qword_10096B258);
  v6[8] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for UUID();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v6[12] = v8;
  v6[13] = *(void *)(v8 - 8);
  v6[14] = swift_task_alloc();
  sub_10000A844(&qword_100974EA0);
  v6[15] = swift_task_alloc();
  v6[16] = swift_task_alloc();
  v6[17] = _s14descr1008C9AB9V10AskRequestVMa();
  v6[18] = swift_task_alloc();
  v6[19] = type metadata accessor for SDAirDropServerConnection(0);
  v6[20] = swift_task_alloc();
  v6[21] = swift_task_alloc();
  sub_10000A844(&qword_10096DFA8);
  v6[22] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for SFAirDrop.TransferType();
  v6[23] = v9;
  v6[24] = *(void *)(v9 - 8);
  v6[25] = swift_task_alloc();
  v6[26] = swift_task_alloc();
  v6[27] = swift_task_alloc();
  v6[28] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo();
  v6[29] = v10;
  v6[30] = *(void *)(v10 - 8);
  v6[31] = swift_task_alloc();
  v6[32] = swift_task_alloc();
  v6[33] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v6[34] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for URL();
  v6[35] = v11;
  v6[36] = *(void *)(v11 - 8);
  v6[37] = swift_task_alloc();
  v6[38] = swift_task_alloc();
  return _swift_task_switch(sub_1005D3BD8, 0, 0);
}

uint64_t sub_1005D3BD8()
{
  uint64_t v119 = v0;
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[7];
  uint64_t v3 = *(void *)(v2 + *(int *)(v1 + 44));
  if (v3 && (uint64_t v4 = *(void *)(v3 + 16)) != 0)
  {
    uint64_t v5 = v0[36];
    long long v6 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v109 = v5;
    uint64_t v7 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v8 = swift_bridgeObjectRetain() + 40;
    uint64_t v9 = (char *)_swiftEmptyArrayStorage;
    do
    {
      unint64_t v10 = (unint64_t)v9;
      uint64_t v12 = v0[34];
      uint64_t v11 = v0[35];
      swift_bridgeObjectRetain();
      URL.init(string:)();
      swift_bridgeObjectRelease();
      if ((*v6)(v12, 1, v11) == 1)
      {
        sub_10000A7E8(v0[34], (uint64_t *)&unk_10096AC10);
      }
      else
      {
        uint64_t v14 = (char *)v0[37];
        uint64_t v13 = (char *)v0[38];
        uint64_t v15 = v0[35];
        uint64_t v16 = *v7;
        (*v7)(v13, (char *)v0[34], v15);
        v16(v14, v13, v15);
        uint64_t v9 = (char *)v10;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = (char *)sub_100253318(0, *(void *)(v10 + 16) + 1, 1, v10);
        }
        uint64_t v0 = (void *)v112;
        unint64_t v18 = *((void *)v9 + 2);
        unint64_t v17 = *((void *)v9 + 3);
        if (v18 >= v17 >> 1) {
          uint64_t v9 = (char *)sub_100253318(v17 > 1, v18 + 1, 1, (unint64_t)v9);
        }
        uint64_t v19 = *(char **)(v112 + 296);
        uint64_t v20 = *(void *)(v112 + 280);
        *((void *)v9 + 2) = v18 + 1;
        v16(&v9[((*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80))+ *(void *)(v109 + 72) * v18], v19, v20);
      }
      v8 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    uint64_t v1 = v0[17];
    uint64_t v2 = v0[7];
  }
  else
  {
    uint64_t v9 = (char *)_swiftEmptyArrayStorage;
  }
  v0[39] = v9;
  uint64_t v21 = *(void *)(v2 + *(int *)(v1 + 48));
  if (v21 && (uint64_t v22 = *(void *)(v21 + 16)) != 0)
  {
    uint64_t v104 = v9;
    uint64_t v106 = v0[30];
    swift_bridgeObjectRetain();
    long long v23 = (char *)_swiftEmptyArrayStorage;
    uint64_t v24 = (void *)(v21 + 56);
    unint64_t v105 = (void (**)(char *, uint64_t, uint64_t))(v106 + 32);
    do
    {
      if (*v24)
      {
        uint64_t v107 = v22;
        uint64_t v25 = *(v24 - 3);
        uint64_t v26 = (void *)*(v24 - 2);
        unint64_t v110 = (unint64_t)v23;
        if (v24[6])
        {
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v113 = 12078;
          unint64_t v114 = 0xE200000000000000;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v31._countAndFlagsBits = v25;
          v31._object = v26;
          String.append(_:)(v31);
          swift_bridgeObjectRelease();
        }
        uint64_t v32 = *(void *)(v112 + 256);
        uint64_t v33 = *(char **)(v112 + 264);
        uint64_t v108 = *(char **)(v112 + 248);
        uint64_t v34 = *(void *)(v112 + 232);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        SFAirDropReceive.AskRequest.ItemInfo.init(convertMediaFormats:fileBomPath:fileIsDirectory:fileName:fileSubType:fileType:)();
        uint64_t v35 = *v105;
        (*v105)(v33, v32, v34);
        v35(v108, (uint64_t)v33, v34);
        long long v23 = (char *)v110;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v23 = (char *)sub_100253D80(0, *(void *)(v110 + 16) + 1, 1, v110);
        }
        uint64_t v22 = v107;
        unint64_t v37 = *((void *)v23 + 2);
        unint64_t v36 = *((void *)v23 + 3);
        if (v37 >= v36 >> 1) {
          long long v23 = (char *)sub_100253D80(v36 > 1, v37 + 1, 1, (unint64_t)v23);
        }
        uint64_t v38 = *(void *)(v112 + 248);
        uint64_t v39 = *(void *)(v112 + 232);
        *((void *)v23 + 2) = v37 + 1;
        v35(&v23[((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(void *)(v106 + 72) * v37], v38, v39);
      }
      else
      {
        if (qword_10096A038 != -1) {
          swift_once();
        }
        uint64_t v27 = type metadata accessor for Logger();
        sub_10000B47C(v27, (uint64_t)qword_10097A9A0);
        uint64_t v28 = Logger.logObject.getter();
        os_log_type_t v29 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v28, v29))
        {
          uint64_t v30 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v30 = 0;
          _os_log_impl((void *)&_mh_execute_header, v28, v29, "Missing fileType for ASK", v30, 2u);
          swift_slowDealloc();
        }
      }
      v24 += 11;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    uint64_t v0 = (void *)v112;
    uint64_t v9 = v104;
  }
  else
  {
    long long v23 = (char *)_swiftEmptyArrayStorage;
  }
  v0[40] = v23;
  if (*((void *)v23 + 2) || !*((void *)v9 + 2)) {
    char v40 = (unsigned int *)&enum case for SFAirDrop.TransferType.files(_:);
  }
  else {
    char v40 = (unsigned int *)&enum case for SFAirDrop.TransferType.links(_:);
  }
  uint64_t v41 = v0[28];
  uint64_t v42 = v0[26];
  uint64_t v43 = v0[23];
  uint64_t v44 = v0[24];
  uint64_t v45 = v0[22];
  uint64_t v46 = *(void *)(v112 + 136);
  uint64_t v47 = *(void *)(v112 + 56);
  (*(void (**)(uint64_t, void, uint64_t))(v44 + 104))(v41, *v40, v43);
  sub_10024A330(v47 + *(int *)(v46 + 20), v45, &qword_10096DFA8);
  uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16);
  *(void *)(v112 + 328) = v48;
  *(void *)(v112 + 336) = (v44 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v48(v42, v41, v43);
  int v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v45, 1, v43);
  uint64_t v50 = *(void *)(v112 + 216);
  uint64_t v51 = *(void *)(v112 + 184);
  uint64_t v52 = *(void *)(v112 + 192);
  uint64_t v53 = *(void *)(v112 + 176);
  if (v49 == 1)
  {
    (*(void (**)(void, void, void))(v52 + 32))(*(void *)(v112 + 216), *(void *)(v112 + 208), *(void *)(v112 + 184));
    sub_10000A7E8(v53, &qword_10096DFA8);
  }
  else
  {
    (*(void (**)(void, void))(v52 + 8))(*(void *)(v112 + 208), *(void *)(v112 + 184));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v50, v53, v51);
  }
  long long v54 = (uint64_t *)(*(void *)(v112 + 56) + *(int *)(*(void *)(v112 + 136) + 24));
  unint64_t v55 = v54[1];
  if (v55 >> 60 == 15)
  {
    uint64_t v56 = 0;
    uint64_t v57 = 0;
    uint64_t v58 = 0;
    uint64_t v59 = 0;
    unint64_t v60 = 0;
LABEL_43:
    char v61 = 0;
    unint64_t v62 = (void *)v112;
    uint64_t v63 = *(void *)(v112 + 56);
    uint64_t v64 = v56;
    goto LABEL_60;
  }
  uint64_t v65 = *v54;
  sub_1005D4D80(*(void *)(v112 + 40), *(void *)(v112 + 168), type metadata accessor for SDAirDropServerConnection);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v67 = *(void *)(v112 + 168);
      unint64_t v68 = *(void **)(v112 + 32);
      sub_10025ADCC(v65, v55);
      sub_1005D4DE8(v67, type metadata accessor for SDAirDropServerConnection);
      char v69 = sub_1004620A0(v68);
      sub_100250CB0(v65, v55);
    }
    else
    {
      uint64_t v70 = *(void *)(v112 + 168);
      uint64_t v71 = *(void *)(v112 + 72);
      uint64_t v72 = *(void *)(v112 + 80);
      uint64_t v73 = *(void **)(v112 + 32);
      sub_10025ADCC(v65, v55);
      swift_release();
      uint64_t v74 = v70 + *(int *)(sub_10000A844(&qword_100970300) + 48);
      char v69 = sub_1004620A0(v73);
      sub_100250CB0(v65, v55);
      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v74, v71);
    }
  }
  else
  {
    sub_10025ADCC(v65, v55);
    char v69 = sub_100462654();
    sub_100250CB0(v65, v55);
    swift_release();
  }
  unint64_t v75 = v54[1];
  if (v75 >> 60 == 15)
  {
    uint64_t v56 = 0;
    uint64_t v58 = 0;
    uint64_t v59 = 0;
    unint64_t v60 = 0;
    uint64_t v57 = 0;
    if ((v69 & 1) == 0) {
      goto LABEL_43;
    }
  }
  else
  {
    uint64_t v76 = *v54;
    sub_1005D4D80(*(void *)(v112 + 40), *(void *)(v112 + 160), type metadata accessor for SDAirDropServerConnection);
    int v77 = swift_getEnumCaseMultiPayload();
    if (v77)
    {
      if (v77 == 1)
      {
        uint64_t v78 = *(void *)(v112 + 160);
        unint64_t v79 = *(void **)(v112 + 32);
        sub_10025ADCC(v76, v75);
        sub_1005D4DE8(v78, type metadata accessor for SDAirDropServerConnection);
        uint64_t v59 = sub_1004615D4(v79);
        uint64_t v58 = v80;
        uint64_t v57 = v81;
        uint64_t v56 = v82;
        sub_100250CB0(v76, v75);
        unint64_t v60 = 0;
        if ((v69 & 1) == 0) {
          goto LABEL_43;
        }
      }
      else
      {
        uint64_t v84 = *(void *)(v112 + 160);
        uint64_t v85 = *(void *)(v112 + 80);
        uint64_t v111 = *(void *)(v112 + 72);
        uint64_t v86 = *(void **)(v112 + 32);
        sub_10025ADCC(v76, v75);
        swift_release();
        uint64_t v87 = v84 + *(int *)(sub_10000A844(&qword_100970300) + 48);
        uint64_t v59 = sub_1004615D4(v86);
        uint64_t v58 = v88;
        uint64_t v57 = v89;
        uint64_t v56 = v90;
        sub_100250CB0(v76, v75);
        (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v87, v111);
        unint64_t v60 = 0;
        if ((v69 & 1) == 0) {
          goto LABEL_43;
        }
      }
    }
    else
    {
      id v83 = *(void **)(v112 + 32);
      sub_10025ADCC(v76, v75);
      sub_100461A7C(v83, &v113);
      unint64_t v60 = v114;
      uint64_t v59 = v115;
      uint64_t v58 = v116;
      uint64_t v57 = v117;
      uint64_t v56 = v118;
      swift_release();
      sub_100250CB0(v76, v75);
      if ((v69 & 1) == 0) {
        goto LABEL_43;
      }
    }
  }
  uint64_t v64 = v56;
  unint64_t v62 = (void *)v112;
  uint64_t v63 = *(void *)(v112 + 56);
  uint64_t v91 = (uint64_t *)(v63 + *(int *)(*(void *)(v112 + 136) + 36));
  uint64_t v57 = *v91;
  uint64_t v56 = v91[1];
  char v61 = 1;
LABEL_60:
  *(unsigned char *)(v112 + 400) = v61;
  v62[45] = v59;
  v62[46] = v60;
  v62[43] = v64;
  v62[44] = v58;
  uint64_t v92 = v62[18];
  swift_bridgeObjectRetain();
  sub_1005D4D80(v63, v92, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  uint64_t v94 = v62[17];
  uint64_t v93 = v62[18];
  if (!v56)
  {
    uint64_t v95 = (uint64_t *)(v93 + *(int *)(v94 + 36));
    uint64_t v57 = *v95;
    uint64_t v56 = v95[1];
    swift_bridgeObjectRetain();
  }
  v62[47] = v57;
  v62[48] = v56;
  uint64_t v96 = v62[7];
  sub_1005D4DE8(v93, (uint64_t (*)(void))_s14descr1008C9AB9V10AskRequestVMa);
  sub_100394300();
  uint64_t v97 = (void *)static NSUserDefaults.airdrop.getter();
  *(unsigned char *)(v112 + 401) = SFAirDropUserDefaults.alwaysAutoAccept.getter() & 1;

  uint64_t v98 = (uint64_t *)(v96 + *(int *)(v94 + 28));
  uint64_t v100 = *v98;
  uint64_t v99 = v98[1];
  uint64_t v101 = (void *)swift_task_alloc();
  v62[49] = v101;
  *uint64_t v101 = v62;
  v101[1] = sub_1005D469C;
  uint64_t v102 = v62[16];
  return sub_10047CD08(v102, v100, v99, v59, v58);
}

uint64_t sub_1005D469C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1005D4798, 0, 0);
}

uint64_t sub_1005D4798()
{
  if ((SFAirDrop.TransferType.isOnlyExchange.getter() & 1) == 0)
  {
    uint64_t v1 = v0[7] + *(int *)(v0[17] + 60);
    unint64_t v2 = *(void *)(v1 + 8);
    if (v2 >> 60 != 15)
    {
      uint64_t v9 = *(void *)v1;
      sub_10025ADCC(*(void *)v1, *(void *)(v1 + 8));
      CFDataRef isa = Data._bridgeToObjectiveC()().super.isa;
      CGImageRef v11 = sub_1000D8C3C(isa);

      if (v11)
      {
        uint64_t v12 = v11;
        sub_100250CB0(v9, v2);
      }
      else
      {
        sub_100250CB0(v9, v2);
      }
    }
  }
  if ((SFAirDrop.TransferType.isOnlyExchange.getter() & 1) == 0)
  {
    uint64_t v3 = v0[7] + *(int *)(v0[17] + 56);
    unint64_t v4 = *(void *)(v3 + 8);
    if (v4 >> 60 != 15)
    {
      uint64_t v5 = *(void *)v3;
      sub_10025ADCC(*(void *)v3, *(void *)(v3 + 8));
      CFDataRef v6 = Data._bridgeToObjectiveC()().super.isa;
      CGImageRef v7 = sub_1000D8C3C(v6);

      if (v7)
      {
        uint64_t v8 = v7;
        sub_100250CB0(v5, v4);
      }
      else
      {
        sub_100250CB0(v5, v4);
      }
    }
  }
  uint64_t v13 = (void (*)(uint64_t, uint64_t, uint64_t))v0[41];
  uint64_t v14 = v0[27];
  uint64_t v15 = v0[25];
  uint64_t v16 = v0[23];
  (*(void (**)(void, void, void))(v0[13] + 16))(v0[14], v0[3], v0[12]);
  v13(v15, v14, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v18 = v0 + 15;
  uint64_t v17 = v0[15];
  uint64_t v19 = v0[9];
  uint64_t v20 = v0[10];
  sub_10024A330(v0[16], v17, &qword_100974EA0);
  LODWORD(v17) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v17 == 1)
  {
    unint64_t v18 = v0 + 11;
    sub_10000A7E8(v0[15], &qword_100974EA0);
    UUID.init()();
  }
  uint64_t v21 = *v18;
  uint64_t v22 = v0[39];
  uint64_t v33 = v0[40];
  uint64_t v36 = v0[27];
  uint64_t v37 = v0[28];
  uint64_t v23 = v0[24];
  uint64_t v35 = v0[23];
  uint64_t v24 = v0[17];
  uint64_t v34 = v0[16];
  uint64_t v25 = v0[10];
  uint64_t v27 = v0[8];
  uint64_t v26 = v0[9];
  uint64_t v28 = v0[7];
  UUID.uuidString.getter();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v21, v26);
  uint64_t v29 = type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v27, 1, 1, v29);
  swift_bridgeObjectRetain();
  sub_100258F84(v22);
  swift_bridgeObjectRelease();
  sub_10025922C(v33);
  swift_bridgeObjectRelease();
  sub_100278C78(*(void *)(v28 + *(int *)(v24 + 68)), *(void *)(v28 + *(int *)(v24 + 68) + 8));
  SFAirDropReceive.AskRequest.init(id:type:transferTypes:canAutoAccept:verifiableIdentity:senderIsMe:contactIdentifier:senderBundleID:senderComputerName:senderModelName:senderEmail:senderEmailHash:senderCompositeName:senderFirstName:senderLastName:senderID:senderIcon:smallPreviewImage:previewImage:itemsDescription:itemsDescriptionAdvanced:urlItems:items:customPayload:)();
  sub_10000A7E8(v34, &qword_100974EA0);
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v30(v36, v35);
  v30(v37, v35);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1005D4D80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005D4DE8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1005D4E48(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008D3438, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xE) {
    return 14;
  }
  else {
    return v3;
  }
}

char *sub_1005D4E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v205 = a1;
  uint64_t v199 = 0;
  uint64_t v5 = sub_10000A844(&qword_10096B5B0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v183 = (uint64_t)&v178 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v194 = (uint64_t)&v178 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v202 = (uint64_t)&v178 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v196 = (char *)&v178 - v13;
  __chkstk_darwin(v12);
  uint64_t v206 = (char *)&v178 - v14;
  uint64_t v186 = type metadata accessor for URLResourceValues();
  uint64_t v185 = *(void *)(v186 - 8);
  uint64_t v15 = __chkstk_darwin(v186);
  uint64_t v189 = (char *)&v178 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v188 = (char *)&v178 - v17;
  uint64_t v18 = type metadata accessor for URL();
  uint64_t v210 = *(void *)(v18 - 8);
  uint64_t v211 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v195 = (char *)&v178 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v187 = (char *)&v178 - v22;
  __chkstk_darwin(v21);
  uint64_t v191 = (char *)&v178 - v23;
  uint64_t v24 = sub_10000A844((uint64_t *)&unk_10096AC10);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v190 = (char *)&v178 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v201 = (char **)((char *)&v178 - v28);
  uint64_t v29 = __chkstk_darwin(v27);
  long long v200 = (char *)&v178 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v179 = (char *)&v178 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v184 = (char *)&v178 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v181 = (char *)&v178 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v180 = (char *)&v178 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v41 = (char *)&v178 - v40;
  uint64_t v42 = __chkstk_darwin(v39);
  uint64_t v44 = (char *)&v178 - v43;
  uint64_t v45 = __chkstk_darwin(v42);
  uint64_t v192 = (char *)&v178 - v46;
  __chkstk_darwin(v45);
  uint64_t v204 = (uint64_t)&v178 - v47;
  uint64_t v48 = type metadata accessor for UTType();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v178 = (char *)&v178 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v182 = (char *)&v178 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  v193 = (char *)&v178 - v55;
  __chkstk_darwin(v54);
  uint64_t v57 = (char *)&v178 - v56;
  id v58 = [self contentType];
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v59 = UTType.identifier.getter();
  uint64_t v61 = v60;
  uint64_t v207 = v48;
  uint64_t v208 = v49;
  unint64_t v62 = *(void (**)(char *, uint64_t))(v49 + 8);
  uint64_t v198 = v49 + 8;
  v197 = v62;
  v62(v57, v48);
  uint64_t v209 = a2;
  uint64_t v203 = a3;
  if (v59 == a2 && v61 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v63 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v63 & 1) == 0)
    {
      long long v200 = 0;
      uint64_t v201 = 0;
      char v75 = 0;
      uint64_t v76 = v210;
      uint64_t v78 = v207;
      uint64_t v77 = v208;
      uint64_t v79 = v203;
      goto LABEL_40;
    }
  }
  id v64 = objc_allocWithZone((Class)PFAssetBundle);
  URL._bridgeToObjectiveC()(v65);
  uint64_t v67 = v66;
  unint64_t v68 = (char *)[v64 initWithAssetBundleAtURL:v66];

  char v69 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v210 + 56);
  uint64_t v70 = v204;
  v69(v204, 1, 1, v211);
  uint64_t v71 = (uint64_t)v200;
  if (v68)
  {
    if ([v68 mediaType] == (id)2)
    {
      id v72 = [v68 fullSizeVideoURL];
      if (v72)
      {
        uint64_t v73 = v72;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v74 = 0;
      }
      else
      {
        uint64_t v74 = 1;
      }
      uint64_t v86 = v211;
      id v84 = v192;
      v69((uint64_t)v41, v74, 1, v211);
      sub_10024D388((uint64_t)v41, (uint64_t)v44, (uint64_t *)&unk_10096AC10);
      uint64_t v87 = v210;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v210 + 48))(v44, 1, v86) == 1)
      {
        id v88 = [v68 videoURL];
        if (v88)
        {
          uint64_t v89 = v88;
          uint64_t v90 = (uint64_t)v180;
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v91 = 0;
        }
        else
        {
          uint64_t v91 = 1;
          uint64_t v90 = (uint64_t)v180;
        }
        sub_10000A7E8(v70, (uint64_t *)&unk_10096AC10);
        v69(v90, v91, 1, v86);
        sub_10024D388(v90, (uint64_t)v84, (uint64_t *)&unk_10096AC10);
        uint64_t v99 = (uint64_t)v44;
LABEL_27:
        sub_10000A7E8(v99, (uint64_t *)&unk_10096AC10);
        goto LABEL_28;
      }
      sub_10000A7E8(v70, (uint64_t *)&unk_10096AC10);
      (*(void (**)(id, char *, uint64_t))(v87 + 32))(v84, v44, v86);
      v69((uint64_t)v84, 0, 1, v86);
    }
    else
    {
      if ([v68 mediaType] != (id)1) {
        goto LABEL_29;
      }
      id v80 = [v68 fullSizePhotoURL];
      if (v80)
      {
        uint64_t v81 = v80;
        uint64_t v82 = v179;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v83 = 0;
        id v84 = v181;
        uint64_t v85 = (uint64_t)v184;
      }
      else
      {
        uint64_t v83 = 1;
        id v84 = v181;
        uint64_t v85 = (uint64_t)v184;
        uint64_t v82 = v179;
      }
      uint64_t v92 = v82;
      uint64_t v93 = (uint64_t)v82;
      uint64_t v94 = v211;
      v69((uint64_t)v92, v83, 1, v211);
      sub_10024D388(v93, v85, (uint64_t *)&unk_10096AC10);
      uint64_t v95 = v210;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v210 + 48))(v85, 1, v94) == 1)
      {
        id v96 = [v68 photoURL];
        if (v96)
        {
          uint64_t v97 = v96;
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v98 = 0;
        }
        else
        {
          uint64_t v98 = 1;
        }
        sub_10000A7E8(v70, (uint64_t *)&unk_10096AC10);
        v69(v71, v98, 1, v94);
        sub_10024D388(v71, (uint64_t)v84, (uint64_t *)&unk_10096AC10);
        uint64_t v99 = (uint64_t)v184;
        goto LABEL_27;
      }
      sub_10000A7E8(v70, (uint64_t *)&unk_10096AC10);
      (*(void (**)(id, uint64_t, uint64_t))(v95 + 32))(v84, v85, v94);
      v69((uint64_t)v84, 0, 1, v94);
    }
LABEL_28:
    sub_10024D388((uint64_t)v84, v70, (uint64_t *)&unk_10096AC10);
  }
LABEL_29:
  uint64_t v192 = v68;
  uint64_t v100 = v201;
  sub_10024A330(v70, (uint64_t)v201, (uint64_t *)&unk_10096AC10);
  uint64_t v76 = v210;
  uint64_t v101 = v211;
  int v102 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v210 + 48))(v100, 1, v211);
  uint64_t v78 = v207;
  uint64_t v77 = v208;
  uint64_t v79 = v203;
  if (v102 == 1)
  {
    sub_10000A7E8(v70, (uint64_t *)&unk_10096AC10);

    sub_10000A7E8((uint64_t)v100, (uint64_t *)&unk_10096AC10);
    long long v200 = 0;
    uint64_t v103 = &v215;
LABEL_38:
    *(v103 - 32) = 0;
    goto LABEL_39;
  }
  uint64_t v104 = v191;
  (*(void (**)(char *, void *, uint64_t))(v76 + 32))(v191, v100, v101);
  sub_10000A844((uint64_t *)&unk_10096CE70);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
  *(void *)(inited + 32) = NSURLTypeIdentifierKey;
  uint64_t v106 = NSURLTypeIdentifierKey;
  sub_1002C89FC(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  uint64_t v107 = v188;
  uint64_t v108 = v199;
  URL.resourceValues(forKeys:)();
  if (v108)
  {
    swift_bridgeObjectRelease();
    if (qword_10096A038 != -1) {
      swift_once();
    }
    uint64_t v109 = type metadata accessor for Logger();
    sub_10000B47C(v109, (uint64_t)qword_10097A9A0);
    unint64_t v110 = v187;
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v187, v104, v101);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v111 = Logger.logObject.getter();
    os_log_type_t v112 = static os_log_type_t.error.getter();
    int v113 = v112;
    if (os_log_type_enabled(v111, v112))
    {
      uint64_t v114 = swift_slowAlloc();
      uint64_t v201 = (void *)swift_slowAlloc();
      uint64_t v213 = swift_slowAlloc();
      *(_DWORD *)uint64_t v114 = 136315394;
      sub_1005D7A14((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
      LODWORD(v200) = v113;
      uint64_t v115 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v212 = sub_100254634(v115, v116, &v213);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v117 = *(void (**)(char *, uint64_t))(v210 + 8);
      v117(v110, v211);
      *(_WORD *)(v114 + 12) = 2112;
      swift_errorRetain();
      uint64_t v118 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v212 = v118;
      uint64_t v77 = v208;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v201 = v118;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v111, (os_log_type_t)v200, "Subtype for asset bundle couldn't be determined for URL: %s. Error: %@", (uint8_t *)v114, 0x16u);
      sub_10000A844(&qword_10096B850);
      char v75 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v78 = v207;
      swift_errorRelease();

      v117(v191, v211);
      uint64_t v79 = v203;
      uint64_t v76 = v210;
      sub_10000A7E8(v204, (uint64_t *)&unk_10096AC10);
      long long v200 = 0;
      uint64_t v201 = 0;
      uint64_t v199 = 0;
      goto LABEL_40;
    }

    swift_errorRelease();
    swift_errorRelease();
    uint64_t v120 = *(void (**)(char *, uint64_t))(v76 + 8);
    v120(v110, v101);
    swift_errorRelease();

    v120(v104, v101);
    sub_10000A7E8(v204, (uint64_t *)&unk_10096AC10);
    long long v200 = 0;
    uint64_t v201 = 0;
    uint64_t v103 = &v214;
    goto LABEL_38;
  }
  uint64_t v199 = 0;
  swift_bridgeObjectRelease();
  long long v200 = (char *)URLResourceValues.typeIdentifier.getter();
  uint64_t v201 = v119;
  (*(void (**)(char *, uint64_t))(v185 + 8))(v107, v186);

  (*(void (**)(char *, uint64_t))(v76 + 8))(v104, v101);
  sub_10000A7E8(v204, (uint64_t *)&unk_10096AC10);
LABEL_39:
  char v75 = 1;
LABEL_40:
  swift_bridgeObjectRetain();
  NSString v121 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v122 = 1;
  id v123 = [self _typeWithIdentifier:v121 allowUndeclared:1];

  os_log_type_t v124 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56);
  if (v123)
  {
    unint64_t v125 = v196;
    v124(v196, 1, 1, v78);
    sub_1005D7A14(&qword_10096B5B8, (void (*)(uint64_t))&type metadata accessor for UTType);
    dispatch thunk of static _ObjectiveCBridgeable._conditionallyBridgeFromObjectiveC(_:result:)();
    uint64_t v126 = v125;
    uint64_t v77 = v208;

    int v127 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 48))(v126, 1, v78);
    uint64_t v128 = (uint64_t)v206;
    if (v127 != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v206, v126, v78);
      uint64_t v122 = 0;
    }
  }
  else
  {
    uint64_t v128 = (uint64_t)v206;
  }
  v124((char *)v128, v122, 1, v78);
  uint64_t v129 = v202;
  sub_10024A330(v128, v202, &qword_10096B5B0);
  if ((v75 & 1) == 0)
  {
    uint64_t v131 = v193;
    static UTType.livePhoto.getter();
    uint64_t v132 = UTType.identifier.getter();
    uint64_t v134 = v133;
    v197(v131, v78);
    if (v132 == v209 && v134 == v79)
    {
      swift_bridgeObjectRelease();
      uint64_t v135 = v194;
      sub_10024A330(v129, v194, &qword_10096B5B0);
      uint64_t v136 = v195;
    }
    else
    {
      char v137 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t v135 = v194;
      sub_10024A330(v129, v194, &qword_10096B5B0);
      uint64_t v136 = v195;
      if ((v137 & 1) == 0)
      {
        uint64_t v130 = v183;
        sub_10024A330(v135, v183, &qword_10096B5B0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v130, 1, v78) == 1)
        {
          sub_10000A7E8(v135, &qword_10096B5B0);
          sub_10000A7E8(v129, &qword_10096B5B0);
          goto LABEL_46;
        }
        uint64_t v159 = v182;
        static UTType.livePhoto.getter();
        char v160 = UTType.conforms(to:)();
        uint64_t v161 = v135;
        uint64_t v162 = (void (*)(uint64_t, uint64_t))v197;
        v197(v159, v78);
        sub_10000A7E8(v161, &qword_10096B5B0);
        sub_10000A7E8(v202, &qword_10096B5B0);
        v162(v130, v78);
        if ((v160 & 1) == 0) {
          goto LABEL_66;
        }
LABEL_52:
        unint64_t v138 = v190;
        uint64_t v139 = v211;
        (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v190, v205, v211);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v138, 0, 1, v139);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v138, 1, v139) == 1)
        {
          uint64_t v141 = 0;
        }
        else
        {
          URL._bridgeToObjectiveC()(v140);
          uint64_t v141 = v142;
          (*(void (**)(char *, uint64_t))(v76 + 8))(v138, v139);
        }
        uint64_t v143 = v189;
        id v144 = [objc_allocWithZone((Class)PFVideoComplement) initWithBundleAtURL:v141];

        if (!v144) {
          goto LABEL_66;
        }
        id v145 = [v144 imagePath];
        if (!v145)
        {

          goto LABEL_66;
        }
        uint64_t v146 = v145;
        uint64_t v147 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v149 = v148;

        URL.init(fileURLWithPath:)();
        sub_10000A844((uint64_t *)&unk_10096CE70);
        uint64_t v150 = swift_initStackObject();
        *(_OWORD *)(v150 + 16) = xmmword_10076E7A0;
        *(void *)(v150 + 32) = NSURLTypeIdentifierKey;
        uint64_t v151 = NSURLTypeIdentifierKey;
        sub_1002C89FC(v150);
        swift_setDeallocating();
        type metadata accessor for URLResourceKey(0);
        swift_arrayDestroy();
        uint64_t v152 = v199;
        URL.resourceValues(forKeys:)();
        if (v152)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v76 + 8))(v136, v211);
          if (qword_10096A038 != -1) {
            swift_once();
          }
          uint64_t v153 = type metadata accessor for Logger();
          sub_10000B47C(v153, (uint64_t)qword_10097A9A0);
          swift_errorRetain();
          swift_errorRetain();
          swift_bridgeObjectRetain();
          BOOL v154 = Logger.logObject.getter();
          os_log_type_t v155 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v154, v155))
          {
            uint64_t v156 = swift_slowAlloc();
            unint64_t v157 = (void *)swift_slowAlloc();
            uint64_t v213 = swift_slowAlloc();
            *(_DWORD *)uint64_t v156 = 136315394;
            swift_bridgeObjectRetain();
            uint64_t v212 = sub_100254634(v147, v149, &v213);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v156 + 12) = 2112;
            swift_errorRetain();
            uint64_t v158 = _swift_stdlib_bridgeErrorToNSError();
            uint64_t v212 = v158;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *unint64_t v157 = v158;
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v154, v155, "Subtype for live photo couldn't be determined for URL: %s. Error: %@", (uint8_t *)v156, 0x16u);
            sub_10000A844(&qword_10096B850);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_errorRelease();
            swift_errorRelease();
            swift_bridgeObjectRelease_n();
          }
          swift_errorRelease();

          uint64_t v163 = (uint64_t)v206;
          goto LABEL_67;
        }
        swift_bridgeObjectRelease();
        uint64_t v166 = URLResourceValues.typeIdentifier.getter();
        uint64_t v168 = v167;
        (*(void (**)(char *, uint64_t))(v185 + 8))(v143, v186);
        (*(void (**)(char *, uint64_t))(v76 + 8))(v136, v211);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v169 = v178;
        static UTType.jpeg.getter();
        uint64_t v170 = UTType.identifier.getter();
        uint64_t v172 = v171;
        uint64_t v173 = v169;
        uint64_t v174 = v207;
        v197(v173, v207);
        if (v168)
        {
          id v175 = v182;
          if (v166 == v170 && v168 == v172)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_77:
            static UTType.jpeg.getter();
LABEL_79:
            uint64_t v177 = (uint64_t)v206;
            uint64_t v164 = UTType.identifier.getter();

            v197(v175, v174);
            sub_10000A7E8(v177, &qword_10096B5B0);
            return (char *)v164;
          }
          char v176 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v176) {
            goto LABEL_77;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          id v175 = v182;
        }
        static UTType.heic.getter();
        goto LABEL_79;
      }
    }
    sub_10000A7E8(v135, &qword_10096B5B0);
    sub_10000A7E8(v129, &qword_10096B5B0);
    goto LABEL_52;
  }
  uint64_t v130 = v129;
LABEL_46:
  sub_10000A7E8(v130, &qword_10096B5B0);
LABEL_66:
  uint64_t v163 = v128;
LABEL_67:
  sub_10000A7E8(v163, &qword_10096B5B0);
  return v200;
}

uint64_t sub_1005D66E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t *a4@<X8>)
{
  int v82 = a3;
  uint64_t v93 = a2;
  uint64_t v83 = a4;
  uint64_t v90 = type metadata accessor for URLResourceValues();
  uint64_t v91 = *(void *)(v90 - 8);
  uint64_t v5 = __chkstk_darwin(v90);
  id v84 = &v71[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = &v71[-v8];
  __chkstk_darwin(v7);
  uint64_t v11 = &v71[-v10];
  uint64_t v87 = (void (*)(unsigned char *, uint64_t))sub_10000A844(&qword_10096B5B0);
  __chkstk_darwin(v87);
  uint64_t v89 = &v71[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for UTType();
  uint64_t v86 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v88 = &v71[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_10000A844((uint64_t *)&unk_10096CE70);
  uint64_t inited = swift_initStackObject();
  long long v85 = xmmword_10076E7A0;
  *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
  *(void *)(inited + 32) = NSURLContentTypeKey;
  uint64_t v17 = NSURLContentTypeKey;
  sub_1002C89FC(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  uint64_t v19 = v18;
  swift_arrayDestroy();
  uint64_t v94 = a1;
  uint64_t v20 = v92;
  URL.resourceValues(forKeys:)();
  if (v20)
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = type metadata accessor for URL();
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
    v22(v93, v21);
    return ((uint64_t (*)(uint64_t, uint64_t))v22)(v94, v21);
  }
  else
  {
    uint64_t v92 = v13;
    uint64_t v79 = v19;
    uint64_t v78 = v15;
    id v80 = v9;
    swift_bridgeObjectRelease();
    uint64_t v24 = (uint64_t)v89;
    URLResourceValues.contentType.getter();
    uint64_t v26 = v91 + 8;
    uint64_t v25 = *(void (**)(unsigned char *, uint64_t))(v91 + 8);
    v25(v11, v90);
    unint64_t v96 = 0;
    unint64_t v97 = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    swift_bridgeObjectRelease();
    unint64_t v96 = 0xD00000000000001FLL;
    unint64_t v97 = 0x80000001007C3330;
    uint64_t v27 = type metadata accessor for URL();
    sub_1005D7A14((unint64_t *)&qword_10096B590, (void (*)(uint64_t))&type metadata accessor for URL);
    v28._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v28);
    swift_bridgeObjectRelease();
    v29._countAndFlagsBits = 125;
    v29._object = (void *)0xE100000000000000;
    String.append(_:)(v29);
    uint64_t v30 = v88;
    unint64_t v81 = 0x80000001007C3350;
    Optional.tryUnwrap(_:file:line:)();
    uint64_t v87 = v25;
    uint64_t v91 = v26;
    sub_10000A7E8(v24, &qword_10096B5B0);
    swift_bridgeObjectRelease();
    uint64_t v31 = UTType.identifier.getter();
    uint64_t v33 = v32;
    (*(void (**)(char *, uint64_t))(v86 + 8))(v30, v92);
    uint64_t v92 = v27;
    id v88 = sub_1005D4E94(v94, v31, v33);
    uint64_t v89 = v34;
    URL._bridgeToObjectiveC()(&var18);
    uint64_t v36 = v35;
    URL._bridgeToObjectiveC()(v37);
    CFURLRef v39 = v38;
    uint64_t v40 = sub_1001B1F9C(v36, v38);

    uint64_t v95 = v40;
    unint64_t v96 = 0;
    unint64_t v97 = 0xE000000000000000;
    _StringGuts.grow(_:)(61);
    v41._countAndFlagsBits = 0xD000000000000025;
    v41._object = (void *)0x80000001007C33B0;
    String.append(_:)(v41);
    v42._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v42);
    swift_bridgeObjectRelease();
    v43._countAndFlagsBits = 0xD000000000000013;
    v43._object = (void *)0x80000001007C33E0;
    String.append(_:)(v43);
    v44._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v44);
    swift_bridgeObjectRelease();
    v45._countAndFlagsBits = 125;
    v45._object = (void *)0xE100000000000000;
    String.append(_:)(v45);
    sub_10000A844(&qword_10097AB28);
    Optional.tryUnwrap(_:file:line:)();
    uint64_t v77 = v31;
    unint64_t v81 = v33;
    swift_bridgeObjectRelease();
    uint64_t v46 = v98;
    uint64_t v76 = String.init(cString:)();
    uint64_t v86 = v47;
    free(v46);
    uint64_t v75 = URL.lastPathComponent.getter();
    uint64_t v49 = v48;
    uint64_t v50 = swift_initStackObject();
    *(_OWORD *)(v50 + 16) = v85;
    *(void *)(v50 + 32) = NSURLFileSizeKey;
    uint64_t v51 = NSURLFileSizeKey;
    sub_1002C89FC(v50);
    swift_setDeallocating();
    swift_arrayDestroy();
    uint64_t v52 = v80;
    URL.resourceValues(forKeys:)();
    uint64_t v74 = v49;
    swift_bridgeObjectRelease();
    uint64_t v73 = URLResourceValues.fileSize.getter();
    int v72 = v53;
    uint64_t v54 = v87;
    v87(v52, v90);
    uint64_t v55 = swift_initStackObject();
    *(_OWORD *)(v55 + 16) = v85;
    *(void *)(v55 + 32) = NSURLIsDirectoryKey;
    uint64_t v56 = NSURLIsDirectoryKey;
    sub_1002C89FC(v55);
    swift_setDeallocating();
    swift_arrayDestroy();
    uint64_t v57 = v84;
    URL.resourceValues(forKeys:)();
    unint64_t v58 = v81;
    swift_bridgeObjectRelease();
    if (v72) {
      uint64_t v59 = 0;
    }
    else {
      uint64_t v59 = v73;
    }
    char v60 = URLResourceValues.isDirectory.getter();
    uint64_t v61 = v57;
    char v62 = v60;
    v54(v61, v90);
    unint64_t v63 = v58;
    uint64_t v64 = v92;
    uint64_t v65 = *(void (**)(uint64_t, uint64_t))(*(void *)(v92 - 8) + 8);
    v65(v93, v92);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v65)(v94, v64);
    char v66 = v82 & 1;
    uint64_t v67 = v83;
    uint64_t v68 = v74;
    *uint64_t v83 = v75;
    v67[1] = v68;
    v67[2] = v77;
    v67[3] = v63;
    char v69 = v89;
    v67[4] = (uint64_t)v88;
    v67[5] = (uint64_t)v69;
    v67[6] = v59;
    *((unsigned char *)v67 + 56) = 0;
    uint64_t v70 = v86;
    v67[8] = v76;
    v67[9] = v70;
    *((unsigned char *)v67 + 80) = v62 & 1;
    *((unsigned char *)v67 + 81) = v66;
  }
  return result;
}

uint64_t sub_1005D712C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A844(&qword_10097AAA0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  sub_1005D76E8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_10024D338((uint64_t)a1);
  }
  LOBYTE(v41) = 0;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  uint64_t v40 = v9;
  LOBYTE(v41) = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v14 = v13;
  uint64_t v38 = v12;
  uint64_t v39 = v11;
  LOBYTE(v41) = 2;
  swift_bridgeObjectRetain();
  uint64_t v15 = v14;
  int v43 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  LOBYTE(v41) = 3;
  uint64_t v16 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v18 = v17;
  uint64_t v35 = v16;
  LOBYTE(v41) = 4;
  swift_bridgeObjectRetain();
  uint64_t v36 = 0;
  uint64_t v34 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  LOBYTE(v41) = 5;
  uint64_t v37 = v19;
  swift_bridgeObjectRetain();
  uint64_t v32 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  char v44 = 6;
  uint64_t v21 = v20;
  sub_1002CC1F4();
  uint64_t v33 = v21;
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v22 = v41;
  unint64_t v23 = v42;
  uint64_t v36 = v41;
  uint64_t v24 = v39;
  swift_bridgeObjectRetain();
  uint64_t v25 = v18;
  uint64_t v26 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v27 = v37;
  swift_bridgeObjectRetain();
  uint64_t v28 = v33;
  swift_bridgeObjectRetain();
  sub_100278C78(v22, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10024D338((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v29 = v36;
  uint64_t result = sub_100250CB0(v36, v23);
  *(void *)a2 = v40;
  *(void *)(a2 + 8) = v24;
  *(void *)(a2 + 16) = v38;
  *(void *)(a2 + 24) = v26;
  *(unsigned char *)(a2 + 32) = v43;
  *(void *)(a2 + 40) = v35;
  *(void *)(a2 + 48) = v25;
  *(void *)(a2 + 56) = v34;
  *(void *)(a2 + 64) = v27;
  *(void *)(a2 + 72) = v32;
  *(void *)(a2 + 80) = v28;
  *(void *)(a2 + 88) = v29;
  *(void *)(a2 + 96) = v23;
  return result;
}

unint64_t sub_1005D76E8()
{
  unint64_t result = qword_10097AAA8;
  if (!qword_10097AAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097AAA8);
  }
  return result;
}

unint64_t sub_1005D773C()
{
  unint64_t result = qword_10097AAC0;
  if (!qword_10097AAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097AAC0);
  }
  return result;
}

unint64_t sub_1005D7790()
{
  unint64_t result = qword_10097AAE0;
  if (!qword_10097AAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097AAE0);
  }
  return result;
}

uint64_t sub_1005D77E4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100247840((uint64_t *)&unk_100974C30);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005D7848(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100247840(&qword_10097AA88);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1005D78B8()
{
  unint64_t result = qword_10097AB08;
  if (!qword_10097AB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10097AB08);
  }
  return result;
}

uint64_t sub_1005D790C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_10000A6F4;
  return sub_1005D12B8(a1, a2, v6, v7, v8);
}

double sub_1005D79D0@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1005D1B78(a1, *(void *)(v3 + 16), a2, a3);
}

double sub_1005D79F0@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1005D19DC(a1, *(void *)(v3 + 16), *(void *)(v3 + 32), a2, a3);
}

uint64_t sub_1005D7A14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s14descr1008C9AB9V10AskRequestV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *uint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005D7B28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr1008C9AB9V10AskRequestV10CodingKeysOMa()
{
  return &_s14descr1008C9AB9V10AskRequestV10CodingKeysON;
}

ValueMetadata *_s14descr1008C9AB9V11AskResponseV10CodingKeysOMa()
{
  return &_s14descr1008C9AB9V11AskResponseV10CodingKeysON;
}

uint64_t _s14descr1008C9AB9V10AskRequestV8FileInfoVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s14descr1008C9AB9V10AskRequestV8FileInfoVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14descr1008C9AB9V10AskRequestV8FileInfoVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  return a1;
}

__n128 _s14descr1008C9AB9V10AskRequestV8FileInfoVwtk(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t _s14descr1008C9AB9V10AskRequestV8FileInfoVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  return a1;
}

uint64_t _s14descr1008C9AB9V10AskRequestV8FileInfoVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 82)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr1008C9AB9V10AskRequestV8FileInfoVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 82) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 82) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s14descr1008C9AB9V10AskRequestV8FileInfoVMa()
{
  return &_s14descr1008C9AB9V10AskRequestV8FileInfoVN;
}

unint64_t sub_1005D7E74()
{
  unint64_t result = qword_10097AB30;
  if (!qword_10097AB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097AB30);
  }
  return result;
}

unint64_t sub_1005D7ECC()
{
  unint64_t result = qword_10097AB38;
  if (!qword_10097AB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097AB38);
  }
  return result;
}

unint64_t sub_1005D7F24()
{
  unint64_t result = qword_10097AB40;
  if (!qword_10097AB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097AB40);
  }
  return result;
}

unint64_t sub_1005D7F7C()
{
  unint64_t result = qword_10097AB48;
  if (!qword_10097AB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097AB48);
  }
  return result;
}

unint64_t sub_1005D7FD4()
{
  unint64_t result = qword_10097AB50;
  if (!qword_10097AB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097AB50);
  }
  return result;
}

unint64_t sub_1005D802C()
{
  unint64_t result = qword_10097AB58;
  if (!qword_10097AB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097AB58);
  }
  return result;
}

unint64_t sub_1005D8080(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  unint64_t v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease();
  if (v5 >= 7) {
    return 7;
  }
  else {
    return v5;
  }
}

uint64_t sub_1005D80C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A844(&qword_10097AB60);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10026BB6C(a1, a1[3]);
  sub_1005D8538();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_10024D338((uint64_t)a1);
  }
  char v41 = 0;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  uint64_t v34 = v9;
  char v40 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v14 = v13;
  uint64_t v32 = v12;
  uint64_t v33 = v11;
  char v39 = 2;
  swift_bridgeObjectRetain();
  uint64_t v15 = v14;
  uint64_t v31 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  char v38 = 3;
  uint64_t v17 = v16;
  swift_bridgeObjectRetain();
  uint64_t v18 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  int v28 = v19;
  uint64_t v29 = v18;
  char v37 = 4;
  uint64_t v27 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  char v36 = 5;
  uint64_t v30 = v20;
  swift_bridgeObjectRetain();
  int v26 = KeyedDecodingContainer.decode(_:forKey:)();
  char v35 = 6;
  LOBYTE(v14) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v26 &= 1u;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_10024D338((uint64_t)a1);
  uint64_t v21 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = v15;
  swift_bridgeObjectRelease();
  uint64_t v23 = v33;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v34;
  *(void *)(a2 + 8) = v23;
  *(void *)(a2 + 16) = v32;
  *(void *)(a2 + 24) = v22;
  *(void *)(a2 + 32) = v31;
  *(void *)(a2 + 40) = v17;
  *(void *)(a2 + 48) = v29;
  *(unsigned char *)(a2 + 56) = v28 & 1;
  *(void *)(a2 + 64) = v27;
  *(void *)(a2 + 72) = v21;
  *(unsigned char *)(a2 + 80) = v26;
  *(unsigned char *)(a2 + 81) = v14;
  return result;
}

unint64_t sub_1005D8538()
{
  unint64_t result = qword_10097AB68;
  if (!qword_10097AB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097AB68);
  }
  return result;
}

unsigned char *_s14descr1008C9AB9V11AskResponseV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005D8658);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr1008C9AB9V10AskRequestV8FileInfoV10CodingKeysOMa()
{
  return &_s14descr1008C9AB9V10AskRequestV8FileInfoV10CodingKeysON;
}

unint64_t sub_1005D8694()
{
  unint64_t result = qword_10097AB78;
  if (!qword_10097AB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097AB78);
  }
  return result;
}

unint64_t sub_1005D86EC()
{
  unint64_t result = qword_10097AB80;
  if (!qword_10097AB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097AB80);
  }
  return result;
}

unint64_t sub_1005D8744()
{
  unint64_t result = qword_10097AB88;
  if (!qword_10097AB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097AB88);
  }
  return result;
}

unsigned char *_s8KeyClassOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005D8864);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8KeyClassOMa()
{
  return &_s8KeyClassON;
}

unint64_t sub_1005D88A0()
{
  unint64_t result = qword_10097AB90;
  if (!qword_10097AB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097AB90);
  }
  return result;
}

uint64_t sub_1005D88F4()
{
  return qword_10077E368[*v0];
}

uint64_t *sub_1005D890C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      swift_retain();
      uint64_t v7 = *(int *)(sub_10000A844(&qword_100970300) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1005D8A54(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    swift_release();
    uint64_t v3 = a1 + *(int *)(sub_10000A844(&qword_100970300) + 48);
    uint64_t v4 = type metadata accessor for UUID();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(v3, v4);
  }
  else if (result <= 1)
  {
    return swift_release();
  }
  return result;
}

void *sub_1005D8B18(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *a1 = *a2;
    swift_retain();
    uint64_t v4 = *(int *)(sub_10000A844(&qword_100970300) + 48);
    int v5 = (char *)a1 + v4;
    uint64_t v6 = (char *)a2 + v4;
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1005D8BF0(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1005D92AC((uint64_t)a1, type metadata accessor for SDAirDropServerConnection);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      swift_retain();
      uint64_t v4 = *(int *)(sub_10000A844(&qword_100970300) + 48);
      int v5 = (char *)a1 + v4;
      uint64_t v6 = (char *)a2 + v4;
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for SDAirDropServerConnection(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10097AC30);
}

void *sub_1005D8D0C(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(sub_10000A844(&qword_100970300) + 48);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1005D8DE4(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1005D92AC((uint64_t)a1, type metadata accessor for SDAirDropServerConnection);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(sub_10000A844(&qword_100970300) + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1005D8EE8()
{
  uint64_t v3 = (char *)&value witness table for Builtin.NativeObject + 64;
  uint64_t v4 = (char *)&value witness table for Builtin.NativeObject + 64;
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    int v5 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1005D8F98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_unknownObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1005D9098(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for SFAirDrop.TransferIdentifier();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_unknownObjectRelease();
  }
}

void *sub_1005D9128(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_unknownObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1005D91D8(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1005D92AC((uint64_t)a1, type metadata accessor for SDAirDropServerConnectionIdentity);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_unknownObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1005D92AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for SDAirDropServerConnectionIdentity(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10097ACD8);
}

void *sub_1005D932C(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1005D93E4(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1005D92AC((uint64_t)a1, type metadata accessor for SDAirDropServerConnectionIdentity);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1005D94C0()
{
  uint64_t result = type metadata accessor for SFAirDrop.TransferIdentifier();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1005D9554(uint64_t a1, uint64_t a2)
{
  v3[21] = a2;
  v3[22] = v2;
  v3[20] = a1;
  uint64_t v4 = type metadata accessor for UUID();
  v3[23] = v4;
  v3[24] = *(void *)(v4 - 8);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096DFB0);
  v3[27] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v3[28] = v5;
  v3[29] = *(void *)(v5 - 8);
  v3[30] = swift_task_alloc();
  type metadata accessor for SDAirDropMessage();
  v3[31] = swift_task_alloc();
  v3[32] = type metadata accessor for SDAirDropServerConnection(0);
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  v3[35] = swift_task_alloc();
  v3[36] = swift_task_alloc();
  return _swift_task_switch(sub_1005D9738, 0, 0);
}

uint64_t sub_1005D9738()
{
  if (qword_10096A040 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[37] = sub_10000B47C(v1, (uint64_t)qword_10097ABA0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Ready to receive AirDrop Message", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[36];
  uint64_t v6 = v0[22];

  sub_1005DBF64(v6, v5, type metadata accessor for SDAirDropServerConnection);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    uint64_t v8 = (char *)v0[36];
    uint64_t v9 = v0[23];
    uint64_t v10 = v0[24];
    uint64_t v7 = *(void *)v8;
    uint64_t v11 = sub_10000A844(&qword_100970300);
    (*(void (**)(char *, uint64_t))(v10 + 8))(&v8[*(int *)(v11 + 48)], v9);
  }
  else
  {
    uint64_t v7 = *(void *)v0[36];
  }
  v0[38] = v7;
  uint64_t v12 = swift_task_alloc();
  v0[39] = v12;
  *(void *)(v12 + 16) = v7;
  *(void *)(v12 + 24) = 0;
  uint64_t v13 = (void *)swift_task_alloc();
  v0[40] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1005D9970;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000027, 0x80000001007C34E0, sub_1005DD5A8, v12, &type metadata for SDNWHTTPMessage);
}

uint64_t sub_1005D9970()
{
  *(void *)(*(void *)v1 + 328) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1005DA4B4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1005D9A8C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005D9A8C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 32);
  *(void *)(v0 + 136) = v1;
  os_log_type_t v3 = *(uint8_t **)(v0 + 16);
  uint64_t v2 = *(NSObject **)(v0 + 24);
  *(void *)(v0 + 336) = v2;
  *(void *)(v0 + 344) = v1;
  unint64_t v5 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  *(void *)(v0 + 352) = v5;
  *(void *)(v0 + 360) = v4;
  uint64_t v71 = v4;
  int v6 = *(unsigned __int8 *)(v0 + 56);
  *(void *)(v0 + 144) = v5;
  BOOL v7 = v3 == (uint8_t *)0x64616F6C70552FLL && v2 == 0xE700000000000000;
  if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    sub_10025ADCC(v1, v5);
    uint64_t v67 = *(void *)(v0 + 328);
    sub_10025ADCC(v1, v5);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 134217984;
      uint64_t v11 = v10;
      uint64_t v12 = 0;
      switch(v5 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(v1) - v1;
          if (__OFSUB__(HIDWORD(v1), v1))
          {
            __break(1u);
LABEL_41:
            __break(1u);
            JUMPOUT(0x1005DA4A4);
          }
          uint64_t v12 = (int)v12;
LABEL_15:
          *(void *)(v0 + 152) = v12;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          sub_100250CC4(v1, v5);
          _os_log_impl((void *)&_mh_execute_header, v8, v9, "Received HTTP message data %ld", v11, 0xCu);
          swift_slowDealloc();
          break;
        case 2uLL:
          uint64_t v15 = *(void *)(v1 + 16);
          uint64_t v14 = *(void *)(v1 + 24);
          BOOL v16 = __OFSUB__(v14, v15);
          uint64_t v12 = v14 - v15;
          if (!v16) {
            goto LABEL_15;
          }
          goto LABEL_41;
        case 3uLL:
          goto LABEL_15;
        default:
          uint64_t v12 = BYTE6(v5);
          goto LABEL_15;
      }
    }
    else
    {
      sub_100250CC4(v1, v5);
    }
    uint64_t v17 = *(_OWORD **)(v0 + 248);

    swift_beginAccess();
    uint64_t v19 = *(void *)(v0 + 136);
    unint64_t v18 = *(void *)(v0 + 144);
    sub_10025ADCC(v19, v18);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_1006AC10C(v3, v2, v71, v6, v19, v18, v17);
    if (v67)
    {
      sub_100250CC4(v19, v18);
      swift_bridgeObjectRelease();
      sub_100250CC4(v1, v5);
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v20 = v19;
      unint64_t v21 = v18;
LABEL_18:
      sub_100250CC4(v20, v21);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
LABEL_35:
      return v22();
    }
    uint64_t v23 = *(void *)(v0 + 272);
    uint64_t v24 = *(void *)(v0 + 176);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_100250CC4(v19, v18);
    sub_1005DBF64(v24, v23, type metadata accessor for SDAirDropServerConnection);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v26 = *(void *)(v0 + 224);
        uint64_t v27 = *(void *)(v0 + 232);
        uint64_t v28 = *(void *)(v0 + 216);
        swift_release();
        sub_100579264(v28);
        int v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v28, 1, v26);
        uint64_t v30 = *(void *)(v0 + 248);
        if (v29 == 1)
        {
          sub_1004654A8(*(void *)(v0 + 216));
          uint64_t v31 = type metadata accessor for SFAirDropReceive.Failure();
          sub_1005DD5B8(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
          swift_allocError();
          (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v31 - 8) + 104))(v32, enum case for SFAirDropReceive.Failure.badRequest(_:), v31);
          swift_willThrow();
          swift_bridgeObjectRelease();
          sub_100250CC4(v1, v5);
          swift_unknownObjectRelease();
          uint64_t v33 = v30;
LABEL_39:
          sub_1005D92AC(v33, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
          uint64_t v20 = *(void *)(v0 + 136);
          unint64_t v21 = *(void *)(v0 + 144);
          goto LABEL_18;
        }
        uint64_t v49 = *(void *)(v0 + 232);
        uint64_t v48 = *(void *)(v0 + 240);
        uint64_t v50 = *(void *)(v0 + 224);
        uint64_t v70 = *(void *)(v0 + 248);
        uint64_t v51 = *(void *)(v0 + 168);
        uint64_t v66 = *(void *)(v0 + 216);
        uint64_t v69 = *(void *)(v0 + 160);
        sub_100250CC4(v19, v18);
        swift_bridgeObjectRelease();
        sub_100250CC4(v1, v5);
        swift_unknownObjectRelease();
        uint64_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32);
        v52(v48, v66, v50);
        sub_1005DD600(v70, v69);
        v52(v51, v48, v50);
        type metadata accessor for SDAirDropServerConnectionIdentity(0);
      }
      else
      {
        uint64_t v36 = *(void *)(v0 + 272);
        uint64_t v37 = *(void *)(v0 + 248);
        uint64_t v39 = *(void *)(v0 + 200);
        uint64_t v38 = *(void *)(v0 + 208);
        uint64_t v41 = *(void *)(v0 + 184);
        uint64_t v40 = *(void *)(v0 + 192);
        uint64_t v68 = *(void *)(v0 + 160);
        swift_release();
        uint64_t v42 = sub_10000A844(&qword_100970300);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v38, v36 + *(int *)(v42 + 48), v41);
        sub_1005DBF64(v37, v68, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v39, v38, v41);
        SFAirDrop.TransferIdentifier.init(_:)();
        swift_bridgeObjectRelease();
        sub_100250CC4(v1, v5);
        swift_unknownObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v41);
        sub_1005D92AC(v37, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
        sub_100250CC4(*(void *)(v0 + 136), *(void *)(v0 + 144));
        type metadata accessor for SDAirDropServerConnectionIdentity(0);
      }
    }
    else
    {
      uint64_t v34 = *(void *)(v0 + 264);
      uint64_t v35 = *(void *)(v0 + 176);
      swift_release();
      sub_1005DBF64(v35, v34, type metadata accessor for SDAirDropServerConnection);
      if (swift_getEnumCaseMultiPayload() > 1)
      {
        uint64_t v53 = *(void *)(v0 + 264);
        uint64_t v54 = *(void *)(v0 + 184);
        uint64_t v55 = *(void *)(v0 + 192);
        uint64_t v56 = sub_10000A844(&qword_100970300);
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53 + *(int *)(v56 + 48), v54);
      }
      uint64_t v57 = NWConnection.nw.getter();
      swift_release();
      unint64_t v58 = nw_protocol_copy_http_connection_definition();
      nw_protocol_metadata_t v59 = nw_connection_copy_protocol_metadata(v57, v58);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v60 = *(void *)(v0 + 248);
      if (!v59)
      {
        uint64_t v63 = type metadata accessor for SFAirDropReceive.Failure();
        sub_1005DD5B8(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
        swift_allocError();
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v63 - 8) + 104))(v64, enum case for SFAirDropReceive.Failure.badRequest(_:), v63);
        swift_willThrow();
        swift_bridgeObjectRelease();
        sub_100250CC4(v1, v5);
        swift_unknownObjectRelease();
        uint64_t v33 = v60;
        goto LABEL_39;
      }
      uint64_t v62 = *(void *)(v0 + 160);
      uint64_t v61 = *(nw_protocol_metadata_t **)(v0 + 168);
      sub_100250CC4(*(void *)(v0 + 136), *(void *)(v0 + 144));
      swift_bridgeObjectRelease();
      sub_100250CC4(v1, v5);
      swift_unknownObjectRelease();
      sub_1005DD600(v60, v62);
      nw_protocol_metadata_t *v61 = v59;
      type metadata accessor for SDAirDropServerConnectionIdentity(0);
    }
    swift_storeEnumTagMultiPayload();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_35;
  }
  sub_1005DBF64(*(void *)(v0 + 176), *(void *)(v0 + 280), type metadata accessor for SDAirDropServerConnection);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    int v43 = *(uint64_t **)(v0 + 280);
    uint64_t v44 = *(void *)(v0 + 184);
    uint64_t v45 = *(void *)(v0 + 192);
    uint64_t v13 = *v43;
    uint64_t v46 = (char *)v43 + *(int *)(sub_10000A844(&qword_100970300) + 48);
    sub_10025ADCC(v1, v5);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v44);
  }
  else
  {
    uint64_t v13 = **(void **)(v0 + 280);
    sub_10025ADCC(v1, v5);
  }
  *(void *)(v0 + 368) = v13;
  uint64_t v47 = (void *)swift_task_alloc();
  *(void *)(v0 + 376) = v47;
  *uint64_t v47 = v0;
  v47[1] = sub_1005DA598;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 64, 0, 0, 0xD000000000000014, 0x80000001007C3510, sub_1005DD5B0, v13, &type metadata for SDNWHTTPMessage);
}

uint64_t sub_1005DA4B4()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005DA598()
{
  *(void *)(*(void *)v1 + 384) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1005DAF5C;
  }
  else {
    uint64_t v2 = sub_1005DA6AC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005DA6AC()
{
  uint64_t v2 = *(void *)(v0 + 344);
  unint64_t v1 = *(void *)(v0 + 352);
  swift_release();
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v67 = *(uint8_t **)(v0 + 64);
  uint64_t v69 = *(NSObject **)(v0 + 72);
  unint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 96);
  int v65 = *(unsigned __int8 *)(v0 + 104);
  swift_bridgeObjectRelease();
  sub_100250CC4(v2, v1);
  swift_unknownObjectRelease();
  sub_10025ADCC(v3, v4);
  Data.append(_:)();
  sub_100250CC4(v3, v4);
  uint64_t v6 = *(void *)(v0 + 136);
  unint64_t v7 = *(void *)(v0 + 144);
  uint64_t v8 = *(void *)(v0 + 384);
  sub_10025ADCC(v6, v7);
  os_log_type_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v63 = v4;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 134217984;
    uint64_t v12 = v11;
    uint64_t v13 = 0;
    switch(v7 >> 62)
    {
      case 1uLL:
        LODWORD(v13) = HIDWORD(v6) - v6;
        if (__OFSUB__(HIDWORD(v6), v6))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          JUMPOUT(0x1005DAF4CLL);
        }
        uint64_t v13 = (int)v13;
LABEL_8:
        *(void *)(v0 + 152) = v13;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_100250CC4(v6, v7);
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "Received HTTP message data %ld", v12, 0xCu);
        swift_slowDealloc();
        unint64_t v4 = v63;
        break;
      case 2uLL:
        uint64_t v15 = *(void *)(v6 + 16);
        uint64_t v14 = *(void *)(v6 + 24);
        BOOL v16 = __OFSUB__(v14, v15);
        uint64_t v13 = v14 - v15;
        if (!v16) {
          goto LABEL_8;
        }
        goto LABEL_30;
      case 3uLL:
        goto LABEL_8;
      default:
        uint64_t v13 = BYTE6(v7);
        goto LABEL_8;
    }
  }
  else
  {
    sub_100250CC4(v6, v7);
  }
  uint64_t v17 = *(_OWORD **)(v0 + 248);

  swift_beginAccess();
  uint64_t v19 = *(void *)(v0 + 136);
  unint64_t v18 = *(void *)(v0 + 144);
  sub_10025ADCC(v19, v18);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1006AC10C(v67, v69, v5, v65, v19, v18, v17);
  if (v8)
  {
    sub_100250CC4(v19, v18);
    swift_bridgeObjectRelease();
    sub_100250CC4(v3, v4);
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v20 = v19;
    unint64_t v21 = v18;
LABEL_11:
    sub_100250CC4(v20, v21);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_24;
  }
  uint64_t v23 = *(void *)(v0 + 272);
  uint64_t v24 = *(void *)(v0 + 176);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_100250CC4(v19, v18);
  sub_1005DBF64(v24, v23, type metadata accessor for SDAirDropServerConnection);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v26 = *(void *)(v0 + 224);
      uint64_t v27 = *(void *)(v0 + 232);
      uint64_t v28 = *(void *)(v0 + 216);
      swift_release();
      sub_100579264(v28);
      int v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v28, 1, v26);
      uint64_t v30 = *(void *)(v0 + 248);
      if (v29 == 1)
      {
        sub_1004654A8(*(void *)(v0 + 216));
        uint64_t v31 = type metadata accessor for SFAirDropReceive.Failure();
        sub_1005DD5B8(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
        swift_allocError();
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v31 - 8) + 104))(v32, enum case for SFAirDropReceive.Failure.badRequest(_:), v31);
        swift_willThrow();
        swift_bridgeObjectRelease();
        sub_100250CC4(v3, v4);
        swift_unknownObjectRelease();
        uint64_t v33 = v30;
LABEL_28:
        sub_1005D92AC(v33, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
        uint64_t v20 = *(void *)(v0 + 136);
        unint64_t v21 = *(void *)(v0 + 144);
        goto LABEL_11;
      }
      uint64_t v44 = v3;
      uint64_t v46 = *(void *)(v0 + 232);
      uint64_t v45 = *(void *)(v0 + 240);
      uint64_t v47 = *(void *)(v0 + 224);
      uint64_t v48 = *(void *)(v0 + 168);
      uint64_t v66 = *(void *)(v0 + 216);
      uint64_t v68 = *(void *)(v0 + 160);
      sub_100250CC4(v19, v18);
      swift_bridgeObjectRelease();
      sub_100250CC4(v44, v4);
      swift_unknownObjectRelease();
      uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32);
      v49(v45, v66, v47);
      sub_1005DD600(v30, v68);
      v49(v48, v45, v47);
      type metadata accessor for SDAirDropServerConnectionIdentity(0);
    }
    else
    {
      uint64_t v36 = *(void *)(v0 + 272);
      uint64_t v37 = *(void *)(v0 + 248);
      uint64_t v39 = *(void *)(v0 + 200);
      uint64_t v38 = *(void *)(v0 + 208);
      uint64_t v40 = *(void *)(v0 + 184);
      uint64_t v41 = *(void *)(v0 + 192);
      unint64_t v64 = v4;
      uint64_t v42 = *(void *)(v0 + 160);
      swift_release();
      uint64_t v43 = sub_10000A844(&qword_100970300);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v38, v36 + *(int *)(v43 + 48), v40);
      sub_1005DBF64(v37, v42, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v39, v38, v40);
      SFAirDrop.TransferIdentifier.init(_:)();
      swift_bridgeObjectRelease();
      sub_100250CC4(v3, v64);
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v38, v40);
      sub_1005D92AC(v37, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
      sub_100250CC4(*(void *)(v0 + 136), *(void *)(v0 + 144));
      type metadata accessor for SDAirDropServerConnectionIdentity(0);
    }
  }
  else
  {
    uint64_t v34 = *(void *)(v0 + 264);
    uint64_t v35 = *(void *)(v0 + 176);
    swift_release();
    sub_1005DBF64(v35, v34, type metadata accessor for SDAirDropServerConnection);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      uint64_t v50 = *(void *)(v0 + 264);
      uint64_t v51 = *(void *)(v0 + 184);
      uint64_t v52 = *(void *)(v0 + 192);
      uint64_t v53 = sub_10000A844(&qword_100970300);
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v50 + *(int *)(v53 + 48), v51);
    }
    uint64_t v54 = NWConnection.nw.getter();
    swift_release();
    uint64_t v55 = nw_protocol_copy_http_connection_definition();
    nw_protocol_metadata_t v56 = nw_connection_copy_protocol_metadata(v54, v55);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v57 = *(void *)(v0 + 248);
    if (!v56)
    {
      uint64_t v61 = type metadata accessor for SFAirDropReceive.Failure();
      sub_1005DD5B8(&qword_10096BA40, (void (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure);
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v61 - 8) + 104))(v62, enum case for SFAirDropReceive.Failure.badRequest(_:), v61);
      swift_willThrow();
      swift_bridgeObjectRelease();
      sub_100250CC4(v3, v4);
      swift_unknownObjectRelease();
      uint64_t v33 = v57;
      goto LABEL_28;
    }
    uint64_t v59 = *(void *)(v0 + 160);
    unint64_t v58 = *(nw_protocol_metadata_t **)(v0 + 168);
    sub_100250CC4(*(void *)(v0 + 136), *(void *)(v0 + 144));
    swift_bridgeObjectRelease();
    sub_100250CC4(v3, v4);
    swift_unknownObjectRelease();
    sub_1005DD600(v57, v59);
    *unint64_t v58 = v56;
    type metadata accessor for SDAirDropServerConnectionIdentity(0);
  }
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
LABEL_24:
  return v22();
}

uint64_t sub_1005DAF5C()
{
  uint64_t v2 = v0[43];
  unint64_t v1 = v0[44];
  swift_release();
  swift_bridgeObjectRelease();
  sub_100250CC4(v2, v1);
  swift_unknownObjectRelease();
  sub_100250CC4(v0[17], v0[18]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

unint64_t sub_1005DB064()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SFAirDrop.TransferIdentifier();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SDAirDropServerConnectionIdentity(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (void *)((char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1005DBF64(v1, (uint64_t)v8, type metadata accessor for SDAirDropServerConnectionIdentity);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v3 + 32))(v5, v8, v2);
    unint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    _StringGuts.grow(_:)(21);
    swift_bridgeObjectRelease();
    unint64_t v16 = 0xD000000000000012;
    unint64_t v17 = 0x80000001007C3400;
    sub_1005DD5B8(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
    v9._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    v10._countAndFlagsBits = 41;
    v10._object = (void *)0xE100000000000000;
    String.append(_:)(v10);
    unint64_t v11 = v16;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    uint64_t v12 = *v8;
    unint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    _StringGuts.grow(_:)(33);
    v13._countAndFlagsBits = 0xD00000000000001FLL;
    v13._object = (void *)0x80000001007C3420;
    String.append(_:)(v13);
    v15[1] = v12;
    sub_10000A844(&qword_10097AD18);
    _print_unlocked<A, B>(_:_:)();
    swift_unknownObjectRelease();
    return v16;
  }
  return v11;
}

uint64_t sub_1005DB2F4(int a1)
{
  uint64_t v2 = v1;
  int v34 = a1;
  uint64_t v3 = type metadata accessor for SDAirDropServerConnection(0);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  Swift::String v9 = (char *)&v31 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v31 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v31 - v13;
  if (qword_10096A040 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_10000B47C(v15, (uint64_t)qword_10097ABA0);
  sub_1005DBF64(v1, (uint64_t)v14, type metadata accessor for SDAirDropServerConnection);
  unint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v31 = v1;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315394;
    sub_1005DBF64((uint64_t)v14, (uint64_t)v12, type metadata accessor for SDAirDropServerConnection);
    unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v32 = v6;
    uint64_t v33 = v3;
    if (EnumCaseMultiPayload > 1)
    {
      uint64_t v20 = &v12[*(int *)(sub_10000A844(&qword_100970300) + 48)];
      uint64_t v21 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
    }
    uint64_t v22 = NWConnection.debugDescription.getter();
    unint64_t v24 = v23;
    swift_release();
    uint64_t v35 = sub_100254634(v22, v24, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1005D92AC((uint64_t)v14, type metadata accessor for SDAirDropServerConnection);
    *(_WORD *)(v18 + 12) = 1024;
    char v25 = v34;
    LODWORD(v35) = v34 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Cancelling connection %s forced %{BOOL}d", (uint8_t *)v18, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v6 = v32;
    uint64_t v2 = v31;
    if (v25) {
      goto LABEL_11;
    }
  }
  else
  {
    sub_1005D92AC((uint64_t)v14, type metadata accessor for SDAirDropServerConnection);

    if (v34)
    {
LABEL_11:
      sub_1005DBF64(v2, (uint64_t)v9, type metadata accessor for SDAirDropServerConnection);
      if (swift_getEnumCaseMultiPayload() > 1)
      {
        uint64_t v28 = &v9[*(int *)(sub_10000A844(&qword_100970300) + 48)];
        uint64_t v29 = type metadata accessor for UUID();
        (*(void (**)(char *, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
      }
      NWConnection.forceCancel()();
      return swift_release();
    }
  }
  sub_1005DBF64(v2, (uint64_t)v6, type metadata accessor for SDAirDropServerConnection);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    uint64_t v26 = &v6[*(int *)(sub_10000A844(&qword_100970300) + 48)];
    uint64_t v27 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
  }
  NWConnection.cancel()();
  return swift_release();
}

uint64_t sub_1005DB794()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097ABA0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097ABA0);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1005DB860(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  v2[5] = type metadata accessor for SDAirDropServerConnection(0);
  v2[6] = swift_task_alloc();
  type metadata accessor for SDAirDropMessage();
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_1005DB920, 0, 0);
}

uint64_t sub_1005DB920()
{
  unint64_t v24 = v0;
  if (qword_10096A040 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[7];
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000B47C(v3, (uint64_t)qword_10097ABA0);
  sub_1005DBF64(v1, v2, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[7];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    unint64_t v9 = sub_100574A74();
    v0[2] = sub_100254634(v9, v10, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1005D92AC(v7, (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Sending response message %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1005D92AC(v0[7], (uint64_t (*)(void))type metadata accessor for SDAirDropMessage);
  }

  sub_1005DBF64(v0[4], v0[6], type metadata accessor for SDAirDropServerConnection);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    uint64_t v12 = (uint64_t *)v0[6];
    uint64_t v11 = *v12;
    uint64_t v13 = (char *)v12 + *(int *)(sub_10000A844(&qword_100970300) + 48);
    uint64_t v14 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  else
  {
    uint64_t v11 = *(void *)v0[6];
  }
  v0[8] = v11;
  uint64_t v15 = sub_1006A97C4();
  v0[9] = v15;
  uint64_t v16 = sub_1006A9F00();
  v0[10] = v16;
  v0[11] = v17;
  uint64_t v18 = v16;
  uint64_t v19 = v17;
  uint64_t v20 = swift_task_alloc();
  v0[12] = v20;
  *(void *)(v20 + 16) = v11;
  *(void *)(v20 + 24) = v18;
  *(void *)(v20 + 32) = v19;
  *(void *)(v20 + 40) = v15;
  *(unsigned char *)(v20 + 48) = 1;
  uint64_t v21 = (void *)swift_task_alloc();
  v0[13] = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_1005DBD14;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v21, 0, 0, 0xD000000000000029, 0x80000001007BB130, sub_10039DB08, v20, (char *)&type metadata for () + 8);
}

uint64_t sub_1005DBD14()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1005DBEC4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1005DBE30;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005DBE30()
{
  sub_100250CC4(v0[10], v0[11]);
  swift_unknownObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1005DBEC4()
{
  unint64_t v1 = v0[11];
  uint64_t v2 = v0[10];
  swift_task_dealloc();
  sub_100250CC4(v2, v1);
  swift_unknownObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1005DBF64(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005DBFCC()
{
  v1[2] = v0;
  v1[3] = type metadata accessor for SDAirDropServerConnection(0);
  v1[4] = swift_task_alloc();
  return _swift_task_switch(sub_1005DC060, 0, 0);
}

uint64_t sub_1005DC060()
{
  if (qword_10096A040 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097ABA0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Sending unauthorized error response", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[2];

  v0[5] = nw_http_response_create_well_known();
  metadata_for_response = nw_http_create_metadata_for_response();
  v0[6] = metadata_for_response;
  uint64_t v8 = nw_content_context_create("unauthorized response");
  v0[7] = v8;
  nw_content_context_set_metadata_for_protocol(v8, metadata_for_response);
  sub_1005DBF64(v6, v5, type metadata accessor for SDAirDropServerConnection);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    unint64_t v10 = (uint64_t *)v0[4];
    uint64_t v9 = *v10;
    uint64_t v11 = (char *)v10 + *(int *)(sub_10000A844(&qword_100970300) + 48);
    uint64_t v12 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    uint64_t v9 = *(void *)v0[4];
  }
  v0[8] = v9;
  uint64_t v13 = swift_task_alloc();
  v0[9] = v13;
  *(void *)(v13 + 16) = v9;
  *(_OWORD *)(v13 + 24) = xmmword_100770AE0;
  *(void *)(v13 + 40) = v8;
  *(unsigned char *)(v13 + 48) = 1;
  uint64_t v14 = (void *)swift_task_alloc();
  v0[10] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_1005DC2FC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v14, 0, 0, 0xD000000000000029, 0x80000001007BB130, sub_10039DB08, v13, (char *)&type metadata for () + 8);
}

uint64_t sub_1005DC2FC()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1005DD668;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1005DD664;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005DC418()
{
  v1[2] = v0;
  v1[3] = type metadata accessor for SDAirDropServerConnection(0);
  v1[4] = swift_task_alloc();
  return _swift_task_switch(sub_1005DC4AC, 0, 0);
}

uint64_t sub_1005DC4AC()
{
  if (qword_10096A040 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097ABA0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Sending unsupported error response", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[2];

  v0[5] = nw_http_response_create_well_known();
  metadata_for_response = nw_http_create_metadata_for_response();
  v0[6] = metadata_for_response;
  uint64_t v8 = nw_content_context_create("unsupported response");
  v0[7] = v8;
  nw_content_context_set_metadata_for_protocol(v8, metadata_for_response);
  sub_1005DBF64(v6, v5, type metadata accessor for SDAirDropServerConnection);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    unint64_t v10 = (uint64_t *)v0[4];
    uint64_t v9 = *v10;
    uint64_t v11 = (char *)v10 + *(int *)(sub_10000A844(&qword_100970300) + 48);
    uint64_t v12 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    uint64_t v9 = *(void *)v0[4];
  }
  v0[8] = v9;
  uint64_t v13 = swift_task_alloc();
  v0[9] = v13;
  *(void *)(v13 + 16) = v9;
  *(_OWORD *)(v13 + 24) = xmmword_100770AE0;
  *(void *)(v13 + 40) = v8;
  *(unsigned char *)(v13 + 48) = 1;
  uint64_t v14 = (void *)swift_task_alloc();
  v0[10] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_1005DC2FC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v14, 0, 0, 0xD000000000000029, 0x80000001007BB130, sub_10039DB08, v13, (char *)&type metadata for () + 8);
}

uint64_t sub_1005DC748()
{
  v1[2] = v0;
  v1[3] = type metadata accessor for SDAirDropServerConnection(0);
  v1[4] = swift_task_alloc();
  return _swift_task_switch(sub_1005DC7DC, 0, 0);
}

uint64_t sub_1005DC7DC()
{
  if (qword_10096A040 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097ABA0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Sending insufficient storage error response", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[2];

  v0[5] = nw_http_response_create();
  metadata_for_response = nw_http_create_metadata_for_response();
  v0[6] = metadata_for_response;
  uint64_t v8 = nw_content_context_create("insufficient storage response");
  v0[7] = v8;
  nw_content_context_set_metadata_for_protocol(v8, metadata_for_response);
  sub_1005DBF64(v6, v5, type metadata accessor for SDAirDropServerConnection);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    unint64_t v10 = (uint64_t *)v0[4];
    uint64_t v9 = *v10;
    uint64_t v11 = (char *)v10 + *(int *)(sub_10000A844(&qword_100970300) + 48);
    uint64_t v12 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    uint64_t v9 = *(void *)v0[4];
  }
  v0[8] = v9;
  uint64_t v13 = swift_task_alloc();
  v0[9] = v13;
  *(void *)(v13 + 16) = v9;
  *(_OWORD *)(v13 + 24) = xmmword_100770AE0;
  *(void *)(v13 + 40) = v8;
  *(unsigned char *)(v13 + 48) = 1;
  uint64_t v14 = (void *)swift_task_alloc();
  v0[10] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_1005DC2FC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v14, 0, 0, 0xD000000000000029, 0x80000001007BB130, sub_10039DB08, v13, (char *)&type metadata for () + 8);
}

uint64_t sub_1005DCA80()
{
  v1[2] = v0;
  v1[3] = type metadata accessor for SDAirDropServerConnection(0);
  v1[4] = swift_task_alloc();
  return _swift_task_switch(sub_1005DCB14, 0, 0);
}

uint64_t sub_1005DCB14()
{
  if (qword_10096A040 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097ABA0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Sending server error response", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[2];

  v0[5] = nw_http_response_create_well_known();
  metadata_for_response = nw_http_create_metadata_for_response();
  v0[6] = metadata_for_response;
  uint64_t v8 = nw_content_context_create("server error response");
  v0[7] = v8;
  nw_content_context_set_metadata_for_protocol(v8, metadata_for_response);
  sub_1005DBF64(v6, v5, type metadata accessor for SDAirDropServerConnection);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    unint64_t v10 = (uint64_t *)v0[4];
    uint64_t v9 = *v10;
    uint64_t v11 = (char *)v10 + *(int *)(sub_10000A844(&qword_100970300) + 48);
    uint64_t v12 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    uint64_t v9 = *(void *)v0[4];
  }
  v0[8] = v9;
  uint64_t v13 = swift_task_alloc();
  v0[9] = v13;
  *(void *)(v13 + 16) = v9;
  *(_OWORD *)(v13 + 24) = xmmword_100770AE0;
  *(void *)(v13 + 40) = v8;
  *(unsigned char *)(v13 + 48) = 1;
  uint64_t v14 = (void *)swift_task_alloc();
  v0[10] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_1005DCDB0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v14, 0, 0, 0xD000000000000029, 0x80000001007BB130, sub_10039DB08, v13, (char *)&type metadata for () + 8);
}

uint64_t sub_1005DCDB0()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1005DCF74;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1005DCECC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005DCECC()
{
  swift_release();
  sub_1005DB2F4(0);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005DCF74()
{
  swift_task_dealloc();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005DD018()
{
  v1[8] = v0;
  v1[9] = type metadata accessor for SDAirDropServerConnection(0);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  return _swift_task_switch(sub_1005DD0BC, 0, 0);
}

uint64_t sub_1005DD0BC()
{
  sub_1005DBF64(v0[8], v0[11], type metadata accessor for SDAirDropServerConnection);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    uint64_t v2 = (uint64_t *)v0[11];
    uint64_t v1 = *v2;
    uint64_t v3 = (char *)v2 + *(int *)(sub_10000A844(&qword_100970300) + 48);
    uint64_t v4 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    uint64_t v1 = *(void *)v0[11];
  }
  v0[12] = v1;
  sub_1005DBF64(v0[8], v0[10], type metadata accessor for SDAirDropServerConnection);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1005D92AC(v0[10], type metadata accessor for SDAirDropServerConnection);
    }
    else
    {
      uint64_t v7 = v0[10];
      swift_release();
      uint64_t v8 = v7 + *(int *)(sub_10000A844(&qword_100970300) + 48);
      uint64_t v9 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    }
    uint64_t v6 = 3145728;
  }
  else
  {
    sub_1005D92AC(v0[10], type metadata accessor for SDAirDropServerConnection);
    uint64_t v6 = 0x20000;
  }
  uint64_t v10 = swift_task_alloc();
  v0[13] = v10;
  *(void *)(v10 + 16) = v1;
  *(void *)(v10 + 24) = v6;
  uint64_t v11 = (void *)swift_task_alloc();
  v0[14] = (uint64_t)v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1005DD330;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000027, 0x80000001007C34E0, sub_1005DD66C, v10, &type metadata for SDNWHTTPMessage);
}

uint64_t sub_1005DD330()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1005DD51C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1005DD44C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005DD44C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 32);
  unint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 56);
  sub_10025ADCC(v1, v2);
  swift_bridgeObjectRelease();
  sub_100250CC4(v1, v2);
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v0 + 8);
  return v4(v1, v2, v3);
}

uint64_t sub_1005DD51C()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1005DD5A8(uint64_t a1)
{
  sub_100665280(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1005DD5B0(uint64_t a1)
{
  return sub_100664C9C(a1, v1);
}

uint64_t sub_1005DD5B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005DD600(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropMessage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005DD670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005DFE08(a1, a2, a3, (uint64_t)&unk_1008E1180, (uint64_t)sub_1005E2770, (uint64_t)&unk_1008E1198);
}

uint64_t sub_1005DD698(uint64_t a1)
{
  return sub_1005DD6E8(a1, (uint64_t)&unk_1008E1108, (uint64_t)sub_1005E10AC, (uint64_t)&unk_1008E1120);
}

uint64_t sub_1005DD6C0(uint64_t a1)
{
  return sub_1005DD6E8(a1, (uint64_t)&unk_1008E1400, (uint64_t)sub_1005E2CD8, (uint64_t)&unk_1008E1418);
}

uint64_t sub_1005DD6E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a4;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v26 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v24 = *(void *)(v9 - 8);
  uint64_t v25 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v22 = *(void *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_queue);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v17 + v16, (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  aBlock[4] = v21;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = v23;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v27 = _swiftEmptyArrayStorage;
  sub_1005E29FC((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v25);
  swift_release();
  return swift_release();
}

uint64_t sub_1005DDA98()
{
  return sub_1005DDAD8((uint64_t)sub_1005E2D68, (uint64_t)&unk_1008E1440);
}

uint64_t sub_1005DDAB8()
{
  return sub_1005DDAD8((uint64_t)sub_1005E2D9C, (uint64_t)&unk_1008E14B8);
}

uint64_t sub_1005DDAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[1] = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_queue);
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = a1;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = a2;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v17 = _swiftEmptyArrayStorage;
  sub_1005E29FC((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v16);
  swift_release();
  return swift_release();
}

uint64_t sub_1005DDDA4()
{
  return sub_1005DDAD8((uint64_t)sub_1005E2D8C, (uint64_t)&unk_1008E1468);
}

uint64_t sub_1005DDDC4()
{
  return sub_1005DDAD8((uint64_t)sub_1005E2C00, (uint64_t)&unk_1008E13C8);
}

uint64_t sub_1005DDDE4(uint64_t a1)
{
  return sub_1005DDE34(a1, (uint64_t)&unk_1008E12E8, (uint64_t)sub_1005E29EC, (uint64_t)&unk_1008E1300);
}

uint64_t sub_1005DDE0C(uint64_t a1)
{
  return sub_1005DDE34(a1, (uint64_t)&unk_1008E1360, (uint64_t)sub_1005E2B40, (uint64_t)&unk_1008E1378);
}

uint64_t sub_1005DDE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v18[0] = a4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(void *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_queue);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = a1;
  aBlock[4] = a3;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = v18[0];
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v20 = _swiftEmptyArrayStorage;
  sub_1005E29FC((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v19);
  swift_release();
  return swift_release();
}

uint64_t sub_1005DE128()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005DDE34(0, (uint64_t)&unk_1008E12E8, (uint64_t)sub_1005E29EC, (uint64_t)&unk_1008E1300);
  v11[1] = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_queue);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1005E2DAC;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008E1508;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v13 = _swiftEmptyArrayStorage;
  sub_1005E29FC((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  swift_release();
  return swift_release();
}

uint64_t sub_1005DE430()
{
  return sub_1005DDAD8((uint64_t)sub_1005E2DA4, (uint64_t)&unk_1008E14E0);
}

uint64_t sub_1005DE450()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097AD60);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097AD60);
  if (qword_100969C60 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994570);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1005DE518()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for SDAirDropBLEController()) init];
  qword_100994918 = (uint64_t)result;
  return result;
}

id sub_1005DE5A4()
{
  Class ObjectType = (Class)swift_getObjectType();
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v0 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v3);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v4 - 8);
  id result = [self sharedMonitor];
  if (result)
  {
    id v6 = result;
    sub_10000B740(0, (unint64_t *)&qword_10096A1A0);
    static DispatchQoS.utility.getter();
    uint64_t v14 = _swiftEmptyArrayStorage;
    sub_1005E29FC((unint64_t *)&unk_100974840, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
    sub_10000A844((uint64_t *)&unk_10096A1B0);
    sub_1002AE308((unint64_t *)&qword_100974850, (uint64_t *)&unk_10096A1B0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v11);
    uint64_t v7 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
    uint64_t v8 = ObjectType;
    uint64_t v9 = (char *)objc_allocWithZone(ObjectType);
    *(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_airDropAdvertiser] = 0;
    *(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_nearbyInfoV2Advertiser] = 0;
    *(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_scanner] = 0;
    *(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_aggressiveScannerTimer] = 0;
    *(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_deviceUpdatesHandlers] = &_swiftEmptyDictionarySingleton;
    *(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_deviceStatus] = v6;
    *(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_queue] = v7;
    v13.receiver = v9;
    v13.super_class = v8;
    id v10 = [super init];
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1005DE908(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (char *)Strong;
    id v8 = [*(id *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_deviceStatus) myShortHashesForAirDrop];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v12 = v11;
    }
    else
    {
      sub_10000A844(&qword_10096B500);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
      *(void *)(inited + 32) = AirDropID.getter();
      *(void *)(inited + 40) = v14;
      uint64_t v10 = sub_100567460(inited);
      unint64_t v12 = v15;
      swift_setDeallocating();
      swift_arrayDestroy();
    }
    uint64_t v16 = OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_airDropAdvertiser;
    if (*(void *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_airDropAdvertiser])
    {
      sub_100250CC4(v10, v12);
    }
    else
    {
      if (qword_10096A048 != -1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for Logger();
      sub_10000B47C(v17, (uint64_t)qword_10097AD60);
      sub_10025ADCC(v10, v12);
      sub_10025ADCC(v10, v12);
      uint64_t v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.default.getter();
      int v20 = v19;
      if (os_log_type_enabled(v18, v19))
      {
        int v40 = v20;
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        uint64_t v43 = v39;
        uint64_t v41 = a2;
        *(_DWORD *)uint64_t v21 = 136315138;
        uint64_t v37 = v21 + 4;
        uint64_t v38 = v21;
        uint64_t v42 = (uint64_t)sub_10045E0B4(v10, v12);
        sub_10000A844((uint64_t *)&unk_100974C30);
        sub_1002AE308((unint64_t *)&qword_10096CE90, (uint64_t *)&unk_100974C30);
        uint64_t v22 = BidirectionalCollection<>.joined(separator:)();
        unint64_t v24 = v23;
        swift_bridgeObjectRelease();
        uint64_t v42 = sub_100254634(v22, v24, &v43);
        a2 = v41;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100250CC4(v10, v12);
        sub_100250CC4(v10, v12);
        _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v40, "Starting advertisement for AirDrop %s", v38, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100250CC4(v10, v12);
        sub_100250CC4(v10, v12);
      }

      uint64_t v25 = *(void **)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_queue];
      id v26 = objc_allocWithZone((Class)type metadata accessor for SDBLEAdvertiser());
      sub_10025ADCC(v10, v12);
      sub_10025ADCC(v10, v12);
      id v27 = sub_1005BDD30(v25, v10, v12, 0x3200000100);
      uint64_t v28 = *(void **)&v7[v16];
      *(void *)&v7[v16] = v27;

      uint64_t v29 = *(void **)&v7[v16];
      if (v29)
      {
        uint64_t v30 = swift_allocObject();
        swift_unknownObjectWeakInit();
        id v31 = v29;
        swift_retain();
        sub_1005BDEB0((uint64_t)sub_1005E29F4, v30);

        swift_release_n();
      }
      uint64_t v32 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v5, 1, 1, v32);
      uint64_t v33 = qword_100969B90;
      swift_retain();
      if (v33 != -1) {
        swift_once();
      }
      uint64_t v34 = static AirDropActor.shared;
      uint64_t v35 = sub_1005E29FC((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
      uint64_t v36 = (void *)swift_allocObject();
      long long v36[2] = v34;
      v36[3] = v35;
      v36[4] = a2;
      swift_retain();
      sub_10028CFA8((uint64_t)v5, (uint64_t)&unk_10097ADF0, (uint64_t)v36);
      sub_100250CC4(v10, v12);
      sub_100250CC4(v10, v12);

      swift_release();
    }
  }
}

void sub_1005DEE88()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_airDropAdvertiser);
    if (v2)
    {
      id v3 = v2;

      sub_1005BF740(22);
      uint64_t v1 = v3;
    }
  }
}

uint64_t sub_1005DEF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_1005DEF9C, v5, 0);
}

uint64_t sub_1005DEF9C()
{
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
    unint64_t v0 = getpid();
    goto LABEL_23;
  }
  unint64_t v3 = *(void *)(v2 + 24);
  if (!v3)
  {
    unint64_t v0 = 0;
    goto LABEL_23;
  }
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_5;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    unint64_t v0 = *(void *)(v2 + 24);
    if (!v0) {
      goto LABEL_23;
    }
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v3 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
    unint64_t v0 = *(void *)(v2 + 24);
    if (!v0) {
      goto LABEL_23;
    }
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_21;
    }
    id v5 = *(id *)(v3 + 32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();

    unint64_t v0 = *(void *)(v2 + 24);
    if (!v0) {
      goto LABEL_23;
    }
  }
LABEL_13:
  if (!(v0 >> 62))
  {
    uint64_t v6 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_15;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    unint64_t v0 = 0;
    goto LABEL_23;
  }
LABEL_21:
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (!result) {
    goto LABEL_22;
  }
LABEL_15:
  if ((v0 & 0xC000000000000001) != 0)
  {
    uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    unint64_t v0 = *(unsigned int *)(v11 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid);
    swift_unknownObjectRelease();
  }
  else
  {
    if (!*(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    id v8 = (char *)*(id *)(v0 + 32);
    swift_bridgeObjectRelease();
    unint64_t v0 = *(unsigned int *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid];
  }
LABEL_23:
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100046EFC(@"BluetoothAdvertise", @"Start", (uint64_t)v9, v0);

  uint64_t v10 = *(uint64_t (**)(void))(v1 + 8);
  return v10();
}

void sub_1005DF248(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = Strong;
    uint64_t v8 = OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_airDropAdvertiser;
    NSString v9 = *(void **)&Strong[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_airDropAdvertiser];
    if (v9)
    {
      id v10 = v9;
      sub_1005BEF80(0, 0, 0.0);

      uint64_t v11 = *(void **)&v7[v8];
      *(void *)&v7[v8] = 0;

      uint64_t v12 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v5, 1, 1, v12);
      uint64_t v13 = qword_100969B90;
      swift_retain();
      if (v13 != -1) {
        swift_once();
      }
      uint64_t v14 = static AirDropActor.shared;
      uint64_t v15 = sub_1005E29FC((unint64_t *)&qword_1009744A0, (void (*)(uint64_t))type metadata accessor for AirDropActor);
      uint64_t v16 = (void *)swift_allocObject();
      v16[2] = v14;
      v16[3] = v15;
      v16[4] = a2;
      swift_retain();
      sub_10028CFA8((uint64_t)v5, (uint64_t)&unk_10097AE00, (uint64_t)v16);

      swift_release();
    }
    else
    {
    }
  }
}

uint64_t sub_1005DF448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_1005DF4E4, v5, 0);
}

uint64_t sub_1005DF4E4()
{
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
    unint64_t v0 = getpid();
    goto LABEL_23;
  }
  unint64_t v3 = *(void *)(v2 + 24);
  if (!v3)
  {
    unint64_t v0 = 0;
    goto LABEL_23;
  }
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_5;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    unint64_t v0 = *(void *)(v2 + 24);
    if (!v0) {
      goto LABEL_23;
    }
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v3 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
    unint64_t v0 = *(void *)(v2 + 24);
    if (!v0) {
      goto LABEL_23;
    }
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_21;
    }
    id v5 = *(id *)(v3 + 32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();

    unint64_t v0 = *(void *)(v2 + 24);
    if (!v0) {
      goto LABEL_23;
    }
  }
LABEL_13:
  if (!(v0 >> 62))
  {
    uint64_t v6 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_15;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    unint64_t v0 = 0;
    goto LABEL_23;
  }
LABEL_21:
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (!result) {
    goto LABEL_22;
  }
LABEL_15:
  if ((v0 & 0xC000000000000001) != 0)
  {
    uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    unint64_t v0 = *(unsigned int *)(v11 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid);
    swift_unknownObjectRelease();
  }
  else
  {
    if (!*(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    uint64_t v8 = (char *)*(id *)(v0 + 32);
    swift_bridgeObjectRelease();
    unint64_t v0 = *(unsigned int *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid];
  }
LABEL_23:
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100046EFC(@"BluetoothAdvertise", @"Stop", (uint64_t)v9, v0);

  id v10 = *(uint64_t (**)(void))(v1 + 8);
  return v10();
}

void sub_1005DF790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = Strong;
    uint64_t v13 = OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_scanner;
    if (!*(void *)&Strong[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_scanner])
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = a3;
      *(void *)(v20 + 24) = a4;
      uint64_t v21 = &v12[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_deviceUpdatesHandlers];
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v43 = *(void *)v21;
      *(void *)uint64_t v21 = 0x8000000000000000;
      sub_1005944CC((uint64_t)sub_1005E27C0, v20, (uint64_t)v10, isUniquelyReferenced_nonNull_native);
      *(void *)uint64_t v21 = v43;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      swift_endAccess();
      id v23 = [objc_allocWithZone((Class)CBDiscovery) init];
      [v23 setDispatchQueue:*(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_queue]];
      [v23 addDiscoveryType:1];
      [v23 setDiscoveryFlags:0x40000000];
      [v23 setUseCase:131090];
      uint64_t v24 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v41 = sub_1005E27F0;
      uint64_t v42 = v24;
      aBlock = _NSConcreteStackBlock;
      uint64_t v38 = 1107296256;
      uint64_t v39 = (void (*)(uint64_t, void *))sub_10032A9D8;
      int v40 = &unk_1008E11E8;
      uint64_t v25 = _Block_copy(&aBlock);
      swift_release();
      [v23 setDeviceFoundHandler:v25];
      _Block_release(v25);
      uint64_t v26 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v41 = sub_1005E2810;
      uint64_t v42 = v26;
      aBlock = _NSConcreteStackBlock;
      uint64_t v38 = 1107296256;
      uint64_t v39 = (void (*)(uint64_t, void *))sub_10032A9D8;
      int v40 = &unk_1008E1210;
      id v27 = _Block_copy(&aBlock);
      swift_release();
      [v23 setDeviceLostHandler:v27];
      _Block_release(v27);
      if (qword_10096A048 != -1) {
        swift_once();
      }
      uint64_t v28 = type metadata accessor for Logger();
      sub_10000B47C(v28, (uint64_t)qword_10097AD60);
      uint64_t v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v29, v30))
      {
        id v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v31 = 0;
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "Starting to scan for AirDrop", v31, 2u);
        swift_slowDealloc();
      }

      uint64_t v32 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v41 = sub_1005E2830;
      uint64_t v42 = v32;
      aBlock = _NSConcreteStackBlock;
      uint64_t v38 = 1107296256;
      uint64_t v39 = sub_1006B210C;
      int v40 = &unk_1008E1238;
      uint64_t v33 = _Block_copy(&aBlock);
      swift_release();
      [v23 activateWithCompletion:v33];
      _Block_release(v33);
      uint64_t v34 = *(void **)&v12[v13];
      *(void *)&v12[v13] = v23;
      id v35 = v23;

      NSString v19 = String._bridgeToObjectiveC()();
      uint64_t v36 = getpid();
      sub_100046EFC(@"BluetoothScanning", @"Start", (uint64_t)v19, v36);

      goto LABEL_15;
    }
  }
  if (qword_10096A048 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_10000B47C(v14, (uint64_t)qword_10097AD60);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Attempting to start scanning but already scanning", v17, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t v18 = swift_unknownObjectWeakLoadStrong();
  if (v18)
  {
    NSString v19 = (NSString)v18;
    sub_1005DFE08(a2, a3, a4, (uint64_t)&unk_1008E1270, (uint64_t)sub_1005E2928, (uint64_t)&unk_1008E1288);
LABEL_15:
  }
}

uint64_t sub_1005DFE08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v29 = a6;
  uint64_t v26 = a3;
  uint64_t v27 = a5;
  uint64_t v24 = a4;
  uint64_t v25 = a2;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v32 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v30 = *(void *)(v11 - 8);
  uint64_t v31 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14);
  uint64_t v28 = *(void *)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_queue);
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v14);
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v19 + v18, (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
  uint64_t v20 = (void *)(v19 + ((v16 + v18 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v21 = v26;
  *uint64_t v20 = v25;
  v20[1] = v21;
  aBlock[4] = v27;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = v29;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v33 = _swiftEmptyArrayStorage;
  sub_1005E29FC((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v31);
  swift_release();
  return swift_release();
}

uint64_t sub_1005E01DC(uint64_t a1, char a2)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_queue);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0) {
    goto LABEL_27;
  }
  uint64_t v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_deviceUpdatesHandlers);
  swift_beginAccess();
  uint64_t v13 = *v12;
  uint64_t v14 = *v12 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(*v12 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(*v12 + 64);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  char v19 = a2 & 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v21 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v22 = v21 | (v20 << 6);
      goto LABEL_6;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v24 >= v18) {
      return swift_release();
    }
    unint64_t v25 = *(void *)(v14 + 8 * v24);
    ++v20;
    if (!v25)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v18) {
        return swift_release();
      }
      unint64_t v25 = *(void *)(v14 + 8 * v20);
      if (!v25)
      {
        int64_t v20 = v24 + 2;
        if (v24 + 2 >= v18) {
          return swift_release();
        }
        unint64_t v25 = *(void *)(v14 + 8 * v20);
        if (!v25)
        {
          int64_t v20 = v24 + 3;
          if (v24 + 3 >= v18) {
            return swift_release();
          }
          unint64_t v25 = *(void *)(v14 + 8 * v20);
          if (!v25) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v17 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v20 << 6);
LABEL_6:
    id v23 = *(void (**)(uint64_t *, char *))(*(void *)(v13 + 56) + 16 * v22);
    uint64_t v29 = a1;
    char v28 = v19;
    swift_retain();
    v23(&v29, &v28);
    uint64_t result = swift_release();
  }
  int64_t v26 = v24 + 4;
  if (v26 >= v18) {
    return swift_release();
  }
  unint64_t v25 = *(void *)(v14 + 8 * v26);
  if (v25)
  {
    int64_t v20 = v26;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v20 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v20 >= v18) {
      return swift_release();
    }
    unint64_t v25 = *(void *)(v14 + 8 * v20);
    ++v26;
    if (v25) {
      goto LABEL_23;
    }
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void sub_1005E0474(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    sub_1005E01DC(a1, a3 & 1);
  }
}

void sub_1005E04E4(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_10096A048 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_10000B47C(v1, (uint64_t)qword_10097AD60);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      v13[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 136315138;
      swift_errorRetain();
      sub_10000A844(&qword_10096BAF0);
      uint64_t v5 = String.init<A>(describing:)();
      sub_100254634(v5, v6, v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to start scanning for AirDrop: %s", v4, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    swift_beginAccess();
    uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
    swift_errorRelease();
    if (Strong)
    {
      uint64_t v11 = *(void **)&Strong[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_scanner];
      *(void *)&Strong[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_scanner] = 0;
    }
  }
  else
  {
    if (qword_10096A048 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10000B47C(v7, (uint64_t)qword_10097AD60);
    oslog = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Started scanning for AirDrop", v9, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_1005E0940(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    uint64_t v5 = OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_scanner;
    unint64_t v6 = *(void **)&Strong[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_scanner];
    if (v6)
    {
      swift_beginAccess();
      id v7 = v6;
      uint64_t v8 = sub_1002AA1C0(a2);
      swift_endAccess();
      sub_1002CA430(v8);
      [v7 invalidate];
      uint64_t v9 = *(void **)&v4[v5];
      *(void *)&v4[v5] = 0;

      id v10 = String._bridgeToObjectiveC()();
      uint64_t v11 = getpid();
      sub_100046EFC(@"BluetoothScanning", @"Stop", (uint64_t)v10, v11);

      goto LABEL_9;
    }
  }
  if (qword_10096A048 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000B47C(v12, (uint64_t)qword_10097AD60);
  id v10 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v13, "Attempting to stop scanning but not scanning", v14, 2u);
    swift_slowDealloc();
  }
LABEL_9:
}

void sub_1005E0C3C(uint64_t a1, uint64_t a2, void (*a3)(id, uint64_t), uint64_t a4)
{
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = (char *)Strong;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a3;
    *(void *)(v13 + 24) = a4;
    uint64_t v14 = &v12[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_deviceUpdatesHandlers];
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *(void *)v14;
    *(void *)uint64_t v14 = 0x8000000000000000;
    sub_1005944CC((uint64_t)sub_1005E2E30, v13, (uint64_t)v10, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v14 = v24;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_endAccess();
    uint64_t v16 = *(void **)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_scanner];
    if (!v16)
    {

      return;
    }
    id v17 = [v16 discoveredDevices];
    sub_10000B740(0, &qword_10096FC48);
    unint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
      if (v19) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v19)
      {
LABEL_5:
        if (v19 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v19; ++i)
        {
          if ((v18 & 0xC000000000000001) != 0) {
            id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v21 = *(id *)(v18 + 8 * i + 32);
          }
          unint64_t v22 = v21;
          a3(v21, 1);
        }
      }
    }

    swift_bridgeObjectRelease_n();
  }
}

void sub_1005E0F0C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    swift_beginAccess();
    uint64_t v5 = sub_1002AA1C0(a2);
    swift_endAccess();
    sub_1002CA430(v5);
  }
}

uint64_t type metadata accessor for SDAirDropBLEController()
{
  return self;
}

uint64_t sub_1005E1070()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005E10AC()
{
  return sub_1005E2CF0((uint64_t (*)(uint64_t, uint64_t))sub_1005E0940);
}

uint64_t sub_1005E10C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005E10D4()
{
  return swift_release();
}

void sub_1005E10DC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v1 = (void *)Strong,
        uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_scanner),
        os_log_type_t v3 = v2,
        v1,
        v2))
  {
    if (qword_10096A048 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_10097AD60);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Starting aggressive scan for Ask to AirDrop", v7, 2u);
      swift_slowDealloc();
    }

    [v3 setBleScanRate:50];
    [v3 setDiscoveryFlags:0x240000000];
    [v3 setUseCase:131093];
    swift_beginAccess();
    uint64_t v8 = swift_unknownObjectWeakLoadStrong();
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      sub_1005E1330();
    }
  }
  else
  {
    if (qword_10096A048 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000B47C(v10, (uint64_t)qword_10097AD60);
    os_log_type_t v3 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v11, "Attempting to scan aggressively for Ask to AirDrop but not scanning yet", v12, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1005E1330()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchTimeInterval();
  uint64_t v45 = *(void *)(v2 - 8);
  uint64_t v46 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v44 = (uint64_t *)((char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  uint64_t v41 = (uint64_t *)((char *)&v35 - v5);
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v39 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  int v40 = (char *)&v35 - v9;
  uint64_t v38 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v10 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v36 = *(void *)(v13 - 8);
  uint64_t v37 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for OS_dispatch_source.TimerFlags();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_aggressiveScannerTimer;
  if (*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_aggressiveScannerTimer))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    OS_dispatch_source.cancel()();
    swift_unknownObjectRelease();
  }
  sub_10000B740(0, (unint64_t *)&qword_10096D4F0);
  static OS_dispatch_source.TimerFlags.strict.getter();
  uint64_t v21 = static OS_dispatch_source.makeTimerSource(flags:queue:)();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  *(void *)(v1 + v20) = v21;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v35 = v21;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1005E2D94;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008E1490;
  uint64_t v24 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v47 = ObjectType;
  j___s8Dispatch0A3QoSV11unspecifiedACvgZ();
  sub_1005BD8F8();
  OS_dispatch_source.setEventHandler(qos:flags:handler:)();
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v38);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v37);
  swift_release();
  swift_release();
  unint64_t v25 = v39;
  static DispatchTime.now()();
  uint64_t v26 = (uint64_t)v41;
  *uint64_t v41 = 10;
  uint64_t v28 = v45;
  uint64_t v27 = v46;
  (*(void (**)(uint64_t, void, uint64_t))(v45 + 104))(v26, enum case for DispatchTimeInterval.seconds(_:), v46);
  uint64_t v29 = v40;
  + infix(_:_:)();
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  v30(v26, v27);
  uint64_t v31 = v43;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v42 + 8);
  v32(v25, v43);
  sub_1002C1F64(v26);
  uint64_t v33 = v44;
  sub_1002C1FD8(v44);
  OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
  v30((uint64_t)v33, v27);
  v30(v26, v27);
  v32(v29, v31);
  OS_dispatch_source.activate()();
  return swift_unknownObjectRelease();
}

void sub_1005E18E0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong
    || (uint64_t v1 = (void *)Strong,
        uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_scanner),
        uint64_t v3 = v2,
        v1,
        !v2))
  {
    if (qword_10096A048 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000B47C(v11, (uint64_t)qword_10097AD60);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v12, "Attempting to stop aggressive scan for Ask to AirDrop but not scanning yet", v13, 2u);
      swift_slowDealloc();
    }
    goto LABEL_15;
  }
  if (qword_10096A048 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_10097AD60);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Stopping aggressive scan for Ask to AirDrop", v7, 2u);
    swift_slowDealloc();
  }

  [v3 setBleScanRate:0];
  [v3 setDiscoveryFlags:0x40000000];
  [v3 setUseCase:131090];
  swift_beginAccess();
  uint64_t v8 = swift_unknownObjectWeakLoadStrong();
  if (!v8)
  {
LABEL_15:

    return;
  }
  uint64_t v9 = (char *)v8;
  uint64_t v10 = OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_aggressiveScannerTimer;
  if (*(void *)(v8 + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_aggressiveScannerTimer))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    OS_dispatch_source.cancel()();
    swift_unknownObjectRelease();
  }
  *(void *)&v9[v10] = 0;

  swift_unknownObjectRelease();
}

void sub_1005E1B74()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_5;
  }
  uint64_t v1 = Strong;
  uint64_t v2 = *(char **)&Strong[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_airDropAdvertiser];
  if (!v2
    || (uint64_t v3 = (uint64_t *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_configuration],
        unint64_t v4 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_configuration + 8],
        v4 >> 60 == 15))
  {

LABEL_5:
    if (qword_10096A048 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000B47C(v5, (uint64_t)qword_10097AD60);
    os_log_type_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Attempting to start Ask to AirDrop without already advertising", v8, 2u);
      swift_slowDealloc();
    }

    return;
  }
  uint64_t v9 = *v3;
  uint64_t v10 = v3[2];
  uint64_t v11 = v2;
  sub_100278C78(v9, v4);
  if (qword_10096A048 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000B47C(v12, (uint64_t)qword_10097AD60);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Adding Ask to AirDrop data to advertisement", v15, 2u);
    swift_slowDealloc();
  }

  sub_10025ADCC(v9, v4);
  char v16 = SFDeviceClassCodeGet();
  unint64_t v17 = v10 & 0xFFFFFFFFFFFF0000 | (SFDeviceModelCodeGet() & 0x1F | (32 * v16)) | 0x1800000;
  sub_10025ADCC(v9, v4);
  sub_1005BFFF0(v9, v4, v17);
  sub_100250CC4(v9, v4);
  sub_1005BDA6C(50);
  sub_1005BDA94(131093);

  sub_100250CB0(v9, v4);
  sub_100250CC4(v9, v4);
}

void sub_1005E1E2C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_5;
  }
  uint64_t v1 = (void *)Strong;
  uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_airDropAdvertiser);
  uint64_t v3 = v2;

  if (!v2) {
    goto LABEL_5;
  }
  unint64_t v4 = (uint64_t *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_configuration];
  unint64_t v5 = *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_configuration + 8];
  if (v5 >> 60 == 15)
  {

LABEL_5:
    if (qword_10096A048 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_10097AD60);
    os_log_type_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Attempting to stop Ask to AirDrop without already advertising", v9, 2u);
      swift_slowDealloc();
    }

    return;
  }
  uint64_t v10 = *v4;
  uint64_t v11 = v4[2];
  sub_10025ADCC(*v4, *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary15SDBLEAdvertiser_configuration + 8]);
  if (qword_10096A048 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000B47C(v12, (uint64_t)qword_10097AD60);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Removing Ask to AirDrop data from advertisement", v15, 2u);
    swift_slowDealloc();
  }

  sub_100278C78(v10, v5);
  sub_10025ADCC(v10, v5);
  sub_1005BFFF0(v10, v5, (v11 & 0x1800000 ^ 0xFFFFFFFFFFFF0000) & v11);
  sub_100250CC4(v10, v5);
  sub_1005BDA6C(0);
  sub_1005BDA94(131090);

  sub_100250CB0(v10, v5);
  sub_100250CC4(v10, v5);
}

void sub_1005E20CC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_nearbyInfoV2Advertiser;
    if (*(void *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_nearbyInfoV2Advertiser))
    {
      if (qword_10096A048 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_10000B47C(v3, (uint64_t)qword_10097AD60);
      unint64_t v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "Attempting to start advertising temp auth tag but already advertising", v6, 2u);
        swift_slowDealloc();

        return;
      }
    }
    else
    {
      if (qword_10096A048 != -1) {
        swift_once();
      }
      uint64_t v7 = type metadata accessor for Logger();
      sub_10000B47C(v7, (uint64_t)qword_10097AD60);
      os_log_type_t v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Starting to advertise temp auth tag", v10, 2u);
        swift_slowDealloc();
      }

      uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_queue];
      id v12 = objc_allocWithZone((Class)type metadata accessor for SDBLEAdvertiser());
      id v13 = sub_1005BDD30(v11, 0, 0xF000000000000000, 0);
      os_log_type_t v14 = *(void **)&v1[v2];
      *(void *)&v1[v2] = v13;

      uint64_t v15 = *(void **)&v1[v2];
      if (v15)
      {
        id v16 = v15;
        sub_1005BDA94(131094);

        unint64_t v17 = *(void **)&v1[v2];
        if (v17)
        {
          id v18 = v17;
          sub_1005BDA6C(30);

          uint64_t v19 = *(void **)&v1[v2];
          if (v19)
          {
            id v20 = v19;
            sub_1005BDEB0(0, 0);

            uint64_t v21 = *(void **)&v1[v2];
            if (v21)
            {
              uint64_t v22 = swift_allocObject();
              swift_unknownObjectWeakInit();
              id v23 = v21;
              swift_retain();
              sub_1005BEF80((void (*)(uint64_t))sub_1005E2D70, v22, 15.0);

              swift_release_n();
              return;
            }
          }
        }
      }
    }
  }
}

void sub_1005E23B0()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    uint64_t v2 = *(void **)&Strong[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_nearbyInfoV2Advertiser];
    if (v2)
    {
      uint64_t v3 = qword_10096A048;
      id v4 = v2;
      if (v3 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      sub_10000B47C(v5, (uint64_t)qword_10097AD60);
      uint64_t v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v6, v7))
      {
        os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "Stop advertising temp auth tag", v8, 2u);
        swift_slowDealloc();
      }

      uint64_t v9 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      sub_1005BEF80((void (*)(uint64_t))sub_1005E2D70, v9, 0.0);

      swift_release_n();
    }
    else
    {
    }
  }
}

void sub_1005E2544()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = *(void **)&Strong[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_nearbyInfoV2Advertiser];
    *(void *)&Strong[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_nearbyInfoV2Advertiser] = 0;
  }
}

void sub_1005E25A4()
{
  uint64_t v0 = type metadata accessor for DispatchPredicate();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (uint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (char *)Strong;
    uint64_t v6 = *(void **)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_queue);
    *uint64_t v3 = v6;
    (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, enum case for DispatchPredicate.onQueue(_:), v0);
    id v7 = v6;
    LOBYTE(v6) = _dispatchPreconditionTest(_:)();
    (*(void (**)(void *, uint64_t))(v1 + 8))(v3, v0);
    if (v6)
    {
      if (*(void *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary22SDAirDropBLEController_aggressiveScannerTimer]) {
        sub_1005DDAD8((uint64_t)sub_1005E2C00, (uint64_t)&unk_1008E13C8);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1005E2718()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005E2750()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1005E2770()
{
  return sub_1005E2940((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1005DF790);
}

uint64_t sub_1005E2788()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005E27C0(void *a1, unsigned __int8 *a2)
{
  return (*(uint64_t (**)(void, void))(v2 + 16))(*a1, *a2);
}

void sub_1005E27F0(uint64_t a1)
{
  sub_1005E0474(a1, v1, 1);
}

void sub_1005E2810(uint64_t a1)
{
  sub_1005E0474(a1, v1, 0);
}

void sub_1005E2830(uint64_t a1)
{
}

uint64_t sub_1005E283C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1005E2928()
{
  return sub_1005E2940((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1005E0C3C);
}

uint64_t sub_1005E2940(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + v3;
  unint64_t v6 = (uint64_t *)(v1 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];

  return a1(v4, v5, v7, v8);
}

void sub_1005E29EC()
{
  sub_1005DE908(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1005E29F4()
{
}

uint64_t sub_1005E29FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005E2A48(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F0;
  return sub_1005DEF00(a1, v4, v5, v6);
}

uint64_t sub_1005E2B00()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1005E2B40()
{
  sub_1005DF248(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1005E2B4C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F4;
  return sub_1005DF448(a1, v4, v5, v6);
}

void sub_1005E2C00()
{
}

uint64_t sub_1005E2C0C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1005E2CD8()
{
  return sub_1005E2CF0((uint64_t (*)(uint64_t, uint64_t))sub_1005E0F0C);
}

uint64_t sub_1005E2CF0(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3, v4);
}

void sub_1005E2D68()
{
}

void sub_1005E2D70()
{
}

void sub_1005E2D8C()
{
}

void sub_1005E2D94()
{
}

void sub_1005E2D9C()
{
}

void sub_1005E2DA4()
{
}

void sub_1005E2DAC()
{
}

id sub_1005E2E34(uint64_t a1, uint64_t a2, char a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = 0;
  id v5 = [(id)swift_getObjCClassFromMetadata() bundleRecordWithBundleIdentifier:v4 allowPlaceholder:a3 & 1 error:&v9];

  if (v5)
  {
    id v6 = v9;
  }
  else
  {
    id v7 = v9;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v5;
}

uint64_t sub_1005E2F1C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097AE08);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097AE08);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1005E2FE4(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropReceive.AskRequest();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v2[12] = v5;
  v2[13] = *(void *)(v5 - 8);
  v2[14] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v2[15] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferType();
  v2[16] = v6;
  v2[17] = *(void *)(v6 - 8);
  v2[18] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  return _swift_task_switch(sub_1005E3220, v7, 0);
}

uint64_t sub_1005E3220()
{
  uint64_t v53 = v0;
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[16];
  SFAirDropReceive.AskRequest.type.getter();
  char v4 = SFAirDrop.TransferType.isLinks.getter();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  if ((v4 & 1) == 0)
  {
LABEL_24:
    BOOL v21 = 0;
    goto LABEL_31;
  }
  uint64_t v5 = v0[13];
  uint64_t v6 = SFAirDropReceive.AskRequest.urlItems.getter();
  uint64_t v7 = 0;
  uint64_t v46 = v6 + 56;
  uint64_t v8 = -1;
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  if (-v9 < 64) {
    uint64_t v8 = ~(-1 << -(char)v9);
  }
  unint64_t v10 = v8 & *(void *)(v6 + 56);
  os_log_t log = (os_log_t)((unint64_t)(63 - v9) >> 6);
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      goto LABEL_21;
    }
    uint64_t v13 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v13 >= (uint64_t)log) {
      goto LABEL_25;
    }
    unint64_t v14 = *(void *)(v46 + 8 * v13);
    ++v7;
    if (!v14)
    {
      uint64_t v7 = v13 + 1;
      if (v13 + 1 >= (uint64_t)log) {
        goto LABEL_25;
      }
      unint64_t v14 = *(void *)(v46 + 8 * v7);
      if (!v14)
      {
        uint64_t v7 = v13 + 2;
        if (v13 + 2 >= (uint64_t)log) {
          goto LABEL_25;
        }
        unint64_t v14 = *(void *)(v46 + 8 * v7);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v7 << 6);
LABEL_21:
    uint64_t v16 = v0[15];
    uint64_t v17 = v0[12];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))(v16, *(void *)(v6 + 48) + *(void *)(v5 + 72) * v12, v17);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v16, 0, 1, v17);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v16, 1, v17) == 1) {
      goto LABEL_26;
    }
    uint64_t v18 = v0[14];
    uint64_t v19 = v0[12];
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 32))(v18, v0[15], v19);
    char v20 = sub_1005E41B8();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v18, v19);
    if ((v20 & 1) == 0)
    {
      swift_release();
      goto LABEL_24;
    }
  }
  uint64_t v15 = v13 + 3;
  if (v15 >= (uint64_t)log)
  {
LABEL_25:
    (*(void (**)(void, uint64_t, uint64_t, void))(v5 + 56))(v0[15], 1, 1, v0[12]);
LABEL_26:
    swift_release();
    sub_10000B740(0, (unint64_t *)&qword_100974C50);
    id v22 = sub_1005E2E34(0xD00000000000001CLL, 0x80000001007C3730, 1);
    uint64_t v42 = v0[5];
    uint64_t v43 = *(void **)(v42 + 16);
    *(void *)(v42 + 16) = v22;

    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v46 + 8 * v15);
  if (v14)
  {
    uint64_t v7 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v7 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v7 >= (uint64_t)log) {
      goto LABEL_25;
    }
    unint64_t v14 = *(void *)(v46 + 8 * v7);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_35:
  __break(1u);
  swift_once();
  uint64_t v23 = v0[10];
  uint64_t v24 = v0[11];
  uint64_t v25 = v0[9];
  uint64_t v26 = v0[4];
  uint64_t v27 = type metadata accessor for Logger();
  sub_10000B47C(v27, (uint64_t)qword_10097AE08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v24, v26, v25);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.error.getter();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v31 = v0[10];
  uint64_t v32 = v0[11];
  uint64_t v33 = v0[9];
  if (v30)
  {
    os_log_type_t type = v29;
    uint64_t v35 = v0[7];
    uint64_t v34 = v0[8];
    uint64_t v47 = v0[9];
    uint64_t v36 = v0[6];
    uint64_t v37 = swift_slowAlloc();
    uint64_t v50 = (void *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 136315394;
    loga = v28;
    SFAirDropReceive.AskRequest.id.getter();
    sub_10024E048();
    uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v40 = v39;
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
    v0[2] = sub_100254634(v38, v40, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v47);
    *(_WORD *)(v37 + 12) = 2112;
    swift_errorRetain();
    uint64_t v41 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v50 = v41;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, loga, type, "Failed to get ShareBear for ask request %s: %@", (uint8_t *)v37, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v33);
    swift_errorRelease();
    swift_errorRelease();
  }
LABEL_30:
  BOOL v21 = *(void *)(v0[5] + 16) != 0;
LABEL_31:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v44 = (uint64_t (*)(BOOL))v0[1];
  return v44(v21);
}

uint64_t type metadata accessor for SDAirDropContentHandlerSharediCloudDocumentsLinks()
{
  return self;
}

uint64_t sub_1005E38A4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerSharediCloudDocumentsLinks();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1005E38DC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_1005E2FE4(a1);
}

uint64_t sub_1005E3978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_10097F1D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v9 = *(void **)(v8 + 16);
  uint64_t v10 = type metadata accessor for SFAirDropReceive.ItemDestination();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
  id v11 = v9;
  sub_10039FAA0(a1, v9, 1, a2);

  return sub_10024DFE8((uint64_t)v7);
}

void sub_1005E3A78(uint64_t a1, int a2)
{
  int v48 = a2;
  uint64_t v2 = sub_10000A844((uint64_t *)&unk_10096AC10);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v47 - v6;
  unint64_t v8 = *(void *)(SFAirDropReceive.AskRequest.urlItems.getter() + 16);
  swift_bridgeObjectRelease();
  uint64_t v9 = SFAirDropReceive.AskRequest.urlItems.getter();
  sub_1002E5BA0(v9, (uint64_t)v7);
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  unint64_t v14 = 0;
  if (v12(v7, 1, v10) != 1)
  {
    URL._bridgeToObjectiveC()(v13);
    unint64_t v14 = v15;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
  }
  id object = (id)SFSharediCloudDocumentsLinkToAppName();

  if (object)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    Swift::String v17 = String.lowercased()();
    *(void *)&long long v47 = v17._countAndFlagsBits;
    id object = v17._object;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)&long long v47 = 0;
  }
  uint64_t v18 = SFAirDropReceive.AskRequest.urlItems.getter();
  sub_1002E5BA0(v18, (uint64_t)v5);
  swift_bridgeObjectRelease();
  if (v12(v5, 1, v10) == 1)
  {
    char v20 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v19);
    char v20 = v21;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v5, v10);
  }
  id v22 = (id)SFSharediCloudDocumentsLinkToFileName();

  if (v22)
  {
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v25 = 0;
  }
  uint64_t v26 = 0xD00000000000001CLL;
  if (v8 == 1)
  {
    if (object && v25)
    {
      uint64_t v27 = (void *)0x80000001007C3710;
      if ((void)v47 == 0x65746F6E79656BLL && object == (id)0xE700000000000000) {
        goto LABEL_24;
      }
      uint64_t v28 = v47;
      if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
        goto LABEL_24;
      }
      uint64_t v27 = (void *)0x80000001007C36F0;
      if (v28 == 0x737265626D756ELL && object == (id)0xE700000000000000) {
        goto LABEL_24;
      }
      if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
        goto LABEL_24;
      }
      uint64_t v27 = (void *)0x80000001007C36D0;
      if (v28 == 0x7365676170 && object == (id)0xE500000000000000)
      {
        uint64_t v26 = 0xD00000000000001ALL;
LABEL_24:
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v46)
      {
        uint64_t v26 = 0xD00000000000001ALL;
LABEL_25:
        sub_10000A844(&qword_10096D760);
        uint64_t inited = swift_initStackObject();
        long long v47 = xmmword_10076E7A0;
        *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
        *(void *)(inited + 32) = v26;
        *(void *)(inited + 40) = v27;
        *(void *)(inited + 48) = 1;
        uint64_t v49 = 0x545F4E5245444F4DLL;
        unint64_t v50 = 0xEF524546534E4152;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v30._countAndFlagsBits = 95;
        v30._id object = (void *)0xE100000000000000;
        String.append(_:)(v30);
        v31._countAndFlagsBits = v26;
        v31._id object = v27;
        String.append(_:)(v31);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v48)
        {
          v32._countAndFlagsBits = 0x4C4154495041435FLL;
          v32._id object = (void *)0xEC00000044455A49;
          String.append(_:)(v32);
        }
        v33._countAndFlagsBits = 0x545845545FLL;
        v33._id object = (void *)0xE500000000000000;
        String.append(_:)(v33);
        swift_setDeallocating();
        sub_10000A844((uint64_t *)&unk_100977CB0);
        swift_arrayDestroy();
        NSString v34 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v35 = (id)SFLocalizedStringForKey();

        if (v35)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          sub_10000A844((uint64_t *)&unk_10096EE60);
          uint64_t v36 = swift_allocObject();
          *(_OWORD *)(v36 + 16) = v47;
          *(void *)(v36 + 56) = &type metadata for String;
          *(void *)(v36 + 64) = sub_1002E695C();
          *(void *)(v36 + 32) = v23;
          *(void *)(v36 + 40) = v25;
LABEL_36:
          static String.localizedStringWithFormat(_:_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return;
        }
        goto LABEL_41;
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_10000A844(&qword_10096D760);
  uint64_t v37 = swift_initStackObject();
  long long v47 = xmmword_10076E7A0;
  *(_OWORD *)(v37 + 16) = xmmword_10076E7A0;
  *(void *)(v37 + 32) = 0xD00000000000001BLL;
  *(void *)(v37 + 40) = 0x80000001007C36B0;
  *(void *)(v37 + 48) = v8;
  uint64_t v49 = 0x545F4E5245444F4DLL;
  unint64_t v50 = 0xEF524546534E4152;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v38._countAndFlagsBits = 95;
  v38._id object = (void *)0xE100000000000000;
  String.append(_:)(v38);
  v39._countAndFlagsBits = 0xD00000000000001BLL;
  v39._id object = (void *)0x80000001007C36B0;
  String.append(_:)(v39);
  swift_bridgeObjectRelease();
  if (v8 > 1)
  {
    v40._countAndFlagsBits = 0x4C4152554C505FLL;
    v40._id object = (void *)0xE700000000000000;
    String.append(_:)(v40);
  }
  swift_bridgeObjectRelease();
  if (v48)
  {
    v41._countAndFlagsBits = 0x4C4154495041435FLL;
    v41._id object = (void *)0xEC00000044455A49;
    String.append(_:)(v41);
  }
  v42._countAndFlagsBits = 0x545845545FLL;
  v42._id object = (void *)0xE500000000000000;
  String.append(_:)(v42);
  swift_setDeallocating();
  sub_10000A844((uint64_t *)&unk_100977CB0);
  swift_arrayDestroy();
  NSString v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v44 = (id)SFLocalizedStringForKey();

  if (v44)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = v47;
    *(void *)(v45 + 56) = &type metadata for Int;
    *(void *)(v45 + 64) = &protocol witness table for Int;
    *(void *)(v45 + 32) = v8;
    goto LABEL_36;
  }
  __break(1u);
LABEL_41:
  __break(1u);
}

uint64_t sub_1005E41B8()
{
  uint64_t v0 = self;
  URL._bridgeToObjectiveC()(v1);
  uint64_t v3 = v2;
  v28[0] = 0;
  id v4 = [v0 appLinksWithURL:v2 limit:0x7FFFFFFFFFFFFFFFLL error:v28];

  id v5 = v28[0];
  if (v4)
  {
    sub_10000B740(0, &qword_100971248);
    unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    id v7 = v5;

    v28[5] = (id)0xD00000000000001CLL;
    v28[6] = (id)0x80000001007C3730;
    if (v6 >> 62) {
      goto LABEL_24;
    }
    uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v8)
    {
      uint64_t v9 = 4;
      while (1)
      {
        id v11 = (v6 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : *(id *)(v6 + 8 * v9);
        unint64_t v12 = v11;
        uint64_t v13 = v9 - 3;
        if (__OFADD__(v9 - 4, 1)) {
          break;
        }
        id v14 = [v11 targetApplicationRecord];
        id v15 = [v14 bundleIdentifier];

        if (v15)
        {
          uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v18 = v17;

          if (v16 == 0xD00000000000001CLL && v18 == 0x80000001007C3730)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

LABEL_22:
            uint64_t v26 = 1;
            swift_arrayDestroy();
            return v26;
          }
          char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();

          if (v10)
          {
            swift_bridgeObjectRelease();
            goto LABEL_22;
          }
        }
        else
        {
        }
        ++v9;
        if (v13 == v8) {
          goto LABEL_25;
        }
      }
      __break(1u);
LABEL_24:
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
LABEL_25:
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
  }
  else
  {
    id v19 = v28[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_10096A058 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_10000B47C(v20, (uint64_t)qword_10097AE08);
    swift_errorRetain();
    swift_errorRetain();
    BOOL v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 138412290;
      swift_errorRetain();
      uint64_t v25 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v28[0] = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v24 = v25;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Failed to get app links with error %@", v23, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  return 0;
}

uint64_t sub_1005E4610()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097AF10);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097AF10);
  if (qword_100969CF0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994720);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1005E47A0(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;
  swift_retain();
  v1(v2, v4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005E4894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 277) = a5;
  *(void *)(v5 + 40) = a4;
  uint64_t v6 = sub_10000A844(&qword_10097AFD0);
  *(void *)(v5 + 48) = v6;
  *(void *)(v5 + 56) = *(void *)(v6 - 8);
  *(void *)(v5 + 64) = swift_task_alloc();
  *(void *)(v5 + 72) = swift_task_alloc();
  sub_10000A844(&qword_10097AFD8);
  *(void *)(v5 + 80) = swift_task_alloc();
  uint64_t v7 = sub_10000A844(&qword_10097AFE0);
  *(void *)(v5 + 88) = v7;
  *(void *)(v5 + 96) = *(void *)(v7 - 8);
  *(void *)(v5 + 104) = swift_task_alloc();
  uint64_t v8 = sub_10000A844(&qword_10097AFE8);
  *(void *)(v5 + 112) = v8;
  *(void *)(v5 + 120) = *(void *)(v8 - 8);
  *(void *)(v5 + 128) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for LSKStatusOptions.Scope();
  *(void *)(v5 + 136) = v9;
  *(void *)(v5 + 144) = *(void *)(v9 - 8);
  *(void *)(v5 + 152) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for LSKStatusOptions();
  *(void *)(v5 + 160) = v10;
  *(void *)(v5 + 168) = *(void *)(v10 - 8);
  *(void *)(v5 + 176) = swift_task_alloc();
  *(void *)(v5 + 184) = sub_10000A844(&qword_10097AFF0);
  *(void *)(v5 + 192) = swift_task_alloc();
  *(void *)(v5 + 200) = swift_task_alloc();
  return _swift_task_switch(sub_1005E4B58, 0, 0);
}

uint64_t sub_1005E4B58()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 136);
  char v5 = *(unsigned char *)(v0 + 277);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(int *)(*(void *)(v0 + 184) + 48);
  *(_DWORD *)(v0 + 272) = v7;
  uint64_t v8 = v1 + v7;
  *(unsigned char *)(v0 + 276) = v5;
  uint64_t v9 = v6 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDLocalCellularStatusManager_tetheringLSKKey;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v3, enum case for LSKStatusOptions.Scope.sameAccount(_:), v4);
  sub_10000A844(&qword_10097AFF8);
  uint64_t v10 = type metadata accessor for LSKStatusOptions.DeviceType();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10076E7A0;
  (*(void (**)(unint64_t, void, uint64_t))(v11 + 104))(v13 + v12, enum case for LSKStatusOptions.DeviceType.n301(_:), v10);
  LSKStatusOptions.init(scope:publishToDeviceTypes:)();
  id v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 208) = v14;
  *id v14 = v0;
  v14[1] = sub_1005E4D70;
  uint64_t v15 = *(void *)(v0 + 200);
  uint64_t v16 = *(void *)(v0 + 176);
  return LSKLocalStatusClient.publish<A>(_:for:options:)(v15, v8, v0 + 276, v9, v16, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
}

uint64_t sub_1005E4D70()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 176);
  uint64_t v3 = *(void *)(*(void *)v1 + 168);
  uint64_t v4 = *(void *)(*(void *)v1 + 160);
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    char v5 = sub_1005E5BCC;
  }
  else {
    char v5 = sub_1005E4EE0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1005E4EE0()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 200) + *(int *)(v0 + 272);
  uint64_t v5 = *(void *)(v0 + 192) + *(int *)(*(void *)(v0 + 184) + 48);
  uint64_t v6 = *(void (**)(void))(v3 + 16);
  *(void *)(v0 + 224) = v6;
  *(void *)(v0 + 232) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6();
  sub_1005E7B1C(v4, v5);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v5, 1, v1);
  uint64_t v8 = *(void *)(v0 + 192);
  if (v7 == 1)
  {
    uint64_t v9 = *(void *)(v0 + 48);
    uint64_t v10 = *(void *)(v0 + 56);
    sub_10000A7E8(v5, &qword_10097B000);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    if (qword_10096A060 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000B47C(v11, (uint64_t)qword_10097AF10);
    unint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    BOOL v14 = os_log_type_enabled(v12, v13);
    uint64_t v15 = *(void *)(v0 + 200);
    if (v14)
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Not scanning for deliveries", v16, 2u);
      swift_slowDealloc();
    }

    sub_10000A7E8(v15, &qword_10097AFF0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
  else
  {
    uint64_t v19 = *(void *)(v0 + 48);
    uint64_t v20 = *(void *)(v0 + 56);
    (*(void (**)(void, uint64_t, void))(*(void *)(v0 + 120) + 32))(*(void *)(v0 + 128), v5, *(void *)(v0 + 112));
    BOOL v21 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    *(void *)(v0 + 240) = v21;
    *(void *)(v0 + 248) = (v20 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v21(v8, v19);
    LSKPublishedStatusSequence.makeAsyncIterator()();
    uint64_t v22 = sub_1002AE308(&qword_10097B008, &qword_10097AFE0);
    uint64_t v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1005E5220;
    uint64_t v24 = *(void *)(v0 + 80);
    uint64_t v25 = *(void *)(v0 + 88);
    return dispatch thunk of AsyncIteratorProtocol.next()(v24, v25, v22);
  }
}

uint64_t sub_1005E5220()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1005E589C;
  }
  else {
    uint64_t v2 = sub_1005E5334;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005E5334()
{
  uint64_t v42 = v0;
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    int v4 = *(unsigned __int8 *)(v0 + 277);
    (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 104), *(void *)(v0 + 88));
    if (v4) {
      uint64_t v5 = 0x64656C62616E65;
    }
    else {
      uint64_t v5 = 0x64656C6261736964;
    }
    if (v4) {
      unint64_t v6 = 0xE700000000000000;
    }
    else {
      unint64_t v6 = 0xE800000000000000;
    }
    if (qword_10096A060 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10000B47C(v7, (uint64_t)qword_10097AF10);
    swift_bridgeObjectRetain();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    BOOL v10 = os_log_type_enabled(v8, v9);
    uint64_t v11 = *(void *)(v0 + 200);
    uint64_t v13 = *(void *)(v0 + 120);
    uint64_t v12 = *(void *)(v0 + 128);
    uint64_t v14 = *(void *)(v0 + 112);
    if (v10)
    {
      uint64_t v39 = *(void *)(v0 + 200);
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 32) = sub_100254634(v5, v6, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Finished delivering cellular slicing status: %s", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
      uint64_t v16 = v39;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
      uint64_t v16 = v11;
    }
    sub_10000A7E8(v16, &qword_10097AFF0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    Swift::String v33 = *(uint64_t (**)(void))(v0 + 8);
    return v33();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(*(void *)(v0 + 72), v1, v2);
    if (qword_10096A060 != -1) {
      swift_once();
    }
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 224);
    uint64_t v18 = *(void *)(v0 + 64);
    uint64_t v19 = *(void *)(v0 + 72);
    uint64_t v20 = *(void *)(v0 + 48);
    uint64_t v21 = type metadata accessor for Logger();
    sub_10000B47C(v21, (uint64_t)qword_10097AF10);
    v17(v18, v19, v20);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v0 + 240);
    uint64_t v26 = *(void *)(v0 + 64);
    uint64_t v27 = *(void *)(v0 + 72);
    uint64_t v28 = *(void *)(v0 + 48);
    if (v24)
    {
      uint64_t v40 = *(void *)(v0 + 72);
      uint64_t v29 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315138;
      uint64_t v30 = LSKPublishedStatus.debugDescription.getter();
      *(void *)(v29 + 4) = sub_100254634(v30, v31, &v41);
      swift_bridgeObjectRelease();
      v25(v26, v28);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Delivery update: %s", (uint8_t *)v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v32 = v40;
    }
    else
    {

      v25(v26, v28);
      uint64_t v32 = v27;
    }
    v25(v32, v28);
    uint64_t v35 = sub_1002AE308(&qword_10097B008, &qword_10097AFE0);
    uint64_t v36 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v36;
    *uint64_t v36 = v0;
    v36[1] = sub_1005E5220;
    uint64_t v37 = *(void *)(v0 + 80);
    uint64_t v38 = *(void *)(v0 + 88);
    return dispatch thunk of AsyncIteratorProtocol.next()(v37, v38, v35);
  }
}

uint64_t sub_1005E589C()
{
  *(void *)(v0 + 24) = *(void *)(v0 + 264);
  sub_10000A844(&qword_10096BAF0);
  swift_willThrowTypedImpl();
  return _swift_task_switch(sub_1005E5928, 0, 0);
}

uint64_t sub_1005E5928()
{
  uint64_t v1 = v0[25];
  uint64_t v3 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v4 = v0[14];
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_10000A7E8(v1, &qword_10097AFF0);
  if (qword_10096A060 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000B47C(v5, (uint64_t)qword_10097AF10);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v9 = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "### Failed to publish for cellular slicing capability: %@", v8, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1005E5BCC()
{
  if (qword_10096A060 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097AF10);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "### Failed to publish for cellular slicing capability: %@", v4, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1005E6004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  uint64_t v5 = sub_10000A844(&qword_10097AFA0);
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  uint64_t v6 = sub_10000A844(&qword_10097AFA8);
  v4[9] = v6;
  v4[10] = *(void *)(v6 - 8);
  v4[11] = swift_task_alloc();
  uint64_t v7 = sub_10000A844(&qword_10097AFB0);
  v4[12] = v7;
  v4[13] = *(void *)(v7 - 8);
  v4[14] = swift_task_alloc();
  return _swift_task_switch(sub_1005E6188, 0, 0);
}

uint64_t sub_1005E6188()
{
  uint64_t v1 = v0[5] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDLocalCellularStatusManager_tetheringLSKKey;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[15] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1005E6258;
  uint64_t v3 = v0[14];
  return LSKLocalStatusClient.subscribe<A>(to:)(v3, v1, &type metadata for Bool, &protocol witness table for Bool, &protocol witness table for Bool);
}

uint64_t sub_1005E6258()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1005E6D68;
  }
  else {
    uint64_t v2 = sub_1005E636C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005E636C()
{
  LSKObservationsSequence.makeAsyncIterator()();
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDLocalCellularStatusManager_statusUpdated;
  v0[17] = OBJC_IVAR____TtC16DaemoniOSLibrary28SDLocalCellularStatusManager_lock;
  v0[18] = v1;
  uint64_t v2 = sub_1002AE308(&qword_10097AFB8, &qword_10097AFA8);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[19] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1005E6468;
  uint64_t v4 = v0[9];
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 3, v4, v2);
}

uint64_t sub_1005E6468()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1005E6A8C;
  }
  else {
    uint64_t v2 = sub_1005E657C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005E657C()
{
  *(void *)(v0 + 168) = *(void *)(v0 + 24);
  return _swift_task_switch(sub_1005E65A0, 0, 0);
}

uint64_t sub_1005E65A0()
{
  uint64_t v40 = v0;
  uint64_t v1 = *(void *)(v0 + 168);
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      uint64_t v3 = *(void *)(v0 + 56);
      unint64_t v4 = *(void *)(v0 + 168)
         + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
      uint64_t v5 = (os_unfair_lock_s *)(*(void *)(*(void *)(v0 + 40) + *(void *)(v0 + 136)) + 16);
      uint64_t v34 = *(void *)(v3 + 72);
      uint64_t v35 = *(void (**)(void, unint64_t, void))(v3 + 16);
      uint64_t v6 = *(void *)(v0 + 160);
      uint64_t v36 = v5;
      while (1)
      {
        uint64_t v37 = v2;
        v35(*(void *)(v0 + 64), v4, *(void *)(v0 + 48));
        uint64_t v38 = LSKLocalStatusObservation.deviceIDSIdentifier.getter();
        unint64_t v12 = v11;
        LSKLocalStatusObservation.value.getter();
        int v13 = *(unsigned __int8 *)(v0 + 176);
        if (qword_10096A060 != -1) {
          swift_once();
        }
        uint64_t v14 = type metadata accessor for Logger();
        sub_10000B47C(v14, (uint64_t)qword_10097AF10);
        swift_bridgeObjectRetain_n();
        uint64_t v15 = Logger.logObject.getter();
        os_log_type_t v16 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v15, v16))
        {
          uint64_t v17 = swift_slowAlloc();
          uint64_t v39 = swift_slowAlloc();
          *(_DWORD *)uint64_t v17 = 67109378;
          *(_DWORD *)(v17 + 4) = v13;
          *(_WORD *)(v17 + 8) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v18 = v38;
          *(void *)(v17 + 10) = sub_100254634(v38, v12, &v39);
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v15, v16, "Observed cellular slicing state of %{BOOL}d for %s", (uint8_t *)v17, 0x12u);
          swift_arrayDestroy();
          uint64_t v5 = v36;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();

          uint64_t v18 = v38;
        }
        uint64_t v19 = *(void *)(v0 + 40);
        uint64_t v20 = swift_task_alloc();
        *(void *)(v20 + 16) = v19;
        *(void *)(v20 + 24) = v18;
        *(void *)(v20 + 32) = v12;
        *(unsigned char *)(v20 + 40) = v13;
        uint64_t v21 = swift_task_alloc();
        *(void *)(v21 + 16) = sub_1005E79E0;
        *(void *)(v21 + 24) = v20;
        os_unfair_lock_lock(v5);
        sub_1002CEA38(v22);
        if (v6) {
          break;
        }
        uint64_t v23 = *(void *)(v0 + 144);
        uint64_t v24 = *(void *)(v0 + 40);
        os_unfair_lock_unlock(v5);
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v25 = *(void (**)(uint64_t, unint64_t))(v24 + v23);
        if (v25)
        {
          uint64_t v7 = *(void *)(v0 + 56);
          uint64_t v8 = *(void *)(v0 + 64);
          uint64_t v9 = *(void *)(v0 + 48);
          swift_retain();
          v25(v38, v12);
          sub_1002CA430((uint64_t)v25);
          swift_bridgeObjectRelease();
          uint64_t v10 = v8;
          uint64_t v5 = v36;
          (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v9);
        }
        else
        {
          (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
          swift_bridgeObjectRelease();
        }
        uint64_t v6 = 0;
        v4 += v34;
        uint64_t v2 = v37 - 1;
        if (v37 == 1) {
          goto LABEL_14;
        }
      }
      os_unfair_lock_unlock(v5);
      return swift_task_dealloc();
    }
    else
    {
LABEL_14:
      swift_bridgeObjectRelease();
      uint64_t v26 = sub_1002AE308(&qword_10097AFB8, &qword_10097AFA8);
      uint64_t v27 = (void *)swift_task_alloc();
      *(void *)(v0 + 152) = v27;
      *uint64_t v27 = v0;
      v27[1] = sub_1005E6468;
      uint64_t v28 = *(void *)(v0 + 72);
      return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 24, v28, v26);
    }
  }
  else
  {
    uint64_t v30 = *(void *)(v0 + 104);
    uint64_t v29 = *(void *)(v0 + 112);
    uint64_t v31 = *(void *)(v0 + 96);
    (*(void (**)(void, void))(*(void *)(v0 + 80) + 8))(*(void *)(v0 + 88), *(void *)(v0 + 72));
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
    return v32();
  }
}

uint64_t sub_1005E6A8C()
{
  *(void *)(v0 + 32) = *(void *)(v0 + 160);
  sub_10000A844(&qword_10096BAF0);
  swift_willThrowTypedImpl();
  return _swift_task_switch(sub_1005E6B18, 0, 0);
}

uint64_t sub_1005E6B18()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[12];
  (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (qword_10096A060 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_10097AF10);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "### Failed to subscribe to cellular slicing availability: %@", v7, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1005E6D68()
{
  if (qword_10096A060 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097AF10);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "### Failed to subscribe to cellular slicing availability: %@", v4, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1005E6F84(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDLocalCellularStatusManager_cellularSlicingObservations);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v7;
  *uint64_t v7 = 0x8000000000000000;
  sub_100594684(a4, a2, a3, isUniquelyReferenced_nonNull_native);
  *uint64_t v7 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1005E7214(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = &type metadata for TerminusFeatureFlag;
  unint64_t v10 = sub_1005E7888();
  char v3 = isFeatureEnabled(_:)();
  sub_10024D338((uint64_t)v8);
  uint64_t result = 0;
  if (v3)
  {
    if (a2)
    {
      uint64_t v5 = __chkstk_darwin(0);
      __chkstk_darwin(v5);
      uint64_t v7 = v6 + 4;
      os_unfair_lock_lock(v6 + 4);
      sub_1003CEC58(v8);
      os_unfair_lock_unlock(v7);
      return v8[0];
    }
  }
  return result;
}

uint64_t sub_1005E7310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDLocalCellularStatusManager_cellularSlicingObservations);
  uint64_t result = swift_beginAccess();
  uint64_t v9 = *v7;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1005838BC(a2, a3);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
LABEL_5:
    char v12 = 0;
    goto LABEL_6;
  }
  char v12 = *(unsigned char *)(*(void *)(v9 + 56) + v10);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_6:
  *a4 = v12;
  return result;
}

id sub_1005E7448()
{
  uint64_t v1 = type metadata accessor for LSKDomain();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDLocalCellularStatusManager_cellularSlicingObservations;
  uint64_t v6 = v0;
  *(void *)&v0[v5] = sub_100246BE8((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v7 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDLocalCellularStatusManager_tetheringLSKClient;
  type metadata accessor for LSKLocalStatusClient();
  swift_allocObject();
  *(void *)&v6[v7] = LSKLocalStatusClient.init()();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for LSKDomain.personalHotspot(_:), v1);
  LSKKey.init(domain:name:)();
  uint64_t v8 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDLocalCellularStatusManager_lock;
  sub_10000A844((uint64_t *)&unk_10096D4C0);
  uint64_t v9 = swift_allocObject();
  *(_DWORD *)(v9 + 16) = 0;
  *(void *)&v6[v8] = v9;
  uint64_t v10 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary28SDLocalCellularStatusManager_statusUpdated];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;

  char v11 = (objc_class *)type metadata accessor for SDLocalCellularStatusManager();
  v13.receiver = v6;
  v13.super_class = v11;
  return [super init];
}

id sub_1005E7624()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDLocalCellularStatusManager();
  return [super dealloc];
}

uint64_t sub_1005E7714()
{
  return type metadata accessor for SDLocalCellularStatusManager();
}

uint64_t type metadata accessor for SDLocalCellularStatusManager()
{
  uint64_t result = qword_10097AF70;
  if (!qword_10097AF70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005E7768()
{
  sub_1005E7820();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1005E7820()
{
  if (!qword_10097AF80)
  {
    unint64_t v0 = type metadata accessor for LSKKey();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10097AF80);
    }
  }
}

unint64_t sub_1005E7888()
{
  unint64_t result = qword_10097AF88;
  if (!qword_10097AF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10097AF88);
  }
  return result;
}

uint64_t sub_1005E78DC@<X0>(unsigned char *a1@<X8>)
{
  return sub_1005E7310(v1[2], v1[3], v1[4], a1);
}

const char *sub_1005E78FC()
{
  return "terminus";
}

const char *sub_1005E7910()
{
  return "PHSProxy";
}

uint64_t sub_1005E7924()
{
  return sub_1005E7A0C(40);
}

uint64_t sub_1005E792C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F4;
  return sub_1005E6004(a1, v4, v5, v6);
}

uint64_t sub_1005E79E0()
{
  return sub_1005E6F84(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_1005E7A04()
{
  return sub_1005E7A0C(41);
}

uint64_t sub_1005E7A0C(uint64_t a1)
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_1005E7A58(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10000A6F0;
  return sub_1005E4894(a1, v4, v5, v6, v7);
}

uint64_t sub_1005E7B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_10097B000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005E7B84()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1005E7BBC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = String._bridgeToObjectiveC()();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

uint64_t sub_1005E7C14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005E7C24()
{
  return swift_release();
}

unsigned char *storeEnumTagSinglePayload for TerminusFeatureFlag(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1005E7CC8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TerminusFeatureFlag()
{
  return &type metadata for TerminusFeatureFlag;
}

unint64_t sub_1005E7D04()
{
  unint64_t result = qword_10097B018;
  if (!qword_10097B018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097B018);
  }
  return result;
}

uint64_t sub_1005E7D58(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x674179627261656ELL;
  unint64_t v3 = 0xEB00000000746E65;
  uint64_t v4 = a1;
  unint64_t v5 = 0x674179627261656ELL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x6C61636F4C736469;
      break;
    case 2:
      unint64_t v5 = 0x7265746E49736469;
      unint64_t v3 = 0xEB0000000074656ELL;
      break;
    case 3:
      unint64_t v5 = 0x4274726F70706172;
      unint64_t v3 = 0xE900000000000054;
      break;
    case 4:
      unint64_t v5 = 0x4174726F70706172;
      unint64_t v3 = 0xEB000000004C4457;
      break;
    case 5:
      unint64_t v3 = 0x80000001007B5F90;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 6:
      unint64_t v5 = 0x65756C4265726F63;
      unint64_t v3 = 0xED000068746F6F74;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xEB00000000746E65;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x6C61636F4C736469) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      uint64_t v7 = 0x7265746E49736469;
      uint64_t v8 = 7628142;
      goto LABEL_15;
    case 3:
      unint64_t v6 = 0xE900000000000054;
      if (v5 != 0x4274726F70706172) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      uint64_t v7 = 0x4174726F70706172;
      uint64_t v8 = 4998231;
LABEL_15:
      unint64_t v6 = v8 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      if (v5 != v7) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v6 = 0x80000001007B5F90;
      unint64_t v2 = 0xD000000000000010;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xED000068746F6F74;
      if (v5 != 0x65756C4265726F63) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v9 = 1;
      }
      else {
LABEL_22:
      }
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1005E7FEC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEE00726569666974;
  uint64_t v3 = 0x6E65644965736163;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E65644965736163;
  unint64_t v6 = 0xEE00726569666974;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x444955557462;
      break;
    case 2:
      uint64_t v5 = 0x69666E6F4363666ELL;
      unint64_t v6 = 0xE900000000000067;
      break;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x69746C754D7369;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      if (v5 == 0x444955557462) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x69666E6F4363666ELL;
      unint64_t v2 = 0xE900000000000067;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE700000000000000;
      if (v5 == 0x69746C754D7369) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1005E8194(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEF4449656C707041;
  unint64_t v3 = 0x7265766965636552;
  uint64_t v4 = a1;
  unint64_t v5 = 0x7265766965636552;
  unint64_t v6 = 0xEF4449656C707041;
  switch(v4)
  {
    case 1:
      char v7 = "SenderRecordData";
      goto LABEL_5;
    case 2:
      unint64_t v5 = 0xD000000000000015;
      uint64_t v8 = "ReceiverDeviceIRKData";
      goto LABEL_8;
    case 3:
      char v7 = "ReceiverEdPKData";
LABEL_5:
      unint64_t v6 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 4:
      unint64_t v5 = 0xD000000000000013;
      uint64_t v8 = "ReceiverIDSDeviceID";
      goto LABEL_8;
    case 5:
      unint64_t v5 = 0xD000000000000013;
      uint64_t v8 = "RapportFeatureFlags";
LABEL_8:
      unint64_t v6 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      char v9 = "SenderRecordData";
      goto LABEL_13;
    case 2:
      unint64_t v10 = 0xD000000000000015;
      char v11 = "ReceiverDeviceIRKData";
      goto LABEL_18;
    case 3:
      char v9 = "ReceiverEdPKData";
LABEL_13:
      unint64_t v2 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000010;
      goto LABEL_14;
    case 4:
      unint64_t v10 = 0xD000000000000013;
      char v11 = "ReceiverIDSDeviceID";
      goto LABEL_18;
    case 5:
      unint64_t v10 = 0xD000000000000013;
      char v11 = "RapportFeatureFlags";
LABEL_18:
      unint64_t v2 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      if (v5 == v10) {
        goto LABEL_19;
      }
      goto LABEL_21;
    default:
LABEL_14:
      if (v5 != v3) {
        goto LABEL_21;
      }
LABEL_19:
      if (v6 == v2) {
        char v12 = 1;
      }
      else {
LABEL_21:
      }
        char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12 & 1;
  }
}

uint64_t sub_1005E8380(char a1, char a2)
{
  unint64_t v3 = 0xD000000000000014;
  unint64_t v4 = 0x80000001007B5C30;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xD000000000000019;
      unint64_t v5 = "ReceiverMediaCapabilities";
      goto LABEL_9;
    case 2:
      unint64_t v3 = 0xD000000000000012;
      unint64_t v5 = "ReceiverRecordData";
      goto LABEL_9;
    case 3:
      unint64_t v6 = "ReceiverModelName";
      goto LABEL_11;
    case 4:
      unint64_t v3 = 0xD000000000000015;
      unint64_t v5 = "ReceiverDeviceIRKData";
      goto LABEL_9;
    case 5:
      unint64_t v3 = 0xD000000000000010;
      unint64_t v5 = "ReceiverEdPKData";
      goto LABEL_9;
    case 6:
      unint64_t v3 = 0xD000000000000013;
      unint64_t v5 = "ReceiverIDSDeviceID";
      goto LABEL_9;
    case 7:
      unint64_t v3 = 0xD000000000000013;
      unint64_t v5 = "RapportFeatureFlags";
LABEL_9:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      break;
    case 8:
      unint64_t v6 = "SendersKnownAlias";
LABEL_11:
      unint64_t v4 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000011;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xD000000000000014;
  unint64_t v8 = 0x80000001007B5C30;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xD000000000000019;
      char v9 = "ReceiverMediaCapabilities";
      goto LABEL_20;
    case 2:
      unint64_t v7 = 0xD000000000000012;
      char v9 = "ReceiverRecordData";
      goto LABEL_20;
    case 3:
      unint64_t v10 = "ReceiverModelName";
      goto LABEL_25;
    case 4:
      unint64_t v7 = 0xD000000000000015;
      char v9 = "ReceiverDeviceIRKData";
      goto LABEL_20;
    case 5:
      unint64_t v7 = 0xD000000000000010;
      char v9 = "ReceiverEdPKData";
      goto LABEL_20;
    case 6:
      unint64_t v7 = 0xD000000000000013;
      char v9 = "ReceiverIDSDeviceID";
      goto LABEL_20;
    case 7:
      unint64_t v7 = 0xD000000000000013;
      char v9 = "RapportFeatureFlags";
LABEL_20:
      unint64_t v8 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      goto LABEL_21;
    case 8:
      unint64_t v10 = "SendersKnownAlias";
LABEL_25:
      unint64_t v8 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      if (v3 != 0xD000000000000011) {
        goto LABEL_26;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v3 != v7) {
        goto LABEL_26;
      }
LABEL_22:
      if (v4 == v8) {
        char v11 = 1;
      }
      else {
LABEL_26:
      }
        char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v11 & 1;
  }
}

uint64_t sub_1005E85BC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000004449;
  uint64_t v3 = 0x726566736E617254;
  uint64_t v4 = a1;
  unint64_t v5 = 0x726566736E617254;
  unint64_t v6 = 0xEA00000000004449;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6D614E6E65766947;
      unint64_t v6 = 0xE900000000000065;
      break;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x656D614E6C6C7546;
      break;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      unint64_t v5 = 0x656C646E6148;
      break;
    case 4:
      unint64_t v5 = 0x7461446472614356;
      unint64_t v6 = 0xE900000000000061;
      break;
    case 5:
      unint64_t v6 = 0x80000001007B5D90;
      unint64_t v5 = 0xD000000000000011;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE900000000000065;
      if (v5 == 0x6D614E6E65766947) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x656D614E6C6C7546) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v2 = 0xE600000000000000;
      if (v5 != 0x656C646E6148) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v3 = 0x7461446472614356;
      unint64_t v2 = 0xE900000000000061;
      goto LABEL_15;
    case 5:
      unint64_t v2 = 0x80000001007B5D90;
      if (v5 != 0xD000000000000011) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v3) {
        goto LABEL_19;
      }
LABEL_16:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1005E87E8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000004449;
  uint64_t v3 = 0x726566736E617254;
  uint64_t v4 = a1;
  uint64_t v5 = 0x726566736E617254;
  unint64_t v6 = 0xEA00000000004449;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x7479426C61746F54;
      unint64_t v6 = 0xEA00000000007365;
      break;
    case 2:
      uint64_t v5 = 0x2D746E65746E6F43;
      unint64_t v6 = 0xEC00000065707954;
      break;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1635017028;
      break;
    case 4:
      uint64_t v5 = 0x6F4364616F6C7055;
      unint64_t v6 = 0xEE006574656C706DLL;
      break;
    case 5:
      uint64_t v5 = 0x73507265646E6553;
      unint64_t v6 = 0xEF6D796E6F647565;
      break;
    case 6:
      uint64_t v5 = 0x75507265646E6553;
      unint64_t v6 = 0xEF6E656B6F546873;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEA00000000007365;
      if (v5 == 0x7479426C61746F54) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v2 = 0xEC00000065707954;
      if (v5 != 0x2D746E65746E6F43) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v2 = 0xE400000000000000;
      if (v5 != 1635017028) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v2 = 0xEE006574656C706DLL;
      if (v5 != 0x6F4364616F6C7055) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      uint64_t v3 = 0x73507265646E6553;
      unint64_t v2 = 0xEF6D796E6F647565;
      goto LABEL_18;
    case 6:
      unint64_t v2 = 0xEF6E656B6F546873;
      if (v5 != 0x75507265646E6553) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v3) {
        goto LABEL_22;
      }
LABEL_19:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1005E8A8C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x726F727245;
  }
  else {
    uint64_t v3 = 0x726566736E617254;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000004449;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x726F727245;
  }
  else {
    uint64_t v5 = 0x726566736E617254;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xEA00000000004449;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1005E8B34(char a1, char a2)
{
  unint64_t v3 = 0xD000000000000014;
  unint64_t v4 = 0x80000001007B5C30;
  switch(a1)
  {
    case 1:
      uint64_t v5 = "ReceiverModelName";
      goto LABEL_7;
    case 2:
      unint64_t v3 = 0xD000000000000017;
      unint64_t v6 = "SupportsContactExchange";
      goto LABEL_9;
    case 3:
      unint64_t v3 = 0x6973736553534449;
      unint64_t v4 = 0xEC00000044496E6FLL;
      break;
    case 4:
      uint64_t v5 = "ReceiverPseudonym";
      goto LABEL_7;
    case 5:
      uint64_t v5 = "ReceiverPushToken";
LABEL_7:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000011;
      break;
    case 6:
      unint64_t v3 = 0xD000000000000015;
      unint64_t v6 = "ReceiverCustomPayload";
LABEL_9:
      unint64_t v4 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xD000000000000014;
  unint64_t v8 = 0x80000001007B5C30;
  switch(a2)
  {
    case 1:
      char v9 = "ReceiverModelName";
      goto LABEL_17;
    case 2:
      unint64_t v10 = 0xD000000000000017;
      char v11 = "SupportsContactExchange";
      goto LABEL_21;
    case 3:
      unint64_t v8 = 0xEC00000044496E6FLL;
      if (v3 != 0x6973736553534449) {
        goto LABEL_24;
      }
      goto LABEL_22;
    case 4:
      char v9 = "ReceiverPseudonym";
      goto LABEL_17;
    case 5:
      char v9 = "ReceiverPushToken";
LABEL_17:
      unint64_t v8 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      unint64_t v7 = 0xD000000000000011;
      goto LABEL_18;
    case 6:
      unint64_t v10 = 0xD000000000000015;
      char v11 = "ReceiverCustomPayload";
LABEL_21:
      unint64_t v8 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      if (v3 == v10) {
        goto LABEL_22;
      }
      goto LABEL_24;
    default:
LABEL_18:
      if (v3 != v7) {
        goto LABEL_24;
      }
LABEL_22:
      if (v4 == v8) {
        char v12 = 1;
      }
      else {
LABEL_24:
      }
        char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12 & 1;
  }
}

uint64_t sub_1005E8D44(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x656D614E656C6946;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x656D614E656C6946;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x65707954656C6946;
      break;
    case 2:
      unint64_t v5 = 0x54627553656C6946;
      unint64_t v3 = 0xEB00000000657079;
      break;
    case 3:
      unint64_t v5 = 0x657A6953656C6946;
      break;
    case 4:
      unint64_t v5 = 0x506D6F42656C6946;
      unint64_t v3 = 0xEB00000000687461;
      break;
    case 5:
      unint64_t v5 = 0x69447349656C6946;
      unint64_t v3 = 0xEF79726F74636572;
      break;
    case 6:
      unint64_t v3 = 0x80000001007B5F30;
      unint64_t v5 = 0xD000000000000019;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x65707954656C6946) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      uint64_t v7 = 0x54627553656C6946;
      uint64_t v8 = 6647929;
      goto LABEL_15;
    case 3:
      if (v5 != 0x657A6953656C6946) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      uint64_t v7 = 0x506D6F42656C6946;
      uint64_t v8 = 6845537;
LABEL_15:
      unint64_t v6 = v8 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      if (v5 != v7) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      uint64_t v2 = 0x69447349656C6946;
      unint64_t v6 = 0xEF79726F74636572;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0x80000001007B5F30;
      if (v5 != 0xD000000000000019) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v9 = 1;
      }
      else {
LABEL_22:
      }
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1005E8FB4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x636F6C6E5563616DLL;
      unint64_t v3 = 0xEE00656E6F68506BLL;
      break;
    case 2:
      uint64_t v5 = 0x6C436B636F6C6E75;
      unint64_t v3 = 0xEC00000043737361;
      break;
    case 3:
      uint64_t v5 = 0x646F4D7473657567;
      unint64_t v3 = 0xEF6B636F6C6E5565;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEE00656E6F68506BLL;
      if (v5 == 0x636F6C6E5563616DLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x6C436B636F6C6E75;
      unint64_t v6 = 0xEC00000043737361;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEF6B636F6C6E5565;
      if (v5 == 0x646F4D7473657567) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1005E9184(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000006465;
  uint64_t v3 = 0x7472617453746F6ELL;
  unint64_t v4 = 0xEA00000000006465;
  uint64_t v5 = a1;
  uint64_t v6 = 0x7472617453746F6ELL;
  switch(v5)
  {
    case 1:
      uint64_t v6 = 0x6572676F72506E69;
      unint64_t v4 = 0xEA00000000007373;
      break;
    case 2:
      uint64_t v6 = 0x6574656C706D6F63;
      unint64_t v4 = 0xE900000000000064;
      break;
    case 3:
      unint64_t v4 = 0xE600000000000000;
      uint64_t v6 = 0x64656C696166;
      break;
    case 4:
      unint64_t v4 = 0xE400000000000000;
      uint64_t v6 = 1885956979;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEA00000000007373;
      if (v6 == 0x6572676F72506E69) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xE900000000000064;
      if (v6 != 0x6574656C706D6F63) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x64656C696166;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xE400000000000000;
      if (v6 != 1885956979) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v6 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v4 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1005E9348()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005E9494()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005E95A8()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005E96D4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005E97E4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005E98F4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1005E9A28()
{
  return Hasher._finalize()();
}

Swift::Int sub_1005E9B84()
{
  return Hasher._finalize()();
}

Swift::Int sub_1005E9CA8()
{
  return Hasher._finalize()();
}

Swift::Int sub_1005E9DC8()
{
  return Hasher._finalize()();
}

Swift::Int sub_1005E9F20()
{
  return Hasher._finalize()();
}

Swift::Int sub_1005EA048()
{
  return Hasher._finalize()();
}

uint64_t sub_1005EA18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  if (a3) {
    a3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  v4(v5, a3);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005EA250()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097B020);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097B020);
  if (qword_100969CD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946C0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

unint64_t sub_1005EA318(char a1)
{
  unint64_t result = 0x674179627261656ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C61636F4C736469;
      break;
    case 2:
      unint64_t result = 0x7265746E49736469;
      break;
    case 3:
      unint64_t result = 0x4274726F70706172;
      break;
    case 4:
      unint64_t result = 0x4174726F70706172;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0x65756C4265726F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1005EA430(unsigned __int8 *a1, char *a2)
{
  return sub_1005E7D58(*a1, *a2);
}

Swift::Int sub_1005EA43C()
{
  return sub_1005E9A28();
}

uint64_t sub_1005EA448()
{
  return sub_1005E9348();
}

Swift::Int sub_1005EA450()
{
  return sub_1005E9A28();
}

unint64_t sub_1005EA458@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1005F66B8(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1005EA488@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1005EA318(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1005EA4B4(char a1, uint64_t a2)
{
  switch(a1)
  {
    case 1:
      uint64_t v3 = OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_idsLocalTransport;
      goto LABEL_10;
    case 2:
      uint64_t v3 = OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_idsInternetTransport;
      goto LABEL_10;
    case 3:
      uint64_t v3 = OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_rapportTransportBT;
      goto LABEL_10;
    case 4:
      uint64_t v3 = OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_rapportTransportAWDL;
      goto LABEL_10;
    case 5:
      sub_10050A65C(a2, (uint64_t)&v10);
      if (!v11)
      {
        sub_10000A7E8((uint64_t)&v10, &qword_10097BB50);
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        JUMPOUT(0x1005EA690);
      }
      uint64_t v4 = sub_1002AF688(&v10, (uint64_t)v12);
      uint64_t v5 = __chkstk_darwin(v4);
      __chkstk_darwin(v5);
      char v7 = v6 + 4;
      os_unfair_lock_lock(v6 + 4);
      sub_1003CEF14(&v10);
      os_unfair_lock_unlock(v7);
      *(void *)&long long v9 = v10;
      sub_10024D338((uint64_t)v12);
      return v9;
    case 6:
      uint64_t v3 = OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_coreBluetoothTransport;
      goto LABEL_10;
    default:
      uint64_t v3 = OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_nearbyAgentTransport;
LABEL_10:
      long long v9 = *(_OWORD *)(v2 + v3);
      swift_unknownObjectRetain();
      return v9;
  }
}

uint64_t sub_1005EA6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000B47C(v10, (uint64_t)qword_10097B020);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    objc_super v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)objc_super v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "TransportManager: sending", v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
    v24[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v16 = 136315138;
    unint64_t v17 = sub_100509B38(a4);
    sub_100254634(v17, v18, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "TransportManager: sending message of type: %s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_100278C8C(a3, (uint64_t)v24);
  sub_1005EA4B4(a5, (uint64_t)v24);
  uint64_t v20 = v19;
  sub_10000A7E8((uint64_t)v24, &qword_10097BB50);
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 48))(a1, a2, a3, a4, ObjectType, v20);
  swift_unknownObjectRelease();
  return v22 | ((HIDWORD(v22) & 1) << 32);
}

uint64_t sub_1005EA960(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = v4;
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000B47C(v10, (uint64_t)qword_10097B020);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    objc_super v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)objc_super v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "TransportManager: handling", v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v16 = 136315138;
    unint64_t v17 = sub_100509B38(a3);
    sub_100254634(v17, v18, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "TransportManager: handling message of type: %s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v19 = v5 + OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v21 = *(void *)(v19 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(v21 + 8))(a1, a2, a3, a4, ObjectType, v21);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1005EABDC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, int a6)
{
  char v7 = v6;
  int v26 = a1;
  int v27 = a6;
  uint64_t v29 = a4;
  unint64_t v30 = a5;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v28 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  os_log_type_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  os_log_type_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_10000B47C(v16, (uint64_t)qword_10097B020);
  unint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "TransportManager: handling error", v19, 2u);
    swift_slowDealloc();
  }

  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v7;
  *(_DWORD *)(v20 + 24) = v26;
  *(void *)(v20 + 32) = a2;
  *(void *)(v20 + 40) = a3;
  uint64_t v22 = v29;
  unint64_t v21 = v30;
  *(void *)(v20 + 48) = v29;
  *(void *)(v20 + 56) = v21;
  *(unsigned char *)(v20 + 64) = v27;
  aBlock[4] = sub_1005F64DC;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  aBlock[3] = &unk_1008E1A98;
  uint64_t v23 = _Block_copy(aBlock);
  id v24 = v7;
  swift_bridgeObjectRetain();
  sub_10025ADCC(v22, v21);
  static DispatchQoS.unspecified.getter();
  uint64_t v32 = _swiftEmptyArrayStorage;
  sub_10000BB78((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002B4B9C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v31);
  return swift_release();
}

uint64_t sub_1005EAF74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = a1 + OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v15 = *(void *)(v13 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16))(a2, a3, a4, a5, a6, a7, ObjectType, v15);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1005EB048()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_nearbyAgentTransport + 8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(ObjectType, v9);
  if (result)
  {
    uint64_t v12 = *(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_idsLocalTransport + 8];
    uint64_t v13 = swift_getObjectType();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 32))(v13, v12);
    if (result)
    {
      uint64_t v14 = *(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_idsInternetTransport + 8];
      uint64_t v15 = swift_getObjectType();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 32))(v15, v14);
      if (result)
      {
        uint64_t v16 = *(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_rapportTransportBT + 8];
        uint64_t v17 = swift_getObjectType();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 32))(v17, v16);
        if (result)
        {
          uint64_t v18 = *(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_rapportTransportAWDL
                             + 8];
          uint64_t v19 = swift_getObjectType();
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 32))(v19, v18);
          if (result)
          {
            uint64_t v20 = *(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_coreBluetoothTransport
                               + 8];
            uint64_t v21 = swift_getObjectType();
            uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 32))(v21, v20);
            if (result)
            {
              uint64_t v22 = swift_allocObject();
              *(void *)(v22 + 16) = v0;
              aBlock[4] = sub_1005F648C;
              aBlock[5] = v22;
              aBlock[0] = _NSConcreteStackBlock;
              aBlock[1] = 1107296256;
              aBlock[2] = sub_100296520;
              aBlock[3] = &unk_1008E1A48;
              uint64_t v23 = _Block_copy(aBlock);
              id v24 = v0;
              static DispatchQoS.unspecified.getter();
              v25[1] = _swiftEmptyArrayStorage;
              sub_10000BB78((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
              sub_10000A844((uint64_t *)&unk_10096C490);
              sub_1002B4B9C();
              dispatch thunk of SetAlgebra.init<A>(_:)();
              OS_dispatch_queue.async(group:qos:flags:execute:)();
              _Block_release(v23);
              (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
              (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
              return swift_release();
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1005EB41C(uint64_t a1)
{
  uint64_t v1 = a1 + OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v3 + 24))(ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1005EB494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for SDAuthenticationTransportRapportInfraWiFiOnly();
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    sub_10050A65C(a3, (uint64_t)&v10);
    if (v11)
    {
      sub_1002AF688(&v10, (uint64_t)v12);
      uint64_t v5 = v13;
      uint64_t v6 = v14;
      sub_10026BB6C(v12, v13);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      if (v7)
      {
        uint64_t v8 = result;
        uint64_t v9 = v7;
        swift_beginAccess();
        sub_1002AA2EC(v8, v9);
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        return sub_10024D338((uint64_t)v12);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      return sub_10000A7E8((uint64_t)&v10, &qword_10097BB50);
    }
  }
  return result;
}

uint64_t sub_1005EB5B8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v5 = a2[3];
  uint64_t v4 = a2[4];
  sub_10026BB6C(a2, v5);
  id v24 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t result = v24(v5, v4);
  if (v7)
  {
    uint64_t v8 = result;
    uint64_t v9 = v7;
    long long v10 = (uint64_t *)(a1
                    + OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_rapportInfraWiFiTransportsByIdentifier);
    swift_beginAccess();
    uint64_t v11 = *v10;
    if (*(void *)(*v10 + 16))
    {
      uint64_t v12 = sub_1005838BC(v8, v9);
      if (v13)
      {
        long long v25 = *(_OWORD *)(*(void *)(v11 + 56) + 16 * v12);
        swift_endAccess();
        swift_unknownObjectRetain();
        uint64_t result = swift_bridgeObjectRelease();
        long long v14 = v25;
LABEL_7:
        *a3 = v14;
        return result;
      }
    }
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v15 = *(void **)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_queue);
    type metadata accessor for SDAuthenticationTransportRapportInfraWiFiOnly();
    uint64_t v16 = swift_allocObject();
    *(unsigned char *)(v16 + 56) = 0;
    *(void *)(v16 + 32) = 0;
    *(void *)(v16 + 40) = 0;
    id v17 = objc_allocWithZone((Class)RPCompanionLinkClient);
    id v18 = v15;
    id v19 = [v17 init];
    *(void *)(v16 + 48) = v19;
    *(void *)(v16 + 16) = v18;
    *(unsigned char *)(v16 + 24) = 0;
    [v19 setDispatchQueue:v18];
    *(void *)(v16 + 64) = 0x60000400004;
    uint64_t result = v24(v5, v4);
    if (v20)
    {
      uint64_t v21 = result;
      uint64_t v22 = v20;
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v27 = *v10;
      *long long v10 = 0x8000000000000000;
      sub_1005F5720(v16, v21, v22, isUniquelyReferenced_nonNull_native, &v27);
      *long long v10 = v27;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_endAccess();
      *(void *)&long long v14 = v16;
      *((void *)&v14 + 1) = &off_1008E17E8;
      goto LABEL_7;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SDAuthenticationTransportManager()
{
  return self;
}

uint64_t sub_1005EB938(void *a1)
{
  *(void *)(v1 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v1 + 16) = a1;
  *(unsigned char *)(v1 + 24) = 1;
  *(void *)(v1 + 48) = sub_1005EBA44;
  *(void *)(v1 + 56) = 0;
  uint64_t v3 = self;
  id v4 = a1;
  id v5 = [v3 defaultCenter];
  uint64_t v6 = qword_10096A070;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  [v5 addObserver:v1 selector:"handleBLEMessage:" name:qword_100994928 object:0];

  swift_release();
  return v1;
}

id sub_1005EBA44(void *a1)
{
  return sub_1005EFCC8(a1);
}

void sub_1005EBA9C(uint64_t a1)
{
  if (a1)
  {
    if (qword_10096A068 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_10000B47C(v1, (uint64_t)qword_10097B020);
    swift_errorRetain();
    swift_errorRetain();
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)uint64_t v3 = 136315138;
      swift_errorRetain();
      sub_10000A844(&qword_100970E18);
      uint64_t v4 = String.init<A>(describing:)();
      sub_100254634(v4, v5, &v10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Error sending data: %s", v3, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_10096A068 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_10097B020);
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, "Sent data", v8, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_1005EBD44()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v57 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  os_log_type_t v2 = (char *)&v50 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  uint64_t v56 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A844(&qword_100974EA0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v50 - v10;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v59 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  long long v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = Notification.userInfo.getter();
  if (!v15)
  {
    long long v68 = 0u;
    long long v69 = 0u;
LABEL_13:
    long long v25 = (uint64_t *)&unk_10096AC20;
    int v26 = (char *)&v68;
LABEL_23:
    sub_10000A7E8((uint64_t)v26, v25);
    goto LABEL_24;
  }
  uint64_t v16 = v15;
  uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v67 = v17;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v16 + 16) && (unint64_t v18 = sub_100583878((uint64_t)&aBlock), (v19 & 1) != 0))
  {
    sub_10024D2D4(*(void *)(v16 + 56) + 32 * v18, (uint64_t)&v68);
  }
  else
  {
    long long v68 = 0u;
    long long v69 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10025B0A8((uint64_t)&aBlock);
  if (!*((void *)&v69 + 1)) {
    goto LABEL_13;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_24;
  }
  uint64_t v54 = aBlock;
  unint64_t v55 = v61;
  uint64_t v20 = Notification.userInfo.getter();
  if (!v20)
  {
    long long v68 = 0u;
    long long v69 = 0u;
LABEL_20:
    sub_10000A7E8((uint64_t)&v68, (uint64_t *)&unk_10096AC20);
    goto LABEL_21;
  }
  uint64_t v21 = v20;
  uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v67 = v22;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v21 + 16) && (unint64_t v23 = sub_100583878((uint64_t)&aBlock), (v24 & 1) != 0))
  {
    sub_10024D2D4(*(void *)(v21 + 56) + 32 * v23, (uint64_t)&v68);
  }
  else
  {
    long long v68 = 0u;
    long long v69 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10025B0A8((uint64_t)&aBlock);
  if (!*((void *)&v69 + 1)) {
    goto LABEL_20;
  }
  sub_10000B740(0, &qword_10097BBA8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_21:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v11, 1, 1, v12);
    uint64_t v31 = (uint64_t)v54;
    unint64_t v30 = v55;
LABEL_22:
    sub_100250CC4(v31, v30);
    long long v25 = &qword_100974EA0;
    int v26 = v11;
    goto LABEL_23;
  }
  uint64_t v27 = aBlock;
  id v28 = [aBlock identifier];

  if (v28)
  {
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v29 = 0;
  }
  else
  {
    uint64_t v29 = 1;
  }
  uint64_t v36 = v59;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v9, v29, 1, v12);
  sub_1005F7168((uint64_t)v9, (uint64_t)v11);
  int v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48))(v11, 1, v12);
  uint64_t v31 = (uint64_t)v54;
  unint64_t v30 = v55;
  if (v37 == 1) {
    goto LABEL_22;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v14, v11, v12);
  id v38 = objc_allocWithZone((Class)SDAutoUnlockSessionWrapper);
  sub_10025ADCC(v31, v30);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100250CC4(v31, v30);
  id v40 = [v38 initWithData:isa];

  if (v40)
  {
    if ([v40 hasEncryptedPayload])
    {
      uint64_t v41 = v58;
      uint64_t v42 = (uint64_t (*)(id, char *))v58[6];
      swift_retain();
      id v53 = v40;
      uint64_t v43 = (void *)v42(v40, v14);
      unint64_t v45 = v44;
      swift_release();
      if (v45 >> 60 != 15)
      {
        uint64_t v52 = v41[2];
        uint64_t v46 = swift_allocObject();
        swift_weakInit();
        long long v47 = (void *)swift_allocObject();
        v47[2] = v43;
        v47[3] = v45;
        id v48 = v53;
        v47[4] = v53;
        v47[5] = v46;
        unint64_t v64 = sub_1005F7218;
        int v65 = v47;
        aBlock = _NSConcreteStackBlock;
        unint64_t v61 = 1107296256;
        uint64_t v62 = sub_100296520;
        unint64_t v63 = &unk_1008E1D80;
        uint64_t v51 = _Block_copy(&aBlock);
        sub_100278C78((uint64_t)v43, v45);
        unint64_t v58 = v48;
        swift_retain();
        static DispatchQoS.unspecified.getter();
        *(void *)&long long v68 = _swiftEmptyArrayStorage;
        sub_10000BB78((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        id v53 = v43;
        sub_10000A844((uint64_t *)&unk_10096C490);
        sub_1002B4B9C();
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v49 = v51;
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v49);

        sub_100250CB0((uint64_t)v53, v45);
        sub_100250CC4((uint64_t)v54, v55);
        (*(void (**)(char *, uint64_t))(v57 + 8))(v2, v0);
        (*(void (**)(char *, uint64_t))(v56 + 8))(v5, v3);
        (*(void (**)(char *, uint64_t))(v59 + 8))(v14, v12);
        swift_release();
        swift_release();
        return;
      }
      (*(void (**)(char *, uint64_t))(v59 + 8))(v14, v12);
      sub_100250CC4((uint64_t)v54, v55);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v59 + 8))(v14, v12);
      sub_100250CC4((uint64_t)v54, v55);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v14, v12);
    sub_100250CC4(v31, v30);
  }
LABEL_24:
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v32 = type metadata accessor for Logger();
  sub_10000B47C(v32, (uint64_t)qword_10097B020);
  Swift::String v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Received corrupt wrapper", v35, 2u);
    swift_slowDealloc();
  }
}

void sub_1005EC60C(uint64_t a1, unint64_t a2, void *a3)
{
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_10097B020);
  sub_10025ADCC(a1, a2);
  sub_10025ADCC(a1, a2);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    v29[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    sub_10025ADCC(a1, a2);
    uint64_t v10 = a3;
    uint64_t v11 = Data.description.getter();
    unint64_t v13 = v12;
    sub_100250CC4(a1, a2);
    uint64_t v14 = v11;
    a3 = v10;
    v29[5] = sub_100254634(v14, v13, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100250CC4(a1, a2);
    sub_100250CC4(a1, a2);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Received data: %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100250CC4(a1, a2);
    sub_100250CC4(a1, a2);
  }

  int v15 = [a3 messageType];
  uint64_t v16 = sub_10050ACE8(v15);
  if (v16 == 12)
  {
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      char v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)char v19 = 67109120;
      LODWORD(v29[0]) = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Received unknown message type %u", v19, 8u);
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v20 = v16;
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v22 = Strong;
      uint64_t v23 = swift_unknownObjectWeakLoadStrong();
      uint64_t v24 = *(void *)(v22 + 40);
      swift_release();
      if (v23)
      {
        id v25 = [self sharedTransport];
        if (v25)
        {
          int v26 = v25;
          id v27 = [v25 activeDevice];

          if (v27)
          {
            uint64_t ObjectType = swift_getObjectType();
            v29[3] = sub_10000B740(0, &qword_10097BB60);
            v29[4] = (uint64_t)&off_1008E2510;
            v29[0] = (uint64_t)v27;
            (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(v24 + 8))(a1, a2, v20, v29, ObjectType, v24);
            swift_unknownObjectRelease();
            sub_10024D338((uint64_t)v29);
            return;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
      }
    }
  }
}

uint64_t sub_1005ECAE0()
{
  sub_100261080(v0 + 32);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDAuthenticationTransportNearbyAgent()
{
  return self;
}

uint64_t sub_1005ECB4C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 40) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t sub_1005ECB90(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 a4)
{
  unint64_t v4 = sub_1005F5DB4(a1, a2, a3, a4);
  return v4 | ((HIDWORD(v4) & 1) << 32);
}

__CFString *sub_1005ECBBC()
{
  qword_100994928 = @"SDNearbyAgentNotificationUnlockBLEDataReceived";
  return @"SDNearbyAgentNotificationUnlockBLEDataReceived";
}

void sub_1005ECBD4(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary35SDAuthenticationTransportIDSService_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary35SDAuthenticationTransportIDSService_queue] = a1;
  v1[OBJC_IVAR____TtC16DaemoniOSLibrary35SDAuthenticationTransportIDSService_ready] = 1;
  id v3 = objc_allocWithZone((Class)IDSService);
  unint64_t v4 = v1;
  id v5 = a1;
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = [v3 initWithService:v6];

  if (v7)
  {
    uint64_t v16 = sub_10000B740(0, &qword_100974158);
    uint64_t v17 = &off_1008DBBF8;
    *(void *)&long long v15 = v7;
    sub_1002AF688(&v15, (uint64_t)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary35SDAuthenticationTransportIDSService_idsService]);

    v14.receiver = v4;
    v14.super_class = (Class)type metadata accessor for SDAuthenticationTransportIDSService();
    id v8 = [super init];
    sub_100278C8C((uint64_t)v8 + OBJC_IVAR____TtC16DaemoniOSLibrary35SDAuthenticationTransportIDSService_idsService, (uint64_t)&v15);
    uint64_t v9 = v16;
    uint64_t v10 = v17;
    sub_10026BB6C(&v15, v16);
    uint64_t v11 = (void (*)(id, id, uint64_t, _UNKNOWN **))v10[2];
    id v12 = v5;
    id v13 = v8;
    v11(v8, v5, v9, v10);

    sub_10024D338((uint64_t)&v15);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1005ECD84(uint64_t a1, unint64_t a2, void *a3, unsigned __int8 a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = a4 + 2006;
  id v11 = objc_allocWithZone((Class)IDSProtobuf);
  sub_10025ADCC(a1, a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100250CC4(a1, a2);
  id v13 = [v11 initWithProtobufData:isa type:v10 isResponse:0];

  uint64_t v14 = a3[3];
  uint64_t v15 = a3[4];
  sub_10026BB6C(a3, v14);
  char v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 32))(v14, v15);
  sub_10000A844(&qword_10097BB88);
  if (v16)
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
    uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v48 = v18;
    AnyHashable.init<A>(_:)();
    char v19 = (void *)sub_1002CC428(inited);
    swift_setDeallocating();
LABEL_11:
    swift_arrayDestroy();
    goto LABEL_12;
  }
  uint64_t v20 = swift_initStackObject();
  *(_OWORD *)(v20 + 16) = xmmword_10076E7A0;
  sub_100278C8C((uint64_t)a3, (uint64_t)&v47);
  sub_10000A844((uint64_t *)&unk_10097BB90);
  sub_10000B740(0, &qword_10097BB60);
  if (swift_dynamicCast()) {
    id v21 = v46;
  }
  else {
    id v21 = 0;
  }
  uint64_t v22 = (void *)IDSCopyIDForDevice();

  if (v22)
  {
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v25 = 0;
  }
  uint64_t v47 = v23;
  uint64_t v48 = v25;
  sub_10000A844(&qword_10096B540);
  sub_1005F70FC();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v20 + 16))
  {
    char v19 = (void *)sub_1002CC428(v20);
    swift_setDeallocating();
    goto LABEL_11;
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  char v19 = &_swiftEmptySetSingleton;
LABEL_12:
  sub_10000A844(&qword_100977F58);
  uint64_t v26 = swift_initStackObject();
  *(_OWORD *)(v26 + 16) = xmmword_1007709D0;
  uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v48 = v27;
  AnyHashable.init<A>(_:)();
  *(void *)(v26 + 96) = &type metadata for Int;
  *(void *)(v26 + 72) = 15;
  uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v48 = v28;
  AnyHashable.init<A>(_:)();
  *(void *)(v26 + 168) = &type metadata for Bool;
  *(unsigned char *)(v26 + 144) = v16 & 1;
  uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v48 = v29;
  AnyHashable.init<A>(_:)();
  *(void *)(v26 + 240) = &type metadata for Bool;
  *(unsigned char *)(v26 + 216) = v16 & 1;
  unint64_t v30 = sub_10024592C(v26);
  sub_10000B740(0, (unint64_t *)&unk_10096BA70);
  uint64_t v31 = NSString.init(stringLiteral:)();
  sub_100278C8C(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary35SDAuthenticationTransportIDSService_idsService, (uint64_t)&v47);
  uint64_t v32 = v49;
  uint64_t v33 = v50;
  sub_10026BB6C(&v47, v49);
  id v45 = v31;
  (*(void (**)(id, void *, uint64_t, unint64_t, id *, uint64_t, uint64_t))(v33 + 24))(v13, v19, 300, v30, &v45, v32, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v46 = v45;
  id v34 = v45;

  sub_10024D338((uint64_t)&v47);
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v35 = type metadata accessor for Logger();
  sub_10000B47C(v35, (uint64_t)qword_10097B020);
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v39 = (void *)swift_slowAlloc();
    id v45 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 136315394;
    unint64_t v40 = sub_100509B38(a4);
    uint64_t v47 = sub_100254634(v40, v41, (uint64_t *)&v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2112;
    swift_beginAccess();
    id v42 = v46;
    if (v46) {
      id v43 = v46;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v39 = v42;
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Sent %s: %@", (uint8_t *)v38, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return 0x100000000;
}

id sub_1005ED778()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDAuthenticationTransportIDSService();
  return [super dealloc];
}

uint64_t type metadata accessor for SDAuthenticationTransportIDSService()
{
  return self;
}

uint64_t type metadata accessor for SDAuthenticationTransportIDSServiceLocal()
{
  return self;
}

uint64_t sub_1005ED854()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary35SDAuthenticationTransportIDSService_ready);
}

uint64_t type metadata accessor for SDAuthenticationTransportIDSServiceInternet()
{
  return self;
}

uint64_t sub_1005ED88C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary35SDAuthenticationTransportIDSService_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t sub_1005ED8D8(uint64_t a1, unint64_t a2, void *a3, unsigned __int8 a4)
{
  unint64_t v4 = sub_1005ECD84(a1, a2, a3, a4);
  return v4 | ((HIDWORD(v4) & 1) << 32);
}

void sub_1005ED904(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_10096A068 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_10000B47C(v1, (uint64_t)qword_10097B020);
    swift_errorRetain();
    swift_errorRetain();
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v2))
    {
      id v3 = (uint8_t *)swift_slowAlloc();
      unint64_t v4 = (void *)swift_slowAlloc();
      *(_DWORD *)id v3 = 138412290;
      swift_errorRetain();
      uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v4 = v9;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Received error upon activation: %@)", v3, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return;
    }
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_10096A068 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000B47C(v5, (uint64_t)qword_10097B020);
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Successfully activated and registered request", v7, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_1005EDBAC(char a1)
{
  uint64_t v2 = v1;
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_10097B020);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)id v7 = 136315138;
    unint64_t v8 = sub_100509B38(a1);
    sub_100254634(v8, v9, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Registering for %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v10 = *(void **)(v2 + 32);
  sub_100509B38(a1);
  id v11 = v10;
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  aBlock[4] = (uint64_t)sub_1005F70F0;
  aBlock[5] = v14;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1005EA18C;
  aBlock[3] = (uint64_t)&unk_1008E1D08;
  uint64_t v15 = _Block_copy(aBlock);
  swift_release();
  [v11 registerEventID:v12 options:0 handler:v15];
  _Block_release(v15);
}

void sub_1005EDE40(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_10097B020);
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  unsigned int v36 = a3;
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v9 = (uint8_t *)swift_slowAlloc();
    v37[0] = swift_slowAlloc();
    *(_DWORD *)unint64_t v9 = 136315138;
    unint64_t v10 = sub_100509B38(a3);
    *(void *)&long long v40 = sub_100254634(v10, v11, v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Received %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v12 = sub_100583878((uint64_t)v37), (v13 & 1) != 0))
  {
    sub_10024D2D4(*(void *)(a1 + 56) + 32 * v12, (uint64_t)&v40);
  }
  else
  {
    long long v40 = 0u;
    long long v41 = 0u;
  }
  sub_10025B0A8((uint64_t)v37);
  if (!*((void *)&v41 + 1))
  {
    sub_10000A7E8((uint64_t)&v40, (uint64_t *)&unk_10096AC20);
    goto LABEL_16;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    swift_bridgeObjectRetain_n();
    char v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v16, v17))
    {

      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    v37[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v19 = Dictionary.description.getter();
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    *(void *)&long long v40 = sub_100254634(v19, v21, v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Failed to get data: %s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    goto LABEL_33;
  }
  if (!a2)
  {
    long long v40 = 0u;
    long long v41 = 0u;
LABEL_28:
    sub_10000A7E8((uint64_t)&v40, (uint64_t *)&unk_10096AC20);
    goto LABEL_29;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(a2 + 16) && (unint64_t v14 = sub_100583878((uint64_t)v37), (v15 & 1) != 0))
  {
    sub_10024D2D4(*(void *)(a2 + 56) + 32 * v14, (uint64_t)&v40);
  }
  else
  {
    long long v40 = 0u;
    long long v41 = 0u;
  }
  sub_10025B0A8((uint64_t)v37);
  if (!*((void *)&v41 + 1)) {
    goto LABEL_28;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_29:
    char v16 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v16, v31))
    {
LABEL_32:
      sub_100250CC4(1635017060, 0xE400000000000000);
LABEL_33:

      return;
    }
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    uint64_t v33 = "No sender IDS ID";
LABEL_31:
    _os_log_impl((void *)&_mh_execute_header, v16, v31, v33, v32, 2u);
    swift_slowDealloc();
    goto LABEL_32;
  }
  uint64_t v23 = v37[0];
  uint64_t v22 = v37[1];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong
    || (uint64_t v25 = *(void *)(Strong + 16),
        uint64_t v26 = *(void *)(Strong + 24),
        swift_unknownObjectRetain(),
        swift_release(),
        !v25))
  {
    swift_bridgeObjectRelease();
    char v16 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v16, v31)) {
      goto LABEL_32;
    }
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    uint64_t v33 = "No delegate to send date to";
    goto LABEL_31;
  }
  id v27 = [self sharedTransport];
  if (v27)
  {
    uint64_t v28 = v27;
    NSString v29 = String._bridgeToObjectiveC()();
    id v30 = [v28 idsDeviceForUniqueID:v29];

    if (v30)
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = sub_10000B740(0, &qword_10097BB60);
      uint64_t v39 = &off_1008E2510;
      v37[0] = (uint64_t)v30;
    }
    else
    {
      uint64_t v38 = type metadata accessor for AuthenticationDevice();
      uint64_t v39 = &off_1008E2560;
      id v34 = sub_100278AE4(v37);
      sub_1006122EC(v23, v22, (uint64_t)v34);
    }
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, unint64_t, void, uint64_t *, uint64_t, uint64_t))(v26 + 8))(1635017060, 0xE400000000000000, v36, v37, ObjectType, v26);
    sub_100250CC4(1635017060, 0xE400000000000000);
    swift_unknownObjectRelease();
    sub_10024D338((uint64_t)v37);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1005EE4C8()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDAuthenticationTransportRapportReceiver()
{
  return self;
}

uint64_t sub_1005EE52C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  id v10 = [*(id *)(v5 + 48) destinationDevice];
  unint64_t v11 = v10;
  if (v10)
  {
    id v12 = [v10 identifier];

    if (v12)
    {
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;

      if (v13 == a3 && v15 == a4) {
        LOBYTE(v11) = 1;
      }
      else {
        LOBYTE(v11) = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      LOBYTE(v11) = 0;
    }
  }
  id v17 = [*(id *)(v5 + 48) destinationDevice];

  if (v17 && (v11 & 1) == 0 || *(unsigned char *)(v5 + 56) == 1)
  {
    [*(id *)(v5 + 48) invalidate];
    id v18 = [objc_allocWithZone((Class)RPCompanionLinkClient) init];
    uint64_t v19 = *(void **)(v5 + 48);
    *(void *)(v5 + 48) = v18;
  }
  id v20 = [*(id *)(v5 + 48) destinationDevice];

  if (((v20 != 0) & v11) == 1 && *(unsigned char *)(v5 + 56) != 1)
  {
    sub_1005EF04C(a5, a1, a2);
  }
  else
  {
    id v21 = [objc_allocWithZone((Class)RPCompanionLinkDevice) init];
    NSString v22 = String._bridgeToObjectiveC()();
    [v21 setIdentifier:v22];

    [*(id *)(v5 + 48) setDestinationDevice:v21];
    [*(id *)(v5 + 48) setControlFlags:*(void *)(v5 + 64)];
    uint64_t v23 = *(void **)(v5 + 48);
    os_log_type_t v37 = sub_1005F7054;
    uint64_t v38 = v5;
    aBlock = _NSConcreteStackBlock;
    uint64_t v34 = 1107296256;
    uint64_t v35 = sub_100296520;
    unsigned int v36 = &unk_1008E1C40;
    uint64_t v24 = _Block_copy(&aBlock);
    id v25 = v23;
    swift_retain();
    swift_release();
    [v25 setInvalidationHandler:v24];
    _Block_release(v24);

    uint64_t v26 = *(void **)(v5 + 48);
    uint64_t v27 = swift_allocObject();
    swift_weakInit();
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v27;
    *(void *)(v28 + 24) = a1;
    *(void *)(v28 + 32) = a2;
    *(unsigned char *)(v28 + 40) = a5;
    *(void *)(v28 + 48) = a3;
    *(void *)(v28 + 56) = a4;
    os_log_type_t v37 = sub_1005F70A4;
    uint64_t v38 = v28;
    aBlock = _NSConcreteStackBlock;
    uint64_t v34 = 1107296256;
    uint64_t v35 = sub_1006B210C;
    unsigned int v36 = &unk_1008E1C90;
    NSString v29 = _Block_copy(&aBlock);
    id v30 = v26;
    sub_10025ADCC(a1, a2);
    swift_bridgeObjectRetain();
    swift_release();
    [v30 activateWithCompletion:v29];
    _Block_release(v29);
  }
  return 0x100000000;
}

void sub_1005EE900(uint64_t a1)
{
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097B020);
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "rpSender object invalidated", v5, 2u);
    swift_slowDealloc();
  }

  *(unsigned char *)(a1 + 56) = 1;
}

uint64_t sub_1005EE9E4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  if (a1)
  {
    unsigned int v43 = a5;
    swift_errorRetain();
    if (qword_10096A068 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000B47C(v8, (uint64_t)qword_10097B020);
    swift_errorRetain();
    swift_retain();
    swift_errorRetain();
    swift_retain();
    unint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = 7562617;
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = (void *)swift_slowAlloc();
      v47[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138412546;
      swift_errorRetain();
      v46[0] = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v13 = v46[0];
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v12 + 12) = 2080;
      swift_beginAccess();
      uint64_t Strong = swift_weakLoadStrong();
      unint64_t v15 = 0xE300000000000000;
      if (Strong)
      {
        uint64_t v16 = *(void *)(Strong + 32);
        swift_release();
        if (v16)
        {
          uint64_t v11 = 28526;
          unint64_t v15 = 0xE200000000000000;
        }
      }
      sub_100254634(v11, v15, v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Received error upon activation: %@). Delegate is nil: %s", (uint8_t *)v12, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      swift_release_n();
    }
    swift_beginAccess();
    uint64_t v27 = swift_weakLoadStrong();
    if (v27)
    {
      uint64_t v29 = *(void *)(v27 + 32);
      uint64_t v28 = *(void *)(v27 + 40);
      swift_unknownObjectRetain();
      swift_release();
      if (v29)
      {
        id v30 = (void *)_convertErrorToNSError(_:)();
        id v31 = [v30 description];
        uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v34 = v33;

        id v35 = [v30 code];
        if (v35 == (id)-6722) {
          unsigned int v36 = 12;
        }
        else {
          unsigned int v36 = 25;
        }
        if (v35 == (id)-6727) {
          uint64_t v37 = 20;
        }
        else {
          uint64_t v37 = v36;
        }
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, void, uint64_t, uint64_t))(v28 + 16))(v37, v32, v34, a3, a4, v43, ObjectType, v28);
        swift_errorRelease();
        swift_bridgeObjectRelease();
        return swift_unknownObjectRelease();
      }
    }
    return swift_errorRelease();
  }
  else
  {
    swift_beginAccess();
    uint64_t v19 = swift_weakLoadStrong();
    if (v19)
    {
      *(unsigned char *)(v19 + 56) = 0;
      *(unsigned char *)(v19 + 24) = 1;
      if (*(void *)(v19 + 32))
      {
        uint64_t v20 = *(void *)(v19 + 40);
        uint64_t v21 = swift_getObjectType();
        NSString v22 = *(void (**)(uint64_t, uint64_t))(v20 + 24);
        swift_unknownObjectRetain();
        v22(v21, v20);
        swift_unknownObjectRelease();
      }
      if (qword_10096A068 != -1) {
        swift_once();
      }
      uint64_t v23 = type metadata accessor for Logger();
      sub_10000B47C(v23, (uint64_t)qword_10097B020);
      swift_bridgeObjectRetain_n();
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        v46[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 136315138;
        swift_bridgeObjectRetain();
        sub_100254634(a6, a7, v46);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Successfully activated for connecting to IDS ID %s", v26, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_1005EF04C(a5, a3, a4);
      return swift_release();
    }
    else
    {
      swift_beginAccess();
      uint64_t result = swift_weakLoadStrong();
      if (result)
      {
        uint64_t v41 = *(void *)(result + 32);
        uint64_t v40 = *(void *)(result + 40);
        swift_unknownObjectRetain();
        uint64_t result = swift_release();
        if (v41)
        {
          uint64_t v42 = swift_getObjectType();
          (*(void (**)(uint64_t, unint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v40 + 16))(14, 0xD000000000000029, 0x80000001007C3F00, a3, a4, a5, v42, v40);
          return swift_unknownObjectRelease();
        }
      }
    }
  }
  return result;
}

void sub_1005EF04C(char a1, uint64_t a2, unint64_t a3)
{
  id v7 = *(void **)(v3 + 48);
  sub_100509B38(a1);
  id v8 = v7;
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10000A844(&qword_100977F58);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 96) = &type metadata for Data;
  *(void *)(inited + 72) = a2;
  *(void *)(inited + 80) = a3;
  sub_10025ADCC(a2, a3);
  sub_10024592C(inited);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = a2;
  *(void *)(v13 + 32) = a3;
  *(unsigned char *)(v13 + 40) = a1;
  aBlock[4] = sub_1005F7044;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1006B210C;
  aBlock[3] = &unk_1008E1C18;
  uint64_t v14 = _Block_copy(aBlock);
  sub_10025ADCC(a2, a3);
  swift_release();
  [v8 sendEventID:v9 event:isa options:0 completion:v14];
  _Block_release(v14);
}

void sub_1005EF268(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    swift_errorRetain();
    id v8 = (void *)_convertErrorToNSError(_:)();
    id v9 = [v8 code];

    if (v9 == (id)-71148)
    {
      if (qword_10096A068 != -1) {
        swift_once();
      }
      uint64_t v10 = type metadata accessor for Logger();
      sub_10000B47C(v10, (uint64_t)qword_10097B020);
      uint64_t v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v13 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "rpSender was invalidated. Retrying", v13, 2u);
        swift_slowDealloc();
      }

      swift_beginAccess();
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        *(unsigned char *)(Strong + 56) = 1;
        swift_release();
      }
      swift_beginAccess();
      uint64_t v15 = swift_weakLoadStrong();
      if (v15)
      {
        id v16 = *(id *)(v15 + 48);
        swift_release();
        id v17 = [v16 destinationDevice];

        if (v17)
        {
          id v18 = [v17 identifier];

          if (v18)
          {
            uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v21 = v20;

            swift_beginAccess();
            if (swift_weakLoadStrong())
            {
              sub_1005EE52C(a3, a4, v19, v21, a5);
              swift_errorRelease();
              swift_release();
            }
            else
            {
              swift_errorRelease();
            }
            swift_bridgeObjectRelease();
            return;
          }
        }
      }
    }
    else
    {
      if (qword_10096A068 != -1) {
        swift_once();
      }
      uint64_t v27 = type metadata accessor for Logger();
      sub_10000B47C(v27, (uint64_t)qword_10097B020);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v28 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.default.getter();
      os_log_t osloga = a3;
      if (os_log_type_enabled(v28, v29))
      {
        id v30 = (uint8_t *)swift_slowAlloc();
        id v31 = (void *)swift_slowAlloc();
        *(_DWORD *)id v30 = 138412290;
        swift_errorRetain();
        v46[0] = _swift_stdlib_bridgeErrorToNSError();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *id v31 = v46[0];
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "Received error for sending request: %@", v30, 0xCu);
        sub_10000A844(&qword_10096B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      swift_beginAccess();
      uint64_t v32 = swift_weakLoadStrong();
      if (v32)
      {
        uint64_t v33 = *(void *)(v32 + 32);
        uint64_t v34 = *(void *)(v32 + 40);
        swift_unknownObjectRetain();
        swift_release();
        if (v33)
        {
          id v35 = (void *)_convertErrorToNSError(_:)();
          id v36 = [v35 description];
          uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v39 = v38;

          id v40 = [v35 code];
          if (v40 == (id)-6722) {
            unsigned int v41 = 12;
          }
          else {
            unsigned int v41 = 25;
          }
          if (v40 == (id)-6727) {
            uint64_t v42 = 20;
          }
          else {
            uint64_t v42 = v41;
          }
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t, uint64_t, os_log_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 16))(v42, v37, v39, osloga, a4, a5, ObjectType, v34);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
        }
      }
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        sub_1005EF920();
        swift_errorRelease();
        swift_release();
        return;
      }
    }
    swift_errorRelease();
    return;
  }
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_10000B47C(v22, (uint64_t)qword_10097B020);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    v46[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136315138;
    unint64_t v25 = sub_100509B38(a5);
    sub_100254634(v25, v26, v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v23, "Sent request: %s", v24, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

id sub_1005EF920()
{
  uint64_t v1 = v0;
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097B020);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    type metadata accessor for SDAuthenticationTransportRapport();
    swift_retain();
    uint64_t v6 = String.init<A>(describing:)();
    uint64_t v9 = sub_100254634(v6, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s: Disconnecting", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  *(unsigned char *)(v1 + 56) = 1;
  return [*(id *)(v1 + 48) invalidate:v9 withCompletionHandler:v10];
}

uint64_t sub_1005EFAFC()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDAuthenticationTransportRapport()
{
  return self;
}

uint64_t sub_1005EFB68(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return swift_unknownObjectRelease();
}

uint64_t sub_1005EFB78()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_1005EFB80(uint64_t a1, unint64_t a2, void *a3, char a4)
{
  uint64_t v7 = a3[3];
  uint64_t v8 = a3[4];
  sub_10026BB6C(a3, v7);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
  if (v10)
  {
    unint64_t v11 = sub_1005EE52C(a1, a2, result, v10, a4);
    swift_bridgeObjectRelease();
    return v11 | ((HIDWORD(v11) & 1) << 32);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for SDAuthenticationTransportRapportBTOnly()
{
  return self;
}

uint64_t type metadata accessor for SDAuthenticationTransportRapportAWDLOnly()
{
  return self;
}

uint64_t type metadata accessor for SDAuthenticationTransportRapportInfraWiFiOnly()
{
  return self;
}

void sub_1005EFCB0()
{
  word_100994930 = CBAssignedL2CAPPSMForOysterAutoUnlock;
}

id sub_1005EFCC8(void *a1)
{
  uint64_t v22 = 0;
  id v2 = [self sharedManager];
  if (!v2)
  {
LABEL_12:
    if (!v22) {
      return v2;
    }
    goto LABEL_13;
  }
  Class isa = (Class)[a1 encryptedPayload];
  if (isa)
  {
    uint64_t v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v6 = v5;

    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100250CC4(v4, v6);
  }
  Class v7 = (Class)[a1 authTag:v22];
  if (v7)
  {
    uint64_t v8 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    Class v7 = Data._bridgeToObjectiveC()().super.isa;
    sub_100250CC4(v8, v10);
  }
  Class v11 = (Class)[a1 nonce];
  if (v11)
  {
    uint64_t v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v14 = v13;

    Class v11 = Data._bridgeToObjectiveC()().super.isa;
    sub_100250CC4(v12, v14);
  }
  Class v15 = UUID._bridgeToObjectiveC()().super.isa;
  id v16 = [v2 decryptMessage:isa authTag:v7 nonce:v11 bluetoothID:v15 cachedDevices:1 errorCode:&v22];

  if (!v16)
  {
    id v2 = 0;
    goto LABEL_12;
  }
  id v2 = (id)static Data._unconditionallyBridgeFromObjectiveC(_:)();

  if (!v22) {
    return v2;
  }
LABEL_13:
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_10000B47C(v17, (uint64_t)qword_10097B020);
  id v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Failed to decrypt message", v20, 2u);
    swift_slowDealloc();
  }

  return v2;
}

void sub_1005EFF94()
{
  uint64_t v1 = v0;
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097B020);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Configuring CBServer", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void *)(v1 + 16);
  id v7 = *(id *)(v1 + 48);
  [v7 setDispatchQueue:v6];
  if (qword_10096A078 != -1) {
    swift_once();
  }
  [v7 setBleListenPSM:(unsigned __int16)word_100994930];
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  Class v15 = sub_1005F5D18;
  uint64_t v16 = v8;
  Class v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  unint64_t v13 = sub_1005F099C;
  unint64_t v14 = &unk_1008E1958;
  unint64_t v9 = _Block_copy(&v11);
  swift_release();
  [v7 setAcceptHandler:v9];
  _Block_release(v9);
  Class v15 = sub_1005F0AB8;
  uint64_t v16 = 0;
  Class v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  unint64_t v13 = sub_1006B210C;
  unint64_t v14 = &unk_1008E1980;
  unint64_t v10 = _Block_copy(&v11);
  [v7 activateWithCompletion:v10];
  _Block_release(v10);
}

uint64_t sub_1005F0208(void *a1, void (*a2)(void))
{
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_10097B020);
  unint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Accepted connection", v7, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_8;
  }
  unint64_t v9 = *(void **)(Strong + 72);
  id v10 = v9;
  swift_release();
  if (!v9
    || (sub_10000B740(0, &qword_10097BB58),
        id v11 = v10,
        id v12 = a1,
        char v13 = static NSObject.== infix(_:_:)(),
        v11,
        v11,
        v12,
        (v13 & 1) == 0))
  {
LABEL_8:
    unint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "New connection", v16, 2u);
      swift_slowDealloc();
    }

    swift_beginAccess();
    uint64_t v17 = swift_weakLoadStrong();
    if (v17)
    {
      id v18 = *(void **)(v17 + 72);
      *(void *)(v17 + 72) = a1;

      id v19 = a1;
      swift_release();
    }
    swift_beginAccess();
    uint64_t v20 = swift_weakLoadStrong();
    if (v20)
    {
      id v21 = *(id *)(v20 + 16);
      swift_release();
      swift_beginAccess();
      uint64_t v22 = swift_weakLoadStrong();
      if (v22)
      {
        os_log_type_t v23 = *(void **)(v22 + 72);
        if (v23)
        {
          id v24 = v23;
          swift_release();
          [v24 setDispatchQueue:v21];
        }
        else
        {
          swift_release();
        }
      }
    }
  }
  a2(0);
  id v25 = a1;
  unint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    v44[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136315394;
    id v29 = [v25 peerDevice];
    id v30 = [v29 identifier];

    if (v30)
    {
      unint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v33 = v32;
    }
    else
    {
      unint64_t v31 = 0xD000000000000015;
      uint64_t v45 = 0;
      unint64_t v46 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v33 = 0x80000001007B7770;
    }
    uint64_t v45 = sub_100254634(v31, v33, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    id v34 = [v25 peerDevice];
    id v35 = [v34 idsDeviceID];

    if (v35)
    {
      unint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v38 = v37;
    }
    else
    {
      unint64_t v36 = 0xD000000000000015;
      uint64_t v45 = 0;
      unint64_t v46 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v38 = 0x80000001007B7770;
    }
    uint64_t v45 = sub_100254634(v36, v38, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "connection peer device: %s, idsID: %s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  swift_beginAccess();
  uint64_t v39 = swift_weakLoadStrong();
  if (v39)
  {
    *(unsigned char *)(v39 + 24) = 1;
    swift_release();
  }
  swift_beginAccess();
  uint64_t v40 = swift_weakLoadStrong();
  if (v40)
  {
    if (*(void *)(v40 + 32))
    {
      uint64_t v41 = *(void *)(v40 + 40);
      swift_unknownObjectRetain();
      swift_release();
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v41 + 24))(ObjectType, v41);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release();
    }
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1005F0840(v25);
    return swift_release();
  }
  return result;
}

void sub_1005F0840(void *a1)
{
  id v3 = [objc_allocWithZone((Class)CBReadRequest) init];
  [v3 setMinLength:1];
  [v3 setMaxLength:500];
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = v3;
  v4[3] = v1;
  v4[4] = a1;
  v10[4] = sub_1005F5DA8;
  v10[5] = v4;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100296520;
  v10[3] = &unk_1008E19F8;
  unint64_t v5 = _Block_copy(v10);
  id v6 = v3;
  swift_retain();
  id v7 = a1;
  swift_release();
  [v6 setCompletion:v5];
  _Block_release(v5);
  uint64_t v8 = *(void **)(v1 + 72);
  if (v8)
  {
    id v9 = v8;
    [v9 readWithCBReadRequest:v6];
  }
}

void sub_1005F099C(uint64_t a1, void *a2, void *aBlock)
{
  uint64_t v4 = *(void (**)(void))(a1 + 32);
  unint64_t v5 = _Block_copy(aBlock);
  *(void *)(swift_allocObject() + 16) = v5;
  swift_retain();
  id v6 = a2;
  v4();
  swift_release();
  swift_release();
}

void sub_1005F0A54(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

void sub_1005F0AB8(uint64_t a1)
{
  if (a1)
  {
    if (qword_10096A068 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_10000B47C(v1, (uint64_t)qword_10097B020);
    swift_errorRetain();
    swift_errorRetain();
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      id v4 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v3 = 138412290;
      swift_errorRetain();
      uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v4 = v9;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Encountered error while activating CBServer %@", v3, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_10096A068 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000B47C(v5, (uint64_t)qword_10097B020);
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Activated CBServer", v7, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_1005F0D44(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  id v10 = *(NSObject **)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  char v13 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  os_log_type_t v15 = (char *)&v93 - v14;
  id v16 = [a1 error];
  if (v16)
  {

    if (qword_10096A068 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_10000B47C(v17, (uint64_t)qword_10097B020);
    uint64_t v101 = a1;
    id v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      id v21 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 138412290;
      if ([v101 error])
      {
        uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
        v103[0] = v22;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
      }
      else
      {
        v103[0] = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v22 = 0;
      }
      *id v21 = v22;

      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Encountered error while trying to read: %@", v20, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      goto LABEL_21;
    }

    goto LABEL_11;
  }
  id v23 = [a1 data];
  if (!v23)
  {
    if (qword_10096A068 != -1) {
      swift_once();
    }
    uint64_t v31 = type metadata accessor for Logger();
    sub_10000B47C(v31, (uint64_t)qword_10097B020);
    uint64_t v101 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v101, v32))
    {
      unint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v101, v32, "data is nil!", v33, 2u);
      swift_slowDealloc();
    }
LABEL_11:
    id v30 = v101;
LABEL_12:

    return;
  }
  id v24 = v23;
  uint64_t v99 = a3;
  id v25 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v27 = v26;

  unint64_t v28 = v27 >> 62;
  uint64_t v101 = v25;
  switch(v27 >> 62)
  {
    case 1uLL:
      LODWORD(v29) = HIDWORD(v25) - v25;
      if (__OFSUB__(HIDWORD(v25), v25))
      {
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
      }
      int64_t v29 = (int)v29;
LABEL_25:
      if (!v29)
      {
LABEL_33:
        if (qword_10096A068 != -1) {
          swift_once();
        }
        uint64_t v45 = type metadata accessor for Logger();
        sub_10000B47C(v45, (uint64_t)qword_10097B020);
        uint64_t v100 = Logger.logObject.getter();
        os_log_type_t v46 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v100, v46))
        {
          sub_100250CC4((uint64_t)v101, v27);
          id v30 = v100;
          goto LABEL_12;
        }
        uint64_t v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v47 = 0;
        _os_log_impl((void *)&_mh_execute_header, v100, v46, "data is length 0!", v47, 2u);
        swift_slowDealloc();

        uint64_t v48 = v101;
        sub_100250CC4((uint64_t)v48, v27);
        return;
      }
      uint64_t v100 = v10;
      if (qword_10096A068 != -1) {
        swift_once();
      }
      uint64_t v37 = type metadata accessor for Logger();
      uint64_t v38 = sub_10000B47C(v37, (uint64_t)qword_10097B020);
      sub_10025ADCC((uint64_t)v25, v27);
      uint64_t v39 = (uint64_t)v25;
      unint64_t v98 = v38;
      uint64_t v40 = Logger.logObject.getter();
      os_log_type_t v41 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v40, v41))
      {
        unint64_t v97 = v27;
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v42 = 134217984;
        if (v28)
        {
          if (v28 == 1)
          {
            unsigned int v43 = v100;
            LODWORD(v44) = HIDWORD(v101) - v101;
            if (!__OFSUB__(HIDWORD(v101), v101))
            {
              uint64_t v44 = (int)v44;
              goto LABEL_46;
            }
            goto LABEL_73;
          }
          unsigned int v43 = v100;
          Class isa = v101[2].isa;
          Class v53 = v101[3].isa;
          BOOL v36 = __OFSUB__(v53, isa);
          uint64_t v44 = v53 - isa;
          if (v36) {
            goto LABEL_74;
          }
        }
        else
        {
          uint64_t v44 = BYTE6(v97);
          unsigned int v43 = v100;
        }
LABEL_46:
        v103[0] = v44;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        unint64_t v55 = v97;
        sub_100250CC4((uint64_t)v101, v97);
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "Got data of length %ld", v42, 0xCu);
        unint64_t v27 = v55;
        swift_slowDealloc();

        uint64_t v49 = (void *)a2[9];
        if (!v49) {
          goto LABEL_47;
        }
LABEL_41:
        unint64_t v50 = v27;
        id v51 = [v49 peerDevice];
        id v52 = [v51 identifier];

        if (v52)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
        unint64_t v27 = v50;
        goto LABEL_47;
      }
      sub_100250CC4(v39, v27);

      unsigned int v43 = v100;
      uint64_t v49 = (void *)a2[9];
      if (v49) {
        goto LABEL_41;
      }
LABEL_47:
      UUID.init(uuidString:)();
      swift_bridgeObjectRelease();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v43[6].isa)(v8, 1, v9) != 1)
      {
        ((void (*)(char *, char *, uint64_t))v43[4].isa)(v15, v8, v9);
        id v58 = [self sharedTransport];
        if (!v58)
        {
          __break(1u);
          JUMPOUT(0x1005F1BA4);
        }
        uint64_t v59 = v58;
        Class v60 = UUID._bridgeToObjectiveC()().super.isa;
        id v61 = [v59 idsDeviceForBluetoothID:v60];

        if (!v61)
        {
          ((void (*)(char *, char *, uint64_t))v43[2].isa)(v13, v15, v9);
          uint64_t v73 = Logger.logObject.getter();
          os_log_type_t v74 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v73, v74))
          {
            uint64_t v75 = (uint8_t *)swift_slowAlloc();
            v103[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v75 = 136315138;
            unint64_t v97 = v27;
            sub_10000BB78((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
            uint64_t v76 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v102 = sub_100254634(v76, v77, v103);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            uint64_t v78 = (void (*)(char *, uint64_t))v100[1].isa;
            v78(v13, v9);
            _os_log_impl((void *)&_mh_execute_header, v73, v74, "Could not find IDS device for BT UUID %s", v75, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            sub_100250CC4((uint64_t)v101, v97);
            v78(v15, v9);
          }
          else
          {

            uint64_t v79 = (void (*)(char *, uint64_t))v43[1].isa;
            v79(v13, v9);
            sub_100250CC4((uint64_t)v101, v27);
            v79(v15, v9);
          }
          return;
        }
        id v62 = objc_allocWithZone((Class)SDAutoUnlockSessionWrapper);
        unint64_t v63 = v101;
        sub_10025ADCC((uint64_t)v101, v27);
        Class v64 = Data._bridgeToObjectiveC()().super.isa;
        sub_100250CC4((uint64_t)v63, v27);
        id v65 = [v62 initWithData:v64];

        if (v65)
        {
          if ([v65 hasEncryptedPayload])
          {
            uint64_t v66 = (uint64_t (*)(id, char *))a2[7];
            swift_retain();
            uint64_t v67 = v66(v65, v15);
            unint64_t v69 = v68;
            swift_release();
            if (v69 >> 60 != 15)
            {
              uint64_t v80 = sub_10050ACE8((int)[v65 messageType]);
              if (v80 == 12)
              {
                id v81 = v65;
                int v82 = Logger.logObject.getter();
                os_log_type_t v83 = static os_log_type_t.error.getter();
                if (os_log_type_enabled(v82, v83))
                {
                  id v84 = (uint8_t *)swift_slowAlloc();
                  unint64_t v97 = v27;
                  long long v85 = v84;
                  unint64_t v98 = v69;
                  *(_DWORD *)id v84 = 67109120;
                  LODWORD(v103[0]) = [v81 messageType];
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();

                  _os_log_impl((void *)&_mh_execute_header, v82, v83, "Received unknown message type %u", v85, 8u);
                  unint64_t v27 = v97;
                  swift_slowDealloc();
                  sub_100250CB0(v67, v98);
                }
                else
                {
                  sub_100250CB0(v67, v69);
                }
                uint64_t v92 = v100;

                sub_100250CC4((uint64_t)v101, v27);
                ((void (*)(char *, uint64_t))v92[1].isa)(v15, v9);
              }
              else
              {
                uint64_t v86 = a2[4];
                unint64_t v98 = v69;
                uint64_t v87 = v100;
                if (v86)
                {
                  uint64_t v88 = v80;
                  uint64_t v96 = v67;
                  uint64_t v89 = a2[5];
                  uint64_t ObjectType = swift_getObjectType();
                  v103[3] = sub_10000B740(0, &qword_10097BB60);
                  v103[4] = (uint64_t)&off_1008E2510;
                  v103[0] = (uint64_t)v61;
                  unint64_t v97 = v27;
                  uint64_t v94 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(v89 + 8);
                  swift_unknownObjectRetain();
                  id v90 = v61;
                  uint64_t v91 = v89;
                  uint64_t v67 = v96;
                  v94(v96, v98, v88, v103, ObjectType, v91);
                  unint64_t v27 = v97;
                  swift_unknownObjectRelease();
                  sub_10024D338((uint64_t)v103);
                }
                sub_1005F0840(v99);
                sub_100250CB0(v67, v98);

                sub_100250CC4((uint64_t)v101, v27);
                ((void (*)(char *, uint64_t))v87[1].isa)(v15, v9);
              }
              return;
            }
          }
        }
        uint64_t v70 = Logger.logObject.getter();
        os_log_type_t v71 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v70, v71))
        {
          uint64_t v72 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v72 = 0;
          _os_log_impl((void *)&_mh_execute_header, v70, v71, "Received corrupt wrapper", v72, 2u);
          swift_slowDealloc();
        }

        sub_100250CC4((uint64_t)v101, v27);
        ((void (*)(char *, uint64_t))v100[1].isa)(v15, v9);
        return;
      }
      sub_10000A7E8((uint64_t)v8, &qword_100974EA0);
      id v18 = Logger.logObject.getter();
      os_log_type_t v56 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v18, v56))
      {
        sub_100250CC4((uint64_t)v101, v27);
LABEL_21:

        return;
      }
      uint64_t v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v57 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v56, "Connection with no peer device? Check whether you set self.connection for CBServer", v57, 2u);
      swift_slowDealloc();

      sub_100250CC4((uint64_t)v101, v27);
      return;
    case 2uLL:
      Class v35 = v25[2].isa;
      Class v34 = v25[3].isa;
      BOOL v36 = __OFSUB__(v34, v35);
      int64_t v29 = v34 - v35;
      if (!v36) {
        goto LABEL_25;
      }
      goto LABEL_72;
    case 3uLL:
      goto LABEL_33;
    default:
      int64_t v29 = BYTE6(v27);
      goto LABEL_25;
  }
}

uint64_t sub_1005F1BB4(uint64_t a1)
{
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = v1;
  return _swift_task_switch(sub_1005F1BD4, 0, 0);
}

uint64_t sub_1005F1BD4()
{
  uint64_t v1 = v0[16];
  [*(id *)(v1 + 72) invalidate];
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  v0[17] = sub_10000B47C(v2, (uint64_t)qword_10097B020);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Creating CBConnection", v5, 2u);
    swift_slowDealloc();
  }

  id v6 = [objc_allocWithZone((Class)CBConnection) init];
  uint64_t v7 = *(void **)(v1 + 72);
  *(void *)(v1 + 72) = v6;

  uint64_t v8 = *(void **)(v1 + 72);
  if (v8 && ([v8 setDispatchQueue:*(void *)(v0[16] + 16)], (uint64_t v9 = *(void **)(v1 + 72)) != 0))
  {
    uint64_t v10 = v0[16];
    [v9 setUseCase:131088];
    uint64_t v11 = *(void **)(v1 + 72);
    v0[18] = v11;
    *(unsigned char *)(v10 + 88) = 0;
    if (v11)
    {
      uint64_t v12 = v0[15];
      id v13 = v11;
      [v13 setConnectionFlags:256];
      [v13 setPeerDevice:v12];
      [v13 setConnectTimeoutSeconds:4.0];
      if (qword_10096A078 != -1) {
        swift_once();
      }
      [v13 setBlePSM:(unsigned __int16)word_100994930];
      v0[2] = v0;
      v0[3] = sub_1005F1F44;
      uint64_t v14 = swift_continuation_init();
      v0[10] = _NSConcreteStackBlock;
      v0[11] = 0x40000000;
      v0[12] = sub_10036188C;
      v0[13] = &unk_1008E1BB0;
      v0[14] = v14;
      [v13 activateWithCompletion:v0 + 10];
      return _swift_continuation_await(v0 + 2);
    }
  }
  else
  {
    *(unsigned char *)(v0[16] + 88) = 0;
  }
  os_log_type_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Failed to create CBConnection", v17, 2u);
    swift_slowDealloc();
  }

  id v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_1005F1F44()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_1005F2140;
  }
  else {
    uint64_t v2 = sub_1005F2054;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005F2054()
{
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Successfully activated CBConnection!!!", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = (void *)v0[18];
  uint64_t v5 = v0[16];

  *(unsigned char *)(v5 + 88) = 1;
  sub_1005F21B0();

  id v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1005F2140()
{
  uint64_t v1 = *(void **)(v0 + 144);
  swift_willThrow();

  os_log_type_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_1005F21B0()
{
  uint64_t v1 = v0;
  if (!*(void *)(v0 + 72) || *(unsigned char *)(v0 + 88) != 1)
  {
LABEL_27:
    if (qword_10096A068 != -1) {
      goto LABEL_35;
    }
    goto LABEL_28;
  }
  os_log_type_t v2 = (uint64_t *)(v0 + 80);
  swift_beginAccess();
  while (1)
  {
    if ((unint64_t)*v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v8 < 1) {
        return;
      }
    }
    else if (*(uint64_t *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
    {
      return;
    }
    swift_beginAccess();
    if ((unint64_t)*v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v9) {
        goto LABEL_33;
      }
    }
    else if (!*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_33;
    }
    uint64_t v3 = *v2;
    if ((unint64_t)*v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v10) {
        goto LABEL_34;
      }
    }
    else if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_34;
    }
    if ((v3 & 0xC000000000000001) == 0) {
      break;
    }
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_14:
    uint64_t v5 = v4;
    if ((unint64_t)*v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v11)
      {
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
    }
    else if (!*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_26;
    }
    sub_1005A800C(0, 1);
    swift_endAccess();
    id v6 = *(void **)(v1 + 72);
    if (v6)
    {
      id v7 = v6;
      [v7 writeWithCBWriteRequest:v5];
    }
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v4 = *(id *)(v3 + 32);
    goto LABEL_14;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  swift_once();
LABEL_28:
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000B47C(v12, (uint64_t)qword_10097B020);
  swift_retain_n();
  id v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
    v18[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v15 = 136315138;
    swift_retain();
    uint64_t v16 = String.init<A>(describing:)();
    sub_100254634(v16, v17, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s: Not connected yet", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

unint64_t sub_1005F2580(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v81 = a1;
  uint64_t v82 = a2;
  uint64_t v8 = *v4;
  uint64_t v9 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v12 - 8);
  os_log_type_t v14 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v15 = (void *)v4[9];
  uint64_t v80 = v8;
  if (v15
    && (id v16 = [v15 peerDevice],
        id v17 = [v16 idsDeviceID],
        v16,
        v17))
  {
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v20 = 0;
  }
  uint64_t v22 = a3[3];
  uint64_t v21 = a3[4];
  sub_10026BB6C(a3, v22);
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v22, v21);
  if (v20)
  {
    if (v24)
    {
      if (v18 == v23 && v20 == v24)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v26)
      {
LABEL_32:
        uint64_t v54 = sub_1005F37DC(v81, v82, a3, a4);
        unint64_t v56 = v55 >> 60;
        if (v55 >> 60 != 15)
        {
          uint64_t v57 = v54;
          unint64_t v58 = v55;
          id v59 = [objc_allocWithZone((Class)CBWriteRequest) init];
          sub_10000A844(&qword_10096EE80);
          uint64_t v60 = swift_allocObject();
          *(_OWORD *)(v60 + 16) = xmmword_10076E7A0;
          *(void *)(v60 + 32) = v57;
          *(void *)(v60 + 40) = v58;
          sub_10025ADCC(v57, v58);
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v59 setDataArray:isa];

          uint64_t v62 = swift_allocObject();
          *(void *)(v62 + 16) = v57;
          *(void *)(v62 + 24) = v58;
          uint64_t v88 = sub_1005F6658;
          uint64_t v89 = v62;
          aBlock[0] = (uint64_t)_NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = (uint64_t)sub_100296520;
          uint64_t v87 = &unk_1008E1B38;
          unint64_t v63 = _Block_copy(aBlock);
          sub_10025ADCC(v57, v58);
          swift_release();
          [v59 setCompletion:v63];
          _Block_release(v63);
          swift_beginAccess();
          id v64 = v59;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v5[10] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v5[10] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();
          sub_100250CB0(v57, v58);

          uint64_t v65 = 0;
          goto LABEL_43;
        }
        if (qword_10096A068 != -1) {
          swift_once();
        }
        uint64_t v66 = type metadata accessor for Logger();
        sub_10000B47C(v66, (uint64_t)qword_10097B020);
        swift_retain_n();
        uint64_t v67 = Logger.logObject.getter();
        os_log_type_t v68 = static os_log_type_t.error.getter();
        BOOL v69 = os_log_type_enabled(v67, v68);
        unsigned int v79 = a4;
        if (v69)
        {
          uint64_t v70 = (uint8_t *)swift_slowAlloc();
          aBlock[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v70 = 136315138;
          uint64_t v83 = (uint64_t)v5;
          swift_retain();
          uint64_t v71 = String.init<A>(describing:)();
          uint64_t v83 = sub_100254634(v71, v72, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v67, v68, "%s: Error encrypting message", v70, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          if (v5[4])
          {
LABEL_40:
            uint64_t v73 = v5[5];
            uint64_t ObjectType = swift_getObjectType();
            uint64_t v75 = *(void (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(v73 + 16);
            swift_unknownObjectRetain();
            uint64_t v65 = 1;
            v75(1, 0xD000000000000018, 0x80000001007C3EC0, v81, v82, v79, ObjectType, v73);
            swift_unknownObjectRelease();
LABEL_43:
            LOBYTE(aBlock[0]) = v56 < 0xF;
            return v65 | ((unint64_t)(v56 < 0xF) << 32);
          }
        }
        else
        {

          swift_release_n();
          if (v5[4]) {
            goto LABEL_40;
          }
        }
        uint64_t v65 = 1;
        goto LABEL_43;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if (qword_10096A068 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_10000B47C(v27, (uint64_t)qword_10097B020);
    sub_100278C8C((uint64_t)a3, (uint64_t)aBlock);
    swift_retain_n();
    unint64_t v28 = Logger.logObject.getter();
    int v29 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v28, (os_log_type_t)v29))
    {
      int v77 = v29;
      os_log_t v78 = v28;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      uint64_t v85 = v76;
      *(_DWORD *)uint64_t v30 = 136315394;
      uint64_t v31 = (void *)v5[9];
      if (v31
        && (id v32 = objc_msgSend(v31, "peerDevice", v76),
            id v33 = [v32 idsDeviceID],
            v32,
            v33))
      {
        unint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v36 = v35;
      }
      else
      {
        unint64_t v34 = 0xD000000000000015;
        uint64_t v83 = 0;
        unint64_t v84 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        unint64_t v36 = 0x80000001007B7770;
      }
      uint64_t v83 = sub_100254634(v34, v36, &v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      uint64_t v37 = v87;
      uint64_t v38 = v88;
      sub_10026BB6C(aBlock, (uint64_t)v87);
      uint64_t v39 = (*((uint64_t (**)(void *, void (*)()))v38 + 1))(v37, v38);
      if (v40)
      {
        uint64_t v41 = v39;
        unint64_t v42 = v40;
      }
      else
      {
        uint64_t v41 = 0xD000000000000015;
        uint64_t v83 = 0;
        unint64_t v84 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        unint64_t v42 = 0x80000001007B7770;
      }
      uint64_t v83 = sub_100254634(v41, v42, &v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10024D338((uint64_t)aBlock);
      unint64_t v28 = v78;
      _os_log_impl((void *)&_mh_execute_header, v78, (os_log_type_t)v77, "peer device changed from %s to %s. Invalidating old BT connection", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
      sub_10024D338((uint64_t)aBlock);
    }
  }
  else
  {
    if (!v24) {
      goto LABEL_32;
    }
    swift_bridgeObjectRelease();
  }
  id v43 = [objc_allocWithZone((Class)CBDevice) init];
  uint64_t v44 = a3[3];
  uint64_t v45 = a3[4];
  sub_10026BB6C(a3, v44);
  (*(void (**)(uint64_t, uint64_t))(v45 + 48))(v44, v45);
  uint64_t v46 = type metadata accessor for UUID();
  uint64_t v47 = *(void *)(v46 - 8);
  unint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48))(v14, 1, v46);
  if (result != 1)
  {
    UUID.uuidString.getter();
    NSString v49 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v14, v46);
    [v43 setIdentifier:v49];

    uint64_t v50 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v11, 1, 1, v50);
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = 0;
    *(void *)(v51 + 24) = 0;
    *(void *)(v51 + 32) = v5;
    *(void *)(v51 + 40) = v43;
    uint64_t v53 = v81;
    unint64_t v52 = v82;
    *(void *)(v51 + 48) = v81;
    *(void *)(v51 + 56) = v52;
    *(unsigned char *)(v51 + 64) = a4;
    swift_retain();
    sub_10025ADCC(v53, v52);
    sub_10028CFA8((uint64_t)v11, (uint64_t)&unk_10097BB70, v51);
    swift_release();
    goto LABEL_32;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005F2FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  *(unsigned char *)(v8 + 168) = a8;
  *(void *)(v8 + 88) = a6;
  *(void *)(v8 + 96) = a7;
  *(void *)(v8 + 80) = a4;
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags();
  *(void *)(v8 + 104) = v11;
  *(void *)(v8 + 112) = *(void *)(v11 - 8);
  *(void *)(v8 + 120) = swift_task_alloc();
  uint64_t v12 = type metadata accessor for DispatchQoS();
  *(void *)(v8 + 128) = v12;
  *(void *)(v8 + 136) = *(void *)(v12 - 8);
  *(void *)(v8 + 144) = swift_task_alloc();
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v8 + 152) = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_1005F3164;
  v13[15] = a5;
  v13[16] = a4;
  return _swift_task_switch(sub_1005F1BD4, 0, 0);
}

uint64_t sub_1005F3164()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1005F32AC, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1005F32AC()
{
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097B020);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    id v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)id v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[9] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "CBConnection activation failed with error: %@. Is the other device running CBServer?", v4, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v7 = v0[10];
  uint64_t v8 = *(void **)(v7 + 72);
  if (v8)
  {
    [v8 invalidate];
    uint64_t v7 = v0[10];
  }
  uint64_t v9 = v0[20];
  uint64_t v10 = v0[15];
  uint64_t v21 = v0[17];
  uint64_t v22 = v0[16];
  uint64_t v11 = v0[13];
  uint64_t v12 = v0[14];
  char v13 = *((unsigned char *)v0 + 168);
  uint64_t v14 = v0[11];
  unint64_t v15 = v0[12];
  uint64_t v20 = v0[18];
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v7;
  *(void *)(v16 + 24) = v9;
  *(void *)(v16 + 32) = v14;
  *(void *)(v16 + 40) = v15;
  *(unsigned char *)(v16 + 48) = v13;
  v0[6] = sub_1005F66A8;
  v0[7] = v16;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100296520;
  v0[5] = &unk_1008E1B88;
  id v17 = _Block_copy(v0 + 2);
  swift_errorRetain();
  swift_retain();
  sub_10025ADCC(v14, v15);
  static DispatchQoS.unspecified.getter();
  v0[8] = _swiftEmptyArrayStorage;
  sub_10000BB78((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002B4B9C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_1005F367C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*(void *)(result + 32))
  {
    uint64_t v8 = *(void *)(result + 40);
    swift_unknownObjectRetain();
    uint64_t v9 = (void *)_convertErrorToNSError(_:)();
    id v10 = [v9 description];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    id v14 = [v9 code];
    if (v14 == (id)-6722) {
      unsigned int v15 = 12;
    }
    else {
      unsigned int v15 = 25;
    }
    if (v14 == (id)-6727) {
      uint64_t v16 = 20;
    }
    else {
      uint64_t v16 = v15;
    }
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(v16, v11, v13, a3, a4, a5, ObjectType, v8);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1005F37DC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000B47C(v9, (uint64_t)qword_10097B020);
  sub_100278C8C((uint64_t)a3, (uint64_t)v45);
  swift_retain_n();
  id v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    id v44 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    swift_retain();
    uint64_t v13 = String.init<A>(describing:)();
    v43[0] = (id)sub_100254634(v13, v14, (uint64_t *)&v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    uint64_t v15 = v46;
    uint64_t v16 = v47;
    sub_10026BB6C(v45, v46);
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
    if (v18)
    {
      uint64_t v19 = v17;
      unint64_t v20 = v18;
    }
    else
    {
      uint64_t v19 = 0xD000000000000015;
      v43[0] = 0;
      v43[1] = (id)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v20 = 0x80000001007B7770;
    }
    v43[0] = (id)sub_100254634(v19, v20, (uint64_t *)&v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)v45);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s: Beginning encryption with key for device %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    sub_10024D338((uint64_t)v45);
  }
  id v21 = [self sharedManager];
  if (!v21)
  {
    id v28 = 0;
    id v29 = 0;
    uint64_t v30 = 0;
LABEL_21:
    if (*(void *)(v5 + 32))
    {
      uint64_t v38 = *(void *)(v5 + 40);
      uint64_t ObjectType = swift_getObjectType();
      unint64_t v40 = *(void (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 16);
      swift_unknownObjectRetain();
      v40(1, 0xD000000000000019, 0x80000001007C3EE0, a1, a2, a4, ObjectType, v38);
      swift_unknownObjectRelease();
    }
    goto LABEL_23;
  }
  uint64_t v22 = v21;
  v23.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
  uint64_t v24 = a3[3];
  uint64_t v25 = a3[4];
  sub_10026BB6C(a3, v24);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
  if (v26)
  {
    NSString v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v27 = 0;
  }
  id v44 = 0;
  v45[0] = 0;
  v43[0] = 0;
  unsigned int v31 = [v22 encryptMessageData:v23.super.isa deviceID:v27 encryptedMessage:v45 authTag:v43 nonce:&v44];

  id v28 = v44;
  id v29 = v43[0];
  id v32 = v45[0];
  uint64_t v30 = v32;
  if (!v31 || !v32 || !v29 || !v28) {
    goto LABEL_21;
  }
  id v33 = [objc_allocWithZone((Class)SDAutoUnlockSessionWrapper) init];
  if (!v33)
  {
LABEL_23:

    return 0;
  }
  unint64_t v34 = v33;
  [v33 setEncryptedPayload:v30];
  [v34 setAuthTag:v29];
  [v34 setNonce:v28];
  [v34 setMessageType:a4 + 2006];
  id v35 = [v34 data];
  if (!v35)
  {

    return 0;
  }
  unint64_t v36 = v35;
  uint64_t v37 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

  return v37;
}

void sub_1005F3D34(uint64_t a1, unint64_t a2)
{
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_10097B020);
  sub_10025ADCC(a1, a2);
  sub_10025ADCC(a1, a2);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    sub_10025ADCC(a1, a2);
    uint64_t v7 = Data.description.getter();
    unint64_t v9 = v8;
    sub_100250CC4(a1, a2);
    sub_100254634(v7, v9, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100250CC4(a1, a2);
    sub_100250CC4(a1, a2);
    _os_log_impl((void *)&_mh_execute_header, oslog, v5, "Wrote data %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100250CC4(a1, a2);
    sub_100250CC4(a1, a2);
  }
}

id sub_1005F3F64()
{
  uint64_t v1 = v0;
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097B020);
  swift_retain_n();
  os_log_type_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v3, v4))
  {

    swift_release_n();
    id result = *(id *)(v1 + 72);
    if (!result) {
      return result;
    }
    return [result invalidate:v9, v10];
  }
  os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
  uint64_t v10 = swift_slowAlloc();
  *(_DWORD *)os_log_type_t v5 = 136315138;
  swift_retain();
  uint64_t v6 = String.init<A>(describing:)();
  uint64_t v9 = sub_100254634(v6, v7, &v10);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_release_n();
  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s: Disconnecting", v5, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  id result = *(id *)(v1 + 72);
  if (result) {
    return [result invalidate:v9, v10];
  }
  return result;
}

uint64_t sub_1005F4164()
{
  swift_unknownObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDAuthenticationTransportCoreBluetooth()
{
  return self;
}

uint64_t sub_1005F41E8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  unint64_t v4 = sub_1005F2580(a1, a2, a3, a4);
  return v4 | ((HIDWORD(v4) & 1) << 32);
}

uint64_t sub_1005F4218()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SDAuthenticationTransportUnsupported()
{
  return self;
}

uint64_t sub_1005F4274(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_unknownObjectRelease();
}

uint64_t sub_1005F4284()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_1005F428C()
{
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_10097B020);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Cannot send message over unsupported transport", v3, 2u);
    swift_slowDealloc();
  }

  return 0x100000000;
}

void sub_1005F437C()
{
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_10097B020);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    os_log_type_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "Cannot disconnect over unsupported transport", v2, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1005F4464()
{
  uint64_t v1 = v0;
  if (!*(void *)(v0 + 32)
    || (swift_retain(), isCancelled = swift_task_isCancelled(), uint64_t result = swift_release(), (isCancelled & 1) == 0))
  {
    if (qword_10096A068 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_10097B020);
    swift_retain_n();
    os_log_type_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      unint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)unint64_t v7 = 136315138;
      type metadata accessor for ResponseTimer();
      swift_retain();
      uint64_t v8 = String.init<A>(describing:)();
      sub_100254634(v8, v9, &v10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s Timer cancelled", v7, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (!*(void *)(v1 + 32))
      {
LABEL_9:
        *(void *)(v1 + 32) = 0;
        return swift_release();
      }
    }
    else
    {

      swift_release_n();
      if (!*(void *)(v1 + 32)) {
        goto LABEL_9;
      }
    }
    swift_retain();
    Task.cancel()();
    swift_release();
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1005F469C(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  uint64_t v3 = type metadata accessor for ContinuousClock.Instant();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for ContinuousClock();
  v2[12] = v4;
  v2[13] = *(void *)(v4 - 8);
  v2[14] = swift_task_alloc();
  return _swift_task_switch(sub_1005F47C8, 0, 0);
}

uint64_t sub_1005F47C8()
{
  unint64_t v18 = v0;
  if (*(void *)(v0[7] + 32)) {
    sub_1005F4464();
  }
  ContinuousClock.init()();
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[15] = sub_10000B47C(v1, (uint64_t)qword_10097B020);
  swift_retain_n();
  os_log_type_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[7];
  if (v4)
  {
    uint64_t v16 = v0[6];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    v0[3] = v5;
    type metadata accessor for ResponseTimer();
    swift_retain();
    uint64_t v7 = String.init<A>(describing:)();
    v0[4] = sub_100254634(v7, v8, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v6 + 12) = 2048;
    v0[5] = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s: Starting timer for %ld sec", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  uint64_t v9 = v0[10];
  uint64_t v10 = v0[8];
  uint64_t v11 = v0[9];
  static ContinuousClock.now.getter();
  ContinuousClock.Instant.advanced(by:)();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v0[16] = v12;
  v0[17] = (v11 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v12(v9, v10);
  uint64_t v13 = (void *)swift_task_alloc();
  v0[18] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1005F4AD4;
  uint64_t v14 = v0[11];
  return ContinuousClock.sleep(until:tolerance:)(v14, 0, 0, 1);
}

uint64_t sub_1005F4AD4()
{
  os_log_type_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 128);
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0) {
    uint64_t v5 = sub_1005F4D00;
  }
  else {
    uint64_t v5 = sub_1005F4C54;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1005F4C54()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[12];
  sub_1005F4EF8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1005F4D00()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Ran into error creating timer: %@", v3, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = v0[13];
  uint64_t v6 = v0[14];
  uint64_t v8 = v0[12];
  sub_1005F4EF8();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

void sub_1005F4EF8()
{
  uint64_t v1 = v0;
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097B020);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v3, v4))
  {

    swift_release_n();
    if (!*(void *)(v1 + 16)) {
      return;
    }
    goto LABEL_7;
  }
  uint64_t v5 = (uint8_t *)swift_slowAlloc();
  uint64_t v8 = swift_slowAlloc();
  *(_DWORD *)uint64_t v5 = 136315138;
  type metadata accessor for ResponseTimer();
  swift_retain();
  uint64_t v6 = String.init<A>(describing:)();
  sub_100254634(v6, v7, &v8);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_release_n();
  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s: Timer fired", v5, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  if (*(void *)(v1 + 16))
  {
LABEL_7:
    swift_unknownObjectRetain();
    sub_1004258B8();
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1005F50E0()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResponseTimer()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for SDAuthenticationTransportType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005F5210);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDAuthenticationTransportType()
{
  return &type metadata for SDAuthenticationTransportType;
}

unint64_t sub_1005F524C()
{
  unint64_t result = qword_10097BB48;
  if (!qword_10097BB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097BB48);
  }
  return result;
}

uint64_t sub_1005F52A0@<X0>(_OWORD *a1@<X8>)
{
  return sub_1005EB5B8(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

char *sub_1005F52BC(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&a8[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v16 = OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_transportLock;
  sub_10000A844((uint64_t *)&unk_10096D4C0);
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = 0;
  *(void *)&a8[v16] = v17;
  *(void *)&a8[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_rapportInfraWiFiTransportsByIdentifier] = &_swiftEmptyDictionarySingleton;
  *(void *)&a8[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_queue] = a1;
  unint64_t v18 = &a8[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_nearbyAgentTransport];
  *(void *)unint64_t v18 = a2;
  *((void *)v18 + 1) = &off_1008E18A8;
  uint64_t v19 = &a8[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_idsLocalTransport];
  *(void *)uint64_t v19 = a3;
  *((void *)v19 + 1) = &off_1008E1868;
  unint64_t v20 = &a8[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_idsInternetTransport];
  *(void *)unint64_t v20 = a4;
  *((void *)v20 + 1) = &off_1008E1828;
  id v21 = &a8[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_rapportTransportBT];
  *(void *)id v21 = a5;
  *((void *)v21 + 1) = &off_1008E17E8;
  uint64_t v22 = &a8[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_rapportTransportAWDL];
  *(void *)uint64_t v22 = a6;
  *((void *)v22 + 1) = &off_1008E17E8;
  NSData v23 = &a8[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_coreBluetoothTransport];
  *(void *)NSData v23 = a7;
  *((void *)v23 + 1) = &off_1008E17A8;
  type metadata accessor for SDAuthenticationTransportRapportReceiver();
  swift_allocObject();
  id v24 = a1;
  uint64_t v25 = a8;
  swift_retain();
  id v56 = a3;
  id v55 = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_rapportTransportReceiver] = sub_1005F594C((uint64_t)v24);

  v57.receiver = v25;
  v57.super_class = ObjectType;
  uint64_t v26 = (char *)[super init];
  uint64_t v27 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_nearbyAgentTransport + 8];
  uint64_t v28 = swift_getObjectType();
  id v29 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v27 + 16);
  uint64_t v30 = v26;
  swift_unknownObjectRetain();
  v29(v26, &off_1008E18E8, v28, v27);
  swift_unknownObjectRelease();
  uint64_t v31 = *(void *)&v30[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_idsLocalTransport + 8];
  uint64_t v32 = swift_getObjectType();
  id v33 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v31 + 16);
  unint64_t v34 = v30;
  swift_unknownObjectRetain();
  v33(v26, &off_1008E18E8, v32, v31);
  swift_unknownObjectRelease();
  uint64_t v35 = *(void *)&v34[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_idsInternetTransport + 8];
  uint64_t v36 = swift_getObjectType();
  uint64_t v37 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v35 + 16);
  uint64_t v38 = v34;
  swift_unknownObjectRetain();
  v37(v26, &off_1008E18E8, v36, v35);
  swift_unknownObjectRelease();
  uint64_t v39 = *(void *)&v38[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_rapportTransportBT + 8];
  uint64_t v40 = swift_getObjectType();
  uint64_t v41 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v39 + 16);
  unint64_t v42 = v38;
  swift_unknownObjectRetain();
  v41(v26, &off_1008E18E8, v40, v39);
  swift_unknownObjectRelease();
  uint64_t v43 = *(void *)&v42[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_rapportTransportAWDL + 8];
  uint64_t v44 = swift_getObjectType();
  uint64_t v45 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v43 + 16);
  uint64_t v46 = v42;
  swift_unknownObjectRetain();
  v45(v26, &off_1008E18E8, v44, v43);
  swift_unknownObjectRelease();
  uint64_t v47 = *(void *)&v46[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_coreBluetoothTransport + 8];
  uint64_t v48 = swift_getObjectType();
  NSString v49 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v47 + 16);
  uint64_t v50 = v46;
  swift_unknownObjectRetain();
  v49(v26, &off_1008E18E8, v48, v47);
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v51 = *(void *)&v50[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_rapportTransportReceiver];
  *(void *)(v51 + 16) = v26;
  *(void *)(v51 + 24) = &off_1008E18E8;
  unint64_t v52 = v50;
  swift_unknownObjectRelease();
  return v52;
}

uint64_t sub_1005F5720(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v10 = (void *)*a5;
  unint64_t v12 = sub_1005838BC(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    unint64_t v18 = (void *)*a5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (uint64_t *)(v18[7] + 16 * v12);
      uint64_t result = swift_unknownObjectRelease();
      *uint64_t v19 = a1;
      v19[1] = (uint64_t)&off_1008E17E8;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1005905B8();
    goto LABEL_7;
  }
  sub_10058BD18(v15, a4 & 1);
  uint64_t v21 = sub_1005838BC(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  unint64_t v18 = (void *)*a5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1005F5868(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

unint64_t sub_1005F5868(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  unsigned int v6 = (void *)(a5[7] + 16 * result);
  *unsigned int v6 = a4;
  v6[1] = &off_1008E17E8;
  uint64_t v7 = a5[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    a5[2] = v9;
  }
  return result;
}

uint64_t sub_1005F58C0(void *a1)
{
  *(void *)(v1 + 72) = 0;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0;
  *(void *)(v1 + 16) = a1;
  *(unsigned char *)(v1 + 24) = 0;
  id v3 = objc_allocWithZone((Class)CBServer);
  id v4 = a1;
  *(void *)(v1 + 48) = [v3 init];
  *(void *)(v1 + 80) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v1 + 88) = 0;
  *(void *)(v1 + 56) = sub_1005EBA44;
  *(void *)(v1 + 64) = 0;
  sub_1005EFF94();
  return v1;
}

void *sub_1005F594C(uint64_t a1)
{
  v1[2] = 0;
  v1[3] = 0;
  id v3 = [objc_allocWithZone((Class)RPCompanionLinkClient) init];
  v1[4] = v3;
  [v3 setDispatchQueue:a1];
  uint64_t v4 = 12;
  uint64_t v5 = &byte_1008D2990;
  do
  {
    char v6 = *v5++;
    sub_1005EDBAC(v6);
    --v4;
  }
  while (v4);
  uint64_t v7 = (void *)v1[4];
  v11[4] = sub_1005ED904;
  v11[5] = 0;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  void v11[2] = sub_1006B210C;
  v11[3] = &unk_1008E1908;
  BOOL v8 = _Block_copy(v11);
  id v9 = v7;
  [v9 activateWithCompletion:v8];
  _Block_release(v8);

  return v1;
}

char *sub_1005F5A60(void *a1)
{
  type metadata accessor for SDAuthenticationTransportNearbyAgent();
  uint64_t v2 = swift_allocObject();
  id v3 = a1;
  sub_1005EB938(v3);
  id v4 = objc_allocWithZone((Class)type metadata accessor for SDAuthenticationTransportIDSServiceLocal());
  id v5 = v3;
  sub_1005ECBD4(v5);
  uint64_t v7 = v6;
  id v8 = objc_allocWithZone((Class)type metadata accessor for SDAuthenticationTransportIDSServiceInternet());
  id v9 = v5;
  sub_1005ECBD4(v9);
  char v11 = v10;
  type metadata accessor for SDAuthenticationTransportRapportBTOnly();
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 56) = 0;
  *(void *)(v12 + 32) = 0;
  *(void *)(v12 + 40) = 0;
  id v13 = objc_allocWithZone((Class)RPCompanionLinkClient);
  id v14 = v9;
  id v15 = [v13 init];
  *(void *)(v12 + 48) = v15;
  *(void *)(v12 + 16) = v14;
  *(unsigned char *)(v12 + 24) = 0;
  [v15 setDispatchQueue:v14];
  *(void *)(v12 + 64) = 0x40000600102;
  type metadata accessor for SDAuthenticationTransportRapportAWDLOnly();
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 56) = 0;
  *(void *)(v16 + 32) = 0;
  *(void *)(v16 + 40) = 0;
  id v17 = objc_allocWithZone((Class)RPCompanionLinkClient);
  id v18 = v14;
  id v19 = [v17 init];
  *(void *)(v16 + 48) = v19;
  *(void *)(v16 + 16) = v18;
  *(unsigned char *)(v16 + 24) = 0;
  [v19 setDispatchQueue:v18];
  *(void *)(v16 + 64) = 0x8040000220002;
  type metadata accessor for SDAuthenticationTransportCoreBluetooth();
  swift_allocObject();
  id v20 = v18;
  uint64_t v21 = sub_1005F58C0(v20);

  char v22 = (char *)objc_allocWithZone((Class)type metadata accessor for SDAuthenticationTransportManager());
  swift_retain();
  id v23 = v7;
  id v24 = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v25 = sub_1005F52BC(v20, v2, v23, v24, v12, v16, v21, v22);
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return v25;
}

uint64_t sub_1005F5CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005F5CD8()
{
  return swift_release();
}

uint64_t sub_1005F5CE0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005F5D18(void *a1, void (*a2)(void))
{
  return sub_1005F0208(a1, a2);
}

uint64_t sub_1005F5D20()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1005F5D58(uint64_t a1)
{
  sub_1005F0A54(a1, *(void *)(v1 + 16));
}

uint64_t sub_1005F5D60()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1005F5DA8()
{
  sub_1005F0D44(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

unint64_t sub_1005F5DB4(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 a4)
{
  uint64_t v6 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A068 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000B47C(v9, (uint64_t)qword_10097B020);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Beginning encryption", v12, 2u);
    swift_slowDealloc();
  }

  id v13 = [self sharedManager];
  if (!v13)
  {
    id v19 = 0;
    id v20 = 0;
    goto LABEL_20;
  }
  v14.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
  uint64_t v15 = a3[3];
  uint64_t v16 = a3[4];
  sub_10026BB6C(a3, v15);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
  if (v17)
  {
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v18 = 0;
  }
  aBlock[0] = 0;
  id v56 = 0;
  id v57 = 0;
  unsigned int v21 = [v13 encryptMessageData:v14.super.isa deviceID:v18 encryptedMessage:aBlock authTag:&v57 nonce:&v56];

  id v19 = v56;
  id v20 = v57;
  char v22 = aBlock[0];
  id v13 = v22;
  if (!v21 || !v22 || !v20 || !v19)
  {
LABEL_20:
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v48 = 0;
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "Error converting message to data", v48, 2u);
      swift_slowDealloc();
    }
    goto LABEL_26;
  }
  id v23 = [objc_allocWithZone((Class)SDAutoUnlockSessionWrapper) init];
  id v24 = v23;
  if (!v23
    || ([v23 setEncryptedPayload:v13],
        [v24 setAuthTag:v20],
        [v24 setNonce:v19],
        [v24 setMessageType:a4 + 2006],
        (id v25 = [v24 data]) == 0))
  {
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v46, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v46, v49, "Error encrypting message", v50, 2u);
      swift_slowDealloc();
      uint64_t v51 = v24;
    }
    else
    {
      uint64_t v51 = v46;
      uint64_t v46 = v24;
    }

LABEL_26:
    unsigned __int8 v45 = 0;
    uint64_t v44 = 10;
LABEL_27:

    LOBYTE(aBlock[0]) = v45;
    return v44 | ((unint64_t)v45 << 32);
  }
  uint64_t v26 = v25;
  uint64_t v27 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v53 = v28;
  uint64_t v54 = v27;

  id v52 = [objc_allocWithZone((Class)SFBLEDevice) init];
  uint64_t v30 = a3[3];
  uint64_t v29 = a3[4];
  sub_10026BB6C(a3, v30);
  (*(void (**)(uint64_t, uint64_t))(v29 + 48))(v30, v29);
  uint64_t v31 = type metadata accessor for UUID();
  uint64_t v32 = *(void *)(v31 - 8);
  unint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48))(v8, 1, v31);
  if (result != 1)
  {
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v31);
    id v35 = v52;
    [v52 setIdentifier:isa];

    [v35 setUseBTPipe:1];
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Sending data", v38, 2u);
      swift_slowDealloc();
    }

    id v39 = [self sharedNearbyAgent];
    unint64_t v41 = v53;
    uint64_t v40 = v54;
    Class v42 = Data._bridgeToObjectiveC()().super.isa;
    aBlock[4] = sub_1005EBA9C;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1006B210C;
    uint64_t aBlock[3] = &unk_1008E1AC0;
    uint64_t v43 = _Block_copy(aBlock);
    [v39 sendUnlockData:v42 toBLEDevice:v35 completion:v43];
    _Block_release(v43);

    sub_100250CC4(v40, v41);
    uint64_t v44 = 0;
    unsigned __int8 v45 = 1;
    uint64_t v46 = v13;
    id v13 = v20;
    id v20 = v19;
    id v19 = v24;
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005F6454()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005F648C()
{
  return sub_1005EB41C(*(void *)(v0 + 16));
}

uint64_t sub_1005F6494()
{
  swift_bridgeObjectRelease();
  sub_100250CC4(*(void *)(v0 + 48), *(void *)(v0 + 56));

  return _swift_deallocObject(v0, 65, 7);
}

uint64_t sub_1005F64DC()
{
  return sub_1005EAF74(*(void *)(v0 + 16), *(unsigned int *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned __int8 *)(v0 + 64));
}

uint64_t sub_1005F64F4()
{
  swift_unknownObjectRelease();
  swift_release();

  sub_100250CC4(*(void *)(v0 + 48), *(void *)(v0 + 56));

  return _swift_deallocObject(v0, 65, 7);
}

uint64_t sub_1005F6544(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + 56);
  char v10 = *(unsigned char *)(v1 + 64);
  os_log_type_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *os_log_type_t v11 = v2;
  v11[1] = sub_10000A6F4;
  return sub_1005F2FF0(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1005F6620()
{
  sub_100250CC4(*(void *)(v0 + 16), *(void *)(v0 + 24));

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1005F6658()
{
  sub_1005F3D34(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1005F6660()
{
  swift_release();
  swift_errorRelease();
  sub_100250CC4(*(void *)(v0 + 32), *(void *)(v0 + 40));

  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_1005F66A8()
{
  return sub_1005F367C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48));
}

unint64_t sub_1005F66B8(Swift::String string)
{
  id object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._id object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008D3738, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 7) {
    return 7;
  }
  else {
    return v3;
  }
}

void sub_1005F6704(void *a1, void *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  id v54 = a1;
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *(void **)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary35SDAuthenticationTransportIDSService_queue);
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  id v14 = v13;
  char v15 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if (v15)
  {
    if (qword_10096A068 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = sub_10000B47C(v16, (uint64_t)qword_10097B020);
  id v18 = a2;
  swift_bridgeObjectRetain_n();
  id v19 = v18;
  id v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v53 = v5;
    uint64_t v23 = v22;
    uint64_t v50 = (void *)swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    v55[0] = v51;
    *(_DWORD *)uint64_t v23 = 138412546;
    uint64_t v52 = v17;
    uint64_t v56 = (uint64_t)v19;
    unint64_t v24 = a4;
    id v25 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v50 = v19;

    a4 = v24;
    *(_WORD *)(v23 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_100254634(a3, v24, v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Received: %@ from: %s", (uint8_t *)v23, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v5 = v53;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  int v26 = [v19 type];
  __int16 v27 = v26;
  uint64_t v28 = sub_10050ACE8(v26);
  if (v28 == 12)
  {
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 33554688;
      LOWORD(v55[0]) = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Received unknown message type %hu", v31, 6u);
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v32 = v28;
    NSString v33 = String._bridgeToObjectiveC()();
    id v34 = [v54 deviceForFromID:v33];

    if (v34)
    {
      uint64_t v35 = v5 + OBJC_IVAR____TtC16DaemoniOSLibrary35SDAuthenticationTransportIDSService_delegate;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v36 = *(void *)(v35 + 8);
        id v37 = [v19 data];
        if (v37)
        {
          uint64_t v38 = v37;
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v40 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v42 = v41;

          v55[3] = sub_10000B740(0, &qword_10097BB60);
          v55[4] = (uint64_t)&off_1008E2510;
          v55[0] = (uint64_t)v34;
          uint64_t v43 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))(v36 + 8);
          id v44 = v34;
          v43(v40, v42, v32, v55, ObjectType, v36);

          sub_100250CC4(v40, v42);
          swift_unknownObjectRelease();
          sub_10024D338((uint64_t)v55);
        }
        else
        {
          __break(1u);
        }
      }
      else
      {
      }
    }
    else
    {
      swift_bridgeObjectRetain_n();
      unsigned __int8 v45 = Logger.logObject.getter();
      uint64_t v46 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v45, (os_log_type_t)v46))
      {
        uint64_t v47 = a3;
        uint64_t v48 = (uint8_t *)swift_slowAlloc();
        v55[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v48 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v56 = sub_100254634(v47, a4, v55);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v46, "Could not find same account device matching fromID %s", v48, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
}

void sub_1005F6D5C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary35SDAuthenticationTransportIDSService_queue);
  *uint64_t v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  id v12 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    if (qword_10096A068 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v13 = type metadata accessor for Logger();
  sub_10000B47C(v13, (uint64_t)qword_10097B020);
  swift_bridgeObjectRetain_n();
  id v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_100254634(a1, a2, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 1024;
    LODWORD(v17) = a3 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Received confirmation that message: %s sent success: %{BOOL}d", (uint8_t *)v16, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1005F7004()
{
  swift_release();
  sub_100250CC4(*(void *)(v0 + 24), *(void *)(v0 + 32));

  return _swift_deallocObject(v0, 41, 7);
}

void sub_1005F7044(uint64_t a1)
{
  sub_1005EF268(a1, *(void *)(v1 + 16), *(NSObject **)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

void sub_1005F7054()
{
  sub_1005EE900(v0);
}

uint64_t sub_1005F705C()
{
  swift_release();
  sub_100250CC4(*(void *)(v0 + 24), *(void *)(v0 + 32));
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1005F70A4(uint64_t a1)
{
  return sub_1005EE9E4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_1005F70B8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1005F70F0(uint64_t a1, uint64_t a2)
{
  sub_1005EDE40(a1, a2, *(unsigned __int8 *)(v2 + 16));
}

unint64_t sub_1005F70FC()
{
  unint64_t result = qword_10097BBA0;
  if (!qword_10097BBA0)
  {
    sub_100247840(&qword_10096B540);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097BBA0);
  }
  return result;
}

uint64_t sub_1005F7168(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_100974EA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005F71D0()
{
  sub_100250CC4(*(void *)(v0 + 16), *(void *)(v0 + 24));

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1005F7218()
{
  sub_1005EC60C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1005F72A4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097BBB0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097BBB0);
  if (qword_100969CD8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_1009946D8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1005F736C()
{
  uint64_t v1 = *(int *)(_s22GuestModeUnlockPairingV17InitialKeyContextVMa(0) + 24);
  uint64_t v2 = *(void **)(v0 + v1);
  if (v2)
  {
    id v3 = *(id *)(v0 + v1);
LABEL_5:
    id v5 = v2;
    return v3;
  }
  id result = [objc_allocWithZone((Class)SDAuthenticationPrePairingRequest) init];
  if (result)
  {
    *(void *)(v0 + v1) = result;
    id v3 = result;
    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005F73E0(uint64_t a1, uint64_t a2)
{
  return sub_1005F8C54(a1, a2, (uint64_t (*)(void))sub_1005F736C);
}

id sub_1005F740C()
{
  return sub_1005F748C(_s22GuestModeUnlockPairingV18InitialLockContextVMa, (Class *)off_1008C6900);
}

uint64_t sub_1005F7440(uint64_t a1, uint64_t a2)
{
  return sub_1005F8BE4(a1, a2, (void (*)(void, void))sub_100278C78);
}

uint64_t sub_1005F7458(uint64_t a1, uint64_t a2)
{
  return sub_1005F854C(a1, a2, _s22GuestModeUnlockPairingV18InitialLockContextVMa, (Class *)off_1008C6900);
}

id sub_1005F748C(uint64_t (*a1)(void), Class *a2)
{
  uint64_t v4 = *(int *)(a1(0) + 28);
  id v5 = *(void **)(v2 + v4);
  if (v5)
  {
    id v6 = *(id *)(v2 + v4);
LABEL_5:
    id v8 = v5;
    return v6;
  }
  id result = [objc_allocWithZone(*a2) init];
  if (result)
  {
    *(void *)(v2 + v4) = result;
    id v6 = result;
    id v5 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_1005F750C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for SDAuthenticationSessionMetrics();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A844(&qword_10096BBB0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1007709D0;
  if (qword_10096A088 != -1) {
    swift_once();
  }
  *(void *)(v10 + 56) = &type metadata for SDAuthentication.Operation.CheckLocalSecurityPolicy;
  *(void *)(v10 + 64) = &off_100971848;
  *(void *)(v10 + 96) = &type metadata for SDAuthentication.Operation.IncludeLongTermKeyAndAKSTokenInMessage;
  *(void *)(v10 + 104) = &off_100971DC8;
  *(void *)(v10 + 136) = &type metadata for SDAuthentication.Operation.BuildMessageHeader;
  *(void *)(v10 + 144) = &off_100971928;
  *a3 = v10;
  uint64_t v11 = _s22GuestModeUnlockPairingV27HandlePairingRequestContextVMa(0);
  uint64_t v35 = *(int *)(v11 + 28);
  uint64_t v36 = v11;
  *(uint64_t *)((char *)a3 + v35) = 0;
  *((unsigned char *)a3 + *(int *)(v11 + 32)) = 4;
  if (qword_10096A080 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000B47C(v12, (uint64_t)qword_10097BBB0);
  id v13 = a1;
  id v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v32 = v9;
    uint64_t v33 = a2;
    uint64_t v34 = v3;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315138;
    id v17 = [v13 sessionID];
    if (v17)
    {
      uint64_t v18 = v17;
      unint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v21 = v20;
    }
    else
    {
      unint64_t v19 = 0xD000000000000015;
      uint64_t v37 = 0;
      unint64_t v38 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v21 = 0x80000001007B7770;
    }
    uint64_t v37 = sub_100254634(v19, v21, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Process PairingRequest SessionID: %s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a2 = v33;
    uint64_t v9 = v32;
  }
  else
  {
  }
  id v22 = [v13 longTermKey];
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v24 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = v25;

    uint64_t v27 = v36;
    uint64_t v28 = (uint64_t *)((char *)a3 + *(int *)(v36 + 24));
    *uint64_t v28 = v24;
    v28[1] = v26;
    uint64_t v29 = _s22GuestModeUnlockPairingV17InitialKeyContextVMa(0);
    sub_1005FDC48(a2 + *(int *)(v29 + 20), (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
    sub_1005FDCB0(a2, _s22GuestModeUnlockPairingV17InitialKeyContextVMa);
    sub_1005FDD10((uint64_t)v9, (uint64_t)a3 + *(int *)(v27 + 20), (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v30 = 10;
    *(void *)(v30 + 8) = 0xD000000000000015;
    *(void *)(v30 + 16) = 0x80000001007C2EE0;
    swift_willThrow();

    sub_1005FDCB0(a2, _s22GuestModeUnlockPairingV17InitialKeyContextVMa);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1005F7960(uint64_t a1, uint64_t a2)
{
  return sub_1005F8BE4(a1, a2, (void (*)(void, void))sub_10025ADCC);
}

id sub_1005F7978()
{
  return sub_1005F748C(_s22GuestModeUnlockPairingV27HandlePairingRequestContextVMa, (Class *)off_1008C6908);
}

uint64_t sub_1005F79AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005FDC48(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
}

uint64_t sub_1005F79E4(uint64_t a1, uint64_t a2)
{
  return sub_1005F854C(a1, a2, _s22GuestModeUnlockPairingV27HandlePairingRequestContextVMa, (Class *)off_1008C6908);
}

id sub_1005F7A18()
{
  uint64_t v1 = *(int *)(_s22GuestModeUnlockPairingV28HandlePairingResponseContextVMa(0) + 36);
  uint64_t v2 = *(void **)(v0 + v1);
  if (v2)
  {
    id v3 = *(id *)(v0 + v1);
LABEL_5:
    id v5 = v2;
    return v3;
  }
  id result = [objc_allocWithZone((Class)SDAuthenticationPairingCreateSecret) init];
  if (result)
  {
    *(void *)(v0 + v1) = result;
    id v3 = result;
    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_1005F7A88(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for SDAuthenticationSessionMetrics();
  __chkstk_darwin(v7 - 8);
  uint64_t v55 = (uint64_t)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A844(&qword_10096BBB0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1007709D0;
  if (qword_10096A088 != -1) {
    swift_once();
  }
  *(void *)(v9 + 56) = &type metadata for SDAuthentication.Operation.SignAndStoreRemoteLTK;
  *(void *)(v9 + 64) = &off_100971DA8;
  *(void *)(v9 + 96) = &type metadata for SDAuthentication.Operation.BuildMessageHeader;
  *(void *)(v9 + 104) = &off_100971928;
  *(void *)(v9 + 136) = &type metadata for SDAuthentication.Operation.EnableDynamicStore;
  *(void *)(v9 + 144) = &off_100971D88;
  *a3 = v9;
  uint64_t v10 = (int *)_s22GuestModeUnlockPairingV28HandlePairingResponseContextVMa(0);
  uint64_t v11 = (char *)a3 + v10[6];
  *(_OWORD *)uint64_t v11 = xmmword_100770AE0;
  uint64_t v12 = v10[9];
  *(uint64_t *)((char *)a3 + v12) = 0;
  id v54 = v10;
  *((unsigned char *)a3 + v10[10]) = 6;
  if (qword_10096A080 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10000B47C(v13, (uint64_t)qword_10097BBB0);
  id v14 = a1;
  os_log_type_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v56 = v3;
  if (v17)
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v52 = v12;
    unint64_t v19 = (uint8_t *)v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v53 = a3;
    uint64_t v50 = (void *)v20;
    *(_DWORD *)unint64_t v19 = 138412290;
    uint64_t v51 = v11;
    id v57 = v14;
    id v21 = v14;
    id v22 = v14;
    uint64_t v11 = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v50 = v21;

    id v14 = v21;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Handling authentication pairing response: %@", v19, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    a3 = v53;
    swift_slowDealloc();
    uint64_t v12 = v52;
    swift_slowDealloc();
  }
  else
  {
  }
  id v23 = [v14 token];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v27 = v26;

    id v28 = [v14 longTermKey];
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v30 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v32 = v31;

      uint64_t v33 = v54;
      uint64_t v34 = (uint64_t *)((char *)a3 + v54[8]);
      uint64_t *v34 = v25;
      v34[1] = v27;
      uint64_t v35 = (uint64_t *)((char *)a3 + v33[7]);
      *uint64_t v35 = v30;
      v35[1] = v32;
      uint64_t v36 = _s22GuestModeUnlockPairingV18InitialLockContextVMa(0);
      uint64_t v37 = (uint64_t *)(a2 + *(int *)(v36 + 24));
      uint64_t v38 = *v37;
      unint64_t v39 = v37[1];
      uint64_t v40 = a3;
      uint64_t v41 = *(void *)v11;
      unint64_t v42 = (uint64_t *)v11;
      uint64_t v43 = a2;
      unint64_t v44 = v42[1];
      sub_100278C78(*v37, v39);
      sub_100250CB0(v41, v44);
      *unint64_t v42 = v38;
      v42[1] = v39;
      uint64_t v45 = v43 + *(int *)(v36 + 20);
      uint64_t v46 = v55;
      sub_1005FDC48(v45, v55, (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
      sub_1005FDCB0(v43, _s22GuestModeUnlockPairingV18InitialLockContextVMa);
      sub_1005FDD10(v46, (uint64_t)v40 + v33[5], (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
      return;
    }
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v48 = 10;
    *(void *)(v48 + 8) = 0xD000000000000013;
    *(void *)(v48 + 16) = 0x80000001007C4020;
    swift_willThrow();
    sub_100250CC4(v25, v27);
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v47 = 10;
    strcpy((char *)(v47 + 8), "Missing token");
    *(_WORD *)(v47 + 22) = -4864;
    swift_willThrow();
  }

  sub_1005FDCB0(a2, _s22GuestModeUnlockPairingV18InitialLockContextVMa);
  swift_bridgeObjectRelease();
  sub_100250CB0(*(void *)v11, *((void *)v11 + 1));
}

uint64_t sub_1005F7FA0(uint64_t a1, uint64_t a2)
{
  return sub_1005F8C54(a1, a2, (uint64_t (*)(void))sub_1005F7A18);
}

void sub_1005F7FCC(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for SDAuthenticationSessionMetrics();
  __chkstk_darwin(v7 - 8);
  uint64_t v40 = (uint64_t)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A844(&qword_10096BBB0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100771F40;
  if (qword_10096A088 != -1) {
    swift_once();
  }
  *(void *)(v9 + 56) = &type metadata for SDAuthentication.Operation.StepPairingCreateSecret;
  *(void *)(v9 + 64) = &off_100971D68;
  *(void *)(v9 + 96) = &type metadata for SDAuthentication.Operation.BuildMessageHeader;
  *(void *)(v9 + 104) = &off_100971928;
  *(void *)(v9 + 136) = &type metadata for SDAuthentication.Operation.RecordPairing;
  *(void *)(v9 + 144) = &off_100971D48;
  *(void *)(v9 + 176) = &type metadata for SDAuthentication.Operation.EnableDynamicStore;
  *(void *)(v9 + 184) = &off_100971D88;
  *a3 = v9;
  uint64_t SecretContextVMa = _s22GuestModeUnlockPairingV32HandlePairingCreateSecretContextVMa(0);
  uint64_t v11 = *(int *)(SecretContextVMa + 28);
  *(uint64_t *)((char *)a3 + v11) = 0;
  uint64_t v39 = SecretContextVMa;
  *((unsigned char *)a3 + *(int *)(SecretContextVMa + 32)) = 5;
  if (qword_10096A080 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000B47C(v12, (uint64_t)qword_10097BBB0);
  id v13 = a1;
  id v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v34[0] = a3;
    uint64_t v36 = v11;
    uint64_t v37 = a2;
    uint64_t v38 = v3;
    uint64_t v16 = swift_slowAlloc();
    BOOL v17 = (void *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v43 = v35;
    *(_DWORD *)uint64_t v16 = 138412546;
    uint64_t v41 = (uint64_t)v13;
    id v18 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v34[1] = v17;
    *BOOL v17 = v13;

    *(_WORD *)(v16 + 12) = 2080;
    id v19 = [v18 sessionID];
    if (v19)
    {
      uint64_t v20 = v19;
      unint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v23 = v22;
    }
    else
    {
      uint64_t v41 = 0;
      unint64_t v42 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v23 = 0x80000001007B7770;
      unint64_t v21 = 0xD000000000000015;
    }
    uint64_t v41 = sub_100254634(v21, v23, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Received authentication pairing create secret: %@ for sessionID %s", (uint8_t *)v16, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a2 = v37;
    uint64_t v11 = v36;
    a3 = (uint64_t *)v34[0];
  }
  else
  {
  }
  id v24 = [v13 token];
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v28 = v27;

    uint64_t v29 = v39;
    uint64_t v30 = (uint64_t *)((char *)a3 + *(int *)(v39 + 24));
    *uint64_t v30 = v26;
    v30[1] = v28;
    uint64_t v31 = _s22GuestModeUnlockPairingV27HandlePairingRequestContextVMa(0);
    uint64_t v32 = v40;
    sub_1005FDC48(a2 + *(int *)(v31 + 20), v40, (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
    sub_1005FDCB0(a2, _s22GuestModeUnlockPairingV27HandlePairingRequestContextVMa);
    sub_1005FDD10(v32, (uint64_t)a3 + *(int *)(v29 + 20), (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v33 = 10;
    strcpy((char *)(v33 + 8), "Missing token");
    *(_WORD *)(v33 + 22) = -4864;
    swift_willThrow();

    sub_1005FDCB0(a2, _s22GuestModeUnlockPairingV27HandlePairingRequestContextVMa);
    swift_bridgeObjectRelease();
  }
}

id sub_1005F84E4()
{
  return sub_1005F748C(_s22GuestModeUnlockPairingV32HandlePairingCreateSecretContextVMa, (Class *)off_1008C68E8);
}

uint64_t sub_1005F8518(uint64_t a1, uint64_t a2)
{
  return sub_1005F854C(a1, a2, _s22GuestModeUnlockPairingV32HandlePairingCreateSecretContextVMa, (Class *)off_1008C68E8);
}

uint64_t sub_1005F854C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), Class *a4)
{
  id v4 = sub_1005F748C(a3, a4);
  id v5 = [v4 data];

  if (v5)
  {
    uint64_t v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

    return v6;
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v8 = 10;
    *(void *)(v8 + 8) = 0xD00000000000001ALL;
    *(void *)(v8 + 16) = 0x80000001007B72F0;
    return swift_willThrow();
  }
}

id sub_1005F8614()
{
  uint64_t v1 = *(int *)(_s22GuestModeUnlockPairingV32HandlePairingCreateRecordContextVMa(0) + 32);
  uint64_t v2 = *(void **)(v0 + v1);
  if (v2)
  {
    id v3 = *(id *)(v0 + v1);
LABEL_5:
    id v5 = v2;
    return v3;
  }
  id result = [objc_allocWithZone((Class)SDAuthenticationConfirmation) init];
  if (result)
  {
    *(void *)(v0 + v1) = result;
    id v3 = result;
    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_1005F8684(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v53 = a3;
  uint64_t v6 = type metadata accessor for SDAuthenticationSessionMetrics();
  __chkstk_darwin(v6 - 8);
  uint64_t v50 = (uint64_t)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000A844(&qword_10096BBB0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1007709D0;
  if (qword_10096A088 != -1) {
    swift_once();
  }
  *(void *)(v8 + 56) = &type metadata for SDAuthentication.Operation.StepPairingCreateRecordWithPasscode;
  *(void *)(v8 + 64) = &off_100971D28;
  *(void *)(v8 + 96) = &type metadata for SDAuthentication.Operation.RecordPairing;
  *(void *)(v8 + 104) = &off_100971D48;
  *(void *)(v8 + 136) = &type metadata for SDAuthentication.Operation.SendConfirmation;
  *(void *)(v8 + 144) = &off_100971EC8;
  uint64_t v9 = v53;
  *uint64_t v53 = v8;
  RecordContextVMa = (int *)_s22GuestModeUnlockPairingV32HandlePairingCreateRecordContextVMa(0);
  uint64_t v52 = (uint64_t *)((char *)v9 + RecordContextVMa[6]);
  *(_OWORD *)uint64_t v52 = xmmword_100770AE0;
  uint64_t v11 = RecordContextVMa[8];
  *(uint64_t *)((char *)v9 + v11) = 0;
  uint64_t v49 = RecordContextVMa;
  *((unsigned char *)v9 + RecordContextVMa[9]) = 2;
  if (qword_10096A080 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000B47C(v12, (uint64_t)qword_10097BBB0);
  id v13 = a1;
  id v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v51 = v3;
  if (v16)
  {
    uint64_t v47 = v11;
    uint64_t v48 = a2;
    uint64_t v17 = swift_slowAlloc();
    id v18 = (void *)swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v56 = v46;
    *(_DWORD *)uint64_t v17 = 138412546;
    uint64_t v54 = (uint64_t)v13;
    id v19 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v45[1] = v18;
    *id v18 = v13;

    *(_WORD *)(v17 + 12) = 2080;
    id v20 = [v19 sessionID];
    if (v20)
    {
      unint64_t v21 = v20;
      unint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v24 = v23;
    }
    else
    {
      unint64_t v22 = 0xD000000000000015;
      uint64_t v54 = 0;
      unint64_t v55 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v24 = 0x80000001007B7770;
    }
    uint64_t v54 = sub_100254634(v22, v24, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Received authentication pairing create record: %@ for sessionID %s", (uint8_t *)v17, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v11 = v47;
    a2 = v48;
  }
  else
  {
  }
  id v25 = [v13 token];
  if (v25)
  {
    uint64_t v26 = v25;
    uint64_t v27 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v29 = v28;

    uint64_t v30 = v53;
    uint64_t v31 = v49;
    uint64_t v32 = (uint64_t *)((char *)v53 + v49[7]);
    *uint64_t v32 = v27;
    v32[1] = v29;
    uint64_t v33 = _s22GuestModeUnlockPairingV28HandlePairingResponseContextVMa(0);
    uint64_t v34 = (uint64_t *)(a2 + *(int *)(v33 + 24));
    uint64_t v35 = *v34;
    unint64_t v36 = v34[1];
    uint64_t v37 = v52;
    uint64_t v38 = a2;
    uint64_t v39 = *v52;
    unint64_t v40 = v52[1];
    sub_100278C78(*v34, v36);
    sub_100250CB0(v39, v40);
    *uint64_t v37 = v35;
    v37[1] = v36;
    uint64_t v41 = v38 + *(int *)(v33 + 20);
    uint64_t v42 = v50;
    sub_1005FDC48(v41, v50, (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
    sub_1005FDCB0(v38, _s22GuestModeUnlockPairingV28HandlePairingResponseContextVMa);
    sub_1005FDD10(v42, (uint64_t)v30 + v31[5], (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v43 = 10;
    *(void *)(v43 + 8) = 0xD000000000000053;
    *(void *)(v43 + 16) = 0x80000001007C4040;
    swift_willThrow();

    sub_1005FDCB0(a2, _s22GuestModeUnlockPairingV28HandlePairingResponseContextVMa);
    unint64_t v44 = v53;
    swift_bridgeObjectRelease();
    sub_100250CB0(*v52, v52[1]);
  }
}

uint64_t sub_1005F8BE4(uint64_t a1, uint64_t a2, void (*a3)(void, void))
{
  id v4 = (void *)(v3 + *(int *)(a1 + 24));
  uint64_t v5 = *v4;
  a3(*v4, v4[1]);
  return v5;
}

uint64_t sub_1005F8C28(uint64_t a1, uint64_t a2)
{
  return sub_1005F8C54(a1, a2, (uint64_t (*)(void))sub_1005F8614);
}

uint64_t sub_1005F8C54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = (void *)a3();
  id v4 = [v3 data];

  if (v4)
  {
    uint64_t v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

    return v5;
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v7 = 10;
    *(void *)(v7 + 8) = 0xD00000000000001ALL;
    *(void *)(v7 + 16) = 0x80000001007B72F0;
    return swift_willThrow();
  }
}

uint64_t sub_1005F8D18@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_10000A844(&qword_10096BBB0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10076E7A0;
  if (qword_10096A088 != -1) {
    swift_once();
  }
  *(void *)(v6 + 56) = &type metadata for SDAuthentication.Operation.HandleSucceededResult;
  *(void *)(v6 + 64) = &off_100971EA8;
  *a3 = v6;
  if ([a1 hasSuccess])
  {
    uint64_t v7 = a2 + *(int *)(_s22GuestModeUnlockPairingV32HandlePairingCreateSecretContextVMa(0) + 20);
    uint64_t v8 = _s22GuestModeUnlockPairingV25HandleConfirmationContextVMa(0);
    sub_1005FDC48(v7, (uint64_t)a3 + *(int *)(v8 + 20), (uint64_t (*)(void))type metadata accessor for SDAuthenticationSessionMetrics);
    LOBYTE(v7) = [a1 success];

    uint64_t result = sub_1005FDCB0(a2, _s22GuestModeUnlockPairingV32HandlePairingCreateSecretContextVMa);
    *((unsigned char *)a3 + *(int *)(v8 + 24)) = v7;
  }
  else
  {
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v10 = 1;
    *(void *)(v10 + 8) = 0xD000000000000016;
    *(void *)(v10 + 16) = 0x80000001007B72D0;
    swift_willThrow();

    sub_1005FDCB0(a2, _s22GuestModeUnlockPairingV32HandlePairingCreateSecretContextVMa);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1005F8ED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for SDAuthenticationCommonOperationInput();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = &v30[-v11];
  __chkstk_darwin(v10);
  id v14 = &v30[-v13];
  os_log_type_t v15 = (int *)_s22GuestModeUnlockPairingV4FlowVMa(0);
  *(void *)(a3 + v15[6]) = _swiftEmptyArrayStorage;
  *(void *)(a3 + v15[7]) = _swiftEmptyArrayStorage;
  sub_100278C8C(a1, a3 + v15[5]);
  sub_1005FDC48(a2, a3, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
  if (qword_10096A080 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_10000B47C(v16, (uint64_t)qword_10097BBB0);
  sub_1005FDC48(a2, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
  sub_1005FDC48(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
  sub_1005FDC48(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  int v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v33 = a1;
    uint64_t v21 = v20;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v35 = v32;
    *(_DWORD *)uint64_t v21 = 136315650;
    type metadata accessor for UUID();
    int v31 = v19;
    sub_100499968();
    uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v34 = sub_100254634(v22, v23, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1005FDCB0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
    *(_WORD *)(v21 + 12) = 2080;
    uint64_t v24 = sub_10050938C();
    uint64_t v34 = sub_100254634(v24, v25, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1005FDCB0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
    *(_WORD *)(v21 + 22) = 2080;
    if (v9[*(int *)(v6 + 32)]) {
      uint64_t v26 = 7955787;
    }
    else {
      uint64_t v26 = 1801678668;
    }
    if (v9[*(int *)(v6 + 32)]) {
      unint64_t v27 = 0xE300000000000000;
    }
    else {
      unint64_t v27 = 0xE400000000000000;
    }
    uint64_t v34 = sub_100254634(v26, v27, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1005FDCB0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v31, "Begin SDAuthenticationPairingFlow %s with %s role %s", (uint8_t *)v21, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_1005FDCB0(a2, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
    uint64_t v28 = v33;
  }
  else
  {

    sub_1005FDCB0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
    sub_1005FDCB0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
    sub_1005FDCB0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
    sub_1005FDCB0(a2, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
    uint64_t v28 = a1;
  }
  return sub_10024D338(v28);
}

void sub_1005F92E4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v134 = a2;
  os_log_type_t v124 = a3;
  uint64_t v107 = _s22GuestModeUnlockPairingV25HandleConfirmationContextVMa(0);
  __chkstk_darwin(v107);
  uint64_t v111 = (uint64_t *)((char *)&v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_10000A844(&qword_10097BDE8);
  __chkstk_darwin(v5 - 8);
  os_log_type_t v112 = (char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t RecordContextVMa = _s22GuestModeUnlockPairingV32HandlePairingCreateRecordContextVMa(0);
  __chkstk_darwin(RecordContextVMa);
  unint64_t v116 = (uint64_t *)((char *)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_10000A844(&qword_10097BDF0);
  __chkstk_darwin(v8 - 8);
  uint64_t v132 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t SecretContextVMa = _s22GuestModeUnlockPairingV32HandlePairingCreateSecretContextVMa(0);
  uint64_t v114 = *(void *)(SecretContextVMa - 8);
  uint64_t v10 = __chkstk_darwin(SecretContextVMa);
  uint64_t v110 = (uint64_t)&v105 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v109 = (uint64_t)&v105 - v13;
  __chkstk_darwin(v12);
  uint64_t v119 = (uint64_t *)((char *)&v105 - v14);
  uint64_t v15 = sub_10000A844(&qword_10097BDF8);
  __chkstk_darwin(v15 - 8);
  uint64_t v131 = (char *)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = _s22GuestModeUnlockPairingV28HandlePairingResponseContextVMa(0);
  uint64_t v118 = *(void *)(v120 - 8);
  uint64_t v17 = __chkstk_darwin(v120);
  uint64_t v115 = (uint64_t)&v105 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  int v113 = (char *)&v105 - v20;
  __chkstk_darwin(v19);
  id v123 = (uint64_t *)((char *)&v105 - v21);
  uint64_t v22 = sub_10000A844(&qword_10097BE00);
  __chkstk_darwin(v22 - 8);
  uint64_t v130 = (char *)&v105 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = _s22GuestModeUnlockPairingV18InitialLockContextVMa(0);
  uint64_t v128 = *(void *)(v24 - 8);
  uint64_t v129 = v24;
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v121 = (uint64_t)&v105 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  int v127 = (char *)&v105 - v27;
  uint64_t v125 = _s22GuestModeUnlockPairingV27HandlePairingRequestContextVMa(0);
  uint64_t v122 = *(void *)(v125 - 8);
  uint64_t v28 = __chkstk_darwin(v125);
  uint64_t v30 = (char *)&v105 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v33 = (char *)&v105 - v32;
  __chkstk_darwin(v31);
  uint64_t v35 = (uint64_t *)((char *)&v105 - v34);
  uint64_t v36 = sub_10000A844(&qword_10097BE08);
  __chkstk_darwin(v36 - 8);
  uint64_t v38 = (char *)&v105 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = _s22GuestModeUnlockPairingV17InitialKeyContextVMa(0);
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v43 = (char *)&v105 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v45 = (char *)&v105 - v44;
  uint64_t v133 = a1;
  sub_100278C8C(a1, (uint64_t)v135);
  sub_10000A844(&qword_100977940);
  sub_10000B740(0, &qword_10097BE10);
  if (swift_dynamicCast())
  {
    uint64_t v46 = v136;
    sub_100278C8C(v134, (uint64_t)v135);
    sub_10000A844(&qword_10096BDF0);
    int v47 = swift_dynamicCast();
    uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
    if (v47)
    {
      v48(v38, 0, 1, v39);
      sub_1005FDD10((uint64_t)v38, (uint64_t)v45, _s22GuestModeUnlockPairingV17InitialKeyContextVMa);
      sub_1005FDC48((uint64_t)v45, (uint64_t)v43, _s22GuestModeUnlockPairingV17InitialKeyContextVMa);
      id v49 = v46;
      uint64_t v50 = v126;
      sub_1005F750C(v49, (uint64_t)v43, v35);
      if (v50)
      {
        uint64_t v51 = _s22GuestModeUnlockPairingV17InitialKeyContextVMa;
LABEL_19:
        uint64_t v81 = v51;
        uint64_t v82 = (uint64_t)v45;
LABEL_20:
        sub_1005FDCB0(v82, v81);

        return;
      }
      uint64_t v83 = v124;
      v124[3] = v125;
      v83[4] = (uint64_t)&off_1008E2190;
      unint64_t v84 = sub_100278AE4(v83);
      sub_1005FDD10((uint64_t)v35, (uint64_t)v84, _s22GuestModeUnlockPairingV27HandlePairingRequestContextVMa);

      uint64_t v85 = _s22GuestModeUnlockPairingV17InitialKeyContextVMa;
      goto LABEL_34;
    }
    v48(v38, 1, 1, v39);
    sub_10000A7E8((uint64_t)v38, &qword_10097BE08);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v65 = 10;
    unint64_t v66 = 0xD000000000000046;
    uint64_t v67 = "Invalid previous context as InitialKeyContext, message may be replayed";
LABEL_32:
    *(void *)(v65 + 8) = v66;
    *(void *)(v65 + 16) = (unint64_t)(v67 - 32) | 0x8000000000000000;
    swift_willThrow();

    return;
  }
  uint64_t v53 = v128;
  uint64_t v52 = v129;
  uint64_t v106 = v30;
  uint64_t v54 = (uint64_t)v130;
  uint64_t v55 = (uint64_t)v127;
  unint64_t v105 = v33;
  uint64_t v56 = (uint64_t)v131;
  uint64_t v57 = (uint64_t)v132;
  uint64_t v58 = v134;
  sub_100278C8C(v133, (uint64_t)v135);
  sub_10000B740(0, &qword_100979080);
  if (swift_dynamicCast())
  {
    uint64_t v46 = v136;
    sub_100278C8C(v58, (uint64_t)v135);
    sub_10000A844(&qword_10096BDF0);
    int v59 = swift_dynamicCast();
    uint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56);
    if (v59)
    {
      v60(v54, 0, 1, v52);
      uint64_t v45 = (char *)v55;
      sub_1005FDD10(v54, v55, _s22GuestModeUnlockPairingV18InitialLockContextVMa);
      uint64_t v61 = v55;
      uint64_t v62 = v121;
      sub_1005FDC48(v61, v121, _s22GuestModeUnlockPairingV18InitialLockContextVMa);
      id v49 = v46;
      unint64_t v63 = v123;
      uint64_t v64 = v126;
      sub_1005F7A88(v49, v62, v123);
      if (v64)
      {
        uint64_t v51 = _s22GuestModeUnlockPairingV18InitialLockContextVMa;
        goto LABEL_19;
      }
      uint64_t v94 = v124;
      v124[3] = v120;
      v94[4] = (uint64_t)&off_1008E21A8;
      uint64_t v95 = sub_100278AE4(v94);
      sub_1005FDD10((uint64_t)v63, (uint64_t)v95, _s22GuestModeUnlockPairingV28HandlePairingResponseContextVMa);

      uint64_t v85 = _s22GuestModeUnlockPairingV18InitialLockContextVMa;
      goto LABEL_34;
    }
    v60(v54, 1, 1, v52);
    sub_10000A7E8(v54, &qword_10097BE00);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v65 = 10;
    unint64_t v66 = 0xD000000000000047;
    uint64_t v67 = "Invalid previous context as InitialLockContext, message may be replayed";
    goto LABEL_32;
  }
  sub_100278C8C(v133, (uint64_t)v135);
  sub_10000B740(0, &qword_100979088);
  if (swift_dynamicCast())
  {
    uint64_t v46 = v136;
    sub_100278C8C(v58, (uint64_t)v135);
    sub_10000A844(&qword_10096BDF0);
    uint64_t v68 = v125;
    int v69 = swift_dynamicCast();
    uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v122 + 56);
    if (!v69)
    {
      v70(v56, 1, 1, v68);
      sub_10000A7E8(v56, &qword_10097BDF8);
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v65 = 10;
      unint64_t v66 = 0xD000000000000050;
      uint64_t v67 = "Invalid previous context as HandlePairingRequestContext, message may be replayed";
      goto LABEL_32;
    }
    v70(v56, 0, 1, v68);
    uint64_t v71 = v56;
    uint64_t v45 = v105;
    sub_1005FDD10(v71, (uint64_t)v105, _s22GuestModeUnlockPairingV27HandlePairingRequestContextVMa);
    uint64_t v72 = (uint64_t)v106;
    sub_1005FDC48((uint64_t)v45, (uint64_t)v106, _s22GuestModeUnlockPairingV27HandlePairingRequestContextVMa);
    id v49 = v46;
    uint64_t v73 = v119;
    uint64_t v74 = v126;
    sub_1005F7FCC(v49, v72, v119);
    if (v74)
    {
      uint64_t v51 = _s22GuestModeUnlockPairingV27HandlePairingRequestContextVMa;
      goto LABEL_19;
    }
    unint64_t v97 = v124;
    v124[3] = SecretContextVMa;
    v97[4] = (uint64_t)&off_1008E21C0;
    unint64_t v98 = sub_100278AE4(v97);
    sub_1005FDD10((uint64_t)v73, (uint64_t)v98, _s22GuestModeUnlockPairingV32HandlePairingCreateSecretContextVMa);

    uint64_t v85 = _s22GuestModeUnlockPairingV27HandlePairingRequestContextVMa;
  }
  else
  {
    sub_100278C8C(v133, (uint64_t)v135);
    sub_10000B740(0, &qword_100979090);
    if (!swift_dynamicCast())
    {
      sub_100278C8C(v133, (uint64_t)v135);
      sub_10000B740(0, &qword_10096BDE8);
      if (!swift_dynamicCast())
      {
        sub_10024D280();
        swift_allocError();
        *(_DWORD *)uint64_t v96 = 10;
        *(void *)(v96 + 8) = 0xD00000000000003ALL;
        *(void *)(v96 + 16) = 0x80000001007C3FE0;
        swift_willThrow();
        return;
      }
      uint64_t v46 = v136;
      sub_100278C8C(v58, (uint64_t)v135);
      sub_10000A844(&qword_10096BDF0);
      uint64_t v86 = (uint64_t)v112;
      uint64_t v87 = SecretContextVMa;
      int v88 = swift_dynamicCast();
      uint64_t v89 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v114 + 56);
      if (v88)
      {
        v89(v86, 0, 1, v87);
        uint64_t v90 = v109;
        sub_1005FDD10(v86, v109, _s22GuestModeUnlockPairingV32HandlePairingCreateSecretContextVMa);
        uint64_t v91 = v110;
        sub_1005FDC48(v90, v110, _s22GuestModeUnlockPairingV32HandlePairingCreateSecretContextVMa);
        id v49 = v46;
        uint64_t v92 = v111;
        uint64_t v93 = v126;
        sub_1005F8D18(v49, v91, v111);
        if (v93)
        {
          uint64_t v81 = _s22GuestModeUnlockPairingV32HandlePairingCreateSecretContextVMa;
          uint64_t v82 = v90;
          goto LABEL_20;
        }
        uint64_t v103 = v124;
        v124[3] = v107;
        v103[4] = (uint64_t)&off_1008E21F0;
        uint64_t v104 = sub_100278AE4(v103);
        sub_1005FDD10((uint64_t)v92, (uint64_t)v104, _s22GuestModeUnlockPairingV25HandleConfirmationContextVMa);

        uint64_t v101 = _s22GuestModeUnlockPairingV32HandlePairingCreateSecretContextVMa;
        uint64_t v102 = v90;
        goto LABEL_35;
      }
      v89(v86, 1, 1, v87);
      sub_10000A7E8(v86, &qword_10097BDE8);
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v65 = 10;
      unint64_t v66 = 0xD000000000000055;
      uint64_t v67 = "Invalid previous context as HandlePairingCreateSecretContext, message may be replayed";
      goto LABEL_32;
    }
    uint64_t v46 = v136;
    sub_100278C8C(v58, (uint64_t)v135);
    sub_10000A844(&qword_10096BDF0);
    uint64_t v75 = v120;
    int v76 = swift_dynamicCast();
    int v77 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v118 + 56);
    if (!v76)
    {
      v77(v57, 1, 1, v75);
      sub_10000A7E8(v57, &qword_10097BDF0);
      sub_10024D280();
      swift_allocError();
      *(_DWORD *)uint64_t v65 = 10;
      unint64_t v66 = 0xD000000000000051;
      uint64_t v67 = "Invalid previous context as HandlePairingResponseContext, message may be replayed";
      goto LABEL_32;
    }
    v77(v57, 0, 1, v75);
    uint64_t v45 = v113;
    sub_1005FDD10(v57, (uint64_t)v113, _s22GuestModeUnlockPairingV28HandlePairingResponseContextVMa);
    uint64_t v78 = v115;
    sub_1005FDC48((uint64_t)v45, v115, _s22GuestModeUnlockPairingV28HandlePairingResponseContextVMa);
    id v49 = v46;
    unsigned int v79 = v116;
    uint64_t v80 = v126;
    sub_1005F8684(v49, v78, v116);
    if (v80)
    {
      uint64_t v51 = _s22GuestModeUnlockPairingV28HandlePairingResponseContextVMa;
      goto LABEL_19;
    }
    uint64_t v99 = v124;
    v124[3] = RecordContextVMa;
    v99[4] = (uint64_t)&off_1008E21D8;
    uint64_t v100 = sub_100278AE4(v99);
    sub_1005FDD10((uint64_t)v79, (uint64_t)v100, _s22GuestModeUnlockPairingV32HandlePairingCreateRecordContextVMa);

    uint64_t v85 = _s22GuestModeUnlockPairingV28HandlePairingResponseContextVMa;
  }
LABEL_34:
  uint64_t v101 = v85;
  uint64_t v102 = (uint64_t)v45;
LABEL_35:
  sub_1005FDCB0(v102, v101);
}

uint64_t sub_1005FA328@<X0>(uint64_t a1@<X8>)
{
  return sub_1005FDC48(v1, a1, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
}

void sub_1005FA35C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

uint64_t _s22GuestModeUnlockPairingV4FlowVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10097BC20);
}

uint64_t sub_1005FA394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005FA3A8);
}

uint64_t sub_1005FA3A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SDAuthenticationCommonOperationInput();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1005FA46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005FA480);
}

uint64_t sub_1005FA480(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SDAuthenticationCommonOperationInput();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1005FA540()
{
  uint64_t result = type metadata accessor for SDAuthenticationCommonOperationInput();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1005FA5E4(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a1;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    unint64_t v84 = a3;
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v15 = v14[5];
    uint64_t v16 = &v8[v15];
    uint64_t v17 = &v9[v15];
    if (v12(&v9[v15], 1, v10))
    {
      uint64_t v18 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v17, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
    }
    uint64_t v19 = v14[6];
    uint64_t v20 = &v8[v19];
    uint64_t v21 = &v9[v19];
    if (v12(&v9[v19], 1, v10))
    {
      uint64_t v22 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v20, v21, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
    }
    uint64_t v23 = v14[7];
    uint64_t v24 = &v8[v23];
    uint64_t v25 = &v9[v23];
    if (v12(&v9[v23], 1, v10))
    {
      uint64_t v26 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v24, v25, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v24, 0, 1, v10);
    }
    uint64_t v27 = v14[8];
    uint64_t v28 = &v8[v27];
    uint64_t v29 = &v9[v27];
    if (v12(&v9[v27], 1, v10))
    {
      uint64_t v30 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v28, v29, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v28, 0, 1, v10);
    }
    uint64_t v31 = v14[9];
    uint64_t v32 = &v8[v31];
    uint64_t v33 = &v9[v31];
    if (v12(&v9[v31], 1, v10))
    {
      uint64_t v34 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v32, v33, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v32, 0, 1, v10);
    }
    uint64_t v35 = v14[10];
    uint64_t v36 = &v8[v35];
    uint64_t v37 = &v9[v35];
    if (v12(&v9[v35], 1, v10))
    {
      uint64_t v38 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v36, v37, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v36, 0, 1, v10);
    }
    uint64_t v39 = v14[11];
    uint64_t v40 = &v8[v39];
    uint64_t v41 = &v9[v39];
    if (v12(&v9[v39], 1, v10))
    {
      uint64_t v42 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v40, v41, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v40, 0, 1, v10);
    }
    uint64_t v43 = v14[12];
    uint64_t v44 = &v8[v43];
    uint64_t v45 = &v9[v43];
    if (v12(&v9[v43], 1, v10))
    {
      uint64_t v46 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v44, v45, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v44, 0, 1, v10);
    }
    v8[v14[13]] = v9[v14[13]];
    uint64_t v47 = v14[14];
    uint64_t v48 = &v8[v47];
    id v49 = &v9[v47];
    if (v12(&v9[v47], 1, v10))
    {
      uint64_t v50 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v48, v49, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v48, 0, 1, v10);
    }
    uint64_t v51 = v14[15];
    uint64_t v52 = &v8[v51];
    uint64_t v53 = &v9[v51];
    if (v12(&v9[v51], 1, v10))
    {
      uint64_t v54 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v52, v53, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v52, 0, 1, v10);
    }
    uint64_t v55 = v14[16];
    uint64_t v56 = &v8[v55];
    uint64_t v57 = &v9[v55];
    if (v12(&v9[v55], 1, v10))
    {
      uint64_t v58 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v56, v57, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v56, 0, 1, v10);
    }
    uint64_t v59 = v14[17];
    uint64_t v60 = &v8[v59];
    uint64_t v61 = &v9[v59];
    if (v12(&v9[v59], 1, v10))
    {
      uint64_t v62 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v60, v61, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v60, 0, 1, v10);
    }
    uint64_t v63 = v14[18];
    uint64_t v64 = &v8[v63];
    uint64_t v65 = &v9[v63];
    *(_DWORD *)uint64_t v64 = *(_DWORD *)v65;
    v64[4] = v65[4];
    v8[v14[19]] = v9[v14[19]];
    uint64_t v66 = v14[20];
    uint64_t v67 = &v8[v66];
    uint64_t v68 = &v9[v66];
    uint64_t v69 = *((void *)v68 + 1);
    *(void *)uint64_t v67 = *(void *)v68;
    *((void *)v67 + 1) = v69;
    uint64_t v70 = v14[21];
    uint64_t v71 = &v8[v70];
    uint64_t v72 = &v9[v70];
    uint64_t v73 = *((void *)v72 + 1);
    *(void *)uint64_t v71 = *(void *)v72;
    *((void *)v71 + 1) = v73;
    uint64_t v74 = v84[6];
    uint64_t v75 = (char *)v6 + v74;
    int v76 = (void *)((char *)a2 + v74);
    unint64_t v77 = *(void *)((char *)a2 + v74 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v77 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
    }
    else
    {
      uint64_t v78 = *v76;
      sub_10025ADCC(*v76, v77);
      *(void *)uint64_t v75 = v78;
      *((void *)v75 + 1) = v77;
    }
    uint64_t v79 = v84[7];
    uint64_t v80 = v84[8];
    uint64_t v81 = *(void **)((char *)a2 + v79);
    *(void *)((char *)v6 + v79) = v81;
    *((unsigned char *)v6 + v80) = *((unsigned char *)a2 + v80);
    id v82 = v81;
  }
  return v6;
}

void sub_1005FAFA0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v9 = v4 + v8[5];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = v4 + v8[6];
  if (!v7(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = v4 + v8[7];
  if (!v7(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = v4 + v8[8];
  if (!v7(v12, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  }
  uint64_t v13 = v4 + v8[9];
  if (!v7(v13, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v5);
  }
  uint64_t v14 = v4 + v8[10];
  if (!v7(v14, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = v4 + v8[11];
  if (!v7(v15, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = v4 + v8[12];
  if (!v7(v16, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = v4 + v8[14];
  if (!v7(v17, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = v4 + v8[15];
  if (!v7(v18, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, v5);
  }
  uint64_t v19 = v4 + v8[16];
  if (!v7(v19, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = v4 + v8[17];
  if (!v7(v20, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v20, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = (uint64_t *)(a1 + a2[6]);
  unint64_t v22 = v21[1];
  if (v22 >> 60 != 15) {
    sub_100250CC4(*v21, v22);
  }
  uint64_t v23 = *(void **)(a1 + a2[7]);
}

void *sub_1005FB3CC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v4 = a3[5];
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  unint64_t v22 = &v6[v20];
  if (v9(&v6[v20], 1, v7))
  {
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
  }
  uint64_t v24 = v11[8];
  uint64_t v25 = &v5[v24];
  uint64_t v26 = &v6[v24];
  if (v9(&v6[v24], 1, v7))
  {
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v9(&v6[v28], 1, v7))
  {
    uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
  }
  uint64_t v32 = v11[10];
  uint64_t v33 = &v5[v32];
  uint64_t v34 = &v6[v32];
  if (v9(&v6[v32], 1, v7))
  {
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
  }
  uint64_t v36 = v11[11];
  uint64_t v37 = &v5[v36];
  uint64_t v38 = &v6[v36];
  if (v9(&v6[v36], 1, v7))
  {
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
  }
  uint64_t v40 = v11[12];
  uint64_t v41 = &v5[v40];
  uint64_t v42 = &v6[v40];
  if (v9(&v6[v40], 1, v7))
  {
    uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
  }
  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  uint64_t v45 = &v5[v44];
  uint64_t v46 = &v6[v44];
  if (v9(&v6[v44], 1, v7))
  {
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
  }
  uint64_t v48 = v11[15];
  id v49 = &v5[v48];
  uint64_t v50 = &v6[v48];
  if (v9(&v6[v48], 1, v7))
  {
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
  }
  uint64_t v52 = v11[16];
  uint64_t v53 = &v5[v52];
  uint64_t v54 = &v6[v52];
  if (v9(&v6[v52], 1, v7))
  {
    uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v7);
  }
  uint64_t v56 = v11[17];
  uint64_t v57 = &v5[v56];
  uint64_t v58 = &v6[v56];
  if (v9(&v6[v56], 1, v7))
  {
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0, 1, v7);
  }
  uint64_t v60 = v11[18];
  uint64_t v61 = &v5[v60];
  uint64_t v62 = &v6[v60];
  *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  v5[v11[19]] = v6[v11[19]];
  uint64_t v63 = v11[20];
  uint64_t v64 = &v5[v63];
  uint64_t v65 = &v6[v63];
  uint64_t v66 = *((void *)v65 + 1);
  *(void *)uint64_t v64 = *(void *)v65;
  *((void *)v64 + 1) = v66;
  uint64_t v67 = v11[21];
  uint64_t v68 = &v5[v67];
  uint64_t v69 = &v6[v67];
  uint64_t v70 = *((void *)v69 + 1);
  *(void *)uint64_t v68 = *(void *)v69;
  *((void *)v68 + 1) = v70;
  uint64_t v71 = a3[6];
  uint64_t v72 = (char *)a1 + v71;
  uint64_t v73 = (void *)((char *)a2 + v71);
  unint64_t v74 = *(void *)((char *)a2 + v71 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v74 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v72 = *(_OWORD *)v73;
  }
  else
  {
    uint64_t v75 = *v73;
    sub_10025ADCC(*v73, v74);
    *(void *)uint64_t v72 = v75;
    *((void *)v72 + 1) = v74;
  }
  uint64_t v76 = a3[7];
  uint64_t v77 = a3[8];
  uint64_t v78 = *(void **)((char *)a2 + v76);
  *(void *)((char *)a1 + v76) = v78;
  *((unsigned char *)a1 + v77) = *((unsigned char *)a2 + v77);
  id v79 = v78;
  return a1;
}

void *sub_1005FBD20(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  os_log_type_t v112 = a3;
  int v113 = a2;
  uint64_t v6 = a3[5];
  uint64_t v114 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  uint64_t v83 = &v7[v82];
  unint64_t v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (v85)
  {
    uint64_t v87 = v113;
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v83, v84, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  uint64_t v87 = v113;
  if (v86)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
LABEL_78:
    uint64_t v88 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v88 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v83, v84, v9);
LABEL_79:
  uint64_t v89 = v15[18];
  uint64_t v90 = &v7[v89];
  uint64_t v91 = &v8[v89];
  int v92 = *(_DWORD *)v91;
  v90[4] = v91[4];
  *(_DWORD *)uint64_t v90 = v92;
  v7[v15[19]] = v8[v15[19]];
  uint64_t v93 = v15[20];
  uint64_t v94 = &v7[v93];
  uint64_t v95 = &v8[v93];
  *(void *)uint64_t v94 = *(void *)v95;
  *((void *)v94 + 1) = *((void *)v95 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v96 = v15[21];
  unint64_t v97 = &v7[v96];
  unint64_t v98 = &v8[v96];
  *(void *)unint64_t v97 = *(void *)v98;
  *((void *)v97 + 1) = *((void *)v98 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v99 = v112[6];
  uint64_t v100 = (void *)((char *)v114 + v99);
  uint64_t v101 = (void *)((char *)v87 + v99);
  unint64_t v102 = *(void *)((char *)v87 + v99 + 8);
  if (*(void *)((char *)v114 + v99 + 8) >> 60 != 15)
  {
    if (v102 >> 60 != 15)
    {
      uint64_t v104 = *v101;
      sub_10025ADCC(*v101, v102);
      uint64_t v105 = *v100;
      unint64_t v106 = v100[1];
      *uint64_t v100 = v104;
      v100[1] = v102;
      sub_100250CC4(v105, v106);
      goto LABEL_86;
    }
    sub_10026F904((uint64_t)v100);
    goto LABEL_84;
  }
  if (v102 >> 60 == 15)
  {
LABEL_84:
    *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
    goto LABEL_86;
  }
  uint64_t v103 = *v101;
  sub_10025ADCC(*v101, v102);
  *uint64_t v100 = v103;
  v100[1] = v102;
LABEL_86:
  uint64_t v107 = v112[7];
  uint64_t v108 = *(void **)((char *)v114 + v107);
  uint64_t v109 = *(void **)((char *)v87 + v107);
  *(void *)((char *)v114 + v107) = v109;
  id v110 = v109;

  *((unsigned char *)v114 + v112[8]) = *((unsigned char *)v87 + v112[8]);
  return v114;
}

void *sub_1005FCBE4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v111 = a3;
  os_log_type_t v112 = a2;
  uint64_t v6 = a3[5];
  int v113 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  uint64_t v83 = &v7[v82];
  unint64_t v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (v85)
  {
    uint64_t v87 = v112;
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v83, v84, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  uint64_t v87 = v112;
  if (v86)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
LABEL_78:
    uint64_t v88 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v88 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v83, v84, v9);
LABEL_79:
  uint64_t v89 = v15[18];
  uint64_t v90 = &v7[v89];
  uint64_t v91 = &v8[v89];
  *(_DWORD *)uint64_t v90 = *(_DWORD *)v91;
  v90[4] = v91[4];
  v7[v15[19]] = v8[v15[19]];
  uint64_t v92 = v15[20];
  uint64_t v93 = &v7[v92];
  uint64_t v94 = &v8[v92];
  uint64_t v96 = *(void *)v94;
  uint64_t v95 = *((void *)v94 + 1);
  *(void *)uint64_t v93 = v96;
  *((void *)v93 + 1) = v95;
  swift_bridgeObjectRelease();
  uint64_t v97 = v15[21];
  unint64_t v98 = &v7[v97];
  uint64_t v99 = &v8[v97];
  uint64_t v101 = *(void *)v99;
  uint64_t v100 = *((void *)v99 + 1);
  *(void *)unint64_t v98 = v101;
  *((void *)v98 + 1) = v100;
  swift_bridgeObjectRelease();
  uint64_t v102 = v111[6];
  uint64_t v103 = (void *)((char *)v113 + v102);
  uint64_t v104 = (void *)((char *)v87 + v102);
  unint64_t v105 = *(void *)((char *)v113 + v102 + 8);
  if (v105 >> 60 != 15)
  {
    unint64_t v106 = v104[1];
    if (v106 >> 60 != 15)
    {
      uint64_t v107 = *v103;
      *uint64_t v103 = *v104;
      v103[1] = v106;
      sub_100250CC4(v107, v105);
      goto LABEL_84;
    }
    sub_10026F904((uint64_t)v103);
  }
  *(_OWORD *)uint64_t v103 = *(_OWORD *)v104;
LABEL_84:
  uint64_t v108 = v111[7];
  uint64_t v109 = *(void **)((char *)v113 + v108);
  *(void *)((char *)v113 + v108) = *(void *)((char *)v87 + v108);

  *((unsigned char *)v113 + v111[8]) = *((unsigned char *)v87 + v111[8]);
  return v113;
}

uint64_t sub_1005FDA4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005FDA60);
}

uint64_t sub_1005FDA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005FDA78);
}

uint64_t _s22GuestModeUnlockPairingV18InitialLockContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10097BCB8);
}

uint64_t sub_1005FDA9C()
{
  return sub_100605C70();
}

uint64_t sub_1005FDAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005FDABC);
}

uint64_t sub_1005FDAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005FDAD4);
}

uint64_t _s22GuestModeUnlockPairingV17InitialKeyContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10097BD58);
}

uint64_t sub_1005FDAF8()
{
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s22GuestModeUnlockPairingV25HandleConfirmationContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10097C0F8);
}

uint64_t _s22GuestModeUnlockPairingV32HandlePairingCreateRecordContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10097BFB8);
}

uint64_t _s22GuestModeUnlockPairingV32HandlePairingCreateSecretContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10097C058);
}

uint64_t _s22GuestModeUnlockPairingV28HandlePairingResponseContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10097BF10);
}

uint64_t _s22GuestModeUnlockPairingV27HandlePairingRequestContextVMa(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10097BE70);
}

uint64_t sub_1005FDC48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005FDCB0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005FDD10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005FDD78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005FDD8C);
}

uint64_t sub_1005FDD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005FDDA4);
}

uint64_t sub_1005FDDA8()
{
  return sub_100605C70();
}

void *sub_1005FDDB4(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a1;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void *)(v10 - 8);
    int v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    uint64_t v94 = a3;
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v15 = v14[5];
    uint64_t v16 = &v8[v15];
    uint64_t v17 = &v9[v15];
    if (v12(&v9[v15], 1, v10))
    {
      uint64_t v18 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v17, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
    }
    uint64_t v19 = v14[6];
    int v20 = &v8[v19];
    uint64_t v21 = &v9[v19];
    if (v12(&v9[v19], 1, v10))
    {
      uint64_t v22 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v20, v21, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
    }
    uint64_t v23 = v14[7];
    uint64_t v24 = &v8[v23];
    int v25 = &v9[v23];
    if (v12(&v9[v23], 1, v10))
    {
      uint64_t v26 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v24, v25, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v24, 0, 1, v10);
    }
    uint64_t v27 = v14[8];
    uint64_t v28 = &v8[v27];
    uint64_t v29 = &v9[v27];
    if (v12(&v9[v27], 1, v10))
    {
      uint64_t v30 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v28, v29, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v28, 0, 1, v10);
    }
    uint64_t v31 = v14[9];
    int v32 = &v8[v31];
    uint64_t v33 = &v9[v31];
    if (v12(&v9[v31], 1, v10))
    {
      uint64_t v34 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v32, v33, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v32, 0, 1, v10);
    }
    uint64_t v35 = v14[10];
    uint64_t v36 = &v8[v35];
    int v37 = &v9[v35];
    if (v12(&v9[v35], 1, v10))
    {
      uint64_t v38 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v36, v37, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v36, 0, 1, v10);
    }
    uint64_t v39 = v14[11];
    uint64_t v40 = &v8[v39];
    uint64_t v41 = &v9[v39];
    if (v12(&v9[v39], 1, v10))
    {
      uint64_t v42 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v40, v41, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v40, 0, 1, v10);
    }
    uint64_t v43 = v14[12];
    int v44 = &v8[v43];
    uint64_t v45 = &v9[v43];
    if (v12(&v9[v43], 1, v10))
    {
      uint64_t v46 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v44, v45, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v44, 0, 1, v10);
    }
    v8[v14[13]] = v9[v14[13]];
    uint64_t v47 = v14[14];
    uint64_t v48 = &v8[v47];
    int v49 = &v9[v47];
    if (v12(&v9[v47], 1, v10))
    {
      uint64_t v50 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v48, v49, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v48, 0, 1, v10);
    }
    uint64_t v51 = v14[15];
    uint64_t v52 = &v8[v51];
    uint64_t v53 = &v9[v51];
    if (v12(&v9[v51], 1, v10))
    {
      uint64_t v54 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v52, v53, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v52, 0, 1, v10);
    }
    uint64_t v55 = v14[16];
    int v56 = &v8[v55];
    uint64_t v57 = &v9[v55];
    if (v12(&v9[v55], 1, v10))
    {
      uint64_t v58 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v56, v57, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v56, 0, 1, v10);
    }
    uint64_t v59 = v14[17];
    uint64_t v60 = &v8[v59];
    int v61 = &v9[v59];
    if (v12(&v9[v59], 1, v10))
    {
      uint64_t v62 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v60, v61, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v60, 0, 1, v10);
    }
    uint64_t v63 = v14[18];
    uint64_t v64 = &v8[v63];
    uint64_t v65 = &v9[v63];
    *(_DWORD *)uint64_t v64 = *(_DWORD *)v65;
    v64[4] = v65[4];
    v8[v14[19]] = v9[v14[19]];
    uint64_t v66 = v14[20];
    int v67 = &v8[v66];
    int v68 = &v9[v66];
    uint64_t v69 = *((void *)v68 + 1);
    *(void *)int v67 = *(void *)v68;
    *((void *)v67 + 1) = v69;
    uint64_t v70 = v14[21];
    uint64_t v71 = &v8[v70];
    uint64_t v72 = &v9[v70];
    uint64_t v73 = *((void *)v72 + 1);
    *(void *)uint64_t v71 = *(void *)v72;
    *((void *)v71 + 1) = v73;
    uint64_t v74 = v94[6];
    uint64_t v75 = (char *)v6 + v74;
    uint64_t v76 = (void *)((char *)a2 + v74);
    unint64_t v77 = *(void *)((char *)a2 + v74 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v77 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
    }
    else
    {
      uint64_t v78 = *v76;
      sub_10025ADCC(*v76, v77);
      *(void *)uint64_t v75 = v78;
      *((void *)v75 + 1) = v77;
    }
    uint64_t v79 = v94[7];
    int v80 = (void *)((char *)v6 + v79);
    uint64_t v81 = (void *)((char *)a2 + v79);
    uint64_t v82 = *v81;
    unint64_t v83 = v81[1];
    sub_10025ADCC(*v81, v83);
    *int v80 = v82;
    v80[1] = v83;
    uint64_t v84 = v94[8];
    int v85 = (void *)((char *)v6 + v84);
    int v86 = (void *)((char *)a2 + v84);
    uint64_t v87 = *v86;
    unint64_t v88 = v86[1];
    sub_10025ADCC(*v86, v88);
    *int v85 = v87;
    v85[1] = v88;
    uint64_t v89 = v94[9];
    uint64_t v90 = v94[10];
    uint64_t v91 = *(void **)((char *)a2 + v89);
    *(void *)((char *)v6 + v89) = v91;
    *((unsigned char *)v6 + v90) = *((unsigned char *)a2 + v90);
    id v92 = v91;
  }
  return v6;
}

void sub_1005FE7B0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v9 = v4 + v8[5];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = v4 + v8[6];
  if (!v7(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = v4 + v8[7];
  if (!v7(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = v4 + v8[8];
  if (!v7(v12, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  }
  uint64_t v13 = v4 + v8[9];
  if (!v7(v13, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v5);
  }
  uint64_t v14 = v4 + v8[10];
  if (!v7(v14, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = v4 + v8[11];
  if (!v7(v15, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = v4 + v8[12];
  if (!v7(v16, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = v4 + v8[14];
  if (!v7(v17, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = v4 + v8[15];
  if (!v7(v18, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, v5);
  }
  uint64_t v19 = v4 + v8[16];
  if (!v7(v19, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = v4 + v8[17];
  if (!v7(v20, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v20, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = (uint64_t *)(a1 + a2[6]);
  unint64_t v22 = v21[1];
  if (v22 >> 60 != 15) {
    sub_100250CC4(*v21, v22);
  }
  sub_100250CC4(*(void *)(a1 + a2[7]), *(void *)(a1 + a2[7] + 8));
  sub_100250CC4(*(void *)(a1 + a2[8]), *(void *)(a1 + a2[8] + 8));
  uint64_t v23 = *(void **)(a1 + a2[9]);
}

void *sub_1005FEBFC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v4 = a3[5];
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  unint64_t v22 = &v6[v20];
  if (v9(&v6[v20], 1, v7))
  {
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
  }
  uint64_t v24 = v11[8];
  int v25 = &v5[v24];
  uint64_t v26 = &v6[v24];
  if (v9(&v6[v24], 1, v7))
  {
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v9(&v6[v28], 1, v7))
  {
    uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
  }
  uint64_t v32 = v11[10];
  uint64_t v33 = &v5[v32];
  uint64_t v34 = &v6[v32];
  if (v9(&v6[v32], 1, v7))
  {
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
  }
  uint64_t v36 = v11[11];
  int v37 = &v5[v36];
  uint64_t v38 = &v6[v36];
  if (v9(&v6[v36], 1, v7))
  {
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
  }
  uint64_t v40 = v11[12];
  uint64_t v41 = &v5[v40];
  uint64_t v42 = &v6[v40];
  if (v9(&v6[v40], 1, v7))
  {
    uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
  }
  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  uint64_t v45 = &v5[v44];
  uint64_t v46 = &v6[v44];
  if (v9(&v6[v44], 1, v7))
  {
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
  }
  uint64_t v48 = v11[15];
  int v49 = &v5[v48];
  uint64_t v50 = &v6[v48];
  if (v9(&v6[v48], 1, v7))
  {
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
  }
  uint64_t v52 = v11[16];
  uint64_t v53 = &v5[v52];
  uint64_t v54 = &v6[v52];
  if (v9(&v6[v52], 1, v7))
  {
    uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v7);
  }
  uint64_t v56 = v11[17];
  uint64_t v57 = &v5[v56];
  uint64_t v58 = &v6[v56];
  if (v9(&v6[v56], 1, v7))
  {
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0, 1, v7);
  }
  uint64_t v60 = v11[18];
  int v61 = &v5[v60];
  uint64_t v62 = &v6[v60];
  *(_DWORD *)int v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  v5[v11[19]] = v6[v11[19]];
  uint64_t v63 = v11[20];
  uint64_t v64 = &v5[v63];
  uint64_t v65 = &v6[v63];
  uint64_t v66 = *((void *)v65 + 1);
  *(void *)uint64_t v64 = *(void *)v65;
  *((void *)v64 + 1) = v66;
  uint64_t v67 = v11[21];
  int v68 = &v5[v67];
  uint64_t v69 = &v6[v67];
  uint64_t v70 = *((void *)v69 + 1);
  *(void *)int v68 = *(void *)v69;
  *((void *)v68 + 1) = v70;
  uint64_t v71 = a3[6];
  uint64_t v72 = (char *)a1 + v71;
  uint64_t v73 = (void *)((char *)a2 + v71);
  unint64_t v74 = *(void *)((char *)a2 + v71 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v74 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v72 = *(_OWORD *)v73;
  }
  else
  {
    uint64_t v75 = *v73;
    sub_10025ADCC(*v73, v74);
    *(void *)uint64_t v72 = v75;
    *((void *)v72 + 1) = v74;
  }
  uint64_t v76 = a3[7];
  unint64_t v77 = (void *)((char *)a1 + v76);
  uint64_t v78 = (void *)((char *)a2 + v76);
  uint64_t v79 = *v78;
  unint64_t v80 = v78[1];
  sub_10025ADCC(*v78, v80);
  *unint64_t v77 = v79;
  v77[1] = v80;
  uint64_t v81 = a3[8];
  uint64_t v82 = (void *)((char *)a1 + v81);
  unint64_t v83 = (void *)((char *)a2 + v81);
  uint64_t v84 = *v83;
  unint64_t v85 = v83[1];
  sub_10025ADCC(*v83, v85);
  *uint64_t v82 = v84;
  v82[1] = v85;
  uint64_t v86 = a3[9];
  uint64_t v87 = a3[10];
  unint64_t v88 = *(void **)((char *)a2 + v86);
  *(void *)((char *)a1 + v86) = v88;
  *((unsigned char *)a1 + v87) = *((unsigned char *)a2 + v87);
  id v89 = v88;
  return a1;
}

void *sub_1005FF590(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v126 = a3;
  int v127 = a2;
  uint64_t v6 = a3[5];
  uint64_t v128 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  unint64_t v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  unint64_t v83 = &v7[v82];
  uint64_t v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (v85)
  {
    uint64_t v87 = v127;
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v83, v84, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  uint64_t v87 = v127;
  if (v86)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
LABEL_78:
    uint64_t v88 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v88 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v83, v84, v9);
LABEL_79:
  uint64_t v89 = v15[18];
  uint64_t v90 = &v7[v89];
  uint64_t v91 = &v8[v89];
  int v92 = *(_DWORD *)v91;
  v90[4] = v91[4];
  *(_DWORD *)uint64_t v90 = v92;
  v7[v15[19]] = v8[v15[19]];
  uint64_t v93 = v15[20];
  uint64_t v94 = &v7[v93];
  uint64_t v95 = &v8[v93];
  *(void *)uint64_t v94 = *(void *)v95;
  *((void *)v94 + 1) = *((void *)v95 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v96 = v15[21];
  uint64_t v97 = &v7[v96];
  unint64_t v98 = &v8[v96];
  *(void *)uint64_t v97 = *(void *)v98;
  *((void *)v97 + 1) = *((void *)v98 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v99 = v126[6];
  uint64_t v100 = (void *)((char *)v128 + v99);
  uint64_t v101 = (void *)((char *)v87 + v99);
  unint64_t v102 = *(void *)((char *)v87 + v99 + 8);
  if (*(void *)((char *)v128 + v99 + 8) >> 60 != 15)
  {
    if (v102 >> 60 != 15)
    {
      uint64_t v104 = *v101;
      sub_10025ADCC(*v101, v102);
      uint64_t v105 = *v100;
      unint64_t v106 = v100[1];
      *uint64_t v100 = v104;
      v100[1] = v102;
      sub_100250CC4(v105, v106);
      goto LABEL_86;
    }
    sub_10026F904((uint64_t)v100);
    goto LABEL_84;
  }
  if (v102 >> 60 == 15)
  {
LABEL_84:
    *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
    goto LABEL_86;
  }
  uint64_t v103 = *v101;
  sub_10025ADCC(*v101, v102);
  *uint64_t v100 = v103;
  v100[1] = v102;
LABEL_86:
  uint64_t v107 = v126[7];
  uint64_t v108 = (void *)((char *)v128 + v107);
  uint64_t v109 = (void *)((char *)v87 + v107);
  uint64_t v110 = *v109;
  unint64_t v111 = v109[1];
  sub_10025ADCC(*v109, v111);
  uint64_t v112 = *v108;
  unint64_t v113 = v108[1];
  *uint64_t v108 = v110;
  v108[1] = v111;
  sub_100250CC4(v112, v113);
  uint64_t v114 = v126[8];
  uint64_t v115 = (void *)((char *)v128 + v114);
  unint64_t v116 = (void *)((char *)v87 + v114);
  uint64_t v117 = *v116;
  unint64_t v118 = v116[1];
  sub_10025ADCC(*v116, v118);
  uint64_t v119 = *v115;
  unint64_t v120 = v115[1];
  *uint64_t v115 = v117;
  v115[1] = v118;
  sub_100250CC4(v119, v120);
  uint64_t v121 = v126[9];
  uint64_t v122 = *(void **)((char *)v128 + v121);
  id v123 = *(void **)((char *)v87 + v121);
  *(void *)((char *)v128 + v121) = v123;
  id v124 = v123;

  *((unsigned char *)v128 + v126[10]) = *((unsigned char *)v87 + v126[10]);
  return v128;
}

void *sub_1006004A4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v4 = a3[5];
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v12 = v11[5];
  int v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  uint64_t v22 = &v6[v20];
  if (v9(&v6[v20], 1, v7))
  {
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
  }
  uint64_t v24 = v11[8];
  int v25 = &v5[v24];
  int v26 = &v6[v24];
  if (v9(&v6[v24], 1, v7))
  {
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v9(&v6[v28], 1, v7))
  {
    uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
  }
  uint64_t v32 = v11[10];
  uint64_t v33 = &v5[v32];
  uint64_t v34 = &v6[v32];
  if (v9(&v6[v32], 1, v7))
  {
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
  }
  uint64_t v36 = v11[11];
  int v37 = &v5[v36];
  int v38 = &v6[v36];
  if (v9(&v6[v36], 1, v7))
  {
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
  }
  uint64_t v40 = v11[12];
  uint64_t v41 = &v5[v40];
  uint64_t v42 = &v6[v40];
  if (v9(&v6[v40], 1, v7))
  {
    uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
  }
  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  uint64_t v45 = &v5[v44];
  uint64_t v46 = &v6[v44];
  if (v9(&v6[v44], 1, v7))
  {
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
  }
  uint64_t v48 = v11[15];
  int v49 = &v5[v48];
  int v50 = &v6[v48];
  if (v9(&v6[v48], 1, v7))
  {
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
  }
  uint64_t v52 = v11[16];
  uint64_t v53 = &v5[v52];
  uint64_t v54 = &v6[v52];
  if (v9(&v6[v52], 1, v7))
  {
    uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v7);
  }
  uint64_t v56 = v11[17];
  uint64_t v57 = &v5[v56];
  uint64_t v58 = &v6[v56];
  if (v9(&v6[v56], 1, v7))
  {
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0, 1, v7);
  }
  uint64_t v60 = v11[18];
  int v61 = &v5[v60];
  int v62 = &v6[v60];
  *(_DWORD *)int v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  v5[v11[19]] = v6[v11[19]];
  *(_OWORD *)&v5[v11[20]] = *(_OWORD *)&v6[v11[20]];
  *(_OWORD *)&v5[v11[21]] = *(_OWORD *)&v6[v11[21]];
  uint64_t v63 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v63) = *(_OWORD *)((char *)a2 + v63);
  uint64_t v64 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v64) = *(void *)((char *)a2 + v64);
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  return a1;
}

void *sub_100600DB4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v117 = a3;
  unint64_t v118 = a2;
  uint64_t v6 = a3[5];
  uint64_t v119 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  unint64_t v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  unint64_t v83 = &v7[v82];
  uint64_t v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (v85)
  {
    uint64_t v87 = v118;
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v83, v84, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  uint64_t v87 = v118;
  if (v86)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
LABEL_78:
    uint64_t v88 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v88 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v83, v84, v9);
LABEL_79:
  uint64_t v89 = v15[18];
  uint64_t v90 = &v7[v89];
  uint64_t v91 = &v8[v89];
  *(_DWORD *)uint64_t v90 = *(_DWORD *)v91;
  v90[4] = v91[4];
  v7[v15[19]] = v8[v15[19]];
  uint64_t v92 = v15[20];
  uint64_t v93 = &v7[v92];
  uint64_t v94 = &v8[v92];
  uint64_t v96 = *(void *)v94;
  uint64_t v95 = *((void *)v94 + 1);
  *(void *)uint64_t v93 = v96;
  *((void *)v93 + 1) = v95;
  swift_bridgeObjectRelease();
  uint64_t v97 = v15[21];
  unint64_t v98 = &v7[v97];
  uint64_t v99 = &v8[v97];
  uint64_t v101 = *(void *)v99;
  uint64_t v100 = *((void *)v99 + 1);
  *(void *)unint64_t v98 = v101;
  *((void *)v98 + 1) = v100;
  swift_bridgeObjectRelease();
  uint64_t v102 = v117[6];
  uint64_t v103 = (void *)((char *)v119 + v102);
  uint64_t v104 = (void *)((char *)v87 + v102);
  unint64_t v105 = *(void *)((char *)v119 + v102 + 8);
  if (v105 >> 60 != 15)
  {
    unint64_t v106 = v104[1];
    if (v106 >> 60 != 15)
    {
      uint64_t v107 = *v103;
      *uint64_t v103 = *v104;
      v103[1] = v106;
      sub_100250CC4(v107, v105);
      goto LABEL_84;
    }
    sub_10026F904((uint64_t)v103);
  }
  *(_OWORD *)uint64_t v103 = *(_OWORD *)v104;
LABEL_84:
  uint64_t v108 = v117[7];
  uint64_t v109 = *(void *)((char *)v119 + v108);
  unint64_t v110 = *(void *)((char *)v119 + v108 + 8);
  *(_OWORD *)((char *)v119 + v108) = *(_OWORD *)((char *)v87 + v108);
  sub_100250CC4(v109, v110);
  uint64_t v111 = v117[8];
  uint64_t v112 = *(void *)((char *)v119 + v111);
  unint64_t v113 = *(void *)((char *)v119 + v111 + 8);
  *(_OWORD *)((char *)v119 + v111) = *(_OWORD *)((char *)v87 + v111);
  sub_100250CC4(v112, v113);
  uint64_t v114 = v117[9];
  uint64_t v115 = *(void **)((char *)v119 + v114);
  *(void *)((char *)v119 + v114) = *(void *)((char *)v87 + v114);

  *((unsigned char *)v119 + v117[10]) = *((unsigned char *)v87 + v117[10]);
  return v119;
}

uint64_t sub_100601C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100601C60);
}

uint64_t sub_100601C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100601C78);
}

uint64_t sub_100601C7C()
{
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_100601D40(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a1;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void *)(v10 - 8);
    int v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    uint64_t v89 = a3;
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
    uint64_t v15 = v14[5];
    uint64_t v16 = &v8[v15];
    uint64_t v17 = &v9[v15];
    if (v12(&v9[v15], 1, v10))
    {
      uint64_t v18 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v17, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
    }
    uint64_t v19 = v14[6];
    int v20 = &v8[v19];
    uint64_t v21 = &v9[v19];
    if (v12(&v9[v19], 1, v10))
    {
      uint64_t v22 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v20, v21, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
    }
    uint64_t v23 = v14[7];
    uint64_t v24 = &v8[v23];
    int v25 = &v9[v23];
    if (v12(&v9[v23], 1, v10))
    {
      uint64_t v26 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v24, v25, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v24, 0, 1, v10);
    }
    uint64_t v27 = v14[8];
    uint64_t v28 = &v8[v27];
    uint64_t v29 = &v9[v27];
    if (v12(&v9[v27], 1, v10))
    {
      uint64_t v30 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v28, v29, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v28, 0, 1, v10);
    }
    uint64_t v31 = v14[9];
    int v32 = &v8[v31];
    uint64_t v33 = &v9[v31];
    if (v12(&v9[v31], 1, v10))
    {
      uint64_t v34 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v32, v33, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v32, 0, 1, v10);
    }
    uint64_t v35 = v14[10];
    uint64_t v36 = &v8[v35];
    int v37 = &v9[v35];
    if (v12(&v9[v35], 1, v10))
    {
      uint64_t v38 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v36, v37, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v36, 0, 1, v10);
    }
    uint64_t v39 = v14[11];
    uint64_t v40 = &v8[v39];
    uint64_t v41 = &v9[v39];
    if (v12(&v9[v39], 1, v10))
    {
      uint64_t v42 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v40, v41, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v40, 0, 1, v10);
    }
    uint64_t v43 = v14[12];
    int v44 = &v8[v43];
    uint64_t v45 = &v9[v43];
    if (v12(&v9[v43], 1, v10))
    {
      uint64_t v46 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v44, v45, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v44, 0, 1, v10);
    }
    v8[v14[13]] = v9[v14[13]];
    uint64_t v47 = v14[14];
    uint64_t v48 = &v8[v47];
    int v49 = &v9[v47];
    if (v12(&v9[v47], 1, v10))
    {
      uint64_t v50 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v48, v49, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v48, 0, 1, v10);
    }
    uint64_t v51 = v14[15];
    uint64_t v52 = &v8[v51];
    uint64_t v53 = &v9[v51];
    if (v12(&v9[v51], 1, v10))
    {
      uint64_t v54 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v52, v53, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v52, 0, 1, v10);
    }
    uint64_t v55 = v14[16];
    int v56 = &v8[v55];
    uint64_t v57 = &v9[v55];
    if (v12(&v9[v55], 1, v10))
    {
      uint64_t v58 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v56, v57, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v56, 0, 1, v10);
    }
    uint64_t v59 = v14[17];
    uint64_t v60 = &v8[v59];
    int v61 = &v9[v59];
    if (v12(&v9[v59], 1, v10))
    {
      uint64_t v62 = sub_10000A844((uint64_t *)&unk_100975040);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v60, v61, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v60, 0, 1, v10);
    }
    uint64_t v63 = v14[18];
    uint64_t v64 = &v8[v63];
    uint64_t v65 = &v9[v63];
    *(_DWORD *)uint64_t v64 = *(_DWORD *)v65;
    v64[4] = v65[4];
    v8[v14[19]] = v9[v14[19]];
    uint64_t v66 = v14[20];
    int v67 = &v8[v66];
    int v68 = &v9[v66];
    uint64_t v69 = *((void *)v68 + 1);
    *(void *)int v67 = *(void *)v68;
    *((void *)v67 + 1) = v69;
    uint64_t v70 = v14[21];
    uint64_t v71 = &v8[v70];
    uint64_t v72 = &v9[v70];
    uint64_t v73 = *((void *)v72 + 1);
    *(void *)uint64_t v71 = *(void *)v72;
    *((void *)v71 + 1) = v73;
    uint64_t v74 = v89[6];
    uint64_t v75 = (char *)v6 + v74;
    uint64_t v76 = (void *)((char *)a2 + v74);
    unint64_t v77 = *(void *)((char *)a2 + v74 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v77 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
    }
    else
    {
      uint64_t v78 = *v76;
      sub_10025ADCC(*v76, v77);
      *(void *)uint64_t v75 = v78;
      *((void *)v75 + 1) = v77;
    }
    uint64_t v79 = v89[7];
    int v80 = (void *)((char *)v6 + v79);
    uint64_t v81 = (void *)((char *)a2 + v79);
    uint64_t v82 = *v81;
    unint64_t v83 = v81[1];
    sub_10025ADCC(*v81, v83);
    *int v80 = v82;
    v80[1] = v83;
    uint64_t v84 = v89[8];
    uint64_t v85 = v89[9];
    int v86 = *(void **)((char *)a2 + v84);
    *(void *)((char *)v6 + v84) = v86;
    *((unsigned char *)v6 + v85) = *((unsigned char *)a2 + v85);
    id v87 = v86;
  }
  return v6;
}

void sub_10060271C(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v9 = v4 + v8[5];
  if (!v7(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = v4 + v8[6];
  if (!v7(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = v4 + v8[7];
  if (!v7(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = v4 + v8[8];
  if (!v7(v12, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  }
  uint64_t v13 = v4 + v8[9];
  if (!v7(v13, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v5);
  }
  uint64_t v14 = v4 + v8[10];
  if (!v7(v14, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = v4 + v8[11];
  if (!v7(v15, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = v4 + v8[12];
  if (!v7(v16, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = v4 + v8[14];
  if (!v7(v17, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = v4 + v8[15];
  if (!v7(v18, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, v5);
  }
  uint64_t v19 = v4 + v8[16];
  if (!v7(v19, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = v4 + v8[17];
  if (!v7(v20, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v20, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = (uint64_t *)(a1 + a2[6]);
  unint64_t v22 = v21[1];
  if (v22 >> 60 != 15) {
    sub_100250CC4(*v21, v22);
  }
  sub_100250CC4(*(void *)(a1 + a2[7]), *(void *)(a1 + a2[7] + 8));
  uint64_t v23 = *(void **)(a1 + a2[8]);
}

void *sub_100602B58(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v4 = a3[5];
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  unint64_t v22 = &v6[v20];
  if (v9(&v6[v20], 1, v7))
  {
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
  }
  uint64_t v24 = v11[8];
  int v25 = &v5[v24];
  uint64_t v26 = &v6[v24];
  if (v9(&v6[v24], 1, v7))
  {
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v9(&v6[v28], 1, v7))
  {
    uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
  }
  uint64_t v32 = v11[10];
  uint64_t v33 = &v5[v32];
  uint64_t v34 = &v6[v32];
  if (v9(&v6[v32], 1, v7))
  {
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
  }
  uint64_t v36 = v11[11];
  int v37 = &v5[v36];
  uint64_t v38 = &v6[v36];
  if (v9(&v6[v36], 1, v7))
  {
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
  }
  uint64_t v40 = v11[12];
  uint64_t v41 = &v5[v40];
  uint64_t v42 = &v6[v40];
  if (v9(&v6[v40], 1, v7))
  {
    uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
  }
  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  uint64_t v45 = &v5[v44];
  uint64_t v46 = &v6[v44];
  if (v9(&v6[v44], 1, v7))
  {
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
  }
  uint64_t v48 = v11[15];
  int v49 = &v5[v48];
  uint64_t v50 = &v6[v48];
  if (v9(&v6[v48], 1, v7))
  {
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
  }
  uint64_t v52 = v11[16];
  uint64_t v53 = &v5[v52];
  uint64_t v54 = &v6[v52];
  if (v9(&v6[v52], 1, v7))
  {
    uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v7);
  }
  uint64_t v56 = v11[17];
  uint64_t v57 = &v5[v56];
  uint64_t v58 = &v6[v56];
  if (v9(&v6[v56], 1, v7))
  {
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0, 1, v7);
  }
  uint64_t v60 = v11[18];
  int v61 = &v5[v60];
  uint64_t v62 = &v6[v60];
  *(_DWORD *)int v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  v5[v11[19]] = v6[v11[19]];
  uint64_t v63 = v11[20];
  uint64_t v64 = &v5[v63];
  uint64_t v65 = &v6[v63];
  uint64_t v66 = *((void *)v65 + 1);
  *(void *)uint64_t v64 = *(void *)v65;
  *((void *)v64 + 1) = v66;
  uint64_t v67 = v11[21];
  int v68 = &v5[v67];
  uint64_t v69 = &v6[v67];
  uint64_t v70 = *((void *)v69 + 1);
  *(void *)int v68 = *(void *)v69;
  *((void *)v68 + 1) = v70;
  uint64_t v71 = a3[6];
  uint64_t v72 = (char *)a1 + v71;
  uint64_t v73 = (void *)((char *)a2 + v71);
  unint64_t v74 = *(void *)((char *)a2 + v71 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v74 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v72 = *(_OWORD *)v73;
  }
  else
  {
    uint64_t v75 = *v73;
    sub_10025ADCC(*v73, v74);
    *(void *)uint64_t v72 = v75;
    *((void *)v72 + 1) = v74;
  }
  uint64_t v76 = a3[7];
  unint64_t v77 = (void *)((char *)a1 + v76);
  uint64_t v78 = (void *)((char *)a2 + v76);
  uint64_t v79 = *v78;
  unint64_t v80 = v78[1];
  sub_10025ADCC(*v78, v80);
  *unint64_t v77 = v79;
  v77[1] = v80;
  uint64_t v81 = a3[8];
  uint64_t v82 = a3[9];
  unint64_t v83 = *(void **)((char *)a2 + v81);
  *(void *)((char *)a1 + v81) = v83;
  *((unsigned char *)a1 + v82) = *((unsigned char *)a2 + v82);
  id v84 = v83;
  return a1;
}

void *sub_1006034CC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v119 = a3;
  unint64_t v120 = a2;
  uint64_t v6 = a3[5];
  uint64_t v121 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  unint64_t v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  unint64_t v83 = &v7[v82];
  id v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (v85)
  {
    id v87 = v120;
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v83, v84, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  id v87 = v120;
  if (v86)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
LABEL_78:
    uint64_t v88 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v88 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v83, v84, v9);
LABEL_79:
  uint64_t v89 = v15[18];
  uint64_t v90 = &v7[v89];
  uint64_t v91 = &v8[v89];
  int v92 = *(_DWORD *)v91;
  v90[4] = v91[4];
  *(_DWORD *)uint64_t v90 = v92;
  v7[v15[19]] = v8[v15[19]];
  uint64_t v93 = v15[20];
  uint64_t v94 = &v7[v93];
  uint64_t v95 = &v8[v93];
  *(void *)uint64_t v94 = *(void *)v95;
  *((void *)v94 + 1) = *((void *)v95 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v96 = v15[21];
  uint64_t v97 = &v7[v96];
  unint64_t v98 = &v8[v96];
  *(void *)uint64_t v97 = *(void *)v98;
  *((void *)v97 + 1) = *((void *)v98 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v99 = v119[6];
  uint64_t v100 = (void *)((char *)v121 + v99);
  uint64_t v101 = (void *)((char *)v87 + v99);
  unint64_t v102 = *(void *)((char *)v87 + v99 + 8);
  if (*(void *)((char *)v121 + v99 + 8) >> 60 != 15)
  {
    if (v102 >> 60 != 15)
    {
      uint64_t v104 = *v101;
      sub_10025ADCC(*v101, v102);
      uint64_t v105 = *v100;
      unint64_t v106 = v100[1];
      *uint64_t v100 = v104;
      v100[1] = v102;
      sub_100250CC4(v105, v106);
      goto LABEL_86;
    }
    sub_10026F904((uint64_t)v100);
    goto LABEL_84;
  }
  if (v102 >> 60 == 15)
  {
LABEL_84:
    *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
    goto LABEL_86;
  }
  uint64_t v103 = *v101;
  sub_10025ADCC(*v101, v102);
  *uint64_t v100 = v103;
  v100[1] = v102;
LABEL_86:
  uint64_t v107 = v119[7];
  uint64_t v108 = (void *)((char *)v121 + v107);
  uint64_t v109 = (void *)((char *)v87 + v107);
  uint64_t v110 = *v109;
  unint64_t v111 = v109[1];
  sub_10025ADCC(*v109, v111);
  uint64_t v112 = *v108;
  unint64_t v113 = v108[1];
  *uint64_t v108 = v110;
  v108[1] = v111;
  sub_100250CC4(v112, v113);
  uint64_t v114 = v119[8];
  uint64_t v115 = *(void **)((char *)v121 + v114);
  unint64_t v116 = *(void **)((char *)v87 + v114);
  *(void *)((char *)v121 + v114) = v116;
  id v117 = v116;

  *((unsigned char *)v121 + v119[9]) = *((unsigned char *)v87 + v119[9]);
  return v121;
}

void *sub_1006043B8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v4 = a3[5];
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v9(v6, 1, v7))
  {
    uint64_t v10 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v12 = v11[5];
  int v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1, v7))
  {
    uint64_t v15 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1, v7))
  {
    uint64_t v19 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  uint64_t v22 = &v6[v20];
  if (v9(&v6[v20], 1, v7))
  {
    uint64_t v23 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
  }
  uint64_t v24 = v11[8];
  int v25 = &v5[v24];
  int v26 = &v6[v24];
  if (v9(&v6[v24], 1, v7))
  {
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0, 1, v7);
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v9(&v6[v28], 1, v7))
  {
    uint64_t v31 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
  }
  uint64_t v32 = v11[10];
  uint64_t v33 = &v5[v32];
  uint64_t v34 = &v6[v32];
  if (v9(&v6[v32], 1, v7))
  {
    uint64_t v35 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
  }
  uint64_t v36 = v11[11];
  int v37 = &v5[v36];
  int v38 = &v6[v36];
  if (v9(&v6[v36], 1, v7))
  {
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0, 1, v7);
  }
  uint64_t v40 = v11[12];
  uint64_t v41 = &v5[v40];
  uint64_t v42 = &v6[v40];
  if (v9(&v6[v40], 1, v7))
  {
    uint64_t v43 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
  }
  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  uint64_t v45 = &v5[v44];
  uint64_t v46 = &v6[v44];
  if (v9(&v6[v44], 1, v7))
  {
    uint64_t v47 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0, 1, v7);
  }
  uint64_t v48 = v11[15];
  int v49 = &v5[v48];
  int v50 = &v6[v48];
  if (v9(&v6[v48], 1, v7))
  {
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0, 1, v7);
  }
  uint64_t v52 = v11[16];
  uint64_t v53 = &v5[v52];
  uint64_t v54 = &v6[v52];
  if (v9(&v6[v52], 1, v7))
  {
    uint64_t v55 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0, 1, v7);
  }
  uint64_t v56 = v11[17];
  uint64_t v57 = &v5[v56];
  uint64_t v58 = &v6[v56];
  if (v9(&v6[v56], 1, v7))
  {
    uint64_t v59 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0, 1, v7);
  }
  uint64_t v60 = v11[18];
  int v61 = &v5[v60];
  int v62 = &v6[v60];
  *(_DWORD *)int v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  v5[v11[19]] = v6[v11[19]];
  *(_OWORD *)&v5[v11[20]] = *(_OWORD *)&v6[v11[20]];
  *(_OWORD *)&v5[v11[21]] = *(_OWORD *)&v6[v11[21]];
  uint64_t v63 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v63) = *(_OWORD *)((char *)a2 + v63);
  uint64_t v64 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *((unsigned char *)a1 + v64) = *((unsigned char *)a2 + v64);
  return a1;
}

void *sub_100604CBC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v114 = a3;
  uint64_t v115 = a2;
  uint64_t v6 = a3[5];
  unint64_t v116 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics();
  uint64_t v16 = v15[5];
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(&v7[v16], 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  int v25 = v11(&v7[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v7[v28];
  uint64_t v30 = &v8[v28];
  int v31 = v11(&v7[v28], 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  int v37 = v11(&v7[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  int v43 = v11(&v7[v40], 1, v9);
  int v44 = v11(v42, 1, v9);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v41, v42, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
LABEL_36:
    uint64_t v45 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v41, v42, v9);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  int v49 = v11(&v7[v46], 1, v9);
  int v50 = v11(v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0, 1, v9);
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v47, v9);
LABEL_42:
    uint64_t v51 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v47, v48, v9);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  int v55 = v11(&v7[v52], 1, v9);
  int v56 = v11(v54, 1, v9);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v53, v54, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v53, 0, 1, v9);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v53, v9);
LABEL_48:
    uint64_t v57 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_49;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v53, v54, v9);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  int v61 = v11(&v7[v58], 1, v9);
  int v62 = v11(v60, 1, v9);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v59, v9);
LABEL_54:
    uint64_t v63 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v59, v60, v9);
LABEL_55:
  v7[v15[13]] = v8[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v7[v64];
  uint64_t v66 = &v8[v64];
  int v67 = v11(&v7[v64], 1, v9);
  int v68 = v11(v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v65, v66, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v65, 0, 1, v9);
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v9);
LABEL_60:
    uint64_t v69 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_61;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v65, v66, v9);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  int v73 = v11(&v7[v70], 1, v9);
  int v74 = v11(v72, 1, v9);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v71, v72, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v71, 0, 1, v9);
      goto LABEL_67;
    }
    goto LABEL_66;
  }
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v71, v9);
LABEL_66:
    uint64_t v75 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    goto LABEL_67;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v71, v72, v9);
LABEL_67:
  uint64_t v76 = v15[16];
  unint64_t v77 = &v7[v76];
  uint64_t v78 = &v8[v76];
  int v79 = v11(&v7[v76], 1, v9);
  int v80 = v11(v78, 1, v9);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v77, v78, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v77, 0, 1, v9);
      goto LABEL_73;
    }
    goto LABEL_72;
  }
  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v77, v9);
LABEL_72:
    uint64_t v81 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_73;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v77, v78, v9);
LABEL_73:
  uint64_t v82 = v15[17];
  unint64_t v83 = &v7[v82];
  id v84 = &v8[v82];
  int v85 = v11(&v7[v82], 1, v9);
  int v86 = v11(v84, 1, v9);
  if (v85)
  {
    id v87 = v115;
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v83, v84, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v83, 0, 1, v9);
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  id v87 = v115;
  if (v86)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v83, v9);
LABEL_78:
    uint64_t v88 = sub_10000A844((uint64_t *)&unk_100975040);
    memcpy(v83, v84, *(void *)(*(void *)(v88 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v83, v84, v9);
LABEL_79:
  uint64_t v89 = v15[18];
  uint64_t v90 = &v7[v89];
  uint64_t v91 = &v8[v89];
  *(_DWORD *)uint64_t v90 = *(_DWORD *)v91;
  v90[4] = v91[4];
  v7[v15[19]] = v8[v15[19]];
  uint64_t v92 = v15[20];
  uint64_t v93 = &v7[v92];
  uint64_t v94 = &v8[v92];
  uint64_t v96 = *(void *)v94;
  uint64_t v95 = *((void *)v94 + 1);
  *(void *)uint64_t v93 = v96;
  *((void *)v93 + 1) = v95;
  swift_bridgeObjectRelease();
  uint64_t v97 = v15[21];
  unint64_t v98 = &v7[v97];
  uint64_t v99 = &v8[v97];
  uint64_t v101 = *(void *)v99;
  uint64_t v100 = *((void *)v99 + 1);
  *(void *)unint64_t v98 = v101;
  *((void *)v98 + 1) = v100;
  swift_bridgeObjectRelease();
  uint64_t v102 = v114[6];
  uint64_t v103 = (void *)((char *)v116 + v102);
  uint64_t v104 = (void *)((char *)v87 + v102);
  unint64_t v105 = *(void *)((char *)v116 + v102 + 8);
  if (v105 >> 60 != 15)
  {
    unint64_t v106 = v104[1];
    if (v106 >> 60 != 15)
    {
      uint64_t v107 = *v103;
      *uint64_t v103 = *v104;
      v103[1] = v106;
      sub_100250CC4(v107, v105);
      goto LABEL_84;
    }
    sub_10026F904((uint64_t)v103);
  }
  *(_OWORD *)uint64_t v103 = *(_OWORD *)v104;
LABEL_84:
  uint64_t v108 = v114[7];
  uint64_t v109 = *(void *)((char *)v116 + v108);
  unint64_t v110 = *(void *)((char *)v116 + v108 + 8);
  *(_OWORD *)((char *)v116 + v108) = *(_OWORD *)((char *)v87 + v108);
  sub_100250CC4(v109, v110);
  uint64_t v111 = v114[8];
  uint64_t v112 = *(void **)((char *)v116 + v111);
  *(void *)((char *)v116 + v111) = *(void *)((char *)v87 + v111);

  *((unsigned char *)v116 + v114[9]) = *((unsigned char *)v87 + v114[9]);
  return v116;
}

uint64_t sub_100605B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100605B50);
}

uint64_t sub_100605B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100605B68);
}

uint64_t sub_100605B6C()
{
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *_s22GuestModeUnlockPairingVMa()
{
  return &_s22GuestModeUnlockPairingVN;
}

uint64_t sub_100605C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100605C54);
}

uint64_t sub_100605C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100605C6C);
}

uint64_t sub_100605C70()
{
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100605D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100605D38);
}

uint64_t sub_100605D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100605D50);
}

uint64_t sub_100605D54()
{
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100605DFC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097C1B0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097C1B0);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100606188(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_10000A844(&qword_10097C400);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_100606288(uint64_t a1, uint64_t a2)
{
  sub_10000A844(&qword_10097C400);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, objc_class *))(a2 + 16))(a2, isa);
}

id sub_1006064C0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = type metadata accessor for SFAirDropClient.Identifier();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v3[OBJC_IVAR___SDShareSheetAirDropController_browser] = 0;
  int v12 = &v3[OBJC_IVAR___SDShareSheetAirDropController_realName];
  *(void *)int v12 = 0;
  *((void *)v12 + 1) = 0;
  int v13 = &v3[OBJC_IVAR___SDShareSheetAirDropController_currentTransferID];
  uint64_t v14 = type metadata accessor for SFAirDrop.TransferIdentifier();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v15 = OBJC_IVAR___SDShareSheetAirDropController_lockStateMonitor;
  type metadata accessor for SFLockStateMonitor();
  swift_allocObject();
  uint64_t v16 = v4;
  *(void *)&v4[v15] = SFLockStateMonitor.init()();
  uint64_t v17 = &v16[OBJC_IVAR___SDShareSheetAirDropController_transferUpdateChangedHandler];
  *(void *)uint64_t v17 = 0;
  *((void *)v17 + 1) = 0;
  uint64_t v18 = &v16[OBJC_IVAR___SDShareSheetAirDropController_availableNodesChangedHandler];
  *(void *)uint64_t v18 = 0;
  *((void *)v18 + 1) = 0;
  *(void *)&v16[OBJC_IVAR___SDShareSheetAirDropController_availableNodes] = _swiftEmptyArrayStorage;
  *(void *)&v16[OBJC_IVAR___SDShareSheetAirDropController_updateNearbySharingInteractionsTask] = 0;
  int v19 = &v16[OBJC_IVAR___SDShareSheetAirDropController_currentNearbySharingInteraction];
  uint64_t v20 = type metadata accessor for SFAirDrop.NearbySharingInteraction();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  uint64_t v21 = &v16[OBJC_IVAR___SDShareSheetAirDropController_sessionID];
  *(void *)uint64_t v21 = a1;
  *((void *)v21 + 1) = a2;
  *(void *)&v16[OBJC_IVAR___SDShareSheetAirDropController_queue] = a3;
  type metadata accessor for SFAirDropClient();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for SFAirDropClient.Identifier.shareSheet(_:), v8);
  id v22 = a3;
  *(void *)&v16[OBJC_IVAR___SDShareSheetAirDropController_airDropClient] = SFAirDropClient.__allocating_init(identifier:)();

  v28.receiver = v16;
  v28.super_class = ObjectType;
  id v23 = [super init];
  sub_10061044C((unint64_t *)&unk_10097C410, (void (*)(uint64_t))type metadata accessor for ShareSheetAirDropController);
  id v24 = v23;
  swift_retain();
  dispatch thunk of SFLockStateMonitor.delegate.setter();

  swift_release();
  return v24;
}

uint64_t sub_100606834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  sub_10000A844(&qword_10096C920);
  v6[5] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for NWBrowser.Descriptor();
  v6[6] = v7;
  v6[7] = *(void *)(v7 - 8);
  v6[8] = swift_task_alloc();
  type metadata accessor for NWBrowser.Descriptor.Options.Scope();
  v6[9] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for NWBrowser.Descriptor.Options();
  v6[10] = v8;
  v6[11] = *(void *)(v8 - 8);
  v6[12] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v9 = static AirDropActor.shared;
  return _swift_task_switch(sub_1006069E8, v9, 0);
}

uint64_t sub_1006069E8()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = OBJC_IVAR___SDShareSheetAirDropController_browser;
  if (*(void *)(v1 + OBJC_IVAR___SDShareSheetAirDropController_browser))
  {
    if (qword_10096A090 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000B47C(v3, (uint64_t)qword_10097C1B0);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "We already have a AirDrop browser for Share Sheet, ignoring", v6, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v8 = v0[11];
    uint64_t v7 = v0[12];
    uint64_t v10 = v0[7];
    uint64_t v9 = (void *)v0[8];
    uint64_t v25 = v0[10];
    uint64_t v26 = v0[6];
    type metadata accessor for NWParameters();
    static NWParameters.airDropClientBrowserParameters(domain:type:bundleID:)();
    static NWBrowser.Descriptor.Options.Scope.all.getter();
    NWBrowser.Descriptor.Options.init(scope:)();
    NWBrowser.Descriptor.Options.applicationServiceEndpointsOnly.setter();
    uint64_t v11 = (char *)v9 + *(int *)(sub_10000A844(&qword_10097C3F0) + 48);
    *uint64_t v9 = 0x706F7264726961;
    v9[1] = 0xE700000000000000;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v7, v25);
    (*(void (**)(void *, void, uint64_t))(v10 + 104))(v9, enum case for NWBrowser.Descriptor.applicationServiceWithOptions(_:), v26);
    type metadata accessor for NWBrowser();
    swift_allocObject();
    swift_retain();
    *(void *)(v1 + v2) = NWBrowser.init(for:using:)();
    swift_release();
    if (qword_10096A090 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000B47C(v12, (uint64_t)qword_10097C1B0);
    int v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Activating AirDrop browser for share sheet", v15, 2u);
      swift_slowDealloc();
    }

    if (*(void *)(v1 + v2))
    {
      swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      swift_retain();
      NWBrowser.browseResultsChangedHandler.setter();
      swift_release();
      swift_release();
      if (*(void *)(v1 + v2))
      {
        swift_retain();
        NWBrowser.start(queue:)();
        swift_release();
      }
    }
    uint64_t v17 = v0[11];
    uint64_t v16 = v0[12];
    uint64_t v18 = v0[10];
    uint64_t v19 = v0[5];
    uint64_t v20 = (void *)v0[2];
    uint64_t v21 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v19, 1, 1, v21);
    id v22 = (void *)swift_allocObject();
    v22[2] = 0;
    v22[3] = 0;
    v22[4] = v20;
    v20;
    sub_10028CAC4(v19, (uint64_t)&unk_10097C3F8, (uint64_t)v22);
    swift_release();
    sub_10060D050();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

void sub_100606E98(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_100606EF4(a1);
  }
}

void sub_100606EF4(uint64_t a1)
{
  uint64_t v90 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  int v86 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10000A844(&qword_100974EA0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v89 = (uint64_t)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v97 = (uint64_t)&v81 - v8;
  uint64_t v9 = type metadata accessor for NWEndpoint();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v109 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  os_log_type_t v14 = (char *)&v81 - v13;
  uint64_t v15 = type metadata accessor for NWBrowser.Result();
  uint64_t v16 = __chkstk_darwin(v15);
  unint64_t v105 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v81 - v19;
  __chkstk_darwin(v18);
  uint64_t v104 = (char *)&v81 - v22;
  unint64_t v114 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v23 = *(void *)(a1 + 56);
  uint64_t v98 = a1 + 56;
  uint64_t v24 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v25 = -1;
  if (v24 < 64) {
    uint64_t v25 = ~(-1 << v24);
  }
  unint64_t v26 = v25 & v23;
  uint64_t v82 = v1;
  uint64_t v100 = v1 + OBJC_IVAR___SDShareSheetAirDropController_helperConnection;
  int64_t v99 = (unint64_t)(v24 + 63) >> 6;
  uint64_t v110 = v21 + 16;
  uint64_t v102 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v103 = v21 + 32;
  uint64_t v106 = v21;
  uint64_t v108 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v88 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  int v85 = (void (**)(char *, uint64_t, uint64_t))(v3 + 32);
  id v84 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v107 = a1;
  swift_bridgeObjectRetain();
  int64_t v27 = 0;
  *(void *)&long long v28 = 136315138;
  long long v91 = v28;
  unint64_t v83 = (unint64_t)"AirDropNetworkAgent";
  id v87 = (char *)&type metadata for Any + 8;
  uint64_t v96 = v9;
  uint64_t v101 = v14;
  if (v26) {
    goto LABEL_38;
  }
LABEL_7:
  int64_t v29 = v27 + 1;
  if (__OFADD__(v27, 1))
  {
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if (v29 < v99)
  {
    unint64_t v30 = *(void *)(v98 + 8 * v29);
    ++v27;
    if (v30) {
      goto LABEL_20;
    }
    int64_t v27 = v29 + 1;
    if (v29 + 1 >= v99) {
      goto LABEL_46;
    }
    unint64_t v30 = *(void *)(v98 + 8 * v27);
    if (v30) {
      goto LABEL_20;
    }
    int64_t v27 = v29 + 2;
    if (v29 + 2 >= v99) {
      goto LABEL_46;
    }
    unint64_t v30 = *(void *)(v98 + 8 * v27);
    if (v30)
    {
LABEL_20:
      unint64_t v26 = (v30 - 1) & v30;
      for (unint64_t i = __clz(__rbit64(v30)) + (v27 << 6); ; unint64_t i = v54 | (v27 << 6))
      {
        uint64_t v33 = v106;
        uint64_t v34 = *(void (**)(char *, unint64_t, uint64_t))(v106 + 16);
        uint64_t v35 = v104;
        v34(v104, *(void *)(v107 + 48) + *(void *)(v106 + 72) * i, v15);
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v20, v35, v15);
        NWBrowser.Result.endpoint.getter();
        uint64_t v36 = sub_1003243B4((uint64_t)v14);
        uint64_t v38 = v37;
        if (v37
          && (v36 == 63 && v37 == 0xE100000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
        {
          swift_bridgeObjectRelease();
          uint64_t v38 = 0;
        }
        uint64_t v39 = *v102;
        (*v102)(v14, v9);
        swift_bridgeObjectRelease();
        uint64_t v40 = v105;
        v34(v105, (unint64_t)v20, v15);
        if (v38)
        {
          uint64_t v41 = v40;
          uint64_t v42 = *v108;
          (*v108)(v41, v15);
        }
        else
        {
          uint64_t v43 = (uint64_t)v109;
          NWBrowser.Result.endpoint.getter();
          sub_100324384(v43);
          uint64_t v45 = v44;
          v39((char *)v43, v9);
          uint64_t v46 = v40;
          uint64_t v42 = *v108;
          (*v108)(v46, v15);
          swift_bridgeObjectRelease();
          if (!v45) {
            goto LABEL_37;
          }
        }
        uint64_t v47 = (uint64_t)v109;
        NWBrowser.Result.endpoint.getter();
        uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
        id v49 = objc_allocWithZone((Class)type metadata accessor for ShareSheetAirDropNode(0));
        int v50 = (char *)sub_100611244(v47, Strong);

        unint64_t v51 = *(void *)&v50[OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_displayName + 8];
        if (!v51)
        {
          __break(1u);
          return;
        }
        if ((v51 & 0x2000000000000000) != 0) {
          uint64_t v52 = HIBYTE(v51) & 0xF;
        }
        else {
          uint64_t v52 = *(void *)&v50[OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_displayName] & 0xFFFFFFFFFFFFLL;
        }
        if (v52)
        {
          uint64_t v53 = v50;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

LABEL_37:
          v42(v20, v15);
          os_log_type_t v14 = v101;
          if (!v26) {
            goto LABEL_7;
          }
          goto LABEL_38;
        }
        if (qword_10096A090 != -1) {
          swift_once();
        }
        uint64_t v55 = type metadata accessor for Logger();
        sub_10000B47C(v55, (uint64_t)qword_10097C1B0);
        int v56 = v50;
        uint64_t v57 = Logger.logObject.getter();
        int v58 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v57, (os_log_type_t)v58))
        {
          int v93 = v58;
          os_log_t v95 = v57;
          uint64_t v59 = (_DWORD *)swift_slowAlloc();
          uint64_t v92 = swift_slowAlloc();
          uint64_t v112 = v92;
          uint64_t v94 = v59;
          *uint64_t v59 = v91;
          uint64_t v60 = (uint64_t)&v56[OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_nodeIdentifier];
          swift_beginAccess();
          uint64_t v61 = v97;
          sub_10024A330(v60, v97, &qword_100974EA0);
          uint64_t v62 = v89;
          sub_10024A330(v61, v89, &qword_100974EA0);
          uint64_t v63 = v90;
          if ((*v88)(v62, 1, v90) == 1)
          {
            v113[0] = 0;
            v113[1] = 0xE000000000000000;
            _StringGuts.grow(_:)(17);
            swift_bridgeObjectRelease();
            unint64_t v64 = v83 | 0x8000000000000000;
            unint64_t v65 = 0xD000000000000013;
          }
          else
          {
            uint64_t v66 = v86;
            (*v85)(v86, v62, v63);
            sub_10061044C((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
            uint64_t v67 = v63;
            unint64_t v65 = dispatch thunk of CustomStringConvertible.description.getter();
            unint64_t v64 = v68;
            (*v84)(v66, v67);
          }
          sub_10000A7E8(v97, &qword_100974EA0);
          uint64_t v69 = sub_100254634(v65, v64, &v112);
          uint64_t v70 = (uint8_t *)v94;
          *(void *)(v94 + 1) = v69;

          swift_bridgeObjectRelease();
          os_log_t v71 = v95;
          _os_log_impl((void *)&_mh_execute_header, v95, (os_log_type_t)v93, "Skipping node with no display name: %s", v70, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v42(v20, v15);
        }
        else
        {

          v42(v20, v15);
        }
        uint64_t v9 = v96;
        os_log_type_t v14 = v101;
        if (!v26) {
          goto LABEL_7;
        }
LABEL_38:
        unint64_t v54 = __clz(__rbit64(v26));
        v26 &= v26 - 1;
      }
    }
    int64_t v31 = v29 + 3;
    if (v31 < v99)
    {
      unint64_t v30 = *(void *)(v98 + 8 * v31);
      if (v30)
      {
        int64_t v27 = v31;
        goto LABEL_20;
      }
      while (1)
      {
        int64_t v27 = v31 + 1;
        if (__OFADD__(v31, 1)) {
          goto LABEL_53;
        }
        if (v27 >= v99) {
          break;
        }
        unint64_t v30 = *(void *)(v98 + 8 * v27);
        ++v31;
        if (v30) {
          goto LABEL_20;
        }
      }
    }
  }
LABEL_46:
  swift_release();
  *(void *)(v82 + OBJC_IVAR___SDShareSheetAirDropController_availableNodes) = v114;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (qword_10096A090 != -1) {
LABEL_54:
  }
    swift_once();
  uint64_t v72 = type metadata accessor for Logger();
  sub_10000B47C(v72, (uint64_t)qword_10097C1B0);
  int v73 = Logger.logObject.getter();
  os_log_type_t v74 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v73, v74))
  {
    uint64_t v75 = (uint8_t *)swift_slowAlloc();
    v113[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v75 = v91;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_10000A844(&qword_10097C400);
    uint64_t v76 = Array.description.getter();
    unint64_t v78 = v77;
    swift_bridgeObjectRelease();
    uint64_t v111 = sub_100254634(v76, v78, v113);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v73, v74, "Share sheet AirDrop nodes changed: %s", v75, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  int v79 = *(void (**)(uint64_t))(v82 + OBJC_IVAR___SDShareSheetAirDropController_availableNodesChangedHandler);
  if (v79)
  {
    swift_beginAccess();
    sub_1002CA420((uint64_t)v79);
    uint64_t v80 = swift_bridgeObjectRetain();
    v79(v80);
    sub_1002CA430((uint64_t)v79);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_100607CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  sub_10000A844(&qword_10096C920);
  *(void *)(v4 + 24) = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_100607DB0, v5, 0);
}

uint64_t sub_100607DB0()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = OBJC_IVAR___SDShareSheetAirDropController_browser;
  if (*(void *)(v1 + OBJC_IVAR___SDShareSheetAirDropController_browser))
  {
    if (qword_10096A090 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000B47C(v3, (uint64_t)qword_10097C1B0);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Invalidating AirDrop browser for share sheet", v6, 2u);
      swift_slowDealloc();
    }

    if (*(void *)(v1 + v2))
    {
      swift_retain();
      NWBrowser.cancel()();
      swift_release();
    }
    uint64_t v7 = v0[2];
    *(void *)(v1 + v2) = 0;
    swift_release();
    uint64_t v8 = OBJC_IVAR___SDShareSheetAirDropController_updateNearbySharingInteractionsTask;
    if (*(void *)(v7 + OBJC_IVAR___SDShareSheetAirDropController_updateNearbySharingInteractionsTask))
    {
      swift_retain();
      Task.cancel()();
      swift_release();
    }
    uint64_t v10 = (void *)v0[2];
    uint64_t v9 = v0[3];
    *(void *)(v7 + v8) = 0;
    swift_release();
    uint64_t v11 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = 0;
    void v12[3] = 0;
    v12[4] = v10;
    id v13 = v10;
    sub_10028CAC4(v9, (uint64_t)&unk_10097C3D8, (uint64_t)v12);
    swift_release();
  }
  swift_task_dealloc();
  os_log_type_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_100608188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[15] = v14;
  unsigned char v8[16] = v15;
  v8[13] = a7;
  v8[14] = a8;
  v8[11] = a5;
  v8[12] = a6;
  v8[10] = a4;
  uint64_t v9 = type metadata accessor for SFAirDropSend.Transfer();
  v8[17] = v9;
  v8[18] = *(void *)(v9 - 8);
  v8[19] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096DFB0);
  v8[20] = swift_task_alloc();
  uint64_t v10 = sub_10000A844(&qword_10096C5F8);
  v8[21] = v10;
  v8[22] = *(void *)(v10 - 8);
  v8[23] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for UUID();
  unsigned char v8[24] = v11;
  v8[25] = *(void *)(v11 - 8);
  v8[26] = swift_task_alloc();
  return _swift_task_switch(sub_100608348, 0, 0);
}

uint64_t sub_100608348()
{
  int64_t v29 = v0;
  uint64_t v1 = v0[10];
  uint64_t v2 = UUID.uuidString.getter();
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR___SDShareSheetAirDropController_realName);
  *uint64_t v3 = v2;
  v3[1] = v4;
  swift_bridgeObjectRelease();
  if (qword_10096A090 != -1) {
    swift_once();
  }
  uint64_t v6 = v0[25];
  uint64_t v5 = v0[26];
  uint64_t v7 = v0[24];
  uint64_t v8 = v0[11];
  uint64_t v9 = type metadata accessor for Logger();
  v0[27] = sub_10000B47C(v9, (uint64_t)qword_10097C1B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v14 = v0[25];
  uint64_t v13 = v0[26];
  uint64_t v15 = v0[24];
  if (v12)
  {
    uint64_t v26 = v0[24];
    uint64_t v16 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    type metadata accessor for URL();
    os_log_type_t type = v11;
    swift_bridgeObjectRetain();
    uint64_t v17 = Array.description.getter();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    v0[8] = sub_100254634(v17, v19, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    sub_10061044C((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[9] = sub_100254634(v20, v21, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v26);
    _os_log_impl((void *)&_mh_execute_header, v10, type, "Sending URLs: %s to %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  v0[5] = v0[12];
  uint64_t v22 = (void *)swift_task_alloc();
  v0[28] = v22;
  uint64_t v23 = sub_10000A844((uint64_t *)&unk_10096C8B0);
  uint64_t v24 = sub_1002AE308(&qword_100970C10, (uint64_t *)&unk_10096C8B0);
  *uint64_t v22 = v0;
  v22[1] = sub_100608704;
  return Sequence<>.coordinateRead(withSaveToTempDir:options:)(1, 1, v23, v24);
}

uint64_t sub_100608704(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 232) = a1;
  *(void *)(v3 + 240) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_100608D54;
  }
  else {
    uint64_t v4 = sub_100608818;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100608818()
{
  v0[31] = *(void *)(v0[10] + OBJC_IVAR___SDShareSheetAirDropController_airDropClient);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[32] = v1;
  void *v1 = v0;
  v1[1] = sub_1006088E4;
  uint64_t v2 = v0[29];
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[16];
  uint64_t v6 = v0[13];
  uint64_t v7 = v0[14];
  uint64_t v8 = v0[11];
  return SFAirDropClient.send(_:to:itemPreviewData:requestSource:onlyExchange:)(v3, v2, v8, v6, v7, v4, v5, 0);
}

uint64_t sub_1006088E4()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = sub_100608F58;
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_100608A48;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100608A48()
{
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v4 = v0[17];
  uint64_t v5 = v0[10];
  SFXPCProgressTask.initialValue.getter();
  SFAirDropSend.Transfer.id.getter();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v1, 0, 1, v6);
  uint64_t v7 = v5 + OBJC_IVAR___SDShareSheetAirDropController_currentTransferID;
  swift_beginAccess();
  sub_10026B410(v1, v7, (uint64_t *)&unk_10096DFB0);
  swift_endAccess();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[34] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100608BB8;
  uint64_t v9 = v0[23];
  return sub_10060915C(v9);
}

uint64_t sub_100608BB8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100608CB4, 0, 0);
}

uint64_t sub_100608CB4()
{
  (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100608D54()
{
  uint64_t v11 = v0;
  uint64_t v1 = v0[30];
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v10 = v5;
    v0[6] = v1;
    swift_errorRetain();
    sub_10000A844(&qword_10096BAF0);
    uint64_t v6 = String.init<A>(describing:)();
    v0[7] = sub_100254634(v6, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to send URLs: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100608F58()
{
  uint64_t v11 = v0;
  uint64_t v1 = v0[33];
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v10 = v5;
    v0[6] = v1;
    swift_errorRetain();
    sub_10000A844(&qword_10096BAF0);
    uint64_t v6 = String.init<A>(describing:)();
    v0[7] = sub_100254634(v6, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to send URLs: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10060915C(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  sub_10000A844(&qword_10096C920);
  v2[14] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for SFAirDrop.NearbySharingInteraction();
  v2[15] = v3;
  v2[16] = *(void *)(v3 - 8);
  v2[17] = swift_task_alloc();
  sub_10000A844(&qword_100974EA0);
  v2[18] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v2[19] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[20] = v5;
  v2[21] = *(void *)(v5 + 64);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096DFB0);
  v2[24] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFAirDropSend.Failure();
  v2[25] = v6;
  v2[26] = *(void *)(v6 - 8);
  v2[27] = swift_task_alloc();
  sub_10000A844(&qword_10097C358);
  v2[28] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10097C360);
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SFAirDrop.Progress();
  v2[33] = v7;
  v2[34] = *(void *)(v7 - 8);
  v2[35] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SFAirDropSend.Transfer.State();
  v2[36] = v8;
  v2[37] = *(void *)(v8 - 8);
  v2[38] = swift_task_alloc();
  v2[39] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for SFAirDropSend.Transfer();
  v2[40] = v9;
  v2[41] = *(void *)(v9 - 8);
  v2[42] = swift_task_alloc();
  v2[43] = swift_task_alloc();
  sub_10000A844(&qword_100975070);
  v2[44] = swift_task_alloc();
  uint64_t v10 = sub_10000A844(&qword_10097C370);
  v2[45] = v10;
  v2[46] = *(void *)(v10 - 8);
  v2[47] = swift_task_alloc();
  return _swift_task_switch(sub_1006095C8, 0, 0);
}

uint64_t sub_1006095C8()
{
  *(void *)(v0 + 384) = sub_10000A844(&qword_10096C5F8);
  SFXPCProgressTask.makeAsyncIterator()();
  uint64_t v1 = OBJC_IVAR___SDShareSheetAirDropController_sessionID;
  *(void *)(v0 + 392) = OBJC_IVAR___SDShareSheetAirDropController_realName;
  *(void *)(v0 + 400) = v1;
  *(void *)(v0 + 408) = OBJC_IVAR___SDShareSheetAirDropController_transferUpdateChangedHandler;
  *(_DWORD *)(v0 + 448) = enum case for SFAirDropSend.Transfer.State.analyzingFullContent(_:);
  *(_DWORD *)(v0 + 452) = enum case for SFAirDropSend.Transfer.State.waitingForSensitiveContentResponse(_:);
  *(_DWORD *)(v0 + 456) = enum case for SFAirDropSend.Transfer.State.transferring(_:);
  *(_DWORD *)(v0 + 460) = enum case for SFAirDropSend.Transfer.State.waitingForShareContactPermissionResponse(_:);
  *(_DWORD *)(v0 + 464) = enum case for SFAirDropSend.Transfer.State.exchanging(_:);
  *(_DWORD *)(v0 + 468) = enum case for SFAirDropSend.Transfer.State.waitingForImportContactResponse(_:);
  *(_DWORD *)(v0 + 472) = enum case for SFAirDropSend.Transfer.State.transferFailed(_:);
  *(_DWORD *)(v0 + 476) = enum case for SFAirDropSend.Transfer.State.completedSuccessfully(_:);
  *(_DWORD *)(v0 + 480) = enum case for SFAirDropSend.Transfer.State.created(_:);
  *(_DWORD *)(v0 + 484) = enum case for SFAirDropSend.Transfer.State.waitingForAskResponse(_:);
  uint64_t v2 = sub_1002AE308(&qword_10097C378, &qword_10097C370);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 416) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100609774;
  uint64_t v4 = *(void *)(v0 + 352);
  uint64_t v5 = *(void *)(v0 + 360);
  return dispatch thunk of AsyncIteratorProtocol.next()(v4, v5, v2);
}

uint64_t sub_100609774()
{
  *(void *)(*(void *)v1 + 424) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10060A92C;
  }
  else {
    uint64_t v2 = sub_100609888;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100609888()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v3 = *(void *)(v0 + 328);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 368) + 8))(*(void *)(v0 + 376), *(void *)(v0 + 360));
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 432) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100609FF8;
    uint64_t v5 = *(void *)(v0 + 384);
    uint64_t v6 = *(void *)(v0 + 336);
    return SFXPCProgressTask.finalValue.getter(v6, v5);
  }
  int v7 = *(_DWORD *)(v0 + 448);
  uint64_t v8 = *(void *)(v0 + 312);
  uint64_t v9 = *(void *)(v0 + 288);
  uint64_t v10 = *(void *)(v0 + 296);
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(*(void *)(v0 + 344), v1, v2);
  SFAirDropSend.Transfer.state.getter();
  int v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 88))(v8, v9);
  if (v11 == v7)
  {
    uint64_t v12 = *(void *)(v0 + 312);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 296) + 96))(v12, *(void *)(v0 + 288));
    swift_bridgeObjectRelease();
    uint64_t v13 = v12 + *(int *)(sub_10000A844(&qword_100970D58) + 64);
    uint64_t v14 = type metadata accessor for SFAirDrop.DeclineAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    double v15 = 0.0;
    uint64_t v16 = 3;
    goto LABEL_14;
  }
  if (v11 != *(_DWORD *)(v0 + 452))
  {
    if (v11 == *(_DWORD *)(v0 + 456))
    {
      uint64_t v20 = *(void *)(v0 + 312);
      uint64_t v22 = *(void *)(v0 + 272);
      uint64_t v21 = *(void *)(v0 + 280);
      uint64_t v23 = *(void *)(v0 + 264);
      (*(void (**)(uint64_t, void))(*(void *)(v0 + 296) + 96))(v20, *(void *)(v0 + 288));
      swift_bridgeObjectRelease();
      uint64_t v24 = sub_10000A844((uint64_t *)&unk_10097C3A0);
      uint64_t v25 = v20 + *(int *)(v24 + 48);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v21, v25, v23);
      double v26 = COERCE_DOUBLE(SFAirDrop.Progress.percent.getter());
      uint64_t v27 = v20 + *(int *)(v24 + 80);
      if (v28) {
        double v15 = 0.0;
      }
      else {
        double v15 = v26 * 100.0;
      }
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      uint64_t v29 = type metadata accessor for SFAirDrop.DeclineAction();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v27, v29);
      uint64_t v16 = 7;
LABEL_14:
      uint64_t v30 = *(void *)(v0 + 104);
      int64_t v31 = (uint64_t *)(v30 + *(void *)(v0 + 392));
      uint64_t v32 = v31[1];
      if (v32)
      {
        uint64_t v56 = *(void *)(v0 + 408);
        uint64_t v33 = (uint64_t *)(v30 + *(void *)(v0 + 400));
        uint64_t v34 = *v31;
        uint64_t v36 = *v33;
        uint64_t v35 = v33[1];
        uint64_t v37 = (objc_class *)type metadata accessor for ShareSheetAirDropTransferUpdate();
        uint64_t v38 = (char *)objc_allocWithZone(v37);
        *(void *)&v38[OBJC_IVAR___SDShareSheetAirDropTransferUpdate_state] = 1;
        *(void *)&v38[OBJC_IVAR___SDShareSheetAirDropTransferUpdate_progress] = 0;
        uint64_t v39 = &v38[OBJC_IVAR___SDShareSheetAirDropTransferUpdate_sessionID];
        *(void *)uint64_t v39 = v36;
        *((void *)v39 + 1) = v35;
        uint64_t v40 = &v38[OBJC_IVAR___SDShareSheetAirDropTransferUpdate_realName];
        *(void *)uint64_t v40 = v34;
        *((void *)v40 + 1) = v32;
        *(void *)(v0 + 64) = v38;
        *(void *)(v0 + 72) = v37;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v41 = (char *)[((objc_super *)(v0 + 64)) init];
        *(void *)&v41[OBJC_IVAR___SDShareSheetAirDropTransferUpdate_state] = v16;
        *(double *)&v41[OBJC_IVAR___SDShareSheetAirDropTransferUpdate_progress] = v15;
        uint64_t v42 = *(void (**)(char *))(v30 + v56);
        if (v42)
        {
          swift_retain();
          v42(v41);
          sub_1002CA430((uint64_t)v42);
        }
      }
      goto LABEL_26;
    }
    if (v11 == *(_DWORD *)(v0 + 460))
    {
      uint64_t v18 = *(void *)(v0 + 312);
      (*(void (**)(uint64_t, void))(*(void *)(v0 + 296) + 96))(v18, *(void *)(v0 + 288));
      uint64_t v43 = v18 + *(int *)(sub_10000A844(&qword_100970C60) + 48);
      uint64_t v44 = (uint64_t *)&unk_1009723F0;
    }
    else
    {
      if (v11 == *(_DWORD *)(v0 + 464))
      {
        uint64_t v18 = *(void *)(v0 + 312);
        (*(void (**)(uint64_t, void))(*(void *)(v0 + 296) + 96))(v18, *(void *)(v0 + 288));
        uint64_t v19 = type metadata accessor for SFAirDrop.ContactRequest();
        goto LABEL_25;
      }
      if (v11 != *(_DWORD *)(v0 + 468))
      {
        if (v11 == *(_DWORD *)(v0 + 472))
        {
          uint64_t v50 = *(void *)(v0 + 312);
          uint64_t v51 = *(void *)(v0 + 200);
          uint64_t v52 = *(void *)(v0 + 208);
          (*(void (**)(uint64_t, void))(*(void *)(v0 + 296) + 96))(v50, *(void *)(v0 + 288));
          uint64_t v53 = sub_10000A844(&qword_10096EFF8);
          (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v50 + *(int *)(v53 + 48), v51);
          uint64_t v54 = type metadata accessor for SFAirDropSend.Transfer.Metrics();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v50, v54);
          double v15 = 0.0;
          uint64_t v16 = 10;
        }
        else if (v11 == *(_DWORD *)(v0 + 476))
        {
          (*(void (**)(void, void))(*(void *)(v0 + 296) + 8))(*(void *)(v0 + 312), *(void *)(v0 + 288));
          double v15 = 100.0;
          uint64_t v16 = 9;
        }
        else
        {
          double v15 = 0.0;
          uint64_t v16 = 3;
          if (v11 != *(_DWORD *)(v0 + 480) && v11 != *(_DWORD *)(v0 + 484)) {
            return _assertionFailure(_:_:file:line:flags:)();
          }
        }
        goto LABEL_14;
      }
      uint64_t v18 = *(void *)(v0 + 312);
      (*(void (**)(uint64_t, void))(*(void *)(v0 + 296) + 96))(v18, *(void *)(v0 + 288));
      uint64_t v43 = v18 + *(int *)(sub_10000A844(&qword_100970C88) + 48);
      uint64_t v44 = (uint64_t *)&unk_10097C390;
    }
    uint64_t v45 = sub_10000A844(v44);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v43, v45);
    uint64_t v19 = type metadata accessor for SFAirDrop.ContactInfo();
    goto LABEL_25;
  }
  uint64_t v17 = *(void *)(v0 + 312);
  (*(void (**)(uint64_t, void))(*(void *)(v0 + 296) + 96))(v17, *(void *)(v0 + 288));
  swift_bridgeObjectRelease();
  uint64_t v18 = v17 + *(int *)(sub_10000A844(&qword_100970D78) + 48);
  uint64_t v19 = sub_10000A844((uint64_t *)&unk_10097C3B0);
LABEL_25:
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
LABEL_26:
  (*(void (**)(void, void))(*(void *)(v0 + 328) + 8))(*(void *)(v0 + 344), *(void *)(v0 + 320));
  uint64_t v46 = sub_1002AE308(&qword_10097C378, &qword_10097C370);
  uint64_t v47 = (void *)swift_task_alloc();
  *(void *)(v0 + 416) = v47;
  *uint64_t v47 = v0;
  v47[1] = sub_100609774;
  uint64_t v48 = *(void *)(v0 + 352);
  uint64_t v49 = *(void *)(v0 + 360);
  return dispatch thunk of AsyncIteratorProtocol.next()(v48, v49, v46);
}

uint64_t sub_100609FF8()
{
  *(void *)(*(void *)v1 + 440) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10060AC24;
  }
  else {
    uint64_t v2 = sub_10060A10C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10060A10C()
{
  uint64_t v2 = v0[37];
  uint64_t v1 = v0[38];
  uint64_t v3 = v0[36];
  uint64_t v4 = v0[28];
  SFAirDropSend.Transfer.state.getter();
  SFAirDropSend.Transfer.State.metrics.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v5 = type metadata accessor for SFAirDropSend.Transfer.Metrics();
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  uint64_t v8 = v0[31];
  uint64_t v9 = v0[28];
  if (v7 == 1)
  {
    sub_10000A7E8(v0[28], &qword_10097C358);
    uint64_t v10 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult();
    uint64_t v11 = *(void *)(v10 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v8, 1, 1, v10);
LABEL_4:
    uint64_t v13 = v0[31];
    uint64_t v12 = v0[32];
    type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v12, 1, 1, v10);
    sub_10000A7E8(v13, (uint64_t *)&unk_10097C360);
    goto LABEL_6;
  }
  SFAirDropSend.Transfer.Metrics.result.getter();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v10 = type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1) {
    goto LABEL_4;
  }
  uint64_t v14 = v0[32];
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 32))(v14, v0[31], v10);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
LABEL_6:
  uint64_t v15 = v0[30];
  sub_10024A330(v0[32], v15, (uint64_t *)&unk_10097C360);
  type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v15, 1, v10) == 1)
  {
    double v16 = 0.0;
    uint64_t v17 = 10;
  }
  else
  {
    uint64_t v18 = v0[29];
    sub_10024A330(v0[30], v18, (uint64_t *)&unk_10097C360);
    int v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 88))(v18, v10);
    if (v19 == enum case for SFAirDropSend.Transfer.Metrics.TransferResult.failure(_:))
    {
      uint64_t v20 = v0[29];
      uint64_t v22 = v0[26];
      uint64_t v21 = v0[27];
      uint64_t v23 = v0[25];
      (*(void (**)(uint64_t, uint64_t))(v11 + 96))(v20, v10);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v21, v20, v23);
      sub_10060BF8C(v21);
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      goto LABEL_13;
    }
    if (v19 != enum case for SFAirDropSend.Transfer.Metrics.TransferResult.success(_:))
    {
      (*(void (**)(void, uint64_t))(v11 + 8))(v0[29], v10);
      return _assertionFailure(_:_:file:line:flags:)();
    }
    double v16 = 100.0;
    uint64_t v17 = 9;
  }
  sub_10060BE50(v17, v16);
LABEL_13:
  uint64_t v25 = v0[41];
  uint64_t v24 = v0[42];
  uint64_t v26 = v0[40];
  uint64_t v27 = v0[30];
  sub_10000A7E8(v0[32], (uint64_t *)&unk_10097C360);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  sub_10000A7E8(v27, (uint64_t *)&unk_10097C360);
  uint64_t v28 = v0[24];
  uint64_t v29 = v0[15];
  uint64_t v30 = v0[16];
  uint64_t v31 = v0[13];
  uint64_t v32 = type metadata accessor for SFAirDrop.TransferIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v28, 1, 1, v32);
  uint64_t v33 = v31 + OBJC_IVAR___SDShareSheetAirDropController_currentTransferID;
  swift_beginAccess();
  sub_10026B410(v28, v33, (uint64_t *)&unk_10096DFB0);
  swift_endAccess();
  uint64_t v34 = v31 + OBJC_IVAR___SDShareSheetAirDropController_currentNearbySharingInteraction;
  swift_beginAccess();
  int v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v34, 1, v29);
  uint64_t v36 = v0[19];
  uint64_t v37 = v0[20];
  uint64_t v38 = v0[18];
  if (v35)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v37 + 56))(v0[18], 1, 1, v0[19]);
  }
  else
  {
    uint64_t v40 = v0[16];
    uint64_t v39 = v0[17];
    uint64_t v41 = v0[15];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v39, v34, v41);
    SFAirDrop.NearbySharingInteraction.id.getter();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v38, 0, 1, v36);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v38, 1, v36) != 1)
    {
      uint64_t v45 = v0[22];
      uint64_t v44 = v0[23];
      uint64_t v47 = v0[20];
      uint64_t v46 = v0[21];
      uint64_t v48 = v0[19];
      uint64_t v49 = v0[14];
      uint64_t v56 = v49;
      uint64_t v57 = (void *)v0[13];
      uint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32);
      v50(v44, v0[18], v48);
      uint64_t v51 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v49, 1, 1, v51);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v45, v44, v48);
      unint64_t v52 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
      unint64_t v53 = (v46 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v54 = swift_allocObject();
      *(void *)(v54 + 16) = 0;
      *(void *)(v54 + 24) = 0;
      v50(v54 + v52, v45, v48);
      *(void *)(v54 + v53) = v57;
      id v55 = v57;
      sub_10028CAC4(v56, (uint64_t)&unk_10097C388, v54);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v44, v48);
      goto LABEL_17;
    }
  }
  sub_10000A7E8(v0[18], &qword_100974EA0);
LABEL_17:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v42 = (uint64_t (*)(void))v0[1];
  return v42();
}

uint64_t sub_10060A92C()
{
  *(void *)(v0 + 80) = *(void *)(v0 + 424);
  sub_10000A844(&qword_10096BAF0);
  swift_willThrowTypedImpl();
  return _swift_task_switch(sub_10060A9B8, 0, 0);
}

uint64_t sub_10060A9B8()
{
  (*(void (**)(void, void))(v0[46] + 8))(v0[47], v0[45]);
  if (qword_10096A090 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097C1B0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[11] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Transfer failed {error: %@}", v4, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_10060BE50(10, 0.0);
  swift_errorRelease();
  int v7 = (void *)swift_task_alloc();
  v0[54] = v7;
  *int v7 = v0;
  v7[1] = sub_100609FF8;
  uint64_t v8 = v0[48];
  uint64_t v9 = v0[42];
  return SFXPCProgressTask.finalValue.getter(v9, v8);
}

uint64_t sub_10060AC24()
{
  swift_errorRelease();
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[13];
  uint64_t v5 = type metadata accessor for SFAirDrop.TransferIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v1, 1, 1, v5);
  uint64_t v6 = v4 + OBJC_IVAR___SDShareSheetAirDropController_currentTransferID;
  swift_beginAccess();
  sub_10026B410(v1, v6, (uint64_t *)&unk_10096DFB0);
  swift_endAccess();
  uint64_t v7 = v4 + OBJC_IVAR___SDShareSheetAirDropController_currentNearbySharingInteraction;
  swift_beginAccess();
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v7, 1, v2);
  uint64_t v9 = v0[19];
  uint64_t v10 = v0[20];
  uint64_t v11 = v0[18];
  if (v8)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v10 + 56))(v0[18], 1, 1, v0[19]);
LABEL_4:
    sub_10000A7E8(v0[18], &qword_100974EA0);
    goto LABEL_6;
  }
  uint64_t v13 = v0[16];
  uint64_t v12 = v0[17];
  uint64_t v14 = v0[15];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v7, v14);
  SFAirDrop.NearbySharingInteraction.id.getter();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v11, 0, 1, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) == 1) {
    goto LABEL_4;
  }
  uint64_t v16 = v0[22];
  unint64_t v15 = v0[23];
  uint64_t v18 = v0[20];
  uint64_t v17 = v0[21];
  uint64_t v19 = v0[19];
  uint64_t v20 = v0[14];
  uint64_t v29 = v20;
  uint64_t v30 = (void *)v0[13];
  uint64_t v21 = *(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 32);
  v21(v15, v0[18], v19);
  uint64_t v22 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v20, 1, 1, v22);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 16))(v16, v15, v19);
  unint64_t v23 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v24 = (v17 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = 0;
  v21(v25 + v23, v16, v19);
  *(void *)(v25 + v24) = v30;
  id v26 = v30;
  sub_10028CAC4(v29, (uint64_t)&unk_10097C388, v25);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v18 + 8))(v15, v19);
LABEL_6:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = (uint64_t (*)(void))v0[1];
  return v27();
}

uint64_t sub_10060B380()
{
  uint64_t v1 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TaskPriority();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  id v8 = v0;
  if (v7 == 1)
  {
    sub_10000A7E8((uint64_t)v3, &qword_10096C920);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v11 = v10;
      swift_unknownObjectRelease();
      if (v11 | v9)
      {
        v13[0] = 0;
        v13[1] = 0;
        v13[2] = v9;
        uint64_t v13[3] = v11;
      }
    }
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_10060B5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a4;
  sub_10000A844((uint64_t *)&unk_10096DFB0);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v4[12] = v5;
  v4[13] = *(void *)(v5 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  return _swift_task_switch(sub_10060B6B4, 0, 0);
}

uint64_t sub_10060B6B4()
{
  uint64_t v31 = v0;
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v4 = v0[11];
  uint64_t v5 = OBJC_IVAR___SDShareSheetAirDropController_currentTransferID;
  v0[16] = OBJC_IVAR___SDShareSheetAirDropController_currentTransferID;
  uint64_t v6 = v1 + v5;
  swift_beginAccess();
  sub_10024A330(v6, v4, (uint64_t *)&unk_10096DFB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    sub_10000A7E8(v0[11], (uint64_t *)&unk_10096DFB0);
    if (qword_10096A090 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10000B47C(v7, (uint64_t)qword_10097C1B0);
    id v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Attempting to cancel but no transfer found.", v10, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[13] + 32))(v0[15], v0[11], v0[12]);
    if (qword_10096A090 != -1) {
      swift_once();
    }
    uint64_t v14 = v0[14];
    uint64_t v13 = v0[15];
    uint64_t v15 = v0[12];
    uint64_t v16 = v0[13];
    uint64_t v17 = type metadata accessor for Logger();
    sub_10000B47C(v17, (uint64_t)qword_10097C1B0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v14, v13, v15);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    BOOL v20 = os_log_type_enabled(v18, v19);
    uint64_t v22 = v0[13];
    uint64_t v21 = v0[14];
    uint64_t v23 = v0[12];
    if (v20)
    {
      unint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)unint64_t v24 = 136315138;
      sub_10061044C(&qword_10096DFC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
      uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[8] = sub_100254634(v25, v26, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v27(v21, v23);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Canceling transfer with ID: %s", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v27(v0[14], v0[12]);
    }

    v0[17] = v27;
    v0[18] = *(void *)(v0[9] + OBJC_IVAR___SDShareSheetAirDropController_airDropClient);
    swift_retain();
    uint64_t v28 = (void *)swift_task_alloc();
    v0[19] = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_10060BB24;
    uint64_t v29 = v0[15];
    return SFAirDropClient.cancelTransfer(_:)(v29);
  }
}

uint64_t sub_10060BB24()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_10060BD60;
  }
  else {
    uint64_t v2 = sub_10060BC54;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10060BC54()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 72) + *(void *)(v0 + 128);
  (*(void (**)(void, uint64_t))(v0 + 136))(*(void *)(v0 + 120), v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  swift_beginAccess();
  sub_10026B410(v3, v4, (uint64_t *)&unk_10096DFB0);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_10060BD60()
{
  (*(void (**)(void, void))(v0 + 136))(*(void *)(v0 + 120), *(void *)(v0 + 96));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10060BE50(uint64_t a1, double a2)
{
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR___SDShareSheetAirDropController_realName + 8);
  if (v3)
  {
    uint64_t v6 = *(void *)(v2 + OBJC_IVAR___SDShareSheetAirDropController_realName);
    uint64_t v8 = *(void *)(v2 + OBJC_IVAR___SDShareSheetAirDropController_sessionID);
    uint64_t v7 = *(void *)(v2 + OBJC_IVAR___SDShareSheetAirDropController_sessionID + 8);
    os_log_type_t v9 = (objc_class *)type metadata accessor for ShareSheetAirDropTransferUpdate();
    uint64_t v10 = (char *)objc_allocWithZone(v9);
    *(void *)&v10[OBJC_IVAR___SDShareSheetAirDropTransferUpdate_state] = 1;
    *(void *)&v10[OBJC_IVAR___SDShareSheetAirDropTransferUpdate_progress] = 0;
    uint64_t v11 = &v10[OBJC_IVAR___SDShareSheetAirDropTransferUpdate_sessionID];
    *(void *)uint64_t v11 = v8;
    *((void *)v11 + 1) = v7;
    uint64_t v12 = &v10[OBJC_IVAR___SDShareSheetAirDropTransferUpdate_realName];
    *(void *)uint64_t v12 = v6;
    *((void *)v12 + 1) = v3;
    v15.receiver = v10;
    v15.super_class = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = (char *)[super init];
    *(void *)&v13[OBJC_IVAR___SDShareSheetAirDropTransferUpdate_state] = a1;
    *(double *)&v13[OBJC_IVAR___SDShareSheetAirDropTransferUpdate_progress] = a2;
    uint64_t v14 = *(void (**)(char *))(v2 + OBJC_IVAR___SDShareSheetAirDropController_transferUpdateChangedHandler);
    if (v14)
    {
      swift_retain();
      v14(v13);
      sub_1002CA430((uint64_t)v14);
    }
  }
}

void sub_10060BF8C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SFAirDropSend.Failure();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v7 == enum case for SFAirDropSend.Failure.receiverDeclined(_:)
    || v7 == enum case for SFAirDropSend.Failure.cancelled(_:))
  {
    uint64_t v9 = 4;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v9 = 10;
  }
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR___SDShareSheetAirDropController_realName + 8);
  if (v10)
  {
    uint64_t v11 = *(void *)(v1 + OBJC_IVAR___SDShareSheetAirDropController_realName);
    uint64_t v13 = *(void *)(v1 + OBJC_IVAR___SDShareSheetAirDropController_sessionID);
    uint64_t v12 = *(void *)(v1 + OBJC_IVAR___SDShareSheetAirDropController_sessionID + 8);
    uint64_t v14 = (objc_class *)type metadata accessor for ShareSheetAirDropTransferUpdate();
    objc_super v15 = (char *)objc_allocWithZone(v14);
    *(void *)&v15[OBJC_IVAR___SDShareSheetAirDropTransferUpdate_state] = 1;
    *(void *)&v15[OBJC_IVAR___SDShareSheetAirDropTransferUpdate_progress] = 0;
    uint64_t v16 = &v15[OBJC_IVAR___SDShareSheetAirDropTransferUpdate_sessionID];
    *(void *)uint64_t v16 = v13;
    *((void *)v16 + 1) = v12;
    uint64_t v17 = &v15[OBJC_IVAR___SDShareSheetAirDropTransferUpdate_realName];
    *(void *)uint64_t v17 = v11;
    *((void *)v17 + 1) = v10;
    v20.receiver = v15;
    v20.super_class = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v18 = (char *)[super init];
    *(void *)&v18[OBJC_IVAR___SDShareSheetAirDropTransferUpdate_state] = v9;
    *(void *)&v18[OBJC_IVAR___SDShareSheetAirDropTransferUpdate_progress] = 0;
    os_log_type_t v19 = *(void (**)(char *))(v1 + OBJC_IVAR___SDShareSheetAirDropController_transferUpdateChangedHandler);
    if (v19)
    {
      swift_retain();
      v19(v18);
      sub_1002CA430((uint64_t)v19);
    }
  }
}

uint64_t sub_10060C1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  uint64_t v6 = type metadata accessor for ContinuousClock();
  v5[6] = v6;
  v5[7] = *(void *)(v6 - 8);
  v5[8] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for UUID();
  v5[9] = v7;
  v5[10] = *(void *)(v7 - 8);
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  return _swift_task_switch(sub_10060C2E4, 0, 0);
}

uint64_t sub_10060C2E4()
{
  uint64_t v21 = v0;
  if (qword_10096A090 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v5 = type metadata accessor for Logger();
  v0[13] = sub_10000B47C(v5, (uint64_t)qword_10097C1B0);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[14] = v6;
  v0[15] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v1, v3);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[12];
  uint64_t v11 = v0[9];
  uint64_t v12 = v0[10];
  if (v9)
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    sub_10061044C((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[3] = sub_100254634(v14, v15, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v16(v10, v11);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "will end currentNearbySharingInteraction:%s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v16(v10, v11);
  }

  v0[16] = v16;
  ContinuousClock.init()();
  os_log_type_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
  uint64_t v17 = (void *)swift_task_alloc();
  v0[17] = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_10060C5C8;
  return v19(2000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_10060C5C8()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v3 = v2[8];
  uint64_t v4 = v2[7];
  uint64_t v5 = v2[6];
  if (v0)
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_100611B04;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_10060C760;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_10060C760()
{
  v0[18] = *(void *)(v0[5] + OBJC_IVAR___SDShareSheetAirDropController_airDropClient);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[19] = v1;
  void *v1 = v0;
  v1[1] = sub_10060C818;
  uint64_t v2 = v0[4];
  return SFAirDropClient.endNearbySharingInteraction(_:)(v2);
}

uint64_t sub_10060C818()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10060CB5C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_10060C934;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10060C934()
{
  uint64_t v12 = v0;
  (*(void (**)(void, void, void))(v0 + 112))(*(void *)(v0 + 88), *(void *)(v0 + 32), *(void *)(v0 + 72));
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 88);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 128);
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_10061044C((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v6 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 16) = sub_100254634(v6, v7, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v10(v3, v4);
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "did end currentNearbySharingInteraction:%s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v0 + 128))(*(void *)(v0 + 88), *(void *)(v0 + 72));
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_10060CB5C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10060CBE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for SFAirDrop.NearbySharingDiscovery.PollingType();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFAirDrop.NearbySharingDiscovery.Request();
  v4[6] = v6;
  v4[7] = *(void *)(v6 - 8);
  v4[8] = swift_task_alloc();
  return _swift_task_switch(sub_10060CD04, 0, 0);
}

uint64_t sub_10060CD04()
{
  uint64_t v1 = v0[2];
  (*(void (**)(void, void, void))(v0[4] + 104))(v0[5], enum case for SFAirDrop.NearbySharingDiscovery.PollingType.automatic(_:), v0[3]);
  SFAirDrop.NearbySharingDiscovery.Request.init(pollingType:applicationLabel:)();
  v0[9] = *(void *)(v1 + OBJC_IVAR___SDShareSheetAirDropController_airDropClient);
  swift_retain();
  os_log_type_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  *os_log_type_t v2 = v0;
  v2[1] = sub_10060CE10;
  uint64_t v3 = v0[8];
  return SFAirDropClient.startNearbySharingDiscovery(request:)(v3);
}

uint64_t sub_10060CE10()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    os_log_type_t v2 = sub_10060CFC8;
  }
  else {
    os_log_type_t v2 = sub_10060CF40;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10060CF40()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10060CFC8()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_10060D050()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100394300();
  uint64_t v5 = (void *)static NSUserDefaults.airdrop.getter();
  char v6 = SFAirDropUserDefaults.boopToAirDropEnabled.getter();

  if (v6)
  {
    uint64_t v7 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
    uint64_t v8 = *(void *)(v1 + OBJC_IVAR___SDShareSheetAirDropController_airDropClient);
    uint64_t v9 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    swift_retain();
    uint64_t v10 = static MainActor.shared.getter();
    uint64_t v11 = (void *)swift_allocObject();
    void v11[2] = v10;
    v11[3] = &protocol witness table for MainActor;
    v11[4] = v8;
    v11[5] = v9;
    swift_release();
    *(void *)(v1 + OBJC_IVAR___SDShareSheetAirDropController_updateNearbySharingInteractionsTask) = sub_10028CFA8((uint64_t)v4, (uint64_t)&unk_10097C2F8, (uint64_t)v11);
    swift_release();
  }
}

uint64_t sub_10060D1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_10060D20C, 0, 0);
}

uint64_t sub_10060D20C()
{
  v0[3] = *(void *)(v0[2] + OBJC_IVAR___SDShareSheetAirDropController_airDropClient);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_10060D2D4;
  return SFAirDropClient.stopNearbySharingDiscovery(applicationLabel:)(0x6568736572616873, 0xEA00000000007465);
}

uint64_t sub_10060D2D4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10060D410, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_10060D410()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10060D474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a5;
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_10097C300);
  v5[11] = v6;
  v5[12] = *(void *)(v6 - 8);
  uint64_t v7 = swift_task_alloc();
  v5[13] = v7;
  v5[14] = type metadata accessor for MainActor();
  v5[15] = static MainActor.shared.getter();
  uint64_t v8 = (void *)swift_task_alloc();
  v5[16] = v8;
  *uint64_t v8 = v5;
  v8[1] = sub_10060D59C;
  return SFAirDropClient.nearbySharingInteractions()(v7);
}

uint64_t sub_10060D59C()
{
  uint64_t v2 = (void *)*v1;
  v2[17] = v0;
  swift_task_dealloc();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[18] = v4;
  v2[19] = v3;
  if (v0) {
    uint64_t v5 = sub_10060DEC8;
  }
  else {
    uint64_t v5 = sub_10060D6FC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10060D6FC()
{
  v0[7] = SFXPCResilientAsyncSequence.makeAsyncIterator()();
  swift_beginAccess();
  v0[20] = static MainActor.shared.getter();
  uint64_t v1 = sub_10000A844(&qword_10097C310);
  uint64_t v2 = sub_1002AE308(&qword_10097C318, &qword_10097C310);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[21] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10060D830;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 8, v1, v2);
}

uint64_t sub_10060D830()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 160);
  if (v0)
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v6 = v5;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v7 = sub_10060DBD8;
  }
  else
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v6 = v8;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v7 = sub_10060D9C8;
  }
  return _swift_task_switch(v7, v4, v6);
}

uint64_t sub_10060D9C8()
{
  swift_release();
  v0[23] = v0[8];
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[19];
  return _swift_task_switch(sub_10060DA34, v1, v2);
}

uint64_t sub_10060DA34()
{
  uint64_t v1 = v0[23];
  if (v1)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v3 = (void *)Strong;
      sub_10060E0F8(v1);
    }
    swift_bridgeObjectRelease();
    v0[20] = static MainActor.shared.getter();
    uint64_t v4 = sub_10000A844(&qword_10097C310);
    uint64_t v5 = sub_1002AE308(&qword_10097C318, &qword_10097C310);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[21] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_10060D830;
    return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 8, v4, v5);
  }
  else
  {
    uint64_t v8 = v0[12];
    uint64_t v7 = v0[13];
    uint64_t v9 = v0[11];
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_10060DBD8()
{
  v0[9] = v0[22];
  sub_10000A844(&qword_10096BAF0);
  swift_willThrowTypedImpl();
  swift_release();
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[19];
  return _swift_task_switch(sub_10060DC6C, v1, v2);
}

uint64_t sub_10060DC6C()
{
  unint64_t v15 = v0;
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = v0[22];
  if (qword_10096A090 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000B47C(v5, (uint64_t)qword_10097C1B0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v14 = v9;
    v0[5] = v4;
    swift_errorRetain();
    sub_10000A844(&qword_10096BAF0);
    uint64_t v10 = String.init<A>(reflecting:)();
    v0[6] = sub_100254634(v10, v11, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error registering for updates to nearby sharing interactions: %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_10060DEC8()
{
  unint64_t v11 = v0;
  swift_release();
  uint64_t v1 = v0[17];
  if (qword_10096A090 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097C1B0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    v0[5] = v1;
    swift_errorRetain();
    sub_10000A844(&qword_10096BAF0);
    uint64_t v6 = String.init<A>(reflecting:)();
    v0[6] = sub_100254634(v6, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Error registering for updates to nearby sharing interactions: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

void sub_10060E0F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DeviceLockState();
  uint64_t v64 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v63 = (char *)v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v58 - v5;
  uint64_t v7 = type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType();
  uint64_t v67 = *(void *)(v7 - 8);
  uint64_t v68 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  unint64_t v65 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v66 = (char *)v58 - v10;
  uint64_t v11 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v69 = (char *)v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for SFAirDrop.NearbySharingInteraction.State();
  uint64_t v75 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  os_log_type_t v74 = (char *)v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext();
  uint64_t v71 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v70 = (char *)v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10000A844((uint64_t *)&unk_10096C2A0);
  __chkstk_darwin(v21 - 8);
  int v73 = (char *)v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A090 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for Logger();
  sub_10000B47C(v23, (uint64_t)qword_10097C1B0);
  swift_bridgeObjectRetain_n();
  unint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v72 = v19;
  if (!v26)
  {

    swift_bridgeObjectRelease_n();
    if (!*(void *)(a1 + 16)) {
      return;
    }
LABEL_7:
    uint64_t v36 = type metadata accessor for SFAirDrop.NearbySharingInteraction();
    uint64_t v37 = *(void *)(v36 - 8);
    uint64_t v38 = a1 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
    uint64_t v39 = (uint64_t)v73;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v73, v38, v36);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v39, 0, 1, v36);
    uint64_t v40 = v76 + OBJC_IVAR___SDShareSheetAirDropController_currentNearbySharingInteraction;
    swift_beginAccess();
    sub_10026B410(v39, v40, (uint64_t *)&unk_10096C2A0);
    swift_endAccess();
    uint64_t v41 = v74;
    SFAirDrop.NearbySharingInteraction.state.getter();
    uint64_t v42 = v75;
    if ((*(unsigned int (**)(char *, uint64_t))(v75 + 88))(v41, v17) != enum case for SFAirDrop.NearbySharingInteraction.State.connected(_:))
    {
      (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v17);
      return;
    }
    (*(void (**)(char *, uint64_t))(v42 + 96))(v41, v17);
    uint64_t v43 = v70;
    uint64_t v44 = v71;
    uint64_t v45 = v72;
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v70, v41, v72);
    SFAirDrop.NearbySharingInteraction.ConnectionContext.endpointIdentifier.getter();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {
      (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v45);
      sub_10000A7E8((uint64_t)v13, &qword_100974EA0);
      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v69, v13, v14);
    SFAirDrop.NearbySharingInteraction.ConnectionContext.type.getter();
    (*(void (**)(char *, void, uint64_t))(v67 + 104))(v65, enum case for SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType.airDrop(_:), v68);
    sub_10061044C(&qword_10096C5D0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    if (v79[0] == v77 && v79[1] == v78)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v46 = v68;
      uint64_t v47 = *(void (**)(char *, uint64_t))(v67 + 8);
      v47(v65, v68);
      v47(v66, v46);
    }
    else
    {
      char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v49 = v68;
      uint64_t v50 = *(void (**)(char *, uint64_t))(v67 + 8);
      v50(v65, v68);
      v50(v66, v49);
      if ((v48 & 1) == 0)
      {
LABEL_18:
        (*(void (**)(char *, uint64_t))(v15 + 8))(v69, v14);
        (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v72);
        return;
      }
    }
    dispatch thunk of SFLockStateMonitor.lockState.getter();
    unint64_t v52 = v63;
    uint64_t v51 = v64;
    (*(void (**)(char *, void, uint64_t))(v64 + 104))(v63, enum case for DeviceLockState.unlocked(_:), v2);
    char v53 = static DeviceLockState.== infix(_:_:)();
    uint64_t v54 = *(void (**)(char *, uint64_t))(v51 + 8);
    v54(v52, v2);
    v54(v6, v2);
    if (v53)
    {
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v56 = (void *)Strong;
        Class isa = UUID._bridgeToObjectiveC()().super.isa;
        [v56 didConnectNearbySharingInteractionWithEndpointUUID:isa];
        swift_unknownObjectRelease();
      }
    }
    goto LABEL_18;
  }
  uint64_t v59 = v13;
  uint64_t v27 = v17;
  uint64_t v28 = swift_slowAlloc();
  uint64_t v61 = v14;
  uint64_t v29 = (uint8_t *)v28;
  uint64_t v30 = swift_slowAlloc();
  uint64_t v60 = v15;
  v79[0] = v30;
  *(_DWORD *)uint64_t v29 = 136315138;
  v58[1] = v29 + 4;
  type metadata accessor for SFAirDrop.NearbySharingInteraction();
  swift_bridgeObjectRetain();
  uint64_t v31 = Array.description.getter();
  uint64_t v62 = v6;
  uint64_t v32 = v2;
  unint64_t v34 = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = v31;
  uint64_t v17 = v27;
  uint64_t v13 = v59;
  uint64_t v77 = sub_100254634(v35, v34, v79);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease_n();
  uint64_t v2 = v32;
  uint64_t v6 = v62;
  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v24, v25, "Boop2ShareSheet: Nearby sharing interactions changed: %s", v29, 0xCu);
  swift_arrayDestroy();
  uint64_t v15 = v60;
  swift_slowDealloc();
  uint64_t v14 = v61;
  swift_slowDealloc();

  if (*(void *)(a1 + 16)) {
    goto LABEL_7;
  }
}

uint64_t sub_10060EC00()
{
  return type metadata accessor for ShareSheetAirDropController(0);
}

uint64_t type metadata accessor for ShareSheetAirDropController(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10097C228);
}

void sub_10060EC28()
{
  sub_100610154(319, (unint64_t *)&qword_100974CC0, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier);
  if (v0 <= 0x3F)
  {
    sub_100610154(319, &qword_10097C240, (void (*)(uint64_t))&type metadata accessor for SFAirDrop.NearbySharingInteraction);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10060ED8C()
{
  uint64_t v1 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DeviceLockState();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for DeviceLockState.unlocked(_:), v4);
  char v8 = static DeviceLockState.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v3, 1, 1, v9);
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = v0;
    uint64_t v11 = v0;
    sub_10028CAC4((uint64_t)v3, (uint64_t)&unk_10097C2E0, (uint64_t)v10);
    swift_release();
    sub_10060D050();
  }
  else
  {
    uint64_t v12 = OBJC_IVAR___SDShareSheetAirDropController_updateNearbySharingInteractionsTask;
    if (*(void *)&v0[OBJC_IVAR___SDShareSheetAirDropController_updateNearbySharingInteractionsTask])
    {
      swift_retain();
      Task.cancel()();
      swift_release();
    }
    *(void *)&v0[v12] = 0;
    swift_release();
    uint64_t v13 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v3, 1, 1, v13);
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = 0;
    v14[3] = 0;
    v14[4] = v0;
    uint64_t v15 = v0;
    sub_10028CAC4((uint64_t)v3, (uint64_t)&unk_10097C2D0, (uint64_t)v14);
    swift_release();
  }
}

uint64_t type metadata accessor for ShareSheetAirDropTransferUpdate()
{
  return self;
}

id sub_10060F4D8(uint64_t a1, uint64_t a2, void *a3)
{
  if (*(void *)(a1 + *a3 + 8))
  {
    swift_bridgeObjectRetain();
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v3 = 0;
  }

  return v3;
}

uint64_t sub_10060F550(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  char v8 = (uint64_t *)(a1 + *a4);
  *char v8 = v6;
  v8[1] = v7;

  return swift_bridgeObjectRelease();
}

id sub_10060F6F0()
{
  swift_bridgeObjectRetain();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_10060FCBC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  _StringGuts.grow(_:)(29);
  uint64_t v15 = v13;
  unint64_t v16 = v14;
  v6._id object = (void *)0x80000001007C4580;
  v6._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v6);
  uint64_t v7 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_endpointUUID;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
  sub_10061044C((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9._countAndFlagsBits = 32;
  v9._id object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  long long v12 = *(_OWORD *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_displayName);
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  v10._countAndFlagsBits = 62;
  v10._id object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  return v15;
}

uint64_t sub_10060FFF8()
{
  return type metadata accessor for ShareSheetAirDropNode(0);
}

uint64_t type metadata accessor for ShareSheetAirDropNode(uint64_t a1)
{
  return sub_10000B93C(a1, (uint64_t *)&unk_10097C2B8);
}

void sub_100610020()
{
  sub_100610154(319, (unint64_t *)&qword_10096C2B0, (void (*)(uint64_t))&type metadata accessor for UUID);
  if (v0 <= 0x3F)
  {
    type metadata accessor for UUID();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100610154(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1006101AC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000A6F0;
  v3[2] = v2;
  return _swift_task_switch(sub_10060D20C, 0, 0);
}

uint64_t sub_100610258(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F0;
  return sub_10060CBE8(a1, v4, v5, v6);
}

uint64_t sub_10061030C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100610344()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10061038C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  Swift::String v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *Swift::String v8 = v2;
  v8[1] = sub_10000A6F0;
  return sub_10060D474(a1, v4, v5, v7, v6);
}

uint64_t sub_10061044C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100610498(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F4;
  return sub_10060B5A4(a1, v4, v5, v6);
}

uint64_t sub_10061054C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  unint64_t v5 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  unint64_t v6 = *(void *)(v0 + v5 + 8);
  if (v6 >> 60 != 15) {
    sub_100250CC4(*(void *)(v0 + v5), v6);
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 16, v3 | 7);
}

uint64_t sub_100610674(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = (uint64_t)v1 + v4;
  uint64_t v11 = *(void *)((char *)v1 + v5);
  uint64_t v12 = *(void *)((char *)v1 + v6);
  uint64_t v13 = *(void *)((char *)v1 + v6 + 8);
  unint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *unint64_t v14 = v2;
  v14[1] = sub_10000A6F0;
  return sub_100608188(a1, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_1006107E4()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1006108CC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10000A6F0;
  return sub_10060C1B8(a1, v6, v7, v8, v9);
}

uint64_t sub_1006109F4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F4;
  return sub_100607CE4(a1, v4, v5, v6);
}

uint64_t sub_100610AAC()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100610AF4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_100606834(a1, v4, v5, v6, v7, v8);
}

void sub_100610BBC(uint64_t a1)
{
}

id sub_100610BC8(uint64_t a1, unint64_t a2)
{
  if (&protocol conformance descriptor for iosmacHardware) {
    BOOL v2 = &protocol conformance descriptor for iosmacHardware == 0;
  }
  else {
    BOOL v2 = 1;
  }
  if (v2
    || &type metadata accessor for iosmacHardware == 0
    || &type metadata for iosmacHardware == 0
    || &nominal type descriptor for iosmacHardware == 0)
  {
    if (qword_10096A090 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000B47C(v13, (uint64_t)qword_10097C1B0);
    unint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v14, v15)) {
      goto LABEL_21;
    }
    unint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "ProductKit not available on this platform", v16, 2u);
    goto LABEL_20;
  }
  uint64_t v8 = sub_10000A844(&qword_10097C408);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  iosmacHardware.init(_:)();
  uint64_t v11 = type metadata accessor for iosmacHardware();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10000A7E8((uint64_t)v10, &qword_10097C408);
LABEL_26:
    if (qword_10096A090 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_10000B47C(v26, (uint64_t)qword_10097C1B0);
    swift_bridgeObjectRetain_n();
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_100254634(a1, a2, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Missing image for device model %s", v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return 0;
    }

LABEL_31:
    swift_bridgeObjectRelease_n();
    return 0;
  }
  uint64_t v17 = iosmacHardware.imageName.getter();
  unint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  if (!v19) {
    goto LABEL_26;
  }
  type metadata accessor for ProductKitCatalog();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v21 = self;
  swift_bridgeObjectRetain();
  id v22 = [v21 bundleForClass:ObjCClassFromMetadata];
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unint64_t v14 = [self imageNamed:v23 inBundle:v22];

  if (!v14)
  {
    if (qword_10096A090 != -1) {
      swift_once();
    }
    uint64_t v31 = type metadata accessor for Logger();
    sub_10000B47C(v31, (uint64_t)qword_10097C1B0);
    swift_bridgeObjectRetain();
    unint64_t v14 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v14, v32))
    {

      goto LABEL_31;
    }
    unint64_t v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    *(_DWORD *)unint64_t v33 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_100254634(v17, v19, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v14, v32, "Missing image in catalog %s", v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
LABEL_20:
    swift_slowDealloc();
LABEL_21:

    return 0;
  }
  swift_bridgeObjectRelease();
  id v24 = [v14 CGImage];
  if (!v24)
  {
    if (qword_10096A090 != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    sub_10000B47C(v34, (uint64_t)qword_10097C1B0);
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Failed to create CGImage", v37, 2u);
      swift_slowDealloc();
    }

    goto LABEL_21;
  }
  id v25 = v24;

  return v25;
}

id sub_100611244(uint64_t a1, void *a2)
{
  uint64_t v71 = a2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(&v2[OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_nodeIdentifier], 1, 1, v4);
  uint64_t v72 = (uint64_t *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_contactIdentifier];
  *(_OWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_contactIdentifier] = xmmword_10077EF30;
  uint64_t v8 = (uint64_t *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_displayName];
  *(_OWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_displayName] = xmmword_10077EF30;
  uint64_t v9 = (uint64_t *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_realName];
  *uint64_t v9 = 0;
  v9[1] = 0;
  uint64_t v68 = (uint64_t *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_model];
  *(_OWORD *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_model] = xmmword_10077EF30;
  *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_formattedHandles] = &_swiftEmptySetSingleton;
  uint64_t v10 = OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_suggestionIndex;
  id v11 = objc_allocWithZone((Class)NSNumber);
  uint64_t v12 = v2;
  *(void *)&v2[v10] = [v11 initWithInteger:0];
  uint64_t v13 = &v12[OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_transportBundleID];
  *(void *)uint64_t v13 = 0xD000000000000020;
  *((void *)v13 + 1) = 0x80000001007C46B0;
  v12[OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_isClassroom] = 0;
  v12[OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_isDisabled] = 0;
  v12[OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_isSuggestion] = 0;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_selectionReason] = 0;
  uint64_t v69 = OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_displayIcon;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_displayIcon] = 0;
  uint64_t v70 = OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_contact;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_contact] = 0;
  uint64_t v14 = sub_10032439C(a1);
  if (v15) {
    uint64_t v16 = v14;
  }
  else {
    uint64_t v16 = 0;
  }
  unint64_t v17 = 0xE000000000000000;
  if (v15) {
    unint64_t v17 = v15;
  }
  *uint64_t v8 = v16;
  v8[1] = v17;
  swift_bridgeObjectRelease();
  NWEndpoint.endpointUUID()();
  unint64_t v18 = v12;
  unint64_t v19 = &v12[OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_endpointUUID];
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v12[OBJC_IVAR____TtC16DaemoniOSLibrary21ShareSheetAirDropNode_endpointUUID], v7, v4);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v19, v4);
  uint64_t v20 = UUID.uuidString.getter();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *uint64_t v9 = v20;
  v9[1] = v22;
  uint64_t v23 = a1;
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_1003243B4(a1);
  if (v25)
  {
    uint64_t v26 = v24;
    unint64_t v27 = v25;
    if ((v24 != 63 || v25 != 0xE100000000000000) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v50 = v68;
      *uint64_t v68 = v26;
      v50[1] = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v71)
      {
        id v51 = sub_100610BC8(v26, v27);
        swift_bridgeObjectRelease();
        uint64_t v35 = v18;
        unint64_t v52 = *(void **)&v18[v69];
        *(void *)&v18[v69] = v51;
        goto LABEL_33;
      }
      swift_bridgeObjectRelease();
LABEL_36:
      uint64_t v35 = v12;
      goto LABEL_37;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v28 = sub_100324384(a1);
  if (!v29) {
    goto LABEL_36;
  }
  uint64_t v30 = v28;
  unint64_t v31 = v29;
  os_log_type_t v32 = v72;
  *uint64_t v72 = v28;
  v32[1] = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id result = [self sharedMonitor];
  if (result)
  {
    uint64_t v34 = result;
    uint64_t v35 = v12;
    NSString v36 = String._bridgeToObjectiveC()();
    id v37 = [v34 contactWithContactIdentifier:v36];

    if (!v37)
    {

      if (qword_10096A090 != -1) {
        swift_once();
      }
      uint64_t v46 = type metadata accessor for Logger();
      sub_10000B47C(v46, (uint64_t)qword_10097C1B0);
      swift_bridgeObjectRetain();
      uint64_t v47 = Logger.logObject.getter();
      os_log_type_t v48 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = (uint8_t *)swift_slowAlloc();
        uint64_t v75 = swift_slowAlloc();
        *(_DWORD *)uint64_t v49 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v74 = sub_100254634(v30, v31, &v75);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v47, v48, "Failed to find contact with identifier: %s", v49, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      goto LABEL_38;
    }
    uint64_t v38 = *(void **)&v12[v70];
    *(void *)&v12[v70] = v37;
    id v39 = v37;

    id v40 = [self stringFromContact:v39 style:0];
    if (v40)
    {
      uint64_t v41 = v40;
      swift_bridgeObjectRelease();
      uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v44 = v43;

      *uint64_t v8 = v42;
      v8[1] = v44;
      swift_bridgeObjectRelease();
      uint64_t v45 = v71;
      if (!v71) {
        goto LABEL_34;
      }
    }
    else
    {
      if (qword_10096A090 != -1) {
        swift_once();
      }
      uint64_t v53 = type metadata accessor for Logger();
      sub_10000B47C(v53, (uint64_t)qword_10097C1B0);
      swift_bridgeObjectRetain();
      uint64_t v54 = Logger.logObject.getter();
      os_log_type_t v55 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v56 = (uint8_t *)swift_slowAlloc();
        uint64_t v75 = swift_slowAlloc();
        *(_DWORD *)uint64_t v56 = 136315138;
        uint64_t v72 = (uint64_t *)(v56 + 4);
        swift_bridgeObjectRetain();
        uint64_t v74 = sub_100254634(v30, v31, &v75);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v54, v55, "No name for contact with identifier: %s", v56, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v45 = v71;
        if (!v71) {
          goto LABEL_34;
        }
      }
      else
      {

        swift_bridgeObjectRelease_n();
        uint64_t v45 = v71;
        if (!v71)
        {
LABEL_34:

LABEL_37:
          goto LABEL_38;
        }
      }
    }
    uint64_t v57 = sub_1000509EC(v39, 1, 0, v45);
    if (!v57) {
      goto LABEL_34;
    }
    id v58 = v57;
    uint64_t v59 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v61 = v60;

    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100250CC4(v59, v61);
    uint64_t v63 = (void *)SFCreateCGImageFromData();

    if (!v63) {
      goto LABEL_34;
    }
    id v64 = v63;

    unint64_t v52 = *(void **)&v35[v69];
    *(void *)&v35[v69] = v63;
LABEL_33:

LABEL_38:
    v76.receiver = v35;
    v76.super_class = ObjectType;
    id v65 = [super init];
    uint64_t v66 = type metadata accessor for NWEndpoint();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v66 - 8) + 8))(v23, v66);
    return v65;
  }
  __break(1u);
  return result;
}

uint64_t sub_100611AAC()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100611AE4(uint64_t a1)
{
  sub_100606288(a1, *(void *)(v1 + 16));
}

uint64_t sub_100611AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100611AFC()
{
  return swift_release();
}

unsigned char *_s7FeatureOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *id result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100611BE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s7FeatureOMa()
{
  return &_s7FeatureON;
}

uint64_t sub_100611C18(unsigned __int8 a1)
{
  int v2 = SFDeviceClassCodeGet();
  if (!v2) {
    return 2;
  }
  int v3 = v2;
  Swift::Int v4 = sub_1002CC2E4((uint64_t)off_1008E24F0[(char)a1]);
  BOOL v5 = sub_10057C25C(v3, v4);
  swift_bridgeObjectRelease();
  if (v5) {
    return 1;
  }
  if (a1 - 2 >= 2)
  {
    if (!a1 || v3 != 1) {
      return 2;
    }
    return 0;
  }
  if (v3 == 8 || (SFDeviceIsRealityDevice() & 1) != 0) {
    return 0;
  }
  return 2;
}

uint64_t sub_100611CC4(unsigned __int8 *a1, char *a2)
{
  return sub_1005E8FB4(*a1, *a2);
}

Swift::Int sub_100611CD0()
{
  return Hasher._finalize()();
}

uint64_t sub_100611DCC()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100611EB0()
{
  return Hasher._finalize()();
}

unint64_t sub_100611FA8@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10061224C(*a1);
  *a2 = result;
  return result;
}

void sub_100611FD8(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEE00656E6F68506BLL;
      uint64_t v3 = 0x636F6C6E5563616DLL;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "unlockClassC");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 3:
      *(void *)a1 = 0x646F4D7473657567;
      *(void *)(a1 + 8) = 0xEF6B636F6C6E5565;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_100612094()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1006120F4()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_100612148()
{
  unint64_t result = qword_10097C420;
  if (!qword_10097C420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097C420);
  }
  return result;
}

uint64_t sub_10061219C()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x636F6C6E5563616DLL;
      break;
    case 2:
      uint64_t result = 0x6C436B636F6C6E75;
      break;
    case 3:
      uint64_t result = 0x646F4D7473657567;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10061224C(Swift::String string)
{
  id object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._id object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008D3800, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

unint64_t sub_100612298()
{
  unint64_t result = qword_10097C428;
  if (!qword_10097C428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097C428);
  }
  return result;
}

void sub_1006122EC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for AuthenticationDevice();
  uint64_t v10 = a3 + v9[9];
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = (void *)(a3 + v9[10]);
  *uint64_t v12 = 0;
  v12[1] = 0;
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  long long v16 = xmmword_10077EF30;
  *(_OWORD *)(a3 + 16) = xmmword_10077EF30;
  *(_OWORD *)(a3 + 32) = xmmword_10077EF30;
  *(_WORD *)(a3 + 48) = 0;
  swift_bridgeObjectRetain();
  UUID.init(uuidString:)();
  sub_10061390C((uint64_t)v8, v10);
  swift_bridgeObjectRelease();
  *(_OWORD *)uint64_t v12 = v16;
  uint64_t v13 = (void *)(a3 + v9[11]);
  *uint64_t v13 = 0;
  v13[1] = 0;
  v13[2] = 0;
  id v14 = [objc_allocWithZone((Class)RPCompanionLinkDevice) init];
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v14 setIdentifier:v15];

  *(void *)(a3 + v9[12]) = v14;
}

uint64_t sub_100612494(uint64_t a1, uint64_t a2)
{
  return sub_1006125D4(a1, a2, (SEL *)&selRef_uniqueIDOverride);
}

uint64_t sub_1006124A0(uint64_t a1, uint64_t a2)
{
  return sub_1006125D4(a1, a2, (SEL *)&selRef_modelIdentifier);
}

uint64_t sub_1006124AC(uint64_t a1, uint64_t a2)
{
  return sub_1006125D4(a1, a2, (SEL *)&selRef_productBuildVersion);
}

id sub_1006124B8()
{
  return [*v0 isActive];
}

id sub_1006124DC()
{
  return [*v0 isNearby];
}

uint64_t sub_100612500@<X0>(uint64_t a1@<X8>)
{
  id v3 = [*v1 nsuuid];
  if (v3)
  {
    Swift::Int v4 = v3;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v5 = type metadata accessor for UUID();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = type metadata accessor for UUID();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

uint64_t sub_1006125C8(uint64_t a1, uint64_t a2)
{
  return sub_1006125D4(a1, a2, (SEL *)&selRef_name);
}

uint64_t sub_1006125D4(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [*v3 *a3];
  if (!v4) {
    return 0;
  }
  uint64_t v5 = v4;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v6;
}

uint64_t sub_100612638()
{
  [*v0 operatingSystemVersion];
  return v2;
}

uint64_t sub_100612670()
{
  id v1 = [*v0 description];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

void *sub_1006126C8(uint64_t a1, uint64_t *a2, int *a3)
{
  id v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *id v4 = *a2;
    id v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[4];
    uint64_t v10 = a2[5];
    *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
    uint64_t v11 = a3[9];
    __dst = (void *)(a1 + v11);
    uint64_t v12 = (char *)a2 + v11;
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    uint64_t v13 = type metadata accessor for UUID();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v28 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28(v12, 1, v13))
    {
      uint64_t v15 = sub_10000A844(&qword_100974EA0);
      memcpy(__dst, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    uint64_t v17 = a3[10];
    uint64_t v18 = a3[11];
    unint64_t v19 = (void *)((char *)v4 + v17);
    uint64_t v20 = (uint64_t *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    *unint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = (char *)v4 + v18;
    uint64_t v23 = (uint64_t)a2 + v18;
    *((void *)v22 + 2) = *(void *)(v23 + 16);
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    uint64_t v24 = a3[12];
    unint64_t v25 = *(void **)((char *)a2 + v24);
    *(void *)((char *)v4 + v24) = v25;
    swift_bridgeObjectRetain();
    id v26 = v25;
  }
  return v4;
}

void sub_1006128D0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a1 + *(int *)(a2 + 48));
}

uint64_t sub_1006129C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  uint64_t v9 = a3[9];
  __dst = (void *)(a1 + v9);
  uint64_t v10 = (const void *)(a2 + v9);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_10000A844(&qword_100974EA0);
    memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v15 = a3[10];
  uint64_t v16 = a3[11];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a1 + v16;
  uint64_t v21 = a2 + v16;
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  uint64_t v22 = a3[12];
  uint64_t v23 = *(void **)(a2 + v22);
  *(void *)(a1 + v22) = v23;
  swift_bridgeObjectRetain();
  id v24 = v23;
  return a1;
}

uint64_t sub_100612B6C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_10000A844(&qword_100974EA0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[10];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[11];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  v19[2] = v20[2];
  uint64_t v21 = a3[12];
  uint64_t v22 = *(void **)(a2 + v21);
  uint64_t v23 = *(void **)(a1 + v21);
  *(void *)(a1 + v21) = v22;
  id v24 = v22;

  return a1;
}

uint64_t sub_100612DC4(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  uint64_t v7 = a3[9];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10000A844(&qword_100974EA0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_100612F28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  uint64_t v9 = a3[9];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_10000A844(&qword_100974EA0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  uint64_t v18 = a3[10];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[11];
  uint64_t v24 = a3[12];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *(void *)(v25 + 16) = *(void *)(v26 + 16);
  unint64_t v27 = *(void **)(a1 + v24);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);

  return a1;
}

uint64_t sub_100613130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100613144);
}

uint64_t sub_100613144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000A844(&qword_100974EA0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 36);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 48));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_10061320C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100613220);
}

uint64_t sub_100613220(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10000A844(&qword_100974EA0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 36);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 48)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for AuthenticationDevice()
{
  uint64_t result = qword_10097C488;
  if (!qword_10097C488) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100613330()
{
  sub_1006133F0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1006133F0()
{
  if (!qword_10096C2B0)
  {
    type metadata accessor for UUID();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10096C2B0);
    }
  }
}

double sub_100613448@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for AuthenticationDevice();
  uint64_t v8 = a2 + v7[9];
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(void *)(a2 + v7[12]) = a1;
  id v10 = a1;
  id v11 = [v10 name];
  if (v11)
  {
    unint64_t v12 = v11;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;
  }
  else
  {
    unint64_t v15 = 0xE90000000000003ELL;
    uint64_t v13 = 0x676E697373696D3CLL;
  }
  int v16 = (uint64_t *)(a2 + v7[10]);
  *int v16 = v13;
  v16[1] = v15;
  id v17 = [v10 idsDeviceIdentifier];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;
  }
  else
  {
    uint64_t v19 = 0;
    unint64_t v21 = 0xE000000000000000;
  }
  *(void *)a2 = v19;
  *(void *)(a2 + 8) = v21;
  id v22 = [v10 model];
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v26 = v25;
  }
  else
  {
    uint64_t v24 = 0;
    unint64_t v26 = 0xE000000000000000;
  }
  *(void *)(a2 + 16) = v24;
  *(void *)(a2 + 24) = v26;
  id v27 = [v10 sourceVersion];
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v31 = v30;

    *(void *)&long long v46 = 0x2D74726F70706152;
    *((void *)&v46 + 1) = 0xE800000000000000;
    v32._countAndFlagsBits = v29;
    v32._id object = v31;
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
    unint64_t v34 = *((void *)&v46 + 1);
    uint64_t v33 = v46;
  }
  else
  {
    uint64_t v33 = 0;
    unint64_t v34 = 0xE000000000000000;
  }
  *(void *)(a2 + 32) = v33;
  *(void *)(a2 + 40) = v34;
  *(_WORD *)(a2 + 48) = 0;
  id v35 = [v10 idsDeviceIdentifier];
  if (v35)
  {
    NSString v36 = v35;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  sub_10061390C((uint64_t)v6, v8);
  id v37 = [v10 name];
  if (v37)
  {
    uint64_t v38 = v37;
    uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v41 = v40;
  }
  else
  {
    uint64_t v39 = 0;
    unint64_t v41 = 0xE000000000000000;
  }
  swift_bridgeObjectRelease();
  *int v16 = v39;
  v16[1] = v41;
  [v10 operatingSystemVersion];
  uint64_t v42 = v47;
  long long v45 = v46;

  uint64_t v43 = a2 + v7[11];
  double result = *(double *)&v45;
  *(_OWORD *)uint64_t v43 = v45;
  *(void *)(v43 + 16) = v42;
  return result;
}

uint64_t sub_100613768()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100613798()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1006137C8()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1006137F8()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_100613800()
{
  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t sub_100613808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10043661C(v2 + *(int *)(a1 + 36), a2);
}

uint64_t sub_100613818(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_100613850(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 44));
}

uint64_t sub_100613864(uint64_t a1)
{
  id v2 = [*(id *)(v1 + *(int *)(a1 + 48)) description];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1006138C0(void *a1, void *a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a2[1];
  uint64_t result = (v4 | v5) == 0;
  if (v4) {
    BOOL v7 = v5 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
    if (*a1 == *a2 && v4 == v5) {
      return 1;
    }
    else {
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  return result;
}

uint64_t sub_10061390C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_100974EA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100613974()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097C4E0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097C4E0);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100613A3C(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = type metadata accessor for SFAirDrop.TransferIdentifier();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SFAirDropReceive.AskRequest();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v2[12] = v5;
  v2[13] = *(void *)(v5 - 8);
  v2[14] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_10096AC10);
  v2[15] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferType();
  v2[16] = v6;
  v2[17] = *(void *)(v6 - 8);
  v2[18] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v7 = static AirDropActor.shared;
  return _swift_task_switch(sub_100613C78, v7, 0);
}

uint64_t sub_100613C78()
{
  unint64_t v60 = v0;
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[16];
  SFAirDropReceive.AskRequest.type.getter();
  char v4 = SFAirDrop.TransferType.isLinks.getter();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  if ((v4 & 1) == 0) {
    goto LABEL_32;
  }
  uint64_t v5 = v0[13];
  uint64_t v6 = SFAirDropReceive.AskRequest.urlItems.getter();
  uint64_t v7 = 0;
  uint64_t v53 = v6 + 56;
  uint64_t v8 = -1;
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  if (-v9 < 64) {
    uint64_t v8 = ~(-1 << -(char)v9);
  }
  unint64_t v10 = v8 & *(void *)(v6 + 56);
  os_log_t log = (os_log_t)((unint64_t)(63 - v9) >> 6);
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      goto LABEL_21;
    }
    uint64_t v13 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v13 >= (uint64_t)log) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v53 + 8 * v13);
    ++v7;
    if (!v14)
    {
      uint64_t v7 = v13 + 1;
      if (v13 + 1 >= (uint64_t)log) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v53 + 8 * v7);
      if (!v14)
      {
        uint64_t v7 = v13 + 2;
        if (v13 + 2 >= (uint64_t)log) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v53 + 8 * v7);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v7 << 6);
LABEL_21:
    uint64_t v16 = v0[15];
    uint64_t v17 = v0[12];
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))(v16, *(void *)(v6 + 48) + *(void *)(v5 + 72) * v12, v17);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v16, 0, 1, v17);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v16, 1, v17) == 1) {
      goto LABEL_25;
    }
    uint64_t v18 = v0[14];
    uint64_t v19 = v0[12];
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 32))(v18, v0[15], v19);
    URL._bridgeToObjectiveC()(v20);
    id v22 = v21;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v18, v19);
    LOBYTE(v18) = SFIsNewsLink();

    if ((v18 & 1) == 0)
    {
      swift_release();
      goto LABEL_32;
    }
  }
  uint64_t v15 = v13 + 3;
  if (v15 >= (uint64_t)log)
  {
LABEL_24:
    (*(void (**)(void, uint64_t, uint64_t, void))(v5 + 56))(v0[15], 1, 1, v0[12]);
LABEL_25:
    swift_release();
    id v23 = objc_allocWithZone((Class)LSApplicationRecord);
    id v24 = sub_1006A5458(0x6C7070612E6D6F63, 0xEE007377656E2E65, 1);
    uint64_t v44 = v0[5];
    long long v45 = *(void **)(v44 + 16);
    *(void *)(v44 + 16) = v24;

    goto LABEL_29;
  }
  unint64_t v14 = *(void *)(v53 + 8 * v15);
  if (v14)
  {
    uint64_t v7 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v7 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v7 >= (uint64_t)log) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v53 + 8 * v7);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  swift_once();
  uint64_t v25 = v0[10];
  uint64_t v26 = v0[11];
  uint64_t v27 = v0[9];
  uint64_t v28 = v0[4];
  uint64_t v29 = type metadata accessor for Logger();
  sub_10000B47C(v29, (uint64_t)qword_10097C4E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v26, v28, v27);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.error.getter();
  BOOL v32 = os_log_type_enabled(v30, v31);
  uint64_t v33 = v0[10];
  uint64_t v34 = v0[11];
  uint64_t v35 = v0[9];
  if (v32)
  {
    os_log_type_t type = v31;
    uint64_t v37 = v0[7];
    uint64_t v36 = v0[8];
    uint64_t v54 = v0[9];
    uint64_t v38 = v0[6];
    uint64_t v39 = swift_slowAlloc();
    uint64_t v57 = (void *)swift_slowAlloc();
    uint64_t v59 = swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 136315394;
    loga = v30;
    SFAirDropReceive.AskRequest.id.getter();
    sub_10024E048();
    uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v42 = v41;
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
    v0[2] = sub_100254634(v40, v42, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v54);
    *(_WORD *)(v39 + 12) = 2112;
    swift_errorRetain();
    uint64_t v43 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v57 = v43;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, loga, type, "Failed to get News app for ask request %s: %@", (uint8_t *)v39, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v35);
    swift_errorRelease();
    swift_errorRelease();
  }
LABEL_29:
  long long v46 = *(void **)(v0[5] + 16);
  if (v46)
  {
    id v47 = v46;
    id v48 = [v47 applicationState];
    unsigned __int8 v49 = [v48 isInstalled];

    if (v49)
    {
      uint64_t v50 = 1;
      goto LABEL_33;
    }
  }
LABEL_32:
  uint64_t v50 = 0;
LABEL_33:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v51 = (uint64_t (*)(uint64_t))v0[1];
  return v51(v50);
}

uint64_t type metadata accessor for SDAirDropContentHandlerNewsLinks()
{
  return self;
}

uint64_t sub_100614344@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SDAirDropContentHandlerNewsLinks();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_10061437C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10024DEC4;
  return sub_100613A3C(a1);
}

uint64_t sub_100614418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000A844((uint64_t *)&unk_10097F1D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void **)(*(void *)v2 + 16);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v9 = type metadata accessor for SFAirDropReceive.ItemDestination();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  id v10 = v8;
  sub_10039FAA0(a1, v8, 1, a2);

  return sub_10024DFE8((uint64_t)v7);
}

void sub_10061451C(uint64_t a1, char a2)
{
  unint64_t v3 = *(void *)(SFAirDropReceive.AskRequest.urlItems.getter() + 16);
  swift_bridgeObjectRelease();
  sub_10000A844(&qword_10096D760);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
  *(void *)(inited + 32) = 0x4E494C5F5357454ELL;
  *(void *)(inited + 40) = 0xE90000000000004BLL;
  *(void *)(inited + 48) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = 95;
  v5._id object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6._countAndFlagsBits = 0x4E494C5F5357454ELL;
  v6._id object = (void *)0xE90000000000004BLL;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  if (v3 > 1)
  {
    v7._countAndFlagsBits = 0x4C4152554C505FLL;
    v7._id object = (void *)0xE700000000000000;
    String.append(_:)(v7);
  }
  swift_bridgeObjectRelease();
  if (a2)
  {
    v8._countAndFlagsBits = 0x4C4154495041435FLL;
    v8._id object = (void *)0xEC00000044455A49;
    String.append(_:)(v8);
  }
  v9._countAndFlagsBits = 0x545845545FLL;
  v9._id object = (void *)0xE500000000000000;
  String.append(_:)(v9);
  swift_setDeallocating();
  sub_10000A844((uint64_t *)&unk_100977CB0);
  swift_arrayDestroy();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = (id)SFLocalizedStringForKey();

  if (v11)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_10076E7A0;
    *(void *)(v12 + 56) = &type metadata for Int;
    *(void *)(v12 + 64) = &protocol witness table for Int;
    *(void *)(v12 + 32) = v3;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100614774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  return _swift_task_switch(sub_10061479C, v4, 0);
}

uint64_t sub_10061479C()
{
  BOOL v32 = v0;
  unint64_t v1 = v0[8];
  if (v1 >> 60 == 15)
  {
    if (qword_10096A0A0 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000B47C(v2, (uint64_t)qword_10097C5E0);
    unint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      Swift::String v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "No record data received for contact lookup", v5, 2u);
      swift_slowDealloc();
    }

    Swift::String v6 = (uint64_t (*)(void, void, void, void))v0[1];
    return v6(0, 0, 0, 0);
  }
  else
  {
    uint64_t v8 = v0[7];
    uint64_t v9 = v0[11];
    v0[12] = *(void *)(v9 + 112);
    NSString v10 = *(__SecTrust **)(v9 + 120);
    sub_10025ADCC(v8, v1);
    sub_100461E14(v10, &v26);
    uint64_t v11 = v27;
    unint64_t v12 = v28;
    uint64_t v13 = v29;
    v0[13] = v26;
    v0[14] = v12;
    unint64_t v14 = v30;
    v0[15] = v30;
    if (qword_10096A0A0 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    v0[16] = sub_10000B47C(v15, (uint64_t)qword_10097C5E0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      os_log_t log = v16;
      uint64_t v18 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315394;
      uint64_t v25 = v11;
      unint64_t v19 = v12;
      if (!v12)
      {
        uint64_t v11 = 0xD000000000000015;
        uint64_t v26 = 0;
        unint64_t v27 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        unint64_t v19 = 0x80000001007B7770;
      }
      swift_bridgeObjectRetain();
      v0[5] = sub_100254634(v11, v19, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2080;
      uint64_t v20 = v13;
      unint64_t v21 = v14;
      if (!v14)
      {
        uint64_t v20 = 0xD000000000000015;
        uint64_t v26 = 0;
        unint64_t v27 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        unint64_t v21 = 0x80000001007B7770;
      }
      swift_bridgeObjectRetain();
      v0[6] = sub_100254634(v20, v21, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, log, v17, "Hash lookup complete: email hash - %s phone hash - %s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v11 = v25;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    id v22 = (void *)swift_task_alloc();
    v0[17] = v22;
    *id v22 = v0;
    v22[1] = sub_100614C8C;
    uint64_t v23 = v0[11];
    v22[5] = v14;
    v22[6] = v23;
    v22[3] = v12;
    v22[4] = v13;
    v22[2] = v11;
    return _swift_task_switch(sub_1006154E4, v23, 0);
  }
}

uint64_t sub_100614C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 88);
  *(void *)(v3 + 144) = a1;
  *(void *)(v3 + 152) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_100614DA4, v4, 0);
}

uint64_t sub_100614DA4()
{
  id v47 = v0;
  if (!v0[19])
  {
    uint64_t v10 = v0[7];
    unint64_t v9 = v0[8];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100250CB0(v10, v9);
    unint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = v0[18];
    uint64_t v14 = v13;
    goto LABEL_21;
  }
  unint64_t v1 = (void *)v0[12];
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v3 = [v1 verifiedIdentityForAppleID:v2];

  if (!v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    BOOL v17 = os_log_type_enabled(v15, v16);
    uint64_t v19 = v0[7];
    unint64_t v18 = v0[8];
    if (v17)
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "No Verified identity found", v20, 2u);
      swift_slowDealloc();
    }
    goto LABEL_19;
  }
  id v4 = v3;
  Swift::String v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    Swift::String v7 = (uint8_t *)swift_slowAlloc();
    unint64_t v42 = (void *)swift_slowAlloc();
    *(_DWORD *)Swift::String v7 = 138412290;
    v0[4] = v4;
    id v8 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v42 = v3;

    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Confirmed verified identity %@", v7, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  swift_bridgeObjectRelease();
  unint64_t v21 = (void *)v0[12];
  swift_bridgeObjectRelease();
  sub_1003DC47C();
  sub_100463298();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v23 = [v21 contactWithPreferredIdentifierForContacts:isa];

  if (v23)
  {
    id v24 = [v23 identifier];
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v25;

    id v26 = [objc_allocWithZone((Class)CNContactFormatter) init];
    id v27 = [v26 stringFromContact:v23];

    if (v27)
    {
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v28;
    }
    else
    {
      uint64_t v14 = 0;
      uint64_t v12 = 0;
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    BOOL v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    os_log_t log = v32;
    BOOL v34 = os_log_type_enabled(v32, v33);
    unint64_t v35 = v0[10];
    if (v34)
    {
      uint64_t v41 = v0[9];
      uint64_t v43 = v0[7];
      unint64_t v44 = v0[8];
      uint64_t v36 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 136315394;
      swift_bridgeObjectRetain();
      v0[2] = sub_100254634(v41, v35, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v36 + 12) = 2080;
      swift_bridgeObjectRetain();
      v0[3] = sub_100254634(v13, v11, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, log, v33, "Matched serviceName %s to contactID %s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100250CB0(v43, v44);
    }
    else
    {
      uint64_t v38 = v0[7];
      unint64_t v37 = v0[8];

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      sub_100250CB0(v38, v37);
    }
    goto LABEL_21;
  }
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  BOOL v30 = os_log_type_enabled(v15, v29);
  uint64_t v19 = v0[7];
  unint64_t v18 = v0[8];
  if (!v30)
  {

LABEL_19:
    sub_100250CB0(v19, v18);

    goto LABEL_20;
  }
  uint64_t v31 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v31 = 0;
  _os_log_impl((void *)&_mh_execute_header, v15, v29, "No matching contacts found", v31, 2u);
  swift_slowDealloc();
  sub_100250CB0(v19, v18);

LABEL_20:
  uint64_t v13 = 0;
  unint64_t v11 = 0;
  uint64_t v14 = 0;
  uint64_t v12 = 0;
LABEL_21:
  uint64_t v39 = (uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t))v0[1];
  return v39(v13, v11, v14, v12);
}

uint64_t sub_1006153F4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097C5E0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097C5E0);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1006154BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return _swift_task_switch(sub_1006154E4, v4, 0);
}

uint64_t sub_1006154E4()
{
  uint64_t v1 = *(void **)(v0[6] + 112);
  if (v0[3])
  {
    NSString v2 = String._bridgeToObjectiveC()();
    if (v0[5])
    {
LABEL_3:
      NSString v3 = String._bridgeToObjectiveC()();
      goto LABEL_6;
    }
  }
  else
  {
    NSString v2 = 0;
    if (v0[5]) {
      goto LABEL_3;
    }
  }
  NSString v3 = 0;
LABEL_6:
  id v4 = [v1 emailOrPhoneForEmailHash:v2 phoneHash:v3];

  if (v4)
  {
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v8(v5, v7);
}

uint64_t sub_100615614()
{
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for SDAirDropBonjourContactFetcher()
{
  return self;
}

void sub_100615678(uint64_t *a1)
{
  void (*v2)(void **__return_ptr, _OWORD *);
  uint64_t (*v3)(void **);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  void *v14;
  id v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  void (*v19)(id *__return_ptr, _OWORD *);
  void *v20;
  _OWORD v21[2];
  uint64_t v22;
  id v23[2];
  long long v24;
  uint64_t v25;
  _OWORD v26[2];
  uint64_t v27;
  void *v28;
  uint64_t v29;

  NSString v2 = (void (*)(void **__return_ptr, _OWORD *))a1[1];
  NSString v3 = (uint64_t (*)(void **))a1[3];
  os_log_type_t v29 = *a1;
  uint64_t v1 = v29;
  id v4 = -1 << *(unsigned char *)(v29 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  uint64_t v6 = v5 & *(void *)(v29 + 56);
  uint64_t v19 = (void (*)(id *__return_ptr, _OWORD *))a1[5];
  sub_10061C0AC((uint64_t)&v29);
  uint64_t v7 = (unint64_t)(63 - v4) >> 6;
  swift_retain();
  swift_retain();
  swift_retain();
  id v8 = 0;
  if (!v6) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  uint64_t v10 = v9 | (v8 << 6);
LABEL_8:
  sub_1002AF920(*(void *)(v1 + 48) + 40 * v10, (uint64_t)v26);
  while (1)
  {
    sub_10024D388((uint64_t)v26, (uint64_t)v23, &qword_10097C760);
    if (!*((void *)&v24 + 1))
    {
LABEL_36:
      sub_10024D330();
      swift_release();
      swift_release();
      swift_release();
      return;
    }
    v21[0] = *(_OWORD *)v23;
    v21[1] = v24;
    id v22 = v25;
    v2(&v20, v21);
    uint64_t v14 = v20;
    sub_10025B0A8((uint64_t)v21);
    uint64_t v28 = v14;
    if (v3(&v28))
    {
      *(void *)&v26[0] = v14;
      v19(v23, v26);

      uint64_t v15 = v23[0];
      if ([v23[0] isActive]) {
        goto LABEL_36;
      }

      if (v6) {
        goto LABEL_7;
      }
    }
    else
    {

      if (v6) {
        goto LABEL_7;
      }
    }
LABEL_9:
    unint64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      break;
    }
    if (v11 >= v7)
    {
      uint64_t v13 = v8;
    }
    else
    {
      uint64_t v12 = *(void *)(v18 + 8 * v11);
      if (v12) {
        goto LABEL_12;
      }
      os_log_type_t v16 = v8 + 2;
      uint64_t v13 = v8 + 1;
      if (v8 + 2 < v7)
      {
        uint64_t v12 = *(void *)(v18 + 8 * v16);
        if (v12) {
          goto LABEL_22;
        }
        BOOL v17 = v8 + 3;
        uint64_t v13 = v8 + 2;
        if (v8 + 3 < v7)
        {
          uint64_t v12 = *(void *)(v18 + 8 * v17);
          if (v12) {
            goto LABEL_25;
          }
          os_log_type_t v16 = v8 + 4;
          uint64_t v13 = v8 + 3;
          if (v8 + 4 < v7)
          {
            uint64_t v12 = *(void *)(v18 + 8 * v16);
            if (v12)
            {
LABEL_22:
              unint64_t v11 = v16;
LABEL_12:
              uint64_t v6 = (v12 - 1) & v12;
              uint64_t v10 = __clz(__rbit64(v12)) + (v11 << 6);
              id v8 = v11;
              goto LABEL_8;
            }
            BOOL v17 = v8 + 5;
            uint64_t v13 = v8 + 4;
            if (v8 + 5 < v7)
            {
              uint64_t v12 = *(void *)(v18 + 8 * v17);
              if (v12)
              {
LABEL_25:
                unint64_t v11 = v17;
                goto LABEL_12;
              }
              unint64_t v11 = v8 + 6;
              uint64_t v13 = v8 + 5;
              if (v8 + 6 < v7)
              {
                uint64_t v12 = *(void *)(v18 + 8 * v11);
                if (v12) {
                  goto LABEL_12;
                }
                while (v7 - 7 != v8)
                {
                  uint64_t v12 = *(void *)(v1 + 112 + 8 * v8++);
                  if (v12)
                  {
                    unint64_t v11 = v8 + 6;
                    goto LABEL_12;
                  }
                }
                uint64_t v13 = v7 - 1;
              }
            }
          }
        }
      }
    }
    uint64_t v6 = 0;
    id v27 = 0;
    id v8 = v13;
    memset(v26, 0, sizeof(v26));
  }
  __break(1u);
}

void sub_1006159D8()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v35 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Calendar.Component();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  uint64_t v38 = v5;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Calendar();
  uint64_t v33 = *(void *)(v8 - 8);
  uint64_t v34 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  BOOL v17 = (char *)&v30 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v30 - v18;
  swift_beginAccess();
  uint64_t v20 = (void *)sub_1002BDFA0();
  uint64_t v36 = v0;
  sub_10026BB6C((void *)(v0 + 96), *(void *)(v0 + 120));
  sub_1002BCECC((uint64_t)v19);
  swift_endAccess();
  if ((sub_10061B4F8(v20, (uint64_t)v19) & 1) == 0)
  {
    sub_10033FEB0((uint64_t)v19);

    return;
  }
  sub_1002BEBA4((uint64_t)v19, (uint64_t)v17);
  uint64_t v31 = v2;
  uint64_t v32 = v1;
  int v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v17, 1, v1);
  sub_10033FEB0((uint64_t)v17);
  if (v21 != 1) {
    goto LABEL_7;
  }
  static Calendar.current.getter();
  uint64_t v22 = v37;
  (*(void (**)(char *, void, uint64_t))(v38 + 104))(v7, enum case for Calendar.Component.second(_:), v37);
  double v23 = sub_1004BBA2C();
  if ((~*(void *)&v23 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v23 >= 9.22337204e18)
  {
LABEL_13:
    __break(1u);
    return;
  }
  id v24 = v35;
  static Date.now.getter();
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v32);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v22);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v34);
  sub_10033FEB0((uint64_t)v19);
  sub_10024D388((uint64_t)v14, (uint64_t)v19, (uint64_t *)&unk_100975040);
  sub_1002BEBA4((uint64_t)v19, (uint64_t)v14);
  swift_beginAccess();
  uint64_t v25 = *(void *)(v36 + 120);
  uint64_t v26 = *(void *)(v36 + 128);
  sub_1002AF758(v0 + 96, v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 40))(v14, v25, v26);
  swift_endAccess();
  sub_100616450((uint64_t)v19);
LABEL_7:
  if (v20)
  {
    id v27 = v20;
    id v28 = [v27 URI];
    id v29 = [v28 prefixedURI];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  sub_10033FEB0((uint64_t)v19);
}

uint64_t sub_100615E9C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097C630);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097C630);
  if (qword_100969C58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994558);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100615F64()
{
  if (qword_10096A0A8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_10097C630);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Pseudonym service network path monitor is reachable", v3, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100616078();
    return swift_release();
  }
  return result;
}

uint64_t sub_100616078()
{
  uint64_t v1 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v27 - v8;
  sub_10061677C();
  swift_beginAccess();
  uint64_t v10 = (void *)sub_1002BDFA0();
  sub_10026BB6C((void *)(v0 + 96), *(void *)(v0 + 120));
  sub_1002BCECC((uint64_t)v9);
  swift_endAccess();
  if (sub_10061B4F8(v10, (uint64_t)v9))
  {
    if (v10)
    {
      id v11 = v10;
      id v12 = [v11 properties];
      id v13 = [v12 expirationDate];

      static Date._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = type metadata accessor for Date();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v7, 0, 1, v14);
    }
    else
    {
      uint64_t v20 = type metadata accessor for Date();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v7, 1, 1, v20);
    }
    sub_10061683C((uint64_t)v7);
    sub_10033FEB0((uint64_t)v7);
    sub_100616450((uint64_t)v9);
  }
  else
  {
    uint64_t v15 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v3, 1, 1, v15);
    uint64_t v16 = qword_100969B90;
    swift_retain();
    if (v16 != -1) {
      swift_once();
    }
    uint64_t v17 = static AirDropActor.shared;
    unint64_t v18 = sub_100308354();
    uint64_t v19 = (void *)swift_allocObject();
    v19[2] = v17;
    v19[3] = v18;
    v19[4] = v0;
    swift_retain();
    sub_10028CFA8((uint64_t)v3, (uint64_t)&unk_10097C7D8, (uint64_t)v19);
    swift_release();
  }
  uint64_t v21 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v3, 1, 1, v21);
  uint64_t v22 = qword_100969B90;
  swift_retain();
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = static AirDropActor.shared;
  unint64_t v24 = sub_100308354();
  uint64_t v25 = (void *)swift_allocObject();
  void v25[2] = v23;
  uint64_t v25[3] = v24;
  v25[4] = v0;
  swift_retain();
  sub_10028CFA8((uint64_t)v3, (uint64_t)&unk_10097C7E8, (uint64_t)v25);
  swift_release();

  return sub_10033FEB0((uint64_t)v9);
}

uint64_t sub_100616450(uint64_t a1)
{
  uint64_t v3 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = __chkstk_darwin(v9);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v25 - v13;
  sub_1002BEBA4(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10033FEB0((uint64_t)v8);
  }
  id v28 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v28(v14, v8, v9);
  uint64_t v16 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v14, v9);
  uint64_t v17 = qword_100969B90;
  swift_retain();
  uint64_t v26 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = v5;
  uint64_t v18 = v1;
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v19 = static AirDropActor.shared;
  unint64_t v20 = sub_100308354();
  unint64_t v21 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v22 = (v11 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v19;
  *(void *)(v23 + 24) = v20;
  v28((char *)(v23 + v21), v26, v9);
  *(void *)(v23 + v22) = v18;
  swift_retain();
  uint64_t v24 = sub_10028CFA8((uint64_t)v27, (uint64_t)&unk_10097C770, v23);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  *(void *)(v18 + 184) = v24;
  return swift_release();
}

uint64_t sub_10061677C()
{
  if (*(void *)(v0 + 176))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  *(void *)(v0 + 176) = 0;
  swift_release();
  if (*(void *)(v0 + 184))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  *(void *)(v0 + 184) = 0;

  return swift_release();
}

uint64_t sub_10061683C(uint64_t a1)
{
  uint64_t v3 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = __chkstk_darwin(v9);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v25 - v13;
  sub_1002BEBA4(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10033FEB0((uint64_t)v8);
  }
  id v28 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v28(v14, v8, v9);
  uint64_t v16 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v14, v9);
  uint64_t v17 = qword_100969B90;
  swift_retain();
  uint64_t v26 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = v5;
  uint64_t v18 = v1;
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v19 = static AirDropActor.shared;
  unint64_t v20 = sub_100308354();
  unint64_t v21 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v22 = (v11 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v19;
  *(void *)(v23 + 24) = v20;
  v28((char *)(v23 + v21), v26, v9);
  *(void *)(v23 + v22) = v18;
  swift_retain();
  uint64_t v24 = sub_10028CFA8((uint64_t)v27, (uint64_t)&unk_10097C7B8, v23);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  *(void *)(v18 + 176) = v24;
  return swift_release();
}

uint64_t sub_100616B68()
{
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10000A6F0;
  return sub_100616C28();
}

uint64_t sub_100616C28()
{
  v1[30] = v0;
  sub_10000A844(&qword_10096C920);
  v1[31] = swift_task_alloc();
  sub_10000A844((uint64_t *)&unk_100975040);
  v1[32] = swift_task_alloc();
  v1[33] = swift_task_alloc();
  v1[34] = swift_task_alloc();
  v1[35] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for ContinuousClock();
  v1[36] = v2;
  v1[37] = *(void *)(v2 - 8);
  v1[38] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v3 = static AirDropActor.shared;
  v1[39] = static AirDropActor.shared;
  return _swift_task_switch(sub_100616DAC, v3, 0);
}

uint64_t sub_100616DAC()
{
  if (qword_10096A0A8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 320) = sub_10000B47C(v1, (uint64_t)qword_10097C630);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Waiting for first unlock to provision AirDrop pseudonym", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100616F08;
  return sub_10046033C();
}

uint64_t sub_100616F08()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 312);
  swift_task_dealloc();
  return _swift_task_switch(sub_100617018, v1, 0);
}

uint64_t sub_100617018()
{
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Waiting to start provisioning", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t v4 = static Duration.seconds(_:)();
  uint64_t v6 = v5;
  ContinuousClock.init()();
  uint64_t v9 = (char *)&dword_10096C598 + dword_10096C598;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 336) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100617174;
  return ((uint64_t (*)(uint64_t, uint64_t, void, void, uint64_t))v9)(v4, v6, 0, 0, 1);
}

uint64_t sub_100617174()
{
  os_log_type_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v3 = v2[39];
  uint64_t v4 = v2[38];
  uint64_t v5 = v2[37];
  uint64_t v6 = v2[36];
  if (v0)
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = sub_10061C7AC;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = sub_100617320;
  }
  return _swift_task_switch(v7, v3, 0);
}

uint64_t sub_100617320()
{
  uint64_t v81 = v0;
  uint64_t v1 = v0 + 30;
  os_log_type_t v2 = (void *)v0[30];
  uint64_t v3 = v2[5];
  uint64_t v4 = v2[6];
  sub_10026BB6C(v2 + 2, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  unint64_t v7 = v6;
  v0[43] = v5;
  v0[44] = v6;
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  sub_10026BB6C(v2 + 2, v8);
  uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, double))(v9 + 40))(0x51706F7244726941, 0xE900000000000052, v8, v9, 31536000.0);
  v0[45] = v10;
  swift_bridgeObjectRetain_n();
  uint64_t v11 = v10;
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  uint64_t v77 = v11;
  if (!os_log_type_enabled(v12, v13))
  {

    swift_bridgeObjectRelease_n();
    if (sub_1004BBFC4()) {
      goto LABEL_15;
    }
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Pseudonym provisioning is disabled", v19, 2u);
      swift_slowDealloc();
    }
    uint64_t v20 = *v1;

    uint64_t v21 = v20 + 96;
    unint64_t v22 = (void *)sub_1002BDFA0();
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v24 = *v1;
      id v25 = [v22 URI];
      id v26 = [v25 prefixedURI];

      uint64_t v75 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v28 = v27;

      swift_beginAccess();
      uint64_t v30 = *(void *)(v24 + 120);
      uint64_t v29 = *(void *)(v24 + 128);
      sub_1002AF758(v21, v30);
      uint64_t v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v29 + 72);
      id v32 = v23;
      uint64_t v33 = (void (*)(void *, void))v31(v0 + 2, v30, v29);
      unint64_t v35 = v34;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v79 = *v35;
      *unint64_t v35 = 0x8000000000000000;
      sub_100592324((uint64_t)v32, v75, v28, isUniquelyReferenced_nonNull_native);
      *unint64_t v35 = v79;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v33(v0 + 2, 0);
      swift_endAccess();
    }
    uint64_t v37 = v0[33];
    uint64_t v38 = v0[30];
    swift_beginAccess();
    uint64_t v39 = *(void *)(v38 + 120);
    uint64_t v40 = *(void *)(v38 + 128);
    sub_1002AF758(v21, v39);
    (*(void (**)(void, uint64_t, uint64_t))(v40 + 16))(0, v39, v40);
    uint64_t v41 = type metadata accessor for Date();
    unint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56);
    v42(v37, 1, 1, v41);
    uint64_t v43 = *(void *)(v38 + 120);
    uint64_t v44 = *(void *)(v38 + 128);
    sub_1002AF758(v21, v43);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 40))(v37, v43, v44);
    swift_endAccess();
    long long v45 = v0[45];
    uint64_t v46 = v0[31];
    uint64_t v47 = v0[32];
    uint64_t v48 = v0[30];
    v42(v47, 1, 1, v41);
    sub_10061683C(v47);
    sub_10033FEB0(v47);
    uint64_t v49 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v46, 1, 1, v49);
    uint64_t v50 = static AirDropActor.shared;
    unint64_t v51 = sub_100308354();
    unint64_t v52 = (void *)swift_allocObject();
    v52[2] = v50;
    v52[3] = v51;
    v52[4] = v48;
    swift_retain();
    swift_retain();
    sub_10028CFA8(v46, (uint64_t)&unk_10097C798, (uint64_t)v52);
    swift_release();
    swift_beginAccess();
    sub_10026BB6C((void *)(v48 + 136), *(void *)(v48 + 160));
    sub_10053C9C0();
    goto LABEL_10;
  }
  uint64_t v14 = swift_slowAlloc();
  uint64_t v15 = swift_slowAlloc();
  uint64_t v78 = swift_slowAlloc();
  *(_DWORD *)uint64_t v14 = 136315394;
  uint64_t v74 = (void *)v15;
  if (v7)
  {
    unint64_t v16 = v7;
  }
  else
  {
    uint64_t v79 = 0;
    unint64_t v80 = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease();
    unint64_t v16 = 0x80000001007B7770;
    uint64_t v5 = 0xD000000000000015;
  }
  swift_bridgeObjectRetain();
  v0[28] = sub_100254634(v5, v16, &v78);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v14 + 12) = 2112;
  v0[29] = v77;
  os_log_type_t v55 = v77;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *uint64_t v74 = v77;

  _os_log_impl((void *)&_mh_execute_header, v12, v13, "Provisioning pseudonym for service %s and properties %@", (uint8_t *)v14, 0x16u);
  sub_10000A844(&qword_10096B850);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  if ((sub_1004BBFC4() & 1) == 0) {
    goto LABEL_5;
  }
LABEL_15:
  uint64_t v56 = v0[35];
  uint64_t v57 = v0[30] + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropPseudonymService_lastProvisionAttempt;
  swift_beginAccess();
  sub_1002BEBA4(v57, v56);
  uint64_t v58 = type metadata accessor for Date();
  uint64_t v59 = *(void *)(v58 - 8);
  unint64_t v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  int v61 = v60(v56, 1, v58);
  sub_10033FEB0(v56);
  if (v61 == 1) {
    goto LABEL_18;
  }
  uint64_t v62 = v0[34];
  sub_1002BEBA4(v57, v62);
  uint64_t result = v60(v62, 1, v58);
  if (result == 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v63 = v0[34];
  uint64_t v64 = v0[30];
  Date.timeIntervalSinceNow.getter();
  double v66 = v65;
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v63, v58);
  if (*(double *)(v64 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropPseudonymService_provisionThrottleSeconds) < -v66)
  {
LABEL_18:
    uint64_t v67 = v0[33];
    Date.init()();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v67, 0, 1, v58);
    swift_beginAccess();
    sub_100340238(v67, v57);
    swift_endAccess();
    uint64_t v68 = v2[5];
    uint64_t v69 = v2[6];
    sub_10026BB6C(v2 + 2, v68);
    objc_super v76 = (uint64_t (*)(NSObject *, uint64_t, uint64_t))(*(void *)(v69 + 24) + **(int **)(v69 + 24));
    uint64_t v70 = (void *)swift_task_alloc();
    v0[46] = v70;
    *uint64_t v70 = v0;
    v70[1] = sub_100617D38;
    return v76(v77, v68, v69);
  }
  swift_bridgeObjectRelease();
  uint64_t v71 = Logger.logObject.getter();
  os_log_type_t v72 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v71, v72))
  {
    int v73 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v73 = 0;
    _os_log_impl((void *)&_mh_execute_header, v71, v72, "Attempting to provision AirDrop pseudonyms too frequetly.", v73, 2u);
    swift_slowDealloc();

    long long v45 = v77;
  }
  else
  {

    long long v45 = v71;
  }
LABEL_10:

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v53 = (uint64_t (*)(void))v0[1];
  return v53();
}

uint64_t sub_100617D38(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[47] = a1;
  v3[48] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[39];
    uint64_t v5 = sub_1006183DC;
  }
  else
  {
    uint64_t v6 = v3[39];
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_100617E60;
    uint64_t v4 = v6;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_100617E60()
{
  uint64_t v1 = v0;
  os_log_type_t v2 = (void *)v0[47];
  id v3 = v2;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  os_log_type_t v55 = v2;
  uint64_t v53 = v3;
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[47];
    unint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v7 = 138412290;
    v0[27] = v6;
    id v9 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v8 = v2;

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Provisioned pseudonym %@)", v7, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v10 = (void *)v0[47];

    uint64_t v4 = v1[47];
  }
  uint64_t v11 = v1[30];

  uint64_t v12 = v11 + 96;
  os_log_type_t v13 = (void *)sub_1002BDFA0();
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = v1[30];
    id v16 = [v13 URI];
    id v17 = [v16 prefixedURI];

    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v51 = v19;
    uint64_t v52 = v18;

    swift_beginAccess();
    uint64_t v20 = *(void *)(v15 + 120);
    uint64_t v21 = *(void *)(v15 + 128);
    sub_1002AF758(v12, v20);
    unint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 72);
    id v23 = v14;
    uint64_t v24 = (void (*)(void *, void))v22(v1 + 2, v20, v21);
    id v26 = v25;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v57 = *v26;
    uint64_t *v26 = 0x8000000000000000;
    sub_100592324((uint64_t)v23, v52, v51, isUniquelyReferenced_nonNull_native);
    uint64_t *v26 = v57;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24(v1 + 2, 0);
    swift_endAccess();
  }
  uint64_t v28 = v1[33];
  uint64_t v29 = v1[30];
  swift_beginAccess();
  uint64_t v30 = *(void *)(v29 + 120);
  uint64_t v31 = *(void *)(v29 + 128);
  sub_1002AF758(v12, v30);
  id v32 = *(void (**)(void *, uint64_t, uint64_t))(v31 + 16);
  id v54 = v53;
  v32(v55, v30, v31);
  uint64_t v33 = type metadata accessor for Date();
  uint64_t v34 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);
  uint64_t v35 = 1;
  uint64_t v56 = *v34;
  (*v34)(v28, 1, 1, v33);
  uint64_t v36 = *(void *)(v29 + 120);
  uint64_t v37 = *(void *)(v29 + 128);
  sub_1002AF758(v12, v36);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 40))(v28, v36, v37);
  swift_endAccess();
  if (v54)
  {
    id v38 = v54;
    id v39 = [v38 properties];
    id v40 = [v39 expirationDate];

    static Date._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v35 = 0;
  }
  uint64_t v41 = (void *)v1[45];
  uint64_t v42 = v1[31];
  uint64_t v43 = v1[32];
  uint64_t v44 = v1[30];
  v56(v43, v35, 1, v33);
  sub_10061683C(v43);
  sub_10033FEB0(v43);
  uint64_t v45 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v42, 1, 1, v45);
  uint64_t v46 = static AirDropActor.shared;
  unint64_t v47 = sub_100308354();
  uint64_t v48 = (void *)swift_allocObject();
  v48[2] = v46;
  v48[3] = v47;
  v48[4] = v44;
  swift_retain();
  swift_retain();
  sub_10028CFA8(v42, (uint64_t)&unk_10097C798, (uint64_t)v48);
  swift_release();
  swift_beginAccess();
  sub_10026BB6C((void *)(v44 + 136), *(void *)(v44 + 160));
  sub_10053C9C0();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v49 = (uint64_t (*)(void))v1[1];
  return v49();
}

uint64_t sub_1006183DC()
{
  uint64_t v21 = v0;
  id v1 = *(id *)(v0 + 360);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  id v2 = v1;
  swift_errorRetain();
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v18 = v4;
    os_log_t log = v3;
    uint64_t v5 = *(void *)(v0 + 352);
    uint64_t v6 = swift_slowAlloc();
    id v17 = (void *)swift_slowAlloc();
    v20[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315650;
    if (v5)
    {
      uint64_t v7 = *(void *)(v0 + 344);
      unint64_t v8 = *(void *)(v0 + 352);
    }
    else
    {
      v20[1] = 0;
      void v20[2] = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v8 = 0x80000001007B7770;
      uint64_t v7 = 0xD000000000000015;
    }
    uint64_t v10 = *(void **)(v0 + 360);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 192) = sub_100254634(v7, v8, v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2112;
    *(void *)(v0 + 200) = v10;
    id v11 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v17 = v10;

    *(_WORD *)(v6 + 22) = 2112;
    swift_errorRetain();
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 208) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v17[1] = v12;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v18, "Failed to provision pseudonym for service %s and %@ with error: %@", (uint8_t *)v6, 0x20u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    id v9 = *(void **)(v0 + 360);

    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  os_log_type_t v13 = *(void **)(v0 + 360);
  uint64_t v14 = *(void *)(v0 + 240);
  swift_beginAccess();
  sub_10026BB6C((void *)(v14 + 136), *(void *)(v14 + 160));
  sub_10053C808();

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_10061876C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_100618808, v5, 0);
}

uint64_t sub_100618808()
{
  id v1 = sub_1002BE3D0();
  *(void *)(v0 + 24) = v1;
  id v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *id v2 = v0;
  v2[1] = sub_10061C7B0;
  return sub_1006188A8((uint64_t)v1);
}

uint64_t sub_1006188A8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v3 = static AirDropActor.shared;
  v2[4] = static AirDropActor.shared;
  return _swift_task_switch(sub_100618948, v3, 0);
}

uint64_t sub_100618948()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    char v2 = *(unsigned char *)(v1 + 32);
    *(unsigned char *)(v0 + 72) = v2;
    uint64_t v3 = -1;
    uint64_t v4 = -1 << v2;
    if (-(-1 << v2) < 64) {
      uint64_t v3 = ~(-1 << -(char)v4);
    }
    unint64_t v5 = v3 & *(void *)(v1 + 64);
    uint64_t v6 = (void *)swift_bridgeObjectRetain();
    if (v5)
    {
      uint64_t v7 = 0;
      unint64_t v8 = __clz(__rbit64(v5));
      uint64_t v9 = (v5 - 1) & v5;
LABEL_6:
      *(void *)(v0 + 40) = v7;
      *(void *)(v0 + 48) = v9;
      uint64_t v10 = *(void **)(v6[7] + 8 * v8);
      *(void *)(v0 + 56) = v10;
      id v11 = v10;
      uint64_t v12 = (void *)swift_task_alloc();
      *(void *)(v0 + 64) = v12;
      *uint64_t v12 = v0;
      v12[1] = sub_100618B2C;
      return sub_10061A488((uint64_t)v11);
    }
    unint64_t v14 = 63 - v4;
    if ((unint64_t)(63 - v4) > 0x7F)
    {
      unint64_t v15 = v6[9];
      if (v15)
      {
        uint64_t v7 = 1;
LABEL_12:
        uint64_t v9 = (v15 - 1) & v15;
        unint64_t v8 = __clz(__rbit64(v15)) + (v7 << 6);
        goto LABEL_6;
      }
      if (v14 >= 0xC0)
      {
        unint64_t v15 = v6[10];
        if (v15)
        {
          uint64_t v7 = 2;
          goto LABEL_12;
        }
        if (v14 >= 0x100)
        {
          unint64_t v15 = v6[11];
          if (v15)
          {
            uint64_t v7 = 3;
            goto LABEL_12;
          }
          if (v14 >= 0x140)
          {
            unint64_t v15 = v6[12];
            if (v15)
            {
              uint64_t v7 = 4;
              goto LABEL_12;
            }
            uint64_t v16 = 0;
            uint64_t v17 = v14 >> 6;
            if (v17 <= 5) {
              uint64_t v17 = 5;
            }
            uint64_t v18 = v17 - 5;
            while (v18 != v16)
            {
              unint64_t v15 = v6[v16++ + 13];
              if (v15)
              {
                uint64_t v7 = v16 + 4;
                goto LABEL_12;
              }
            }
          }
        }
      }
    }
    swift_release();
  }
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_100618B2C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_task_dealloc();
  return _swift_task_switch(sub_100618C3C, v1, 0);
}

void sub_100618C3C()
{
  int64_t v1 = *(void *)(v0 + 40);
  unint64_t v2 = *(void *)(v0 + 48);
  if (v2)
  {
    unint64_t v3 = __clz(__rbit64(v2));
    uint64_t v4 = (v2 - 1) & v2;
    unint64_t v5 = v3 | (v1 << 6);
    uint64_t v6 = *(void *)(v0 + 16);
LABEL_3:
    *(void *)(v0 + 40) = v1;
    *(void *)(v0 + 48) = v4;
    uint64_t v7 = *(void **)(*(void *)(v6 + 56) + 8 * v5);
    *(void *)(v0 + 56) = v7;
    id v8 = v7;
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_100618B2C;
    sub_10061A488((uint64_t)v8);
    return;
  }
  int64_t v10 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  int64_t v11 = (unint64_t)((1 << *(unsigned char *)(v0 + 72)) + 63) >> 6;
  uint64_t v6 = *(void *)(v0 + 16);
  if (v10 < v11)
  {
    uint64_t v12 = v6 + 64;
    unint64_t v13 = *(void *)(v6 + 64 + 8 * v10);
    ++v1;
    if (v13)
    {
LABEL_9:
      uint64_t v4 = (v13 - 1) & v13;
      unint64_t v5 = __clz(__rbit64(v13)) + (v1 << 6);
      goto LABEL_3;
    }
    int64_t v1 = v10 + 1;
    if (v10 + 1 < v11)
    {
      unint64_t v13 = *(void *)(v12 + 8 * v1);
      if (v13) {
        goto LABEL_9;
      }
      int64_t v1 = v10 + 2;
      if (v10 + 2 < v11)
      {
        unint64_t v13 = *(void *)(v12 + 8 * v1);
        if (v13) {
          goto LABEL_9;
        }
        int64_t v14 = v10 + 3;
        if (v14 < v11)
        {
          unint64_t v13 = *(void *)(v12 + 8 * v14);
          if (v13)
          {
            int64_t v1 = v14;
            goto LABEL_9;
          }
          while (1)
          {
            int64_t v1 = v14 + 1;
            if (__OFADD__(v14, 1)) {
              break;
            }
            if (v1 >= v11) {
              goto LABEL_20;
            }
            unint64_t v13 = *(void *)(v12 + 8 * v1);
            ++v14;
            if (v13) {
              goto LABEL_9;
            }
          }
LABEL_24:
          __break(1u);
          return;
        }
      }
    }
  }
LABEL_20:
  swift_release();
  unint64_t v15 = *(void (**)(void))(v0 + 8);
  v15();
}

uint64_t sub_100618E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  uint64_t v6 = type metadata accessor for CancellationError();
  v5[6] = v6;
  v5[7] = *(void *)(v6 - 8);
  v5[8] = swift_task_alloc();
  sub_10000A844(&qword_10096C920);
  v5[9] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for ContinuousClock();
  v5[10] = v7;
  v5[11] = *(void *)(v7 - 8);
  v5[12] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v8 = static AirDropActor.shared;
  v5[13] = static AirDropActor.shared;
  return _swift_task_switch(sub_100618F88, v8, 0);
}

uint64_t sub_100618F88()
{
  ContinuousClock.init()();
  Date.timeIntervalSinceNow.getter();
  uint64_t v1 = static Duration.seconds(_:)();
  uint64_t v3 = v2;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100619064;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_100619064()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 96);
  uint64_t v4 = *(void *)(*v1 + 88);
  uint64_t v5 = *(void *)(*v1 + 80);
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 104);
  if (v0) {
    uint64_t v7 = sub_100619320;
  }
  else {
    uint64_t v7 = sub_1006191EC;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1006191EC()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[5];
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  uint64_t v4 = static AirDropActor.shared;
  unint64_t v5 = sub_100308354();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v4;
  v6[3] = v5;
  v6[4] = v2;
  swift_retain();
  swift_retain();
  sub_10028CFA8(v1, (uint64_t)&unk_10097C7C8, (uint64_t)v6);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100619320()
{
  v0[2] = v0[15];
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    if (qword_10096A0A8 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_10000B47C(v1, (uint64_t)qword_10097C630);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Cancelled pseudonym expiration task", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v6 = v0[7];
    uint64_t v5 = v0[8];
    uint64_t v7 = v0[6];

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    if (qword_10096A0A8 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000B47C(v8, (uint64_t)qword_10097C630);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      int64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      *(_DWORD *)int64_t v11 = 138412290;
      swift_errorRetain();
      uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
      v0[3] = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v12 = v13;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to start task for pseudonym expiration with error %@", v11, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_100619670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_10061970C, v5, 0);
}

uint64_t sub_10061970C()
{
  sub_10061677C();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  void *v1 = v0;
  v1[1] = sub_1006197A4;
  return sub_100616C28();
}

uint64_t sub_1006197A4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100619898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  uint64_t v6 = type metadata accessor for CancellationError();
  v5[6] = v6;
  v5[7] = *(void *)(v6 - 8);
  v5[8] = swift_task_alloc();
  sub_10000A844(&qword_10096C920);
  v5[9] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for ContinuousClock();
  v5[10] = v7;
  v5[11] = *(void *)(v7 - 8);
  v5[12] = swift_task_alloc();
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v8 = static AirDropActor.shared;
  v5[13] = static AirDropActor.shared;
  return _swift_task_switch(sub_100619A20, v8, 0);
}

uint64_t sub_100619A20()
{
  ContinuousClock.init()();
  Date.timeIntervalSinceNow.getter();
  uint64_t v1 = static Duration.seconds(_:)();
  uint64_t v3 = v2;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100619AFC;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_100619AFC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 96);
  uint64_t v4 = *(void *)(*v1 + 88);
  uint64_t v5 = *(void *)(*v1 + 80);
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 104);
  if (v0) {
    uint64_t v7 = sub_100619DB8;
  }
  else {
    uint64_t v7 = sub_100619C84;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_100619C84()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[5];
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  uint64_t v4 = static AirDropActor.shared;
  unint64_t v5 = sub_100308354();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v4;
  v6[3] = v5;
  v6[4] = v2;
  swift_retain();
  swift_retain();
  sub_10028CFA8(v1, (uint64_t)&unk_10097C780, (uint64_t)v6);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100619DB8()
{
  v0[2] = v0[15];
  swift_errorRetain();
  sub_10000A844(&qword_10096BAF0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    if (qword_10096A0A8 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_10000B47C(v1, (uint64_t)qword_10097C630);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Cancelled after first use expiration task", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v6 = v0[7];
    uint64_t v5 = v0[8];
    uint64_t v7 = v0[6];

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    if (qword_10096A0A8 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000B47C(v8, (uint64_t)qword_10097C630);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      int64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      *(_DWORD *)int64_t v11 = 138412290;
      swift_errorRetain();
      uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
      v0[3] = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v12 = v13;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to start task for after first use expiration with error %@", v11, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_10061A108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_10061A1A4, v5, 0);
}

uint64_t sub_10061A1A4()
{
  sub_10061677C();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  void *v1 = v0;
  v1[1] = sub_10061C7A8;
  return sub_100616C28();
}

uint64_t sub_10061A23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v5 = static AirDropActor.shared;
  return _swift_task_switch(sub_10061A2D8, v5, 0);
}

uint64_t sub_10061A2D8()
{
  uint64_t v1 = sub_1002BE3D0();
  *(void *)(v0 + 24) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10061A378;
  return sub_1006188A8((uint64_t)v1);
}

uint64_t sub_10061A378()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10061A488(uint64_t a1)
{
  v2[18] = a1;
  v2[19] = v1;
  if (qword_100969B90 != -1) {
    swift_once();
  }
  uint64_t v3 = static AirDropActor.shared;
  v2[20] = static AirDropActor.shared;
  return _swift_task_switch(sub_10061A528, v3, 0);
}

uint64_t sub_10061A528()
{
  id v32 = v0;
  uint64_t v1 = (void *)v0[19];
  uint64_t v2 = v1 + 2;
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  sub_10026BB6C(v1 + 2, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  unint64_t v7 = v6;
  v0[21] = v5;
  v0[22] = v6;
  if (qword_10096A0A8 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)v0[18];
  uint64_t v9 = type metadata accessor for Logger();
  v0[23] = sub_10000B47C(v9, (uint64_t)qword_10097C630);
  swift_bridgeObjectRetain_n();
  id v10 = v8;
  int64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  BOOL v13 = os_log_type_enabled(v11, v12);
  int64_t v14 = (void *)v0[18];
  if (v13)
  {
    uint64_t v26 = v5;
    uint64_t v27 = v1;
    uint64_t v28 = v11;
    uint64_t v29 = v1 + 2;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = (void *)swift_slowAlloc();
    v31[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 138412546;
    v0[16] = v14;
    id v17 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v16 = v14;

    *(_WORD *)(v15 + 12) = 2080;
    if (v7)
    {
      unint64_t v18 = v7;
      uint64_t v19 = v28;
      uint64_t v2 = v29;
      uint64_t v20 = v26;
    }
    else
    {
      v31[1] = 0;
      v31[2] = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v18 = 0x80000001007B7770;
      uint64_t v20 = 0xD000000000000015;
      uint64_t v19 = v28;
      uint64_t v2 = v29;
    }
    uint64_t v1 = v27;
    swift_bridgeObjectRetain();
    v0[17] = sub_100254634(v20, v18, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v19, v12, "Revoking pseudonym %@ for service %s", (uint8_t *)v15, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v21 = v1[5];
  uint64_t v22 = v1[6];
  sub_10026BB6C(v2, v21);
  uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 + 32) + **(int **)(v22 + 32));
  id v23 = (void *)swift_task_alloc();
  v0[24] = v23;
  *id v23 = v0;
  v23[1] = sub_10061A900;
  uint64_t v24 = v0[18];
  return v30(v24, v21, v22);
}

uint64_t sub_10061A900(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 200) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v4 + 160);
  if (v1)
  {
    unint64_t v6 = sub_10061AFA0;
  }
  else
  {
    *(unsigned char *)(v4 + 208) = a1 & 1;
    unint64_t v6 = sub_10061AA40;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_10061AA40()
{
  uint64_t v38 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 208);
  id v2 = *(id *)(v0 + 144);
  swift_bridgeObjectRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(void *)(v0 + 176);
  unint64_t v7 = *(void **)(v0 + 144);
  if (v1 == 1)
  {
    uint64_t v8 = v0 + 16;
    if (v5)
    {
      os_log_t log = v3;
      uint64_t v32 = *(void *)(v0 + 176);
      uint64_t v9 = swift_slowAlloc();
      id v10 = (void *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412546;
      *(void *)(v0 + 112) = v7;
      id v11 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v10 = v7;

      *(_WORD *)(v9 + 12) = 2080;
      if (v6)
      {
        uint64_t v12 = *(void *)(v0 + 168);
        unint64_t v13 = *(void *)(v0 + 176);
      }
      else
      {
        uint64_t v12 = 0xD000000000000015;
        uint64_t v36 = 0;
        unint64_t v37 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        unint64_t v13 = 0x80000001007B7770;
      }
      swift_bridgeObjectRetain();
      *(void *)(v0 + 120) = sub_100254634(v12, v13, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, log, v4, "Revoked pseudonym %@ for service %s", (uint8_t *)v9, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v8 = v0 + 16;
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v19 = *(void *)(v0 + 152);
    id v20 = [*(id *)(v0 + 144) URI:v32];
    id v21 = [v20 prefixedURI];

    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;

    uint64_t v25 = v19 + 96;
    swift_beginAccess();
    uint64_t v26 = *(void *)(v19 + 120);
    uint64_t v27 = *(void *)(v19 + 128);
    sub_1002AF758(v25, v26);
    uint64_t v28 = (void (*)(uint64_t, void))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 72))(v8, v26, v27);
    uint64_t v29 = (void *)sub_1002A8C90(v22, v24);
    v28(v8, 0);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (!v5)
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_16;
    }
    os_log_type_t v33 = v4;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 138412546;
    *(void *)(v0 + 80) = v7;
    id v16 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v15 = v7;

    *(_WORD *)(v14 + 12) = 2080;
    if (v6)
    {
      uint64_t v17 = *(void *)(v0 + 168);
      unint64_t v18 = *(void *)(v0 + 176);
    }
    else
    {
      uint64_t v17 = 0xD000000000000015;
      uint64_t v36 = 0;
      unint64_t v37 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v18 = 0x80000001007B7770;
    }
    swift_bridgeObjectRetain();
    *(void *)(v0 + 88) = sub_100254634(v17, v18, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v29 = v3;
    _os_log_impl((void *)&_mh_execute_header, v3, v33, "Did not revoke pseudonym %@ for service %s", (uint8_t *)v14, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

LABEL_16:
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_10061AFA0()
{
  uint64_t v19 = v0;
  id v1 = *(id *)(v0 + 144);
  swift_errorRetain();
  id v2 = v1;
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(void *)(v0 + 176);
  unint64_t v7 = *(void **)(v0 + 144);
  if (v5)
  {
    os_log_type_t v16 = v4;
    os_log_t log = v3;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    v18[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412802;
    *(void *)(v0 + 96) = v7;
    id v10 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v9 = v7;

    *(_WORD *)(v8 + 12) = 2080;
    if (v6)
    {
      uint64_t v11 = *(void *)(v0 + 168);
      unint64_t v12 = *(void *)(v0 + 176);
    }
    else
    {
      v18[1] = 0;
      void v18[2] = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v12 = 0x80000001007B7770;
      uint64_t v11 = 0xD000000000000015;
    }
    swift_bridgeObjectRetain();
    *(void *)(v0 + 104) = sub_100254634(v11, v12, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2112;
    swift_errorRetain();
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 72) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v9[1] = v13;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v16, "Failed to revoke pseudonym %@ for service %s with error: %@", (uint8_t *)v8, 0x20u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_10061B2C0()
{
  sub_10024D338(v0 + 16);
  sub_10024D338(v0 + 56);
  sub_10024D338(v0 + 96);
  sub_10024D338(v0 + 136);
  swift_release();
  swift_release();
  sub_10033FEB0(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropPseudonymService_lastProvisionAttempt);

  return swift_deallocClassInstance();
}

uint64_t sub_10061B364()
{
  return type metadata accessor for SDAirDropPseudonymService();
}

uint64_t type metadata accessor for SDAirDropPseudonymService()
{
  uint64_t result = qword_10097C690;
  if (!qword_10097C690) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10061B3B8()
{
  sub_100271710();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10061B480@<X0>(uint64_t *a1@<X8>)
{
  v2.Class isa = AnyHashable._bridgeToObjectiveC()().isa;
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (!result)
  {

    uint64_t result = 0;
  }
  *a1 = result;
  return result;
}

BOOL sub_10061B4D4(void *a1)
{
  return *a1 != 0;
}

id sub_10061B4E4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = *a1;
  if (result)
  {
    *a2 = result;
    return result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10061B4F8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844((uint64_t *)&unk_100975040);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  unint64_t v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v56 - v8;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v56 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v56 - v18;
  if (!a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_10;
  }
  id v20 = [a1 properties];
  id v21 = [v20 expirationDate];

  static Date._unconditionallyBridgeFromObjectiveC(_:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v22(v9, 1, v10) == 1)
  {
LABEL_10:
    sub_10033FEB0((uint64_t)v9);
    if (qword_10096A0A8 != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    sub_10000B47C(v32, (uint64_t)qword_10097C630);
    os_log_type_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Pseudonym is not set", v35, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  uint64_t v57 = v14;
  uint64_t v23 = v19;
  uint64_t v24 = *(void (**)(void))(v11 + 32);
  uint64_t v59 = v23;
  v24();
  uint64_t v58 = v17;
  static Date.now.getter();
  sub_1002BEBA4(a2, (uint64_t)v7);
  if (v22(v7, 1, v10) == 1)
  {
    sub_10033FEB0((uint64_t)v7);
    if (qword_10096A0A8 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_10000B47C(v25, (uint64_t)qword_10097C630);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    BOOL v28 = os_log_type_enabled(v26, v27);
    uint64_t v30 = v58;
    uint64_t v29 = v59;
    if (v28)
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Pseudonym has not been used", v31, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v36 = v57;
    ((void (*)(char *, char *, uint64_t))v24)(v57, v7, v10);
    if (qword_10096A0A8 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_10000B47C(v37, (uint64_t)qword_10097C630);
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.default.getter();
    BOOL v40 = os_log_type_enabled(v38, v39);
    uint64_t v30 = v58;
    uint64_t v29 = v59;
    if (v40)
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Current pseudonym has been used", v41, 2u);
      swift_slowDealloc();
    }

    if ((static Date.< infix(_:_:)() & 1) == 0)
    {
      uint64_t v53 = Logger.logObject.getter();
      os_log_type_t v54 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v53, v54))
      {
        os_log_type_t v55 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v55 = 0;
        _os_log_impl((void *)&_mh_execute_header, v53, v54, "Pseudonym is not valid; expired after first use", v55, 2u);
        swift_slowDealloc();
      }

      uint64_t v52 = *(void (**)(char *, uint64_t))(v11 + 8);
      v52(v36, v10);
      v52(v30, v10);
      goto LABEL_35;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v10);
  }
  if ((static Date.< infix(_:_:)() & 1) == 0)
  {
    if (qword_10096A0A8 != -1) {
      swift_once();
    }
    uint64_t v48 = type metadata accessor for Logger();
    sub_10000B47C(v48, (uint64_t)qword_10097C630);
    uint64_t v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v51 = 0;
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "Pseudonym is not valid; expired", v51, 2u);
      swift_slowDealloc();
    }

    uint64_t v52 = *(void (**)(char *, uint64_t))(v11 + 8);
    v52(v30, v10);
LABEL_35:
    v52(v29, v10);
    return 0;
  }
  if (qword_10096A0A8 != -1) {
    swift_once();
  }
  uint64_t v42 = type metadata accessor for Logger();
  sub_10000B47C(v42, (uint64_t)qword_10097C630);
  uint64_t v43 = Logger.logObject.getter();
  os_log_type_t v44 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v45 = 0;
    _os_log_impl((void *)&_mh_execute_header, v43, v44, "Pseudonym is valid", v45, 2u);
    swift_slowDealloc();
  }

  uint64_t v46 = *(void (**)(char *, uint64_t))(v11 + 8);
  v46(v30, v10);
  v46(v29, v10);
  return 1;
}

uint64_t sub_10061BC54()
{
  if ((sub_1004EE5A0() & 1) == 0)
  {
    if (qword_10096A0A8 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10000B47C(v15, (uint64_t)qword_10097C630);
    NSObject v2 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v2, v16)) {
      goto LABEL_17;
    }
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    uint64_t v18 = "Pseudonym service is disabled";
LABEL_16:
    _os_log_impl((void *)&_mh_execute_header, v2, v16, v18, v17, 2u);
    swift_slowDealloc();
LABEL_17:

    return 0;
  }
  id v0 = objc_allocWithZone((Class)IDSAccountController);
  NSString v1 = String._bridgeToObjectiveC()();
  NSObject v2 = [v0 initWithService:v1];

  if (!v2)
  {
LABEL_12:
    if (qword_10096A0A8 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_10000B47C(v19, (uint64_t)qword_10097C630);
    NSObject v2 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v2, v16)) {
      goto LABEL_17;
    }
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    uint64_t v18 = "Pseudonym service does not have an IDS account";
    goto LABEL_16;
  }
  id v3 = [v2 accounts];
  if (!v3)
  {

    goto LABEL_12;
  }
  uint64_t v4 = v3;
  uint64_t v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  v29[0] = v5;
  v29[1] = (uint64_t)sub_10061B480;
  void v29[2] = 0;
  v29[3] = (uint64_t)sub_10061B4D4;
  v29[4] = 0;
  v29[5] = (uint64_t)sub_10061B4E4;
  v29[6] = 0;
  sub_100615678(v29);
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  if (!v7)
  {
    if (qword_10096A0A8 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_10000B47C(v21, (uint64_t)qword_10097C630);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Pseudonym service does not have an active IDS account", v24, 2u);
      swift_slowDealloc();
    }

    goto LABEL_17;
  }
  id v8 = v7;
  id v9 = [v8 pushToken];
  if (!v9)
  {
    if (qword_10096A0A8 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_10000B47C(v25, (uint64_t)qword_10097C630);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      BOOL v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Pseudonym service does not have an active IDS account push token", v28, 2u);
      swift_slowDealloc();
    }

    goto LABEL_17;
  }
  uint64_t v10 = v9;
  uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v13 = v12;

  uint64_t countAndFlagsBits = Data.hexString()()._countAndFlagsBits;
  sub_100250CC4(v11, v13);

  return countAndFlagsBits;
}

uint64_t sub_10061C0AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_10061C0DC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Date() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10000A6F0;
  return sub_100619898(a1, v6, v7, v8, v9);
}

uint64_t sub_10061C204(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F0;
  return sub_10061A108(a1, v4, v5, v6);
}

uint64_t sub_10061C2BC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F4;
  return sub_10061A23C(a1, v4, v5, v6);
}

uint64_t sub_10061C374()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10061C45C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Date() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10000A6F0;
  return sub_100618E00(a1, v6, v7, v8, v9);
}

uint64_t sub_10061C584(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F0;
  return sub_100619670(a1, v4, v5, v6);
}

uint64_t sub_10061C63C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10000A6F0;
  return sub_100616B68();
}

uint64_t sub_10061C6F4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000A6F0;
  return sub_10061876C(a1, v4, v5, v6);
}

uint64_t sub_10061C7B4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return dispatch thunk of CustomStringConvertible.description.getter();
  }
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

void sub_10061C830(uint64_t a1, void *a2)
{
}

uint64_t sub_10061C838(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_10061C92C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v6 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v37 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v11);
  uint64_t v45 = (char *)&v30 - v14;
  uint64_t v46 = _swiftEmptyArrayStorage;
  uint64_t v38 = *(void *)(a3 + 16);
  if (v38)
  {
    unint64_t v15 = 0;
    uint64_t v39 = v10 + 48;
    os_log_type_t v44 = (void (**)(char *))(v10 + 32);
    uint64_t v40 = v10 + 56;
    uint64_t v41 = v10 + 16;
    unint64_t v32 = (v10 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    os_log_type_t v33 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v36 = v10;
    while (v15 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v17 = *(void *)(v10 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v8, a3 + v16 + v17 * v15, v9);
      uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v18(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
        goto LABEL_17;
      }
      uint64_t v35 = v18;
      uint64_t v19 = a3;
      id v20 = v8;
      uint64_t v21 = v45;
      uint64_t v22 = *v44;
      os_log_type_t v23 = v20;
      (*v44)(v45);
      char v24 = v42(v21);
      if (v4)
      {
        (*v33)(v45, v9);
        swift_bridgeObjectRelease();
        return swift_release();
      }
      if (v24)
      {
        ((void (*)(char *, char *, uint64_t))v22)(v37, v45, v9);
        uint64_t v25 = v46;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v34 = 0;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1002558AC(0, v25[2] + 1, 1);
          uint64_t v25 = v46;
        }
        unint64_t v28 = v25[2];
        unint64_t v27 = v25[3];
        unint64_t v29 = v28 + 1;
        if (v28 >= v27 >> 1)
        {
          unint64_t v31 = v28 + 1;
          sub_1002558AC(v27 > 1, v28 + 1, 1);
          unint64_t v29 = v31;
          uint64_t v25 = v46;
        }
        void v25[2] = v29;
        uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v22)((char *)v25 + v16 + v28 * v17, v37, v9);
        uint64_t v46 = v25;
        uint64_t v4 = v34;
      }
      else
      {
        uint64_t result = ((uint64_t (*)(char *, uint64_t))*v33)(v45, v9);
      }
      a3 = v19;
      ++v15;
      uint64_t v8 = v23;
      uint64_t v10 = v36;
      if (v38 == v15)
      {
        v35(v23, 1, 1, v9);
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_17:
    swift_bridgeObjectRelease();
    sub_10000A7E8((uint64_t)v8, &qword_100974EA0);
    return (uint64_t)v46;
  }
  return result;
}

uint64_t sub_10061CCEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_10061CD40()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10024A2B8(v0, qword_10097C7F0);
  uint64_t v1 = sub_10000B47C(v0, (uint64_t)qword_10097C7F0);
  if (qword_100969CB8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10000B47C(v0, (uint64_t)qword_100994678);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10061CE08()
{
  uint64_t v0 = type metadata accessor for DispatchTimeInterval();
  sub_10024A2B8(v0, qword_10097C808);
  *(void *)sub_10000B47C(v0, (uint64_t)qword_10097C808) = 50;
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);

  return v1();
}

void sub_10061CE98()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v1 = [self UUIDWithString:v0];

  qword_1009949E8 = (uint64_t)v1;
}

void sub_10061CF0C(char a1, void *a2, const char *a3)
{
  if (*(unsigned char *)(v3 + *a2) != (a1 & 1))
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000B47C(v5, (uint64_t)qword_10097C7F0);
    swift_retain();
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 67109120;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, a3, v8, 8u);
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
  }
}

void sub_10061D084()
{
  uint64_t v1 = type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000B47C(v5, (uint64_t)qword_10097C7F0);
  swift_retain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v17 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    unint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_b332BTAddr + 8);
    if (v10 >> 60 == 15)
    {
      uint64_t v15 = 0;
      unint64_t v16 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v11 = 0x80000001007B7770;
      uint64_t v12 = 0xD000000000000015;
    }
    else
    {
      v14[0] = v9;
      uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_b332BTAddr);
      uint64_t v15 = 0;
      unint64_t v16 = 0xE000000000000000;
      v14[1] = v13;
      v14[2] = v10;
      (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:), v1);
      sub_10025ADCC(v13, v10);
      sub_1003CEFBC();
      DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      sub_100250CB0(v13, v10);
      uint64_t v12 = v15;
      unint64_t v11 = v16;
    }
    uint64_t v15 = sub_100254634(v12, v11, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "b332BTAddr set. formatted: %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

void sub_10061D38C(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_pairedPencilsIsEmpty;
  int v4 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_pairedPencilsIsEmpty);
  if (a1 == 2)
  {
    if (v4 == 2) {
      return;
    }
  }
  else if (v4 != 2 && ((((v4 & 1) == 0) ^ a1) & 1) != 0)
  {
    return;
  }
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10000B47C(v5, (uint64_t)qword_10097C7F0);
  swift_retain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    int v9 = *(unsigned __int8 *)(v2 + v3);
    uint64_t v10 = 1702195828;
    if ((v9 & 1) == 0) {
      uint64_t v10 = 0x65736C6166;
    }
    unint64_t v11 = 0xE400000000000000;
    if ((v9 & 1) == 0) {
      unint64_t v11 = 0xE500000000000000;
    }
    if (v9 == 2) {
      uint64_t v12 = 0xD00000000000001ELL;
    }
    else {
      uint64_t v12 = v10;
    }
    if (v9 == 2) {
      unint64_t v13 = 0x80000001007C5590;
    }
    else {
      unint64_t v13 = v11;
    }
    sub_100254634(v12, v13, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "didSet pairedPencilsIsEmpty: %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

void sub_10061D5B8()
{
  uint64_t v1 = v0;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097C7F0);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    int v6 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didPairingSucceed);
    uint64_t v7 = 1702195828;
    if ((v6 & 1) == 0) {
      uint64_t v7 = 0x65736C6166;
    }
    unint64_t v8 = 0xE400000000000000;
    if ((v6 & 1) == 0) {
      unint64_t v8 = 0xE500000000000000;
    }
    if (v6 == 2) {
      uint64_t v9 = 0xD00000000000001BLL;
    }
    else {
      uint64_t v9 = v7;
    }
    if (v6 == 2) {
      unint64_t v10 = 0x80000001007C5710;
    }
    else {
      unint64_t v10 = v8;
    }
    sub_100254634(v9, v10, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "didSet didPairingSucceed: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

void sub_10061D7B0(void *a1)
{
  id v3 = *(id *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sbRemoteHandle);
  *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sbRemoteHandle) = a1;
  id v4 = a1;
  id v6 = v4;
  if (a1)
  {
    if (v3) {
      BOOL v5 = v4 == v3;
    }
    else {
      BOOL v5 = 0;
    }
    if (v5) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v3) {
LABEL_6:
  }
    [v3 invalidate];
LABEL_7:
}

void sub_10061D838()
{
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sessionTimeout;
  if (*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sessionTimeout))
  {
    uint64_t v2 = v0;
    uint64_t v3 = qword_10096A0B0;
    swift_retain();
    if (v3 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_10097C7F0);
    BOOL v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "- stopSessionTimeout", v7, 2u);
      swift_slowDealloc();
    }

    swift_getObjectType();
    OS_dispatch_source.cancel()();
    swift_release();
    *(void *)(v2 + v1) = 0;
    swift_release();
  }
}

uint64_t sub_10061D980()
{
  sub_10061D838();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_uuid;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  sub_100250CB0(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sentBluetoothAddress), *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sentBluetoothAddress + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100250CB0(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID), *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID + 8));
  swift_bridgeObjectRelease();
  sub_100250CB0(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_oobd), *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_oobd + 8));
  swift_unknownObjectWeakDestroy();

  sub_100250CB0(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_b332BTAddr), *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_b332BTAddr + 8));
  return v0;
}

uint64_t sub_10061DB3C()
{
  sub_10061D980();

  return swift_deallocClassInstance();
}

uint64_t sub_10061DB94()
{
  return type metadata accessor for SDB332SetupAgentSessionState(0);
}

uint64_t type metadata accessor for SDB332SetupAgentSessionState(uint64_t a1)
{
  return sub_10000B93C(a1, qword_10097C848);
}

uint64_t sub_10061DBBC()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_10061DD28()
{
  type metadata accessor for OnceManager();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = &_swiftEmptySetSingleton;
  *(void *)(v0 + 16) = v1;
  UUID.init()();
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults;
  *(void *)(v0 + v2) = [self standardUserDefaults];
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_btCnxState) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_hidServiceDiscovered) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_ranEnsurePairingStarted) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_handledPairRequest) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_handledPairResult) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_pairConsented) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairingStarted) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairPrompt) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedEnableBTPrompt) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_lastSentBatteryPercentage) = 0;
  *(_OWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sentBluetoothAddress) = xmmword_100770AE0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_ranHandleDiscover) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_ranHandleUnpairs) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needsUnlockPrompt) = 1;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needToStopBLEUpdates) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_hideBattery) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didCleanup) = 0;
  uint64_t v3 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingUnpair;
  *(void *)(v0 + v3) = sub_1002471A8((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v4 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingDisconnect;
  *(void *)(v0 + v4) = sub_1002471A8((uint64_t)_swiftEmptyArrayStorage);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_startedUnpairProcess) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_startedCheckingFindMyStatus) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_finishedCheckingFindMyStatus) = 0;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needsHiddenChargeStatusForReplacementB332) = 1;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didShowSuccess) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needToResetFromBTAddrRotation) = 0;
  *(unsigned char *)(v0
           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_secondNeedsHiddenChargeStatusForReplacementB332) = 1;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_shouldFindMyPairOnSuccess) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_isPaired) = 2;
  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_peerRequestingPairing) = 0;
  uint64_t v5 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_peerPairingType;
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = 1;
  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_accInfoDict) = 0;
  os_log_type_t v6 = (void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_babyHash);
  *os_log_type_t v6 = 0;
  v6[1] = 0;
  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sessionTimeout) = 0;
  uint64_t v7 = (void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID);
  *uint64_t v7 = 0;
  v7[1] = 0;
  *(_OWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID) = xmmword_100770AE0;
  uint64_t v8 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 1;
  uint64_t v9 = (void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilBtTag);
  *uint64_t v9 = 0;
  v9[1] = 0;
  uint64_t v10 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilCode;
  *(void *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 8) = 1;
  *(_OWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_oobd) = xmmword_100770AE0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceXPCConnectionEstablished) = 2;
  swift_unknownObjectWeakInit();
  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_discoveredBatteryInfo) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_btBatteryScanner) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_remoteHandleActivated) = 2;
  uint64_t v11 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_powerSourceID;
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 1;
  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_findMyUnpairAlert) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) = 1;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete) = 0;
  *(_OWORD *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_b332BTAddr) = xmmword_100770AE0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_pairedPencilsIsEmpty) = 2;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didPairingSucceed) = 2;
  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sbRemoteHandle) = 0;
  return v0;
}

id sub_10061E09C()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for SDB332SetupAgent(0)) init];
  qword_1009949F0 = (uint64_t)result;
  return result;
}

uint64_t sub_10061E12C(void *a1, int a2)
{
  int v57 = a2;
  uint64_t v4 = sub_10000A844(&qword_100974EA0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v54 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  os_log_type_t v55 = (char *)&v50 - v7;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000B47C(v8, (uint64_t)qword_10097C7F0);
  uint64_t v9 = v2;
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 67109376;
    LODWORD(aBlock[0]) = *(unsigned __int8 *)(*(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState]
                                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_hideBattery);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v12 + 8) = 1024;
    LODWORD(aBlock[0]) = v57 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "updateStateRemotely. hideBattery: %{BOOL}d, isCharging: %{BOOL}d", (uint8_t *)v12, 0xEu);
    swift_slowDealloc();
  }
  else
  {
  }
  aBlock[4] = (uint64_t)sub_10063CF54;
  aBlock[5] = 0;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100444120;
  uint64_t aBlock[3] = (uint64_t)&unk_1008E2988;
  unint64_t v13 = _Block_copy(aBlock);
  id v53 = [a1 remoteObjectProxyWithErrorHandler:v13];
  _Block_release(v13);
  double v14 = *(double *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel];
  int v15 = v9[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel + 8];
  uint64_t v16 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v17 = *(void *)(*(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState]
                  + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_discoveredBatteryInfo);
  if (v17)
  {
    [*(id *)(*(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState]+ OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_discoveredBatteryInfo) batteryLevel];
    double v19 = v18;
  }
  else
  {
    double v19 = 0.0;
  }
  if (v15) {
    double v20 = v19;
  }
  else {
    double v20 = v14;
  }
  if ((v15 & (v17 == 0)) != 0) {
    double v21 = 0.0;
  }
  else {
    double v21 = v20;
  }
  uint64_t v22 = *(void *)&v9[v16];
  if ((v57 & 1) != 0
    && v21 <= *(double *)(v22
                        + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_lastSentBatteryPercentage))
  {
    double v21 = *(double *)(v22 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_lastSentBatteryPercentage);
  }
  *(double *)(v22 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_lastSentBatteryPercentage) = v21;
  int v56 = v57;
  if ((v15 & (v17 == 0)) == 0) {
    int v56 = (*(unsigned char *)(*(void *)&v9[v16]
  }
                                     + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_hideBattery) & v57);
  os_log_type_t v23 = v9;
  char v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v52 = v23;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    aBlock[0] = v51;
    *(_DWORD *)uint64_t v26 = 134219010;
    uint64_t v58 = *(void *)&v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v26 + 12) = 2080;
    if (v15)
    {
      unint64_t v27 = 0x80000001007C5340;
      unint64_t v28 = 0xD000000000000014;
    }
    else
    {
      unint64_t v28 = Double.description.getter();
      unint64_t v27 = v30;
    }
    uint64_t v58 = sub_100254634(v28, v27, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 22) = 2080;
    if (v17)
    {
      unint64_t v31 = Double.description.getter();
      unint64_t v33 = v32;
    }
    else
    {
      unint64_t v31 = 0xD00000000000001CLL;
      unint64_t v33 = 0x80000001007C5360;
    }
    uint64_t v58 = sub_100254634(v31, v33, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 32) = 2048;
    uint64_t v58 = *(void *)(*(void *)&v9[v16]
                    + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_lastSentBatteryPercentage);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    unint64_t v29 = v52;

    *(_WORD *)(v26 + 42) = 1024;
    LODWORD(v58) = v56 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Sending B332 battery level: %f |\nIOKitLevel: %s, advertisementLevel: %s, lastSent: %f, hiding: %{BOOL}d", (uint8_t *)v26, 0x30u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    unint64_t v29 = v23;
  }
  uint64_t v34 = *(void *)&v9[v16];
  uint64_t v35 = *(void *)(v34 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType);
  int v36 = *(unsigned __int8 *)(v34 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType + 8);
  uint64_t v37 = *(void **)(v34 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  uint64_t v38 = (uint64_t)v55;
  if (v37)
  {
    id v39 = [v37 identifier];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v40 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v38, 0, 1, v40);
  }
  else
  {
    uint64_t v41 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v38, 1, 1, v41);
  }
  uint64_t v42 = v54;
  unint64_t v43 = *(void *)&v29[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_orientation] - 1;
  if (v43 > 3) {
    uint64_t v44 = 1;
  }
  else {
    uint64_t v44 = qword_10077F590[v43];
  }
  sub_10024A330(v38, v54, &qword_100974EA0);
  uint64_t v45 = type metadata accessor for UUID();
  uint64_t v46 = *(void *)(v45 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v42, 1, v45) != 1)
  {
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v42, v45);
  }
  if (v36) {
    uint64_t v48 = 0;
  }
  else {
    uint64_t v48 = v35;
  }
  [v53 updateDeviceInfoWithDeviceType:v48 batteryLevel:(v56 & 1) == 0 batteryLevelKnown:v44 edge:0 orientation:v57 & 1 isCharging:isa identifier:v21];
  swift_unknownObjectRelease();

  return sub_10000A7E8(v38, &qword_100974EA0);
}

void sub_10061E87C(char a1)
{
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sbHasStarted) != (a1 & 1))
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000B47C(v2, (uint64_t)qword_10097C7F0);
    id v6 = v1;
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 67109120;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v3, v4, "sbHasStarted = %{BOOL}d", v5, 8u);
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

uint64_t sub_10061E9EC()
{
  if (SBSSpringBoardBlockableServerPort())
  {
    SBGetIsAlive();
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_10097C7F0);
    uint64_t v1 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v1, v5))
    {
      uint64_t v6 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 67109376;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v6 + 8) = 256;
      swift_beginAccess();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v1, v5, "getSBIsAlive() - SBGetIsAlive result: %d, outIsAlive: %hhu", (uint8_t *)v6, 0xBu);
      goto LABEL_11;
    }
  }
  else
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v0 = type metadata accessor for Logger();
    sub_10000B47C(v0, (uint64_t)qword_10097C7F0);
    uint64_t v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "sbPort = 0", v3, 2u);
LABEL_11:
      swift_slowDealloc();
    }
  }

  return 0;
}

uint64_t sub_10061EC34()
{
  uint64_t v1 = type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = 0;
  uint64_t v6 = (uint64_t *)(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_b332BTAddr);
  unint64_t v7 = v6[1];
  if (v7 >> 60 != 15)
  {
    uint64_t v8 = *v6;
    uint64_t v12 = 0;
    unint64_t v13 = 0xE000000000000000;
    v11[0] = v8;
    v11[1] = v7;
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:), v1);
    sub_10025ADCC(v8, v7);
    sub_1003CEFBC();
    DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v9._uint64_t countAndFlagsBits = v12;
    uint64_t v10 = (void *)v13;
    uint64_t v12 = 0x206D6F646E6152;
    unint64_t v13 = 0xE700000000000000;
    v9._id object = v10;
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    sub_100250CB0(v8, v7);
    return v12;
  }
  return result;
}

void sub_10061EDD0()
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097C7F0);
  uint64_t v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v5 = 136315138;
    if (v2[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel + 8])
    {
      unint64_t v6 = 0x80000001007C56E0;
      unint64_t v7 = 0xD000000000000020;
    }
    else
    {
      unint64_t v7 = Double.description.getter();
      unint64_t v6 = v8;
    }
    sub_100254634(v7, v6, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Update b332 status: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = Strong;
    sub_10061E12C(Strong, 1);
  }
  os_log_type_t v11 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v11)
  {
    uint64_t v12 = v11;
    sub_10061E12C(v11, 1);
  }
}

id sub_10061EFF8()
{
  uint64_t v1 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveEveryObserver(v1, v0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for SDB332SetupAgent(0);
  return [super dealloc];
}

uint64_t sub_10061F1B8()
{
  return type metadata accessor for SDB332SetupAgent(0);
}

uint64_t type metadata accessor for SDB332SetupAgent(uint64_t a1)
{
  return sub_10000B93C(a1, (uint64_t *)&unk_10097D068);
}

char *sub_10061F1E0()
{
  uint64_t v28 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  objc_super v3 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  uint64_t v27 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q;
  v26[1] = sub_10000B740(0, (unint64_t *)&qword_10096A1A0);
  unint64_t v6 = v0;
  static DispatchQoS.unspecified.getter();
  unint64_t v30 = _swiftEmptyArrayStorage;
  sub_100655CC8((unint64_t *)&unk_100974840, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000A844((uint64_t *)&unk_10096A1B0);
  sub_1002AE308((unint64_t *)&qword_100974850, (uint64_t *)&unk_10096A1B0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v28);
  *(void *)(v26[2] + v27) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_bleProvider] = 0;
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_orientationObserver] = 0;
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_orientation] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v7 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor;
  *(void *)&v6[v7] = [objc_allocWithZone((Class)CUSystemMonitor) init];
  v6[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitorActivated] = 0;
  v6[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sbHasStarted] = 0;
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_peripheralsIConnectedTo] = &_swiftEmptyDictionarySingleton;
  unint64_t v8 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastB332WeWantedToPair];
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_powerSourceMonitor;
  *(void *)&v6[v10] = [objc_allocWithZone((Class)CUPowerSourceMonitor) init];
  os_log_type_t v11 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastAccessoryDetachTimestamp];
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastAttachedAccessorySerialNum];
  *uint64_t v13 = 0;
  v13[1] = 0;
  double v14 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel];
  *(void *)double v14 = 0;
  v14[8] = 1;
  uint64_t v15 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  type metadata accessor for SDB332SetupAgentSessionState(0);
  uint64_t v16 = swift_allocObject();
  sub_10061DD28();
  *(void *)&v6[v15] = v16;
  v6[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionInProgress] = 0;
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionAttempt] = 0;
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionMaxAttempts] = 10;
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionWaitDelay] = 0x3FE8000000000000;
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionWaitIndex] = 0;
  id v17 = [objc_allocWithZone((Class)CBCentralManager) init];
  *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central] = v17;

  double v18 = (objc_class *)type metadata accessor for SDB332SetupAgent(0);
  v29.receiver = v6;
  v29.super_class = v18;
  double v19 = (char *)[super init];
  double v20 = *(void **)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_powerSourceMonitor];
  uint64_t v21 = *(void *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q];
  uint64_t v22 = v19;
  [v20 setDispatchQueue:v21];
  uint64_t v23 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor;
  [*(id *)&v22[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor] setDispatchQueue:v21];
  [*(id *)&v22[v23] setMeDeviceUseFindMyLocate:1];
  id v24 = v20;
  [v24 setChangeFlags:0xFFFFFFFFLL];

  return v22;
}

id sub_10061F710(uint64_t a1, unint64_t a2)
{
  objc_super v3 = v2;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_10097C7F0);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_100254634(a1, a2, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Received Darwin notification: %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return [v3 showEducationUIIfNecessary:v11, v12];
}

void sub_10061F8D4()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  objc_super v3 = (char *)&v124 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (id)MobileGestalt_get_current_device();
  if (v8)
  {
    uint64_t v9 = v8;
    int deviceSupportsApplePencil = MobileGestalt_get_deviceSupportsApplePencil();

    if (deviceSupportsApplePencil)
    {
      if ([self b332PairingEnabled])
      {
        uint64_t v127 = v5;
        uint64_t v128 = v3;
        uint64_t v129 = v4;
        uint64_t v130 = v1;
        uint64_t v11 = v131;
        uint64_t v126 = *(uint64_t *)((char *)&v131->isa + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q);
        -[NSObject setDispatchQueue:](v131, "setDispatchQueue:");
        id v12 = [self standardUserDefaults];
        sub_10056FCB8();

        uint64_t v13 = CFNotificationCenterGetDarwinNotifyCenter();
        double v14 = (__CFString *)String._bridgeToObjectiveC()();
        CFNotificationCenterAddObserver(v13, v11, (CFNotificationCallback)sub_100620DF0, v14, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

        if (IsAppleInternalBuild())
        {
          uint64_t v15 = self;
          id v16 = [v15 defaultCenter];
          uint64_t v125 = v0;
          id v17 = v16;
          NSString v18 = String._bridgeToObjectiveC()();
          uint64_t v19 = swift_allocObject();
          double v20 = v131;
          *(void *)(v19 + 16) = v131;
          char v137 = sub_1006553A8;
          uint64_t v138 = v19;
          uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
          uint64_t v134 = 1107296256;
          unint64_t v124 = 0xD00000000000002ALL;
          uint64_t v135 = sub_10061C838;
          uint64_t v136 = &unk_1008E3268;
          uint64_t v21 = _Block_copy(&aBlock);
          uint64_t v22 = v20;
          swift_release();
          id v23 = [v17 addObserverForName:v18 object:0 queue:0 usingBlock:v21];
          _Block_release(v21);
          swift_unknownObjectRelease();

          id v24 = [v15 defaultCenter];
          NSString v25 = String._bridgeToObjectiveC()();
          uint64_t v26 = swift_allocObject();
          *(void *)(v26 + 16) = v22;
          char v137 = sub_1006553E8;
          uint64_t v138 = v26;
          uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
          uint64_t v134 = 1107296256;
          uint64_t v135 = sub_10061C838;
          uint64_t v136 = &unk_1008E32B8;
          uint64_t v27 = _Block_copy(&aBlock);
          uint64_t v28 = v22;
          swift_release();
          id v29 = [v24 addObserverForName:v25 object:0 queue:0 usingBlock:v27];
          _Block_release(v27);
          swift_unknownObjectRelease();

          id v30 = [v15 defaultCenter];
          NSString v31 = String._bridgeToObjectiveC()();
          uint64_t v32 = swift_allocObject();
          *(void *)(v32 + 16) = v28;
          char v137 = sub_100655428;
          uint64_t v138 = v32;
          uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
          uint64_t v134 = 1107296256;
          uint64_t v135 = sub_10061C838;
          uint64_t v136 = &unk_1008E3308;
          unint64_t v33 = _Block_copy(&aBlock);
          uint64_t v34 = v28;
          swift_release();
          id v35 = [v30 addObserverForName:v31 object:0 queue:0 usingBlock:v33];
          _Block_release(v33);
          swift_unknownObjectRelease();

          id v36 = [v15 defaultCenter];
          NSString v37 = String._bridgeToObjectiveC()();
          uint64_t v38 = swift_allocObject();
          *(void *)(v38 + 16) = v34;
          char v137 = sub_100655468;
          uint64_t v138 = v38;
          uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
          uint64_t v134 = 1107296256;
          uint64_t v135 = sub_10061C838;
          uint64_t v136 = &unk_1008E3358;
          id v39 = _Block_copy(&aBlock);
          uint64_t v40 = v34;
          swift_release();
          id v41 = [v36 addObserverForName:v37 object:0 queue:0 usingBlock:v39];
          _Block_release(v39);
          swift_unknownObjectRelease();

          id v42 = [v15 defaultCenter];
          NSString v43 = String._bridgeToObjectiveC()();
          uint64_t v44 = swift_allocObject();
          *(void *)(v44 + 16) = v40;
          char v137 = sub_1006554A0;
          uint64_t v138 = v44;
          uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
          uint64_t v134 = 1107296256;
          uint64_t v135 = sub_10061C838;
          uint64_t v136 = &unk_1008E33A8;
          uint64_t v45 = _Block_copy(&aBlock);
          uint64_t v46 = v40;
          swift_release();
          id v47 = [v42 addObserverForName:v43 object:0 queue:0 usingBlock:v45];
          _Block_release(v45);
          swift_unknownObjectRelease();

          id v48 = [v15 defaultCenter];
          NSString v49 = String._bridgeToObjectiveC()();
          uint64_t v50 = swift_allocObject();
          *(void *)(v50 + 16) = v46;
          char v137 = sub_1006554D8;
          uint64_t v138 = v50;
          uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
          uint64_t v134 = 1107296256;
          uint64_t v135 = sub_10061C838;
          uint64_t v136 = &unk_1008E33F8;
          uint64_t v51 = _Block_copy(&aBlock);
          uint64_t v52 = v46;
          swift_release();
          id v53 = [v48 addObserverForName:v49 object:0 queue:0 usingBlock:v51];
          _Block_release(v51);
          swift_unknownObjectRelease();

          id v54 = [v15 defaultCenter];
          NSString v55 = String._bridgeToObjectiveC()();
          uint64_t v56 = swift_allocObject();
          *(void *)(v56 + 16) = v52;
          char v137 = sub_100655510;
          uint64_t v138 = v56;
          uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
          uint64_t v134 = 1107296256;
          uint64_t v135 = sub_10061C838;
          uint64_t v136 = &unk_1008E3448;
          int v57 = _Block_copy(&aBlock);
          uint64_t v58 = v52;
          swift_release();
          id v59 = [v54 addObserverForName:v55 object:0 queue:0 usingBlock:v57];
          _Block_release(v57);
          swift_unknownObjectRelease();

          id v60 = [v15 defaultCenter];
          NSString v61 = String._bridgeToObjectiveC()();
          uint64_t v62 = swift_allocObject();
          *(void *)(v62 + 16) = v58;
          char v137 = sub_100655548;
          uint64_t v138 = v62;
          uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
          uint64_t v134 = 1107296256;
          uint64_t v135 = sub_10061C838;
          uint64_t v136 = &unk_1008E3498;
          uint64_t v63 = _Block_copy(&aBlock);
          uint64_t v64 = v58;
          swift_release();
          id v65 = [v60 addObserverForName:v61 object:0 queue:0 usingBlock:v63];
          _Block_release(v63);
          swift_unknownObjectRelease();

          id v66 = [v15 defaultCenter];
          NSString v67 = String._bridgeToObjectiveC()();
          uint64_t v68 = swift_allocObject();
          *(void *)(v68 + 16) = v64;
          char v137 = sub_100655580;
          uint64_t v138 = v68;
          uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
          uint64_t v134 = 1107296256;
          uint64_t v135 = sub_10061C838;
          uint64_t v136 = &unk_1008E34E8;
          uint64_t v69 = _Block_copy(&aBlock);
          id v70 = v64;
          swift_release();
          id v71 = [v66 addObserverForName:v67 object:0 queue:0 usingBlock:v69];
          _Block_release(v69);
          swift_unknownObjectRelease();

          id v72 = [v15 defaultCenter];
          NSString v73 = String._bridgeToObjectiveC()();
          uint64_t v74 = swift_allocObject();
          *(void *)(v74 + 16) = v70;
          char v137 = sub_1006555B8;
          uint64_t v138 = v74;
          uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
          uint64_t v134 = 1107296256;
          uint64_t v135 = sub_10061C838;
          uint64_t v136 = &unk_1008E3538;
          uint64_t v75 = _Block_copy(&aBlock);
          id v76 = v70;
          swift_release();
          id v77 = [v72 addObserverForName:v73 object:0 queue:0 usingBlock:v75];
          _Block_release(v75);
          swift_unknownObjectRelease();

          id v78 = [v15 defaultCenter];
          NSString v79 = String._bridgeToObjectiveC()();
          uint64_t v80 = swift_allocObject();
          *(void *)(v80 + 16) = v76;
          char v137 = sub_1006555F8;
          uint64_t v138 = v80;
          uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
          uint64_t v134 = 1107296256;
          uint64_t v135 = sub_10061C838;
          uint64_t v136 = &unk_1008E3588;
          uint64_t v81 = _Block_copy(&aBlock);
          id v82 = v76;
          swift_release();
          id v83 = [v78 addObserverForName:v79 object:0 queue:0 usingBlock:v81];
          _Block_release(v81);
          swift_unknownObjectRelease();

          id v84 = [v15 defaultCenter];
          NSString v85 = String._bridgeToObjectiveC()();
          uint64_t v86 = swift_allocObject();
          *(void *)(v86 + 16) = v82;
          char v137 = sub_100655630;
          uint64_t v138 = v86;
          uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
          uint64_t v134 = 1107296256;
          uint64_t v135 = sub_10061C838;
          uint64_t v136 = &unk_1008E35D8;
          id v87 = _Block_copy(&aBlock);
          id v88 = v82;
          swift_release();
          id v89 = [v84 addObserverForName:v85 object:0 queue:0 usingBlock:v87];
          _Block_release(v87);
          swift_unknownObjectRelease();

          uint64_t v0 = v125;
          id v90 = [v15 defaultCenter];
          NSString v91 = String._bridgeToObjectiveC()();
          uint64_t v92 = swift_allocObject();
          *(void *)(v92 + 16) = v88;
          char v137 = sub_100655668;
          uint64_t v138 = v92;
          uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
          uint64_t v134 = 1107296256;
          uint64_t v135 = sub_10061C838;
          uint64_t v136 = &unk_1008E3628;
          int v93 = _Block_copy(&aBlock);
          id v94 = v88;
          swift_release();
          id v95 = [v90 addObserverForName:v91 object:0 queue:0 usingBlock:v93];
          _Block_release(v93);
          swift_unknownObjectRelease();
        }
        id v96 = [self defaultCenter];
        uint64_t v97 = swift_allocObject();
        uint64_t v98 = v131;
        *(void *)(v97 + 16) = v131;
        char v137 = sub_100655670;
        uint64_t v138 = v97;
        uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
        uint64_t v134 = 1107296256;
        uint64_t v135 = sub_10061C838;
        uint64_t v136 = &unk_1008E3678;
        int64_t v99 = _Block_copy(&aBlock);
        uint64_t v100 = v98;
        uint64_t v101 = @"com.apple.sharingd.SystemUIChanged";
        swift_release();
        id v102 = [v96 addObserverForName:v101 object:0 queue:0 usingBlock:v99];
        _Block_release(v99);
        swift_unknownObjectRelease();

        uint64_t v103 = swift_allocObject();
        *(void *)(v103 + 16) = v100;
        char v137 = sub_1006556B0;
        uint64_t v138 = v103;
        uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
        uint64_t v134 = 1107296256;
        uint64_t v135 = sub_100296520;
        uint64_t v136 = &unk_1008E36C8;
        uint64_t v104 = _Block_copy(&aBlock);
        unint64_t v105 = v100;
        static DispatchQoS.unspecified.getter();
        uint64_t v139 = _swiftEmptyArrayStorage;
        sub_100655CC8((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10000A844((uint64_t *)&unk_10096C490);
        sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
        uint64_t v106 = v128;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v104);
        (*(void (**)(char *, uint64_t))(v130 + 8))(v106, v0);
        (*(void (**)(char *, uint64_t))(v127 + 8))(v7, v129);
        swift_release();
        uint64_t v107 = (objc_class *)type metadata accessor for SDB332SetupAgent(0);
        v132.receiver = v105;
        v132.super_class = v107;
        [super _activate];
        if (qword_10096A0B0 != -1) {
          swift_once();
        }
        uint64_t v108 = type metadata accessor for Logger();
        sub_10000B47C(v108, (uint64_t)qword_10097C7F0);
        uint64_t v109 = Logger.logObject.getter();
        os_log_type_t v110 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v109, v110))
        {
          uint64_t v111 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v111 = 0;
          _os_log_impl((void *)&_mh_execute_header, v109, v110, "Activated", v111, 2u);
          swift_slowDealloc();
        }
      }
      else
      {
        if (qword_10096A0B0 != -1) {
          swift_once();
        }
        uint64_t v120 = type metadata accessor for Logger();
        sub_10000B47C(v120, (uint64_t)qword_10097C7F0);
        uint64_t v131 = Logger.logObject.getter();
        os_log_type_t v121 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v131, v121))
        {
          uint64_t v122 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v122 = 0;
          _os_log_impl((void *)&_mh_execute_header, v131, v121, "b332PairingEnabled = false. Don't activate.", v122, 2u);
          swift_slowDealloc();
        }
        id v123 = v131;
      }
    }
    else
    {
      int v112 = SFDeviceModelCodeGet();
      sub_1006552E0(v112);
      uint64_t v113 = String.init(cString:)();
      unint64_t v115 = v114;
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v116 = type metadata accessor for Logger();
      sub_10000B47C(v116, (uint64_t)qword_10097C7F0);
      swift_bridgeObjectRetain();
      id v117 = Logger.logObject.getter();
      os_log_type_t v118 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v117, v118))
      {
        uint64_t v119 = (uint8_t *)swift_slowAlloc();
        uint64_t aBlock = swift_slowAlloc();
        *(_DWORD *)uint64_t v119 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v139 = (void *)sub_100254634(v113, v115, &aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v117, v118, "Device model code (%s) does not support Apple Pencil. Don't activate.", v119, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100620DF0(uint64_t result, void *a2, void *a3, uint64_t a4, void *a5)
{
  if (a2 && a3)
  {
    uint64_t v7 = (void *)result;
    id v8 = a2;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v10;
    id v12 = a3;
    id v13 = v7;
    id v14 = a5;
    sub_10061F710(v9, v11);

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100620EBC(uint64_t a1)
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097C7F0);
  objc_super v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Erasing B332 setup defaults", v5, 2u);
    swift_slowDealloc();
  }

  sub_10062A2E8();
  id v6 = [self standardUserDefaults];
  sub_10056FA30();

  type metadata accessor for SDB332SetupAgentSessionState(0);
  uint64_t v7 = swift_allocObject();
  sub_10061DD28();
  *(void *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState) = v7;

  return swift_release();
}

uint64_t sub_100621008(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q];
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  aBlock[4] = a4;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  uint64_t aBlock[3] = a5;
  id v17 = _Block_copy(aBlock);
  NSString v18 = a2;
  static DispatchQoS.unspecified.getter();
  v20[1] = _swiftEmptyArrayStorage;
  sub_100655CC8((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

void sub_1006212BC(uint64_t a1)
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097C7F0);
  objc_super v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "sharingCallBluetoothAddressChangedHandler", v5, 2u);
    swift_slowDealloc();
  }

  id v6 = [*(id *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor) bluetoothAddressChangedHandler];
  if (v6)
  {
    uint64_t v7 = v6;
    (*((void (**)(void))v6 + 2))();
    _Block_release(v7);
  }
}

uint64_t sub_1006213F0(uint64_t a1)
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097C7F0);
  objc_super v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "sendsUIUpdates = false, sharingDisableB332UIUpdates", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  char v7 = *(unsigned char *)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates);
  *(unsigned char *)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) = 0;
  swift_retain();
  sub_10061CF0C(v7, &OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates, "sendsUIUpdates = %{BOOL}d");

  return swift_release();
}

void sub_10062151C()
{
}

uint64_t sub_10062153C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v15[0] - 8);
  __chkstk_darwin(v15[0]);
  uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[4] = a3;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  uint64_t aBlock[3] = a4;
  uint64_t v13 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter();
  v15[1] = _swiftEmptyArrayStorage;
  sub_100655CC8((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, void))(v10 + 8))(v12, v15[0]);
}

void sub_1006217C8()
{
}

void sub_1006217DC()
{
}

void sub_1006217F0()
{
}

void sub_100621804()
{
}

void sub_100621824(const char *a1, void (*a2)(void))
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_10097C7F0);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, a1, v7, 2u);
    swift_slowDealloc();
  }

  id v8 = [self standardUserDefaults];
  a2();
}

void sub_100621954()
{
}

void sub_100621968(const char *a1, char a2, uint64_t a3)
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_10097C7F0);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, a1, v9, 2u);
    swift_slowDealloc();
  }

  uint64_t v10 = self;
  id v11 = [v10 standardUserDefaults];
  sub_10056F54C(a2 & 1);

  id v12 = [v10 standardUserDefaults];
  sub_10056F408(a3);
}

id sub_100621AC8(void *a1)
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097C7F0);
  objc_super v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "sharing.simulateB332TapToPair", v5, 2u);
    swift_slowDealloc();
  }

  return [a1 pairTapped];
}

void sub_100621BC0()
{
}

void sub_100621BD0()
{
}

void sub_100621BE0(const char *a1, char a2)
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_10097C7F0);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, a1, v7, 2u);
    swift_slowDealloc();
  }

  id v8 = [self standardUserDefaults];
  sub_10056F584(a2 & 1);
}

uint64_t sub_100621D14(uint64_t a1, char *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v21 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  os_log_type_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v19 = *(void *)(v7 - 8);
  uint64_t v20 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Notification();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  v18[1] = *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q];
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_10065597C;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  uint64_t aBlock[3] = &unk_1008E3B00;
  uint64_t v15 = _Block_copy(aBlock);
  uint64_t v16 = a2;
  static DispatchQoS.unspecified.getter();
  uint64_t v22 = _swiftEmptyArrayStorage;
  sub_100655CC8((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v20);
  return swift_release();
}

void sub_1006220A0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v4 - 8);
  os_log_type_t v6 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Notification();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = sub_10000B47C(v11, (uint64_t)qword_10097C7F0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  unint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v48[1] = a1;
    v48[2] = v12;
    NSString v49 = v1;
    uint64_t v50 = v6;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v54 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315138;
    if (Notification.userInfo.getter())
    {
      unint64_t v16 = Dictionary.description.getter();
      unint64_t v18 = v17;
      swift_bridgeObjectRelease();
    }
    else
    {
      v53[0] = 0;
      v53[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v18 = 0x80000001007C5A00;
      unint64_t v16 = 0xD00000000000002BLL;
    }
    v53[0] = sub_100254634(v16, v18, (uint64_t *)&v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "showPencilUI. Info: %s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v2 = v49;
    os_log_type_t v6 = v50;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v19 = Notification.userInfo.getter();
  if (!v19)
  {
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v27, v28)) {
      goto LABEL_37;
    }
    id v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v29 = 0;
    id v30 = "showPencilUI called without userInfo";
LABEL_35:
    _os_log_impl((void *)&_mh_execute_header, v27, v28, v30, v29, 2u);
LABEL_36:
    swift_slowDealloc();
    goto LABEL_37;
  }
  uint64_t v20 = v19;
  uint64_t v51 = 0x657079546975;
  unint64_t v52 = 0xE600000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v20 + 16) && (unint64_t v21 = sub_100583878((uint64_t)v53), (v22 & 1) != 0))
  {
    sub_10024D2D4(*(void *)(v20 + 56) + 32 * v21, (uint64_t)&v54);
  }
  else
  {
    long long v54 = 0u;
    long long v55 = 0u;
  }
  sub_10025B0A8((uint64_t)v53);
  if (!*((void *)&v55 + 1))
  {
    swift_bridgeObjectRelease();
    sub_10000A7E8((uint64_t)&v54, (uint64_t *)&unk_10096AC20);
LABEL_23:
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v27, v28)) {
      goto LABEL_37;
    }
    id v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v29 = 0;
    id v30 = "showPencilUI called without UI type";
    goto LABEL_35;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  uint64_t v24 = v51;
  unint64_t v23 = v52;
  uint64_t v51 = 0x79546C69636E6570;
  unint64_t v52 = 0xEA00000000006570;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v20 + 16) && (unint64_t v25 = sub_100583878((uint64_t)v53), (v26 & 1) != 0))
  {
    sub_10024D2D4(*(void *)(v20 + 56) + 32 * v25, (uint64_t)&v54);
  }
  else
  {
    long long v54 = 0u;
    long long v55 = 0u;
  }
  sub_10025B0A8((uint64_t)v53);
  if (!*((void *)&v55 + 1))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10000A7E8((uint64_t)&v54, (uint64_t *)&unk_10096AC20);
LABEL_33:
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v27, v28)) {
      goto LABEL_37;
    }
    id v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v29 = 0;
    id v30 = "showPencilUI called without valid Pencil type";
    goto LABEL_35;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  uint64_t v31 = v51;
  if (v24 == 0x6961507473726966 && v23 == 0xE900000000000072
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v32 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v6, 1, 1, v32);
    type metadata accessor for MainActor();
    id v33 = v2;
    uint64_t v34 = static MainActor.shared.getter();
    id v35 = (void *)swift_allocObject();
    v35[2] = v34;
    v35[3] = &protocol witness table for MainActor;
    v35[4] = v33;
    v35[5] = v31;
    v35[6] = v20;
    id v36 = &unk_10097D460;
LABEL_40:
    sub_10028CFA8((uint64_t)v6, (uint64_t)v36, (uint64_t)v35);
    swift_release();
    return;
  }
  if (v24 == 1819044208 && v23 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v37 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v6, 1, 1, v37);
    type metadata accessor for MainActor();
    id v38 = v2;
    uint64_t v39 = static MainActor.shared.getter();
    id v35 = (void *)swift_allocObject();
    v35[2] = v39;
    v35[3] = &protocol witness table for MainActor;
    v35[4] = v38;
    v35[5] = v31;
    v35[6] = v20;
    id v36 = &unk_10097D450;
    goto LABEL_40;
  }
  if (v24 == 0x6574746142776F6CLL && v23 == 0xEE006C6C69507972
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v51 = 0x656772616863;
    unint64_t v52 = 0xE600000000000000;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v20 + 16) && (unint64_t v40 = sub_100583878((uint64_t)v53), (v41 & 1) != 0))
    {
      sub_10024D2D4(*(void *)(v20 + 56) + 32 * v40, (uint64_t)&v54);
    }
    else
    {
      long long v54 = 0u;
      long long v55 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10025B0A8((uint64_t)v53);
    if (*((void *)&v55 + 1))
    {
      if (swift_dynamicCast())
      {
        uint64_t v42 = v51;
        uint64_t v43 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v6, 1, 1, v43);
        type metadata accessor for MainActor();
        id v44 = v2;
        uint64_t v45 = static MainActor.shared.getter();
        id v35 = (void *)swift_allocObject();
        v35[2] = v45;
        v35[3] = &protocol witness table for MainActor;
        v35[4] = v44;
        v35[5] = v31;
        v35[6] = v42;
        id v36 = &unk_10097D440;
        goto LABEL_40;
      }
    }
    else
    {
      sub_10000A7E8((uint64_t)&v54, (uint64_t *)&unk_10096AC20);
    }
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      id v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v29 = 0;
      id v30 = "showPencilUI called for low-battery pill without valid charge";
      goto LABEL_35;
    }
LABEL_37:

    return;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v46 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v27, v46))
  {
    id v47 = (uint8_t *)swift_slowAlloc();
    v53[0] = swift_slowAlloc();
    *(_DWORD *)id v47 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)&long long v54 = sub_100254634(v24, v23, v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v27, v46, "showPencilUI called with unrecognized UI type: %s", v47, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    goto LABEL_36;
  }

  swift_bridgeObjectRelease_n();
}

void sub_100622BA0()
{
  uint64_t v1 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v1 - 8);
  objc_super v3 = (char *)&v213 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v233 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  os_log_type_t v6 = (char *)&v213 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v231 = *(void *)(v7 - 8);
  uint64_t v232 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v213 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v230 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v12 = (unint64_t)&v213 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = type metadata accessor for DispatchTime();
  uint64_t v14 = __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v213 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v213 - v18;
  uint64_t v20 = *(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState];
  if (*(unsigned char *)(v20 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType + 8)) {
    return;
  }
  unint64_t v21 = *(void *)(v20 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType);
  BOOL v22 = v21 > 4;
  uint64_t v23 = (1 << v21) & 0x1A;
  if (v22 || v23 == 0) {
    return;
  }
  uint64_t v224 = v17;
  uint64_t v227 = v4;
  uint64_t v228 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  v226 = v3;
  uint64_t v25 = *(void *)(v20 + 16);
  v229 = v0;
  char v26 = v0;
  swift_retain();
  unint64_t v225 = (unint64_t)"<no found.batteryInfo>";
  sub_1002C90B0(918, 0xD000000000000057, 0x80000001007C52B0, v25, (uint64_t)v26);

  uint64_t v27 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sbHasStarted;
  if (v26[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sbHasStarted])
  {
    char v28 = 1;
    char v29 = 1;
  }
  else
  {
    char v29 = sub_10061E9EC();
    char v28 = v26[v27];
  }
  v26[v27] = v29 & 1;
  sub_10061E87C(v28);
  if (v26[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitorActivated] != 1)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v40 = type metadata accessor for Logger();
    sub_10000B47C(v40, (uint64_t)qword_10097C7F0);
    char v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "System monitor not activated. Bailing.", v43, 2u);
      swift_slowDealloc();
    }

    goto LABEL_26;
  }
  uint64_t v30 = *(void *)&v229[v228];
  if (*(unsigned char *)(v30 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete))
  {
LABEL_26:
    goto LABEL_28;
  }
  uint64_t v221 = v10;
  uint64_t v223 = v25;
  uint64_t v31 = v30 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
  uint64_t v32 = *(void *)v31;
  int v33 = *(unsigned __int8 *)(v31 + 8);
  sub_1006307D4();
  v222 = v26;
  LODWORD(v219) = v33;
  v220 = (void *)v32;
  sub_10062B7C8();
  sub_10062D488();
  sub_10062D930();
  sub_10062DD78();
  uint64_t v34 = v26;
  sub_1002C90C8(950, 0xD000000000000057, v225 | 0x8000000000000000, v223, (uint64_t)v34);

  sub_100630DC4();
  v218 = v34;
  uint64_t v44 = *(void *)&v229[v228];
  unint64_t v217 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_pairedPencilsIsEmpty;
  int v45 = *(unsigned __int8 *)(v44 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_pairedPencilsIsEmpty);
  if (v45 == 2)
  {
    os_log_type_t v46 = *(void **)&v218[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central];
    swift_retain();
    id v47 = [v46 sharedPairingAgent];
    if (!v47)
    {
LABEL_221:
      __break(1u);
      goto LABEL_222;
    }
    id v48 = v47;
    sub_10062AC20();
    unint64_t v50 = v49;

    if (v50 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v51 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    char v52 = v51 == 0;
    unint64_t v53 = v217;
    LOBYTE(v45) = *(unsigned char *)(v44 + v217);
  }
  else
  {
    swift_retain();
    char v52 = v45 & 1;
    unint64_t v53 = v217;
  }
  *(unsigned char *)(v44 + v53) = v52;
  sub_10061D38C(v45);
  swift_release();
  uint64_t v44 = *(void *)&v229[v228];
  long long v54 = *(void **)(v44 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults);
  swift_retain();
  if (sub_10056EBEC())
  {
    NSString v55 = String._bridgeToObjectiveC()();
    unsigned __int8 v56 = [v54 BOOLForKey:v55];
    swift_release();

    if ((v56 & 1) == 0)
    {
      sub_1006310EC();
      sub_1006314B0();
      sub_10062E404();
      char v57 = v219;
      if (v220 == (void *)3) {
        char v58 = v219;
      }
      else {
        char v58 = 1;
      }
      if ((v58 & 1) == 0) {
        sub_100631B68(0);
      }
      sub_10062E23C();
      sub_10062EBC0();
      if ((v57 & 1) == 0 && (v220 == (void *)4 || v220 == (void *)1))
      {
        uint64_t v59 = *(void *)&v229[v228];
        if (*(unsigned char *)(v59 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairPrompt) == 1)
        {
          sub_100629E00(0);
          uint64_t v59 = *(void *)&v229[v228];
        }
        uint64_t v60 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairingStarted;
        if ((*(unsigned char *)(v59 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairingStarted) & 1) == 0)
        {
          sub_10062F09C(1, (uint64_t)v220);
          uint64_t v59 = *(void *)&v229[v228];
          uint64_t v60 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairingStarted;
        }
        *(unsigned char *)(v59 + v6sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = 1;
      }
      sub_100631E3C();
      sub_100632120();
      uint64_t v215 = sub_1006326B8();
      unint64_t v216 = v61;
      unint64_t v217 = v62;
      unint64_t v219 = v63;
      v220 = 0;
      uint64_t v119 = v215;
      unint64_t v120 = v216;
      sub_10025ADCC(v215, v216);
      unint64_t v121 = v219;
      unint64_t v214 = v219 >> 62;
      uint64_t v122 = v217;
      sub_10025ADCC(v217, v219);
      sub_1002C90E0(1007, 0xD000000000000057, v225 | 0x8000000000000000, v223, v119, v120, v122, v121);
      sub_100250CC4(v119, v120);
      switch(v214)
      {
        case 1uLL:
          uint64_t v44 = v217;
          unint64_t v137 = HIDWORD(v217);
          sub_100250CC4(v217, v219);
          LODWORD(v124) = v137 - v44;
          if (__OFSUB__(v137, v44)) {
            goto LABEL_219;
          }
          uint64_t v124 = (int)v124;
LABEL_119:
          if (v124 == 16)
          {
            int v139 = 1;
            uint64_t v140 = (uint64_t)v220;
            sub_100631750(1, 1010, 0x29286E7572, 0xE500000000000000);
            v220 = (void *)v140;
            if (v140)
            {
              swift_errorRelease();
              v220 = 0;
            }
          }
          else
          {
LABEL_123:
            int v139 = 0;
          }
          [v218 startScanning];
          uint64_t v44 = (uint64_t)v220;
          id v141 = sub_100632C8C();
          if (!v44)
          {
            uint64_t v142 = v141;
            if ((v58 & 1) == 0) {
              [v218 startBatteryScannerForPeripheral:v141];
            }
            sub_1006333AC();
            if (v139) {
              sub_100631750(1, 1023, 0x29286E7572, 0xE500000000000000);
            }
            uint64_t v143 = *(void *)&v229[v228];
            int v144 = *(unsigned __int8 *)(v143 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_isPaired);
            if (v144 != 2)
            {
              if ((v144 & 1) == 0)
              {
                sub_100634070();
                sub_100634454();
                sub_100635D18();
                uint64_t v143 = *(void *)&v229[v228];
              }
              if ((v58 & 1) == 0)
              {
                uint64_t v145 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairingStarted;
                if ((*(unsigned char *)(v143
                               + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairingStarted) & 1) == 0)
                {
                  if (*(unsigned char *)(v143 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType + 8)) {
                    uint64_t v146 = 0;
                  }
                  else {
                    uint64_t v146 = *(void *)(v143 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType);
                  }
                  sub_10062F09C(1, v146);
                  uint64_t v143 = *(void *)&v229[v228];
                  uint64_t v145 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairingStarted;
                }
                *(unsigned char *)(v143 + v145) = 1;
                sub_10000B740(0, (unint64_t *)&qword_10096A1A0);
                v220 = (void *)static OS_dispatch_queue.main.getter();
                static DispatchTime.now()();
                + infix(_:_:)();
                uint64_t v224 = *(void *)(v224 + 8);
                ((void (*)(char *, unint64_t))v224)(v16, v13);
                uint64_t v147 = swift_allocObject();
                swift_unknownObjectWeakInit();
                v238 = sub_100654328;
                uint64_t v239 = v147;
                uint64_t aBlock = _NSConcreteStackBlock;
                unint64_t v235 = 1107296256;
                v236 = sub_100296520;
                v237 = &unk_1008E28E8;
                unint64_t v214 = (unint64_t)_Block_copy(&aBlock);
                swift_release();
                static DispatchQoS.unspecified.getter();
                uint64_t aBlock = _swiftEmptyArrayStorage;
                sub_100655CC8((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
                sub_10000A844((uint64_t *)&unk_10096C490);
                sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
                uint64_t v148 = v232;
                dispatch thunk of SetAlgebra.init<A>(_:)();
                unint64_t v149 = (const void *)v214;
                uint64_t v150 = v220;
                OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
                _Block_release(v149);

                (*(void (**)(char *, uint64_t))(v231 + 8))(v9, v148);
                (*(void (**)(unint64_t, uint64_t))(v230 + 8))(v12, v221);
                ((void (*)(char *, unint64_t))v224)(v19, v13);
                uint64_t v143 = *(void *)&v229[v228];
              }
              uint64_t v151 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete;
              if (*(unsigned char *)(v143 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete))
              {
                char v152 = 1;
              }
              else
              {
                sub_10062F450();
                uint64_t v143 = *(void *)&v229[v228];
                uint64_t v151 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete;
                char v152 = *(unsigned char *)(v143 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete);
              }
              *(unsigned char *)(v143 + v15sub_100621BE0("ssharing.b332SetHasSeenScribbleEducation", 1) = 1;
              swift_retain();
              sub_10061CF0C(v152, &OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete, "didComplete = %{BOOL}d");

              swift_release();
              sub_100250CC4(v215, v216);
              uint64_t v155 = v217;
              unint64_t v156 = v219;
              goto LABEL_197;
            }
LABEL_230:
            __break(1u);
            JUMPOUT(0x100625284);
          }
          sub_100250CC4(v215, v216);
          sub_100250CC4(v217, v219);
          break;
        case 2uLL:
          uint64_t v44 = *(void *)(v217 + 16);
          uint64_t v138 = *(void *)(v217 + 24);
          sub_100250CC4(v217, v219);
          uint64_t v124 = v138 - v44;
          if (!__OFSUB__(v138, v44)) {
            goto LABEL_119;
          }
          goto LABEL_220;
        case 3uLL:
          sub_100250CC4(v217, v219);
          goto LABEL_123;
        default:
          unsigned __int8 v123 = BYTE6(v219);
          sub_100250CC4(v217, v219);
          uint64_t v124 = v123;
          goto LABEL_119;
      }
LABEL_13:
      uint64_t aBlock = (void *)v44;
      swift_errorRetain();
      sub_10000A844(&qword_10096BAF0);
      if (swift_dynamicCast() && LOBYTE(v240[0]) == 3)
      {
        if (qword_10096A0B0 != -1) {
          swift_once();
        }
        uint64_t v35 = type metadata accessor for Logger();
        sub_10000B47C(v35, (uint64_t)qword_10097C7F0);
        id v36 = Logger.logObject.getter();
        os_log_type_t v37 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v36, v37))
        {
          id v38 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v38 = 0;
          _os_log_impl((void *)&_mh_execute_header, v36, v37, "run() failed", v38, 2u);
          swift_slowDealloc();
        }

        uint64_t v39 = (uint64_t)v226;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v233 + 56))(v226, 1, 1, v227);
        sub_100628DD4(v39, 0);
        swift_release();
        swift_errorRelease();
        sub_10000A7E8(v39, &qword_100974EA0);
      }
      else
      {
        swift_errorRelease();
        swift_release();
      }
      swift_errorRelease();
      return;
    }
  }
  else
  {
    swift_release();
  }
  int v64 = *(unsigned __int8 *)(*(void *)&v229[v228]
                           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_pairedPencilsIsEmpty);
  if (v64 == 2)
  {
    __break(1u);
LABEL_219:
    __break(1u);
LABEL_220:
    __break(1u);
    goto LABEL_221;
  }
  uint64_t v44 = 0;
  id v65 = v218;
  if (v64)
  {
    uint64_t aBlock = (void *)0xD000000000000057;
    unint64_t v235 = v225 | 0x8000000000000000;
    v240[0] = 1057;
    v73._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v73);
    swift_bridgeObjectRelease();
    uint64_t v74 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v75 = sub_10059634C(v240, v74);
    swift_endAccess();
    if (v75)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v76 = type metadata accessor for Logger();
      sub_10000B47C(v76, (uint64_t)qword_10097C7F0);
      id v77 = Logger.logObject.getter();
      os_log_type_t v78 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v77, v78))
      {
        NSString v79 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)NSString v79 = 0;
        _os_log_impl((void *)&_mh_execute_header, v77, v78, "pairedPencilsIsEmpty path", v79, 2u);
        swift_slowDealloc();
      }
    }
    sub_1006310EC();
    sub_1006314B0();
    sub_100631E3C();
    uint64_t v80 = v229;
    uint64_t v81 = *(void *)&v229[v228];
    uint64_t v82 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairingStarted;
    if ((*(unsigned char *)(v81 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairingStarted) & 1) == 0)
    {
      sub_100631B68(1);
      uint64_t v81 = *(void *)&v80[v228];
      uint64_t v82 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairingStarted;
    }
    *(unsigned char *)(v81 + v8sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 1;
    sub_100632120();
    uint64_t v83 = sub_1006326B8();
    unint64_t v13 = v84;
    uint64_t v19 = v85;
    unint64_t v12 = v86;
    sub_10025ADCC(v83, v84);
    unint64_t v16 = (char *)(v12 >> 62);
    sub_10025ADCC((uint64_t)v19, v12);
    sub_100250CC4(v83, v13);
    switch(v12 >> 62)
    {
      case 1uLL:
        sub_100250CC4((uint64_t)v19, v12);
        LODWORD(v87) = HIDWORD(v19) - v19;
        if (!__OFSUB__(HIDWORD(v19), v19))
        {
          uint64_t v87 = (int)v87;
          goto LABEL_98;
        }
        __break(1u);
        goto LABEL_216;
      case 2uLL:
        uint64_t v44 = *((void *)v19 + 2);
        uint64_t v125 = *((void *)v19 + 3);
        sub_100250CC4((uint64_t)v19, v12);
        uint64_t v87 = v125 - v44;
        if (!__OFSUB__(v125, v44)) {
          goto LABEL_98;
        }
LABEL_216:
        __break(1u);
        goto LABEL_217;
      case 3uLL:
        sub_100250CC4((uint64_t)v19, v12);
        goto LABEL_101;
      default:
        sub_100250CC4((uint64_t)v19, v12);
        uint64_t v87 = BYTE6(v12);
LABEL_98:
        if (v87 == 16) {
          sub_100631750(0, 1068, 0x29286E7572, 0xE500000000000000);
        }
LABEL_101:
        [v218 startScanning];
        id v126 = sub_100632C8C();
        [v218 startBatteryScannerForPeripheral:v126];
        sub_1006333AC();
        sub_10025ADCC(v83, v13);
        sub_10025ADCC((uint64_t)v19, v12);
        sub_100250CC4(v83, v13);
        switch((int)v16)
        {
          case 0:
            sub_100250CC4((uint64_t)v19, v12);
            uint64_t v127 = BYTE6(v12);
            goto LABEL_146;
          case 1:
            sub_100250CC4((uint64_t)v19, v12);
            LODWORD(v127) = HIDWORD(v19) - v19;
            if (!__OFSUB__(HIDWORD(v19), v19))
            {
              uint64_t v127 = (int)v127;
LABEL_146:
              if (v127 == 16) {
                sub_100631750(0, 1073, 0x29286E7572, 0xE500000000000000);
              }
LABEL_149:
              sub_100634070();
              sub_100634454();
              sub_100635D18();
              sub_1006364D0();
              uint64_t v157 = *(void *)&v229[v228];
              uint64_t v158 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete;
              if (*(unsigned char *)(v157 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete))
              {
                char v159 = 1;
              }
              else
              {
                sub_100631B68(0);
                sub_100636854();
                uint64_t v157 = *(void *)&v229[v228];
                uint64_t v158 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete;
                char v159 = *(unsigned char *)(v157 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete);
              }
              *(unsigned char *)(v157 + v158) = 1;
              swift_retain();
              sub_10061CF0C(v159, &OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete, "didComplete = %{BOOL}d");

              swift_release();
              uint64_t v160 = v83;
              goto LABEL_196;
            }
            __break(1u);
LABEL_224:
            __break(1u);
            break;
          case 2:
            uint64_t v154 = *((void *)v19 + 2);
            uint64_t v153 = *((void *)v19 + 3);
            sub_100250CC4((uint64_t)v19, v12);
            uint64_t v127 = v153 - v154;
            if (!__OFSUB__(v153, v154)) {
              goto LABEL_146;
            }
            goto LABEL_224;
          case 3:
            sub_100250CC4((uint64_t)v19, v12);
            goto LABEL_149;
          default:
            JUMPOUT(0);
        }
        goto LABEL_225;
    }
  }
  uint64_t aBlock = (void *)0xD000000000000057;
  unint64_t v235 = v225 | 0x8000000000000000;
  v240[0] = 1085;
  v66._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v66);
  swift_bridgeObjectRelease();
  uint64_t v67 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v68 = sub_10059634C(v240, v67);
  swift_endAccess();
  if (v68)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v69 = type metadata accessor for Logger();
    sub_10000B47C(v69, (uint64_t)qword_10097C7F0);
    id v70 = Logger.logObject.getter();
    os_log_type_t v71 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v70, v71))
    {
      id v72 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v72 = 0;
      _os_log_impl((void *)&_mh_execute_header, v70, v71, "have a paired Pencil path", v72, 2u);
      swift_slowDealloc();
    }
  }
  sub_100631E3C();
  uint64_t v88 = v228;
  if (*(unsigned char *)(*(void *)&v229[v228]
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) != 1)
    goto LABEL_159;
  id v89 = [*(id *)&v65[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central] sharedPairingAgent];
  if (!v89)
  {
    __break(1u);
LABEL_227:
    __break(1u);
LABEL_228:
    __break(1u);
LABEL_229:
    __break(1u);
    goto LABEL_230;
  }
  id v90 = v89;
  sub_10062AC20();
  unint64_t v92 = v91;

  if (!(v92 >> 62))
  {
    if (*(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_77;
    }
LABEL_158:
    swift_bridgeObjectRelease();
    uint64_t v88 = v228;
    goto LABEL_159;
  }
  swift_bridgeObjectRetain();
  uint64_t v161 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v161) {
    goto LABEL_158;
  }
LABEL_77:
  if ((v92 & 0xC000000000000001) != 0)
  {
    id v93 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_80:
    id v94 = v93;
    swift_bridgeObjectRelease();
    id v95 = [v94 identifier];

    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v96 = UUID.uuidString.getter();
    uint64_t v98 = v97;
    (*(void (**)(char *, uint64_t))(v233 + 8))(v6, v227);
    int64_t v99 = self;
    id v100 = [v99 standardUserDefaults];
    NSString v101 = String._bridgeToObjectiveC()();
    id v102 = [v100 stringForKey:v101];

    if (v102)
    {
      uint64_t v103 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v105 = v104;
      id v106 = [v99 standardUserDefaults];
      id v107 = [v106 stringForKey:v102];

      if (v107)
      {
        uint64_t v232 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v92 = v108;

        if (v103 == v96 && v105 == v98)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_88;
        }
        char v109 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v109)
        {
LABEL_88:
          if (qword_10096A0B0 == -1) {
            goto LABEL_89;
          }
          goto LABEL_214;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
LABEL_110:
    swift_bridgeObjectRelease();
    uint64_t v88 = v228;
LABEL_111:
    id v65 = v218;
    goto LABEL_159;
  }
  if (*(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v93 = *(id *)(v92 + 32);
    goto LABEL_80;
  }
  __break(1u);
LABEL_214:
  swift_once();
LABEL_89:
  uint64_t v110 = type metadata accessor for Logger();
  uint64_t v111 = sub_10000B47C(v110, (uint64_t)qword_10097C7F0);
  int v112 = v218;
  swift_bridgeObjectRetain_n();
  uint64_t v113 = v112;
  uint64_t v230 = v111;
  unint64_t v114 = Logger.logObject.getter();
  LODWORD(v23sub_100621BE0("ssharing.b332SetHasSeenScribbleEducation", 1) = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v114, (os_log_type_t)v231))
  {
    uint64_t v115 = swift_slowAlloc();
    uint64_t v224 = swift_slowAlloc();
    v240[0] = v224;
    *(_DWORD *)uint64_t v115 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t aBlock = (void *)sub_100254634(v232, v92, v240);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v115 + 1sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
    uint64_t v116 = (uint64_t *)(*(void *)&v229[v228] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_babyHash);
    if (v116[1])
    {
      uint64_t v117 = *v116;
      unint64_t v118 = v116[1];
    }
    else
    {
      uint64_t aBlock = 0;
      unint64_t v235 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      uint64_t v117 = 0xD000000000000015;
      unint64_t v118 = 0x80000001007B7770;
    }
    swift_bridgeObjectRetain();
    uint64_t aBlock = (void *)sub_100254634(v117, v118, v240);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v114, (os_log_type_t)v231, "getHash: %s, sessionState.babyHash: %s", (uint8_t *)v115, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (v113[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel + 8]) {
    goto LABEL_110;
  }
  uint64_t v128 = (void *)(*(void *)&v229[v228] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_babyHash);
  uint64_t v129 = v128[1];
  if (!v129) {
    goto LABEL_110;
  }
  if (v232 == *v128 && v129 == v92)
  {
    swift_bridgeObjectRelease();
LABEL_113:
    sub_100631B68(0);
    sub_100636854();
    uint64_t v131 = Logger.logObject.getter();
    os_log_type_t v132 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v131, v132))
    {
      uint64_t v133 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v133 = 0;
      _os_log_impl((void *)&_mh_execute_header, v131, v132, "sendsUIUpdates = false, because we already showed battery status for short-hash path", v133, 2u);
      swift_slowDealloc();
    }

    uint64_t v134 = v228;
    uint64_t v135 = *(void *)&v229[v228];
    char v136 = *(unsigned char *)(v135 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates);
    *(unsigned char *)(v135 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) = 0;
    swift_retain();
    sub_10061CF0C(v136, &OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates, "sendsUIUpdates = %{BOOL}d");
    swift_release();
    uint64_t v88 = v134;
    goto LABEL_111;
  }
  char v130 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  uint64_t v88 = v228;
  id v65 = v218;
  if (v130) {
    goto LABEL_113;
  }
LABEL_159:
  uint64_t v162 = v229;
  uint64_t v163 = *(void *)&v229[v88];
  uint64_t v164 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needsHiddenChargeStatusForReplacementB332;
  if (*(unsigned char *)(v163
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needsHiddenChargeStatusForReplacementB332) == 1)
  {
    uint64_t v165 = v88;
    sub_100631B68(1);
    uint64_t v163 = *(void *)&v162[v165];
    uint64_t v164 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needsHiddenChargeStatusForReplacementB332;
  }
  *(unsigned char *)(v163 + v164) = 0;
  sub_100632120();
  uint64_t v44 = 0;
  uint64_t v9 = (char *)sub_1006326B8();
  unint64_t v13 = v166;
  uint64_t v19 = v167;
  unint64_t v12 = v168;
  [v65 startScanning];
  uint64_t v169 = (char *)sub_100632C8C();
  int v170 = *(unsigned __int8 *)(*(void *)&v229[v228]
                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_isPaired);
  if (v170 == 2) {
    goto LABEL_229;
  }
  unint64_t v16 = v169;
  if ((v170 & 1) == 0)
  {
    uint64_t aBlock = (void *)0xD000000000000057;
    unint64_t v235 = v225 | 0x8000000000000000;
    v240[0] = 1133;
    v171._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v171);
    swift_bridgeObjectRelease();
    uint64_t v172 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v173 = sub_10059634C(v240, v172);
    swift_endAccess();
    if (v173)
    {
      if (qword_10096A0B0 != -1) {
LABEL_217:
      }
        swift_once();
      uint64_t v174 = type metadata accessor for Logger();
      sub_10000B47C(v174, (uint64_t)qword_10097C7F0);
      id v175 = Logger.logObject.getter();
      os_log_type_t v176 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v175, v176))
      {
        uint64_t v177 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v177 = 0;
        _os_log_impl((void *)&_mh_execute_header, v175, v176, "not-isPaired block", v177, 2u);
        swift_slowDealloc();
      }
    }
    [v218 startBatteryScannerForPeripheral:v16];
    sub_1006310EC();
    if (v44) {
      goto LABEL_187;
    }
    uint64_t v178 = *(void *)&v229[v228];
    uint64_t v179 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_secondNeedsHiddenChargeStatusForReplacementB332;
    if (*(unsigned char *)(v178
                  + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_secondNeedsHiddenChargeStatusForReplacementB332) == 1)
    {
      sub_100631B68(1);
      uint64_t v178 = *(void *)&v229[v228];
      uint64_t v179 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_secondNeedsHiddenChargeStatusForReplacementB332;
    }
    *(unsigned char *)(v178 + v179) = 0;
    sub_100638130();
    uint64_t v181 = *(void *)(v180 + 16);
    swift_bridgeObjectRelease();
    if (!v181) {
      sub_100636AF4();
    }
    sub_1006333AC();
    uint64_t aBlock = (void *)0xD000000000000057;
    unint64_t v235 = v225 | 0x8000000000000000;
    v240[0] = 1143;
    v182._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v182);
    swift_bridgeObjectRelease();
    uint64_t v183 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v184 = sub_10059634C(v240, v183);
    swift_endAccess();
    if ((v184 & 1) == 0)
    {
LABEL_178:
      sub_100637B2C();
      if (!v44)
      {
        sub_100636AF4();
        sub_10025ADCC((uint64_t)v9, v13);
        sub_10025ADCC((uint64_t)v19, v12);
        sub_100250CC4((uint64_t)v9, v13);
        switch(v12 >> 62)
        {
          case 1uLL:
            sub_100250CC4((uint64_t)v19, v12);
            LODWORD(v209) = HIDWORD(v19) - v19;
            if (__OFSUB__(HIDWORD(v19), v19)) {
              goto LABEL_227;
            }
            uint64_t v209 = (int)v209;
LABEL_208:
            if (v209 == 16) {
              sub_100631750(0, 1148, 0x29286E7572, 0xE500000000000000);
            }
LABEL_211:
            sub_100634070();
            sub_100634454();
            sub_100635D18();
            sub_1006364D0();
            uint64_t v212 = v218;
            sub_1002C91CC(1153, 0xD000000000000057, v225 | 0x8000000000000000, v223, (uint64_t)v212);

            break;
          case 2uLL:
            uint64_t v211 = *((void *)v19 + 2);
            uint64_t v210 = *((void *)v19 + 3);
            sub_100250CC4((uint64_t)v19, v12);
            uint64_t v209 = v210 - v211;
            if (!__OFSUB__(v210, v211)) {
              goto LABEL_208;
            }
            goto LABEL_228;
          case 3uLL:
            sub_100250CC4((uint64_t)v19, v12);
            goto LABEL_211;
          default:
            sub_100250CC4((uint64_t)v19, v12);
            uint64_t v209 = BYTE6(v12);
            goto LABEL_208;
        }
        goto LABEL_190;
      }
LABEL_187:

      sub_100250CC4((uint64_t)v9, v13);
      sub_100250CC4((uint64_t)v19, v12);
      goto LABEL_13;
    }
    if (qword_10096A0B0 == -1)
    {
LABEL_175:
      uint64_t v185 = type metadata accessor for Logger();
      sub_10000B47C(v185, (uint64_t)qword_10097C7F0);
      uint64_t v186 = Logger.logObject.getter();
      os_log_type_t v187 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v186, v187))
      {
        uint64_t v188 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v188 = 0;
        _os_log_impl((void *)&_mh_execute_header, v186, v187, "not-isPaired block 2", v188, 2u);
        swift_slowDealloc();
      }

      goto LABEL_178;
    }
LABEL_222:
    swift_once();
    goto LABEL_175;
  }
  uint64_t aBlock = (void *)0xD000000000000057;
  unint64_t v235 = v225 | 0x8000000000000000;
  v240[0] = 1119;
  v189._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v189);
  swift_bridgeObjectRelease();
  uint64_t v190 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v191 = sub_10059634C(v240, v190);
  swift_endAccess();
  if (v191)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v192 = type metadata accessor for Logger();
    sub_10000B47C(v192, (uint64_t)qword_10097C7F0);
    v193 = Logger.logObject.getter();
    os_log_type_t v194 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v193, v194))
    {
      uint64_t v195 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v195 = 0;
      _os_log_impl((void *)&_mh_execute_header, v193, v194, "isPaired block", v195, 2u);
      swift_slowDealloc();
    }
  }
  sub_100631B68(0);
  sub_1006333AC();
  if ((*(unsigned char *)(*(void *)&v229[v228]
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didShowSuccess) & 1) == 0)
  {
    sub_1006364D0();
    sub_100636854();
    *(unsigned char *)(*(void *)&v229[v228] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didShowSuccess) = 1;
  }
LABEL_190:
  uint64_t v196 = *(void *)&v229[v228];
  uint64_t v197 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete;
  if (*(unsigned char *)(v196 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete))
  {
    char v198 = 1;
  }
  else
  {
    *(unsigned char *)(v196 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_hideBattery) = 0;
    uint64_t v199 = *(void *)&v229[v228];
    uint64_t v200 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didShowSuccess;
    if ((*(unsigned char *)(v199 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didShowSuccess) & 1) == 0)
    {
      sub_100636854();
      uint64_t v199 = *(void *)&v229[v228];
      uint64_t v200 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didShowSuccess;
    }
    *(unsigned char *)(v199 + v20sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = 1;
    uint64_t v196 = *(void *)&v229[v228];
    uint64_t v197 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete;
    char v198 = *(unsigned char *)(v196 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete);
  }
  *(unsigned char *)(v196 + v197) = 1;
  swift_retain();
  sub_10061CF0C(v198, &OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete, "didComplete = %{BOOL}d");

  swift_release();
  uint64_t v160 = (uint64_t)v9;
LABEL_196:
  sub_100250CC4(v160, v13);
  uint64_t v155 = (uint64_t)v19;
  unint64_t v156 = v12;
LABEL_197:
  sub_100250CC4(v155, v156);
  swift_retain();
  sub_10061D838();
  swift_release();
  id v201 = v218;
  [v218 stopBatteryScanner];
  [v201 stopScanning];
  sub_10062F8E8();
  sub_10062FF48();
  uint64_t aBlock = (void *)0xD000000000000057;
  unint64_t v235 = v225 | 0x8000000000000000;
  v240[0] = 1175;
  v202._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v202);
  swift_bridgeObjectRelease();
  uint64_t v203 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v204 = sub_10059634C(v240, v203);
  swift_endAccess();
  if ((v204 & 1) == 0)
  {
LABEL_28:
    swift_release();
    return;
  }
  if (qword_10096A0B0 != -1) {
LABEL_225:
  }
    swift_once();
  uint64_t v205 = type metadata accessor for Logger();
  sub_10000B47C(v205, (uint64_t)qword_10097C7F0);
  uint64_t v206 = Logger.logObject.getter();
  os_log_type_t v207 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v206, v207))
  {
    uint64_t v208 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v208 = 0;
    _os_log_impl((void *)&_mh_execute_header, v206, v207, "All cleanup completely done.", v208, 2u);
    swift_slowDealloc();
  }
  swift_release();
}

void sub_1006252C4(unsigned char *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sbHasStarted;
  if (a1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sbHasStarted])
  {
    char v3 = 1;
    char v4 = 1;
  }
  else
  {
    char v4 = sub_10061E9EC();
    char v3 = a1[v2];
  }
  a1[v2] = v4 & 1;
  sub_10061E87C(v3);
  id v5 = [objc_allocWithZone((Class)FBSOrientationObserver) init];
  uint64_t v6 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_orientationObserver;
  uint64_t v7 = *(void **)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_orientationObserver];
  *(void *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_orientationObserver] = v5;

  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  uint64_t v9 = *(void **)&a1[v6];
  if (!v9)
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v10 = v8;
  uint64_t v103 = sub_1006556B8;
  uint64_t v104 = v8;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v100 = 1107296256;
  NSString v101 = sub_10032A9D8;
  id v102 = &unk_1008E3718;
  uint64_t v11 = _Block_copy(&aBlock);
  unint64_t v12 = a1;
  swift_retain();
  id v13 = v9;
  swift_release();
  [v13 activeInterfaceOrientationWithCompletion:v11];
  _Block_release(v11);

  uint64_t v14 = *(void **)&a1[v6];
  if (!v14)
  {
LABEL_28:
    __break(1u);
    return;
  }
  uint64_t v103 = sub_1006556B8;
  uint64_t v104 = v10;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v100 = 1107296256;
  NSString v101 = sub_10032A9D8;
  id v102 = &unk_1008E3740;
  uint64_t v15 = _Block_copy(&aBlock);
  swift_retain();
  id v16 = v14;
  swift_release();
  [v16 setHandler:v15];
  _Block_release(v15);

  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v12;
  uint64_t v18 = *(void **)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_powerSourceMonitor];
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1006556C0;
  *(void *)(v19 + 24) = v17;
  uint64_t v103 = sub_1006556C8;
  uint64_t v104 = v19;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v100 = 1107296256;
  NSString v101 = sub_10032A9D8;
  id v102 = &unk_1008E37B8;
  uint64_t v20 = _Block_copy(&aBlock);
  unint64_t v21 = v12;
  swift_retain();
  swift_release();
  [v18 setPowerSourceFoundHandler:v20];
  _Block_release(v20);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1006556C0;
  *(void *)(v22 + 24) = v17;
  uint64_t v103 = sub_100442C70;
  uint64_t v104 = v22;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v100 = 1107296256;
  NSString v101 = (uint64_t (*)())sub_100627C1C;
  id v102 = &unk_1008E3808;
  uint64_t v23 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v18 setPowerSourceChangedHandler:v23];
  _Block_release(v23);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v21;
  uint64_t v103 = sub_1006556D0;
  uint64_t v104 = v24;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v100 = 1107296256;
  NSString v101 = sub_10032A9D8;
  id v102 = &unk_1008E3858;
  uint64_t v25 = _Block_copy(&aBlock);
  char v26 = v21;
  swift_release();
  [v18 setPowerSourceLostHandler:v25];
  _Block_release(v25);
  [v18 activateWithCompletion:0];
  id v27 = [objc_allocWithZone((Class)CBCentralManager) initWithDelegate:v26 queue:*(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q]];
  uint64_t v28 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central;
  char v29 = *(void **)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central];
  *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central] = v27;

  id v30 = [objc_allocWithZone((Class)ACCBLEPairingProvider) initWithDelegate:v26];
  uint64_t v31 = *(void **)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_bleProvider];
  *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_bleProvider] = v30;

  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v32 = type metadata accessor for Logger();
  sub_10000B47C(v32, (uint64_t)qword_10097C7F0);
  int v33 = v26;
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    id v36 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v36 = 67109120;
    LODWORD(aBlock) = [*(id *)&v26[v28] isScanning];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v34, v35, "scanning: %{BOOL}d", v36, 8u);
    swift_slowDealloc();
  }
  else
  {

    uint64_t v34 = v33;
  }

  os_log_type_t v37 = v33;
  id v38 = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    char v41 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 138412290;
    os_log_type_t v42 = *(Class *)((char *)&v37->isa + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor);
    uint64_t aBlock = (uint64_t)v42;
    id v43 = v42;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *char v41 = v42;

    _os_log_impl((void *)&_mh_execute_header, v38, v39, "Setting handlers on systemMonitor %@...", v40, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    id v38 = v37;
  }

  uint64_t v44 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor;
  int v45 = *(Class *)((char *)&v37->isa + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor);
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = v37;
  uint64_t v103 = sub_1006556D8;
  uint64_t v104 = v46;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v100 = 1107296256;
  NSString v101 = (uint64_t (*)())sub_100296520;
  id v102 = &unk_1008E38A8;
  id v47 = _Block_copy(&aBlock);
  id v48 = v37;
  id v49 = v45;
  swift_release();
  [v49 setSystemLockStateChangedHandler:v47];
  _Block_release(v47);

  unint64_t v50 = *(Class *)((char *)&v37->isa + v44);
  uint64_t v51 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v103 = sub_1006556FC;
  uint64_t v104 = v51;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v100 = 1107296256;
  NSString v101 = (uint64_t (*)())sub_100296520;
  id v102 = &unk_1008E38D0;
  char v52 = _Block_copy(&aBlock);
  id v53 = v50;
  swift_release();
  [v53 setBluetoothAddressChangedHandler:v52];
  _Block_release(v52);

  long long v54 = v48;
  NSString v55 = Logger.logObject.getter();
  os_log_type_t v56 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v55, v56))
  {
    os_log_type_t v94 = v56;
    os_log_t log = v55;
    uint64_t v57 = swift_slowAlloc();
    char v58 = (void *)swift_slowAlloc();
    uint64_t v95 = swift_slowAlloc();
    *(_DWORD *)uint64_t v57 = 138412802;
    uint64_t v59 = *(Class *)((char *)&v37->isa + v44);
    uint64_t v98 = v95;
    uint64_t aBlock = (uint64_t)v59;
    id v60 = v59;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *char v58 = v59;

    *(_WORD *)(v57 + 1sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
    id v61 = [*(id *)((char *)&v37->isa + v44) bluetoothAddressChangedHandler];
    if (v61)
    {
      id v62 = v61;
      uint64_t v63 = swift_allocObject();
      *(void *)(v63 + 16) = v62;
      uint64_t v64 = swift_allocObject();
      *(void *)(v64 + 16) = sub_100655F9C;
      *(void *)(v64 + 24) = v63;
      id v65 = sub_1006562A4;
    }
    else
    {
      id v65 = 0;
      uint64_t v64 = 0;
    }
    uint64_t aBlock = (uint64_t)v65;
    uint64_t v100 = v64;
    sub_10000A844((uint64_t *)&unk_10097D420);
    uint64_t v66 = Optional.debugDescription.getter();
    unint64_t v68 = v67;
    sub_1002CA430((uint64_t)v65);
    uint64_t aBlock = sub_100254634(v66, v68, &v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v57 + 2sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
    id v69 = [*(id *)((char *)&v37->isa + v44) systemLockStateChangedHandler];
    if (v69)
    {
      id v70 = v69;
      uint64_t v71 = swift_allocObject();
      *(void *)(v71 + 16) = v70;
      uint64_t v72 = swift_allocObject();
      *(void *)(v72 + 16) = sub_10065574C;
      *(void *)(v72 + 24) = v71;
      Swift::String v73 = sub_1005C1424;
    }
    else
    {
      Swift::String v73 = 0;
      uint64_t v72 = 0;
    }
    uint64_t aBlock = (uint64_t)v73;
    uint64_t v100 = v72;
    uint64_t v74 = Optional.debugDescription.getter();
    unint64_t v76 = v75;
    sub_1002CA430((uint64_t)v73);
    uint64_t aBlock = sub_100254634(v74, v76, &v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v94, "Did set handlers on systemMonitor %@. bluetoothAddressChangedHandler: %s, systemLockStateChangedHandler: %s", (uint8_t *)v57, 0x20u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v77 = *(Class *)((char *)&v37->isa + v44);
  uint64_t v78 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v103 = sub_100655704;
  uint64_t v104 = v78;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v100 = 1107296256;
  NSString v101 = (uint64_t (*)())sub_100296520;
  id v102 = &unk_1008E38F8;
  NSString v79 = _Block_copy(&aBlock);
  id v80 = v77;
  swift_release();
  [v80 setScreenOnChangedHandler:v79];
  _Block_release(v79);

  uint64_t v81 = v54;
  uint64_t v82 = Logger.logObject.getter();
  os_log_type_t v83 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v82, v83))
  {
    unint64_t v84 = (uint8_t *)swift_slowAlloc();
    uint64_t v97 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v84 = 138412290;
    NSString v85 = v37;
    uint64_t v86 = v44;
    uint64_t v87 = *(Class *)((char *)&v85->isa + v44);
    uint64_t aBlock = (uint64_t)v87;
    id v88 = v87;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v97 = v87;
    uint64_t v44 = v86;
    os_log_type_t v37 = v85;

    _os_log_impl((void *)&_mh_execute_header, v82, v83, "Activating systemMonitor %@", v84, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v82 = v81;
  }

  id v89 = *(Class *)((char *)&v37->isa + v44);
  uint64_t v90 = swift_allocObject();
  *(void *)(v90 + 16) = v81;
  uint64_t v103 = sub_10065570C;
  uint64_t v104 = v90;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v100 = 1107296256;
  NSString v101 = (uint64_t (*)())sub_100296520;
  id v102 = &unk_1008E3948;
  unint64_t v91 = _Block_copy(&aBlock);
  unint64_t v92 = v81;
  id v93 = v89;
  swift_release();
  [v93 activateWithCompletion:v91];
  _Block_release(v91);
  swift_release();
  swift_release();
}

uint64_t sub_100626128(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v30 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v29 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000B47C(v10, (uint64_t)qword_10097C7F0);
  id v11 = a1;
  unint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    char v26 = a2;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v25 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 138412290;
    uint64_t v27 = v8;
    aBlock[0] = v11;
    id v16 = v11;
    uint64_t v28 = v4;
    id v17 = v16;
    uint64_t v8 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v25 = v11;

    uint64_t v4 = v28;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "new orientation: %@", v15, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    a2 = v26;
    swift_slowDealloc();
  }
  else
  {
  }
  id v18 = [v11 orientation];
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a2;
  *(void *)(v19 + 24) = v18;
  aBlock[4] = sub_100655864;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  uint64_t aBlock[3] = &unk_1008E3A60;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = a2;
  uint64_t v22 = v29;
  static DispatchQoS.unspecified.getter();
  uint64_t v31 = _swiftEmptyArrayStorage;
  sub_100655CC8((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v22, v7);
  return swift_release();
}

void sub_100626588(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_orientation) = a2;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = Strong;
    sub_10061E12C(Strong, 1);
  }
}

void sub_100626600(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([a1 productID] != (id)332
    && [a1 productID] != (id)482
    && [a1 productID] != (id)1106)
  {
    return;
  }
  uint64_t v7 = a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel;
  if (*(unsigned char *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel + 8)) {
    double v8 = -1.0;
  }
  else {
    double v8 = *(double *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel);
  }
  [a1 chargeLevel];
  *(double *)uint64_t v7 = fabs(v9);
  *(unsigned char *)(v7 + 8) = 0;
  sub_10061EDD0();
  uint64_t v10 = (uint64_t)[a1 productID];
  if (v10 > 545)
  {
    if (v10 == 1106)
    {
      uint64_t v11 = 4;
      goto LABEL_17;
    }
    if (v10 == 546)
    {
      uint64_t v11 = 2;
      goto LABEL_17;
    }
  }
  else
  {
    if (v10 == 332)
    {
      uint64_t v11 = 1;
      goto LABEL_17;
    }
    if (v10 == 482)
    {
      uint64_t v11 = 3;
      goto LABEL_17;
    }
  }
  uint64_t v11 = 0;
LABEL_17:
  id v12 = [a1 sourceID];
  uint64_t v13 = *(void *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
      + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_powerSourceID;
  *(void *)uint64_t v13 = v12;
  *(unsigned char *)(v13 + 8) = 0;
  sub_100622BA0();
  if ((*(unsigned char *)(v7 + 8) & 1) == 0)
  {
    double v14 = *(double *)v7;
    if ((v8 < 0.0 || vabdd_f64(v8, v14) > 0.005)
      && ([a1 productID] == (id)332
       || [a1 productID] == (id)482
       || [a1 productID] == (id)1106)
      && ([a1 charging] & 1) == 0
      && (fabs(v14 + -0.2) <= 0.005 || fabs(v14 + -0.1) <= 0.005))
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      sub_10000B47C(v15, (uint64_t)qword_10097C7F0);
      id v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        id v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v18 = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "Reached low battery pill threshold for connected Pencil", v18, 2u);
        swift_slowDealloc();
      }

      uint64_t v19 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 1, 1, v19);
      uint64_t v20 = swift_allocObject();
      swift_unknownObjectWeakInit();
      type metadata accessor for MainActor();
      swift_retain();
      uint64_t v21 = static MainActor.shared.getter();
      uint64_t v22 = (void *)swift_allocObject();
      v22[2] = v21;
      v22[3] = &protocol witness table for MainActor;
      v22[4] = v20;
      v22[5] = v11;
      v22[6] = v12;
      swift_release();
      sub_10028CFD4((uint64_t)v6, (uint64_t)&unk_10097D430, (uint64_t)v22);
      swift_release();
    }
  }
}

uint64_t sub_1006269E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a1;
  v6[6] = a4;
  type metadata accessor for MainActor();
  v6[9] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[10] = v8;
  v6[11] = v7;
  return _swift_task_switch(sub_100626A80, v8, v7);
}

uint64_t sub_100626A80()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 96) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100626B94;
    uint64_t v4 = *(void *)(v0 + 56);
    uint64_t v3 = *(void *)(v0 + 64);
    return sub_100626D48(v4, v3, 0);
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 4sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = *(void *)(v0 + 96) == 0;
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_100626B94()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 96);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 88);
  uint64_t v4 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_100626CD4, v4, v3);
}

uint64_t sub_100626CD4()
{
  swift_release();
  **(unsigned char **)(v0 + 4sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = *(void *)(v0 + 96) == 0;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100626D48(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 144) = a2;
  *(void *)(v4 + 15sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v3;
  *(unsigned char *)(v4 + 304) = a3;
  *(void *)(v4 + 136) = a1;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  *(void *)(v4 + 16sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v5;
  *(void *)(v4 + 168) = *(void *)(v5 - 8);
  *(void *)(v4 + 176) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DispatchQoS();
  *(void *)(v4 + 184) = v6;
  *(void *)(v4 + 19sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = *(void *)(v6 - 8);
  *(void *)(v4 + 20sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DispatchTimeInterval();
  *(void *)(v4 + 208) = v7;
  *(void *)(v4 + 216) = *(void *)(v7 - 8);
  *(void *)(v4 + 224) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for DispatchTime();
  *(void *)(v4 + 23sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v8;
  *(void *)(v4 + 24sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = *(void *)(v8 - 8);
  *(void *)(v4 + 248) = swift_task_alloc();
  *(void *)(v4 + 256) = swift_task_alloc();
  return _swift_task_switch(sub_100626F34, 0, 0);
}

uint64_t sub_100626F34()
{
  uint64_t v15 = v0;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 264) = sub_10000B47C(v1, (uint64_t)qword_10097C7F0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void *)(v0 + 136);
    uint64_t v13 = *(void *)(v0 + 144);
    char v12 = *(unsigned char *)(v0 + 304) & 1;
    uint64_t v5 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    unint64_t v6 = sub_10063CF60(v4);
    *(void *)(v0 + 12sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = sub_100254634(v6, v7, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 1sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
    uint64_t v8 = sub_10061C7B4(v13, v12);
    *(void *)(v0 + 128) = sub_100254634(v8, v9, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "showLowBatteryPill [type: %s, powerSourceID: %s]", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 27sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_100627180;
  return sub_10063D0D8();
}

uint64_t sub_100627180(char a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  swift_task_dealloc();
  if (a1)
  {
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v3 + 28sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v5;
    *uint64_t v5 = v4;
    v5[1] = sub_100627324;
    return sub_10063E09C();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v7 = *(uint64_t (**)(void))(v4 + 8);
    return v7();
  }
}

uint64_t sub_100627324(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 288) = a1;
  *(void *)(v3 + 296) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_100627424, 0, 0);
}

uint64_t sub_100627424()
{
  uint64_t v1 = (void *)v0[36];
  if (v1 && (uint64_t v2 = (void *)v0[37]) != 0)
  {
    uint64_t v3 = v0[17];
    int v4 = v0[38] & 1;
    id v5 = v1;
    swift_unknownObjectRetain();
    if (v3 == 4 && v4 == 0)
    {
      if (SFIsPencilHapticsEnabled())
      {
        uint64_t v13 = v0[18];
        uint64_t v14 = self;
        uint64_t v15 = swift_allocObject();
        *(void *)(v15 + 16) = v13;
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = sub_100654F10;
        *(void *)(v16 + 24) = v15;
        v0[12] = sub_100442C70;
        v0[13] = v16;
        v0[8] = _NSConcreteStackBlock;
        v0[9] = 1107296256;
        v0[10] = sub_10063F1D8;
        v0[11] = &unk_1008E2EF8;
        os_log_type_t v17 = _Block_copy(v0 + 8);
        swift_retain();
        swift_release();
        id v18 = [v14 build:v17];
        _Block_release(v17);
        LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
        uint64_t result = swift_release();
        if (v17)
        {
          __break(1u);
          return result;
        }
        BKSHIDServicesRequestHapticFeedback();
        uint64_t v20 = sub_100654F10;
      }
      else
      {
        id v18 = Logger.logObject.getter();
        os_log_type_t v21 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v18, v21))
        {
          uint64_t v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v22 = 0;
          _os_log_impl((void *)&_mh_execute_header, v18, v21, "Not playing Pencil haptics because the default is off", v22, 2u);
          swift_slowDealloc();
        }
        uint64_t v20 = 0;
      }
      uint64_t v41 = (uint64_t)v20;
      unint64_t v7 = v5;
    }
    else
    {
      unint64_t v7 = v5;
      uint64_t v41 = 0;
    }
    uint64_t v23 = v0[31];
    uint64_t v31 = v0[32];
    uint64_t v24 = v0[29];
    uint64_t v34 = v0[30];
    uint64_t v25 = v0[27];
    char v26 = (void *)v0[28];
    uint64_t v27 = v0[26];
    uint64_t v32 = v0[25];
    uint64_t v39 = v0[24];
    uint64_t v40 = v0[23];
    uint64_t v38 = v0[21];
    uint64_t v36 = v0[22];
    uint64_t v37 = v0[20];
    [v2 acquireHUDTransaction];
    sub_10061E12C(v7, 0);
    [v2 showChargingStatus];
    sub_10000B740(0, (unint64_t *)&qword_10096A1A0);
    int v33 = (void *)static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    void *v26 = 5;
    (*(void (**)(void *, void, uint64_t))(v25 + 104))(v26, enum case for DispatchTimeInterval.seconds(_:), v27);
    + infix(_:_:)();
    (*(void (**)(void *, uint64_t))(v25 + 8))(v26, v27);
    os_log_type_t v35 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    v35(v23, v24);
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v2;
    v0[6] = sub_100656168;
    v0[7] = v28;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_100296520;
    v0[5] = &unk_1008E2E80;
    char v29 = _Block_copy(v0 + 2);
    swift_unknownObjectRetain();
    static DispatchQoS.unspecified.getter();
    v0[14] = _swiftEmptyArrayStorage;
    sub_100655CC8((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();

    _Block_release(v29);
    swift_unknownObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v32, v40);
    v35(v31, v24);
    swift_release();
    sub_1002CA430(v41);
  }
  else
  {
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    BOOL v10 = os_log_type_enabled(v8, v9);
    uint64_t v11 = (void *)v0[36];
    if (v10)
    {
      char v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to get HUD connection to show low battery pill", v12, 2u);
      swift_slowDealloc();

      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(void))v0[1];
  return v30();
}

uint64_t sub_100627A54(void *a1, uint64_t (*a2)(void))
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_10097C7F0);
  id v5 = a1;
  unint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = a2;
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    BOOL v10 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v9 = 138412290;
    id v11 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *BOOL v10 = v5;

    a2 = v8;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Found power source: %@", v9, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return a2(v5);
}

void sub_100627C1C(uint64_t a1, void *a2)
{
}

void sub_100627C24(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_100627CA0(void *a1, uint64_t a2)
{
  if ([a1 productID] == (id)332
    || [a1 productID] == (id)482
    || [a1 productID] == (id)1106)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_10097C7F0);
    id v5 = a1;
    unint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v9 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412290;
      id v10 = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *os_log_type_t v9 = v5;

      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Lost power source: %@", v8, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v11 = a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel;
    *(void *)uint64_t v11 = 0;
    *(unsigned char *)(v11 + 8) = 1;
    sub_10061EDD0();
    uint64_t v12 = *(void *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
        + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_powerSourceID;
    *(void *)uint64_t v12 = 0;
    *(unsigned char *)(v12 + 8) = 1;
  }
}

void sub_100627EC0(uint64_t a1, const char *a2)
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000B47C(v3, (uint64_t)qword_10097C7F0);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, a2, v6, 2u);
    swift_slowDealloc();
  }

  sub_100622BA0();
}

void sub_100627FAC()
{
  uint64_t v0 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = Strong;
    uint64_t v48 = v4;
    id v9 = [*(id *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor) bluetoothAddressData];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v13 = v12;
    }
    else
    {
      uint64_t v11 = 0;
      unint64_t v13 = 0xF000000000000000;
    }
    uint64_t v14 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
    id v49 = (char *)v8;
    uint64_t v15 = (uint64_t *)(*(void *)(v8 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                    + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sentBluetoothAddress);
    uint64_t v17 = *v15;
    unint64_t v16 = v15[1];
    sub_100278C78(*v15, v16);
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    uint64_t v19 = sub_10000B47C(v18, (uint64_t)qword_10097C7F0);
    sub_100278C78(v17, v16);
    sub_100278C78(v11, v13);
    sub_100278C78(v17, v16);
    sub_100278C78(v11, v13);
    uint64_t v45 = v19;
    uint64_t v20 = v11;
    os_log_type_t v21 = Logger.logObject.getter();
    int v46 = static os_log_type_t.default.getter();
    BOOL v22 = os_log_type_enabled(v21, (os_log_type_t)v46);
    unint64_t v23 = v16 >> 60;
    uint64_t v50 = v20;
    if (v22)
    {
      os_log_t v42 = v21;
      unint64_t v47 = v16 >> 60;
      uint64_t v44 = v2;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v55 = v41;
      *(_DWORD *)uint64_t v24 = 136315394;
      uint64_t v43 = v14;
      uint64_t v53 = 0;
      unint64_t v54 = 0xE000000000000000;
      if (v13 >> 60 == 15)
      {
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        unint64_t v25 = 0x80000001007B7770;
        uint64_t v26 = 0xD000000000000015;
        uint64_t v27 = v50;
      }
      else
      {
        uint64_t v27 = v50;
        uint64_t v51 = v50;
        unint64_t v52 = v13;
        uint64_t v29 = v48;
        (*(void (**)(char *, void, uint64_t))(v48 + 104))(v6, enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:), v3);
        sub_1003CEFBC();
        DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)();
        (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v3);
        uint64_t v26 = v53;
        unint64_t v25 = v54;
      }
      uint64_t v53 = sub_100254634(v26, v25, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100250CB0(v27, v13);
      sub_100250CB0(v27, v13);
      *(_WORD *)(v24 + 1sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
      uint64_t v53 = 0;
      unint64_t v54 = 0xE000000000000000;
      if (v47 <= 0xE)
      {
        uint64_t v51 = v17;
        unint64_t v52 = v16;
        uint64_t v32 = v48;
        (*(void (**)(char *, void, uint64_t))(v48 + 104))(v6, enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:), v3);
        sub_1003CEFBC();
        DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v3);
        uint64_t v31 = v53;
        unint64_t v30 = v54;
        uint64_t v28 = v49;
      }
      else
      {
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        unint64_t v30 = 0x80000001007B7770;
        uint64_t v28 = v49;
        uint64_t v31 = 0xD000000000000015;
      }
      uint64_t v53 = sub_100254634(v31, v30, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100250CB0(v17, v16);
      sub_100250CB0(v17, v16);
      os_log_t v33 = v42;
      _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v46, "bluetoothAddressChanged %s, sentBluetoothAddress: %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v14 = v43;
      uint64_t v2 = v44;
      unint64_t v23 = v47;
    }
    else
    {
      sub_100250CB0(v20, v13);
      sub_100250CB0(v20, v13);
      sub_100250CB0(v17, v16);
      sub_100250CB0(v17, v16);

      uint64_t v28 = v49;
    }
    if (*(void *)(*(void *)&v28[v14]
                   + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID
                   + 8))
    {
      uint64_t v34 = v50;
      if (v23 >= 0xF)
      {
        if (v13 >> 60 == 15)
        {
LABEL_27:

          return;
        }
        sub_100622BA0();
LABEL_26:
        sub_100250CB0(v34, v13);
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v34 = v50;
      if (v23 >= 0xF) {
        goto LABEL_26;
      }
    }
    sub_100278C78(v17, v16);
    if (v13 >> 60 == 15)
    {
      sub_10025ADCC(v17, v16);
      sub_100250CB0(v17, v16);
      sub_100250CB0(v34, v13);
    }
    else
    {
      sub_100278C78(v34, v13);
      char v35 = sub_10031C480(v17, v16, v34, v13);
      sub_100250CB0(v34, v13);
      if (v35)
      {
LABEL_25:
        sub_100250CB0(v17, v16);
        sub_100250CB0(v17, v16);
        goto LABEL_26;
      }
    }
    uint64_t v36 = *(void *)&v28[v14];
    if (*(unsigned char *)(v36 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete)) {
      goto LABEL_25;
    }
    *(unsigned char *)(v36 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needToResetFromBTAddrRotation) = 1;
    if (*(void *)(*(void *)&v28[v14] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_oobd + 8) >> 60 == 15)
    {
      uint64_t v37 = Logger.logObject.getter();
      os_log_type_t v38 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v39 = 0;
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "Waiting for OOBD before replayAttachEvent", v39, 2u);
        swift_slowDealloc();

        sub_100250CB0(v17, v16);
        sub_100250CB0(v17, v16);
        sub_100250CB0(v34, v13);
      }
      else
      {
        sub_100250CB0(v34, v13);
        sub_100250CB0(v17, v16);

        sub_100250CB0(v17, v16);
      }
    }
    else
    {
      uint64_t v40 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v2, 1, 1, v40);
      sub_100628DD4((uint64_t)v2, 1);

      sub_100250CB0(v17, v16);
      sub_100250CB0(v17, v16);
      sub_100250CB0(v34, v13);
      sub_10000A7E8((uint64_t)v2, &qword_100974EA0);
    }
  }
}

void sub_10062879C()
{
  uint64_t v0 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000B47C(v5, (uint64_t)qword_10097C7F0);
    unint64_t v6 = v4;
    os_log_type_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v9 = 67109120;
      v11[1] = [*(id *)((char *)&v6->isa+ OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor) screenOn];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v7, v8, "screenOnChangedHandler. on: %{BOOL}d", v9, 8u);
      swift_slowDealloc();
    }
    else
    {

      os_log_type_t v7 = v6;
    }

    if ([*(id *)((char *)&v6->isa + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor) screenOn])
    {
      sub_100622BA0();
    }
    else
    {
      uint64_t v10 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v2, 1, 1, v10);
      sub_100628DD4((uint64_t)v2, 0);

      sub_10000A7E8((uint64_t)v2, &qword_100974EA0);
    }
  }
}

void sub_1006289F0(unsigned char *a1)
{
  a1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitorActivated] = 1;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097C7F0);
  uint64_t v3 = a1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    os_log_type_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 67109378;
    uint64_t v8 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor;
    if ([*(id *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor] systemLockState] != 1)[[v3[v8] systemLockState]; {
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    }
    *(_WORD *)(v6 + 8) = 2112;
    uint64_t v10 = *(void **)&v3[v8];
    id v9 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v7 = v10;

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "System monitor activated - Authed? %{BOOL}d - (%@)", (uint8_t *)v6, 0x12u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_100622BA0();
}

void sub_100628C48()
{
  sub_10062BD0C(319, (unint64_t *)&qword_10096C2B0, (void (*)(uint64_t))&type metadata accessor for UUID);
  if (v0 <= 0x3F)
  {
    sub_10062BD0C(319, (unint64_t *)&qword_100973960, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100628DD4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  int v119 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v114 = *(void *)(v5 - 8);
  uint64_t v115 = v5;
  __chkstk_darwin(v5);
  int v112 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for DispatchQoS();
  uint64_t v111 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v110 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = type metadata accessor for UUID();
  uint64_t v121 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  char v109 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A844(&qword_100974EA0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  unint64_t v12 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v104 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v104 - v16;
  uint64_t v18 = self;
  id v19 = [v18 standardUserDefaults];
  int v20 = sub_10056EBEC();

  LODWORD(v12sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v20;
  if (v20) {
    int v108 = 0;
  }
  else {
    int v108 = *(unsigned __int8 *)(*(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState]
  }
                              + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete);
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  uint64_t v22 = sub_10000B47C(v21, (uint64_t)qword_10097C7F0);
  uint64_t v118 = a1;
  sub_10024A330(a1, (uint64_t)v17, &qword_100974EA0);
  unint64_t v23 = v3;
  uint64_t v24 = Logger.logObject.getter();
  int v25 = static os_log_type_t.default.getter();
  BOOL v26 = os_log_type_enabled(v24, (os_log_type_t)v25);
  uint64_t v116 = v22;
  if (v26)
  {
    int v106 = v25;
    id v107 = v18;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v105 = swift_slowAlloc();
    aBlock[0] = v105;
    *(_DWORD *)uint64_t v27 = 67110402;
    uint64_t v104 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
    LODWORD(v12sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = *(unsigned __int8 *)(*(void *)&v23[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState]
                                       + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v27 + 8) = 1024;
    LODWORD(v12sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v120 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v27 + 14) = 1024;
    LODWORD(v12sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v108;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v27 + 2sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = 1024;
    LODWORD(v12sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v119 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v27 + 26) = 2080;
    sub_10024A330((uint64_t)v17, (uint64_t)v15, &qword_100974EA0);
    uint64_t v28 = v121;
    uint64_t v29 = v117;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v15, 1, v117) == 1)
    {
      sub_10000A7E8((uint64_t)v15, &qword_100974EA0);
      unint64_t v30 = 0x80000001007C5750;
      unint64_t v31 = 0xD000000000000028;
    }
    else
    {
      unint64_t v31 = UUID.description.getter();
      unint64_t v30 = v33;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v29);
    }
    uint64_t v122 = (void *)sub_100254634(v31, v30, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A7E8((uint64_t)v17, &qword_100974EA0);
    *(_WORD *)(v27 + 36) = 2080;
    sub_100655CC8((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v122 = (void *)sub_100254634(v34, v35, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v106, "resetState. didComplete: %{BOOL}d, neededEduUI: %{BOOL}d, didCompleteInitialPair: %{BOOL}d, replayAttachEvent: %{BOOL}d, canceling id: %s, currentID: %s", (uint8_t *)v27, 0x2Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v18 = v107;
    uint64_t v32 = &OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastAccessoryDetachTimestamp;
  }
  else
  {
    sub_10000A7E8((uint64_t)v17, &qword_100974EA0);

    uint64_t v32 = &OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastAccessoryDetachTimestamp;
    uint64_t v29 = v117;
  }
  sub_10024A330(v118, (uint64_t)v12, &qword_100974EA0);
  uint64_t v36 = v121;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v12, 1, v29) == 1)
  {
    sub_10000A7E8((uint64_t)v12, &qword_100974EA0);
LABEL_16:
    uint64_t v38 = v32[2];
    uint64_t v39 = *(void *)&v23[v38];
    uint64_t v40 = *(void **)(v39 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_peerRequestingPairing);
    if (v40
      && (*(unsigned char *)(v39 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_peerPairingType + 8) & 1) == 0
      && (*(unsigned char *)(v39 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_handledPairRequest) & 1) == 0)
    {
      uint64_t v41 = v18;
      uint64_t v42 = *(void *)(v39 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_peerPairingType);
      id v43 = v40;
      uint64_t v44 = Logger.logObject.getter();
      os_log_type_t v45 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v44, v45))
      {
        int v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v46 = 0;
        _os_log_impl((void *)&_mh_execute_header, v44, v45, "Reject unhandled pairing request", v46, 2u);
        swift_slowDealloc();
      }

      id v47 = [*(id *)&v23[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central] sharedPairingAgent];
      if (!v47)
      {
        __break(1u);
        goto LABEL_48;
      }
      uint64_t v48 = v47;
      id v49 = v43;
      sub_10024592C((uint64_t)_swiftEmptyArrayStorage);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v48 respondToPairingRequest:v49 type:v42 accept:0 data:isa];

      uint64_t v18 = v41;
    }
    if ((v120 & 1) == 0)
    {
      id v51 = [v18 standardUserDefaults];
      sub_10056F5BC(0);
    }
    uint64_t v52 = *(void *)&v23[v38];
    if (!*(void *)(v52 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID + 8)) {
      goto LABEL_32;
    }
    unint64_t v53 = *(void *)(v52 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID + 8);
    if (v53 >> 60 == 15
      || *(unsigned char *)(v52 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needToStopBLEUpdates) != 1)
    {
      goto LABEL_32;
    }
    uint64_t v54 = *(void *)(v52 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID);
    swift_bridgeObjectRetain();
    sub_100278C78(v54, v53);
    uint64_t v55 = Logger.logObject.getter();
    os_log_type_t v56 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v57 = 0;
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "stopBLEUpdates in resetState.", v57, 2u);
      swift_slowDealloc();
    }

    char v58 = *(void **)&v23[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_bleProvider];
    if (v58)
    {
      id v59 = v58;
      NSString v60 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      Class v61 = Data._bridgeToObjectiveC()().super.isa;
      [v59 stopBLEUpdates:v60 blePairingUUID:v61];

      sub_100250CB0(v54, v53);
      uint64_t v52 = *(void *)&v23[v38];
LABEL_32:
      id v62 = *(void **)(v52 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_findMyUnpairAlert);
      if (v62)
      {
        id v63 = v62;
        uint64_t v64 = Logger.logObject.getter();
        os_log_type_t v65 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v64, v65))
        {
          uint64_t v66 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v66 = 0;
          _os_log_impl((void *)&_mh_execute_header, v64, v65, "Dismiss FindMy unpair alert in resetState", v66, 2u);
          swift_slowDealloc();
        }

        if (*(void *)(*(void *)&v23[v38]
                       + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral))
          [*(id *)&v23[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central] cancelPeripheralConnection:];
        [v63 invalidate];
        sub_100629E00(0);
      }
      swift_retain();
      sub_10061D838();
      swift_release();
      [v23 stopScanning];
      [v23 stopBatteryScanner];
      uint64_t v67 = *(void *)&v23[v38];
      uint64_t v68 = *(void *)(v67 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID + 8);
      char v109 = *(char **)(v67 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID);
      uint64_t v69 = *(void *)(v67 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID);
      unint64_t v70 = *(void *)(v67 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID + 8);
      uint64_t v71 = *(void *)(v67 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType);
      char v72 = *(unsigned char *)(v67 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType + 8);
      uint64_t v73 = *(void *)(v67 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilBtTag);
      uint64_t v74 = *(void *)(v67 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilBtTag + 8);
      uint64_t v75 = v67 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilCode;
      uint64_t v118 = *(void *)v75;
      LODWORD(v117) = *(unsigned __int8 *)(v75 + 8);
      type metadata accessor for SDB332SetupAgentSessionState(0);
      uint64_t v76 = swift_allocObject();
      swift_bridgeObjectRetain();
      sub_100278C78(v69, v70);
      swift_bridgeObjectRetain();
      sub_10061DD28();
      *(void *)&v23[v38] = v76;
      swift_release();
      uint64_t v77 = *(void *)&v23[v38];
      uint64_t v78 = v77 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
      *(void *)uint64_t v78 = v71;
      *(unsigned char *)(v78 + 8) = v72;
      NSString v79 = (void *)(v77 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilBtTag);
      *NSString v79 = v73;
      v79[1] = v74;
      swift_bridgeObjectRelease();
      uint64_t v80 = *(void *)&v23[v38] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilCode;
      *(void *)uint64_t v80 = v118;
      *(unsigned char *)(v80 + 8) = v117;
      unint64_t v120 = v70;
      uint64_t v121 = v69;
      if (v119)
      {
        uint64_t v81 = (void *)(*(void *)&v23[v38]
                       + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID);
        *uint64_t v81 = v109;
        v81[1] = v68;
        swift_bridgeObjectRelease();
        uint64_t v82 = (uint64_t *)(*(void *)&v23[v38]
                        + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID);
        uint64_t v83 = *v82;
        unint64_t v84 = v82[1];
        *uint64_t v82 = v69;
        v82[1] = v70;
        sub_100278C78(v69, v70);
        sub_100250CB0(v83, v84);
        [self b332BTAddressRotationDelay];
        double v86 = v85;
        uint64_t v87 = Logger.logObject.getter();
        os_log_type_t v88 = static os_log_type_t.default.getter();
        BOOL v89 = os_log_type_enabled(v87, v88);
        uint64_t v91 = v113;
        uint64_t v90 = v114;
        if (v89)
        {
          unint64_t v92 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)unint64_t v92 = 134217984;
          *(double *)uint64_t aBlock = v86;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v87, v88, "Sleeping for %f sec due to address rotation.", v92, 0xCu);
          swift_slowDealloc();
        }

        [self sleepForTimeInterval:v86];
        [v23 resetUIUpdatesFlagWithUndimScreen:0];
        uint64_t v93 = v115;
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_10062A0A8();
        id v94 = [objc_allocWithZone((Class)CBCentralManager) initWithDelegate:v23 queue:*(void *)&v23[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q]];
        uint64_t v95 = *(void **)&v23[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central];
        *(void *)&v23[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central] = v94;

        uint64_t v90 = v114;
        uint64_t v93 = v115;
        uint64_t v91 = v113;
      }
      uint64_t v96 = swift_allocObject();
      *(void *)(v96 + 16) = v23;
      aBlock[4] = (uint64_t)sub_10065527C;
      aBlock[5] = v96;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100296520;
      uint64_t aBlock[3] = (uint64_t)&unk_1008E3218;
      uint64_t v97 = _Block_copy(aBlock);
      uint64_t v98 = v23;
      int64_t v99 = v110;
      static DispatchQoS.unspecified.getter();
      uint64_t v122 = _swiftEmptyArrayStorage;
      sub_100655CC8((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10000A844((uint64_t *)&unk_10096C490);
      sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
      uint64_t v100 = v112;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v97);
      sub_100250CB0(v121, v120);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v100, v93);
      (*(void (**)(char *, uint64_t))(v111 + 8))(v99, v91);
      swift_release();
      return;
    }
LABEL_48:
    __break(1u);
    return;
  }
  uint64_t v37 = v109;
  (*(void (**)(void))(v36 + 32))();
  sub_100655CC8((unint64_t *)&unk_10096D460, (void (*)(uint64_t))&type metadata accessor for UUID);
  if (dispatch thunk of static Equatable.== infix(_:_:)())
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v29);
    uint64_t v32 = &OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastAccessoryDetachTimestamp;
    goto LABEL_16;
  }
  NSString v101 = Logger.logObject.getter();
  os_log_type_t v102 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v101, v102))
  {
    uint64_t v103 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v103 = 0;
    _os_log_impl((void *)&_mh_execute_header, v101, v102, "ignore resetState", v103, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v29);
}

void sub_100629E00(char a1)
{
  if (*(unsigned char *)(*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) == 1)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000B47C(v3, (uint64_t)qword_10097C7F0);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "dismissSBUI", v6, 2u);
      swift_slowDealloc();
    }

    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v8 = (void *)Strong;
      aBlock[4] = sub_100641710;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100444120;
      uint64_t aBlock[3] = &unk_1008E2910;
      uint64_t v9 = _Block_copy(aBlock);
      id v10 = [v8 remoteObjectProxyWithErrorHandler:v9];
      _Block_release(v9);
      [v10 dismissUIAnimated:a1 & 1];

      swift_unknownObjectRelease();
    }
  }
  else
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000B47C(v11, (uint64_t)qword_10097C7F0);
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v12, "ignore dismissSBUI, UI updates disabled for current session state", v13, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_10062A0A8()
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_10097C7F0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "releaseHUDTransaction", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    os_log_type_t v5 = (void *)Strong;
    aBlock[4] = sub_100641704;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100444120;
    uint64_t aBlock[3] = &unk_1008E2A00;
    uint64_t v6 = _Block_copy(aBlock);
    id v7 = [v5 remoteObjectProxyWithErrorHandler:v6];
    _Block_release(v6);
    [v7 releaseHUDTransaction];

    swift_unknownObjectRelease();
  }
  else
  {
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "no UI service to stop", v9, 2u);
      swift_slowDealloc();
    }
  }
}

id sub_10062A2E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v5 = (void *)type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(v5 - 1);
  __chkstk_darwin(v5);
  unint64_t v8 = (unint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (char **)type metadata accessor for DispatchQoS();
  uint64_t v10 = (uint64_t)*(v9 - 1);
  __chkstk_darwin(v9);
  NSString v60 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for DispatchTime();
  uint64_t v59 = *(void *)(v62 - 8);
  uint64_t v12 = __chkstk_darwin(v62);
  uint64_t v57 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  char v58 = (char *)&v49 - v14;
  uint64_t v67 = type metadata accessor for UUID();
  uint64_t v61 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  os_log_type_t v65 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A0B0 != -1) {
LABEL_21:
  }
    swift_once();
  uint64_t v16 = type metadata accessor for Logger();
  sub_10000B47C(v16, (uint64_t)qword_10097C7F0);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    id v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "raceyInternalUnpairPreviousB332s...", v19, 2u);
    swift_slowDealloc();
  }

  uint64_t v20 = *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q);
  id v21 = [objc_allocWithZone((Class)CBCentralManager) initWithDelegate:0 queue:v20];
  id v66 = [objc_allocWithZone((Class)SPPairingManager) init];
  id v68 = v21;
  id result = [v21 sharedPairingAgent];
  if (!result) {
    goto LABEL_24;
  }
  unint64_t v23 = result;
  uint64_t v52 = v10;
  unint64_t v53 = v8;
  sub_10062AC20();
  unint64_t v8 = (unint64_t)v24;

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v51 = v20;
  uint64_t v54 = v9;
  uint64_t v55 = v6;
  os_log_type_t v56 = v4;
  if (v10)
  {
    id v49 = v5;
    uint64_t v50 = v1;
    unint64_t v25 = v8 & 0xC000000000000001;
    id v63 = (void (**)(char *, uint64_t))(v61 + 8);
    uint64_t v64 = &v72;
    uint64_t v26 = 4;
    uint64_t v1 = &selRef_shouldBlockPresentation;
    uint64_t v9 = &selRef_shouldBlockPresentation;
    while (1)
    {
      if (v25) {
        uint64_t v27 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v27 = *(id *)(v8 + 8 * v26);
      }
      os_log_type_t v5 = v27;
      uint64_t v6 = v26 - 3;
      if (__OFADD__(v26 - 4, 1))
      {
        __break(1u);
        goto LABEL_21;
      }
      id result = [v68 sharedPairingAgent];
      if (!result) {
        break;
      }
      uint64_t v28 = result;
      [result v1[493]:v5];

      NSString v29 = String._bridgeToObjectiveC()();
      uint64_t v4 = (char *)[v5 v9[443] v29];

      if (v4)
      {
        id v30 = [v5 identifier];
        unint64_t v31 = v25;
        uint64_t v32 = (char *)v8;
        uint64_t v33 = v10;
        uint64_t v34 = v1;
        unint64_t v35 = v65;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        Class isa = UUID._bridgeToObjectiveC()().super.isa;
        (*v63)(v35, v67);
        uint64_t v37 = swift_allocObject();
        *(void *)(v37 + 16) = v5;
        uint64_t v74 = sub_100655274;
        uint64_t v75 = v37;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v71 = 1107296256;
        char v72 = sub_1006B210C;
        uint64_t v73 = &unk_1008E31C8;
        uint64_t v4 = (char *)_Block_copy(&aBlock);
        uint64_t v38 = v5;
        uint64_t v1 = v34;
        uint64_t v10 = v33;
        unint64_t v8 = (unint64_t)v32;
        unint64_t v25 = v31;
        uint64_t v9 = &selRef_shouldBlockPresentation;
        swift_release();
        [v66 unpairUUID:isa force:1 completion:v4];

        _Block_release(v4);
        os_log_type_t v5 = isa;
      }

      ++v26;
      if (v6 == v10)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v50;
        uint64_t v39 = v49;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  uint64_t v39 = v5;
LABEL_19:
  [self sleepForTimeInterval:2.0];
  uint64_t v40 = v57;
  static DispatchTime.now()();
  uint64_t v41 = v58;
  + infix(_:_:)();
  os_log_type_t v65 = *(char **)(v59 + 8);
  ((void (*)(char *, uint64_t))v65)(v40, v62);
  uint64_t v42 = swift_allocObject();
  id v43 = v68;
  *(void *)(v42 + 16) = v68;
  uint64_t v74 = sub_10065526C;
  uint64_t v75 = v42;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v71 = 1107296256;
  char v72 = sub_100296520;
  uint64_t v73 = &unk_1008E3178;
  uint64_t v44 = _Block_copy(&aBlock);
  id v68 = v43;
  os_log_type_t v45 = v60;
  static DispatchQoS.unspecified.getter();
  uint64_t v69 = _swiftEmptyArrayStorage;
  sub_100655CC8((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  unint64_t v46 = v53;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v44);
  (*(void (**)(unint64_t, void *))(v55 + 8))(v46, v39);
  (*(void (**)(char *, char **))(v52 + 8))(v45, v54);
  ((void (*)(char *, uint64_t))v65)(v41, v62);
  swift_release();
  id v47 = (char *)v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel;
  *(void *)id v47 = 0;
  v47[8] = 1;
  sub_10061EDD0();
  *(void *)&(*(char **)((char *)v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState))[OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_lastSentBatteryPercentage] = 0;
  uint64_t v48 = (uint64_t)v56;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56))(v56, 1, 1, v67);
  sub_100628DD4(v48, 0);

  return (id)sub_10000A7E8(v48, &qword_100974EA0);
}

void sub_10062AC20()
{
  id v1 = [v0 retrievePairedPeers];
  if (!v1) {
    goto LABEL_54;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v4 = (unint64_t)sub_10045F1A0(v3);
  swift_bridgeObjectRelease();
  uint64_t v40 = (uint64_t)_swiftEmptyArrayStorage;
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (v5) {
      goto LABEL_4;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    unint64_t v9 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_17;
  }
LABEL_4:
  if (v5 < 1)
  {
    __break(1u);
    goto LABEL_53;
  }
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(v4 + 8 * i + 32);
    }
    unint64_t v8 = v7;
    self;
    if (swift_dynamicCastObjCClass())
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v9 = v40;
LABEL_18:
  swift_bridgeObjectRelease();
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10000B47C(v10, (uint64_t)qword_10097C7F0);
  swift_bridgeObjectRetain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    sub_10000B740(0, &qword_10097D2D8);
    swift_bridgeObjectRetain();
    uint64_t v14 = Array.description.getter();
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    sub_100254634(v14, v16, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "pairedPeripherals: %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v40 = (uint64_t)_swiftEmptyArrayStorage;
  if (!(v9 >> 62))
  {
    uint64_t v17 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17) {
      goto LABEL_25;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    uint64_t v29 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_40;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v17) {
    goto LABEL_39;
  }
LABEL_25:
  if (v17 < 1)
  {
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    return;
  }
  for (uint64_t j = 0; j != v17; ++j)
  {
    if ((v9 & 0xC000000000000001) != 0) {
      id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v19 = *(id *)(v9 + 8 * j + 32);
    }
    uint64_t v20 = v19;
    NSString v21 = String._bridgeToObjectiveC()();
    unsigned __int8 v22 = [v20 hasTag:v21];

    if (v22) {
      goto LABEL_34;
    }
    NSString v23 = String._bridgeToObjectiveC()();
    unsigned __int8 v24 = [v20 hasTag:v23];

    if ((v24 & 1) != 0
      || (NSString v25 = String._bridgeToObjectiveC()(),
          unsigned __int8 v26 = [v20 hasTag:v25],
          v25,
          (v26 & 1) != 0)
      || (NSString v27 = String._bridgeToObjectiveC()(),
          unsigned int v28 = [v20 hasTag:v27],
          v27,
          v28))
    {
LABEL_34:
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v29 = v40;
LABEL_40:
  swift_retain_n();
  id v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136315138;
    sub_10000B740(0, &qword_10097D2D8);
    swift_retain();
    uint64_t v33 = Array.description.getter();
    unint64_t v35 = v34;
    swift_release();
    sub_100254634(v33, v35, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "pairedPencils: %s", v32, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  if (v29 < 0 || (v29 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (v39 < 2) {
      return;
    }
  }
  else if (*(uint64_t *)(v29 + 16) < 2)
  {
    return;
  }
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v38 = 0;
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "!!! Multiple paired Pencils", v38, 2u);
    swift_slowDealloc();
  }
}

void sub_10062B35C(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_errorRetain();
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10000B47C(v8, (uint64_t)qword_10097C7F0);
    swift_errorRetain();
    id v9 = a2;
    swift_errorRetain();
    id v10 = v9;
    unsigned __int8 v22 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = (void *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v24 = v21;
      *(_DWORD *)uint64_t v12 = 136315394;
      v20[1] = v12 + 4;
      id v14 = [v10 identifier];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      sub_100655CC8((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v17 = v16;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      uint64_t v23 = sub_100254634(v15, v17, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 1sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2112;
      swift_errorRetain();
      uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v23 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v13 = v18;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v11, "Failed to FindMy-unpair Pencil with ID %s: %@", (uint8_t *)v12, 0x16u);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
      id v19 = v22;
    }
  }
}

id sub_10062B708(void *a1)
{
  sub_10000A844(&qword_10096B2E8);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10076E7A0;
  id result = [a1 sharedPairingAgent];
  if (result)
  {
    uint64_t v4 = result;
    sub_10062AC20();
    uint64_t v6 = v5;

    *(void *)(v2 + 56) = sub_10000A844(&qword_10097D418);
    *(void *)(v2 + 3sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v6;
    print(_:separator:terminator:)();
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10062B7C8()
{
  id v1 = v0;
  uint64_t v2 = sub_10000A844(&qword_10097D410);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchTime();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  os_log_type_t v11 = (char *)&v39 - v10;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t result = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v39 - v17;
  if (!*(void *)(*(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState]
                  + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sessionTimeout))
  {
    uint64_t v44 = v16;
    uint64_t v45 = v6;
    uint64_t v48 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
    unint64_t v46 = v4;
    uint64_t v50 = v5;
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_10000B47C(v19, (uint64_t)qword_10097C7F0);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      unsigned __int8 v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned __int8 v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "- startSessionTimeout", v22, 2u);
      swift_slowDealloc();
    }
    id v49 = v18;

    uint64_t v23 = v48;
    uint64_t v24 = *(void *)&v1[v48] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_uuid;
    uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v41(v18, v24, v12);
    static DispatchTime.now()();
    uint64_t v25 = v13;
    if (qword_10096A0B8 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for DispatchTimeInterval();
    sub_10000B47C(v26, (uint64_t)qword_10097C808);
    + infix(_:_:)();
    NSString v27 = v9;
    uint64_t v28 = v45;
    uint64_t v29 = v50;
    uint64_t v42 = *(void (**)(char *, uint64_t))(v45 + 8);
    uint64_t v43 = v45 + 8;
    v42(v27, v50);
    uint64_t v30 = *(void *)&v1[v23];
    os_log_type_t v31 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
    id v47 = v11;
    v31(v27, v11, v29);
    uint64_t v32 = (uint64_t)v46;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v46, 1, 1, v29);
    id v40 = *(id *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q];
    uint64_t v33 = v44;
    v41(v44, (uint64_t)v49, v12);
    unint64_t v34 = (*(unsigned __int8 *)(v25 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v1;
    uint64_t v45 = v25;
    (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v35 + v34, v33, v12);
    type metadata accessor for PushableTimer(0);
    swift_allocObject();
    swift_retain();
    id v36 = v40;
    os_log_type_t v37 = v1;
    uint64_t v38 = sub_1002C9CCC(v27, v32, v36, (uint64_t)sub_1006551DC, v35);

    swift_release();
    *(void *)(v30 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sessionTimeout) = v38;
    swift_release();
    swift_release();
    if (*(void *)(*(void *)&v1[v48]
                   + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sessionTimeout))
    {
      swift_getObjectType();
      swift_retain();
      OS_dispatch_source.resume()();
      swift_release();
    }
    v42(v47, v50);
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v49, v12);
  }
  return result;
}

void sub_10062BD0C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10062BD60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_10097C7F0);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "- sessionTimeout fired", v9, 2u);
    swift_slowDealloc();
  }

  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v5, a2, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  sub_100628DD4(v5, 0);
  return sub_10000A7E8((uint64_t)v5, &qword_100974EA0);
}

void sub_10062BF40(char a1)
{
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState]
     + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
  if ((*(unsigned char *)(v3 + 8) & 1) != 0 || *(void *)v3 != 2) {
    return;
  }
  uint64_t v4 = v1;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10000B47C(v6, (uint64_t)qword_10097C7F0);
  uint64_t v7 = v1;
  os_log_type_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t v31 = v9;
    os_log_t log = v8;
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 67110400;
    uint64_t v11 = *(void **)(*(void *)&v1[v2] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults);
    swift_retain();
    NSString v12 = String._bridgeToObjectiveC()();
    [v11 BOOLForKey:v12];

    swift_release();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v10 + 8) = 1024;
    swift_retain();
    sub_10056ECE8();

    swift_release();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v10 + 14) = 1024;
    id v13 = objc_retain(*(id *)(*(void *)&v1[v2]
                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults));
    NSString v14 = String._bridgeToObjectiveC()();
    unsigned int v15 = [v13 BOOLForKey:v14];

    if (v15 && (sub_10056EE1C() & 1) != 0)
    {
      NSString v16 = String._bridgeToObjectiveC()();
      [v13 BOOLForKey:v16];
    }
    else
    {
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v10 + 2sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = 1024;
    id v17 = objc_retain(*(id *)(*(void *)&v4[v2]
                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults));
    NSString v18 = String._bridgeToObjectiveC()();
    [v17 BOOLForKey:v18];

    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 26) = 1024;
    id v19 = objc_retain(*(id *)(*(void *)&v4[v2]
                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults));
    sub_10056EE1C();

    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 3sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 1024;
    id v20 = objc_retain(*(id *)(*(void *)&v4[v2]
                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults));
    NSString v21 = String._bridgeToObjectiveC()();
    [v20 BOOLForKey:v21];

    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, log, v31, "--B222 Begin run Info--\nneedsInitialEducationUI:%{BOOL}d\nneedsWhatsNewUI:%{BOOL}d\nneedsWhatsNewForKeyboardLocale:%{BOOL}d\nhasShownPencilTextInputEducation:%{BOOL}d\nSupportedTextInputLocaleExists:%{BOOL}d\nisShowingEducationUI:%{BOOL}d", (uint8_t *)v10, 0x26u);
    swift_slowDealloc();
  }
  else
  {
  }
  unsigned __int8 v22 = *(void **)(*(void *)&v4[v2] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults);
  swift_retain();
  if (sub_10056EBEC())
  {
    NSString v23 = String._bridgeToObjectiveC()();
    unsigned __int8 v24 = [v22 BOOLForKey:v23];
    swift_release();

    if ((v24 & 1) == 0)
    {
      if (v7[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionInProgress])
      {
        if (a1)
        {
          uint64_t v25 = Logger.logObject.getter();
          os_log_type_t v26 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v25, v26))
          {
            NSString v27 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)NSString v27 = 0;
            _os_log_impl((void *)&_mh_execute_header, v25, v26, "Beginning b222 attempt in progress, but requested counter reset", v27, 2u);
            swift_slowDealloc();
          }

          *(void *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionAttempt] = 0;
        }
      }
      else
      {
        v7[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionInProgress] = 1;
        *(void *)&v7[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionAttempt] = 0;
        sub_10062C58C(0);
      }
      return;
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "b222BeginRunWithTimeout does not need any education UI, bailing", v30, 2u);
    swift_slowDealloc();
  }
}

void sub_10062C58C(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchTime();
  uint64_t v13 = __chkstk_darwin(v12);
  unsigned int v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v19 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionInProgress;
  if (v2[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionInProgress] != 1) {
    return;
  }
  LODWORD(v54) = a1;
  uint64_t v20 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionAttempt;
  uint64_t v21 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionAttempt];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
    __break(1u);
    goto LABEL_19;
  }
  unint64_t v46 = (char *)&v45 - v17;
  uint64_t v47 = v18;
  uint64_t v52 = v5;
  uint64_t v53 = v16;
  uint64_t v48 = v11;
  uint64_t v50 = v7;
  uint64_t v51 = v8;
  *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionAttempt] = v23;
  if (qword_10096A0B0 != -1) {
LABEL_19:
  }
    swift_once();
  uint64_t v24 = type metadata accessor for Logger();
  sub_10000B47C(v24, (uint64_t)qword_10097C7F0);
  uint64_t v25 = v2;
  os_log_type_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  BOOL v28 = os_log_type_enabled(v26, v27);
  uint64_t v49 = v9;
  if (v28)
  {
    os_log_type_t v29 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v29 = 134217984;
    aBlock[0] = *(void *)&v2[v20];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Beginning b222 attempt %ld", v29, 0xCu);
    swift_slowDealloc();
  }
  else
  {
  }
  if (*(uint64_t *)&v2[v20] <= 9)
  {
    if ((v54 & 1) == 0)
    {
      sub_10062CCA8();
      return;
    }
    uint64_t v30 = *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionWaitIndex];
    uint64_t v31 = v30 + 1;
    if (!__OFADD__(v30, 1))
    {
      *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionWaitIndex] = v31;
      uint64_t v32 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_10000B740(0, (unint64_t *)&qword_10096A1A0);
      uint64_t v45 = static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      uint64_t v33 = v46;
      + infix(_:_:)();
      uint64_t v54 = *(void (**)(char *, uint64_t))(v47 + 8);
      v54(v15, v53);
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v32;
      *(void *)(v34 + 24) = v31;
      aBlock[4] = sub_100654EC0;
      aBlock[5] = v34;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100296520;
      uint64_t aBlock[3] = &unk_1008E2E30;
      uint64_t v35 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      id v36 = v48;
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_100655CC8((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10000A844((uint64_t *)&unk_10096C490);
      sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
      os_log_type_t v37 = v50;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v38 = (void *)v45;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v35);

      (*(void (**)(char *, uint64_t))(v52 + 8))(v37, v4);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v36, v51);
      v54(v33, v53);
      swift_release();
      return;
    }
    goto LABEL_21;
  }
  uint64_t v39 = v25;
  id v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 134217984;
    aBlock[0] = 10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v40, v41, "b222 reached max attempts %ld, canceling", v42, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    id v40 = v39;
  }

  v2[v19] = 0;
  *(void *)&v2[v20] = 0;
  uint64_t v43 = *(uint64_t *)((char *)&v39->isa + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionWaitIndex);
  BOOL v22 = __OFADD__(v43, 1);
  uint64_t v44 = (objc_class *)(v43 + 1);
  if (v22)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    return;
  }
  *(Class *)((char *)&v39->isa + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionWaitIndex) = v44;
}

void sub_10062CBE8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  if (Strong)
  {
    swift_beginAccess();
    uint64_t v4 = (char *)swift_unknownObjectWeakLoadStrong();
    if (v4)
    {
      uint64_t v5 = *(void *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionWaitIndex];

      if (v5 == a2)
      {
        swift_beginAccess();
        uint64_t v6 = swift_unknownObjectWeakLoadStrong();
        if (v6)
        {
          uint64_t v7 = (void *)v6;
          sub_10062CCA8();
        }
      }
    }
  }
}

void sub_10062CCA8()
{
  uint64_t v3 = v0;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_10097C7F0);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "b222Run()", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t v8 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionWaitIndex;
  uint64_t v9 = *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionWaitIndex];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionWaitIndex] = v11;
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  id v1 = &unk_100994000;
  if ((*(unsigned char *)(*(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState]
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete) & 1) != 0)
  {
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "B222 run called, but sessionState.didComplete == true.  Bailing", v14, 2u);
      swift_slowDealloc();
    }

    v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionInProgress] = 0;
    *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionAttempt] = 0;
    uint64_t v15 = *(void *)&v3[v8];
    BOOL v10 = __OFADD__(v15, 1);
    uint64_t v16 = v15 + 1;
    if (!v10)
    {
      *(void *)&v3[v8] = v16;
      return;
    }
    goto LABEL_39;
  }
  id v17 = [*(id *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central] sharedPairingAgent];
  if (!v17) {
    goto LABEL_42;
  }
  uint64_t v18 = v17;
  sub_10062AC20();
  unint64_t v20 = v19;

  if (!(v20 >> 62))
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_14;
  }
LABEL_40:
  swift_bridgeObjectRetain();
  uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_14:
  swift_bridgeObjectRelease();
  if (v21 >= 1)
  {
    BOOL v22 = *(void **)(*(void *)&v3[v2] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults);
    swift_retain();
    if (sub_10056EBEC())
    {
      NSString v23 = String._bridgeToObjectiveC()();
      unsigned __int8 v24 = [v22 BOOLForKey:v23];
      swift_release();

      if ((v24 & 1) == 0)
      {
        uint64_t v25 = Logger.logObject.getter();
        os_log_type_t v26 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v25, v26))
        {
          os_log_type_t v27 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v27 = 0;
          _os_log_impl((void *)&_mh_execute_header, v25, v26, "attempting to show UI for b222.  .", v27, 2u);
          swift_slowDealloc();
        }

        sub_10062B7C8();
        sub_10062D488();
        sub_10062D930();
        sub_10062DD78();
        sub_10062E23C();
        sub_10062E404();
        sub_10062EBC0();
        uint64_t v36 = *(void *)&v3[v2];
        if ((*(unsigned char *)(v36 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairingStarted) & 1) == 0)
        {
          if (*(unsigned char *)(v36 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType + 8)) {
            uint64_t v37 = 0;
          }
          else {
            uint64_t v37 = *(void *)(v36 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType);
          }
          sub_10062F09C(1, v37);
          *(unsigned char *)(*(void *)&v3[v2]
                   + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairingStarted) = 1;
          uint64_t v36 = *(void *)&v3[v2];
        }
        uint64_t v38 = v1[369];
        if (*(unsigned char *)(v36 + v38))
        {
          char v39 = 1;
        }
        else
        {
          sub_10062F450();
          uint64_t v36 = *(void *)&v3[v2];
          uint64_t v38 = v1[369];
          char v39 = *(unsigned char *)(v36 + v38);
        }
        *(unsigned char *)(v36 + v38) = 1;
        swift_retain();
        sub_10061CF0C(v39, &OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete, "didComplete = %{BOOL}d");
        swift_release();
      }
    }
    else
    {
      swift_release();
    }
  }
  if (*(unsigned char *)(*(void *)&v3[v2] + v1[369]))
  {
    v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionInProgress] = 0;
    *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionAttempt] = 0;
    uint64_t v28 = *(void *)&v3[v8];
    BOOL v10 = __OFADD__(v28, 1);
    uint64_t v29 = v28 + 1;
    if (!v10)
    {
      *(void *)&v3[v8] = v29;
      swift_retain();
      sub_10061D838();
      swift_release();
      [v3 stopScanning];
      sub_10062F8E8();
      sub_10062FF48();
      uint64_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "b222run() All cleanup completely done.", v32, 2u);
        swift_slowDealloc();
      }

      return;
    }
    __break(1u);
LABEL_42:
    __break(1u);
    return;
  }
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "b222Run() did not complete, waiting to try again.", v35, 2u);
    swift_slowDealloc();
  }

  sub_10062C58C(1);
}

void sub_10062D488()
{
  if (*(unsigned char *)(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) != 1)
  {
    uint64_t v21 = 1631;
    swift_retain();
    v9._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    uint64_t v10 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v11 = sub_10059634C(&v21, v10);
    swift_endAccess();
    if (v11)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v12 = type metadata accessor for Logger();
      sub_10000B47C(v12, (uint64_t)qword_10097C7F0);
      uint64_t v5 = Logger.logObject.getter();
      os_log_type_t v6 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v5, v6)) {
        goto LABEL_14;
      }
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      uint64_t v8 = "ignore ensureScreenOn, UI updates disabled for current session state";
      goto LABEL_13;
    }
    goto LABEL_15;
  }
  if ([*(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor) screenOn])
  {
    uint64_t v21 = 1640;
    swift_retain();
    v1._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v1);
    swift_bridgeObjectRelease();
    uint64_t v2 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v3 = sub_10059634C(&v21, v2);
    swift_endAccess();
    if (v3)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v4 = type metadata accessor for Logger();
      sub_10000B47C(v4, (uint64_t)qword_10097C7F0);
      uint64_t v5 = Logger.logObject.getter();
      os_log_type_t v6 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v5, v6)) {
        goto LABEL_14;
      }
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      uint64_t v8 = "ensureScreenOn completed";
LABEL_13:
      _os_log_impl((void *)&_mh_execute_header, v5, v6, v8, v7, 2u);
      swift_slowDealloc();
LABEL_14:
      swift_release();

      return;
    }
LABEL_15:
    swift_release();
    return;
  }
  uint64_t v21 = 1637;
  swift_retain();
  v13._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v15 = sub_10059634C(&v21, v14);
  swift_endAccess();
  if (v15)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10000B47C(v16, (uint64_t)qword_10097C7F0);
    id v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      unint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "ensureScreenOn - screen is currently off", v19, 2u);
      swift_slowDealloc();
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
  sub_100654330();
  swift_allocError();
  *unint64_t v20 = 1;
  swift_willThrow();
}

void sub_10062D930()
{
  if (*(unsigned char *)(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) != 1)
  {
    uint64_t v17 = 2279;
    swift_retain();
    v5._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v5);
    swift_bridgeObjectRelease();
    uint64_t v6 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v7 = sub_10059634C(&v17, v6);
    swift_endAccess();
    if (v7)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      sub_10000B47C(v8, (uint64_t)qword_10097C7F0);
      Swift::String v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v9, v10)) {
        goto LABEL_21;
      }
      char v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v11 = 0;
      uint64_t v12 = "ignore startUIService, UI updates disabled for current session state";
      goto LABEL_20;
    }
LABEL_22:
    swift_release();
    return;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sbHasStarted) != 1)
  {
    uint64_t v17 = 2285;
    swift_retain();
    v13._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    uint64_t v14 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v15 = sub_10059634C(&v17, v14);
    swift_endAccess();
    if (v15)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      sub_10000B47C(v16, (uint64_t)qword_10097C7F0);
      Swift::String v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.fault.getter();
      if (!os_log_type_enabled(v9, v10)) {
        goto LABEL_21;
      }
      char v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v11 = 0;
      uint64_t v12 = "Hmm, SpringBoard hasn't started even though sendsUIUpdates = true";
LABEL_20:
      _os_log_impl((void *)&_mh_execute_header, v9, v10, v12, v11, 2u);
      swift_slowDealloc();
LABEL_21:
      swift_release();

      return;
    }
    goto LABEL_22;
  }
  [*(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor) screenOn];
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10000B47C(v1, (uint64_t)qword_10097C7F0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "startUIService. Screen on? %{BOOL}d.", v4, 8u);
    swift_slowDealloc();
  }

  if (qword_100969E10 != -1) {
    swift_once();
  }
  sub_100446124();
}

void sub_10062DD78()
{
  if (*(unsigned char *)(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) != 1)
  {
    uint64_t v22 = 1647;
    swift_retain();
    v8._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
    uint64_t v9 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v10 = sub_10059634C(&v22, v9);
    swift_endAccess();
    if (v10)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      sub_10000B47C(v11, (uint64_t)qword_10097C7F0);
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v12, v13)) {
        goto LABEL_21;
      }
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      char v15 = "ignore ensureHUDServiceStarted, UI updates disabled for current session state";
      goto LABEL_20;
    }
    goto LABEL_22;
  }
  uint64_t v22 = 1651;
  swift_retain();
  v1._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  uint64_t v2 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v3 = sub_10059634C(&v22, v2);
  swift_endAccess();
  if (v3)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_10097C7F0);
    Swift::String v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      char v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "ensureUIServiceStarted called", v7, 2u);
      swift_slowDealloc();
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {

    uint64_t v22 = 1653;
    swift_retain();
    v17._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    uint64_t v18 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v19 = sub_10059634C(&v22, v18);
    swift_endAccess();
    if (v19)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      sub_10000B47C(v20, (uint64_t)qword_10097C7F0);
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v12, v13)) {
        goto LABEL_21;
      }
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      char v15 = "ensureUIServiceStarted completed";
LABEL_20:
      _os_log_impl((void *)&_mh_execute_header, v12, v13, v15, v14, 2u);
      swift_slowDealloc();
LABEL_21:
      swift_release();

      return;
    }
LABEL_22:
    swift_release();
    return;
  }
  sub_100654330();
  swift_allocError();
  *uint64_t v21 = 1;
  swift_willThrow();
}

void sub_10062E23C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) != 1)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_10097C7F0);
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(oslog, v3)) {
      goto LABEL_12;
    }
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    Swift::String v5 = "ignore startViewService, UI updates disabled for current session state";
    goto LABEL_11;
  }
  if (*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sbRemoteHandle))
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000B47C(v2, (uint64_t)qword_10097C7F0);
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(oslog, v3)) {
      goto LABEL_12;
    }
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    Swift::String v5 = "sbRemoteHandle != nil";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, oslog, v3, v5, v4, 2u);
    swift_slowDealloc();
LABEL_12:

    return;
  }

  sub_1006412B8();
}

void sub_10062E404()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  uint64_t v2 = *(void *)(v1 + 16) + 16;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) != 1)
  {
    v44._uint64_t countAndFlagsBits = 0xD000000000000057;
    v44._id object = (void *)0x80000001007C52B0;
    uint64_t v45 = 1679;
    swift_retain();
    v10._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v10);
    swift_bridgeObjectRelease();
    uint64_t v11 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v12 = sub_10059634C(&v45, v11);
    swift_endAccess();
    if (v12)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      sub_10000B47C(v13, (uint64_t)qword_10097C7F0);
      uint64_t v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v14, v15)) {
        goto LABEL_27;
      }
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      Swift::String v17 = "ignore ensureSystemUIState, UI updates disabled for current session state";
      goto LABEL_26;
    }
LABEL_28:
    swift_release();
    return;
  }
  v44._uint64_t countAndFlagsBits = 0xD000000000000057;
  v44._id object = (void *)0x80000001007C52B0;
  uint64_t v45 = 1682;
  swift_retain();
  v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v5 = sub_10059634C(&v45, v4);
  swift_endAccess();
  if (v5)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_10097C7F0);
    char v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    uint64_t v2 = v8;
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, (os_log_type_t)v2, "ensureSystemUIState called", v9, 2u);
      swift_slowDealloc();
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
  id v18 = [self sharedMonitor];
  if (!v18)
  {
    __break(1u);
    return;
  }
  char v19 = v18;
  unsigned int v20 = [v18 systemUIFlags];

  if ((v20 & 0x74008) == 0)
  {
    v44._uint64_t countAndFlagsBits = 0xD000000000000057;
    v44._id object = (void *)0x80000001007C52B0;
    uint64_t v45 = 1703;
    swift_retain();
    v39._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v39);
    swift_bridgeObjectRelease();
    uint64_t v40 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v41 = sub_10059634C(&v45, v40);
    swift_endAccess();
    if (v41)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v42 = type metadata accessor for Logger();
      sub_10000B47C(v42, (uint64_t)qword_10097C7F0);
      uint64_t v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v14, v15)) {
        goto LABEL_27;
      }
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      Swift::String v17 = "ensureSystemUIState completed";
LABEL_26:
      _os_log_impl((void *)&_mh_execute_header, v14, v15, v17, v16, 2u);
      swift_slowDealloc();
LABEL_27:
      swift_release();

      return;
    }
    goto LABEL_28;
  }
  LODWORD(v44._countAndFlagsBits) = v20;
  uint64_t v21 = (void *)sub_100654384();
  uint64_t countAndFlagsBits = String.init<A>(_:radix:uppercase:)();
  id object = v23;
  uint64_t v25 = String.count.getter();
  uint64_t v26 = 32 - v25;
  if (__OFSUB__(32, v25))
  {
    __break(1u);
    goto LABEL_32;
  }
  v27._uint64_t countAndFlagsBits = 48;
  v27._id object = (void *)0xE100000000000000;
  Swift::String v28 = String.init(repeating:count:)(v27, v26 & (unint64_t)~(v26 >> 63));
  HIDWORD(v44._countAndFlagsBits) = HIDWORD(v28._countAndFlagsBits);
  v44._id object = v28._object;
  swift_bridgeObjectRetain();
  v29._uint64_t countAndFlagsBits = countAndFlagsBits;
  v29._id object = object;
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t countAndFlagsBits = v28._countAndFlagsBits;
  id object = v28._object;
  LODWORD(v44._countAndFlagsBits) = 475144;
  uint64_t v2 = String.init<A>(_:radix:uppercase:)();
  uint64_t v21 = v30;
  uint64_t v31 = String.count.getter();
  uint64_t v32 = 32 - v31;
  if (__OFSUB__(32, v31))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v33._uint64_t countAndFlagsBits = 48;
  v33._id object = (void *)0xE100000000000000;
  Swift::String v44 = String.init(repeating:count:)(v33, v32 & (unint64_t)~(v32 >> 63));
  swift_bridgeObjectRetain();
  v34._uint64_t countAndFlagsBits = v2;
  v34._id object = v21;
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = v44._object;
  uint64_t v2 = v44._countAndFlagsBits;
  if (qword_10096A0B0 != -1) {
LABEL_33:
  }
    swift_once();
  uint64_t v35 = type metadata accessor for Logger();
  sub_10000B47C(v35, (uint64_t)qword_10097C7F0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = swift_slowAlloc();
    v44._uint64_t countAndFlagsBits = swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_100254634(countAndFlagsBits, (unint64_t)object, &v44._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v38 + 1sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v45 = sub_100254634(v2, (unint64_t)v21, &v44._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "ensureSystemUIState - not ready.\n(%s) <- printSystemUIFlags,\n(%s) <- printB332Flags", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_100654330();
  swift_allocError();
  *uint64_t v43 = 1;
  swift_willThrow();
}

void sub_10062EBC0()
{
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  if (*(unsigned char *)(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) == 1)
  {
    uint64_t v2 = v0;
    uint64_t v27 = 1664;
    swift_retain();
    v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v3);
    swift_bridgeObjectRelease();
    uint64_t v4 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v5 = sub_10059634C(&v27, v4);
    swift_endAccess();
    if (v5)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      sub_10000B47C(v6, (uint64_t)qword_10097C7F0);
      char v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "Waiting for view service", v9, 2u);
        swift_slowDealloc();
      }
      swift_release();
    }
    else
    {
      swift_release();
    }
    uint64_t v18 = *(void *)(v2 + v1);
    int v19 = *(unsigned __int8 *)(v18
                             + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_remoteHandleActivated);
    if (v19 == 2) {
      goto LABEL_19;
    }
    if ((v19 & 1) == 0) {
      goto LABEL_21;
    }
    int v20 = *(unsigned __int8 *)(v18
                             + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceXPCConnectionEstablished);
    if (v20 == 2)
    {
LABEL_19:
      char v21 = 1;
LABEL_22:
      sub_100654330();
      swift_allocError();
      *uint64_t v22 = v21;
      swift_willThrow();
      return;
    }
    if ((v20 & 1) == 0)
    {
LABEL_21:
      char v21 = 3;
      goto LABEL_22;
    }
    uint64_t v27 = 1672;
    swift_retain();
    v23._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v23);
    swift_bridgeObjectRelease();
    uint64_t v24 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v25 = sub_10059634C(&v27, v24);
    swift_endAccess();
    if (v25)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v26 = type metadata accessor for Logger();
      sub_10000B47C(v26, (uint64_t)qword_10097C7F0);
      uint64_t v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v14, v15)) {
        goto LABEL_14;
      }
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      Swift::String v17 = "View service up and XPC'd into daemon.";
LABEL_13:
      _os_log_impl((void *)&_mh_execute_header, v14, v15, v17, v16, 2u);
      swift_slowDealloc();
LABEL_14:
      swift_release();

      return;
    }
  }
  else
  {
    uint64_t v27 = 1660;
    swift_retain();
    v10._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v10);
    swift_bridgeObjectRelease();
    uint64_t v11 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v12 = sub_10059634C(&v27, v11);
    swift_endAccess();
    if (v12)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      sub_10000B47C(v13, (uint64_t)qword_10097C7F0);
      uint64_t v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v14, v15)) {
        goto LABEL_14;
      }
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      Swift::String v17 = "ignore ensureViewServiceStarted, UI updates disabled for current session state";
      goto LABEL_13;
    }
  }
  swift_release();
}

void sub_10062F09C(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(*(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) == 1)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10000B47C(v4, (uint64_t)qword_10097C7F0);
    char v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 67109378;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v7 + 8) = 2080;
      unint64_t v8 = sub_10063CF60(a2);
      sub_100254634(v8, v9, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "showPairingStarted. willTransitionToEducation: %{BOOL}d, deviceType: %s", (uint8_t *)v7, 0x12u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v14 = Strong;
      sub_10061E12C(v14, 1);
      aBlock[4] = (uint64_t)sub_10063D09C;
      aBlock[5] = 0;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100444120;
      uint64_t aBlock[3] = (uint64_t)&unk_1008E2960;
      os_log_type_t v15 = _Block_copy(aBlock);
      id v16 = [v14 remoteObjectProxyWithErrorHandler:v15];
      _Block_release(v15);
      [v16 setDeviceType:a2];
      [(id)swift_unknownObjectRetain() showPairingStarted];
      swift_unknownObjectRelease_n();
    }
  }
  else
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000B47C(v10, (uint64_t)qword_10097C7F0);
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v11))
    {
      char v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v11, "ignore showPairingStarted, UI updates disabled for current session state", v12, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_10062F450()
{
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  if (*(unsigned char *)(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) == 1)
  {
    uint64_t v2 = v0;
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000B47C(v3, (uint64_t)qword_10097C7F0);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      os_log_type_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "showPairingSuccess", v6, 2u);
      swift_slowDealloc();
    }

    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      unint64_t v8 = Strong;
      sub_10061E12C(Strong, 1);
      aBlock[4] = sub_10063D0A8;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100444120;
      uint64_t aBlock[3] = &unk_1008E29B0;
      unint64_t v9 = _Block_copy(aBlock);
      id v10 = [v8 remoteObjectProxyWithErrorHandler:v9];
      _Block_release(v9);
      swift_retain();
      LOBYTE(v9) = sub_10056ECE8();
      swift_release();
      if (v9) {
        [v10 setShouldShowWhatsNew:1];
      }
      uint64_t v11 = *(void *)(v2 + v1) + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
      if (*(unsigned char *)(v11 + 8))
      {
        char v12 = Logger.logObject.getter();
        os_log_type_t v13 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v12, v13))
        {
          id v14 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v14 = 0;
          _os_log_impl((void *)&_mh_execute_header, v12, v13, "No device type is set in showPairingSuccess! Falling back to B222", v14, 2u);
          swift_slowDealloc();
        }

        uint64_t v15 = 2;
      }
      else
      {
        uint64_t v15 = *(void *)v11;
      }
      [v10 setDeviceType:v15];
      [v10 showPairingSuccess];
      int v19 = *(void **)(*(void *)(v2 + v1) + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults);
      swift_retain();
      if (sub_10056EBEC())
      {
        NSString v20 = String._bridgeToObjectiveC()();
        unsigned __int8 v21 = [v19 BOOLForKey:v20];
        swift_release();

        if ((v21 & 1) == 0)
        {
          uint64_t v22 = *(void *)(v2 + v1) + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
          if ((*(unsigned char *)(v22 + 8) & 1) == 0)
          {
            unint64_t v23 = *(void *)v22;
            if (v23 <= 4 && ((1 << v23) & 0x1A) != 0)
            {
              id v24 = [self standardUserDefaults];
              sub_10056F5BC(1);
            }
          }
        }

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
        swift_release();
      }
    }
  }
  else
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10000B47C(v16, (uint64_t)qword_10097C7F0);
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v17, "ignore showPairingSuccess, UI updates disabled for current session state", v18, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_10062F8E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  os_log_type_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v7 = *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState];
  if (*(unsigned char *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete) == 1
    && (*(unsigned char *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didCleanup) & 1) == 0)
  {
    *(unsigned char *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didCleanup) = 1;
    uint64_t v8 = *(void *)&v1[v6] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
    if ((*(unsigned char *)(v8 + 8) & 1) != 0 || *(void *)v8 != 2)
    {
      unint64_t v9 = self;
      id v10 = [v9 standardUserDefaults];
      NSString v11 = String._bridgeToObjectiveC()();
      id v12 = [v10 stringForKey:v11];

      if (v12)
      {
        id v13 = [v9 standardUserDefaults];
        [v13 setURL:0 forKey:v12];
      }
      id v14 = *(void **)(*(void *)&v1[v6]
                     + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
      if (v14)
      {
        id v15 = [v14 identifier];
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v16 = UUID.uuidString.getter();
        unint64_t v18 = v17;
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        id v19 = [v9 standardUserDefaults];
        uint64_t v41 = v16;
        NSString v20 = String._bridgeToObjectiveC()();
        NSString v21 = String._bridgeToObjectiveC()();
        [v19 setObject:v20 forKey:v21];

        id v22 = [v9 standardUserDefaults];
        if (*(void *)(*(void *)&v1[v6]
                       + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_babyHash
                       + 8))
        {
          swift_bridgeObjectRetain();
          NSString v23 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        else
        {
          NSString v23 = 0;
        }
        NSString v24 = String._bridgeToObjectiveC()();
        [v22 setObject:v23 forKey:v24];

        swift_unknownObjectRelease();
        if (qword_10096A0B0 != -1) {
          swift_once();
        }
        uint64_t v25 = type metadata accessor for Logger();
        sub_10000B47C(v25, (uint64_t)qword_10097C7F0);
        uint64_t v26 = v1;
        swift_bridgeObjectRetain();
        uint64_t v27 = Logger.logObject.getter();
        int v28 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v27, (os_log_type_t)v28))
        {
          int v40 = v28;
          uint64_t v29 = swift_slowAlloc();
          uint64_t v39 = swift_slowAlloc();
          uint64_t v44 = v39;
          *(_DWORD *)uint64_t v29 = 136315394;
          uint64_t v30 = (uint64_t *)(*(void *)&v1[v6]
                          + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_babyHash);
          if (v30[1])
          {
            uint64_t v31 = *v30;
            unint64_t v32 = v30[1];
          }
          else
          {
            uint64_t v42 = 0;
            unint64_t v43 = 0xE000000000000000;
            _StringGuts.grow(_:)(17);
            swift_bridgeObjectRelease();
            unint64_t v32 = 0x80000001007B7770;
            uint64_t v31 = 0xD000000000000015;
          }
          swift_bridgeObjectRetain();
          uint64_t v42 = sub_100254634(v31, v32, &v44);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v29 + 1sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v42 = sub_100254634(v41, v18, &v44);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v40, "setHash: %s, forKey: %s", (uint8_t *)v29, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
      }
    }
    sub_10062A0A8();
    id v33 = objc_retain(*(id *)(*(void *)&v1[v6]
                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults));
    NSString v34 = String._bridgeToObjectiveC()();
    [v33 removeObjectForKey:v34];

    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    sub_10000B47C(v35, (uint64_t)qword_10097C7F0);
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "ensureCleanedUp!!!", v38, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_10062FF48()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v20 = 1216;
  swift_retain();
  v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v5 = sub_10059634C(&v20, v4);
  swift_endAccess();
  if (v5)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_10097C7F0);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      unint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "ensurePairingAgentDeallocated called", v9, 2u);
      swift_slowDealloc();
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
  if (*(unsigned char *)(*(void *)(v1 + v2)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_hidServiceDiscovered) == 1)
  {
    id v10 = [objc_allocWithZone((Class)CBCentralManager) initWithDelegate:v1 queue:*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q)];
    NSString v11 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central);
    *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central) = v10;

    uint64_t v20 = 1221;
    swift_retain();
    v12._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    uint64_t v13 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v14 = sub_10059634C(&v20, v13);
    swift_endAccess();
    if (v14)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      sub_10000B47C(v15, (uint64_t)qword_10097C7F0);
      uint64_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        unint64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v18 = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "ensurePairingAgentDeallocated completed", v18, 2u);
        swift_slowDealloc();
      }
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    sub_100654330();
    swift_allocError();
    *id v19 = 1;
    swift_willThrow();
  }
}

void sub_100630300(void *a1)
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097C7F0);
  Swift::String v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    char v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "run() once", v5, 2u);
    swift_slowDealloc();
  }

  id v19 = a1;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v18 = v7;
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 67110144;
    uint64_t v9 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
    id v10 = *(void **)(*(void *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState]
                   + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults);
    swift_retain();
    NSString v11 = String._bridgeToObjectiveC()();
    [v10 BOOLForKey:v11];

    swift_release();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v8 + 8) = 1024;
    swift_retain();
    sub_10056ECE8();

    swift_release();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v8 + 14) = 1024;
    id v12 = objc_retain(*(id *)(*(void *)&v19[v9]
                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults));
    NSString v13 = String._bridgeToObjectiveC()();
    LODWORD(v1sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = [v12 BOOLForKey:v13];

    if v10 && (sub_10056EE1C())
    {
      NSString v14 = String._bridgeToObjectiveC()();
      [v12 BOOLForKey:v14];
    }
    else
    {
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v8 + 2sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = 1024;
    id v15 = objc_retain(*(id *)(*(void *)&v19[v9]
                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults));
    NSString v16 = String._bridgeToObjectiveC()();
    [v15 BOOLForKey:v16];

    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 26) = 1024;
    id v17 = objc_retain(*(id *)(*(void *)&v19[v9]
                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults));
    sub_10056EE1C();

    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v6, v18, "--B322 Begin run Info--\nneedsInitialEducationUI:%{BOOL}d\nneedsWhatsNewUI:%{BOOL}d\nneedsWhatsNewForKeyboardLocale:%{BOOL}d\nhasShownPencilTextInputEducation:%{BOOL}d\nSupportedTextInputLocaleExists:%{BOOL}d", (uint8_t *)v8, 0x20u);
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_1006307D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v19 = 1226;
  swift_retain();
  v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v5 = sub_10059634C(&v19, v4);
  swift_endAccess();
  if (v5)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_10097C7F0);
    os_log_type_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "ensureAttached called", v9, 2u);
      swift_slowDealloc();
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = *(void *)(v1 + v2);
  if (*(void *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID + 8)
    && *(void *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID + 8) >> 60 != 15)
  {
    uint64_t v19 = 1228;
    swift_retain();
    v12._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    uint64_t v13 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v14 = sub_10059634C(&v19, v13);
    swift_endAccess();
    if (v14)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      sub_10000B47C(v15, (uint64_t)qword_10097C7F0);
      NSString v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        os_log_type_t v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v18 = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "ensureAttached completed", v18, 2u);
        swift_slowDealloc();
      }
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    sub_100654330();
    swift_allocError();
    *NSString v11 = 1;
    swift_willThrow();
  }
}

void sub_100630B64(void *a1)
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097C7F0);
  NSString v11 = a1;
  Swift::String v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    char v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)char v5 = 67109120;
    uint64_t v6 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
    os_log_type_t v7 = *(void **)(*(void *)&v11[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState]
                  + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults);
    swift_retain();
    NSString v8 = String._bridgeToObjectiveC()();
    LOBYTE(v7) = [v7 BOOLForKey:v8];
    swift_release();

    if (v7)
    {
    }
    else
    {
      id v9 = objc_retain(*(id *)(*(void *)&v11[v6]
                             + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults));
      NSString v10 = String._bridgeToObjectiveC()();
      [v9 BOOLForKey:v10];
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "First pair?: %{BOOL}d", v5, 8u);
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_100630DC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central;
  if ([*(id *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central] state] == (id)5)
  {
    uint64_t v16 = 1713;
    swift_retain();
    v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v3);
    swift_bridgeObjectRelease();
    uint64_t v4 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v5 = sub_10059634C(&v16, v4);
    swift_endAccess();
    if (v5)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      sub_10000B47C(v6, (uint64_t)qword_10097C7F0);
      os_log_type_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v7, v8))
      {
        id v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "ensureBTOn completed", v9, 2u);
        swift_slowDealloc();
      }
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10000B47C(v10, (uint64_t)qword_10097C7F0);
    NSString v11 = v0;
    Swift::String v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      char v14 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)char v14 = 134217984;
      [*(id *)&v1[v2] state];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v12, v13, "ensureBTOn - central.state(%ld) != .poweredOn", v14, 0xCu);
      swift_slowDealloc();
    }
    else
    {
    }
    sub_100654330();
    swift_allocError();
    *uint64_t v15 = 1;
    swift_willThrow();
  }
}

void sub_1006310EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v21 = 1739;
  swift_retain();
  v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v5 = sub_10059634C(&v21, v4);
  swift_endAccess();
  if (v5)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_10097C7F0);
    os_log_type_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "ensureUnlocked called", v9, 2u);
      swift_slowDealloc();
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor;
  if ([*(id *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor) systemLockState] == 1|| objc_msgSend(*(id *)(v1 + v10), "systemLockState") == 4)
  {
    uint64_t v21 = 1750;
    swift_retain();
    v11._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v11);
    swift_bridgeObjectRelease();
    uint64_t v12 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v13 = sub_10059634C(&v21, v12);
    swift_endAccess();
    if (v13)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      sub_10000B47C(v14, (uint64_t)qword_10097C7F0);
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "ensureUnlocked completed", v17, 2u);
        swift_slowDealloc();
      }
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    uint64_t v18 = *(void *)(v1 + v2);
    uint64_t v19 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needsUnlockPrompt;
    if (*(unsigned char *)(v18 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needsUnlockPrompt) == 1)
    {
      sub_10063632C();
      sub_10063CC8C();
      uint64_t v18 = *(void *)(v1 + v2);
      uint64_t v19 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needsUnlockPrompt;
    }
    *(unsigned char *)(v18 + v19) = 0;
    sub_100654330();
    swift_allocError();
    *uint64_t v20 = 1;
    swift_willThrow();
  }
}

void sub_1006314B0()
{
  if (*(unsigned char *)(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) == 1)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_10000B47C(v1, (uint64_t)qword_10097C7F0);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "dismissUnlockPrompt", v4, 2u);
      swift_slowDealloc();
    }

    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v6 = Strong;
      sub_10061E12C(Strong, 1);
      aBlock[4] = sub_1006414AC;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100444120;
      uint64_t aBlock[3] = &unk_1008E2C50;
      os_log_type_t v7 = _Block_copy(aBlock);
      id v8 = [v6 remoteObjectProxyWithErrorHandler:v7];
      _Block_release(v7);
      [v8 dismissUnlockPrompt];

      swift_unknownObjectRelease();
    }
  }
  else
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000B47C(v9, (uint64_t)qword_10097C7F0);
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v10))
    {
      Swift::String v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v10, "ignore dismissUnlockPrompt, UI updates disabled for current session state", v11, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_100631750(char a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v6 = *(void *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  os_log_type_t v7 = &unk_100994000;
  uint64_t v8 = OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairPrompt;
  if ((*(unsigned char *)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairPrompt) & 1) == 0)
  {
    uint64_t v9 = v4;
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000B47C(v13, (uint64_t)qword_10097C7F0);
    swift_bridgeObjectRetain_n();
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      char v26 = a1;
      uint64_t v16 = swift_slowAlloc();
      v27[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 67109634;
      LODWORD(v28) = v26 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v16 + 8) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_100254634(a3, a4, v27);
      os_log_type_t v7 = (void *)&unk_100994000;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v16 + 18) = 2048;
      uint64_t v28 = a2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "ensurePairingConsented - inViewService: %{BOOL}d | %s:%ld", (uint8_t *)v16, 0x1Cu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a1 = v26;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_10063C978(a1 & 1);
    uint64_t v6 = *(void *)(v9 + v5);
    uint64_t v8 = v7[328];
  }
  *(unsigned char *)(v6 + v8) = 1;
  if (*(unsigned char *)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_pairConsented) == 1)
  {
    v27[0] = 0xD000000000000057;
    v27[1] = 0x80000001007C52B0;
    uint64_t v28 = 1623;
    swift_retain();
    v17._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    uint64_t v18 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v19 = sub_10059634C(&v28, v18);
    swift_endAccess();
    if (v19)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      sub_10000B47C(v20, (uint64_t)qword_10097C7F0);
      uint64_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v21, v22))
      {
        NSString v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)NSString v23 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "ensurePairingConsented completed", v23, 2u);
        swift_slowDealloc();
      }
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    sub_100654330();
    swift_allocError();
    *NSString v24 = 1;
    swift_willThrow();
  }
}

void sub_100631B68(char a1)
{
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  if (*(unsigned char *)(*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) == 1)
  {
    uint64_t v3 = v1;
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000B47C(v5, (uint64_t)qword_10097C7F0);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "showChargingStatus", v8, 2u);
      swift_slowDealloc();
    }

    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      os_log_type_t v10 = Strong;
      if (a1 != 2) {
        *(unsigned char *)(*(void *)(v3 + v2) + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_hideBattery) = a1 & 1;
      }
      sub_10061E12C(Strong, 1);
      aBlock[4] = sub_10063D0C0;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100444120;
      uint64_t aBlock[3] = &unk_1008E29D8;
      Swift::String v11 = _Block_copy(aBlock);
      id v12 = [v10 remoteObjectProxyWithErrorHandler:v11];
      _Block_release(v11);
      [v12 showChargingStatus];

      swift_unknownObjectRelease();
    }
  }
  else
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000B47C(v13, (uint64_t)qword_10097C7F0);
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v14))
    {
      os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v14, "ignore showChargingStatus, UI updates disabled for current session state", v15, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_100631E3C()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor) bluetoothAddressData];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;

    sub_100250CC4(v3, v5);
    uint64_t v18 = 1723;
    swift_retain();
    v6._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
    uint64_t v7 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v8 = sub_10059634C(&v18, v7);
    swift_endAccess();
    if (v8)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for Logger();
      sub_10000B47C(v9, (uint64_t)qword_10097C7F0);
      os_log_type_t v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v10, v11))
      {
        id v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "ensureMyBTAddressAvailable completed", v12, 2u);
        swift_slowDealloc();
      }
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000B47C(v13, (uint64_t)qword_10097C7F0);
    os_log_type_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "ensureMyBTAddressAvailable - bluetoothAddressData = nil", v16, 2u);
      swift_slowDealloc();
    }

    sub_100654330();
    swift_allocError();
    *Swift::String v17 = 1;
    swift_willThrow();
  }
}

void sub_100632120()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  if (*(void *)(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sentBluetoothAddress
                 + 8) >> 60 == 15)
  {
    id v7 = [*(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor) bluetoothAddressData];
    if (v7)
    {
      char v8 = v7;
      uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v11 = v10;
    }
    else
    {
      uint64_t v9 = 0;
      unint64_t v11 = 0xF000000000000000;
    }
    uint64_t v50 = v9;
    unint64_t v51 = v11;
    sub_10000A844(&qword_10096B260);
    Optional.unwrap(_:file:line:)();
    sub_100250CB0(v9, v11);
    id v12 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_bleProvider);
    if (v12)
    {
      if (*(void *)(*(void *)(v1 + v6)
                     + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID
                     + 8))
      {
        uint64_t v47 = v2;
        uint64_t v48 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_bleProvider;
        unint64_t v46 = v5;
        uint64_t v14 = v52;
        unint64_t v13 = v53;
        id v15 = v12;
        swift_bridgeObjectRetain();
        NSString v16 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        uint64_t v17 = *(void *)(v1 + v6) + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID;
        unint64_t v18 = *(void *)(v17 + 8);
        if (v18 >> 60 != 15)
        {
          uint64_t v19 = *(void *)v17;
          sub_10025ADCC(*(void *)v17, *(void *)(v17 + 8));
          Class isa = Data._bridgeToObjectiveC()().super.isa;
          sub_100250CB0(v19, v18);
          [v15 startBLEUpdates:v16 blePairingUUID:isa pairType:1 bRadioUpdatesOn:1 bPairInfoUpdatesOn:1];

          *(unsigned char *)(*(void *)(v1 + v6)
                   + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needToStopBLEUpdates) = 1;
          if (qword_10096A0B0 != -1) {
            swift_once();
          }
          uint64_t v21 = type metadata accessor for Logger();
          sub_10000B47C(v21, (uint64_t)qword_10097C7F0);
          unint64_t v22 = v13;
          sub_10025ADCC(v14, v13);
          sub_10025ADCC(v14, v13);
          NSString v23 = Logger.logObject.getter();
          os_log_type_t v24 = static os_log_type_t.default.getter();
          int v25 = v24;
          if (os_log_type_enabled(v23, v24))
          {
            int v45 = v25;
            char v26 = (uint8_t *)swift_slowAlloc();
            uint64_t v44 = swift_slowAlloc();
            uint64_t v49 = v44;
            uint64_t v50 = v14;
            *(_DWORD *)char v26 = 136315138;
            uint64_t v42 = v26 + 4;
            unint64_t v43 = v26;
            uint64_t v52 = 0;
            unint64_t v53 = 0xE000000000000000;
            unint64_t v51 = v22;
            uint64_t v27 = v3;
            uint64_t v28 = *(void (**)(char *, void, uint64_t))(v3 + 104);
            uint64_t v29 = v46;
            uint64_t v30 = v47;
            v28(v46, enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:), v47);
            sub_1003CEFBC();
            DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)();
            (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v30);
            uint64_t v52 = sub_100254634(v52, v53, &v49);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_100250CC4(v14, v22);
            sub_100250CC4(v14, v22);
            _os_log_impl((void *)&_mh_execute_header, v23, (os_log_type_t)v45, "ensureMyAddressSent - sent myAddress: %s", v43, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            sub_100250CC4(v14, v13);
            sub_100250CC4(v14, v13);
          }

          uint64_t v31 = *(void **)(v1 + v48);
          if (v31)
          {
            if (*(void *)(*(void *)(v1 + v6)
                           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID
                           + 8))
            {
              id v32 = v31;
              swift_bridgeObjectRetain();
              NSString v33 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              uint64_t v34 = *(void *)(v1 + v6)
                  + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID;
              unint64_t v35 = *(void *)(v34 + 8);
              if (v35 >> 60 != 15)
              {
                uint64_t v36 = *(void *)v34;
                sub_10025ADCC(*(void *)v34, *(void *)(v34 + 8));
                Class v37 = Data._bridgeToObjectiveC()().super.isa;
                sub_100250CB0(v36, v35);
                Class v38 = Data._bridgeToObjectiveC()().super.isa;
                [v32 deviceUpdatePairingInfo:v33 blePairingUUID:v37 pairType:1 pairInfo:v38];

                uint64_t v39 = (uint64_t *)(*(void *)(v1 + v6)
                                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sentBluetoothAddress);
                uint64_t v40 = *v39;
                unint64_t v41 = v39[1];
                *uint64_t v39 = v14;
                v39[1] = v22;
                sub_100250CB0(v40, v41);
                return;
              }
LABEL_23:
              __break(1u);
              return;
            }
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
}

uint64_t sub_1006326B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v23 = 1728;
  swift_retain();
  v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v5 = sub_10059634C(&v23, v4);
  swift_endAccess();
  if (v5)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_10097C7F0);
    id v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    uint64_t v4 = v8;
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, (os_log_type_t)v4, "ensureAllDataFromB332 called", v9, 2u);
      swift_slowDealloc();
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = *(void *)(v1 + v2);
  unint64_t v11 = *(void *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_b332BTAddr + 8);
  if (v11 >> 60 == 15
    || (unint64_t v12 = *(void *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_oobd + 8),
        v12 >> 60 == 15))
  {
    sub_100654330();
    swift_allocError();
    *unint64_t v13 = 1;
    swift_willThrow();
  }
  else
  {
    uint64_t v4 = *(void *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_b332BTAddr);
    uint64_t v15 = *(void *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_oobd);
    uint64_t v23 = 1733;
    sub_100278C78(v4, v11);
    sub_100278C78(v15, v12);
    swift_retain();
    v16._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    uint64_t v17 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v18 = sub_10059634C(&v23, v17);
    swift_endAccess();
    if (v18)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      sub_10000B47C(v19, (uint64_t)qword_10097C7F0);
      uint64_t v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v20, v21))
      {
        unint64_t v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v22 = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "ensureAllDataFromB332 completed", v22, 2u);
        swift_slowDealloc();
      }
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
  return v4;
}

void sub_100632A80(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10000B47C(v8, (uint64_t)qword_10097C7F0);
  sub_10025ADCC(a1, a2);
  sub_10025ADCC(a3, a4);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 134217984;
    unint64_t v11 = v10;
    switch(a4 >> 62)
    {
      case 1uLL:
        if (!__OFSUB__(HIDWORD(a3), a3)) {
          goto LABEL_11;
        }
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x100632C7CLL);
      case 2uLL:
        if (!__OFSUB__(*(void *)(a3 + 24), *(void *)(a3 + 16))) {
          goto LABEL_11;
        }
        goto LABEL_13;
      default:
LABEL_11:
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_100250CC4(a1, a2);
        sub_100250CC4(a3, a4);
        _os_log_impl((void *)&_mh_execute_header, oslog, v9, "COUNT: %ld", v11, 0xCu);
        swift_slowDealloc();

        break;
    }
  }
  else
  {
    sub_100250CC4(a1, a2);
    sub_100250CC4(a3, a4);
  }
}

id sub_100632C8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v50 = 1450;
  swift_retain();
  v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v5 = sub_10059634C(&v50, v4);
  swift_endAccess();
  if (v5)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_10097C7F0);
    id v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "ensureDiscovered called", v9, 2u);
      swift_slowDealloc();
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = *(void *)&v1[v2];
  unint64_t v11 = *(void **)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  if (!v11)
  {
    sub_100654330();
    swift_allocError();
    *unint64_t v13 = 1;
    swift_willThrow();
    return v11;
  }
  if (*(unsigned char *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_ranHandleDiscover)) {
    return v11;
  }
  *(unsigned char *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_ranHandleDiscover) = 1;
  if (*(void *)(*(void *)&v1[v2]
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilBtTag
                 + 8))
  {
    id v14 = v11;
    swift_bridgeObjectRetain();
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v16 = v11;
    NSString v15 = 0;
  }
  [v11 tag:v15];

  NSString v17 = String._bridgeToObjectiveC()();
  [v11 tag:v17];

  uint64_t v18 = *(void *)&v1[v2];
  if ((*(unsigned char *)(v18 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType + 8) & 1) != 0
    || (unint64_t)(*(void *)(v18 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType)
                        - 4) <= 0xFFFFFFFFFFFFFFFCLL)
  {
    NSString v19 = String._bridgeToObjectiveC()();
    [v11 tag:v19];

    uint64_t v18 = *(void *)&v1[v2];
  }
  uint64_t v20 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central;
  os_log_type_t v21 = *(void **)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central];
  swift_retain();
  id v22 = [v21 sharedPairingAgent];
  if (!v22) {
    goto LABEL_49;
  }
  uint64_t v23 = v22;
  uint64_t v49 = v20;
  unsigned __int8 v24 = [v22 isPeerPaired:v11];

  *(unsigned char *)(v18 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_isPaired) = v24;
  swift_release();
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  sub_10000B47C(v25, (uint64_t)qword_10097C7F0);
  char v26 = v1;
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136315138;
    int v30 = *(unsigned __int8 *)(*(void *)&v1[v2]
                             + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_isPaired);
    if (v30 == 2)
    {
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v31 = 0x80000001007C5500;
      uint64_t v32 = 0xD000000000000013;
    }
    else
    {
      if (v30) {
        uint64_t v32 = 1702195828;
      }
      else {
        uint64_t v32 = 0x65736C6166;
      }
      if (v30) {
        unint64_t v31 = 0xE400000000000000;
      }
      else {
        unint64_t v31 = 0xE500000000000000;
      }
    }
    sub_100254634(v32, v31, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "ensureDiscovered completed. isPaired? %s", v29, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_1006314B0();
  uint64_t v33 = *(void *)&v1[v2];
  unint64_t v34 = *(void *)(v33 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_oobd + 8);
  if (v34 >> 60 == 15) {
    goto LABEL_50;
  }
  uint64_t v35 = *(void *)(v33 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_oobd);
  switch(v34 >> 62)
  {
    case 1uLL:
      LODWORD(v36) = HIDWORD(v35) - v35;
      if (__OFSUB__(HIDWORD(v35), v35))
      {
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      uint64_t v36 = (int)v36;
LABEL_38:
      if (v36 != 32) {
        return v11;
      }
      int v41 = *(unsigned __int8 *)(v33 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_isPaired);
      if (v41 == 2) {
        goto LABEL_51;
      }
      if ((v41 & 1) == 0)
      {
        uint64_t v42 = Logger.logObject.getter();
        os_log_type_t v43 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v42, v43))
        {
          uint64_t v44 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v44 = 0;
          _os_log_impl((void *)&_mh_execute_header, v42, v43, "Enabling OOBP for B332", v44, 2u);
          swift_slowDealloc();
        }

        id v45 = [*(id *)&v1[v49] sharedPairingAgent];
        if (v45)
        {
          unint64_t v46 = v45;
          [v45 setOOBPairingEnabled:0 forPeer:v11];

          id v47 = [*(id *)&v1[v49] sharedPairingAgent];
          if (v47)
          {
            uint64_t v48 = v47;
            [v47 setOOBPairingEnabled:1 forPeer:v11];

            return v11;
          }
LABEL_53:
          __break(1u);
          JUMPOUT(0x10063339CLL);
        }
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
      return v11;
    case 2uLL:
      uint64_t v39 = v35 + 16;
      uint64_t v38 = *(void *)(v35 + 16);
      uint64_t v37 = *(void *)(v39 + 8);
      BOOL v40 = __OFSUB__(v37, v38);
      uint64_t v36 = v37 - v38;
      if (!v40) {
        goto LABEL_38;
      }
      goto LABEL_48;
    case 3uLL:
      return v11;
    default:
      uint64_t v36 = BYTE6(v34);
      goto LABEL_38;
  }
}

void sub_1006333AC()
{
  uint64_t v87 = type metadata accessor for UUID();
  uint64_t v85 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  double v86 = (char *)v78 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  id v89 = *(id *)(*(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState]
              + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  id v7 = v89;
  sub_10000A844(&qword_10097D3B8);
  Optional.unwrap(_:file:line:)();

  os_log_type_t v8 = v88[0];
  uint64_t v9 = *(void *)&v0[v6];
  switch(*(unsigned char *)(v9 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_btCnxState))
  {
    case 1:
      if ([v88[0] state] != (id)2) {
        goto LABEL_48;
      }
      *(unsigned char *)(*(void *)&v0[v6] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_btCnxState) = 2;
      uint64_t v9 = *(void *)&v0[v6];
LABEL_9:
      if (*(void *)(v9 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilBtTag + 8))
      {
        swift_bridgeObjectRetain();
        NSString v19 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v19 = 0;
      }
      [v8 tag:v19];

      NSString v20 = String._bridgeToObjectiveC()();
      [v8 tag:v20];

      [v8 setDelegate:v0];
      [v8 discoverServices:0];
      *(unsigned char *)(*(void *)&v0[v6] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_btCnxState) = 3;
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      sub_10000B47C(v2, (uint64_t)qword_10097C7F0);
      os_log_type_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "ensureConnected completed", v23, 2u);
        swift_slowDealloc();
        unsigned __int8 v24 = v8;
        os_log_type_t v8 = v21;
      }
      else
      {
        unsigned __int8 v24 = v21;
      }

      goto LABEL_49;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_49;
    default:
      uint64_t v84 = v6;
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_10000B47C(v2, (uint64_t)qword_10097C7F0);
      unint64_t v11 = *(void (**)(char *))(v3 + 16);
      uint64_t v82 = v10;
      v11(v5);
      unint64_t v12 = v0;
      unint64_t v13 = Logger.logObject.getter();
      os_log_type_t v14 = static os_log_type_t.default.getter();
      BOOL v15 = os_log_type_enabled(v13, v14);
      uint64_t v80 = v8;
      uint64_t v81 = v0;
      if (v15)
      {
        id v16 = (uint8_t *)swift_slowAlloc();
        uint64_t v83 = (char *)swift_slowAlloc();
        v88[0] = v83;
        *(_DWORD *)id v16 = 136315138;
        uint64_t v17 = sub_10061EC34();
        if (!v18)
        {

          __break(1u);
          goto LABEL_52;
        }
        id v89 = (id)sub_100254634(v17, v18, (uint64_t *)v88);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "ensureConnected - Start connecting!!! withRandom: %s", v16, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        os_log_type_t v8 = v80;
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      }
      uint64_t v25 = v12;
      char v26 = Logger.logObject.getter();
      os_log_type_t v27 = static os_log_type_t.default.getter();
      BOOL v28 = os_log_type_enabled(v26, v27);
      uint64_t v29 = v84;
      uint64_t v83 = v25;
      if (v28)
      {
        int v30 = (uint8_t *)swift_slowAlloc();
        id v89 = (id)swift_slowAlloc();
        uint64_t v31 = *(void *)&v81[v29];
        *(_DWORD *)int v30 = 136315138;
        int v32 = *(unsigned __int8 *)(v31 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_isPaired);
        if (v32 == 2)
        {
          v88[0] = 0;
          v88[1] = (id)0xE000000000000000;
          _StringGuts.grow(_:)(17);
          swift_bridgeObjectRelease();
          uint64_t v33 = 0xD000000000000013;
          unint64_t v34 = 0x80000001007C5500;
        }
        else
        {
          if (v32) {
            uint64_t v33 = 1702195828;
          }
          else {
            uint64_t v33 = 0x65736C6166;
          }
          if (v32) {
            unint64_t v34 = 0xE400000000000000;
          }
          else {
            unint64_t v34 = 0xE500000000000000;
          }
        }
        v88[0] = (id)sub_100254634(v33, v34, (uint64_t *)&v89);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        id v35 = v83;

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "is paired?: %s", v30, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v36 = v8;
      uint64_t v37 = Logger.logObject.getter();
      os_log_type_t v38 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v39 = 134217984;
        v88[0] = [v36 state];
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        _os_log_impl((void *)&_mh_execute_header, v37, v38, "connecting state: : %ld", v39, 0xCu);
        swift_slowDealloc();
      }
      else
      {

        uint64_t v37 = v36;
      }

      BOOL v40 = Logger.logObject.getter();
      os_log_type_t v41 = static os_log_type_t.default.getter();
      BOOL v42 = os_log_type_enabled(v40, v41);
      os_log_type_t v43 = v86;
      if (v42)
      {
        uint64_t v44 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v44 = 0;
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "attempting central.connect...", v44, 2u);
        swift_slowDealloc();
      }

      id v45 = v36;
      unint64_t v46 = Logger.logObject.getter();
      os_log_type_t v47 = static os_log_type_t.default.getter();
      uint64_t v48 = &selRef_forceAWDLDeviceRefresh_;
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v49 = (uint8_t *)swift_slowAlloc();
        NSString v79 = (void *)swift_slowAlloc();
        v88[0] = v79;
        *(_DWORD *)uint64_t v49 = 136315138;
        v78[1] = v49 + 4;
        id v50 = [v45 identifier];
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v51 = UUID.uuidString.getter();
        unint64_t v53 = v52;
        uint64_t v54 = (uint64_t)v43;
        uint64_t v55 = v85;
        (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v54, v87);
        id v89 = (id)sub_100254634(v51, v53, (uint64_t *)v88);
        uint64_t v48 = &selRef_forceAWDLDeviceRefresh_;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        uint64_t v29 = v84;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "UUID: %s", v49, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v54 = (uint64_t)v43;
        uint64_t v55 = v85;
      }
      uint64_t v56 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central;
      uint64_t v57 = v83;
      [*(id *)&v83[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central] connectPeripheral:v45 options:0];
      id v58 = [v45 v48[378]];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v59 = (id *)&v57[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_peripheralsIConnectedTo];
      swift_beginAccess();
      NSString v60 = v45;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      id v89 = *v59;
      *uint64_t v59 = (id)0x8000000000000000;
      sub_100594990((uint64_t)v60, v54, isUniquelyReferenced_nonNull_native);
      *uint64_t v59 = v89;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v87);
      swift_endAccess();
      [v57 stopScanning];
      uint64_t v62 = v81;
      id v63 = *(void **)(*(void *)&v81[v29] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults);
      swift_retain();
      NSString v64 = String._bridgeToObjectiveC()();
      uint64_t v65 = v29;
      LOBYTE(v63) = [v63 BOOLForKey:v64];
      swift_release();

      if ((v63 & 1) == 0)
      {
        id v66 = objc_retain(*(id *)(*(void *)&v62[v29]
                                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults));
        NSString v67 = String._bridgeToObjectiveC()();
        unsigned __int8 v68 = [v66 BOOLForKey:v67];

        if ((v68 & 1) == 0)
        {
          id v69 = [*(id *)&v83[v56] sharedPairingAgent];
          if (v69)
          {
            unint64_t v70 = v69;
            sub_10062AC20();
            unint64_t v72 = v71;

            if (v72 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v73 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v73 = *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            swift_bridgeObjectRelease();
            uint64_t v65 = v84;
            if (v73)
            {
              uint64_t v74 = Logger.logObject.getter();
              os_log_type_t v75 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v74, v75))
              {
                uint64_t v76 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v76 = 0;
                _os_log_impl((void *)&_mh_execute_header, v74, v75, "Woah! isFirstEverPair but !pairedB332s().isEmpty!", v76, 2u);
                swift_slowDealloc();
              }

              uint64_t v65 = v84;
            }
            goto LABEL_47;
          }
LABEL_52:
          __break(1u);
          JUMPOUT(0x100634060);
        }
      }
LABEL_47:
      *(unsigned char *)(*(void *)&v62[v65] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_btCnxState) = 1;
      os_log_type_t v8 = v80;
LABEL_48:
      sub_100654330();
      swift_allocError();
      *uint64_t v77 = 1;
      swift_willThrow();
LABEL_49:

      return;
  }
}

void sub_100634070()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  if ((*(unsigned char *)(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_ranEnsurePairingStarted) & 1) == 0)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_10097C7F0);
    id v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "ensurePairingStarted called", v9, 2u);
      swift_slowDealloc();
    }

    uint64_t v10 = *(void *)(v1 + v5);
    *(unsigned char *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_ranEnsurePairingStarted) = 1;
    unint64_t v11 = *(void **)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
    if (v11)
    {
      unint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central);
      id v13 = v11;
      id v14 = [v12 sharedPairingAgent];
      if (v14)
      {
        BOOL v15 = v14;
        [v14 pairPeer:v13];

        id v16 = [v13 identifier];
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v17 = type metadata accessor for UUID();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v4, 0, 1, v17);
        uint64_t v18 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastB332WeWantedToPair;
        swift_beginAccess();
        sub_10026B410((uint64_t)v4, v18, &qword_100974EA0);
        swift_endAccess();

        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
LABEL_9:
  v26[1] = 0xD000000000000057;
  void v26[2] = 0x80000001007C52B0;
  v26[0] = 1532;
  swift_retain();
  v19._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v21 = sub_10059634C(v26, v20);
  swift_endAccess();
  if (v21)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_10000B47C(v22, (uint64_t)qword_10097C7F0);
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "ensurePairingStarted completed", v25, 2u);
      swift_slowDealloc();
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
}

void sub_100634454()
{
  uint64_t v1 = v0;
  uint64_t v153 = type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat();
  uint64_t v152 = *(void *)(v153 - 8);
  __chkstk_darwin(v153);
  uint64_t v151 = (char *)&v144 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = type metadata accessor for UUID();
  uint64_t v158 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  uint64_t v154 = (char *)&v144 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000A844(&qword_10096C4F0);
  __chkstk_darwin(v4);
  unint64_t v156 = (char **)((char *)&v144 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_10000A844(&qword_100974EA0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  unint64_t v155 = (unint64_t)&v144 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v144 - v10;
  __chkstk_darwin(v9);
  id v13 = (char *)&v144 - v12;
  uint64_t v14 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  unint64_t v160 = (unint64_t)"<no found.batteryInfo>";
  *(void *)&long long v163 = 0xD000000000000057;
  *((void *)&v163 + sub_100621BE0("ssharing.b332SetHasSeenScribbleEducation", 1) = 0x80000001007C52B0;
  *(void *)&v167[0] = 1537;
  swift_retain();
  v15._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  uint64_t v16 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v17 = sub_10059634C((uint64_t *)v167, v16);
  swift_endAccess();
  if (v17)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_10000B47C(v18, (uint64_t)qword_10097C7F0);
    Swift::String v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      char v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "ensurePairingRequestHandled called", v21, 2u);
      swift_slowDealloc();
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
  char v159 = v1;
  uint64_t v22 = *(void *)&v1[v14];
  if (*(unsigned char *)(v22 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_handledPairRequest)) {
    goto LABEL_9;
  }
  int v30 = *(void **)(v22 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_peerRequestingPairing);
  if (!v30
    || (uint64_t v31 = (uint64_t *)(v22 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_peerPairingType),
        (v31[1] & 1) != 0))
  {
    sub_100654330();
    swift_allocError();
    *int v32 = 1;
    swift_willThrow();
    return;
  }
  uint64_t v149 = *v31;
  id v150 = v30;
  id v33 = [v150 identifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v158 + 56);
  uint64_t v35 = 1;
  v34(v13, 0, 1, v157);
  uint64_t v36 = *(void **)(*(void *)&v159[v14]
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  uint64_t v148 = (uint8_t *)v30;
  if (v36)
  {
    id v37 = [v36 identifier];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v35 = 0;
  }
  uint64_t v38 = v157;
  v34(v11, v35, 1, v157);
  uint64_t v39 = v156;
  uint64_t v40 = (uint64_t)v156 + *(int *)(v4 + 48);
  sub_10024A330((uint64_t)v13, (uint64_t)v156, &qword_100974EA0);
  sub_10024A330((uint64_t)v11, v40, &qword_100974EA0);
  os_log_type_t v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v158 + 48);
  if (v41((uint64_t)v39, 1, v38) == 1)
  {
    sub_10000A7E8((uint64_t)v11, &qword_100974EA0);
    uint64_t v39 = v156;
    sub_10000A7E8((uint64_t)v13, &qword_100974EA0);
    if (v41(v40, 1, v38) == 1)
    {
      sub_10000A7E8((uint64_t)v39, &qword_100974EA0);
LABEL_34:
      *(unsigned char *)(*(void *)&v159[v14]
               + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_handledPairRequest) = 1;
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v57 = type metadata accessor for Logger();
      id v58 = (void *)sub_10000B47C(v57, (uint64_t)qword_10097C7F0);
      uint64_t v59 = Logger.logObject.getter();
      os_log_type_t v60 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v59, v60))
      {
        uint64_t v61 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v61 = 0;
        _os_log_impl((void *)&_mh_execute_header, v59, v60, "ensurePairingRequestHandled", v61, 2u);
        swift_slowDealloc();
      }

      uint64_t v158 = v14;
      uint64_t v62 = *(void *)&v159[v14] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_oobd;
      unint64_t v63 = *(void *)(v62 + 8);
      if (v63 >> 60 == 15)
      {
        __break(1u);
LABEL_89:
        __break(1u);
        goto LABEL_90;
      }
      uint64_t v64 = *(void *)v62;
      sub_100278C78(*(void *)v62, *(void *)(v62 + 8));
      sub_10025ADCC(v64, v63);
      uint64_t v65 = Logger.logObject.getter();
      os_log_type_t v66 = static os_log_type_t.default.getter();
      BOOL v67 = os_log_type_enabled(v65, v66);
      uint64_t v157 = v63 >> 62;
      if (v67)
      {
        unsigned __int8 v68 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unsigned __int8 v68 = 134217984;
        id v69 = v68;
        uint64_t v70 = 0;
        switch(v63 >> 62)
        {
          case 1uLL:
            LODWORD(v7sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = HIDWORD(v64) - v64;
            if (__OFSUB__(HIDWORD(v64), v64)) {
              goto LABEL_84;
            }
            uint64_t v70 = (int)v70;
LABEL_49:
            *(void *)&long long v163 = v70;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            sub_100250CB0(v64, v63);
            _os_log_impl((void *)&_mh_execute_header, v65, v66, "pairData length: %ld", v69, 0xCu);
            swift_slowDealloc();
            break;
          case 2uLL:
            uint64_t v73 = *(void *)(v64 + 16);
            uint64_t v72 = *(void *)(v64 + 24);
            BOOL v74 = __OFSUB__(v72, v73);
            uint64_t v70 = v72 - v73;
            if (!v74) {
              goto LABEL_49;
            }
            goto LABEL_85;
          case 3uLL:
            goto LABEL_49;
          default:
            uint64_t v70 = BYTE6(v63);
            goto LABEL_49;
        }
      }
      else
      {
        sub_100250CB0(v64, v63);
      }

      os_log_type_t v75 = self;
      uint64_t v76 = &selRef_shouldBlockPresentation;
      if ([v75 enableOOBPCredentialLogging])
      {
        sub_10025ADCC(v64, v63);
        sub_10025ADCC(v64, v63);
        uint64_t v77 = Logger.logObject.getter();
        os_log_type_t v78 = static os_log_type_t.default.getter();
        int v79 = v78;
        if (os_log_type_enabled(v77, v78))
        {
          LODWORD(v155) = v79;
          uint64_t v80 = (uint8_t *)swift_slowAlloc();
          uint64_t v154 = (char *)swift_slowAlloc();
          *(void *)&long long v166 = v154;
          uint64_t v148 = v80;
          *(_DWORD *)uint64_t v80 = 136315138;
          id v147 = v80 + 4;
          *(void *)&long long v163 = 0;
          *((void *)&v163 + sub_100621BE0("ssharing.b332SetHasSeenScribbleEducation", 1) = 0xE000000000000000;
          *(void *)&v167[0] = v64;
          *((void *)&v167[0] + sub_100621BE0("ssharing.b332SetHasSeenScribbleEducation", 1) = v63;
          unint64_t v156 = v58;
          uint64_t v81 = v75;
          uint64_t v82 = v152;
          uint64_t v83 = v151;
          uint64_t v84 = v153;
          (*(void (**)(char *, void, uint64_t))(v152 + 104))(v151, enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:), v153);
          sub_1003CEFBC();
          DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)();
          uint64_t v85 = v82;
          os_log_type_t v75 = v81;
          id v58 = v156;
          (*(void (**)(char *, uint64_t))(v85 + 8))(v83, v84);
          *(void *)&long long v163 = sub_100254634(v163, *((unint64_t *)&v163 + 1), (uint64_t *)&v166);
          uint64_t v76 = &selRef_shouldBlockPresentation;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100250CB0(v64, v63);
          sub_100250CB0(v64, v63);
          _os_log_impl((void *)&_mh_execute_header, v77, (os_log_type_t)v155, "pairData: %s", v148, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_100250CB0(v64, v63);
          sub_100250CB0(v64, v63);
        }
      }
      sub_10000A844((uint64_t *)&unk_10097D2B0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10076E7A0;
      *(void *)(inited + 3sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(inited + 4sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v87;
      *(void *)(inited + 7sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = &type metadata for Data;
      *(void *)(inited + 48) = v64;
      *(void *)(inited + 56) = v63;
      sub_10025ADCC(v64, v63);
      unint64_t v88 = sub_100245A7C(inited);
      switch((int)v157)
      {
        case 1:
          LODWORD(v89) = HIDWORD(v64) - v64;
          if (!__OFSUB__(HIDWORD(v64), v64))
          {
            uint64_t v89 = (int)v89;
LABEL_60:
            if (v89 == 32)
            {
              __int16 v92 = sub_1002E5CF8(99, 0xE100000000000000);
              if ((v92 & 0x100) != 0)
              {
LABEL_90:
                __break(1u);
                goto LABEL_91;
              }
              char v93 = v92;
              unint64_t v156 = v58;
              __int16 v94 = sub_1002E5CF8(114, 0xE100000000000000);
              if ((v94 & 0x100) != 0)
              {
LABEL_91:
                __break(1u);
                goto LABEL_92;
              }
              char v95 = v94;
              *(void *)&long long v166 = v64;
              *((void *)&v166 + sub_100621BE0("ssharing.b332SetHasSeenScribbleEducation", 1) = v63;
              uint64_t v96 = sub_10000A844(&qword_10097D2C8);
              uint64_t v164 = (void *)v96;
              uint64_t v97 = sub_1002AE308(&qword_10097D2D0, &qword_10097D2C8);
              uint64_t v165 = v97;
              LOBYTE(v163) = v93;
              LOBYTE(v167[0]) = *(unsigned char *)sub_10026BB6C(&v163, v96);
              sub_10025ADCC(v64, v63);
              Data._Representation.replaceSubrange(_:with:count:)();
              sub_10024D338((uint64_t)&v163);
              uint64_t v164 = (void *)v96;
              uint64_t v165 = v97;
              LOBYTE(v163) = v95;
              LOBYTE(v167[0]) = *(unsigned char *)sub_10026BB6C(&v163, v96);
              Data._Representation.replaceSubrange(_:with:count:)();
              sub_10024D338((uint64_t)&v163);
              uint64_t v98 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v100 = v99;
              long long v101 = v166;
              uint64_t v164 = &type metadata for Data;
              long long v163 = v166;
              sub_100249444(&v163, v167);
              sub_10025ADCC(v101, *((unint64_t *)&v101 + 1));
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              unint64_t v162 = v88;
              sub_100591338(v167, v98, v100, isUniquelyReferenced_nonNull_native);
              unint64_t v88 = v162;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v103 = Logger.logObject.getter();
              os_log_type_t v104 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v103, v104))
              {
                uint64_t v105 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v105 = 0;
                _os_log_impl((void *)&_mh_execute_header, v103, v104, "Received full OOBP!", v105, 2u);
                swift_slowDealloc();
              }

              unint64_t v107 = *((void *)&v166 + 1);
              uint64_t v106 = v166;
              goto LABEL_66;
            }
            if (v157)
            {
              if (v157 == 1)
              {
                LODWORD(v108) = HIDWORD(v64) - v64;
                if (!__OFSUB__(HIDWORD(v64), v64))
                {
                  uint64_t v108 = (int)v108;
                  goto LABEL_73;
                }
                goto LABEL_86;
              }
              uint64_t v110 = *(void *)(v64 + 16);
              uint64_t v109 = *(void *)(v64 + 24);
              BOOL v74 = __OFSUB__(v109, v110);
              uint64_t v108 = v109 - v110;
              if (v74) {
                goto LABEL_87;
              }
            }
            else
            {
              uint64_t v108 = BYTE6(v63);
            }
LABEL_73:
            if (v108 == 16)
            {
              uint64_t v111 = v76;
              unint64_t v156 = v58;
              uint64_t v157 = Data._Representation.subscript.getter();
              unint64_t v155 = v112;
              uint64_t v113 = v161;
              unsigned int v114 = sub_1002C92B8(v157, v112);
              uint64_t v161 = v113;
              if (v113)
              {
LABEL_92:
                swift_unexpectedError();
                __break(1u);
                JUMPOUT(0x100635CF8);
              }
              id v115 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInt:v114 % 0xF4240];
              uint64_t v116 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v118 = v117;
              uint64_t v164 = (void *)sub_10000B740(0, (unint64_t *)&qword_1009745A0);
              *(void *)&long long v163 = v115;
              sub_100249444(&v163, v167);
              id v119 = v115;
              char v120 = swift_isUniquelyReferenced_nonNull_native();
              *(void *)&long long v166 = v88;
              sub_100591338(v167, v116, v118, v120);
              unint64_t v88 = v166;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (([v75 v111[442]] & 1) == 0)
              {

                uint64_t v106 = v157;
                unint64_t v107 = v155;
LABEL_66:
                sub_100250CC4(v106, v107);
                goto LABEL_78;
              }
              id v121 = v119;
              uint64_t v122 = v157;
              unint64_t v123 = v155;
              sub_10025ADCC(v157, v155);
              id v124 = v121;
              sub_10025ADCC(v122, v123);
              uint64_t v125 = Logger.logObject.getter();
              os_log_type_t v126 = static os_log_type_t.default.getter();
              int v127 = v126;
              if (os_log_type_enabled(v125, v126))
              {
                uint64_t v128 = swift_slowAlloc();
                int v146 = v127;
                uint64_t v129 = (char *)v128;
                unint64_t v156 = (void *)swift_slowAlloc();
                uint64_t v148 = (uint8_t *)swift_slowAlloc();
                *(void *)&long long v166 = v148;
                uint64_t v154 = v129;
                *(_DWORD *)uint64_t v129 = 138412546;
                os_log_t v145 = v125;
                *(void *)&long long v163 = v124;
                unint64_t v130 = v123;
                id v131 = v124;
                id v147 = v131;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                *unint64_t v156 = v124;

                os_log_type_t v132 = v154;
                *((_WORD *)v154 + 6) = 2080;
                int v144 = v132 + 14;
                *(void *)&long long v163 = 0;
                *((void *)&v163 + sub_100621BE0("ssharing.b332SetHasSeenScribbleEducation", 1) = 0xE000000000000000;
                uint64_t v133 = v157;
                *(void *)&v167[0] = v157;
                *((void *)&v167[0] + sub_100621BE0("ssharing.b332SetHasSeenScribbleEducation", 1) = v130;
                uint64_t v134 = v152;
                uint64_t v135 = v151;
                uint64_t v136 = v153;
                (*(void (**)(char *, void, uint64_t))(v152 + 104))(v151, enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:), v153);
                sub_1003CEFBC();
                DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)();
                (*(void (**)(char *, uint64_t))(v134 + 8))(v135, v136);
                uint64_t v137 = sub_100254634(v163, *((unint64_t *)&v163 + 1), (uint64_t *)&v166);
                uint64_t v138 = (uint8_t *)v154;
                *(void *)&long long v163 = v137;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                sub_100250CC4(v133, v130);
                sub_100250CC4(v133, v130);
                os_log_t v139 = v145;
                _os_log_impl((void *)&_mh_execute_header, v145, (os_log_type_t)v146, "passkey: %@.\nFirst four bytes: %s.", v138, 0x16u);
                sub_10000A844(&qword_10096B850);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                sub_100250CC4(v133, v130);
              }
              else
              {

                sub_100250CC4(v122, v123);
                sub_100250CC4(v122, v123);
                sub_100250CC4(v122, v123);
              }
            }
LABEL_78:
            id v140 = [*(id *)&v159[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central] sharedPairingAgent];
            if (v140)
            {
              id v141 = v140;
              id v142 = v150;
              sub_10039E870(v88);
              swift_bridgeObjectRelease();
              Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease();
              [v141 respondToPairingRequest:v142 type:v149 accept:1 data:isa];

              sub_100250CB0(v64, v63);
LABEL_9:
              *(void *)&long long v163 = 0xD000000000000057;
              *((void *)&v163 + sub_100621BE0("ssharing.b332SetHasSeenScribbleEducation", 1) = v160 | 0x8000000000000000;
              *(void *)&v167[0] = 1593;
              swift_retain();
              v23._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
              String.append(_:)(v23);
              swift_bridgeObjectRelease();
              uint64_t v24 = String.hashValue.getter();
              swift_bridgeObjectRelease();
              swift_beginAccess();
              char v25 = sub_10059634C((uint64_t *)v167, v24);
              swift_endAccess();
              if (v25)
              {
                if (qword_10096A0B0 != -1) {
                  swift_once();
                }
                uint64_t v26 = type metadata accessor for Logger();
                sub_10000B47C(v26, (uint64_t)qword_10097C7F0);
                os_log_type_t v27 = Logger.logObject.getter();
                os_log_type_t v28 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v27, v28))
                {
                  uint64_t v29 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)uint64_t v29 = 0;
                  _os_log_impl((void *)&_mh_execute_header, v27, v28, "ensurePairingRequestHandled completed", v29, 2u);
                  swift_slowDealloc();
                }
                swift_release();
              }
              else
              {
                swift_release();
              }
              return;
            }
            goto LABEL_89;
          }
          __break(1u);
LABEL_83:
          __break(1u);
LABEL_84:
          __break(1u);
LABEL_85:
          __break(1u);
LABEL_86:
          __break(1u);
LABEL_87:
          __break(1u);
          return;
        case 2:
          uint64_t v91 = *(void *)(v64 + 16);
          uint64_t v90 = *(void *)(v64 + 24);
          BOOL v74 = __OFSUB__(v90, v91);
          uint64_t v89 = v90 - v91;
          if (!v74) {
            goto LABEL_60;
          }
          goto LABEL_83;
        case 3:
          goto LABEL_78;
        default:
          uint64_t v89 = BYTE6(v63);
          goto LABEL_60;
      }
    }
    goto LABEL_26;
  }
  sub_10024A330((uint64_t)v39, v155, &qword_100974EA0);
  if (v41(v40, 1, v38) == 1)
  {
    sub_10000A7E8((uint64_t)v11, &qword_100974EA0);
    sub_10000A7E8((uint64_t)v13, &qword_100974EA0);
    (*(void (**)(unint64_t, uint64_t))(v158 + 8))(v155, v38);
LABEL_26:
    sub_10000A7E8((uint64_t)v39, &qword_10096C4F0);
    goto LABEL_27;
  }
  uint64_t v54 = v158;
  uint64_t v55 = v154;
  (*(void (**)(char *, uint64_t, uint64_t))(v158 + 32))(v154, v40, v38);
  sub_100655CC8((unint64_t *)&unk_10096D460, (void (*)(uint64_t))&type metadata accessor for UUID);
  LODWORD(v147) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v56 = *(void (**)(char *, uint64_t))(v54 + 8);
  v56(v55, v38);
  sub_10000A7E8((uint64_t)v11, &qword_100974EA0);
  sub_10000A7E8((uint64_t)v13, &qword_100974EA0);
  v56((char *)v155, v38);
  sub_10000A7E8((uint64_t)v39, &qword_100974EA0);
  if (v147) {
    goto LABEL_34;
  }
LABEL_27:
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v42 = type metadata accessor for Logger();
  sub_10000B47C(v42, (uint64_t)qword_10097C7F0);
  id v43 = v150;
  uint64_t v44 = v159;
  id v45 = v43;
  unint64_t v46 = v44;
  os_log_type_t v47 = Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = swift_slowAlloc();
    id v50 = (char *)swift_slowAlloc();
    *(_DWORD *)uint64_t v49 = 138412546;
    uint64_t v158 = v14;
    *(void *)&long long v163 = v45;
    uint64_t v161 = v45;
    uint64_t v51 = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    unint64_t v160 = (unint64_t)v50;
    *(void *)id v50 = v148;

    *(_WORD *)(v49 + 1sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2112;
    unint64_t v52 = *(void **)(*(void *)&v159[v158]
                   + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
    if (v52)
    {
      *(void *)&long long v163 = *(void *)(*(void *)&v159[v158]
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
      id v53 = v52;
    }
    else
    {
      *(void *)&long long v163 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(void *)(v160 + 8) = v52;

    _os_log_impl((void *)&_mh_execute_header, v47, v48, "Peer requesting pairing: %@\nbut storePeripheral is different: %@", (uint8_t *)v49, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    id v45 = v161;
  }
  else
  {

    os_log_type_t v47 = v45;
  }

  sub_100654330();
  swift_allocError();
  *unint64_t v71 = 1;
  swift_willThrow();
}

void sub_100635D18()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v35 = 1755;
  swift_retain();
  v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v5 = sub_10059634C(&v35, v4);
  swift_endAccess();
  if (v5)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_10097C7F0);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "ensurePairingResultHandled called", v9, 2u);
      swift_slowDealloc();
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = *(void *)(v1 + v2);
  if (*(unsigned char *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_handledPairResult)) {
    goto LABEL_9;
  }
  int v18 = *(unsigned __int8 *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didPairingSucceed);
  char v19 = 1;
  if (v18 == 2)
  {
LABEL_29:
    sub_100654330();
    swift_allocError();
    char *v34 = v19;
    swift_willThrow();
    return;
  }
  *(unsigned char *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_handledPairResult) = 1;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_10000B47C(v20, (uint64_t)qword_10097C7F0);
  char v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    Swift::String v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "ensurePairingResultHandled - pairingResult obtained", v23, 2u);
    swift_slowDealloc();
  }

  if (*(unsigned char *)(*(void *)(v1 + v2)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needToStopBLEUpdates) == 1)
  {
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "stopBLEUpdates after pair result", v26, 2u);
      swift_slowDealloc();
    }

    os_log_type_t v27 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_bleProvider);
    if (v27)
    {
      if (*(void *)(*(void *)(v1 + v2)
                     + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID
                     + 8))
      {
        id v28 = v27;
        swift_bridgeObjectRetain();
        NSString v29 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        uint64_t v30 = *(void *)(v1 + v2) + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID;
        unint64_t v31 = *(void *)(v30 + 8);
        if (v31 >> 60 != 15)
        {
          uint64_t v32 = *(void *)v30;
          sub_10025ADCC(*(void *)v30, *(void *)(v30 + 8));
          Class isa = Data._bridgeToObjectiveC()().super.isa;
          sub_100250CB0(v32, v31);
          [v28 stopBLEUpdates:v29 blePairingUUID:isa];

          *(unsigned char *)(*(void *)(v1 + v2)
                   + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needToStopBLEUpdates) = 0;
          goto LABEL_27;
        }
LABEL_34:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_34;
  }
LABEL_27:
  if ((v18 & 1) == 0)
  {
    char v19 = 3;
    goto LABEL_29;
  }
LABEL_9:
  uint64_t v35 = 1776;
  swift_retain();
  v11._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  uint64_t v12 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v13 = sub_10059634C(&v35, v12);
  swift_endAccess();
  if (v13)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10000B47C(v14, (uint64_t)qword_10097C7F0);
    Swift::String v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      char v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "ensurePairingResultHandled completed", v17, 2u);
      swift_slowDealloc();
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
}

void sub_1006362D8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10063632C();
  }
}

uint64_t sub_10063632C()
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_10097C7F0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    Swift::String v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "dismissChargingStatus", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    char v5 = (void *)result;
    v8[4] = sub_10063D0CC;
    v8[5] = 0;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_100444120;
    void v8[3] = &unk_1008E2938;
    uint64_t v6 = _Block_copy(v8);
    id v7 = [v5 remoteObjectProxyWithErrorHandler:v6];
    _Block_release(v6);
    [v7 dismissChargingStatus];

    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1006364D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v18 = 1781;
  swift_retain();
  v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v5 = sub_10059634C(&v18, v4);
  swift_endAccess();
  if (v5)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_10097C7F0);
    id v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "ensureBatteryInfo called", v9, 2u);
      swift_slowDealloc();
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
  if (*(void *)(*(void *)(v1 + v2)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_discoveredBatteryInfo)
    || (*(unsigned char *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel + 8) & 1) == 0)
  {
    uint64_t v18 = 1785;
    swift_retain();
    v11._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v11);
    swift_bridgeObjectRelease();
    uint64_t v12 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v13 = sub_10059634C(&v18, v12);
    swift_endAccess();
    if (v13)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      sub_10000B47C(v14, (uint64_t)qword_10097C7F0);
      Swift::String v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        char v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "ensureBatteryInfo completed", v17, 2u);
        swift_slowDealloc();
      }
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    sub_100654330();
    swift_allocError();
    *uint64_t v10 = 1;
    swift_willThrow();
  }
}

void sub_100636854()
{
  if (*(unsigned char *)(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) == 1)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_10000B47C(v1, (uint64_t)qword_10097C7F0);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "showSubsequentPairSuccess", v4, 2u);
      swift_slowDealloc();
    }

    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v6 = Strong;
      sub_10061E12C(Strong, 1);
      aBlock[4] = sub_10063D0B4;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100444120;
      uint64_t aBlock[3] = &unk_1008E2A28;
      id v7 = _Block_copy(aBlock);
      id v8 = [v6 remoteObjectProxyWithErrorHandler:v7];
      _Block_release(v7);
      [v8 showSubsequentPairSuccess];

      swift_unknownObjectRelease();
    }
  }
  else
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000B47C(v9, (uint64_t)qword_10097C7F0);
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v10))
    {
      Swift::String v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v10, "ignore showSubsequentPairSuccess, UI updates disabled for current session state", v11, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_100636AF4()
{
  uint64_t v2 = v1;
  uint64_t isUniquelyReferenced_nonNull_native = v0;
  uint64_t v127 = type metadata accessor for UUID();
  uint64_t v116 = *(void *)(v127 - 8);
  uint64_t v4 = __chkstk_darwin(v127);
  unsigned int v114 = (char *)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  id v8 = (char *)&v112 - v7;
  __chkstk_darwin(v6);
  uint64_t v128 = ((char *)&v112 - v9);
  uint64_t v124 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  if ((*(unsigned char *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType + 8) & 1) == 0
    && *(void *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType) == 2)
  {
    return;
  }
  char v11 = *(unsigned char *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_startedUnpairProcess);
  uint64_t v12 = (void *)&unk_100994000;
  uint64_t v123 = v0;
  if ((v11 & 1) == 0)
  {
    *(unsigned char *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_startedUnpairProcess) = 1;
    uint64_t v122 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central;
    id v13 = [*(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central) sharedPairingAgent];
    if (!v13)
    {
LABEL_65:
      __break(1u);
LABEL_66:
      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      return;
    }
    uint64_t v14 = v13;
    sub_10062AC20();
    unint64_t v16 = v15;

    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v113 = v1;
    if (v17)
    {
      id v121 = (uint64_t *)(v16 & 0xC000000000000001);
      uint64_t v119 = isUniquelyReferenced_nonNull_native
           + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_peripheralsIConnectedTo;
      swift_beginAccess();
      uint64_t v115 = v116 + 16;
      os_log_t v126 = (os_log_t)(v116 + 8);
      uint64_t v18 = 4;
      char v120 = v8;
      uint64_t v117 = v17;
      unint64_t v118 = v16;
      while (1)
      {
        if (v121) {
          id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v19 = *(id *)(v16 + 8 * v18);
        }
        uint64_t v20 = v19;
        if (__OFADD__(v18 - 4, 1))
        {
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
        uint64_t v125 = v18 - 3;
        uint64_t v21 = *(void *)(isUniquelyReferenced_nonNull_native + v124);
        swift_retain();
        id v22 = [v20 identifier];
        Swift::String v23 = v128;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v24 = (uint64_t *)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingUnpair);
        swift_beginAccess();
        id v25 = v20;
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v132 = *v24;
        uint64_t v26 = v132;
        *uint64_t v24 = 0x8000000000000000;
        unint64_t v28 = sub_100583A00((uint64_t)v23);
        uint64_t v29 = *(void *)(v26 + 16);
        BOOL v30 = (v27 & 1) == 0;
        uint64_t v31 = v29 + v30;
        if (__OFADD__(v29, v30)) {
          goto LABEL_60;
        }
        char v32 = v27;
        if (*(void *)(v26 + 24) >= v31)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v35 = (void *)v132;
            if (v27) {
              goto LABEL_20;
            }
          }
          else
          {
            sub_10059077C();
            uint64_t v35 = (void *)v132;
            if (v32) {
              goto LABEL_20;
            }
          }
        }
        else
        {
          sub_10058C024(v31, isUniquelyReferenced_nonNull_native);
          unint64_t v33 = sub_100583A00((uint64_t)v128);
          if ((v32 & 1) != (v34 & 1)) {
            goto LABEL_66;
          }
          unint64_t v28 = v33;
          uint64_t v35 = (void *)v132;
          if (v32)
          {
LABEL_20:
            uint64_t v36 = v35[7];
            uint64_t v37 = 8 * v28;

            *(void *)(v36 + v37) = v25;
            goto LABEL_24;
          }
        }
        v35[(v28 >> 6) + 8] |= 1 << v28;
        (*(void (**)(unint64_t, NSObject *, uint64_t))(v116 + 16))(v35[6] + *(void *)(v116 + 72) * v28, v128, v127);
        *(void *)(v35[7] + 8 * v28) = v25;
        uint64_t v38 = v35[2];
        BOOL v39 = __OFADD__(v38, 1);
        uint64_t v40 = v38 + 1;
        if (v39) {
          goto LABEL_61;
        }
        v35[2] = v40;
LABEL_24:
        *uint64_t v24 = (uint64_t)v35;
        swift_bridgeObjectRelease();
        Class isa = v126->isa;
        ((void (*)(NSObject *, uint64_t))v126->isa)(v128, v127);
        swift_endAccess();
        swift_release();
        id v42 = [v25 identifier];
        uint64_t v43 = (uint64_t)v120;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v44 = *(void *)v119;
        if (*(void *)(*(void *)v119 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v45 = sub_100583A00(v43);
          if (v46)
          {
            id v47 = *(id *)(*(void *)(v44 + 56) + 8 * v45);
            swift_bridgeObjectRelease();
            ((void (*)(uint64_t, uint64_t))isa)(v43, v127);

            uint64_t v48 = *(void *)(v123 + v124);
            swift_retain();
            id v49 = [v25 identifier];
            uint64_t v50 = (uint64_t)v114;
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v51 = (uint64_t *)(v48 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingDisconnect);
            swift_beginAccess();
            id v52 = v25;
            char v53 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v132 = *v51;
            *uint64_t v51 = 0x8000000000000000;
            sub_100594990((uint64_t)v52, v50, v53);
            *uint64_t v51 = v132;
            swift_bridgeObjectRelease();
            ((void (*)(uint64_t, uint64_t))isa)(v50, v127);
            swift_endAccess();
            swift_release();
            goto LABEL_29;
          }
          swift_bridgeObjectRelease();
        }
        ((void (*)(uint64_t, uint64_t))isa)(v43, v127);
LABEL_29:
        uint64_t isUniquelyReferenced_nonNull_native = v123;
        id v54 = [*(id *)(v123 + v122) sharedPairingAgent];
        if (!v54)
        {
          __break(1u);
          goto LABEL_65;
        }
        uint64_t v55 = v54;
        [v54 unpairPeer:v25];

        ++v18;
        unint64_t v16 = v118;
        if (v125 == v117)
        {
          swift_bridgeObjectRelease();
          uint64_t v2 = v113;
          goto LABEL_33;
        }
      }
    }
    swift_bridgeObjectRelease();
LABEL_33:
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v56 = type metadata accessor for Logger();
    sub_10000B47C(v56, (uint64_t)qword_10097C7F0);
    id v57 = (id)isUniquelyReferenced_nonNull_native;
    id v58 = Logger.logObject.getter();
    os_log_type_t v59 = static os_log_type_t.default.getter();
    int v60 = v59;
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v61 = swift_slowAlloc();
      uint64_t v128 = swift_slowAlloc();
      v134[0] = (uint64_t)v128;
      *(_DWORD *)uint64_t v61 = 136315650;
      uint64_t v122 = v61 + 4;
      os_log_t v126 = v58;
      LODWORD(v125) = v60;
      swift_beginAccess();
      sub_10000B740(0, &qword_10097D2D8);
      uint64_t v62 = sub_100655CC8(&qword_10096C4C8, (void (*)(uint64_t))&type metadata accessor for UUID);
      swift_bridgeObjectRetain();
      char v120 = (char *)v62;
      uint64_t v63 = Dictionary.description.getter();
      unint64_t v65 = v64;
      swift_bridgeObjectRelease();
      uint64_t v132 = sub_100254634(v63, v65, v134);
      id v121 = &v133;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v61 + 1sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
      uint64_t v12 = &unk_100994000;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v66 = Dictionary.description.getter();
      unint64_t v68 = v67;
      swift_bridgeObjectRelease();
      uint64_t v132 = sub_100254634(v66, v68, v134);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v69 = v113;
      swift_bridgeObjectRelease();
      *(_WORD *)(v61 + 2sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
      uint64_t v122 = v61 + 24;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v70 = Dictionary.description.getter();
      unint64_t v72 = v71;
      uint64_t v2 = v69;
      swift_bridgeObjectRelease();
      uint64_t v132 = sub_100254634(v70, v72, v134);
      uint64_t isUniquelyReferenced_nonNull_native = v123;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      os_log_t v73 = v126;
      _os_log_impl((void *)&_mh_execute_header, v126, (os_log_type_t)v125, "ensureAllUnpaired called. needingUnpair: %s, needingDisconnect: %s, peripheralsIConnectedTo: %s", (uint8_t *)v61, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v12 = &unk_100994000;
    }
  }
  uint64_t v74 = v124;
  uint64_t v75 = *(void *)(isUniquelyReferenced_nonNull_native + v124) + v12[339];
  swift_beginAccess();
  uint64_t v76 = *(void *)(*(void *)v75 + 16);
  swift_retain();
  uint64_t v77 = swift_bridgeObjectRetain();
  uint64_t v78 = v2;
  uint64_t v79 = sub_10064EEA8(v77);
  uint64_t v113 = v78;
  swift_bridgeObjectRelease();
  *(void *)uint64_t v75 = v79;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v80 = *(void *)(isUniquelyReferenced_nonNull_native + v74) + v12[339];
  swift_beginAccess();
  if (v76 != *(void *)(*(void *)v80 + 16))
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v81 = type metadata accessor for Logger();
    sub_10000B47C(v81, (uint64_t)qword_10097C7F0);
    uint64_t v82 = Logger.logObject.getter();
    os_log_type_t v83 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v82, v83))
    {
      uint64_t v84 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v84 = 0;
      _os_log_impl((void *)&_mh_execute_header, v82, v83, "Removed disconnected peripheral for which we have not yet gotten a disconnect delegate message", v84, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v85 = *(void *)(isUniquelyReferenced_nonNull_native + v124);
  uint64_t v86 = v85 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingUnpair;
  swift_beginAccess();
  if (*(void *)(*(void *)v86 + 16)
    || (uint64_t v87 = v85 + v12[339], swift_beginAccess(), *(void *)(*(void *)v87 + 16)))
  {
    if (qword_10096A0B0 != -1) {
LABEL_62:
    }
      swift_once();
    uint64_t v88 = type metadata accessor for Logger();
    sub_10000B47C(v88, (uint64_t)qword_10097C7F0);
    id v89 = (id)isUniquelyReferenced_nonNull_native;
    uint64_t v90 = Logger.logObject.getter();
    os_log_type_t v91 = static os_log_type_t.debug.getter();
    int v92 = v91;
    uint64_t v128 = v90;
    if (os_log_type_enabled(v90, v91))
    {
      uint64_t v93 = swift_slowAlloc();
      os_log_t v126 = (os_log_t)swift_slowAlloc();
      os_log_t v135 = v126;
      *(_DWORD *)uint64_t v93 = 136315650;
      uint64_t v122 = v93 + 4;
      swift_beginAccess();
      sub_10000B740(0, &qword_10097D2D8);
      id v121 = (uint64_t *)sub_100655CC8(&qword_10096C4C8, (void (*)(uint64_t))&type metadata accessor for UUID);
      swift_bridgeObjectRetain();
      uint64_t v94 = Dictionary.description.getter();
      LODWORD(v125) = v92;
      unint64_t v96 = v95;
      swift_bridgeObjectRelease();
      v131[0] = sub_100254634(v94, v96, (uint64_t *)&v135);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v93 + 1sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v97 = Dictionary.description.getter();
      unint64_t v99 = v98;
      swift_bridgeObjectRelease();
      uint64_t v130 = sub_100254634(v97, v99, (uint64_t *)&v135);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v93 + 2sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v100 = Dictionary.description.getter();
      unint64_t v102 = v101;
      swift_bridgeObjectRelease();
      uint64_t v129 = sub_100254634(v100, v102, (uint64_t *)&v135);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      uint64_t v103 = v128;
      _os_log_impl((void *)&_mh_execute_header, v128, (os_log_type_t)v125, "ensureAllUnpaired - In progress! needingUnpair: %s, needingDisconnect: %s, peripheralsIConnectedTo: %s", (uint8_t *)v93, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    sub_100654330();
    swift_allocError();
    *os_log_type_t v104 = 1;
    swift_willThrow();
  }
  else
  {
    v131[3] = 0xD000000000000057;
    v131[4] = 0x80000001007C52B0;
    v131[0] = 1269;
    swift_retain();
    v105._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v105);
    swift_bridgeObjectRelease();
    uint64_t v106 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v107 = sub_10059634C(v131, v106);
    swift_endAccess();
    if (v107)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v108 = type metadata accessor for Logger();
      sub_10000B47C(v108, (uint64_t)qword_10097C7F0);
      uint64_t v109 = Logger.logObject.getter();
      os_log_type_t v110 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v109, v110))
      {
        uint64_t v111 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v111 = 0;
        _os_log_impl((void *)&_mh_execute_header, v109, v110, "ensureAllUnpaired completed", v111, 2u);
        swift_slowDealloc();
      }
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
}

void sub_100637B2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  unint64_t v28 = 0xD000000000000057;
  unint64_t v29 = 0x80000001007C52B0;
  uint64_t v30 = 1287;
  swift_retain();
  v6._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v8 = sub_10059634C(&v30, v7);
  swift_endAccess();
  if (v8)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_10000B47C(v9, (uint64_t)qword_10097C7F0);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "checkFindMyStatus called", v12, 2u);
      swift_slowDealloc();
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = *(void *)(v1 + v5);
  if (*(unsigned char *)(v13 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_finishedCheckingFindMyStatus)) {
    goto LABEL_9;
  }
  if (*(unsigned char *)(v13 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_startedCheckingFindMyStatus))
  {
LABEL_18:
    sub_100654330();
    swift_allocError();
    unsigned char *v26 = 1;
    swift_willThrow();
    return;
  }
  sub_100638130();
  uint64_t v22 = v21;
  if (*(void *)(v21 + 16))
  {
    *(unsigned char *)(*(void *)(v1 + v5)
             + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_startedCheckingFindMyStatus) = 1;
    uint64_t v23 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v4, 1, 1, v23);
    uint64_t v24 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v25 = (void *)swift_allocObject();
    void v25[2] = 0;
    uint64_t v25[3] = 0;
    v25[4] = v24;
    _OWORD v25[5] = v22;
    sub_10028CFA8((uint64_t)v4, (uint64_t)&unk_10097D2F8, (uint64_t)v25);
    swift_release();
    goto LABEL_18;
  }
  swift_bridgeObjectRelease();
  *(unsigned char *)(*(void *)(v1 + v5)
           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_finishedCheckingFindMyStatus) = 1;
LABEL_9:
  unint64_t v28 = 0xD000000000000057;
  unint64_t v29 = 0x80000001007C52B0;
  uint64_t v30 = 1308;
  swift_retain();
  v14._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v16 = sub_10059634C(&v30, v15);
  swift_endAccess();
  if (v16)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_10000B47C(v17, (uint64_t)qword_10097C7F0);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "checkFindMyStatus completed", v20, 2u);
      swift_slowDealloc();
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_100637FE4(uint64_t a1)
{
  uint64_t v2 = sub_10000A844(&qword_10096C920);
  uint64_t result = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  uint64_t v7 = *(void **)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  if (v7
    && (*(unsigned char *)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType + 8) & 1) == 0
    && *(void *)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType) == 4
    && *(unsigned char *)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_shouldFindMyPairOnSuccess) == 1)
  {
    uint64_t v8 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = v7;
    id v10 = v7;
    sub_10028CFA8((uint64_t)v5, (uint64_t)&unk_10097D298, (uint64_t)v9);
    return swift_release();
  }
  return result;
}

void sub_100638130()
{
  uint64_t v33 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central), "sharedPairingAgent"));
  if (!v4) {
    goto LABEL_36;
  }
  uint64_t v5 = v4;
  sub_10062AC20();
  unint64_t v7 = v6;

  uint64_t v35 = (uint64_t)_swiftEmptyArrayStorage;
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_4:
      if (v8 < 1)
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v8; ++i)
      {
        if ((v7 & 0xC000000000000001) != 0) {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v10 = *(id *)(v7 + 8 * i + 32);
        }
        uint64_t v11 = v10;
        NSString v12 = String._bridgeToObjectiveC()();
        unsigned int v13 = [v11 hasTag:v12];

        if (v13)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v14 = v35;
      if (v35 < 0) {
        goto LABEL_28;
      }
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = (uint64_t)_swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
    goto LABEL_28;
  }
LABEL_17:
  if ((v14 & 0x4000000000000000) != 0)
  {
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (!v15) {
      goto LABEL_29;
    }
    goto LABEL_19;
  }
  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
LABEL_19:
    uint64_t v35 = (uint64_t)_swiftEmptyArrayStorage;
    sub_1002558AC(0, v15 & ~(v15 >> 63), 0);
    if ((v15 & 0x8000000000000000) == 0)
    {
      uint64_t v16 = 0;
      uint64_t v17 = v35;
      unint64_t v32 = v14 & 0xC000000000000001;
      uint64_t v18 = v14;
      do
      {
        if (v32) {
          id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v19 = *(id *)(v14 + 8 * v16 + 32);
        }
        uint64_t v20 = v19;
        id v21 = [v19 identifier:v32];
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v35 = v17;
        uint64_t v22 = v3;
        unint64_t v24 = *(void *)(v17 + 16);
        unint64_t v23 = *(void *)(v17 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_1002558AC(v23 > 1, v24 + 1, 1);
          uint64_t v17 = v35;
        }
        ++v16;
        *(void *)(v17 + 16) = v24 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v17+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(void *)(v1 + 72) * v24, v22, v33);
        uint64_t v3 = v22;
        uint64_t v14 = v18;
      }
      while (v15 != v16);
      goto LABEL_29;
    }
    goto LABEL_35;
  }
LABEL_29:
  swift_release();
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  sub_10000B47C(v25, (uint64_t)qword_10097C7F0);
  swift_bridgeObjectRetain_n();
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    unint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)unint64_t v28 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v29 = Array.description.getter();
    unint64_t v31 = v30;
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_100254634(v29, v31, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Found paired Apple Pencil Pros: %s", v28, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_10063862C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 4sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = a4;
  *(void *)(v5 + 48) = a5;
  return _swift_task_switch(sub_10063864C, 0, 0);
}

uint64_t sub_10063864C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[7] = Strong;
  if (Strong)
  {
    uint64_t v2 = *(void *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
       + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
    uint64_t v3 = *(void *)v2;
    char v4 = *(unsigned char *)(v2 + 8);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[8] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100638774;
    uint64_t v6 = v0[6];
    return sub_1006388D0(v6, v3, v4);
  }
  else
  {
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_100638774()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100638870, 0, 0);
}

uint64_t sub_100638870()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006388D0(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 3sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v3;
  *(unsigned char *)(v4 + 73) = a3;
  *(void *)(v4 + 16) = a1;
  return _swift_task_switch(sub_1006388F8, 0, 0);
}

uint64_t sub_1006388F8()
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[5] = sub_10000B47C(v1, (uint64_t)qword_10097C7F0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Checking if any paired Apple Pencil Pros are FindMy-paired...", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[2];

  uint64_t v6 = swift_task_alloc();
  v0[6] = v6;
  *(void *)(v6 + 16) = v5;
  unint64_t v7 = (void *)swift_task_alloc();
  v0[7] = v7;
  *unint64_t v7 = v0;
  v7[1] = sub_100638AA4;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 9, &type metadata for Bool, &type metadata for Bool, 0, 0, &unk_10097D310, v6, &type metadata for Bool);
}

uint64_t sub_100638AA4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_100638BBC, 0, 0);
}

uint64_t sub_100638BBC()
{
  if (*(unsigned char *)(v0 + 72))
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v1;
    void *v1 = v0;
    v1[1] = sub_100638D0C;
    return sub_10063925C();
  }
  else
  {
    os_log_type_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "No paired Apple Pencil Pros are FindMy-paired", v5, 2u);
      swift_slowDealloc();
    }

    sub_100638F5C(0);
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_100638D0C(char a1)
{
  *(unsigned char *)(*(void *)v1 + 74) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100638E0C, 0, 0);
}

uint64_t sub_100638E0C()
{
  int v1 = *(unsigned __int8 *)(v0 + 74);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  if (v1 == 1)
  {
    if (v4)
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Pencil being paired is already FindMy-paired to this account, assuming reattach and skipping alert", v5, 2u);
      swift_slowDealloc();
    }

    sub_100638F5C(0);
  }
  else
  {
    if (v4)
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "At least one paired Apple Pencil Pro is FindMy-paired, showing warning alert", v6, 2u);
      swift_slowDealloc();
    }
    char v7 = *(unsigned char *)(v0 + 73);
    uint64_t v8 = *(void *)(v0 + 24);

    sub_100639D80(v8, v7 & 1);
  }
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100638F5C(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[1] = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(unsigned char *)(v12 + 24) = a1;
  aBlock[4] = sub_1006549A8;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  uint64_t aBlock[3] = &unk_1008E2B98;
  unsigned int v13 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v17 = _swiftEmptyArrayStorage;
  sub_100655CC8((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v16);
  swift_release();
  return swift_release();
}

uint64_t sub_10063925C()
{
  v1[20] = v0;
  uint64_t v2 = type metadata accessor for UUID();
  v1[21] = v2;
  v1[22] = *(void *)(v2 - 8);
  v1[23] = swift_task_alloc();
  return _swift_task_switch(sub_10063931C, 0, 0);
}

uint64_t sub_10063931C()
{
  uint64_t v34 = v0;
  uint64_t v1 = *(void *)(v0[20] + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  v0[24] = v2;
  if (v2
    && (uint64_t v3 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType,
        (*(unsigned char *)(v3 + 8) & 1) == 0)
    && *(void *)v3 == 4)
  {
    id v4 = objc_allocWithZone((Class)SPAccessoryDiscoveryAndPairingSession);
    id v5 = v2;
    id v6 = [v4 initWithPreviousState:0];
    v0[25] = v6;
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    v0[26] = sub_10000B47C(v7, (uint64_t)qword_10097C7F0);
    id v8 = v5;
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      os_log_type_t type = v10;
      uint64_t v12 = v0[22];
      uint64_t v11 = v0[23];
      uint64_t v13 = v0[21];
      id v32 = v6;
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      id v15 = [v8 identifier];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      sub_100655CC8((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v16 = v13;
      uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v19 = v18;
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v16);
      v0[19] = sub_100254634(v17, v19, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v9, type, "Checking if current Pencil (%s) is FindMy-paired to this account...", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      id v6 = v32;
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v23 = v0[22];
    uint64_t v22 = v0[23];
    uint64_t v24 = v0[21];
    uint64_t v25 = self;
    id v26 = [v8 identifier];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    unint64_t v28 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v0[27] = v28;
    v0[28] = (v23 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v28(v22, v24);
    id v29 = [v25 checkSerialNumberWithIdentifier:isa];
    v0[29] = v29;

    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_1006397A0;
    uint64_t v30 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_10063B7EC;
    v0[13] = &unk_1008E2B58;
    v0[14] = v30;
    [v6 pairingStatusWithRequest:v29 completion:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20(0);
  }
}

uint64_t sub_1006397A0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 24sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v1;
  if (v1) {
    uint64_t v2 = sub_100639BA0;
  }
  else {
    uint64_t v2 = sub_1006398B0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1006398B0()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(void **)(v0 + 120);
  id v2 = *(id *)(v0 + 192);
  id v3 = v1;
  id v4 = v2;
  id v5 = v3;
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v27 = *(void (**)(uint64_t, uint64_t))(v0 + 216);
    uint64_t v8 = *(void *)(v0 + 184);
    uint64_t v9 = *(void **)(v0 + 192);
    uint64_t v10 = *(void *)(v0 + 168);
    uint64_t v11 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    id v12 = [v9 identifier];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100655CC8((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v15 = v14;
    v27(v8, v10);
    *(void *)(v0 + 136) = sub_100254634(v13, v15, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 1sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
    id v16 = [v5 pairingStatus];
    BOOL v17 = v16 == (id)2;
    if (v16 == (id)2) {
      uint64_t v18 = 7562617;
    }
    else {
      uint64_t v18 = 28526;
    }
    if (v17) {
      unint64_t v19 = 0xE300000000000000;
    }
    else {
      unint64_t v19 = 0xE200000000000000;
    }
    *(void *)(v0 + 144) = sub_100254634(v18, v19, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Got back from call to pairingStatus(with:) for identifier %s with result (is FindMy-paired to this account) %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v20 = *(void **)(v0 + 192);
  }
  id v21 = *(void **)(v0 + 232);
  uint64_t v23 = *(void **)(v0 + 192);
  uint64_t v22 = *(void **)(v0 + 200);
  id v24 = [v5 pairingStatus];

  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(BOOL))(v0 + 8);
  return v25(v24 == (id)2);
}

uint64_t sub_100639BA0()
{
  uint64_t v1 = *(void **)(v0 + 232);
  id v2 = *(void **)(v0 + 200);
  swift_willThrow();

  swift_errorRetain();
  swift_errorRetain();
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = *(NSObject **)(v0 + 192);
    id v6 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)id v6 = 138412290;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 128) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v7 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to get Pencil status with error: %@, falling back to unpaired", v6, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v3 = v5;
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRelease();

  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9(0);
}

void sub_100639D80(uint64_t a1, int a2)
{
  unint64_t v5 = 0xEC0000006C69636ELL;
  uint64_t v66 = type metadata accessor for Date();
  uint64_t v61 = *(void *)(v66 - 8);
  uint64_t v6 = __chkstk_darwin(v66);
  id v58 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = v7;
  __chkstk_darwin(v6);
  unint64_t v65 = (char *)&v49 - v8;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v63 = *(void *)(v9 - 8);
  uint64_t v64 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  id v57 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = v11;
  __chkstk_darwin(v10);
  uint64_t v62 = (char *)&v49 - v12;
  int v60 = a2;
  uint64_t v59 = a1;
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = (id)SFLocalizedStringForKey();

  if (v14)
  {
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v16;
  }
  else
  {
    uint64_t v15 = 0x655020656C707041;
  }
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = (id)SFLocalizedStringForKey();

  if (v18)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10000A844((uint64_t *)&unk_10096EE60);
    uint64_t v19 = swift_allocObject();
    long long v53 = xmmword_10076E7A0;
    *(_OWORD *)(v19 + 16) = xmmword_10076E7A0;
    *(void *)(v19 + 56) = &type metadata for String;
    unint64_t v20 = sub_1002E695C();
    *(void *)(v19 + 64) = v20;
    *(void *)(v19 + 3sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v15;
    *(void *)(v19 + 4sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v5;
    swift_bridgeObjectRetain();
    uint64_t v54 = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NSString v21 = String._bridgeToObjectiveC()();
    id v22 = (id)SFLocalizedStringForKey();

    if (v22)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = v53;
      *(void *)(v23 + 56) = &type metadata for String;
      *(void *)(v23 + 64) = v20;
      *(void *)(v23 + 3sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v15;
      *(void *)(v23 + 4sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v5;
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      NSString v24 = String._bridgeToObjectiveC()();
      id v25 = (id)SFLocalizedStringForKey();

      *(void *)&long long v53 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
      uint64_t v26 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
      uint64_t v52 = v2;
      uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 16);
      os_log_type_t v27 = v62;
      v50(v62, v26 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_uuid, v64);
      uint64_t v28 = v65;
      static Date.now.getter();
      id v29 = [objc_allocWithZone((Class)SFUserAlert) init];
      NSString v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v29 setTitle:v30];

      NSString v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v51 = v29;
      [v29 setDefaultButtonTitle:v31];

      [v29 setAlternateButtonTitle:v25];
      uint64_t v32 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v33 = v61;
      uint64_t v34 = v58;
      (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v28, v66);
      uint64_t v35 = v57;
      uint64_t v36 = v64;
      v50(v57, (uint64_t)v27, v64);
      unint64_t v37 = (*(unsigned __int8 *)(v33 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      unint64_t v38 = (v56 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v39 = v63;
      unint64_t v40 = (*(unsigned __int8 *)(v63 + 80) + v38 + 9) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v32;
      id v42 = v34;
      uint64_t v43 = v66;
      (*(void (**)(unint64_t, char *, uint64_t))(v33 + 32))(v41 + v37, v42, v66);
      unint64_t v44 = v41 + v38;
      *(void *)unint64_t v44 = v59;
      *(unsigned char *)(v44 + 8) = v60 & 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v41 + v40, v35, v36);
      aBlock[4] = sub_10065479C;
      aBlock[5] = v41;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10061CCEC;
      uint64_t aBlock[3] = &unk_1008E2AE0;
      unint64_t v45 = _Block_copy(aBlock);
      swift_release();
      id v46 = v51;
      [v51 setResponseHandler:v45];
      _Block_release(v45);
      [v46 present];
      (*(void (**)(char *, uint64_t))(v33 + 8))(v65, v43);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v62, v36);
      uint64_t v47 = *(void *)(v52 + v53);
      uint64_t v48 = *(void **)(v47 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_findMyUnpairAlert);
      *(void *)(v47 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_findMyUnpairAlert) = v46;

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10063A47C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  uint64_t v4 = type metadata accessor for UUID();
  v3[12] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[13] = v5;
  v3[14] = *(void *)(v5 + 64);
  v3[15] = swift_task_alloc();
  sub_10000A844(&qword_10096C920);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  uint64_t v6 = sub_10000A844(&qword_10097D328);
  v3[18] = v6;
  v3[19] = *(void *)(v6 - 8);
  v3[20] = swift_task_alloc();
  sub_10000A844(&qword_100974EA0);
  v3[21] = swift_task_alloc();
  return _swift_task_switch(sub_10063A618, 0, 0);
}

uint64_t sub_10063A618()
{
  uint64_t v1 = *(void *)(v0 + 88);
  id v2 = [objc_allocWithZone((Class)SPOwnerInterface) init];
  id v43 = [v2 ownerSession];
  *(void *)(v0 + 176) = v43;

  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    uint64_t v34 = (void *)(v0 + 16);
    uint64_t v4 = *(void *)(v0 + 104);
    id v42 = *(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16);
    unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    unint64_t v6 = *(void *)(v0 + 88) + v5;
    uint64_t v7 = (void *)(v4 + 56);
    unint64_t v40 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    unint64_t v37 = (void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
    uint64_t v38 = *(void *)(v4 + 72);
    unint64_t v39 = v5;
    unint64_t v36 = (*(void *)(v0 + 112) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    uint64_t v41 = v7;
    while (1)
    {
      uint64_t v9 = *(void *)(v0 + 168);
      uint64_t v10 = *(void *)(v0 + 96);
      v42(v9, v6, v10);
      uint64_t v11 = (void (*)(uint64_t, void, uint64_t, uint64_t))*v41;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))*v41)(v9, 0, 1, v10);
      if ((*v40)(v9, 1, v10) == 1) {
        goto LABEL_14;
      }
      uint64_t v35 = v11;
      unint64_t v44 = v6;
      uint64_t v45 = v3;
      uint64_t v12 = *(void *)(v0 + 168);
      uint64_t v13 = *(void *)(v0 + 136);
      uint64_t v46 = *(void *)(v0 + 128);
      uint64_t v14 = *(void *)(v0 + 120);
      uint64_t v15 = *(void *)(v0 + 96);
      uint64_t v16 = type metadata accessor for TaskPriority();
      uint64_t v17 = *(void *)(v16 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v13, 1, 1, v16);
      uint64_t v18 = v0;
      uint64_t v19 = *v37;
      (*v37)(v14, v12, v15);
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = 0;
      NSString v21 = (void *)(v20 + 16);
      *(void *)(v20 + 24) = 0;
      v19(v20 + v39, v14, v15);
      uint64_t v0 = v18;
      *(void *)(v20 + v36) = v43;
      sub_10024A330(v13, v46, &qword_10096C920);
      LODWORD(v13) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v46, 1, v16);
      swift_unknownObjectRetain();
      uint64_t v22 = *(void *)(v18 + 128);
      if (v13 == 1)
      {
        sub_10000A7E8(*(void *)(v18 + 128), &qword_10096C920);
        if (!*v21) {
          goto LABEL_9;
        }
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v22, v16);
        if (!*v21)
        {
LABEL_9:
          uint64_t v23 = 0;
          uint64_t v25 = 0;
          goto LABEL_10;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v23 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v25 = v24;
      swift_unknownObjectRelease();
LABEL_10:
      uint64_t v26 = **(void **)(v18 + 80);
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = &unk_10097D3A0;
      *(void *)(v27 + 24) = v20;
      uint64_t v28 = (void *)(v25 | v23);
      if (v25 | v23)
      {
        uint64_t v28 = v34;
        void *v34 = 0;
        v34[1] = 0;
        *(void *)(v18 + 3sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v23;
        *(void *)(v18 + 4sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v25;
      }
      uint64_t v8 = *(void *)(v18 + 136);
      *(void *)(v18 + 48) = 1;
      *(void *)(v18 + 56) = v28;
      *(void *)(v18 + 64) = v26;
      swift_task_create();
      swift_release();
      sub_10000A7E8(v8, &qword_10096C920);
      unint64_t v6 = v44 + v38;
      uint64_t v3 = v45 - 1;
      if (v45 == 1)
      {
        v35(*(void *)(v0 + 168), 1, 1, *(void *)(v0 + 96));
        goto LABEL_14;
      }
    }
  }
  id v29 = *(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 104) + 56);
  swift_bridgeObjectRetain();
  v29(*(void *)(v0 + 168), 1, 1, *(void *)(v0 + 96));
LABEL_14:
  swift_bridgeObjectRelease();
  TaskGroup.makeAsyncIterator()();
  *(unsigned char *)(v0 + 193) = 0;
  uint64_t v30 = sub_1002AE308(&qword_10097D330, &qword_10097D328);
  NSString v31 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v31;
  *NSString v31 = v0;
  v31[1] = sub_10063AB0C;
  uint64_t v32 = *(void *)(v0 + 144);
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 192, v32, v30);
}

uint64_t sub_10063AB0C()
{
  id v2 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[19] + 8))(v2[20], v2[18]);
    uint64_t v3 = LongHash.storage.getter;
  }
  else
  {
    uint64_t v3 = sub_10063AC34;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10063AC34()
{
  int v1 = *(unsigned __int8 *)(v0 + 192);
  char v2 = *(unsigned char *)(v0 + 193);
  if (v1 == 2)
  {
    uint64_t v3 = *(unsigned char **)(v0 + 72);
    (*(void (**)(void, void))(*(void *)(v0 + 152) + 8))(*(void *)(v0 + 160), *(void *)(v0 + 144));
    *uint64_t v3 = v2;
    swift_unknownObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    *(unsigned char *)(v0 + 193) = (v1 | v2) & 1;
    uint64_t v6 = sub_1002AE308(&qword_10097D330, &qword_10097D328);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10063AB0C;
    uint64_t v8 = *(void *)(v0 + 144);
    return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 192, v8, v6);
  }
}

uint64_t sub_10063ADD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[20] = a4;
  v5[21] = a5;
  v5[19] = a1;
  uint64_t v6 = type metadata accessor for UUID();
  v5[22] = v6;
  v5[23] = *(void *)(v6 - 8);
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  return _swift_task_switch(sub_10063AEA8, 0, 0);
}

uint64_t sub_10063AEA8()
{
  uint64_t v22 = v0;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[20];
  uint64_t v5 = type metadata accessor for Logger();
  v0[26] = sub_10000B47C(v5, (uint64_t)qword_10097C7F0);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[27] = v6;
  v0[28] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v4, v2);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[25];
  uint64_t v11 = v0[22];
  uint64_t v12 = v0[23];
  if (v9)
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    sub_100655CC8((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[18] = sub_100254634(v14, v15, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v16(v10, v11);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Adding check-status task for identifier %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v16(v0[25], v0[22]);
  }

  v0[29] = v16;
  uint64_t v17 = (void *)v0[21];
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  v0[30] = isa;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_10063B1C0;
  uint64_t v19 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100336194;
  v0[13] = &unk_1008E2C10;
  v0[14] = v19;
  [v17 peripheralConnectionMaterialForAccessoryIdentifier:isa completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10063B1C0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 248) = v1;
  if (v1) {
    uint64_t v2 = sub_10063B580;
  }
  else {
    uint64_t v2 = sub_10063B2D0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10063B2D0()
{
  uint64_t v16 = v0;
  uint64_t v1 = *(void **)(v0 + 120);

  (*(void (**)(void, void, void))(v0 + 216))(*(void *)(v0 + 192), *(void *)(v0 + 160), *(void *)(v0 + 176));
  id v2 = v1;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = *(void *)(v0 + 192);
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
    uint64_t v6 = *(void *)(v0 + 176);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    sub_100655CC8((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v8 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 128) = sub_100254634(v8, v9, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v14(v5, v6);
    *(_WORD *)(v7 + 1sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
    if (v2) {
      uint64_t v10 = 7562617;
    }
    else {
      uint64_t v10 = 28526;
    }
    if (v2) {
      unint64_t v11 = 0xE300000000000000;
    }
    else {
      unint64_t v11 = 0xE200000000000000;
    }
    *(void *)(v0 + 136) = sub_100254634(v10, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Got back from call to peripheralConnectionMaterial(forAccessoryIdentifier:) for identifier %s with result (is FindMy-paired) %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (!v2) {
      goto LABEL_12;
    }
  }
  else
  {
    (*(void (**)(void, void))(v0 + 232))(*(void *)(v0 + 192), *(void *)(v0 + 176));

    if (!v2) {
      goto LABEL_12;
    }
  }

LABEL_12:
  **(unsigned char **)(v0 + 15sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v2 != 0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_10063B580()
{
  uint64_t v13 = v0;
  uint64_t v1 = *(void **)(v0 + 240);
  swift_willThrow();
  swift_errorRelease();

  (*(void (**)(void, void, void))(v0 + 216))(*(void *)(v0 + 192), *(void *)(v0 + 160), *(void *)(v0 + 176));
  id v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void *)(v0 + 192);
    unint64_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
    uint64_t v5 = *(void *)(v0 + 176);
    uint64_t v6 = swift_slowAlloc();
    v12[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_100655CC8((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v7 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 128) = sub_100254634(v7, v8, v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v11(v4, v5);
    *(_WORD *)(v6 + 1sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
    *(void *)(v0 + 136) = sub_100254634(28526, 0xE200000000000000, v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Got back from call to peripheralConnectionMaterial(forAccessoryIdentifier:) for identifier %s with result (is FindMy-paired) %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v0 + 232))(*(void *)(v0 + 192), *(void *)(v0 + 176));
  }

  **(unsigned char **)(v0 + 15sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_10063B7EC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_10000A844(&qword_10096BAF0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    **(void **)(*(void *)(v3 + 64) + 4sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = a2;
    id v8 = a2;
    return swift_continuation_throwingResume();
  }
}

void sub_10063B8A4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = (char *)Strong;
    uint64_t v17 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
    uint64_t v18 = *(void *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
    uint64_t v19 = *(void **)(v18 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_findMyUnpairAlert);
    *(void *)(v18 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_findMyUnpairAlert) = 0;

    if (a1 == 1)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      sub_10000B47C(v20, (uint64_t)qword_10097C7F0);
      uint64_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        uint64_t v30 = a3;
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "User chose to continue pairing", v23, 2u);
        swift_slowDealloc();
      }

      static Date.now.getter();
      Date.timeIntervalSince(_:)();
      double v25 = v24;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      if ((a5 & 1) == 0 && a4 == 4) {
        *(unsigned char *)(*(void *)&v16[v17]
      }
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_shouldFindMyPairOnSuccess) = 1;
      sub_100638F5C(v25 > 18.0);
    }
    else
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v26 = type metadata accessor for Logger();
      sub_10000B47C(v26, (uint64_t)qword_10097C7F0);
      uint64_t v27 = Logger.logObject.getter();
      os_log_type_t v28 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v27, v28))
      {
        id v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v29 = 0;
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "User chose to stop pairing", v29, 2u);
        swift_slowDealloc();
      }

      sub_10063BBC0(a6);
    }
  }
}

uint64_t sub_10063BBC0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v21 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v19 = *(void *)(v7 - 8);
  uint64_t v20 = v7;
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  v18[1] = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_100654958;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  uint64_t aBlock[3] = &unk_1008E2B30;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  os_log_type_t v22 = _swiftEmptyArrayStorage;
  sub_100655CC8((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v20);
  swift_release();
  return swift_release();
}

void sub_10063BF80(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    *(unsigned char *)(*(void *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
             + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_finishedCheckingFindMyStatus) = 1;
    if (a2) {
      sub_100631B68(1);
    }
    sub_100622BA0();
  }
}

uint64_t sub_10063C000(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v7 = (void *)result;
    if (*(void *)(*(void *)(result + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                   + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral))
      [*(id *)(result + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central) cancelPeripheralConnection:];
    sub_100629E00(0);
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v5, a2, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    sub_100628DD4((uint64_t)v5, 0);

    return sub_10000A7E8((uint64_t)v5, &qword_100974EA0);
  }
  return result;
}

uint64_t sub_10063C194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[17] = a4;
  uint64_t v5 = type metadata accessor for UUID();
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  return _swift_task_switch(sub_10063C254, 0, 0);
}

uint64_t sub_10063C254()
{
  id v1 = [objc_allocWithZone((Class)SPAccessoryDiscoveryAndPairingSession) initWithPreviousState:0];
  v0[21] = v1;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  v0[22] = sub_10000B47C(v2, (uint64_t)qword_10097C7F0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FindMy-pairing this Pencil...", v5, 2u);
    swift_slowDealloc();
  }
  uint64_t v7 = v0[19];
  uint64_t v6 = v0[20];
  uint64_t v9 = (void *)v0[17];
  uint64_t v8 = v0[18];

  id v10 = [v9 identifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  v0[23] = isa;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_10063C49C;
  uint64_t v12 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10063C86C;
  v0[13] = &unk_1008E2A78;
  v0[14] = v12;
  [v1 initiatePairingAndLocateAccessoryWith:isa completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10063C49C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 19sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v1;
  if (v1) {
    uint64_t v2 = sub_10063C698;
  }
  else {
    uint64_t v2 = sub_10063C5AC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10063C5AC()
{
  uint64_t v1 = *(void **)(v0 + 120);

  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void **)(v0 + 168);
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Pencil is FindMy-paired", v6, 2u);
    swift_slowDealloc();
  }

  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10063C698()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v2 = (void *)v0[21];
  swift_willThrow();

  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to FindMy-pair this Pencil with error: %@", v5, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10063C86C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a2)
  {
    sub_10000A844(&qword_10096BAF0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a2;
    id v7 = a2;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    uint64_t v11 = a3;
    uint64_t v8 = *(void *)(*(void *)(v3 + 64) + 40);
    id v9 = a3;
    sub_10024D388((uint64_t)&v11, v8, &qword_10097D2A8);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_10063C938()
{
  return 0x72655065726F7473;
}

unint64_t sub_10063C95C()
{
  return 0xD000000000000041;
}

void sub_10063C978(char a1)
{
  if (*(unsigned char *)(*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) == 1)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000B47C(v3, (uint64_t)qword_10097C7F0);
    os_log_type_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 67109120;
      LODWORD(aBlock[0]) = a1 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "showPairConsentPrompt. inViewService: %{BOOL}d", v6, 8u);
      swift_slowDealloc();
    }

    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v11 = Strong;
      sub_10061E12C(v11, 1);
      aBlock[4] = sub_1006414A0;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100444120;
      uint64_t aBlock[3] = &unk_1008E2C28;
      uint64_t v12 = _Block_copy(aBlock);
      id v13 = [v11 remoteObjectProxyWithErrorHandler:v12];
      _Block_release(v12);
      [(id)swift_unknownObjectRetain() showPairConsentPrompt];
      swift_unknownObjectRelease_n();
    }
  }
  else
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10000B47C(v7, (uint64_t)qword_10097C7F0);
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "ignore showPairConsentPrompt, UI updates disabled for current session state", v9, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_10063CC8C()
{
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  if (*(unsigned char *)(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) == 1)
  {
    uint64_t v2 = v0;
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10000B47C(v3, (uint64_t)qword_10097C7F0);
    os_log_type_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "showUnlockPrompt", v6, 2u);
      swift_slowDealloc();
    }

    uint64_t v7 = *(void *)(v2 + v1);
    if (*(unsigned char *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needsUnlockPrompt) == 1)
    {
      *(unsigned char *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needsUnlockPrompt) = 0;
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        id v9 = Strong;
        sub_10061E12C(Strong, 1);
        aBlock[4] = sub_100641494;
        aBlock[5] = 0;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100444120;
        uint64_t aBlock[3] = &unk_1008E2C78;
        uint64_t v10 = _Block_copy(aBlock);
        id v11 = [v9 remoteObjectProxyWithErrorHandler:v10];
        _Block_release(v10);
        [v11 showUnlockPrompt];

        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10000B47C(v12, (uint64_t)qword_10097C7F0);
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v13, "ignore showUnlockPrompt, UI updates disabled for current session state", v14, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_10063CF54(uint64_t a1)
{
}

unint64_t sub_10063CF60(uint64_t a1)
{
  unint64_t result = 0x6E776F6E6B6E55;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 842216258;
      break;
    case 2:
      unint64_t result = 842150466;
      break;
    case 3:
      unint64_t result = 842544194;
      break;
    case 4:
      unint64_t result = 842216770;
      break;
    default:
      _StringGuts.grow(_:)(46);
      swift_bridgeObjectRelease();
      v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v3);
      swift_bridgeObjectRelease();
      v4._uint64_t countAndFlagsBits = 125;
      v4._id object = (void *)0xE100000000000000;
      String.append(_:)(v4);
      unint64_t result = 0xD00000000000002BLL;
      break;
  }
  return result;
}

void sub_10063D09C(uint64_t a1)
{
}

void sub_10063D0A8(uint64_t a1)
{
}

void sub_10063D0B4(uint64_t a1)
{
}

void sub_10063D0C0(uint64_t a1)
{
}

void sub_10063D0CC(uint64_t a1)
{
}

uint64_t sub_10063D0D8()
{
  v1[7] = v0;
  uint64_t v2 = type metadata accessor for ContinuousClock.Instant();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for ContinuousClock();
  v1[12] = v3;
  v1[13] = *(void *)(v3 - 8);
  v1[14] = swift_task_alloc();
  return _swift_task_switch(sub_10063D204, 0, 0);
}

uint64_t sub_10063D204()
{
  if (BKSHIDServicesIsSmartCoverClosed())
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_10000B47C(v1, (uint64_t)qword_10097C7F0);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v2, v3)) {
      goto LABEL_30;
    }
    Swift::String v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v4 = 0;
    uint64_t v5 = "Not showing Pencil UI because cover is closed";
    goto LABEL_29;
  }
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v7 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sbHasStarted;
  if (*(unsigned char *)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sbHasStarted))
  {
    char v8 = 1;
    char v9 = 1;
  }
  else
  {
    char v9 = sub_10061E9EC();
    char v8 = *(unsigned char *)(v6 + v7);
  }
  *(unsigned char *)(v6 + v7) = v9 & 1;
  sub_10061E87C(v8);
  if (*(unsigned char *)(v6 + v7) != 1)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_10000B47C(v20, (uint64_t)qword_10097C7F0);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v2, v3)) {
      goto LABEL_30;
    }
    Swift::String v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v4 = 0;
    uint64_t v5 = "Not showing Pencil UI because SpringBoard hasn't started";
    goto LABEL_29;
  }
  uint64_t v10 = *(void *)(v0 + 56);
  uint64_t v11 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor;
  *(void *)(v0 + 12sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor;
  if ([*(id *)(v10 + v11) screenOn])
  {
LABEL_19:
    if ([*(id *)(*(void *)(v0 + 56) + *(void *)(v0 + 120)) screenOn])
    {
      uint64_t v19 = 1;
LABEL_31:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      os_log_type_t v22 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v22(v19);
    }
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_10000B47C(v21, (uint64_t)qword_10097C7F0);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v2, v3))
    {
LABEL_30:

      uint64_t v19 = 0;
      goto LABEL_31;
    }
    Swift::String v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v4 = 0;
    uint64_t v5 = "Not showing Pencil UI because screen isn't on";
LABEL_29:
    _os_log_impl((void *)&_mh_execute_header, v2, v3, v5, v4, 2u);
    swift_slowDealloc();
    goto LABEL_30;
  }
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  *(void *)(v0 + 128) = sub_10000B47C(v12, (uint64_t)qword_10097C7F0);
  os_log_type_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Turning on screen for showing Pencil UI...", v15, 2u);
    swift_slowDealloc();
  }

  SBSUndimScreen();
  if ([*(id *)(v10 + v11) screenOn])
  {
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Turned on screen for showing Pencil UI", v18, 2u);
      swift_slowDealloc();
    }

    goto LABEL_19;
  }
  uint64_t v25 = *(void *)(v0 + 72);
  uint64_t v24 = *(void *)(v0 + 80);
  uint64_t v26 = *(void *)(v0 + 64);
  uint64_t v27 = static Duration.seconds(_:)();
  uint64_t v29 = v28;
  ContinuousClock.init()();
  *(void *)(v0 + 4sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v27;
  *(void *)(v0 + 48) = v29;
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 3sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 1;
  uint64_t v30 = sub_100655CC8(&qword_10096C670, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  dispatch thunk of Clock.now.getter();
  sub_100655CC8(&qword_10096C678, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)();
  NSString v31 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  *(void *)(v0 + 136) = v31;
  *(void *)(v0 + 144) = (v25 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v31(v24, v26);
  uint64_t v32 = (void *)swift_task_alloc();
  *(void *)(v0 + 15sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v32;
  *uint64_t v32 = v0;
  v32[1] = sub_10063D7D8;
  uint64_t v34 = *(void *)(v0 + 88);
  uint64_t v33 = *(void *)(v0 + 96);
  return dispatch thunk of Clock.sleep(until:tolerance:)(v34, v0 + 16, v33, v30);
}

uint64_t sub_10063D7D8()
{
  uint64_t v2 = *(void **)v1;
  os_log_type_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 136);
  uint64_t v4 = *(void *)(*(void *)v1 + 88);
  uint64_t v5 = *(void *)(*(void *)v1 + 64);
  *(void *)(*(void *)v1 + 16sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v0;
  swift_task_dealloc();
  v3(v4, v5);
  if (v0)
  {
    uint64_t v6 = sub_10063DCF4;
  }
  else
  {
    (*(void (**)(void, void))(v2[13] + 8))(v2[14], v2[12]);
    uint64_t v6 = sub_10063D970;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_10063D970()
{
  if ([*(id *)(*(void *)(v0 + 56) + *(void *)(v0 + 120)) screenOn])
  {
    uint64_t v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v1, v2))
    {
      os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "Turned on screen for showing Pencil UI", v3, 2u);
      swift_slowDealloc();
    }

    id v4 = [*(id *)(*(void *)(v0 + 56) + *(void *)(v0 + 120)) screenOn];
    if ((v4 & 1) == 0)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      sub_10000B47C(v5, (uint64_t)qword_10097C7F0);
      uint64_t v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "Not showing Pencil UI because screen isn't on", v8, 2u);
        swift_slowDealloc();
      }
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v9 = *(uint64_t (**)(id))(v0 + 8);
    return v9(v4);
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 72);
    uint64_t v11 = *(void *)(v0 + 80);
    uint64_t v13 = *(void *)(v0 + 64);
    uint64_t v14 = static Duration.seconds(_:)();
    uint64_t v16 = v15;
    ContinuousClock.init()();
    *(void *)(v0 + 4sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v14;
    *(void *)(v0 + 48) = v16;
    *(void *)(v0 + 24) = 0;
    *(void *)(v0 + 16) = 0;
    *(unsigned char *)(v0 + 3sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 1;
    uint64_t v17 = sub_100655CC8(&qword_10096C670, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
    dispatch thunk of Clock.now.getter();
    sub_100655CC8(&qword_10096C678, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    *(void *)(v0 + 136) = v18;
    *(void *)(v0 + 144) = (v12 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v18(v11, v13);
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 15sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_10063D7D8;
    uint64_t v21 = *(void *)(v0 + 88);
    uint64_t v20 = *(void *)(v0 + 96);
    return dispatch thunk of Clock.sleep(until:tolerance:)(v21, v0 + 16, v20, v17);
  }
}

uint64_t sub_10063DCF4()
{
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if ([*(id *)(*(void *)(v0 + 56) + *(void *)(v0 + 120)) screenOn])
  {
    id v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Turned on screen for showing Pencil UI", v6, 2u);
      swift_slowDealloc();
    }

    id v7 = [*(id *)(*(void *)(v0 + 56) + *(void *)(v0 + 120)) screenOn];
    if ((v7 & 1) == 0)
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      sub_10000B47C(v8, (uint64_t)qword_10097C7F0);
      char v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v11 = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "Not showing Pencil UI because screen isn't on", v11, 2u);
        swift_slowDealloc();
      }
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(id))(v0 + 8);
    return v12(v7);
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 72);
    uint64_t v14 = *(void *)(v0 + 80);
    uint64_t v16 = *(void *)(v0 + 64);
    uint64_t v17 = static Duration.seconds(_:)();
    uint64_t v19 = v18;
    ContinuousClock.init()();
    *(void *)(v0 + 4sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v17;
    *(void *)(v0 + 48) = v19;
    *(void *)(v0 + 16) = 0;
    *(void *)(v0 + 24) = 0;
    *(unsigned char *)(v0 + 3sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 1;
    uint64_t v20 = sub_100655CC8(&qword_10096C670, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
    dispatch thunk of Clock.now.getter();
    sub_100655CC8(&qword_10096C678, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    *(void *)(v0 + 136) = v21;
    *(void *)(v0 + 144) = (v15 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v21(v14, v16);
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 15sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_10063D7D8;
    uint64_t v24 = *(void *)(v0 + 88);
    uint64_t v23 = *(void *)(v0 + 96);
    return dispatch thunk of Clock.sleep(until:tolerance:)(v24, v0 + 16, v23, v20);
  }
}

uint64_t sub_10063E09C()
{
  v1[13] = v0;
  uint64_t v2 = type metadata accessor for ContinuousClock.Instant();
  v1[14] = v2;
  v1[15] = *(void *)(v2 - 8);
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for ContinuousClock();
  v1[18] = v3;
  v1[19] = *(void *)(v3 - 8);
  v1[20] = swift_task_alloc();
  return _swift_task_switch(sub_10063E1C8, 0, 0);
}

uint64_t sub_10063E1C8()
{
  v0[21] = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_uiAgentConnection;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  if (Strong)
  {
LABEL_12:
    uint64_t v10 = swift_unknownObjectWeakLoadStrong();
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      v0[6] = sub_10063F224;
      v0[7] = 0;
      v0[2] = _NSConcreteStackBlock;
      v0[3] = 1107296256;
      v0[4] = sub_100444120;
      v0[5] = &unk_1008E2F20;
      uint64_t v12 = _Block_copy(v0 + 2);
      id v13 = [v11 remoteObjectProxyWithErrorHandler:v12];
      _Block_release(v12);
    }
    else
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      sub_10000B47C(v14, (uint64_t)qword_10097C7F0);
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Not showing Pencil UI because UI agent is not connected", v17, 2u);
        swift_slowDealloc();
      }

      uint64_t v11 = 0;
      id v13 = 0;
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void *, id))v0[1];
    return v18(v11, v13);
  }
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  v0[22] = sub_10000B47C(v2, (uint64_t)qword_10097C7F0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Connecting to UI agent for showing Pencil UI...", v5, 2u);
    swift_slowDealloc();
  }

  if (qword_100969E10 != -1) {
    swift_once();
  }
  sub_100446124();
  uint64_t v6 = (void *)swift_unknownObjectWeakLoadStrong();

  if (v6)
  {
    id v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      char v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Connected to UI agent for showing Pencil UI", v9, 2u);
      swift_slowDealloc();
    }

    goto LABEL_12;
  }
  uint64_t v21 = v0[15];
  uint64_t v20 = v0[16];
  uint64_t v22 = v0[14];
  uint64_t v23 = static Duration.seconds(_:)();
  uint64_t v25 = v24;
  ContinuousClock.init()();
  v0[11] = v23;
  v0[12] = v25;
  v0[9] = 0;
  v0[8] = 0;
  *((unsigned char *)v0 + 8sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = 1;
  uint64_t v26 = sub_100655CC8(&qword_10096C670, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  dispatch thunk of Clock.now.getter();
  sub_100655CC8(&qword_10096C678, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v0[23] = v27;
  v0[24] = (v21 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v27(v20, v22);
  uint64_t v28 = (void *)swift_task_alloc();
  v0[25] = v28;
  *uint64_t v28 = v0;
  v28[1] = sub_10063E6F4;
  uint64_t v30 = v0[17];
  uint64_t v29 = v0[18];
  return dispatch thunk of Clock.sleep(until:tolerance:)(v30, v0 + 8, v29, v26);
}

uint64_t sub_10063E6F4()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 184);
  uint64_t v4 = *(void *)(*(void *)v1 + 136);
  uint64_t v5 = *(void *)(*(void *)v1 + 112);
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  v3(v4, v5);
  if (v0)
  {
    uint64_t v6 = sub_10063ECA4;
  }
  else
  {
    (*(void (**)(void, void))(v2[19] + 8))(v2[20], v2[18]);
    uint64_t v6 = sub_10063E88C;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_10063E88C()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  if (Strong)
  {
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Connected to UI agent for showing Pencil UI", v4, 2u);
      swift_slowDealloc();
    }

    uint64_t v5 = swift_unknownObjectWeakLoadStrong();
    if (v5)
    {
      uint64_t v6 = (void *)v5;
      v0[6] = sub_10063F224;
      v0[7] = 0;
      v0[2] = _NSConcreteStackBlock;
      v0[3] = 1107296256;
      v0[4] = sub_100444120;
      v0[5] = &unk_1008E2F20;
      id v7 = _Block_copy(v0 + 2);
      id v8 = [v6 remoteObjectProxyWithErrorHandler:v7];
      _Block_release(v7);
    }
    else
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      sub_10000B47C(v20, (uint64_t)qword_10097C7F0);
      uint64_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "Not showing Pencil UI because UI agent is not connected", v23, 2u);
        swift_slowDealloc();
      }

      uint64_t v6 = 0;
      id v8 = 0;
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void *, id))v0[1];
    return v24(v6, v8);
  }
  else
  {
    uint64_t v10 = v0[15];
    uint64_t v9 = v0[16];
    uint64_t v11 = v0[14];
    uint64_t v12 = static Duration.seconds(_:)();
    uint64_t v14 = v13;
    ContinuousClock.init()();
    v0[11] = v12;
    v0[12] = v14;
    v0[9] = 0;
    v0[8] = 0;
    *((unsigned char *)v0 + 8sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = 1;
    uint64_t v15 = sub_100655CC8(&qword_10096C670, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
    dispatch thunk of Clock.now.getter();
    sub_100655CC8(&qword_10096C678, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)();
    os_log_type_t v16 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v0[23] = v16;
    v0[24] = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v16(v9, v11);
    uint64_t v17 = (void *)swift_task_alloc();
    v0[25] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_10063E6F4;
    uint64_t v19 = v0[17];
    uint64_t v18 = v0[18];
    return dispatch thunk of Clock.sleep(until:tolerance:)(v19, v0 + 8, v18, v15);
  }
}

uint64_t sub_10063ECA4()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  if (Strong)
  {
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Connected to UI agent for showing Pencil UI", v7, 2u);
      swift_slowDealloc();
    }

    uint64_t v8 = swift_unknownObjectWeakLoadStrong();
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      v0[6] = sub_10063F224;
      v0[7] = 0;
      v0[2] = _NSConcreteStackBlock;
      v0[3] = 1107296256;
      v0[4] = sub_100444120;
      v0[5] = &unk_1008E2F20;
      uint64_t v10 = _Block_copy(v0 + 2);
      id v11 = [v9 remoteObjectProxyWithErrorHandler:v10];
      _Block_release(v10);
    }
    else
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v23 = type metadata accessor for Logger();
      sub_10000B47C(v23, (uint64_t)qword_10097C7F0);
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v26 = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Not showing Pencil UI because UI agent is not connected", v26, 2u);
        swift_slowDealloc();
      }

      uint64_t v9 = 0;
      id v11 = 0;
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = (uint64_t (*)(void *, id))v0[1];
    return v27(v9, v11);
  }
  else
  {
    uint64_t v13 = v0[15];
    uint64_t v12 = v0[16];
    uint64_t v14 = v0[14];
    uint64_t v15 = static Duration.seconds(_:)();
    uint64_t v17 = v16;
    ContinuousClock.init()();
    v0[11] = v15;
    v0[12] = v17;
    v0[8] = 0;
    v0[9] = 0;
    *((unsigned char *)v0 + 8sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = 1;
    uint64_t v18 = sub_100655CC8(&qword_10096C670, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
    dispatch thunk of Clock.now.getter();
    sub_100655CC8(&qword_10096C678, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)();
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v0[23] = v19;
    v0[24] = (v13 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v19(v12, v14);
    uint64_t v20 = (void *)swift_task_alloc();
    v0[25] = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_10063E6F4;
    uint64_t v22 = v0[17];
    uint64_t v21 = v0[18];
    return dispatch thunk of Clock.sleep(until:tolerance:)(v22, v0 + 8, v21, v18);
  }
}

id sub_10063F0E0(void *a1, Swift::Int a2)
{
  NSString v4 = String._bridgeToObjectiveC()();
  [a1 setPattern:v4];

  [a1 setDeviceType:0];
  [a1 setSenderID:0];
  sub_10000B740(0, (unint64_t *)&qword_1009745A0);
  Class isa = NSNumber.init(integerLiteral:)(a2).super.super.isa;
  [a1 setPowerSourceID:isa];

  uint64_t v6 = mach_absolute_time();

  return [a1 setTimestamp:v6];
}

void sub_10063F1D8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

void sub_10063F224(uint64_t a1)
{
}

uint64_t sub_10063F230()
{
  v1[18] = v0;
  uint64_t v2 = type metadata accessor for ContinuousClock.Instant();
  v1[19] = v2;
  v1[20] = *(void *)(v2 - 8);
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  v1[23] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for ContinuousClock();
  v1[24] = v3;
  v1[25] = *(void *)(v3 - 8);
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  return _swift_task_switch(sub_10063F378, 0, 0);
}

uint64_t sub_10063F378()
{
  uint64_t v1 = *(void *)(v0 + 144);
  sub_1006412B8();
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  *(void *)(v0 + 224) = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v3 = *(void *)(v1 + v2);
  int v4 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_remoteHandleActivated);
  if (v4 == 2)
  {
    uint64_t v5 = *(void *)(v0 + 176);
    uint64_t v6 = *(void *)(v0 + 152);
    uint64_t v7 = *(void *)(v0 + 160);
    uint64_t v8 = static Duration.seconds(_:)();
    uint64_t v10 = v9;
    ContinuousClock.init()();
    *(void *)(v0 + 11sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v8;
    *(void *)(v0 + 12sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v10;
    *(void *)(v0 + 7sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 0;
    *(void *)(v0 + 64) = 0;
    uint64_t v11 = v0 + 64;
    *(unsigned char *)(v0 + 8sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = 1;
    uint64_t v12 = sub_100655CC8(&qword_10096C670, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
    dispatch thunk of Clock.now.getter();
    sub_100655CC8(&qword_10096C678, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    *(void *)(v0 + 23sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v13;
    *(void *)(v0 + 24sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v13(v5, v6);
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_10063F9D8;
    uint64_t v16 = *(void *)(v0 + 184);
    uint64_t v15 = *(void *)(v0 + 192);
LABEL_10:
    return dispatch thunk of Clock.sleep(until:tolerance:)(v16, v11, v15, v12);
  }
  if ((v4 & 1) == 0)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_10000B47C(v17, (uint64_t)qword_10097C7F0);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v18, v19)) {
      goto LABEL_25;
    }
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    uint64_t v21 = "Not showing fake first-pair UI because view service could not be activated";
LABEL_24:
    _os_log_impl((void *)&_mh_execute_header, v18, v19, v21, v20, 2u);
    swift_slowDealloc();
LABEL_25:

    uint64_t v33 = 0;
    id v35 = 0;
    goto LABEL_26;
  }
  int v22 = *(unsigned __int8 *)(v3
                           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceXPCConnectionEstablished);
  if (v22 == 2)
  {
    uint64_t v23 = *(void *)(v0 + 176);
    uint64_t v24 = *(void *)(v0 + 152);
    uint64_t v25 = *(void *)(v0 + 160);
    uint64_t v26 = static Duration.seconds(_:)();
    uint64_t v28 = v27;
    ContinuousClock.init()();
    *(void *)(v0 + 128) = v26;
    *(void *)(v0 + 136) = v28;
    *(void *)(v0 + 96) = 0;
    *(void *)(v0 + 88) = 0;
    uint64_t v11 = v0 + 88;
    *(unsigned char *)(v0 + 104) = 1;
    uint64_t v12 = sub_100655CC8(&qword_10096C670, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
    dispatch thunk of Clock.now.getter();
    sub_100655CC8(&qword_10096C678, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)();
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    *(void *)(v0 + 264) = v29;
    *(void *)(v0 + 27sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = (v25 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v29(v23, v24);
    uint64_t v30 = (void *)swift_task_alloc();
    *(void *)(v0 + 28sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v30;
    *uint64_t v30 = v0;
    v30[1] = sub_10064084C;
    uint64_t v15 = *(void *)(v0 + 192);
    uint64_t v16 = *(void *)(v0 + 168);
    goto LABEL_10;
  }
  if ((v22 & 1) == 0)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v31 = type metadata accessor for Logger();
    sub_10000B47C(v31, (uint64_t)qword_10097C7F0);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v18, v19)) {
      goto LABEL_25;
    }
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    uint64_t v21 = "Not showing fake first-pair UI because view service XPC connection could not be established";
    goto LABEL_24;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    sub_10000B47C(v36, (uint64_t)qword_10097C7F0);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v18, v19)) {
      goto LABEL_25;
    }
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    uint64_t v21 = "Not showing fake first-pair UI because view service is not connected";
    goto LABEL_24;
  }
  uint64_t v33 = (void *)Strong;
  *(void *)(v0 + 48) = sub_100641488;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 3sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = sub_100444120;
  *(void *)(v0 + 4sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = &unk_1008E3BF0;
  uint64_t v34 = _Block_copy((const void *)(v0 + 16));
  id v35 = [v33 remoteObjectProxyWithErrorHandler:v34];
  _Block_release(v34);
LABEL_26:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v37 = *(uint64_t (**)(void *, id))(v0 + 8);
  return v37(v33, v35);
}

uint64_t sub_10063F9D8()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 232);
  uint64_t v4 = *(void *)(*(void *)v1 + 184);
  uint64_t v5 = *(void *)(*(void *)v1 + 152);
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  v3(v4, v5);
  if (v0)
  {
    uint64_t v6 = sub_1006401C4;
  }
  else
  {
    (*(void (**)(void, void))(v2[25] + 8))(v2[27], v2[24]);
    uint64_t v6 = sub_10063FB70;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_10063FB70()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 144) + *(void *)(v0 + 224));
  int v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_remoteHandleActivated);
  if (v2 == 2)
  {
    uint64_t v3 = *(void *)(v0 + 176);
    uint64_t v4 = *(void *)(v0 + 152);
    uint64_t v5 = *(void *)(v0 + 160);
    uint64_t v6 = static Duration.seconds(_:)();
    uint64_t v8 = v7;
    ContinuousClock.init()();
    *(void *)(v0 + 11sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v6;
    *(void *)(v0 + 12sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v8;
    *(void *)(v0 + 7sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 0;
    *(void *)(v0 + 64) = 0;
    uint64_t v9 = v0 + 64;
    *(unsigned char *)(v0 + 8sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = 1;
    uint64_t v10 = sub_100655CC8(&qword_10096C670, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
    dispatch thunk of Clock.now.getter();
    sub_100655CC8(&qword_10096C678, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    *(void *)(v0 + 23sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v11;
    *(void *)(v0 + 24sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v11(v3, v4);
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_10063F9D8;
    uint64_t v14 = *(void *)(v0 + 184);
    uint64_t v13 = *(void *)(v0 + 192);
LABEL_10:
    return dispatch thunk of Clock.sleep(until:tolerance:)(v14, v9, v13, v10);
  }
  if ((v2 & 1) == 0)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10000B47C(v15, (uint64_t)qword_10097C7F0);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v16, v17)) {
      goto LABEL_25;
    }
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    os_log_type_t v19 = "Not showing fake first-pair UI because view service could not be activated";
LABEL_24:
    _os_log_impl((void *)&_mh_execute_header, v16, v17, v19, v18, 2u);
    swift_slowDealloc();
LABEL_25:

    uint64_t v31 = 0;
    id v33 = 0;
    goto LABEL_26;
  }
  int v20 = *(unsigned __int8 *)(v1
                           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceXPCConnectionEstablished);
  if (v20 == 2)
  {
    uint64_t v21 = *(void *)(v0 + 176);
    uint64_t v22 = *(void *)(v0 + 152);
    uint64_t v23 = *(void *)(v0 + 160);
    uint64_t v24 = static Duration.seconds(_:)();
    uint64_t v26 = v25;
    ContinuousClock.init()();
    *(void *)(v0 + 128) = v24;
    *(void *)(v0 + 136) = v26;
    *(void *)(v0 + 96) = 0;
    *(void *)(v0 + 88) = 0;
    uint64_t v9 = v0 + 88;
    *(unsigned char *)(v0 + 104) = 1;
    uint64_t v10 = sub_100655CC8(&qword_10096C670, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
    dispatch thunk of Clock.now.getter();
    sub_100655CC8(&qword_10096C678, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)();
    uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    *(void *)(v0 + 264) = v27;
    *(void *)(v0 + 27sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = (v23 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v27(v21, v22);
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 28sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_10064084C;
    uint64_t v13 = *(void *)(v0 + 192);
    uint64_t v14 = *(void *)(v0 + 168);
    goto LABEL_10;
  }
  if ((v20 & 1) == 0)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_10000B47C(v29, (uint64_t)qword_10097C7F0);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v16, v17)) {
      goto LABEL_25;
    }
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    os_log_type_t v19 = "Not showing fake first-pair UI because view service XPC connection could not be established";
    goto LABEL_24;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    sub_10000B47C(v34, (uint64_t)qword_10097C7F0);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v16, v17)) {
      goto LABEL_25;
    }
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    os_log_type_t v19 = "Not showing fake first-pair UI because view service is not connected";
    goto LABEL_24;
  }
  uint64_t v31 = (void *)Strong;
  *(void *)(v0 + 48) = sub_100641488;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 3sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = sub_100444120;
  *(void *)(v0 + 4sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = &unk_1008E3BF0;
  uint64_t v32 = _Block_copy((const void *)(v0 + 16));
  id v33 = [v31 remoteObjectProxyWithErrorHandler:v32];
  _Block_release(v32);
LABEL_26:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v35 = *(uint64_t (**)(void *, id))(v0 + 8);
  return v35(v31, v33);
}

uint64_t sub_1006401C4()
{
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 200);
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v4 = *(void *)(*(void *)(v0 + 144) + *(void *)(v0 + 224));
  int v5 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_remoteHandleActivated);
  if (v5 == 2)
  {
    uint64_t v6 = *(void *)(v0 + 176);
    uint64_t v7 = *(void *)(v0 + 152);
    uint64_t v8 = *(void *)(v0 + 160);
    uint64_t v9 = static Duration.seconds(_:)();
    uint64_t v11 = v10;
    ContinuousClock.init()();
    *(void *)(v0 + 11sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v9;
    *(void *)(v0 + 12sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v11;
    *(void *)(v0 + 64) = 0;
    *(void *)(v0 + 7sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 0;
    *(unsigned char *)(v0 + 8sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = 1;
    uint64_t v12 = sub_100655CC8(&qword_10096C670, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
    dispatch thunk of Clock.now.getter();
    sub_100655CC8(&qword_10096C678, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    *(void *)(v0 + 23sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v13;
    *(void *)(v0 + 24sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = (v8 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v13(v6, v7);
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_10063F9D8;
    uint64_t v15 = *(void *)(v0 + 192);
    uint64_t v16 = *(void *)(v0 + 184);
    uint64_t v17 = v0 + 64;
    uint64_t v18 = v12;
LABEL_10:
    return dispatch thunk of Clock.sleep(until:tolerance:)(v16, v17, v15, v18);
  }
  if ((v5 & 1) == 0)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_10000B47C(v19, (uint64_t)qword_10097C7F0);
    int v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v20, v21)) {
      goto LABEL_25;
    }
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    uint64_t v23 = "Not showing fake first-pair UI because view service could not be activated";
LABEL_24:
    _os_log_impl((void *)&_mh_execute_header, v20, v21, v23, v22, 2u);
    swift_slowDealloc();
LABEL_25:

    uint64_t v36 = 0;
    id v38 = 0;
    goto LABEL_26;
  }
  int v24 = *(unsigned __int8 *)(v4
                           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceXPCConnectionEstablished);
  if (v24 == 2)
  {
    uint64_t v25 = *(void *)(v0 + 176);
    uint64_t v26 = *(void *)(v0 + 152);
    uint64_t v27 = *(void *)(v0 + 160);
    uint64_t v28 = static Duration.seconds(_:)();
    uint64_t v30 = v29;
    ContinuousClock.init()();
    *(void *)(v0 + 128) = v28;
    *(void *)(v0 + 136) = v30;
    *(void *)(v0 + 96) = 0;
    *(void *)(v0 + 88) = 0;
    *(unsigned char *)(v0 + 104) = 1;
    uint64_t v31 = sub_100655CC8(&qword_10096C670, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
    dispatch thunk of Clock.now.getter();
    sub_100655CC8(&qword_10096C678, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)();
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    *(void *)(v0 + 264) = v32;
    *(void *)(v0 + 27sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = (v27 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v32(v25, v26);
    id v33 = (void *)swift_task_alloc();
    *(void *)(v0 + 28sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v33;
    *id v33 = v0;
    v33[1] = sub_10064084C;
    uint64_t v15 = *(void *)(v0 + 192);
    uint64_t v16 = *(void *)(v0 + 168);
    uint64_t v17 = v0 + 88;
    uint64_t v18 = v31;
    goto LABEL_10;
  }
  if ((v24 & 1) == 0)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    sub_10000B47C(v34, (uint64_t)qword_10097C7F0);
    int v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v20, v21)) {
      goto LABEL_25;
    }
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    uint64_t v23 = "Not showing fake first-pair UI because view service XPC connection could not be established";
    goto LABEL_24;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v39 = type metadata accessor for Logger();
    sub_10000B47C(v39, (uint64_t)qword_10097C7F0);
    int v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v20, v21)) {
      goto LABEL_25;
    }
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    uint64_t v23 = "Not showing fake first-pair UI because view service is not connected";
    goto LABEL_24;
  }
  uint64_t v36 = (void *)Strong;
  *(void *)(v0 + 48) = sub_100641488;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 3sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = sub_100444120;
  *(void *)(v0 + 4sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = &unk_1008E3BF0;
  uint64_t v37 = _Block_copy((const void *)(v0 + 16));
  id v38 = [v36 remoteObjectProxyWithErrorHandler:v37];
  _Block_release(v37);
LABEL_26:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v40 = *(uint64_t (**)(void *, id))(v0 + 8);
  return v40(v36, v38);
}

uint64_t sub_10064084C()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 264);
  uint64_t v4 = *(void *)(*(void *)v1 + 168);
  uint64_t v5 = *(void *)(*(void *)v1 + 152);
  *(void *)(*(void *)v1 + 288) = v0;
  swift_task_dealloc();
  v3(v4, v5);
  if (v0)
  {
    uint64_t v6 = sub_100640E3C;
  }
  else
  {
    (*(void (**)(void, void))(v2[25] + 8))(v2[26], v2[24]);
    uint64_t v6 = sub_1006409E4;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_1006409E4()
{
  int v1 = *(unsigned __int8 *)(*(void *)(*(void *)(v0 + 144) + *(void *)(v0 + 224))
                          + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceXPCConnectionEstablished);
  if (v1 == 2)
  {
    uint64_t v2 = *(void *)(v0 + 176);
    uint64_t v3 = *(void *)(v0 + 152);
    uint64_t v4 = *(void *)(v0 + 160);
    uint64_t v5 = static Duration.seconds(_:)();
    uint64_t v7 = v6;
    ContinuousClock.init()();
    *(void *)(v0 + 128) = v5;
    *(void *)(v0 + 136) = v7;
    *(void *)(v0 + 96) = 0;
    *(void *)(v0 + 88) = 0;
    *(unsigned char *)(v0 + 104) = 1;
    uint64_t v8 = sub_100655CC8(&qword_10096C670, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
    dispatch thunk of Clock.now.getter();
    sub_100655CC8(&qword_10096C678, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    *(void *)(v0 + 264) = v9;
    *(void *)(v0 + 27sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v9(v2, v3);
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 28sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_10064084C;
    uint64_t v11 = *(void *)(v0 + 192);
    uint64_t v12 = *(void *)(v0 + 168);
    return dispatch thunk of Clock.sleep(until:tolerance:)(v12, v0 + 88, v11, v8);
  }
  if ((v1 & 1) == 0)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_10000B47C(v13, (uint64_t)qword_10097C7F0);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v14, v15)) {
      goto LABEL_17;
    }
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    uint64_t v17 = "Not showing fake first-pair UI because view service XPC connection could not be established";
LABEL_16:
    _os_log_impl((void *)&_mh_execute_header, v14, v15, v17, v16, 2u);
    swift_slowDealloc();
LABEL_17:

    uint64_t v19 = 0;
    id v21 = 0;
    goto LABEL_18;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_10000B47C(v22, (uint64_t)qword_10097C7F0);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v14, v15)) {
      goto LABEL_17;
    }
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    uint64_t v17 = "Not showing fake first-pair UI because view service is not connected";
    goto LABEL_16;
  }
  uint64_t v19 = (void *)Strong;
  *(void *)(v0 + 48) = sub_100641488;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 3sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = sub_100444120;
  *(void *)(v0 + 4sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = &unk_1008E3BF0;
  int v20 = _Block_copy((const void *)(v0 + 16));
  id v21 = [v19 remoteObjectProxyWithErrorHandler:v20];
  _Block_release(v20);
LABEL_18:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = *(uint64_t (**)(void *, id))(v0 + 8);
  return v23(v19, v21);
}

uint64_t sub_100640E3C()
{
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 192);
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  int v4 = *(unsigned __int8 *)(*(void *)(*(void *)(v0 + 144) + *(void *)(v0 + 224))
                          + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceXPCConnectionEstablished);
  if (v4 == 2)
  {
    uint64_t v5 = *(void *)(v0 + 176);
    uint64_t v6 = *(void *)(v0 + 152);
    uint64_t v7 = *(void *)(v0 + 160);
    uint64_t v8 = static Duration.seconds(_:)();
    uint64_t v10 = v9;
    ContinuousClock.init()();
    *(void *)(v0 + 128) = v8;
    *(void *)(v0 + 136) = v10;
    *(void *)(v0 + 88) = 0;
    *(void *)(v0 + 96) = 0;
    *(unsigned char *)(v0 + 104) = 1;
    uint64_t v11 = sub_100655CC8(&qword_10096C670, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
    dispatch thunk of Clock.now.getter();
    sub_100655CC8(&qword_10096C678, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
    dispatch thunk of InstantProtocol.advanced(by:)();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    *(void *)(v0 + 264) = v12;
    *(void *)(v0 + 27sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v12(v5, v6);
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 28sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_10064084C;
    uint64_t v14 = *(void *)(v0 + 192);
    uint64_t v15 = *(void *)(v0 + 168);
    return dispatch thunk of Clock.sleep(until:tolerance:)(v15, v0 + 88, v14, v11);
  }
  if ((v4 & 1) == 0)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10000B47C(v16, (uint64_t)qword_10097C7F0);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v17, v18)) {
      goto LABEL_17;
    }
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    int v20 = "Not showing fake first-pair UI because view service XPC connection could not be established";
LABEL_16:
    _os_log_impl((void *)&_mh_execute_header, v17, v18, v20, v19, 2u);
    swift_slowDealloc();
LABEL_17:

    uint64_t v22 = 0;
    id v24 = 0;
    goto LABEL_18;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_10000B47C(v25, (uint64_t)qword_10097C7F0);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v17, v18)) {
      goto LABEL_17;
    }
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    int v20 = "Not showing fake first-pair UI because view service is not connected";
    goto LABEL_16;
  }
  uint64_t v22 = (void *)Strong;
  *(void *)(v0 + 48) = sub_100641488;
  *(void *)(v0 + 56) = 0;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 3sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = sub_100444120;
  *(void *)(v0 + 4sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = &unk_1008E3BF0;
  uint64_t v23 = _Block_copy((const void *)(v0 + 16));
  id v24 = [v22 remoteObjectProxyWithErrorHandler:v23];
  _Block_release(v23);
LABEL_18:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = *(uint64_t (**)(void *, id))(v0 + 8);
  return v26(v22, v24);
}

void sub_1006412B8()
{
  uint64_t v1 = v0;
  id v2 = objc_allocWithZone((Class)SBSRemoteAlertDefinition);
  NSString v3 = String._bridgeToObjectiveC()();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 initWithServiceName:v3 viewControllerClassName:v4];

  id v12 = [objc_allocWithZone((Class)SBSRemoteAlertConfigurationContext) init];
  sub_10024592C((uint64_t)_swiftEmptyArrayStorage);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v12 setUserInfo:isa];

  uint64_t v7 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v8 = self;
  swift_retain();
  sub_10061D7B0([v8 newHandleWithDefinition:v5 configurationContext:v12]);
  swift_release();
  uint64_t v9 = *(void **)(*(void *)(v1 + v7) + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sbRemoteHandle);
  if (v9)
  {
    [v9 sd_addObserver:v1];
    uint64_t v10 = *(void **)(*(void *)(v1 + v7)
                   + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sbRemoteHandle);
    if (v10)
    {
      id v11 = v10;
      [v11 activateWithContext:0];
    }
  }
}

void sub_100641488(uint64_t a1)
{
}

void sub_100641494(uint64_t a1)
{
}

void sub_1006414A0(uint64_t a1)
{
}

void sub_1006414AC(uint64_t a1)
{
}

void sub_1006414B8()
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_10097C7F0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    NSString v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "acquireHUDTransaction", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    aBlock[4] = sub_1006416F8;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100444120;
    uint64_t aBlock[3] = &unk_1008E2F98;
    uint64_t v6 = _Block_copy(aBlock);
    id v7 = [v5 remoteObjectProxyWithErrorHandler:v6];
    _Block_release(v6);
    [v7 acquireHUDTransaction];

    swift_unknownObjectRelease();
  }
  else
  {
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "no UI service to retain", v9, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_1006416F8(uint64_t a1)
{
}

void sub_100641704(uint64_t a1)
{
}

void sub_100641710(uint64_t a1)
{
}

void sub_10064171C(uint64_t a1, const char *a2)
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000B47C(v3, (uint64_t)qword_10097C7F0);
  swift_errorRetain();
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)id v5 = 136315138;
    swift_getErrorValue();
    uint64_t v6 = Error.localizedDescription.getter();
    sub_100254634(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v4, a2, v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
}

uint64_t sub_100641910(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 3sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = a2;
  *(void *)(v4 + 4sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v3;
  *(unsigned char *)(v4 + 15sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = a3;
  *(void *)(v4 + 24) = a1;
  sub_10000A844(&qword_100974EA0);
  *(void *)(v4 + 48) = swift_task_alloc();
  *(void *)(v4 + 56) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for ContinuousClock();
  *(void *)(v4 + 64) = v5;
  *(void *)(v4 + 7sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = *(void *)(v5 - 8);
  *(void *)(v4 + 8sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = swift_task_alloc();
  *(void *)(v4 + 88) = swift_task_alloc();
  return _swift_task_switch(sub_100641A28, 0, 0);
}

uint64_t sub_100641A28()
{
  id v11 = v0;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[12] = sub_10000B47C(v1, (uint64_t)qword_10097C7F0);
  os_log_type_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[3];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    unint64_t v6 = sub_10063CF60(v4);
    v0[2] = sub_100254634(v6, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "showFakeFirstPairUI [type: %s]", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  os_log_type_t v8 = (void *)swift_task_alloc();
  v0[13] = v8;
  *os_log_type_t v8 = v0;
  v8[1] = sub_100641C20;
  return sub_10063D0D8();
}

uint64_t sub_100641C20(char a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  swift_task_dealloc();
  if (a1)
  {
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v3 + 11sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v5;
    *uint64_t v5 = v4;
    v5[1] = sub_100641DB4;
    return sub_10063F230();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v7 = *(uint64_t (**)(void))(v4 + 8);
    return v7();
  }
}

uint64_t sub_100641DB4(void *a1, uint64_t a2)
{
  *(void *)(*(void *)v2 + 12sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = a2;
  swift_task_dealloc();

  return _swift_task_switch(sub_100641EBC, 0, 0);
}

uint64_t sub_100641EBC()
{
  if (*(void *)(v0 + 120))
  {
    if (*(void *)(v0 + 24) == 3)
    {
      char v1 = *(unsigned char *)(v0 + 152);
      swift_unknownObjectRetain();
      uint64_t v2 = (void *)swift_task_alloc();
      *(void *)(v0 + 128) = v2;
      *uint64_t v2 = v0;
      v2[1] = sub_100642314;
      uint64_t v3 = *(void *)(v0 + 32);
      return sub_100642C18(3, v3, v1 & 1, 1, 1);
    }
    uint64_t v8 = *(void *)(v0 + 56);
    uint64_t v9 = *(void *)(v0 + 40);
    if (*(unsigned char *)(v0 + 152)) {
      double v10 = 0.0;
    }
    else {
      double v10 = *(double *)(v0 + 32);
    }
    uint64_t v11 = *(void *)(v9 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
        + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
    if (*(unsigned char *)(v11 + 8)) {
      uint64_t v12 = 0;
    }
    else {
      uint64_t v12 = *(void *)v11;
    }
    swift_unknownObjectRetain_n();
    UUID.init()();
    uint64_t v13 = type metadata accessor for UUID();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = 1;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
    unint64_t v16 = *(void *)(v9 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_orientation) - 1;
    if (v16 <= 3) {
      uint64_t v15 = qword_10077F590[v16];
    }
    uint64_t v17 = *(void *)(v0 + 48);
    sub_10024A330(*(void *)(v0 + 56), v17, &qword_100974EA0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v17, 1, v13) == 1)
    {
      Class isa = 0;
    }
    else
    {
      uint64_t v19 = *(void *)(v0 + 48);
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v19, v13);
    }
    int v20 = *(void **)(v0 + 120);
    uint64_t v21 = *(void *)(v0 + 56);
    uint64_t v22 = *(void *)(v0 + 24);
    [v20 updateDeviceInfoWithDeviceType:v12 batteryLevel:(*(unsigned char *)(v0 + 152) & 1) == 0 batteryLevelKnown:v15 edge:0 orientation:1 isCharging:isa identifier:v10];

    swift_unknownObjectRelease();
    sub_10000A7E8(v21, &qword_100974EA0);
    [v20 showPairingStarted];
    if (v22 == 4 || v22 == 1)
    {
      uint64_t v23 = static Duration.seconds(_:)();
      uint64_t v25 = v24;
      ContinuousClock.init()();
      uint64_t v29 = (char *)&dword_10096C598 + dword_10096C598;
      uint64_t v26 = (void *)swift_task_alloc();
      *(void *)(v0 + 144) = v26;
      void *v26 = v0;
      v26[1] = sub_1006429C8;
      return ((uint64_t (*)(uint64_t, uint64_t, void, void, uint64_t))v29)(v23, v25, 0, 0, 1);
    }
    uint64_t v27 = *(void **)(v0 + 120);
    [v27 setDeviceType:*(void *)(v0 + 24)];
    [v27 showPairingSuccess];
    swift_unknownObjectRelease_n();
  }
  else
  {
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      unint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Failed to get view service connection to show fake first-pair UI", v7, 2u);
      swift_slowDealloc();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t sub_100642314()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100642410, 0, 0);
}

uint64_t sub_100642410()
{
  uint64_t v1 = static Duration.seconds(_:)();
  uint64_t v3 = v2;
  ContinuousClock.init()();
  os_log_type_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10096C598 + dword_10096C598);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1006424F0;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_1006424F0()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v3 = v2[11];
  uint64_t v4 = v2[9];
  uint64_t v5 = v2[8];
  if (v0) {
    swift_errorRelease();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  return _swift_task_switch(sub_100642688, 0, 0);
}

uint64_t sub_100642688()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 40);
  if (*(unsigned char *)(v0 + 152)) {
    double v3 = 0.0;
  }
  else {
    double v3 = *(double *)(v0 + 32);
  }
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
     + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
  if (*(unsigned char *)(v4 + 8)) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = *(void *)v4;
  }
  swift_unknownObjectRetain();
  UUID.init()();
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = 1;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v1, 0, 1, v6);
  unint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_orientation) - 1;
  if (v9 <= 3) {
    uint64_t v8 = qword_10077F590[v9];
  }
  uint64_t v10 = *(void *)(v0 + 48);
  sub_10024A330(*(void *)(v0 + 56), v10, &qword_100974EA0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6) == 1)
  {
    Class isa = 0;
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 48);
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12, v6);
  }
  uint64_t v13 = *(void **)(v0 + 120);
  uint64_t v14 = *(void *)(v0 + 56);
  uint64_t v15 = *(void *)(v0 + 24);
  [v13 updateDeviceInfoWithDeviceType:v5 batteryLevel:(*(unsigned char *)(v0 + 152) & 1) == 0 batteryLevelKnown:v8 edge:0 orientation:1 isCharging:isa identifier:v3];

  swift_unknownObjectRelease();
  sub_10000A7E8(v14, &qword_100974EA0);
  [v13 showPairingStarted];
  if (v15 == 4 || v15 == 1)
  {
    uint64_t v16 = static Duration.seconds(_:)();
    uint64_t v18 = v17;
    ContinuousClock.init()();
    uint64_t v23 = (char *)&dword_10096C598 + dword_10096C598;
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_1006429C8;
    return ((uint64_t (*)(uint64_t, uint64_t, void, void, uint64_t))v23)(v16, v18, 0, 0, 1);
  }
  else
  {
    uint64_t v21 = *(void **)(v0 + 120);
    [v21 setDeviceType:*(void *)(v0 + 24)];
    [v21 showPairingSuccess];
    swift_unknownObjectRelease_n();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
}

uint64_t sub_1006429C8()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v3 = v2[10];
  uint64_t v4 = v2[9];
  uint64_t v5 = v2[8];
  if (v0)
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_1006562A0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_100642B60;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_100642B60()
{
  uint64_t v1 = (void *)v0[15];
  [v1 setDeviceType:v0[3]];
  [v1 showPairingSuccess];
  swift_unknownObjectRelease_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100642C18(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 104) = a5;
  *(void *)(v6 + 11sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v5;
  *(unsigned char *)(v6 + 277) = a4;
  *(unsigned char *)(v6 + 276) = a3;
  *(void *)(v6 + 88) = a1;
  *(void *)(v6 + 96) = a2;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  *(void *)(v6 + 12sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v7;
  *(void *)(v6 + 128) = *(void *)(v7 - 8);
  *(void *)(v6 + 136) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for DispatchQoS();
  *(void *)(v6 + 144) = v8;
  *(void *)(v6 + 15sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = *(void *)(v8 - 8);
  *(void *)(v6 + 16sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DispatchTimeInterval();
  *(void *)(v6 + 168) = v9;
  *(void *)(v6 + 176) = *(void *)(v9 - 8);
  *(void *)(v6 + 184) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for DispatchTime();
  *(void *)(v6 + 19sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v10;
  *(void *)(v6 + 20sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = *(void *)(v10 - 8);
  *(void *)(v6 + 208) = swift_task_alloc();
  *(void *)(v6 + 216) = swift_task_alloc();
  sub_10000A844(&qword_100974EA0);
  *(void *)(v6 + 224) = swift_task_alloc();
  *(void *)(v6 + 23sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = swift_task_alloc();
  return _swift_task_switch(sub_100642E48, 0, 0);
}

uint64_t sub_100642E48()
{
  uint64_t v16 = v0;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 24sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = sub_10000B47C(v1, (uint64_t)qword_10097C7F0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void *)(v0 + 88);
    char v5 = *(unsigned char *)(v0 + 276);
    uint64_t v6 = swift_slowAlloc();
    v15[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315650;
    unint64_t v7 = sub_10063CF60(v4);
    *(void *)(v0 + 7sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = sub_100254634(v7, v8, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 1sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
    if (v5)
    {
      v15[1] = 0;
      void v15[2] = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v11 = 0x80000001007C5A30;
      unint64_t v9 = 0xD000000000000015;
    }
    else
    {
      unint64_t v9 = Double.description.getter();
      unint64_t v11 = v10;
    }
    int v12 = *(unsigned __int8 *)(v0 + 277);
    *(void *)(v0 + 8sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = sub_100254634(v9, v11, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 2sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 1024;
    *(_DWORD *)(v0 + 27sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "showFakePill [type: %s, charge: %s, charging: %{BOOL}d]", (uint8_t *)v6, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1006430F4;
  return sub_10063D0D8();
}

uint64_t sub_1006430F4(char a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  swift_task_dealloc();
  if (a1)
  {
    char v5 = (void *)swift_task_alloc();
    *(void *)(v3 + 256) = v5;
    *char v5 = v4;
    v5[1] = sub_1006432B8;
    return sub_10063E09C();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v7 = *(uint64_t (**)(void))(v4 + 8);
    return v7();
  }
}

uint64_t sub_1006432B8(void *a1, uint64_t a2)
{
  *(void *)(*(void *)v2 + 264) = a2;
  swift_task_dealloc();

  return _swift_task_switch(sub_1006433C0, 0, 0);
}

uint64_t sub_1006433C0()
{
  uint64_t v1 = (void *)v0[33];
  if (v1)
  {
    uint64_t v2 = v0[29];
    uint64_t v3 = v0[14];
    char v4 = *((unsigned char *)v0 + 276);
    double v5 = *((double *)v0 + 12);
    [(id)swift_unknownObjectRetain() acquireHUDTransaction];
    if (v4) {
      double v5 = 0.0;
    }
    uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
       + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
    if (*(unsigned char *)(v6 + 8)) {
      uint64_t v7 = 0;
    }
    else {
      uint64_t v7 = *(void *)v6;
    }
    uint64_t v32 = v7;
    swift_unknownObjectRetain();
    UUID.init()();
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = 1;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
    unint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_orientation) - 1;
    if (v11 <= 3) {
      uint64_t v10 = qword_10077F590[v11];
    }
    uint64_t v12 = v0[28];
    sub_10024A330(v0[29], v12, &qword_100974EA0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v12, 1, v8) == 1)
    {
      Class isa = 0;
    }
    else
    {
      uint64_t v17 = v0[28];
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v17, v8);
    }
    uint64_t v18 = v0[29];
    uint64_t v19 = v0[26];
    int v20 = (void *)v0[23];
    uint64_t v29 = v0[24];
    uint64_t v30 = v0[27];
    uint64_t v22 = v0[21];
    uint64_t v21 = v0[22];
    uint64_t v38 = v0[19];
    uint64_t v39 = v0[18];
    uint64_t v34 = v0[20];
    uint64_t v35 = v0[17];
    uint64_t v36 = v0[15];
    uint64_t v37 = v0[16];
    uint64_t v27 = v0[13];
    uint64_t v28 = v0[25];
    [v1 updateDeviceInfoWithDeviceType:v32 batteryLevel:(*((unsigned char *)v0 + 276) & 1) == 0 batteryLevelKnown:v10 edge:0 orientation:*((unsigned __int8 *)v0 + 277) isCharging:isa identifier:v5];

    swift_unknownObjectRelease();
    sub_10000A7E8(v18, &qword_100974EA0);
    [v1 showChargingStatus];
    sub_10000B740(0, (unint64_t *)&qword_10096A1A0);
    uint64_t v31 = (void *)static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    *int v20 = v27;
    (*(void (**)(void *, void, uint64_t))(v21 + 104))(v20, enum case for DispatchTimeInterval.seconds(_:), v22);
    + infix(_:_:)();
    (*(void (**)(void *, uint64_t))(v21 + 8))(v20, v22);
    id v33 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v33(v19, v29);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v1;
    v0[6] = sub_100655C98;
    v0[7] = v23;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_100296520;
    v0[5] = &unk_1008E3BC8;
    uint64_t v24 = _Block_copy(v0 + 2);
    swift_unknownObjectRetain();
    static DispatchQoS.unspecified.getter();
    v0[8] = _swiftEmptyArrayStorage;
    sub_100655CC8((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v24);

    swift_unknownObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v34, v39);
    v33(v30, v29);
    swift_release();
  }
  else
  {
    uint64_t v14 = Logger.logObject.getter();
    uint64_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, (os_log_type_t)v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, (os_log_type_t)v15, "Failed to get HUD connection to show fake pill", v16, 2u);
      swift_slowDealloc();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_100643974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[15] = a5;
  v6[16] = a6;
  v6[14] = a4;
  type metadata accessor for MainActor();
  v6[17] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[18] = v8;
  v6[19] = v7;
  return _swift_task_switch(sub_100643A10, v8, v7);
}

uint64_t sub_100643A10()
{
  *(void *)(v0 + 88) = 0x656772616863;
  uint64_t v1 = *(void *)(v0 + 128);
  *(void *)(v0 + 96) = 0xE600000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_100583878(v0 + 16), (v3 & 1) != 0))
  {
    sub_10024D2D4(*(void *)(*(void *)(v0 + 128) + 56) + 32 * v2, v0 + 56);
  }
  else
  {
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 7sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 0u;
  }
  sub_10025B0A8(v0 + 16);
  if (*(void *)(v0 + 80))
  {
    int v4 = swift_dynamicCast();
    if (v4) {
      uint64_t v5 = *(void *)(v0 + 104);
    }
    else {
      uint64_t v5 = 0;
    }
    char v6 = v4 ^ 1;
  }
  else
  {
    sub_10000A7E8(v0 + 56, (uint64_t *)&unk_10096AC20);
    uint64_t v5 = 0;
    char v6 = 1;
  }
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 16sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100643B94;
  uint64_t v8 = *(void *)(v0 + 120);
  return sub_100641910(v8, v5, v6);
}

uint64_t sub_100643B94()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v3 = *(void *)(v1 + 144);
  return _swift_task_switch(sub_100655F98, v3, v2);
}

uint64_t sub_100643CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[15] = a5;
  v6[16] = a6;
  v6[14] = a4;
  type metadata accessor for MainActor();
  v6[17] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[18] = v8;
  v6[19] = v7;
  return _swift_task_switch(sub_100643D50, v8, v7);
}

uint64_t sub_100643D50()
{
  *(void *)(v0 + 88) = 0x656772616863;
  uint64_t v1 = *(void *)(v0 + 128);
  *(void *)(v0 + 96) = 0xE600000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_100583878(v0 + 16), (v3 & 1) != 0))
  {
    sub_10024D2D4(*(void *)(*(void *)(v0 + 128) + 56) + 32 * v2, v0 + 56);
  }
  else
  {
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 7sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 0u;
  }
  sub_10025B0A8(v0 + 16);
  if (*(void *)(v0 + 80))
  {
    int v4 = swift_dynamicCast();
    if (v4) {
      uint64_t v5 = *(void *)(v0 + 104);
    }
    else {
      uint64_t v5 = 0;
    }
    char v6 = v4 ^ 1;
  }
  else
  {
    sub_10000A7E8(v0 + 56, (uint64_t *)&unk_10096AC20);
    uint64_t v5 = 0;
    char v6 = 1;
  }
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 16sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100643EDC;
  uint64_t v8 = *(void *)(v0 + 120);
  return sub_100642C18(v8, v5, v6, 1, 5);
}

uint64_t sub_100643EDC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v3 = *(void *)(v1 + 144);
  return _swift_task_switch(sub_100643FFC, v3, v2);
}

uint64_t sub_100643FFC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10064405C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = type metadata accessor for MainActor();
  v6[3] = static MainActor.shared.getter();
  uint64_t v9 = (void *)swift_task_alloc();
  v6[4] = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_100644130;
  return sub_100642C18(a6, *(uint64_t *)&a1, 0, 0, 5);
}

uint64_t sub_100644130()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10064426C, v1, v0);
}

uint64_t sub_10064426C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1006442CC(uint64_t a1)
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097C7F0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "remoteAlertHandleDidActivate", v5, 2u);
    swift_slowDealloc();
  }

  *(unsigned char *)(*(void *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_remoteHandleActivated) = 1;
  sub_100622BA0();
}

uint64_t sub_100644454(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q];
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a2;
  uint64_t v13[3] = a1;
  void v13[4] = v2;
  aBlock[4] = sub_1006551B0;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100296520;
  uint64_t aBlock[3] = &unk_1008E30B0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_errorRetain();
  id v15 = a1;
  uint64_t v16 = v2;
  static DispatchQoS.unspecified.getter();
  v18[1] = _swiftEmptyArrayStorage;
  sub_100655CC8((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t sub_10064472C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10000B47C(v9, (uint64_t)qword_10097C7F0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    if (a1)
    {
      swift_getErrorValue();
      unint64_t v13 = Error.localizedDescription.getter();
      unint64_t v15 = v14;
    }
    else
    {
      uint64_t v19 = 0;
      unint64_t v20 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v15 = 0x80000001007B7770;
      unint64_t v13 = 0xD000000000000015;
    }
    uint64_t v19 = sub_100254634(v13, v15, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "remoteAlertHandle didInvalidateWithError: %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  [a2 removeObserver:a3];
  *(unsigned char *)(*(void *)(a3 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairingStarted) = 0;
  uint64_t v16 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
  sub_100628DD4((uint64_t)v8, 0);
  return sub_10000A7E8((uint64_t)v8, &qword_100974EA0);
}

void sub_100644AE4()
{
  uint64_t v1 = v0;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10000B47C(v2, (uint64_t)qword_10097C7F0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "pairTapped", v5, 2u);
    swift_slowDealloc();
  }

  *(unsigned char *)(*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
           + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_pairConsented) = 1;
  id v6 = [self sharedMonitor];
  if (v6)
  {
    uint64_t v7 = v6;
    [v6 setBluetoothEnabled:1];

    sub_100622BA0();
  }
  else
  {
    __break(1u);
  }
}

void sub_100644C74(uint64_t a1)
{
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionInProgress))
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_10000B47C(v2, (uint64_t)qword_10097C7F0);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "b222 UI connection in progress, ignoring, resetting attempt count", v5, 2u);
      swift_slowDealloc();
    }

    *(void *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_b222ConnectionAttempt) = 0;
  }
  else
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_10097C7F0);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "b222 showEducationUIIfNecessary", v9, 2u);
      swift_slowDealloc();
    }

    id v10 = objc_retain(*(id *)(*(void *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_defaults));
    if (sub_10056EBEC())
    {
      NSString v11 = String._bridgeToObjectiveC()();
      unsigned __int8 v12 = [v10 BOOLForKey:v11];

      if ((v12 & 1) == 0)
      {
        sub_10062BF40(0);
        return;
      }
    }
    else
    {
    }
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v13))
    {
      unint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v13, "b222 No need for any education UI.  Bailing", v14, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_1006450C8(void *a1)
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000B47C(v3, (uint64_t)qword_10097C7F0);
  os_log_type_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "XPC: connectionEstablished", v6, 2u);
    swift_slowDealloc();
  }

  id v7 = [a1 sd_connectionBundleID];
  if (v7)
  {
    os_log_type_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    if (v9 == 0xD00000000000001CLL && v11 == 0x80000001007B69C0
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
      swift_unknownObjectWeakAssign();
      *(unsigned char *)(v12
               + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceXPCConnectionEstablished) = 1;
      goto LABEL_21;
    }
    if (v9 == 0xD000000000000023 && v11 == 0x80000001007BD980)
    {
      swift_bridgeObjectRelease();
LABEL_14:
      swift_unknownObjectWeakAssign();
      sub_1006414B8();
      goto LABEL_21;
    }
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_14;
    }
  }
  id v14 = a1;
  unint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315138;
    id v18 = [v14 sd_connectionBundleID];
    if (v18)
    {
      uint64_t v19 = v18;
      unint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v22 = v21;
    }
    else
    {
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v20 = 0xD000000000000015;
      unint64_t v22 = 0x80000001007B7770;
    }
    sub_100254634(v20, v22, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "connectionEstablished connection bundle ID invalid: %s", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
LABEL_21:
  sub_100622BA0();
}

void sub_1006454DC(void *a1)
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10000B47C(v3, (uint64_t)qword_10097C7F0);
  id v4 = a1;
  os_log_type_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    unint64_t v21 = (void *)swift_slowAlloc();
    *(_DWORD *)id v7 = 138412290;
    id v8 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v21 = v4;

    _os_log_impl((void *)&_mh_execute_header, v5, v6, "XPC: connectionInvalidated: %@", v7, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v9 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong && (id v11 = Strong, Strong, v11 == v4))
  {
    uint64_t v20 = *(void *)(v1 + v9);
    swift_unknownObjectWeakAssign();
    if (*(unsigned char *)(v20
                  + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceXPCConnectionEstablished) == 2)
      *(unsigned char *)(v20
               + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_viewServiceXPCConnectionEstablished) = 0;
  }
  else
  {
    uint64_t v12 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v12 && (id v13 = v12, v12, v13 == v4))
    {
      swift_unknownObjectWeakAssign();
      if (qword_100969E10 != -1) {
        swift_once();
      }
      sub_1004462D8();
    }
    else
    {
      id v14 = v4;
      unint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        id v18 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 138412290;
        id v19 = v14;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *id v18 = v14;

        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Unknown connection invalidated: %@", v17, 0xCu);
        sub_10000A844(&qword_10096B850);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }
  }
  sub_100622BA0();
}

void sub_1006458D8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v44 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v43 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchTimeInterval();
  uint64_t v42 = *(void (**)(void, void))(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v41 = (uint64_t *)((char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for DispatchTime();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v46 = v12;
  uint64_t v47 = v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v40 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v45 = (char *)&v37 - v16;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v18 = sub_10000B47C(v17, (uint64_t)qword_10097C7F0);
  id v19 = a1;
  uint64_t v39 = v18;
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  unint64_t v22 = &selRef_shouldNotify;
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v23 = (_DWORD *)swift_slowAlloc();
    uint64_t v38 = v10;
    uint64_t v24 = v23;
    *uint64_t v23 = 134218240;
    aBlock[0] = [v19 state];
    unint64_t v22 = &selRef_shouldNotify;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *((_WORD *)v24 + 6) = 1024;
    LODWORD(aBlock[0]) = [v19 isScanning];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v20, v21, "centralManagerDidUpdateState: %ld. scanning: %{BOOL}d", (uint8_t *)v24, 0x12u);
    uint64_t v10 = v38;
    swift_slowDealloc();
  }
  else
  {
  }
  if ([v19 v22[153]] == (id)5
    && (uint64_t v25 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState),
        *(unsigned char *)(v25 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_showedPairPrompt) == 1)
    && *(unsigned char *)(v25 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_pairConsented) == 1)
  {
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Waiting for 2ms before calling run() to avoid race condition...", v28, 2u);
      swift_slowDealloc();
    }

    uint64_t v39 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q);
    uint64_t v29 = v40;
    static DispatchTime.now()();
    uint64_t v31 = v41;
    uint64_t v30 = v42;
    *uint64_t v41 = 2;
    (*((void (**)(void *, void, uint64_t))v30 + 13))(v31, enum case for DispatchTimeInterval.milliseconds(_:), v10);
    + infix(_:_:)();
    (*((void (**)(void *, uint64_t))v30 + 1))(v31, v10);
    uint64_t v32 = *(void (**)(void, void))(v47 + 8);
    v47 += 8;
    uint64_t v42 = v32;
    v32(v29, v46);
    uint64_t v33 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_100655158;
    aBlock[5] = v33;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100296520;
    uint64_t aBlock[3] = &unk_1008E3010;
    uint64_t v34 = _Block_copy(aBlock);
    swift_retain();
    uint64_t v35 = v43;
    static DispatchQoS.unspecified.getter();
    uint64_t v48 = _swiftEmptyArrayStorage;
    sub_100655CC8((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000A844((uint64_t *)&unk_10096C490);
    sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v36 = v45;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v34);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v35, v8);
    v42(v36, v46);
    swift_release();
    swift_release();
  }
  else
  {
    sub_100622BA0();
  }
}

void sub_100645FA4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100622BA0();
  }
}

void sub_10064639C(void *a1, void *a2)
{
  uint64_t v169 = a2;
  unint64_t v160 = a1;
  uint64_t v170 = sub_10000A844(&qword_10096C4F0);
  __chkstk_darwin(v170);
  uint64_t v4 = &v143[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = (void *)type metadata accessor for UUID();
  uint64_t v6 = (void *)*(v5 - 1);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v165 = &v143[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __chkstk_darwin(v7);
  char v159 = &v143[-v10];
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v168 = &v143[-v12];
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v167 = &v143[-v14];
  __chkstk_darwin(v13);
  uint64_t v16 = &v143[-v15];
  uint64_t v145 = sub_10000A844(&qword_100974EA0);
  uint64_t v148 = *(void *)(v145 - 8);
  uint64_t v17 = __chkstk_darwin(v145);
  int v146 = &v143[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v149 = &v143[-v20];
  uint64_t v21 = __chkstk_darwin(v19);
  unint64_t v162 = &v143[-v22];
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v164 = &v143[-v24];
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v154 = &v143[-v26];
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = &v143[-v28];
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v32 = &v143[-v31];
  __chkstk_darwin(v30);
  uint64_t v34 = &v143[-v33];
  uint64_t v158 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v163 = v2;
  uint64_t v35 = *(void **)(*(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  uint64_t v36 = &selRef_forceAWDLDeviceRefresh_;
  if (v35)
  {
    id v37 = [v35 identifier];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v36 = &selRef_forceAWDLDeviceRefresh_;
    uint64_t v38 = (void (*)(uint64_t, uint64_t, uint64_t, void *))v6[7];
    unint64_t v39 = (unint64_t)(v6 + 7) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v38((uint64_t)v34, 0, 1, v5);
  }
  else
  {
    uint64_t v38 = (void (*)(uint64_t, uint64_t, uint64_t, void *))v6[7];
    unint64_t v39 = (unint64_t)(v6 + 7) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v38((uint64_t)&v143[-v33], 1, 1, v5);
  }
  id v40 = [v169 v36[378]];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v41 = (void (*)(uint64_t, char *, void *))v6[2];
  uint64_t v151 = v6 + 2;
  id v150 = v41;
  v41((uint64_t)v32, v16, v5);
  uint64_t v153 = v38;
  unint64_t v152 = v39;
  v38((uint64_t)v32, 0, 1, v5);
  uint64_t v42 = (uint64_t)&v4[*(int *)(v170 + 48)];
  id v43 = &qword_100974EA0;
  sub_10024A330((uint64_t)v32, (uint64_t)v4, &qword_100974EA0);
  uint64_t v157 = v34;
  sub_10024A330((uint64_t)v34, v42, &qword_100974EA0);
  uint64_t v170 = (uint64_t)v6;
  uint64_t v45 = v6 + 6;
  uint64_t v44 = (unsigned int (*)(uint64_t, uint64_t, void *))v6[6];
  unsigned int v46 = v44((uint64_t)v4, 1, v5);
  long long v166 = v44;
  if (v46 == 1)
  {
    sub_10000A7E8((uint64_t)v32, &qword_100974EA0);
    if (v44(v42, 1, v5) == 1)
    {
      int v47 = -1;
    }
    else
    {
      id v43 = &qword_10096C4F0;
      int v47 = 0;
    }
  }
  else
  {
    sub_10024A330((uint64_t)v4, (uint64_t)v29, &qword_100974EA0);
    if (v44(v42, 1, v5) == 1)
    {
      sub_10000A7E8((uint64_t)v32, &qword_100974EA0);
      (*(void (**)(unsigned char *, void *))(v170 + 8))(v29, v5);
      int v47 = 0;
      id v43 = &qword_10096C4F0;
    }
    else
    {
      uint64_t v48 = v170;
      uint64_t v49 = v167;
      (*(void (**)(unsigned char *, uint64_t, void *))(v170 + 32))(v167, v42, v5);
      sub_100655CC8((unint64_t *)&unk_10096D460, (void (*)(uint64_t))&type metadata accessor for UUID);
      int v50 = dispatch thunk of static Equatable.== infix(_:_:)();
      id v51 = *(void (**)(unsigned char *, void *))(v48 + 8);
      uint64_t v52 = v49;
      int v47 = v50;
      v51(v52, v5);
      id v43 = &qword_100974EA0;
      sub_10000A7E8((uint64_t)v32, &qword_100974EA0);
      v51(v29, v5);
    }
  }
  id v53 = v169;
  sub_10000A7E8((uint64_t)v4, v43);
  self;
  uint64_t v54 = swift_dynamicCastObjCClass();
  uint64_t v55 = v163;
  if (v54)
  {
    uint64_t v56 = (void *)v54;
    if (sub_10064EDA8())
    {
      NSString v57 = String._bridgeToObjectiveC()();
      unsigned int v58 = [v56 hasTag:v57];
    }
    else
    {
      unsigned int v58 = 1;
    }
    LODWORD(v156) = v58 ^ 1;
  }
  else
  {
    LODWORD(v156) = 0;
  }
  uint64_t v161 = v16;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v59 = type metadata accessor for Logger();
  uint64_t v60 = sub_10000B47C(v59, (uint64_t)qword_10097C7F0);
  unint64_t v61 = (unint64_t)v53;
  uint64_t v155 = v60;
  uint64_t v62 = Logger.logObject.getter();
  os_log_type_t v63 = static os_log_type_t.default.getter();
  BOOL v64 = os_log_type_enabled(v62, v63);
  uint64_t v169 = v5;
  uint64_t v167 = v45;
  unint64_t v147 = v61;
  if (v64)
  {
    uint64_t v65 = swift_slowAlloc();
    uint64_t v45 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v65 = 138412802;
    char v173 = (void *)v61;
    id v66 = (id)v61;
    uint64_t v5 = v169;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v45 = v61;

    *(_WORD *)(v65 + 1sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 1024;
    LODWORD(v173) = v47 & 1;
    unint64_t v61 = (unint64_t)&v173 + 4;
    uint64_t v55 = v163;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v65 + 18) = 1024;
    LODWORD(v173) = v156;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v62, v63, "peerDidCompletePairing: %@, isStoredPeripheral: %{BOOL}d, isTagged: %{BOOL}d", (uint8_t *)v65, 0x18u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v62 = v61;
  }
  uint64_t v67 = v170;

  uint64_t v68 = *(void *)(v55 + v158) + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
  uint64_t v69 = v161;
  if (*(unsigned char *)(v68 + 8)) {
    goto LABEL_90;
  }
  uint64_t v70 = *(void *)v68;
  if ((v70 | 2) == 3)
  {
    if (!v156) {
      goto LABEL_90;
    }
  }
  else
  {
    BOOL v71 = v70 == 4;
    char v72 = (char)v156;
    if (!v71) {
      char v72 = 0;
    }
    if ((v72 & 1) == 0) {
      goto LABEL_90;
    }
  }
  sub_10062AC20();
  unint64_t v74 = v73;
  if (v73 >> 62) {
    uint64_t v75 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v75 = *(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  int v144 = v47;
  if (v75)
  {
    char v173 = _swiftEmptyArrayStorage;
    sub_1002558AC(0, v75 & ~(v75 >> 63), 0);
    if (v75 < 0)
    {
      __break(1u);
      goto LABEL_85;
    }
    uint64_t v76 = 0;
    uint64_t v77 = v173;
    do
    {
      if ((v74 & 0xC000000000000001) != 0) {
        id v78 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v78 = *(id *)(v74 + 8 * v76 + 32);
      }
      uint64_t v79 = v78;
      uint64_t v80 = v168;
      id v81 = [v78 identifier];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      char v173 = v77;
      unint64_t v83 = v77[2];
      unint64_t v82 = v77[3];
      if (v83 >= v82 >> 1)
      {
        sub_1002558AC(v82 > 1, v83 + 1, 1);
        uint64_t v77 = v173;
      }
      ++v76;
      v77[2] = v83 + 1;
      uint64_t v67 = v170;
      (*(void (**)(unint64_t, unsigned char *, void *))(v170 + 32))((unint64_t)v77+ ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(void *)(v170 + 72) * v83, v80, v169);
    }
    while (v75 != v76);
    swift_bridgeObjectRelease();
    uint64_t v55 = v163;
    uint64_t v5 = v169;
    uint64_t v69 = v161;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v77 = _swiftEmptyArrayStorage;
  }
  if (v77[2] < 2uLL)
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = v160;
    if ((v144 & 1) == 0) {
      goto LABEL_90;
    }
    goto LABEL_87;
  }
  sub_10000A844(&qword_10097D3F8);
  uint64_t v84 = *(void *)(v148 + 72);
  unint64_t v85 = (*(unsigned __int8 *)(v148 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80);
  uint64_t v87 = swift_allocObject();
  *(_OWORD *)(v87 + 16) = xmmword_1007709D0;
  uint64_t v88 = v87 + v85;
  sub_10024A330((uint64_t)v157, v87 + v85, &qword_100974EA0);
  uint64_t v89 = v55 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastB332WeWantedToPair;
  swift_beginAccess();
  sub_10024A330(v89, v87 + v85 + v84, &qword_100974EA0);
  uint64_t v86 = 2 * v84;
  if (v77[2])
  {
    v150(v88 + v86, (char *)v77 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80)), v5);
    uint64_t v90 = 0;
  }
  else
  {
    uint64_t v90 = 1;
  }
  v153(v88 + v86, v90, 1, v5);
  swift_bridgeObjectRetain_n();
  os_log_type_t v91 = Logger.logObject.getter();
  uint64_t v92 = v87;
  os_log_type_t v93 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v91, v93))
  {
    uint64_t v94 = (uint8_t *)swift_slowAlloc();
    unint64_t v168 = (unsigned char *)swift_slowAlloc();
    v172[0] = (uint64_t)v168;
    *(_DWORD *)uint64_t v94 = 136315138;
    unint64_t v156 = v94 + 4;
    unint64_t v95 = v94;
    swift_bridgeObjectRetain();
    uint64_t v96 = Array.description.getter();
    unint64_t v98 = v97;
    swift_bridgeObjectRelease();
    uint64_t v99 = v96;
    uint64_t v5 = v169;
    uint64_t v171 = sub_100254634(v99, v98, v172);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    uint64_t v67 = v170;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v91, v93, "peerDidCompletePairing - b332sToKeep: %s", v95, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v100 = (uint64_t)v162;
  uint64_t v101 = *(void *)(v92 + 16);
  if (v101)
  {
    unint64_t v102 = (void (**)(unsigned char *, uint64_t, id))(v67 + 32);
    unint64_t v168 = (unsigned char *)v92;
    swift_bridgeObjectRetain();
    uint64_t v103 = _swiftEmptyArrayStorage;
    do
    {
      os_log_type_t v104 = v164;
      sub_10024A330(v88, (uint64_t)v164, &qword_100974EA0);
      sub_10024D388((uint64_t)v104, v100, &qword_100974EA0);
      if (v166(v100, 1, v5) == 1)
      {
        sub_10000A7E8(v100, &qword_100974EA0);
      }
      else
      {
        uint64_t v105 = v100;
        uint64_t v106 = (void (*)(unsigned char *, unsigned char *, void *))*v102;
        char v107 = v159;
        (*v102)(v159, v105, v5);
        v106(v165, v107, v5);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v103 = (void *)sub_1002545EC(0, v103[2] + 1, 1, (unint64_t)v103);
        }
        unint64_t v109 = v103[2];
        unint64_t v108 = v103[3];
        if (v109 >= v108 >> 1) {
          uint64_t v103 = (void *)sub_1002545EC(v108 > 1, v109 + 1, 1, (unint64_t)v103);
        }
        v103[2] = v109 + 1;
        unint64_t v110 = (unint64_t)v103
             + ((*(unsigned __int8 *)(v170 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v170 + 80))
             + *(void *)(v170 + 72) * v109;
        uint64_t v5 = v169;
        v106((unsigned char *)v110, v165, v169);
        uint64_t v100 = (uint64_t)v162;
      }
      v88 += v84;
      --v101;
    }
    while (v101);
    swift_bridgeObjectRelease_n();
    uint64_t v67 = v170;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v103 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v111 = sub_10064FF4C((uint64_t)v103, (uint64_t)v77);
  swift_bridgeObjectRelease();
  uint64_t v112 = v154;
  if (*(void *)(v111 + 16))
  {
    v150((uint64_t)v154, (char *)(v111 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))), v5);
    uint64_t v113 = 0;
  }
  else
  {
    uint64_t v113 = 1;
  }
  v153((uint64_t)v112, v113, 1, v5);
  swift_bridgeObjectRelease();
  unsigned int v114 = v149;
  sub_10024A330((uint64_t)v112, (uint64_t)v149, &qword_100974EA0);
  uint64_t v115 = Logger.logObject.getter();
  os_log_type_t v116 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v115, v116))
  {
    unint64_t v168 = 0;
    uint64_t v117 = (uint8_t *)swift_slowAlloc();
    v172[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v117 = 136315138;
    unint64_t v118 = v146;
    sub_10024A330((uint64_t)v114, (uint64_t)v146, &qword_100974EA0);
    uint64_t v119 = (uint64_t)v114;
    if (v166((uint64_t)v118, 1, v5) == 1)
    {
      sub_10000A7E8((uint64_t)v118, &qword_100974EA0);
      unint64_t v120 = 0xEC0000003E676E69;
      uint64_t v121 = 0x7065656B206F6E3CLL;
    }
    else
    {
      uint64_t v124 = v118;
      uint64_t v121 = UUID.description.getter();
      unint64_t v120 = v125;
      (*(void (**)(unsigned char *, void *))(v170 + 8))(v124, v5);
    }
    uint64_t v171 = sub_100254634(v121, v120, v172);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A7E8(v119, &qword_100974EA0);
    _os_log_impl((void *)&_mh_execute_header, v115, v116, "peerDidCompletePairing - keeping: %s", v117, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v5 = v169;
    uint64_t v67 = v170;
    uint64_t v112 = v154;
    uint64_t v123 = &off_10076D000;
  }
  else
  {
    sub_10000A7E8((uint64_t)v114, &qword_100974EA0);

    uint64_t v123 = &off_10076D000;
  }
  __chkstk_darwin(v122);
  *(void *)&v143[-16] = v112;
  sub_10061C92C((uint64_t (*)(char *))sub_100655138, (uint64_t)&v143[-32], (uint64_t)v77);
  swift_bridgeObjectRetain_n();
  os_log_t v126 = Logger.logObject.getter();
  os_log_type_t v127 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v126, v127))
  {
    uint64_t v128 = (uint8_t *)swift_slowAlloc();
    v172[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v128 = *((void *)v123 + 310);
    swift_bridgeObjectRetain();
    uint64_t v129 = Array.description.getter();
    unint64_t v131 = v130;
    swift_bridgeObjectRelease();
    uint64_t v132 = v129;
    uint64_t v5 = v169;
    uint64_t v171 = sub_100254634(v132, v131, v172);
    uint64_t v67 = v170;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v126, v127, "peerDidCompletePairing - otherPairedOnes: %s", v128, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v45 = v160;
  LOBYTE(v47) = v144;
  id v133 = *(id *)(v163 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v135 = [v133 retrievePeripheralsWithIdentifiers:isa];

  sub_10000B740(0, &qword_10097D2D8);
  unint64_t v61 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v61 >> 62))
  {
    uint64_t v136 = *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v136) {
      goto LABEL_86;
    }
    goto LABEL_77;
  }
LABEL_85:
  swift_bridgeObjectRetain();
  uint64_t v136 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v136) {
    goto LABEL_86;
  }
LABEL_77:
  if (v136 >= 1)
  {
    for (uint64_t i = 0; i != v136; ++i)
    {
      if ((v61 & 0xC000000000000001) != 0) {
        id v138 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v138 = *(id *)(v61 + 8 * i + 32);
      }
      os_log_t v139 = v138;
      [v45 unpairPeer:v138];
    }
LABEL_86:
    swift_bridgeObjectRelease();
    sub_10000A7E8((uint64_t)v154, &qword_100974EA0);
    uint64_t v55 = v163;
    uint64_t v69 = v161;
    if ((v47 & 1) == 0)
    {
LABEL_90:
      (*(void (**)(unsigned char *, void *))(v67 + 8))(v69, v5);
      sub_10000A7E8((uint64_t)v157, &qword_100974EA0);
      return;
    }
LABEL_87:
    id v140 = Logger.logObject.getter();
    os_log_type_t v141 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v140, v141))
    {
      id v142 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v142 = 0;
      _os_log_impl((void *)&_mh_execute_header, v140, v141, "Unset OOBP enabled flag in peerDidCompletePairing", v142, 2u);
      swift_slowDealloc();
    }

    [v45 setOOBPairingEnabled:0 forPeer:v147];
    *(unsigned char *)(*(void *)(v55 + v158)
             + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didPairingSucceed) = 1;
    swift_retain();
    sub_10061D5B8();
    swift_release();
    sub_100622BA0();
    goto LABEL_90;
  }
  __break(1u);
}

uint64_t sub_100647820(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v25 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000A844(&qword_10096C4F0);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000A844(&qword_100974EA0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v24 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v24 - v15, a1, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v16, 0, 1, v4);
  uint64_t v17 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_10024A330((uint64_t)v16, (uint64_t)v10, &qword_100974EA0);
  sub_10024A330(a2, v17, &qword_100974EA0);
  uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v18((uint64_t)v10, 1, v4) != 1)
  {
    sub_10024A330((uint64_t)v10, (uint64_t)v14, &qword_100974EA0);
    if (v18(v17, 1, v4) != 1)
    {
      uint64_t v20 = v25;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v25, v17, v4);
      sub_100655CC8((unint64_t *)&unk_10096D460, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = *(void (**)(char *, uint64_t))(v5 + 8);
      v22(v20, v4);
      sub_10000A7E8((uint64_t)v16, &qword_100974EA0);
      v22(v14, v4);
      sub_10000A7E8((uint64_t)v10, &qword_100974EA0);
      char v19 = v21 ^ 1;
      return v19 & 1;
    }
    sub_10000A7E8((uint64_t)v16, &qword_100974EA0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    goto LABEL_6;
  }
  sub_10000A7E8((uint64_t)v16, &qword_100974EA0);
  if (v18(v17, 1, v4) != 1)
  {
LABEL_6:
    sub_10000A7E8((uint64_t)v10, &qword_10096C4F0);
    char v19 = 1;
    return v19 & 1;
  }
  sub_10000A7E8((uint64_t)v10, &qword_100974EA0);
  char v19 = 0;
  return v19 & 1;
}

void sub_100647C38(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = a1;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  int v47 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v44 - v9;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = sub_10000B47C(v11, (uint64_t)qword_10097C7F0);
  id v13 = a2;
  uint64_t v46 = v12;
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v45 = (void (*)(uint64_t, uint64_t))v5;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v44 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 138412290;
    id v51 = v13;
    id v18 = v13;
    uint64_t v48 = v6;
    id v19 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v44 = v13;

    uint64_t v6 = v48;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "peerDidUnpair: %@", v17, 0xCu);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v5 = (uint64_t)v45;
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v20 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v21 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
  swift_retain();
  uint64_t v22 = &selRef_forceAWDLDeviceRefresh_;
  id v23 = [v13 identifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v24 = (uint64_t *)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needingUnpair);
  swift_beginAccess();
  uint64_t v25 = *v24;
  swift_bridgeObjectRetain();
  swift_release();
  if (*(void *)(v25 + 16) && (unint64_t v26 = sub_100583A00((uint64_t)v10), (v27 & 1) != 0))
  {
    id v28 = *(id *)(*(void *)(v25 + 56) + 8 * v26);
    swift_bridgeObjectRelease();
    uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    uint64_t v29 = v6 + 8;
    uint64_t v45 = v30;
    v30((uint64_t)v10, v5);

    uint64_t v31 = v13;
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v46 = v3;
      uint64_t v34 = swift_slowAlloc();
      uint64_t v48 = v29;
      uint64_t v35 = (uint8_t *)v34;
      uint64_t v44 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 138412290;
      int v50 = v31;
      uint64_t v36 = v20;
      id v37 = v31;
      uint64_t v22 = &selRef_forceAWDLDeviceRefresh_;
      uint64_t v3 = v46;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v44 = v31;

      uint64_t v20 = v36;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "peerDidUnpair - removing from needingUnpair: %@", v35, 0xCu);
      sub_10000A844(&qword_10096B850);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v32 = v31;
    }

    swift_retain();
    id v38 = [v31 v22[378]];
    uint64_t v39 = (uint64_t)v47;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    swift_beginAccess();
    id v40 = (void *)sub_1002AA3D4(v39);
    v45(v39, v5);
    swift_endAccess();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  }
  sub_10062AC20();
  if (v41 >> 62) {
    uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v42)
  {
    uint64_t v43 = v3 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel;
    *(void *)uint64_t v43 = 0;
    *(unsigned char *)(v43 + 8) = 1;
    sub_10061EDD0();
    *(void *)(*(void *)(v3 + v20)
              + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_lastSentBatteryPercentage) = 0;
  }
  sub_100622BA0();
}

void sub_100648240(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v42 - v9;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10000B47C(v11, (uint64_t)qword_10097C7F0);
  id v12 = a1;
  id v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  BOOL v15 = os_log_type_enabled(v13, v14);
  int v47 = v10;
  if (v15)
  {
    uint64_t v43 = v8;
    uint64_t v44 = v5;
    uint64_t v45 = v4;
    uint64_t v46 = a2;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = (void *)swift_slowAlloc();
    uint64_t v42 = (void *)swift_slowAlloc();
    uint64_t v48 = (uint64_t)v12;
    uint64_t v49 = v42;
    *(_DWORD *)uint64_t v16 = 138412546;
    id v18 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v17 = v12;

    *(_WORD *)(v16 + 1sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
    id v19 = [v18 services];
    if (v19)
    {
      uint64_t v20 = v19;
      sub_10000B740(0, &qword_10097D3F0);
      static Array._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v21 = Array.description.getter();
      unint64_t v23 = v22;
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v23 = 0x80000001007C56C0;
      unint64_t v21 = 0xD000000000000018;
    }
    uint64_t v48 = sub_100254634(v21, v23, (uint64_t *)&v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "peripheral: %@, didDiscoverServices: %s", (uint8_t *)v16, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v4 = v45;
    a2 = v46;
    uint64_t v8 = v43;
    uint64_t v5 = v44;
  }
  else
  {
  }
  uint64_t v24 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v25 = *(void **)(*(void *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  if (v25)
  {
    id v26 = v25;
    id v27 = [v26 identifier];
    id v28 = v47;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    id v29 = [v12 identifier];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v29) = static UUID.== infix(_:_:)();
    uint64_t v30 = *(void (**)(char *, uint64_t))(v5 + 8);
    v30(v8, v4);
    v30(v28, v4);
    if ((v29 & 1) == 0
      || (id v31 = [v12 services]) == 0)
    {
LABEL_27:

      return;
    }
    uint64_t v32 = v31;
    sub_10000B740(0, &qword_10097D3F0);
    unint64_t v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v33 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v34) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v34 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v34)
      {
LABEL_14:
        uint64_t v46 = a2;
        uint64_t v49 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        if (v34 < 0)
        {
          __break(1u);
          return;
        }
        uint64_t v35 = 0;
        do
        {
          if ((v33 & 0xC000000000000001) != 0) {
            id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v36 = *(id *)(v33 + 8 * v35 + 32);
          }
          id v37 = v36;
          ++v35;
          id v38 = [v36 UUID];

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        while (v34 != v35);
        uint64_t v39 = v49;
        swift_bridgeObjectRelease();
        a2 = v46;
        goto LABEL_23;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v39 = _swiftEmptyArrayStorage;
LABEL_23:
    if (qword_10096A0C0 != -1) {
      swift_once();
    }
    id v40 = (id)qword_1009949E8;
    char v41 = sub_100361A4C((uint64_t)v40, (unint64_t)v39);
    swift_bridgeObjectRelease();

    if (v41)
    {
      *(unsigned char *)(*(void *)(a2 + v24)
               + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_hidServiceDiscovered) = 1;
      sub_100622BA0();
    }
    goto LABEL_27;
  }
}

uint64_t sub_100648890(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sbHasStarted;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sbHasStarted))
  {
    char v5 = 1;
    char v6 = 1;
  }
  else
  {
    char v6 = sub_10061E9EC();
    char v5 = *(unsigned char *)(v1 + v4);
  }
  *(unsigned char *)(v1 + v4) = v6 & 1;
  sub_10061E87C(v5);
  int IsSmartCoverClosed = BKSHIDServicesIsSmartCoverClosed();
  char v8 = *(unsigned char *)(v1 + v4);
  unsigned __int8 v9 = [self isBuddyCompleted];
  if (!IsSmartCoverClosed && (a1 & 1) != 0) {
    SBSUndimScreen();
  }
  uint64_t v10 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  if (IsSmartCoverClosed) {
    char v11 = 0;
  }
  else {
    char v11 = *(unsigned char *)(*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
  }
                   + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) & v9 & v8;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_10000B47C(v12, (uint64_t)qword_10097C7F0);
  id v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 67109888;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 8) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 14) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 2sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "sendsUIUpdates = %{BOOL}d, coverIsOpen: %{BOOL}d, sbStarted: %{BOOL}d, buddyComplete: %{BOOL}d", (uint8_t *)v15, 0x1Au);
    swift_slowDealloc();
  }

  uint64_t v16 = *(void *)(v2 + v10);
  char v17 = *(unsigned char *)(v16 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates);
  *(unsigned char *)(v16 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) = v11;
  swift_retain();
  sub_10061CF0C(v17, &OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates, "sendsUIUpdates = %{BOOL}d");
  return swift_release();
}

void sub_100648B3C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, char *a8)
{
  os_log_type_t v176 = a8;
  unint64_t v182 = a7;
  uint64_t v183 = a1;
  uint64_t v13 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v13 - 8);
  uint64_t v174 = (char *)v160 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  long long v166 = (char *)v160 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v160 - v19;
  uint64_t v21 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v21 - 8);
  uint64_t v170 = (char *)v160 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat();
  uint64_t v172 = *(char **)(v178 - 8);
  __chkstk_darwin(v178);
  uint64_t v171 = (char *)v160 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  uint64_t v25 = sub_10000B47C(v24, (uint64_t)qword_10097C7F0);
  swift_bridgeObjectRetain();
  sub_10025ADCC(a3, a4);
  swift_bridgeObjectRetain();
  unint64_t v26 = v182;
  sub_10025ADCC(a6, v182);
  swift_bridgeObjectRetain();
  sub_10025ADCC(a3, a4);
  swift_bridgeObjectRetain();
  uint64_t v177 = a6;
  sub_10025ADCC(a6, v26);
  uint64_t v179 = v25;
  id v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  int v29 = v28;
  BOOL v30 = os_log_type_enabled(v27, v28);
  uint64_t v181 = a5;
  unint64_t v173 = a4;
  uint64_t v175 = a3;
  unint64_t v180 = a2;
  uint64_t v169 = v16;
  uint64_t v168 = v15;
  uint64_t v167 = v20;
  if (v30)
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v165 = (void *)swift_slowAlloc();
    id v184 = v165;
    *(_DWORD *)uint64_t v31 = 136315906;
    swift_bridgeObjectRetain();
    unint64_t v188 = sub_100254634(v183, a2, (uint64_t *)&v184);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 1sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
    int v164 = v29;
    unint64_t v188 = 0;
    unint64_t v189 = 0xE000000000000000;
    *(void *)&long long v190 = a3;
    *((void *)&v190 + sub_100621BE0("ssharing.b332SetHasSeenScribbleEducation", 1) = a4;
    unsigned int v162 = enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:);
    uint64_t v32 = v172;
    unint64_t v33 = (void (*)(void))*((void *)v172 + 13);
    v160[2] = v172 + 104;
    uint64_t v161 = (void (*)(char *, void, uint64_t))v33;
    uint64_t v34 = v171;
    uint64_t v35 = v178;
    v33(v171);
    v160[1] = sub_1003CEFBC();
    os_log_t v163 = v27;
    DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)();
    v160[0] = *((void *)v32 + 1);
    ((void (*)(char *, uint64_t))v160[0])(v34, v35);
    unint64_t v188 = sub_100254634(v188, v189, (uint64_t *)&v184);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100250CC4(a3, a4);
    sub_100250CC4(a3, a4);
    *(_WORD *)(v31 + 2sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v172 = (char *)&type metadata for Any + 8;
    uint64_t v36 = Dictionary.description.getter();
    unint64_t v38 = v37;
    swift_bridgeObjectRelease();
    uint64_t v39 = v36;
    unint64_t v40 = v180;
    unint64_t v188 = sub_100254634(v39, v38, (uint64_t *)&v184);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 3sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
    unint64_t v188 = 0;
    unint64_t v189 = 0xE000000000000000;
    uint64_t v41 = v177;
    unint64_t v42 = v182;
    *(void *)&long long v190 = v177;
    *((void *)&v190 + sub_100621BE0("ssharing.b332SetHasSeenScribbleEducation", 1) = v182;
    uint64_t v43 = v178;
    v161(v34, v162, v178);
    DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)();
    ((void (*)(char *, uint64_t))v160[0])(v34, v43);
    unint64_t v188 = sub_100254634(v188, v189, (uint64_t *)&v184);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100250CC4(v41, v42);
    sub_100250CC4(v41, v42);
    os_log_t v44 = v163;
    _os_log_impl((void *)&_mh_execute_header, v163, (os_log_type_t)v164, "!!! Accessory attached: %s, blePairingUUID: %s, accInfoDict: %s, supportedPairTypes: %s", (uint8_t *)v31, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v45 = v183;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_100250CC4(a3, a4);
    sub_100250CC4(a3, a4);
    swift_bridgeObjectRelease_n();
    uint64_t v46 = v177;
    unint64_t v47 = v182;
    sub_100250CC4(v177, v182);
    sub_100250CC4(v46, v47);

    uint64_t v45 = v183;
    unint64_t v40 = a2;
  }
  uint64_t v48 = self;
  id v49 = [v48 standardUserDefaults];
  NSString v50 = String._bridgeToObjectiveC()();
  id v51 = [v49 stringForKey:v50];

  if (v51)
  {
    uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v54 = v53;

    if (v52 == v45 && v54 == v40)
    {
      swift_bridgeObjectRelease();
LABEL_11:
      uint64_t v56 = Logger.logObject.getter();
      os_log_type_t v57 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v56, v57))
      {
        unsigned int v58 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unsigned int v58 = 0;
        _os_log_impl((void *)&_mh_execute_header, v56, v57, "Got same accessoryUID for this attach. Ignoring.", v58, 2u);
        swift_slowDealloc();
      }

      return;
    }
    char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v55) {
      goto LABEL_11;
    }
  }
  id v59 = [v48 standardUserDefaults];
  NSString v60 = String._bridgeToObjectiveC()();
  NSString v61 = String._bridgeToObjectiveC()();
  [v59 setObject:v60 forKey:v61];

  uint64_t v62 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  os_log_type_t v63 = v176;
  uint64_t v64 = v181;
  if (*(unsigned char *)(*(void *)&v176[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState]
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_didComplete) == 1)
  {
    uint64_t v65 = Logger.logObject.getter();
    os_log_type_t v66 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v67 = 0;
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "Pencil attached while previous Pencil is still attached, resetting state", v67, 2u);
      uint64_t v64 = v181;
      swift_slowDealloc();
    }

    uint64_t v68 = type metadata accessor for UUID();
    uint64_t v69 = (uint64_t)v170;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v170, 1, 1, v68);
    sub_100628DD4(v69, 0);
    sub_10000A7E8(v69, &qword_100974EA0);
  }
  sub_1006414B8();
  id v184 = (id)0xD00000000000001BLL;
  unint64_t v185 = 0x80000001007C5640;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v64 + 16) && (unint64_t v70 = sub_100583878((uint64_t)&v188), (v71 & 1) != 0))
  {
    sub_10024D2D4(*(void *)(v64 + 56) + 32 * v70, (uint64_t)&v190);
  }
  else
  {
    long long v190 = 0u;
    long long v191 = 0u;
  }
  sub_10025B0A8((uint64_t)&v188);
  if (*((void *)&v191 + 1))
  {
    if (swift_dynamicCast())
    {
      uint64_t v73 = (uint64_t)v184;
      unint64_t v72 = v185;
      if (v184 == (id)0x6E776F6E6B6E55 && v185 == 0xE700000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        goto LABEL_34;
      }
      uint64_t v74 = HIBYTE(v72) & 0xF;
      if ((v72 & 0x2000000000000000) == 0) {
        uint64_t v74 = v73 & 0xFFFFFFFFFFFFLL;
      }
      if (!v74)
      {
LABEL_34:
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v75 = (uint64_t *)(*(void *)&v63[v62]
                        + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_babyHash);
        uint64_t *v75 = v73;
        v75[1] = v72;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        uint64_t v76 = Logger.logObject.getter();
        os_log_type_t v77 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v76, v77))
        {
          id v78 = (uint8_t *)swift_slowAlloc();
          unint64_t v182 = swift_slowAlloc();
          unint64_t v188 = v182;
          *(_DWORD *)id v78 = 136315138;
          uint64_t v178 = (uint64_t)(v78 + 4);
          swift_bridgeObjectRetain();
          *(void *)&long long v190 = sub_100254634(v73, v72, (uint64_t *)&v188);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v76, v77, "Received hash! setting on sessionState: %s", v78, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        os_log_type_t v63 = v176;
      }
      uint64_t v64 = v181;
    }
  }
  else
  {
    sub_10000A7E8((uint64_t)&v190, (uint64_t *)&unk_10096AC20);
  }
  id v184 = (id)0xD00000000000001CLL;
  unint64_t v185 = 0x80000001007C5660;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v64 + 16) && (unint64_t v79 = sub_100583878((uint64_t)&v188), (v80 & 1) != 0))
  {
    sub_10024D2D4(*(void *)(v64 + 56) + 32 * v79, (uint64_t)&v190);
  }
  else
  {
    long long v190 = 0u;
    long long v191 = 0u;
  }
  sub_10025B0A8((uint64_t)&v188);
  if (*((void *)&v191 + 1))
  {
    sub_10000B740(0, (unint64_t *)&qword_1009745A0);
    if (swift_dynamicCast())
    {
      id v81 = v184;
      uint64_t v82 = (uint64_t)[v184 integerValue];

      if (v82 == 1)
      {
LABEL_47:
        uint64_t v86 = *(void *)&v63[v62];
        uint64_t v87 = v86 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
        *(void *)uint64_t v87 = 4;
        *(unsigned char *)(v87 + 8) = 0;
        *(_OWORD *)(v86 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilBtTag) = xmmword_10077F3A0;
        swift_bridgeObjectRelease();
        uint64_t v88 = *(void *)&v63[v62] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilCode;
        uint64_t v89 = 1106;
        goto LABEL_73;
      }
      if (v82 >= 1)
      {
        unint64_t v83 = Logger.logObject.getter();
        os_log_type_t v84 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v83, v84))
        {
          unint64_t v85 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v85 = 0;
          _os_log_impl((void *)&_mh_execute_header, v83, v84, "Warning: Pencil PID is not yet supported! Falling back to treat as B532", v85, 2u);
          uint64_t v64 = v181;
          swift_slowDealloc();
        }

        goto LABEL_47;
      }
    }
  }
  else
  {
    sub_10000A7E8((uint64_t)&v190, (uint64_t *)&unk_10096AC20);
  }
  id v184 = (id)0xD000000000000017;
  unint64_t v185 = 0x80000001007C55B0;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v64 + 16) && (unint64_t v90 = sub_100583878((uint64_t)&v188), (v91 & 1) != 0))
  {
    sub_10024D2D4(*(void *)(v64 + 56) + 32 * v90, (uint64_t)&v190);
  }
  else
  {
    long long v190 = 0u;
    long long v191 = 0u;
  }
  sub_10025B0A8((uint64_t)&v188);
  if (*((void *)&v191 + 1))
  {
    if (swift_dynamicCast())
    {
      if (v184 == (id)842544194 && v185 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_72:
        uint64_t v102 = *(void *)&v63[v62];
        uint64_t v103 = v102 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
        *(void *)uint64_t v103 = 3;
        *(unsigned char *)(v103 + 8) = 0;
        *(_OWORD *)(v102 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilBtTag) = xmmword_10077F3B0;
        swift_bridgeObjectRelease();
        uint64_t v88 = *(void *)&v63[v62] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilCode;
        uint64_t v89 = 482;
        goto LABEL_73;
      }
      char v101 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v101) {
        goto LABEL_72;
      }
    }
  }
  else
  {
    sub_10000A7E8((uint64_t)&v190, (uint64_t *)&unk_10096AC20);
  }
  id v184 = (id)0xD00000000000001BLL;
  unint64_t v185 = 0x80000001007C5680;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v64 + 16) && (unint64_t v92 = sub_100583878((uint64_t)&v188), (v93 & 1) != 0))
  {
    sub_10024D2D4(*(void *)(v64 + 56) + 32 * v92, (uint64_t)&v190);
  }
  else
  {
    long long v190 = 0u;
    long long v191 = 0u;
  }
  sub_10025B0A8((uint64_t)&v188);
  if (*((void *)&v191 + 1))
  {
    sub_10000B740(0, (unint64_t *)&qword_1009745A0);
    if (swift_dynamicCast())
    {
      id v94 = v184;
      id v95 = [v184 integerValue];

      if (v95 == (id)1057) {
        goto LABEL_72;
      }
    }
  }
  else
  {
    sub_10000A7E8((uint64_t)&v190, (uint64_t *)&unk_10096AC20);
  }
  sub_100654FB8();
  if (v96)
  {
    IOObjectRelease(v96);
    uint64_t v97 = *(void *)&v63[v62];
    uint64_t v98 = v97 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
    *(void *)uint64_t v98 = 1;
    *(unsigned char *)(v98 + 8) = 0;
    *(_OWORD *)(v97 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilBtTag) = xmmword_10077F3C0;
    swift_bridgeObjectRelease();
    uint64_t v88 = *(void *)&v63[v62] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilCode;
    uint64_t v89 = 332;
  }
  else
  {
    uint64_t v99 = *(void *)&v63[v62];
    uint64_t v100 = v99 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
    *(void *)uint64_t v100 = 2;
    *(unsigned char *)(v100 + 8) = 0;
    *(_OWORD *)(v99 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilBtTag) = xmmword_10077F3D0;
    swift_bridgeObjectRelease();
    uint64_t v88 = *(void *)&v63[v62] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_devicePencilCode;
    uint64_t v89 = 546;
  }
LABEL_73:
  *(void *)uint64_t v88 = v89;
  uint64_t v104 = (uint64_t)v174;
  *(unsigned char *)(v88 + 8) = 0;
  uint64_t v105 = *(void *)&v63[v62] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
  if ((*(unsigned char *)(v105 + 8) & 1) != 0
    || *(void *)v105 != 3
    || ([*(id *)&v63[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_systemMonitor] screenOn] & 1) != 0)
  {
    goto LABEL_99;
  }
  uint64_t v106 = (uint64_t)&v63[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastAccessoryDetachTimestamp];
  swift_beginAccess();
  sub_10024A330(v106, v104, (uint64_t *)&unk_100975040);
  uint64_t v107 = v169;
  uint64_t v108 = v168;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v169 + 48))(v104, 1, v168) != 1)
  {
    unint64_t v109 = v167;
    (*(void (**)(char *, uint64_t, uint64_t))(v107 + 32))(v167, v104, v108);
    unint64_t v110 = v166;
    static Date.now.getter();
    Date.timeIntervalSince(_:)();
    double v112 = v111;
    uint64_t v115 = *(void (**)(char *, uint64_t))(v107 + 8);
    uint64_t v113 = v107 + 8;
    unsigned int v114 = v115;
    v115(v110, v108);
    id v116 = [v48 standardUserDefaults];
    double v117 = sub_10056F728();

    if (v112 < v117)
    {
      uint64_t v169 = v113;
      uint64_t v118 = *(void *)&v63[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastAttachedAccessorySerialNum + 8];
      if (v118)
      {
        uint64_t v119 = v64;
        uint64_t v120 = *(void *)&v63[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastAttachedAccessorySerialNum];
        unint64_t v186 = 0xD00000000000001BLL;
        unint64_t v187 = 0x80000001007C56A0;
        swift_bridgeObjectRetain();
        AnyHashable.init<A>(_:)();
        if (*(void *)(v119 + 16) && (unint64_t v121 = sub_100583878((uint64_t)&v188), (v122 & 1) != 0))
        {
          sub_10024D2D4(*(void *)(v119 + 56) + 32 * v121, (uint64_t)&v190);
        }
        else
        {
          long long v190 = 0u;
          long long v191 = 0u;
        }
        sub_10025B0A8((uint64_t)&v188);
        if (*((void *)&v191 + 1))
        {
          if (swift_dynamicCast())
          {
            if (v120 == v186 && v118 == v187)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_95:
              uint64_t v124 = Logger.logObject.getter();
              os_log_type_t v125 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v124, v125))
              {
                os_log_t v126 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)os_log_t v126 = 0;
                _os_log_impl((void *)&_mh_execute_header, v124, v125, "Detected case of USB re-enumeration causing reattach while screen is off. Not showing UI for pair", v126, 2u);
                swift_slowDealloc();
              }

              uint64_t v127 = *(void *)&v63[v62];
              char v128 = *(unsigned char *)(v127 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates);
              *(unsigned char *)(v127 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) = 0;
              swift_retain();
              sub_10061CF0C(v128, &OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates, "sendsUIUpdates = %{BOOL}d");
              swift_release();
              v114(v109, v108);
              uint64_t v129 = 0;
              goto LABEL_100;
            }
            char v123 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v123) {
              goto LABEL_95;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_10000A7E8((uint64_t)&v190, (uint64_t *)&unk_10096AC20);
        }
      }
    }
    v114(v109, v108);
    goto LABEL_99;
  }
  sub_10000A7E8(v104, (uint64_t *)&unk_100975040);
LABEL_99:
  uint64_t v130 = *(void *)&v63[v62];
  char v131 = *(unsigned char *)(v130 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates);
  uint64_t v129 = 1;
  *(unsigned char *)(v130 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates) = 1;
  swift_retain();
  sub_10061CF0C(v131, &OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_sendsUIUpdates, "sendsUIUpdates = %{BOOL}d");
  swift_release();
LABEL_100:
  uint64_t v132 = *(void *)&v63[v62] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
  uint64_t v133 = v181;
  uint64_t v134 = v175;
  if ((*(unsigned char *)(v132 + 8) & 1) == 0 && *(void *)v132 == 3)
  {
    *(void *)&long long v190 = 0xD00000000000001BLL;
    *((void *)&v190 + sub_100621BE0("ssharing.b332SetHasSeenScribbleEducation", 1) = 0x80000001007C56A0;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v133 + 16) && (unint64_t v135 = sub_100583878((uint64_t)&v188), (v136 & 1) != 0))
    {
      sub_10024D2D4(*(void *)(v133 + 56) + 32 * v135, (uint64_t)&v190);
    }
    else
    {
      long long v190 = 0u;
      long long v191 = 0u;
    }
    sub_10025B0A8((uint64_t)&v188);
    if (*((void *)&v191 + 1))
    {
      int v137 = swift_dynamicCast();
      unint64_t v138 = v186;
      unint64_t v139 = v187;
      if (!v137)
      {
        unint64_t v138 = 0;
        unint64_t v139 = 0;
      }
    }
    else
    {
      sub_10000A7E8((uint64_t)&v190, (uint64_t *)&unk_10096AC20);
      unint64_t v138 = 0;
      unint64_t v139 = 0;
    }
    id v140 = (unint64_t *)&v63[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastAttachedAccessorySerialNum];
    *id v140 = v138;
    v140[1] = v139;
    swift_bridgeObjectRelease();
  }
  [v63 resetUIUpdatesFlagWithUndimScreen:v129];
  *(void *)(*(void *)&v63[v62]
            + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_lastSentBatteryPercentage) = 0;
  id v141 = [*(id *)&v63[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central] sharedPairingAgent];
  if (v141)
  {
    id v142 = v141;
    [v141 setDelegate:v63];

    uint64_t v143 = (void *)(*(void *)&v63[v62]
                    + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID);
    unint64_t v144 = v180;
    *uint64_t v143 = v183;
    v143[1] = v144;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v145 = (uint64_t *)(*(void *)&v63[v62]
                     + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__blePairingUUID);
    uint64_t v146 = *v145;
    unint64_t v147 = v145[1];
    unint64_t v148 = v173;
    *uint64_t v145 = v134;
    v145[1] = v148;
    sub_10025ADCC(v134, v148);
    sub_100250CB0(v146, v147);
    *(void *)(*(void *)&v63[v62] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_accInfoDict) = v133;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v149 = *(void *)&v63[v62] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
    if ((*(unsigned char *)(v149 + 8) & 1) == 0)
    {
      unint64_t v150 = *(void *)v149;
      if (v150 <= 4 && ((1 << v150) & 0x1A) != 0)
      {
        uint64_t v151 = v63;
        unint64_t v152 = Logger.logObject.getter();
        uint64_t v153 = v63;
        os_log_type_t v154 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v152, v154))
        {
          uint64_t v155 = (uint8_t *)swift_slowAlloc();
          *(void *)&long long v190 = swift_slowAlloc();
          *(_DWORD *)uint64_t v155 = 136315138;
          uint64_t v156 = *(void *)&v153[v62] + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
          if (*(unsigned char *)(v156 + 8))
          {
            unint64_t v188 = 0;
            unint64_t v189 = 0xE000000000000000;
            _StringGuts.grow(_:)(17);
            swift_bridgeObjectRelease();
            unint64_t v157 = 0xD000000000000015;
            unint64_t v158 = 0x80000001007B7770;
          }
          else
          {
            unint64_t v157 = sub_10063CF60(*(void *)v156);
            unint64_t v158 = v159;
          }
          unint64_t v188 = sub_100254634(v157, v158, (uint64_t *)&v190);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v152, v154, "Starting pairing process for Pencil of type %s", v155, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        sub_100622BA0();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10064A4F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v64 = a2;
  uint64_t v9 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v9 - 8);
  os_log_type_t v63 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat();
  uint64_t v61 = *(void *)(v14 - 8);
  uint64_t v62 = v14;
  __chkstk_darwin(v14);
  NSString v60 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v19 = *(void *)(*(void *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                  + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_accInfoDict);
  if (!v19) {
    goto LABEL_14;
  }
  uint64_t v66 = 0xD000000000000017;
  unint64_t v67 = 0x80000001007C55B0;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v19 + 16) && (unint64_t v20 = sub_100583878((uint64_t)&v68), (v21 & 1) != 0))
  {
    sub_10024D2D4(*(void *)(v19 + 56) + 32 * v20, (uint64_t)&v70);
  }
  else
  {
    long long v70 = 0u;
    long long v71 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10025B0A8((uint64_t)&v68);
  if (!*((void *)&v71 + 1))
  {
    sub_10000A7E8((uint64_t)&v70, (uint64_t *)&unk_10096AC20);
    goto LABEL_14;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_14;
  }
  if (v66 == 0x3330363141 && v67 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0) {
      goto LABEL_14;
    }
  }
  sub_10062BF40(1);
LABEL_14:
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel + 8) & 1) == 0)
  {
    uint64_t v23 = *(void *)(a1 + v65) + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType;
    if ((*(unsigned char *)(v23 + 8) & 1) == 0)
    {
      uint64_t v24 = *(void *)v23;
      if (((v24 | 2) == 3 || v24 == 4)
        && *(double *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_ioKitBatteryLevel) <= 0.2)
      {
        uint64_t v58 = v24;
        if (qword_10096A0B0 != -1) {
          swift_once();
        }
        id v59 = v13;
        uint64_t v25 = type metadata accessor for Logger();
        sub_10000B47C(v25, (uint64_t)qword_10097C7F0);
        unint64_t v26 = Logger.logObject.getter();
        os_log_type_t v27 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v26, v27))
        {
          os_log_type_t v28 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v28 = 0;
          _os_log_impl((void *)&_mh_execute_header, v26, v27, "Showing low battery pill on detach of connected Pencil", v28, 2u);
          swift_slowDealloc();
        }

        uint64_t v29 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v18, 1, 1, v29);
        uint64_t v30 = swift_allocObject();
        swift_unknownObjectWeakInit();
        type metadata accessor for MainActor();
        swift_retain();
        uint64_t v31 = static MainActor.shared.getter();
        uint64_t v32 = (void *)swift_allocObject();
        v32[2] = v31;
        v32[3] = &protocol witness table for MainActor;
        uint64_t v33 = v58;
        v32[4] = v30;
        v32[5] = v33;
        swift_release();
        sub_10028CFA8((uint64_t)v18, (uint64_t)&unk_10097D3C8, (uint64_t)v32);
        swift_release();
        uint64_t v13 = v59;
      }
    }
  }
  uint64_t v34 = a4;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v35 = type metadata accessor for Logger();
  uint64_t v36 = sub_10000B47C(v35, (uint64_t)qword_10097C7F0);
  swift_bridgeObjectRetain();
  sub_10025ADCC(a4, a5);
  swift_bridgeObjectRetain();
  sub_10025ADCC(a4, a5);
  uint64_t v58 = v36;
  unint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = swift_slowAlloc();
    unint64_t v56 = a5;
    uint64_t v40 = v39;
    uint64_t v57 = swift_slowAlloc();
    uint64_t v66 = v57;
    *(_DWORD *)uint64_t v40 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_100254634(v64, a3, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v40 + 1sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
    id v59 = v13;
    uint64_t v55 = v40 + 14;
    uint64_t v68 = 0;
    unint64_t v69 = 0xE000000000000000;
    *(void *)&long long v70 = v34;
    *((void *)&v70 + sub_100621BE0("ssharing.b332SetHasSeenScribbleEducation", 1) = a5;
    unint64_t v42 = v60;
    uint64_t v41 = v61;
    uint64_t v43 = v62;
    (*(void (**)(char *, void, uint64_t))(v61 + 104))(v60, enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:), v62);
    sub_1003CEFBC();
    DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v43);
    uint64_t v68 = sub_100254634(v68, v69, &v66);
    uint64_t v13 = v59;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    unint64_t v44 = v56;
    sub_100250CC4(v34, v56);
    sub_100250CC4(v34, v44);
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "!!! Accessory detached: %s, blePairingUUID: %s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_100250CC4(v34, a5);
    sub_100250CC4(v34, a5);
  }

  static Date.now.getter();
  uint64_t v45 = type metadata accessor for Date();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v13, 0, 1, v45);
  uint64_t v46 = a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_lastAccessoryDetachTimestamp;
  swift_beginAccess();
  sub_10026B410((uint64_t)v13, v46, (uint64_t *)&unk_100975040);
  swift_endAccess();
  unint64_t v47 = (uint64_t *)(*(void *)(a1 + v65)
                  + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState__accessoryUID);
  unint64_t v48 = v47[1];
  if (!v48 || (uint64_t v49 = *v47, *v47 == v64) && v48 == a3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t v50 = type metadata accessor for UUID();
    uint64_t v51 = (uint64_t)v63;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v63, 1, 1, v50);
    sub_100628DD4(v51, 0);
    sub_10000A7E8(v51, &qword_100974EA0);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    uint64_t v52 = Logger.logObject.getter();
    os_log_type_t v53 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      *(_DWORD *)uint64_t v54 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)&long long v70 = sub_100254634(v49, v48, &v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "Not resetting state on Pencil detach because a session is ongoing for a different accessory: %s", v54, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_10064AEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  type metadata accessor for MainActor();
  v5[7] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[8] = v7;
  v5[9] = v6;
  return _swift_task_switch(sub_10064AF60, v7, v6);
}

uint64_t sub_10064AF60()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[10] = Strong;
  if (Strong)
  {
    uint64_t v2 = *(void *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
       + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_powerSourceID;
    uint64_t v3 = *(void *)v2;
    char v4 = *(unsigned char *)(v2 + 8);
    char v5 = (void *)swift_task_alloc();
    v0[11] = v5;
    *char v5 = v0;
    v5[1] = sub_10064B090;
    uint64_t v6 = v0[6];
    return sub_100626D48(v6, v3, v4);
  }
  else
  {
    swift_release();
    char v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_10064B090()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_10064B1B0, v3, v2);
}

uint64_t sub_10064B1B0()
{
  uint64_t v1 = *(void **)(v0 + 80);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_10064B2D4()
{
  v4[1] = 0xE000000000000000;
  type metadata accessor for ACCBLEPairing_Status_t(0);
  _print_unlocked<A, B>(_:_:)();
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_10097C7F0);
  swift_bridgeObjectRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    v4[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315906;
    swift_bridgeObjectRetain();
    sub_100254634(0, 0xE000000000000000, v4);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v3 + 1sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v3 + 18) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v3 + 24) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "!!! blePairingStateUpdate. pairingState: %s\nvalidMask: %u\npairingModeOn: %{BOOL}d\nbtRadioOn: %{BOOL}d", (uint8_t *)v3, 0x1Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_10064B5D4(uint64_t a1, uint64_t a2)
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_10097C7F0);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    v58[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v8 = Array.debugDescription.getter();
    uint64_t v56 = sub_100254634(v8, v9, v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "!!! blePairingInfoUpdate. pairInfoList: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v10 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  if (*(void *)(*(void *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_oobd
                 + 8) >> 60 != 15)
  {
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "We got a pairInfo despite already having a pairData.", v13, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v14 = (uint64_t *)(*(void *)(a2 + v10) + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_oobd);
  uint64_t v15 = *v14;
  unint64_t v16 = v14[1];
  *(_OWORD *)uint64_t v14 = xmmword_100770AE0;
  sub_100250CB0(v15, v16);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v18, v19))
    {
      unint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v20 = 0;
      char v21 = "blePairingInfoUpdate - No elements. Ignoring.";
LABEL_18:
      _os_log_impl((void *)&_mh_execute_header, v18, v19, v21, v20, 2u);
      swift_slowDealloc();
    }
LABEL_19:

    return;
  }
  sub_10024D2D4(a1 + 32, (uint64_t)v58);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v18, v19))
    {
      unint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v20 = 0;
      char v21 = "blePairingInfoUpdate - Cannot convert to data. Ignoring.";
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  switch(v57 >> 62)
  {
    case 1uLL:
      LODWORD(v17) = HIDWORD(v56) - v56;
      if (__OFSUB__(HIDWORD(v56), v56))
      {
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
        JUMPOUT(0x10064BDCCLL);
      }
      uint64_t v17 = (int)v17;
LABEL_23:
      if (v17 == 6)
      {
        if (*(void *)(*(void *)(a2 + v10)
                       + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_b332BTAddr
                       + 8) >> 60 != 15)
        {
          uint64_t v25 = Logger.logObject.getter();
          os_log_type_t v26 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v25, v26))
          {
            os_log_type_t v27 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)os_log_type_t v27 = 0;
            _os_log_impl((void *)&_mh_execute_header, v25, v26, "We got a pairInfo despite already having one.", v27, 2u);
            swift_slowDealloc();
          }
        }
        os_log_type_t v28 = (uint64_t *)(*(void *)(a2 + v10)
                        + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_b332BTAddr);
        uint64_t v29 = *v28;
        unint64_t v30 = v28[1];
        *os_log_type_t v28 = v56;
        v28[1] = v57;
        sub_10025ADCC(v56, v57);
        sub_10025ADCC(v56, v57);
        swift_retain();
        sub_100250CB0(v29, v30);
        sub_10061D084();
        sub_100250CC4(v56, v57);
        swift_release();
        sub_10061EC34();
        if (v31)
        {
          id v32 = *(id *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central);
          NSString v33 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v34 = [v32 retrievePeripheralWithAddress:v33];

          if (v34)
          {
            id v35 = v34;
            uint64_t v36 = Logger.logObject.getter();
            os_log_type_t v37 = static os_log_type_t.default.getter();
            os_log_t log = v36;
            if (os_log_type_enabled(v36, v37))
            {
              os_log_type_t v38 = (uint8_t *)swift_slowAlloc();
              v58[0] = swift_slowAlloc();
              *(_DWORD *)os_log_type_t v38 = 136315138;
              id v39 = [v35 debugDescription];
              os_log_type_t type = v37;
              uint64_t v40 = a2;
              uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v43 = v42;

              uint64_t v44 = v41;
              a2 = v40;
              sub_100254634(v44, v43, v58);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, log, type, "b332 from info update: %s", v38, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
            }
            uint64_t v52 = *(void *)(a2 + v10);
            os_log_type_t v53 = *(void **)(v52 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
            *(void *)(v52 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral) = v34;
          }
        }
        sub_100622BA0();
      }
      else
      {
LABEL_32:
        sub_10025ADCC(v56, v57);
        uint64_t v45 = Logger.logObject.getter();
        os_log_type_t v46 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v45, v46))
        {
          unint64_t v47 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)unint64_t v47 = 134217984;
          unint64_t v48 = v47;
          uint64_t v49 = 0;
          switch(v57 >> 62)
          {
            case 0uLL:
              uint64_t v49 = BYTE6(v57);
              goto LABEL_39;
            case 1uLL:
              LODWORD(v49) = HIDWORD(v56) - v56;
              if (__OFSUB__(HIDWORD(v56), v56)) {
                goto LABEL_46;
              }
              uint64_t v49 = (int)v49;
LABEL_39:
              v58[0] = v49;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              sub_100250CC4(v56, v57);
              _os_log_impl((void *)&_mh_execute_header, v45, v46, "blePairingInfoUpdate - BT addr has wrong length (%ld). Ignoring.", v48, 0xCu);
              swift_slowDealloc();

              break;
            case 2uLL:
              uint64_t v51 = *(void *)(v56 + 16);
              uint64_t v50 = *(void *)(v56 + 24);
              BOOL v24 = __OFSUB__(v50, v51);
              uint64_t v49 = v50 - v51;
              if (!v24) {
                goto LABEL_39;
              }
              goto LABEL_47;
            case 3uLL:
              goto LABEL_39;
            default:
              JUMPOUT(0);
          }
        }
        else
        {

          sub_100250CC4(v56, v57);
        }
      }
      sub_100250CC4(v56, v57);
      break;
    case 2uLL:
      uint64_t v23 = *(void *)(v56 + 16);
      uint64_t v22 = *(void *)(v56 + 24);
      BOOL v24 = __OFSUB__(v22, v23);
      uint64_t v17 = v22 - v23;
      if (!v24) {
        goto LABEL_23;
      }
      goto LABEL_45;
    case 3uLL:
      goto LABEL_32;
    default:
      uint64_t v17 = BYTE6(v57);
      goto LABEL_23;
  }
}

void sub_10064BE9C(int a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10000A844(&qword_100974EA0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = 0;
  unint64_t v46 = 0xE000000000000000;
  LODWORD(v44) = a1;
  type metadata accessor for ACCBLEPairing_Types_t(0);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v11 = v45;
  unint64_t v12 = v46;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = sub_10000B47C(v13, (uint64_t)qword_10097C7F0);
  unint64_t v15 = a3 >> 62;
  sub_10025ADCC(a2, a3);
  sub_10025ADCC(a2, a3);
  swift_bridgeObjectRetain();
  uint64_t v43 = v14;
  unint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v41 = v10;
    uint64_t v42 = a4;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_100254634(v11, v12, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 1sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2048;
    switch((int)v15)
    {
      case 1:
        sub_100250CC4(a2, a3);
        LODWORD(v19) = HIDWORD(a2) - a2;
        if (__OFSUB__(HIDWORD(a2), a2)) {
          goto LABEL_37;
        }
        uint64_t v19 = (int)v19;
        break;
      case 2:
        uint64_t v20 = *(void *)(a2 + 16);
        uint64_t v21 = *(void *)(a2 + 24);
        sub_100250CC4(a2, a3);
        uint64_t v19 = v21 - v20;
        if (!__OFSUB__(v21, v20)) {
          break;
        }
        __break(1u);
LABEL_12:
        sub_100250CC4(a2, a3);
        uint64_t v19 = 0;
        break;
      case 3:
        goto LABEL_12;
      default:
        sub_100250CC4(a2, a3);
        uint64_t v19 = BYTE6(a3);
        break;
    }
    uint64_t v44 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100250CC4(a2, a3);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "!!! blePairingDataUpdate. pairType: %s, pairData: %ld bytes", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v10 = v41;
    a4 = v42;
    unint64_t v15 = a3 >> 62;
  }
  else
  {
    sub_100250CC4(a2, a3);
    swift_bridgeObjectRelease_n();
    sub_100250CC4(a2, a3);
  }
  switch((int)v15)
  {
    case 0:
      uint64_t v22 = BYTE6(a3);
      goto LABEL_20;
    case 1:
      LODWORD(v2sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = HIDWORD(a2) - a2;
      if (__OFSUB__(HIDWORD(a2), a2))
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x10064C470);
      }
      uint64_t v22 = (int)v22;
LABEL_20:
      if (v22 == 32 || v22 == 16)
      {
        uint64_t v26 = *(void *)(a4 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState);
        if (*(unsigned char *)(v26
                      + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_needToResetFromBTAddrRotation) == 1)
        {
          os_log_type_t v27 = Logger.logObject.getter();
          os_log_type_t v28 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v27, v28))
          {
            uint64_t v29 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v29 = 0;
            _os_log_impl((void *)&_mh_execute_header, v27, v28, "blePairingDataUpdate - needToResetFromBTAddrRotation", v29, 2u);
            swift_slowDealloc();
          }

          uint64_t v30 = type metadata accessor for UUID();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v10, 1, 1, v30);
          sub_100628DD4((uint64_t)v10, 1);
          sub_10000A7E8((uint64_t)v10, &qword_100974EA0);
        }
        else
        {
          uint64_t v36 = (uint64_t *)(v26 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_oobd);
          uint64_t v37 = *v36;
          unint64_t v38 = v36[1];
          *uint64_t v36 = a2;
          v36[1] = a3;
          sub_10025ADCC(a2, a3);
          sub_100250CB0(v37, v38);
          sub_100622BA0();
        }
      }
      else
      {
LABEL_27:
        sub_10025ADCC(a2, a3);
        uint64_t v31 = Logger.logObject.getter();
        os_log_type_t v32 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v31, v32))
        {
          NSString v33 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)NSString v33 = 134217984;
          id v34 = v33;
          uint64_t v35 = 0;
          switch((int)v15)
          {
            case 0:
              uint64_t v35 = BYTE6(a3);
              goto LABEL_34;
            case 1:
              LODWORD(v35) = HIDWORD(a2) - a2;
              if (__OFSUB__(HIDWORD(a2), a2)) {
                goto LABEL_38;
              }
              uint64_t v35 = (int)v35;
LABEL_34:
              uint64_t v45 = v35;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              sub_100250CC4(a2, a3);
              _os_log_impl((void *)&_mh_execute_header, v31, v32, "Wrong OOBD length of %ld. Ignoring OOBD.", v34, 0xCu);
              swift_slowDealloc();
              break;
            case 2:
              uint64_t v40 = *(void *)(a2 + 16);
              uint64_t v39 = *(void *)(a2 + 24);
              BOOL v25 = __OFSUB__(v39, v40);
              uint64_t v35 = v39 - v40;
              if (!v25) {
                goto LABEL_34;
              }
              goto LABEL_39;
            case 3:
              goto LABEL_34;
            default:
              goto LABEL_40;
          }
        }
        else
        {
          sub_100250CC4(a2, a3);
        }
      }
      return;
    case 2:
      uint64_t v24 = *(void *)(a2 + 16);
      uint64_t v23 = *(void *)(a2 + 24);
      BOOL v25 = __OFSUB__(v23, v24);
      uint64_t v22 = v23 - v24;
      if (!v25) {
        goto LABEL_20;
      }
      goto LABEL_36;
    case 3:
      goto LABEL_27;
    default:
LABEL_40:
      JUMPOUT(0);
  }
}

void sub_10064C588()
{
  uint64_t v1 = v0;
  uint64_t v17 = 3002;
  swift_retain();
  v2._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v4 = sub_10059634C(&v17, v3);
  swift_endAccess();
  if (v4)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000B47C(v5, (uint64_t)qword_10097C7F0);
    os_log_type_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "startScanning", v8, 2u);
      swift_slowDealloc();
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
  sub_10000A844((uint64_t *)&unk_10097D2B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007706B0;
  *(void *)(inited + 3sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 4sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v10;
  *(void *)(inited + 7sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = &type metadata for Bool;
  *(unsigned char *)(inited + 48) = 1;
  *(void *)(inited + 8sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 88) = v11;
  *(void *)(inited + 12sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = &type metadata for Bool;
  *(unsigned char *)(inited + 96) = 1;
  *(void *)(inited + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 136) = v12;
  *(void *)(inited + 168) = &type metadata for Bool;
  *(unsigned char *)(inited + 144) = 1;
  *(void *)(inited + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 184) = v13;
  *(void *)(inited + 216) = &type metadata for Int;
  *(void *)(inited + 19sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 40;
  *(void *)(inited + 224) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 23sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = v14;
  *(void *)(inited + 264) = &type metadata for Int;
  *(void *)(inited + 24sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = 30;
  sub_100245A7C(inited);
  id v15 = *(id *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v15 scanForPeripheralsWithServices:0 options:isa];
}

id sub_10064C8C4()
{
  uint64_t v1 = v0;
  uint64_t v10 = 3017;
  swift_retain();
  v2._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v4 = sub_10059634C(&v10, v3);
  swift_endAccess();
  if (v4)
  {
    if (qword_10096A0B0 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_10000B47C(v5, (uint64_t)qword_10097C7F0);
    os_log_type_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "stopScanning", v8, 2u);
      swift_slowDealloc();
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
  return [*(id *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_central) stopScan:0xD000000000000057, 0x80000001007C52B0];
}

void sub_10064CAD8(void *a1)
{
  Swift::String v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  os_log_type_t v7 = (char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState];
  if ((*(unsigned char *)(v9 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType + 8) & 1) == 0)
  {
    unint64_t v10 = *(void *)(v9 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_deviceType);
    BOOL v11 = v10 > 4;
    uint64_t v12 = (1 << v10) & 0x1A;
    BOOL v13 = v11 || v12 == 0;
    if (!v13 && !*(void *)(v9 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_btBatteryScanner))
    {
      if (qword_10096A0B0 != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      sub_10000B47C(v14, (uint64_t)qword_10097C7F0);
      id v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "startBatteryScanner", v17, 2u);
        swift_slowDealloc();
      }

      id v18 = [objc_allocWithZone((Class)SFDeviceDiscovery) init];
      uint64_t v19 = *(void *)&v2[v8];
      uint64_t v20 = *(void **)(v19 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_btBatteryScanner);
      *(void *)(v19 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_btBatteryScanner) = v18;
      id v21 = v18;

      [v21 setChangeFlags:1];
      [v21 setDiscoveryFlags:2];
      [v21 setDispatchQueue:*(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_q]];
      sub_10000A844((uint64_t *)&unk_10097D260);
      unint64_t v22 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_10076E7A0;
      id v24 = [a1 identifier];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v23 + v22, v7, v4);
      sub_1002CE5D0(v23);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      sub_100655CC8(&qword_10096C4C8, (void (*)(uint64_t))&type metadata accessor for UUID);
      Class isa = Set._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v21 setDeviceFilter:isa];

      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v2;
      unint64_t v38 = sub_1006542C8;
      uint64_t v39 = v26;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v35 = 1107296256;
      uint64_t v36 = sub_10032A9D8;
      uint64_t v37 = &unk_1008E27F8;
      os_log_type_t v27 = _Block_copy(&aBlock);
      os_log_type_t v28 = v2;
      swift_release();
      [v21 setDeviceFoundHandler:v27];
      _Block_release(v27);
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = v28;
      unint64_t v38 = sub_1006542E8;
      uint64_t v39 = v29;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v35 = 1107296256;
      uint64_t v36 = (uint64_t (*)())sub_10061C830;
      uint64_t v37 = &unk_1008E2848;
      uint64_t v30 = _Block_copy(&aBlock);
      uint64_t v31 = v28;
      swift_release();
      [v21 setDeviceChangedHandler:v30];
      _Block_release(v30);
      unint64_t v38 = sub_10064E730;
      uint64_t v39 = 0;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v35 = 1107296256;
      uint64_t v36 = (uint64_t (*)())sub_100296520;
      uint64_t v37 = &unk_1008E2870;
      os_log_type_t v32 = _Block_copy(&aBlock);
      [v21 setInvalidationHandler:v32];
      _Block_release(v32);
      unint64_t v38 = sub_10064E818;
      uint64_t v39 = 0;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v35 = 1107296256;
      uint64_t v36 = (uint64_t (*)())sub_1006B210C;
      uint64_t v37 = &unk_1008E2898;
      NSString v33 = _Block_copy(&aBlock);
      [v21 activateWithCompletion:v33];
      _Block_release(v33);
    }
  }
}

void sub_10064D064(void *a1, uint64_t a2)
{
  uint64_t v95 = a2;
  uint64_t v90 = sub_10000A844(&qword_10096C4F0);
  __chkstk_darwin(v90);
  unint64_t v92 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v94 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v89 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000A844(&qword_100974EA0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v88 = (uint64_t)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  BOOL v11 = (char *)&v82 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  char v93 = (char *)&v82 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  os_log_type_t v16 = (char *)&v82 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v82 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  unint64_t v22 = (char *)&v82 - v21;
  __chkstk_darwin(v20);
  id v24 = (char *)&v82 - v23;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  char v91 = v11;
  uint64_t v25 = type metadata accessor for Logger();
  sub_10000B47C(v25, (uint64_t)qword_10097C7F0);
  id v26 = a1;
  os_log_type_t v27 = Logger.logObject.getter();
  int v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, (os_log_type_t)v28))
  {
    int v86 = v28;
    os_log_t v87 = v27;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v85 = swift_slowAlloc();
    uint64_t v97 = v85;
    *(_DWORD *)uint64_t v29 = 136315650;
    id v30 = [v26 identifier];
    if (v30)
    {
      uint64_t v31 = v30;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v32 = v94;
      NSString v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v94 + 56);
      id v34 = v22;
      uint64_t v35 = 0;
    }
    else
    {
      uint64_t v32 = v94;
      NSString v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v94 + 56);
      id v34 = v22;
      uint64_t v35 = 1;
    }
    unint64_t v83 = v33;
    v33(v34, v35, 1, v4);
    sub_10024D388((uint64_t)v22, (uint64_t)v24, &qword_100974EA0);
    os_log_type_t v84 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
    if (v84(v24, 1, v4))
    {
      sub_10000A7E8((uint64_t)v24, &qword_100974EA0);
      unint64_t v38 = 0xD000000000000015;
      unint64_t v39 = 0x80000001007C5250;
    }
    else
    {
      uint64_t v40 = v89;
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v89, v24, v4);
      sub_10000A7E8((uint64_t)v24, &qword_100974EA0);
      unint64_t v38 = UUID.description.getter();
      unint64_t v39 = v41;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v40, v4);
    }
    uint64_t v96 = sub_100254634(v38, v39, &v97);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 1sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
    id v42 = [v26 bleDevice];
    if (v42)
    {
      uint64_t v43 = v42;
      id v44 = [v42 identifier];

      if (v44)
      {
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v45 = 0;
      }
      else
      {
        uint64_t v45 = 1;
      }
      uint64_t v48 = v94;
      v83(v16, v45, 1, v4);
      sub_10024D388((uint64_t)v16, (uint64_t)v19, &qword_100974EA0);
      unsigned int v49 = v84(v19, 1, v4);
      uint64_t v37 = (uint64_t)v92;
      if (v49)
      {
        sub_10000A7E8((uint64_t)v19, &qword_100974EA0);
        unint64_t v46 = 0x80000001007C5270;
        unint64_t v47 = 0xD00000000000001FLL;
      }
      else
      {
        uint64_t v50 = v89;
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v89, v19, v4);
        sub_10000A7E8((uint64_t)v19, &qword_100974EA0);
        uint64_t v51 = v48;
        unint64_t v47 = UUID.description.getter();
        unint64_t v46 = v52;
        (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v4);
      }
    }
    else
    {
      unint64_t v46 = 0x80000001007C5270;
      unint64_t v47 = 0xD00000000000001FLL;
      uint64_t v37 = (uint64_t)v92;
    }
    uint64_t v96 = sub_100254634(v47, v46, &v97);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 2sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
    id v53 = [v26 batteryInfo];
    uint64_t v36 = (uint64_t)v93;
    if (v53)
    {
      uint64_t v54 = v53;
      sub_10000B740(0, &qword_10097D270);
      static Array._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v55 = Array.description.getter();
      unint64_t v57 = v56;
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v55 = 0xD000000000000016;
      unint64_t v57 = 0x80000001007C5290;
    }
    uint64_t v96 = sub_100254634(v55, v57, &v97);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    os_log_t v58 = v87;
    _os_log_impl((void *)&_mh_execute_header, v87, (os_log_type_t)v86, "btBatteryScanner - found: %s, bleID: %s, battery: %s", (uint8_t *)v29, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v37 = (uint64_t)v92;
    uint64_t v36 = (uint64_t)v93;
  }
  uint64_t v59 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  NSString v60 = *(void **)(*(void *)(v95 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  if (v60)
  {
    char v93 = v60;
    id v61 = [v26 identifier];
    if (v61)
    {
      uint64_t v62 = v61;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v63 = v94;
      uint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56);
      v64(v36, 0, 1, v4);
    }
    else
    {
      uint64_t v63 = v94;
      uint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56);
      v64(v36, 1, 1, v4);
    }
    id v65 = [v93 identifier];
    uint64_t v66 = (uint64_t)v91;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v64(v66, 0, 1, v4);
    uint64_t v67 = v37 + *(int *)(v90 + 48);
    sub_10024A330(v36, v37, &qword_100974EA0);
    sub_10024A330(v66, v67, &qword_100974EA0);
    uint64_t v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
    if (v68(v37, 1, v4) == 1)
    {
      sub_10000A7E8(v66, &qword_100974EA0);
      sub_10000A7E8(v36, &qword_100974EA0);
      if (v68(v67, 1, v4) == 1)
      {
        sub_10000A7E8(v37, &qword_100974EA0);
        goto LABEL_34;
      }
    }
    else
    {
      uint64_t v69 = v88;
      sub_10024A330(v37, v88, &qword_100974EA0);
      if (v68(v67, 1, v4) != 1)
      {
        uint64_t v70 = v94;
        uint64_t v71 = v36;
        unint64_t v72 = v89;
        (*(void (**)(char *, uint64_t, uint64_t))(v94 + 32))(v89, v67, v4);
        sub_100655CC8((unint64_t *)&unk_10096D460, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v73 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v74 = *(void (**)(char *, uint64_t))(v70 + 8);
        v74(v72, v4);
        sub_10000A7E8((uint64_t)v91, &qword_100974EA0);
        sub_10000A7E8(v71, &qword_100974EA0);
        v74((char *)v69, v4);
        sub_10000A7E8(v37, &qword_100974EA0);
        if (v73)
        {
LABEL_34:
          uint64_t v75 = *(void *)(v95 + v59);
          swift_retain();
          id v76 = [v26 batteryInfo];
          if (!v76)
          {
LABEL_42:
            unint64_t v79 = *(void **)(v75 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_discoveredBatteryInfo);
            *(void *)(v75 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_discoveredBatteryInfo) = v76;
            swift_release();

            uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
            if (Strong)
            {
              id v81 = Strong;
              sub_10061E12C(Strong, 1);
            }
            sub_100622BA0();
            goto LABEL_45;
          }
          sub_10000B740(0, &qword_10097D270);
          unint64_t v77 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          if (v77 >> 62)
          {
            swift_bridgeObjectRetain();
            id v76 = (id)_CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v76) {
              goto LABEL_37;
            }
          }
          else
          {
            id v76 = *(id *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v76)
            {
LABEL_37:
              if ((v77 & 0xC000000000000001) != 0)
              {
                id v78 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else
              {
                if (!*(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
                  __break(1u);
                  return;
                }
                id v78 = *(id *)(v77 + 32);
              }
              id v76 = v78;
            }
          }
          swift_bridgeObjectRelease();
          goto LABEL_42;
        }
LABEL_45:

        return;
      }
      sub_10000A7E8((uint64_t)v91, &qword_100974EA0);
      sub_10000A7E8(v36, &qword_100974EA0);
      (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v69, v4);
    }
    sub_10000A7E8(v37, &qword_10096C4F0);
    goto LABEL_45;
  }
}

void sub_10064DBF4(NSObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v98 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000A844(&qword_10096C4F0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000A844(&qword_100974EA0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  __chkstk_darwin(v13);
  uint64_t v15 = __chkstk_darwin((char *)&v85 - v14);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v85 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v85 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  os_log_type_t v27 = (char *)&v85 - v26;
  uint64_t v28 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  uint64_t v96 = a3;
  uint64_t v29 = *(void **)(*(void *)(a3 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_storePeripheral);
  if (v29)
  {
    uint64_t v90 = v22;
    uint64_t v91 = v25;
    uint64_t v88 = v24;
    uint64_t v89 = v23;
    unint64_t v92 = v7;
    id v97 = v29;
    uint64_t v94 = a1;
    id v30 = [a1 identifier];
    uint64_t v93 = v28;
    if (v30)
    {
      uint64_t v31 = v30;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v32 = v98;
      NSString v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v98 + 56);
      v33((uint64_t)v27, 0, 1, v5);
    }
    else
    {
      uint64_t v32 = v98;
      NSString v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v98 + 56);
      v33((uint64_t)v27, 1, 1, v5);
    }
    id v34 = [v97 identifier];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v95 = v33;
    v33((uint64_t)v21, 0, 1, v5);
    uint64_t v35 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_10024A330((uint64_t)v27, (uint64_t)v10, &qword_100974EA0);
    sub_10024A330((uint64_t)v21, v35, &qword_100974EA0);
    unint64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
    uint64_t v37 = v32 + 48;
    uint64_t v36 = v38;
    if (v38((uint64_t)v10, 1, v5) == 1)
    {
      sub_10000A7E8((uint64_t)v21, &qword_100974EA0);
      sub_10000A7E8((uint64_t)v27, &qword_100974EA0);
      if (v36(v35, 1, v5) == 1)
      {
        int v86 = v36;
        uint64_t v87 = v37;
        sub_10000A7E8((uint64_t)v10, &qword_100974EA0);
        goto LABEL_12;
      }
    }
    else
    {
      sub_10024A330((uint64_t)v10, (uint64_t)v18, &qword_100974EA0);
      if (v36(v35, 1, v5) != 1)
      {
        int v86 = v36;
        uint64_t v87 = v37;
        uint64_t v39 = v98;
        uint64_t v40 = v92;
        (*(void (**)(char *, uint64_t, uint64_t))(v98 + 32))(v92, v35, v5);
        sub_100655CC8((unint64_t *)&unk_10096D460, (void (*)(uint64_t))&type metadata accessor for UUID);
        LODWORD(v85) = dispatch thunk of static Equatable.== infix(_:_:)();
        unint64_t v41 = *(void (**)(char *, uint64_t))(v39 + 8);
        v41(v40, v5);
        sub_10000A7E8((uint64_t)v21, &qword_100974EA0);
        sub_10000A7E8((uint64_t)v27, &qword_100974EA0);
        v41(v18, v5);
        id v42 = v97;
        sub_10000A7E8((uint64_t)v10, &qword_100974EA0);
        if ((v85 & 1) == 0)
        {
LABEL_44:

          return;
        }
LABEL_12:
        if (qword_10096A0B0 != -1) {
          swift_once();
        }
        uint64_t v43 = type metadata accessor for Logger();
        sub_10000B47C(v43, (uint64_t)qword_10097C7F0);
        id v44 = v94;
        uint64_t v45 = Logger.logObject.getter();
        int v46 = static os_log_type_t.default.getter();
        BOOL v47 = os_log_type_enabled(v45, (os_log_type_t)v46);
        uint64_t v48 = &selRef_awdlStart;
        unsigned int v49 = v95;
        if (!v47)
        {

          uint64_t v55 = v93;
          goto LABEL_34;
        }
        uint64_t v94 = v45;
        uint64_t v50 = swift_slowAlloc();
        uint64_t v85 = swift_slowAlloc();
        uint64_t v100 = v85;
        *(_DWORD *)uint64_t v50 = 136315650;
        id v51 = [v44 identifier];
        if (v51)
        {
          unint64_t v52 = v51;
          uint64_t v53 = v90;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v54 = 0;
        }
        else
        {
          uint64_t v54 = 1;
          uint64_t v53 = v90;
        }
        LODWORD(v9sub_100621BE0("ssharing.b332SetHasNotSeenScribbleEducation", 0) = v46;
        v49(v53, v54, 1, v5);
        uint64_t v56 = v91;
        sub_10024D388(v53, v91, &qword_100974EA0);
        if (v86(v56, 1, v5))
        {
          sub_10000A7E8(v56, &qword_100974EA0);
          unint64_t v57 = 0xD000000000000015;
          unint64_t v58 = 0x80000001007C5250;
        }
        else
        {
          uint64_t v59 = v98;
          NSString v60 = v92;
          (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v92, v56, v5);
          sub_10000A7E8(v56, &qword_100974EA0);
          unint64_t v57 = UUID.description.getter();
          unint64_t v58 = v61;
          (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v5);
        }
        uint64_t v99 = sub_100254634(v57, v58, &v100);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v50 + 1sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
        id v62 = [v44 bleDevice];
        if (v62)
        {
          uint64_t v63 = v62;
          id v64 = [v62 identifier];

          if (v64)
          {
            uint64_t v65 = v88;
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v66 = 0;
          }
          else
          {
            uint64_t v66 = 1;
            uint64_t v65 = v88;
          }
          v49(v65, v66, 1, v5);
          uint64_t v67 = v65;
          uint64_t v68 = v89;
          sub_10024D388(v67, v89, &qword_100974EA0);
          if (!v86(v68, 1, v5))
          {
            uint64_t v71 = v98;
            unint64_t v72 = v92;
            (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v92, v68, v5);
            sub_10000A7E8(v68, &qword_100974EA0);
            unint64_t v70 = UUID.description.getter();
            unint64_t v69 = v73;
            (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v5);
            goto LABEL_30;
          }
          sub_10000A7E8(v68, &qword_100974EA0);
        }
        unint64_t v69 = 0x80000001007C5270;
        unint64_t v70 = 0xD00000000000001FLL;
LABEL_30:
        uint64_t v55 = v93;
        uint64_t v99 = sub_100254634(v70, v69, &v100);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v50 + 2sub_100621968("sharing.b332WhatsNewSetup5", 1, 2) = 2080;
        uint64_t v48 = &selRef_awdlStart;
        id v74 = [v44 batteryInfo];
        if (v74)
        {
          uint64_t v75 = v74;
          sub_10000B740(0, &qword_10097D270);
          static Array._unconditionallyBridgeFromObjectiveC(_:)();

          unint64_t v76 = Array.description.getter();
          unint64_t v78 = v77;
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v76 = 0xD000000000000016;
          unint64_t v78 = 0x80000001007C5290;
        }
        uint64_t v99 = sub_100254634(v76, v78, &v100);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        unint64_t v79 = v94;
        _os_log_impl((void *)&_mh_execute_header, v94, (os_log_type_t)v90, "btBatteryScanner - changed: %s, bleID: %s, battery: %s", (uint8_t *)v50, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

LABEL_34:
        uint64_t v80 = *(void *)(v96 + v55);
        swift_retain();
        id v81 = [v44 v48[36]];
        if (!v81)
        {
LABEL_42:
          os_log_type_t v84 = *(void **)(v80 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_discoveredBatteryInfo);
          *(void *)(v80 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_discoveredBatteryInfo) = v81;
          swift_release();

          sub_100622BA0();
          goto LABEL_43;
        }
        sub_10000B740(0, &qword_10097D270);
        unint64_t v82 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v82 >> 62)
        {
          swift_bridgeObjectRetain();
          id v81 = (id)_CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v81) {
            goto LABEL_37;
          }
        }
        else
        {
          id v81 = *(id *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v81)
          {
LABEL_37:
            if ((v82 & 0xC000000000000001) != 0)
            {
              id v83 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if (!*(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                return;
              }
              id v83 = *(id *)(v82 + 32);
            }
            id v81 = v83;
          }
        }
        swift_bridgeObjectRelease();
        goto LABEL_42;
      }
      sub_10000A7E8((uint64_t)v21, &qword_100974EA0);
      sub_10000A7E8((uint64_t)v27, &qword_100974EA0);
      (*(void (**)(char *, uint64_t))(v98 + 8))(v18, v5);
    }
    sub_10000A7E8((uint64_t)v10, &qword_10096C4F0);
LABEL_43:
    id v42 = v97;
    goto LABEL_44;
  }
}

void sub_10064E730()
{
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_10097C7F0);
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    Swift::String v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "btBatteryScanner Invalidated!!!", v2, 2u);
    swift_slowDealloc();
  }
}

void sub_10064E818(uint64_t a1)
{
  if (a1) {
    os_log_type_t v2 = static os_log_type_t.error.getter();
  }
  else {
    os_log_type_t v2 = static os_log_type_t.default.getter();
  }
  os_log_type_t v3 = v2;
  if (qword_10096A0B0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10000B47C(v4, (uint64_t)qword_10097C7F0);
  swift_errorRetain();
  swift_errorRetain();
  os_log_t log = Logger.logObject.getter();
  if (os_log_type_enabled(log, v3))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    if (a1)
    {
      swift_getErrorValue();
      unint64_t v6 = Error.localizedDescription.getter();
      unint64_t v8 = v7;
    }
    else
    {
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v8 = 0x80000001007B7770;
      unint64_t v6 = 0xD000000000000015;
    }
    sub_100254634(v6, v8, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v3, "Activated btBatteryScanner with error %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
}

void sub_10064EAA8()
{
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState;
  os_log_type_t v2 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDB332SetupAgent_sessionState)
                + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_btBatteryScanner);
  if (v2)
  {
    uint64_t v3 = v0;
    uint64_t v4 = qword_10096A0B0;
    id v5 = v2;
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10000B47C(v6, (uint64_t)qword_10097C7F0);
    unint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "stopBatteryScanner", v9, 2u);
      swift_slowDealloc();
    }

    [v5 invalidate];
    uint64_t v10 = *(void *)(v3 + v1);
    uint64_t v11 = *(void **)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_btBatteryScanner);
    *(void *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDB332SetupAgentSessionState_btBatteryScanner) = 0;
  }
}

unsigned char *storeEnumTagSinglePayload for SDB332SetupAgentSessionState.ConnectionState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + sub_100621BE0("ssharing.b332SetHasSeenScribbleEducation", 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10064ED18);
      case 4:
        *(_DWORD *)(result + sub_100621BE0("ssharing.b332SetHasSeenScribbleEducation", 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + sub_100621BE0("ssharing.b332SetHasSeenScribbleEducation", 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + sub_100621BE0("ssharing.b332SetHasSeenScribbleEducation", 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDB332SetupAgentSessionState.ConnectionState()
{
  return &type metadata for SDB332SetupAgentSessionState.ConnectionState;
}

unint64_t sub_10064ED54()
{
  unint64_t result = qword_10097D258;
  if (!qword_10097D258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10097D258);
  }
  return result;
}

uint64_t sub_10064EDA8()
{
  NSString v1 = String._bridgeToObjectiveC()();
  unsigned __int8 v2 = [v0 hasTag:v1];

  if (v2) {
    return 1;
  }
  NSString v3 = String._bridgeToObjectiveC()();
  unsigned __int8 v4 = [v0 hasTag:v3];

  if (v4) {
    return 1;
  }
  NSString v5 = String._bridgeToObjectiveC()();
  unsigned __int8 v6 = [v0 hasTag:v5];

  if (v6) {
    return 1;
  }
  NSString v9 = String._bridgeToObjectiveC()();
  id v7 = [v0 hasTag:v9];

  return (uint64_t)v7;
}

uint64_t sub_10064EEA8(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_10064F000((unint64_t *)((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    id v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = sub_10064F000((unint64_t *)v7, v4, v2);
    swift_slowDealloc();
  }
  return v2;
}

uint64_t sub_10064F000(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v35 = a2;
  uint64_t v36 = a1;
  uint64_t v47 = sub_10000A844((uint64_t *)&unk_10097D2E0);
  uint64_t v4 = __chkstk_darwin(v47);
  int v46 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v44 = (char *)&v34 - v6;
  uint64_t v42 = type metadata accessor for UUID();
  uint64_t result = __chkstk_darwin(v42);
  uint64_t v43 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = 0;
  unsigned int v49 = (void *)a3;
  uint64_t v11 = *(void *)(a3 + 64);
  uint64_t v37 = 0;
  uint64_t v38 = a3 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  unint64_t v41 = v8 + 2;
  uint64_t v45 = v8;
  int64_t v39 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v40 = v8 + 1;
  uint64_t v15 = v8;
  uint64_t v16 = v42;
  uint64_t v17 = v43;
  uint64_t v18 = v46;
  while (1)
  {
    if (v14)
    {
      uint64_t v50 = (v14 - 1) & v14;
      int64_t v51 = v10;
      unint64_t v19 = __clz(__rbit64(v14)) | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v29 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v29 >= v39) {
      return sub_10064FB74(v36, v35, v37, v49);
    }
    unint64_t v30 = *(void *)(v38 + 8 * v29);
    int64_t v31 = v10 + 1;
    if (!v30)
    {
      int64_t v31 = v10 + 2;
      if (v10 + 2 >= v39) {
        return sub_10064FB74(v36, v35, v37, v49);
      }
      unint64_t v30 = *(void *)(v38 + 8 * v31);
      if (!v30)
      {
        int64_t v31 = v10 + 3;
        if (v10 + 3 >= v39) {
          return sub_10064FB74(v36, v35, v37, v49);
        }
        unint64_t v30 = *(void *)(v38 + 8 * v31);
        if (!v30) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v50 = (v30 - 1) & v30;
    int64_t v51 = v31;
    unint64_t v19 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_5:
    uint64_t v20 = v49;
    uint64_t v21 = (void (*)(char *, unint64_t, uint64_t))v15[2];
    v21(v17, v49[6] + v15[9] * v19, v16);
    uint64_t v22 = v20[7];
    unint64_t v48 = v19;
    uint64_t v23 = *(void **)(v22 + 8 * v19);
    uint64_t v24 = (uint64_t)v44;
    v21(v44, (unint64_t)v17, v16);
    uint64_t v25 = *(int *)(v47 + 48);
    *(void *)(v24 + v25) = v23;
    v21(v18, v24, v16);
    *(void *)&v18[v25] = v23;
    id v26 = v23;
    id v27 = [v26 state];
    sub_10000A7E8(v24, (uint64_t *)&unk_10097D2E0);
    uint64_t v28 = (void (*)(char *, uint64_t))v15[1];
    v28(v18, v16);

    uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v17, v16);
    int64_t v10 = v51;
    unint64_t v14 = v50;
    if (v27)
    {
      *(unint64_t *)((char *)v36 + ((v48 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v48;
      if (__OFADD__(v37++, 1))
      {
        __break(1u);
        return sub_10064FB74(v36, v35, v37, v49);
      }
    }
  }
  uint64_t v32 = v10 + 4;
  if (v10 + 4 >= v39) {
    return sub_10064FB74(v36, v35, v37, v49);
  }
  unint64_t v30 = *(void *)(v38 + 8 * v32);
  if (v30)
  {
    int64_t v31 = v10 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v31 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v31 >= v39) {
      return sub_10064FB74(v36, v35, v37, v49);
    }
    unint64_t v30 = *(void *)(v38 + 8 * v31);
    ++v32;
    if (v30) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_10064F3C0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_10000A844((uint64_t *)&unk_10097D480);
  uint64_t result = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v9 = result;
  uint64_t v31 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v31) {
        return v9;
      }
      unint64_t v16 = a1[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v31) {
          return v9;
        }
        unint64_t v16 = a1[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v31) {
            return v9;
          }
          unint64_t v16 = a1[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v31) {
              return v9;
            }
            unint64_t v16 = a1[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v31) {
                  return v9;
                }
                unint64_t v16 = a1[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    sub_1003CF0DC(*(void *)(v4 + 56) + 48 * v14, (uint64_t)v33);
    sub_1002AD354(v33, v32);
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v21 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    int64_t v29 = (void *)(*(void *)(v9 + 48) + 16 * v24);
    *int64_t v29 = v20;
    v29[1] = v19;
    uint64_t result = (uint64_t)sub_1002AD354(v32, (_OWORD *)(*(void *)(v9 + 56) + 48 * v24));
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}